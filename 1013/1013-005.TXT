@CAT,P    1013-005-005.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI TEMP.1013-005-005,,,130012053241,000
)@@G@@**PF**@@@#E6@@@@@@@@@@@[@L%@@@]FE /^@@@@J@@D/@@@]F^AA=@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+@@@@@Y@[@@@@AC
)@@G@@@@@@@X@@@@@@@@@@@@@@$@@@@@@@@@@@H@@@@@@@@@@@@@@@@@@@@]@@@@@@@@@@@@@@,@@UAD
)@@G@@@@@@[]@@E@@(@@@@@@@@>@@@@@@@@@@@@@@@@@@@@@@@/@@@@@@@[M@@@@@ @@;@@@@@T@@4AE
)@@G@@@@K@@@@@I@@@@@@@@@@@L@@@@@@@[#@@@@@@@@@@@@@@@@@@@@@@@=@@@@@@@@@@@@@@@@@%AF
)@@G@@@@@@@@@@S@@@@@@@@@@@@@@@@@@@@@@@@@[T@@@@[)@@@@@@@[[@@@@@@@@@@@@@@@@@@@[ AG
)@@G@@@@V@@@@@@@@@@@@@@C@@@@@@@@@@@5@@&@@@@@@@@@@@@@@@@@@@@@@@<@@@@@@@@@@@@@[PAH
)@@G@@@@@@@@@@@@@@@@@@@@@@Q@[S@@@@@@@@@@@@@@@@[X@[G@@@@@@@@@@[I@@@@@@@@@@@@@@@AI
)@@G@@@@@@@O@@7@@@@@@@@@@@@@@@@[R@@F@@@@@@@@@@@@@@@@@J@@@@[E@@@@[<@@P@@\@@@@[OAJ
)@@G@@@@@@@@@@@@@@@@@@@@@@B@@@@@@@@3@@@@@@@@@@[B@@@@@@@@@@@-@@[@@^@@?@@@@[-@[FAK
)@@G@@@@@@@@@@@@[H@@6@[+@@@@@@@@.@@@@@R@@@@@@@@#@@@@@@@@1@@@@@*@@A@@@@@_@@@@[VAL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"@@@@@@@@@@@@@@@@[Q@@)@@@@@@@@@@@@@@D@@@@@@AM
)@@G@@@@@@[Y@@0@@G@[K@@@@@N@@@@@@@@@@@:@@@@@@@@9@@@@[^@@@@@@@@@@@@@@@@@M@@E@[<AN
)@@G@@DOCS        @@@@@@@@[@@@APL         @ @@@[B@@@]E@@@@W@P]ACBDACTION      AO
)@@G@@@@@@@@@@]@@@APL         @[@[@[@@@@@"@@@@YEP]BCBDCBLOX       @@@@@@@@]@@@AP
)@@G@@APL         @[@[@[@@@@@%@@@@ZCP]CCBDCONFIG      @@@@@@@@]@@@APL         AQ
)@@G@@@[@[@[@@@@@A@@@@Z2P]ECBDDYNSTO      @@@@[U@@]@@@APL         @[@[@[@@@@@LAR
)@@G@@@@@@Z8P]FCBDEXTASM      @@@@@@@@]@@@            @[@[@[@@@@[ @@@@)DP]HCBDAS
)@@G@@FILDEF      @@@@@@@@]@@@APL         @[@[@[@@@@@0@@@@-IP]ICBDPOPUSH      AT
)@@G@@@@@@@@@@]@@@APL         @[@[@[@@@@@H@@@@-"P]JCBDPSUDOP      @@@@@@@@]@@@AU
)@@G@@APL         @[@[@[@@@@@T@@@@+FP]LCBDSYMDEF      @@@@@@@@]@@@APL         AV
)@@G@@@[@[@[@@@@[%@@@@+=P]NCBDWSDEF       @@@@@!@@]@@@APL         @[@[@[@@@@[UAW
)@@G@@@@@@=IP]QCBDACCNTG      @@@@@@@@[@@@APL         @ @[@]]@@@D6@@@@>*P]?CBDAX
)@@G@@ADRMAP      @@@@@@@@[@@@APL         @ @[@]]@@@]Q@@@@\YP#>CBDAPSNAP      AY
)@@G@@@@@@@W@@[@@@APL         @ @[@]]@@@@P@@@@14P^ACBDASINOU      @@@@@@@@[@@@AZ
)@@G@@APL         @ @[@]]@@@#1@@@@2DP^ICBDBEATNG      @@@@@@@@[@@@APL         BA
)@@G@@@ @[@]]@@@[_@@@@5'P^$CBDBITMAP      @@@@@@@@[@@@            @ @[@]]@@@@0BB
)@@G@@@@@@79P ^CBDBUFMAN      @@@@@@@@[@@@APL         @ @[@]]@@@@"@@@@8(P ECBDBC
)@@G@@CLEAR       @@@@@@@@[@@@APL         @ @[@]]@@@@0@@@@9$P SCBDCMPOUN      BD
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@]6@@@@'RP 4CBDCODSTO      @@@@@@@@[@@@BE
)@@G@@APL         @ @[@]]@@@@=@@@@.H@@DCCDCOMPIL      @@@@@Z@@[@@@APL         BF
)@@G@@@ @[@]]@@@##@@@@.1@@PCCDCOMMO       @@@@@@@@[@@@APL         @ @[@]]@@@@_BG
)@@G@@@@@[@4@@'CCDCONTIN      @@@@@@@@[@@@APL         @ @[@]]@@@[]@@@[[3@[TCCDBH
)@@G@@COPIER      @@@@@@@@[@@@APL         @ @[@]]@@@[&@@@[]5@[>CCDDASINCO$    BI
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@@R@@@[^V@[,CCDDASINCOH$   @@@@@@@@[@@@BJ
)@@G@@APL         @ @[@]]@@@@Q@@@[^2@[1CCDDATAN$      @@@@@@@@[@@@APL         BK
)@@G@@@ @[@]]@@@[^@@@[ C@[3CCDDATANH$     @@@@[L@@[@@@APL         @ @[@]]@@@@IBL
)@@G@@@@@[AG@[6CCDDCOSH$      @@@@@@@@[@@@APL         @ @[@]]@@@@D@@@[AU@[8CCDBM
)@@G@@DEXP$       @@@@@@@@[@@@APL         @ @[@]]@@@@<@@@[A<@['CCDDGAMMA      BN
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@[M@@@[BA@[.CCDDLOG$       @@@@@@@@[@@@BO
)@@G@@APL         @ @[@]]@@@@W@@@[CS@][CCDDSINCO$     @@@@@@@@[@@@APL         BP
)@@G@@@ @[@]]@@@@%@@@[C4@]JCCDDSINH$      @@@@@@@@[@@@APL         @ @[@]]@@@@DBQ
)@@G@@@@@[DY@]LCCDDSQRT$      @@@@@2@@[@@@APL         @ @[@]]@@@@T@@@[D$@]NCCDBR
)@@G@@DTAN$       @@@@@@@@[@@@APL         @ @[@]]@@@@C@@@[E@@]QCCDDTANH$      BS
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@@G@@@[EC@]RCCDEDLEAP      @@@@@@@@[@@@BT
)@@G@@APL         @ @[@]]@@@[A@@@[EO@]&CCDERASER      @@@@@@@@[@@@APL         BU
)@@G@@@ @[@]]@@@[8@@@[FU@#ECCDERRMSG      @@@@@@@@[@@@APL         @ @[@]]@@@[#BV
)@@G@@@@@[HM@#:CCDFDINOU      @@@@@@@@[@@@APL         @ @[@]]@@@#>@@@[IP@ [CCDBW
)@@G@@FHANAL      @@@@@8@@[@@@APL         @ @[@]]@@@@'@@@[L'@ (CCDFILASG      BX
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@[F@@@[M4@ 8CCDFILRWR      @@@@@@@@[@@@BY
)@@G@@APL         @ @[@]]@@@^(@@@[N_@ADCCDFILSUP      @@@@@@@@[@@@APL         BZ
)@@G@@@ @[@]]@@@^(@@@[S*@A:CCDFNHPRT      @@@@@@@@[@@@APL         @ @[@]]@@@@(CA
)@@G@@@@@[XL@BGCCDFNHXQT      @@@@@'@@[@@@APL         @ @[@]]@@@@(@@@[X'@BOCCDCB
)@@G@@FRMTNG      @@@@@@@@[@@@APL         @ @[@]]@@@]L@@@[Y<@BYCCDFUNDEF      CC
)@@G@@@@@@[D@@[@@@APL         @ @[@]]@@@^U@@@[)4@B1CCDFUNLBL      @@@@[W@@[@@@CD
)@@G@@APL         @ @[@]]@@@@-@@@[>I@CJCCDFUNNYM      @@@@@@@@[@@@APL         CE
)@@G@@@ @[@]]@@@[<@@@[>\@C!CCDFUNTBL      @@@@@@@@[@@@APL         @ @[@]]@@@]>CF
)@@G@@@@@[$M@C9CCDIBEAMS      @@@@@@@@[@@@APL         @ @[@]]@@@AN@@@[(7@DSCCDCG
)@@G@@INTERP      @@@@@@@@[@@@APL         @ @[@]]@@@ R@@@[0E@EPCCDLDPEND      CH
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@[A@@@[5-@F^CCDLEXANL      @@@@@@@@[@@@CI
)@@G@@APL         @ @[@]]@@@]4@@@[6$@FKCCDLEXCAN      @@@@@@@@[@@@APL         CJ
)@@G@@@ @[@]]@@@[3@@@[9V@F&CCDL$IJSIM     @@@@@@@@[@@@APL         @ @[@]]@@@@TCK
)@@G@@@@@[;I@F\CCDLINEAR      @@@@@@@@[@@@APL         @ @[@]]@@@]Y@@@[;$@F9CCDCL
)@@G@@LINEKO      @@@@@@@@[@@@APL         @ @[@]]@@@[B@@@[" @GMCCDLODSAV      CM
)@@G@@@@@@[Z@@[@@@APL         @ @[@]]@@@F#@@@[_G@G'CCDMICROP      @@@@@@@@[@@@CN
)@@G@@APL         @ @[@]]@@@@"@@@]EJ@H8CCDMIXED       @@@@[A@@[@@@APL         CO
)@@G@@@ @[@]]@@@^'@@@]FH@ICCCDMIXED2      @@@@@@@@[@@@APL         @ @[@]]@@@]=CP
)@@G@@@@@]KB@I&CCDMTHLIB      @@@@[C@@[@@@APL         @ @[@]]@@@["@@@]M:@I'CCDCQ
)@@G@@NEXPB$      @@@@@@@@[@@@APL         @ @[@]]@@@@-@@@]O(@I"CCDPRNTNG      CR
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@[+@@@]PE@J^CCDRANDAC      @@@@@@@@[@@@CS
)@@G@@APL         @ @[@]]@@@#.@@@]Q?@JNCCDRESERV      @@@@@@@@[@@@APL         CT
)@@G@@@ @[@]]@@@[6@@@]U(@J:CCDSETUP       @@@@@@@@[@@@APL         @ @[@]]@@@#/CU
)@@G@@@@@]WZ@K^CCDSORTOPS     @@@@[J@@[@@@APL         @ @[@]]@@@@7@@@])V@K5CCDCV
)@@G@@STACK       @@@@@@@@[@@@APL         @ @[@]]@@@@\@@@]-M@K/CCDSTOPTR      CW
)@@G@@@@@@@@@@[@@@APL         @ @[@]]@@@@/@@@]+[@L]CCDSTORAG      @@@@@@@@[@@@CX
)@@G@@APL         @ @[@]]@@@#*@@@]+.@LGCCDSUBSCR      @@@@[N@@[@@@APL         CY
)@@G@@@ @[@]]@@@@"@@@]&>@L)CCDTEXSTO      @@@@@@@@[@@@APL         @ @[@]]@@@[2CZ
)@@G@@@@@]$<@O-CCDXQTSUP      @@@@@@@@[@@@APL         @ @[@]]@@@^[@@@](P@O4CCDDA
)@@G@@CULLIT      @@@@@@@@[@@@APL         @ @[@][@@@@]@@@]!Q@SICCDADVTESTS    DB
)@@G@@@@@@@@@@[@@@APL         @ @[@]@@@@@^@@@]!S@SKCCDASHCAN      @@@@@@@@[@@@DC
)@@G@@APL         @ @[@][@@@F]@@@]!W@SSCCDBUSTER      @@@@@@@@[@@@APL         DD
)@@G@@@ @[@]@@@@@,@@@]8Y@STCCDEXAMPLES    @@@@@@@@[@@@APL         @ @[@]@@@@@[DE
)@@G@@@@@]9G@SUCCDMIXTESTS    @@@@@@@@[@@@APL         @ @[@][@@@@S@@@]9H@SVCCDDF
)@@G@@SAMPLE      @@@@@@@@[@@@APL         @ @[@]@@@@@+@@@]9>@SWCCDDOMINO      DG
)@@G@@@@@@@@@@[@@@APL         @ @ @ ]@@@[(@@@]'B[[@CCDTABLES      @@@@@@@@[@@@DH
)@@G@@APL         @ @#@^]@@@]M@@@];0]H2CCDPRCPKG      @@@@@@@@[@@@APL         DI
)@@G@@@ @]@#@@@@@C@@@]"]]I]CCDROOTSEG-RMAP@@@@@@@@[@@@APL         @ @@@[A@@@@JDJ
)@@G@@@@@]"EFTHCCDXQTSEG-RMAP @@@@@@@@[@@@APL         @ @@@[A@@@@A@@@]"TFUICCDDK
)@@G@@SYSSEG-RMAP @@@@@@@@[@@@APL         @ @@@[A@@@@^@@@]"Z^^BCCDNOTREP      DL
)@@G@@@@@@@@@@[@@@APL         @@@^@ A@@@@C@@@]"<F%*CGDSTORE       @@@@@@@@[@@@DM
)@@G@@APL         @ @]@#]@@@[O@@@]":H<QCGDSYSCMD      @@@@@@@@[@@@APL         DN
)@@G@@@ @]@#]@@@B-@@@]__H>!CGDSYMBOL      @@@@@@@@[@@@APL         @ @]@#]@@@[EDO
)@@G@@@@@#B)H&HCGDSYSMAP-ABS  @@@@@@@@[@@@APL         @@@]@#A@@@@B@@@#C%C9;CIDDP
)@@G@@XQTMAP-ABS  @@@@@@@@[@@@APL         @ @@@[A@@@@B@@@#C1D[RCIDDBMAP-ABS   DQ
)@@G@@@@@@@@@@[@@@APL         @ @[@]A@@@@B@@@#C8HV9CIDSITEPAR     @@@@@@@@[@@@DR
)@@G@@APL         @ @@@[]@@@[7@@@#C_F'ZETDC8)@@@)@@@@I/=K[$-C@@EGGT/@@@EG@@EGEDS
)@@G@@G/@__J[@@EGG/K@[&5D@@EGG/C@[$>*@@@@G/K@[$!/,0[)2@@@EGQ@@@EF_@@@EG#@#GEGXDT
)@@G@@N@0[$?/K@[,1@#HEGXR@)EF_C*]EQVH@@EGG*@@@@G1@@@@G/K@[$;/,0[)2@@@EGR@@@EF_DU
)@@G@@@@@EG#@#LEGXN@0[$'/K@[,1@#MEGXC/@@@[H@@EGD]@@EGDR@0EF_C?<EQVT/)@#0G@<EQBDV
)@@G@@[@)EGHC.@@@[H[@EGG][@EGG @@EGI(@@EGG/K@[*3H.@__"][@@[^C/@@@[G@@EGI[@@EGIDW
)@@G@@H/@@@[]@@EG+;O@@@=W/@@@AG@@EGHD@)EG+;O)@@=W/)@@AE@0@@JT/0@@AR@KEF"O@K@@GDX
)@@G@@C@[EF/;)J@@@;C@@@Y[@@EGKC/)@@[H@)EGI[@)EG+;O)@@=W/)@@AH@)EGHD[@EG+;P@@@=DY
)@@G@@W.@@@AE[K@@LT.K@@AR@)EF"P@)@@IC@+EF/R]0@@L;):@@@;C)@@YH@)ERK*@@@@I/K@[*FDZ
)@@G@@8L@[*FC/@@@[G@@EGI[@@EGIH/@@@[]@@EG+;O@@@=W/@@@AG@@EGHD@)EG+;O)@@=W/)@@AEA
)@@G@@E@0@@JT/0@@AR@0EF"O@0@@GC@#EF/;)J@@@;C@@@Y[@@EGKH@@ERK(@@@@G/K@[($C/@@@[EB
)@@G@@G@@EG][@@EG]G/@_.;/G@[(K*@@@@G/K@[%=C/@@@#G@@EG];K@@@]C/)@@[H@)EG];O)@@=EC
)@@G@@W/)@@^R@K@@GE@0@@JT/0@@D[@0EG+G/0@@D[@0EG</,0[9N@@@EGK@#:EGXE@)EG<C@LEFQED
)@@G@@;)Y@@@;G@@@D;@KUG+[@LEFQ/K@[*3C@@EGE[@@EGF/K@[%?C@@EGEH@@ERL*@@@@G/K@[(6EE
)@@G@@C@@EGFH@@ERQ*@@@@G/K@[%3C/@@@[H@@EG]]@@EG]/K@[%DC@@EGEH@@ERM*@@@@G/K@[%DEF
)@@G@@C@@EGFH@@ERQ*@@@@G/K@[%]C/@@@[H@@EG]]@@EG]/K@[%DC@@EGDH@@EGA*@@@@G/K@[%DEG
)@@G@@/,0[9F@#"EGX/K@[%?C@@EGE[@@EGFC/)@@[G@)EG][@)EG]H/)@@[;O)@@=W/)@@^C.@@@#EH
)@@G@@G[@EG];L@@@]R@)@@KE@0@@JT/0@@D[@0EG+G/0@@DE@0@@JC@MEFQ;)Z@@@;G@@@D;@KUG+EI
)@@G@@[@MEFQC/@@]^H@@EG]*@@@@G1@@@@G/K@[%?/,0[)2@@@EGS@@@EF_@@@EG#@^AEGXC/@@]^EJ
)@@G@@[@@EG]/K@[%3C/@@@[G@@EGD[@@EGDH@@EGA*@@@@G0@@@@G/K@[&IC/@@@#G@@EG];K@@@]EK
)@@G@@;@@@@+[@@EGLC/)@@[G@)EG][@)EGMC.@@@[C[)EGEH[)ERM(@@@@MC9@@@@H@)EGL/G)[:^EL
)@@G@@*@@@@I/K@[:\H@@EGMC#)EGM[@@@[^[[@EG+[#)EGDC/@@@#G@@EGD;K@@@]C/)@@[H@)EGDEM
)@@G@@;O)@@=W/)@@^R@0@@GE@0@@JT/0@@D[@0EG<G/0@@D[@0EG=A@0EG>C@@EG+/)@[:-E@@EG=EN
)@@G@@C/)@@^R@KEG>C@1EFQ;)/@@@;G)@@D;@0UG<[@1EFQC@@EGEH@@ERM*@@@@G/K@[:!E@@EG=EO
)@@G@@C/)@@@R@)EG>C@2EFQ;)/@@@;G)@@D;@0UG<[@2EFQG_)@@[8L@[:CC@@EGL;K@@@][@@EG EP
)@@G@@/,0[9 @@@EFR@@@EG @^WEGXC/@@@[[@@EG@/K@[=!N@0[:;/K@[,1@^)EGX @@EGIC@@EGAEQ
)@@G@@C@)@@GG/)__21@@@@IC/@@@H[@@EGAC/)@@=H@)EF9C.@@@[C[)EG^H[)EF/*@@@@MC9@@@@ER
)@@G@@G/@__.C_)@@][@@@[^[@)EG+[[@EG>[#)EGDC@@EGDG@@EF;;O@@@=W@@EF'R@0@@GC/@@@[ES
)@@G@@H@@EGD;O@@@=W@@EF'E@K@@HT@KEF9E@)EG+C[#ER!;-H@@@;DI@@@[[@EGEC@@EG>/)@[?&ET
)@@G@@/,0[9I@@@EGE@^(EGX[@@EGEC@@EGEH@@ERI(@@@@G/K@[!]C/@@@[G@@EGI[@@EGIG/@@@ EU
)@@G@@;O@@@=W/@@@AC/)@@[H@)EGI;O)@@=W/)@@AR@K@@GE@0@@JT/0@@A[@0EG<G/0@@AE@0@@JEV
)@@G@@C@@EGEC@LER!;)Z@@@;G@@@A;@KUG<[@LER!G_)@@[8L@[?JD@@EGI/C@[!A*@@@@G/K@[!IEW
)@@G@@/,0[)2@@@EGT@@@EF_@@@EG#@^3EGXN@0[!H/K@[,1@^4EGXC/@@@[G@@EGI[@@EGNG/@__3EX
)@@G@@/G@[!P*@@@@G/K@[!0C/@@@GH@@EGNC#)EGN[@@@[^[#)EGIC/@@@ G@@EGI;O@@@=W/@@@AEY
)@@G@@C/)@@[H@)EGI;O)@@=W/)@@AR@)@@GE@0@@JT/0@@A[@0EG+G/0@@AE@0@@JC@@ERIC@MER!EZ
)@@G@@;)Z@@@;G@@@A;@KUG+[@MER!G_)@@[8L@[!TR@0EF_C0#EQVH?#EQV/C@[!6*@@@@G/K@[!"FA
)@@G@@/,0[)2@@@EGU@@@EF_@@@EG#@ @EGXN@0[!./K@[,1@ [EGXR@KEF_C0[EQVG/@@@[[0[EQVFB
)@@G@@C/@@#0G@@EG[[@@EG[G/@@@HR@)EF"O@)@@GC@@ER,[@]EF/C/)@@IG@)EG[R@0EF"O@0@@IFC
)@@G@@C@)ER\[@<EF//K@[<;R@KEF_C/@@@[H0[EQV/C@[,R*@@@@G/K@[,(R@)EF_C@]EQB[@@EGOFD
)@@G@@G/@@@GR@0EF"O@0@@GC/@@@[[^#EF/C/@@@[H@@EG@*@@@@G/K@[,&N@0[,>/K@[,1@ IEGXFE
)@@G@@C/@@@[[@@EG@/K@[+DR@KEF_C0[EQVG/@__"[0[EQV/K@[=!N@0[,0/K@[,1@ MEGXR]0EGYFF
)@@G@@9!)EG&9,@EG*9\)EG%R@KEG?R@)EG!R@0EG,N[@EG\*4@UGV/K@UGV/K@[[FAA0EGY[^@EGVFG
)@@G@@9()EG&9%@EG*9:)EG%A@KEG?A@)EG!A@0EG,^[@EG\/KH@@@C8@@@]/\K[,/C@VK@@[@KEG)FH
)@@G@@/K@[+#C8@@@#/\K[,/C@VK@@[@KEG)C8FK@[[@@EG-/K@[=OC/@__"G@FK@[[@@EHYC@@ERSFI
)@@G@@H@@EHN(@@@@G/K@[\%/,0@&J@@[EG1@[ZEHU'^@[AC/,0@&J@@[EH]@[+EHUR@KEHOQ@KEHXFJ
)@@G@@N[@EHYC8[)@@'^K[A^8L@[\<'^@[ACN@0[\(/K@[0S@[(EHUC@@ER<H@@EHP*@@@@G/K@[\1FK
)@@G@@N@0[\0/K@[0S@[?EHUC@@ER<H@@EHQ*@@@@G/K@[0]/,0@&J@@[EHA@[\EHUR@KEHOQ@KEHXFL
)@@G@@N[@EHYC8[)@@'^K[A^8L@[\;'^@[ACN@0[0[/K@[0S@[6EHUC/@@@UH@@EHZ*@@@@G1@@@@GFM
)@@G@@/K@[0F/,0[I7@@@EHD@@@EHR@[9EHUC/@@@UC@)@@GH@)EHZ1@@@@IC@@EHZ[@@EH)/,0[I7FN
)@@G@@@@@@@@@@@EH)@['EHUN@0[0R/K@[0S@[;EHUR]0EHVR@KEH-N[@EH+*4@UHS/K@UHS/K@[[FFO
)@@G@@AA0EHVA@KEH-^[@EH+C8FK@@[^@[0M[@@EHXC@VK@[[@KEHZ/K@[\MC@:K@#[^)EH$C@FK@[FP
)@@G@@[@@EH*C8@EH<'=@@@#G@:K@]C@FK@#G8@@#Y[@@EH:C@I@@@/@@[1]%@FK@@/K@[089?I@@[FQ
)@@G@@9*FK@^/KF@@AG8)@@#?@)EH:/K@[01C@@EH*G8@@@C[@@EH*C8@EH<'=@@@#C8)@@@/K@[01FR
)@@G@@ @FK@^/KF@@A9?FK@@:@KEH?C@KEH!9*@ET99?FK@[9*@ET.C@@EH,[@@ET/C8@ET7'=@@[ FS
)@@G@@9?@EH\9*@ET. @@ET/C@@EU[(C@@@[^@)^@* K)^[JC0)DDIET ELOF9DD1ZE-[CLGC*)^@)FT
)@@G@@ K(^@)@]@[@[^@)^@1A)3 0)@G@[@[^@)^@1A)4 0)^@)^@)^@)^@)^@)^@* K)^@%DDIDDOFU
)@@G@@F9NE-[CTFF9OCD]D-  K)^@) K(^@)@]@[@[^@)^@1A)5 0)@F@[@[^@)^@1A)6 0)^@)^@)FV
)@@G@@E[MD9#C(^E(MC*)DDIDDOF9+H-\GT:F9?G(6F93I--GT:BS)@]@[@[^@)^@1A)7 0)@^@[@[FW
)@@G@@^@)^@1A)8 0)^@)^@)E1[EK)@D@[@[^@)^@1A)9 0)^@)^@)^@)^@)^@)^[DD1^C(S^@'^[DFX
)@@G@@D1OC(BC(M^@;@ @[@[^@)^@1A*0 0)^@)^@)GL>G9(H0)^@)@F@[@[^@)^@1A*1 0)^@)^@)FY
)@@G@@C1JEK)DDIC- F@'B*1^[OD8)CTZD([F[ZETOCD#DS)C-J^@)@A@[@[^@)^@1A*2 0)^@)^@)FZ
)@@G@@^@)^@)^@)^[+G($HD,@H@[@[^@)^@1A*3 0)^@)^@)^@)^@)^@)^[OCD]D- F9NE-[CTFFTDGA
)@@G@@D1^C(SF*,ET#D9KC(ZD1PD(]BK.A@;@J@[@[^@)^@1A*4 0)^@)^@)^@)^@)^@)^[OCD]D- GB
)@@G@@F9NE-[CTFFTDD1^C(SF*,ETPCLZE-[CLGC(ZE[OEK'B(IDDGBS)^@)@A@[@[^@)^@1A*5 0)GC
)@@G@@^@)^@)^@)^@)^@)^[ D1^^@)@G@[@[^@)^@1A*6 0)^@)^@)C(IC);^@)^@* K)^[JC0)DDIGD
)@@G@@DDOF9NE-[CTFF9OCD]D- ^@)^@% C)@]@[@[^@)^@1A*7 0)@H@[@[^@)^@1A*8 0)^@)^@)GE
)@@G@@^@)^@)^@)^@* K)^@%C1DD1^F9DD1ZETTD(]D9GF9OCD]D-  K)^@) K(^@)@]@[@[^@)^@1GF
)@@G@@A*9 0)@Q@[@[^@)^@1A00 0)^@)^@)E[MD9#C(^E(MC*)C1DD1^F9DD1ZETPCLZE-[CLGC**GG
)@@G@@E1[EK)C1JE(IC)'CLJD9GC([D0;EL DTJEL^ -NCTJE[  -DD1^C(SBLDD1OC(BC(MBS)^@)GH
)@@G@@@N@[@[^@)^@1A01 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[DC)'E-ZDD^F9NE-MDDIC8;^[QGI
)@@G@@CDM^[OCD]D- F9GD9#CDODDJD0'E-ZD-DETOF9KE-M^@(BS)@]@[@[^@)^@1A02 0)@^@[@[GJ
)@@G@@^@)^@1A03 0)^@)^@)E1[EK)@F@[@[^@)^@1A04 0)^@)^@)^@)^@)^@)^[NE(]F9OCD]D- GK
)@@G@@^@'^[OF9OCD]D- F9KE-M^@;@B@[@[^@)^@1A05 0)^@)^@)^@)^@)^@)^[#E(MELZE[OEK)GL
)@@G@@(#@@@[BLOF9GDDNE-ZE[OEK;@G@[@[^@)^@1A06 0)^@)^@)^@)^@)^@)^[BEL CDOF9OD[[GM
)@@G@@D1ZD-DETOF9DC)'^[]D9JD- CDIBS)@]@[@[^@)^@1A07 0)@ @[@[^@)^@1A08 0)^@)^@)GN
)@@G@@GL>G9(H0)^@)@B@[@[^@)^@1A09 0)^@)^@)C1JE(IC)'B(ACDGET BS)^@)@I@[@[^@)^@1GO
)@@G@@A80 0)^@)^@)ETPCLZE-[CLGC*'B(OCD]D- F9NE-[CTFFTNCTJE[ F*,ETPCLZE-[CLGC(ZGP
)@@G@@E[OEK;@H@[@[^@)^@1A81 0)^@)^@)CTPELMF9KE-MBK.ETPCLZE-[CLGC(Y 1CCDND[ZE-[GQ
)@@G@@CLGC(VDDIC- F[XBS)@E@[@[^@)^@1A82 0)^@)^@)C9MC([E-ZE-CCDIF9GDDNE-ZDD^BK.GR
)@@G@@E-ME( BS)^@)@D@[@[^@)^@1A83 0)^@)^@)DDA^[#E(MELZE[OEK)B)"^[IDDG^[OD[ D0)GS
)@@G@@@A@[@[^@)^@1A84 0)^@)^@)^@)^@)^@)^[+G($HD,@N@[@[^@)^@1A85 0)^@)^@)^@)^@)GT
)@@G@@^@)^[RD[DD- ^@*DD^^@"^[#E(MELZE[OELY 1DC-ZETOELDD1B^@(^[[D1^^[BEL CDOF9OGU
)@@G@@D[[D1ZD-DETOF9DC))@K@[@[^@)^@1A86 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[^D8)DDAGV
)@@G@@^@*^[DC)"CTPELMF9KE-MF0,DD^F9NE-MDDIC8(^[JEK)^@)@Q@[@[^@)^@1A87 0)^@)^@)GW
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@* @)DD^B(#E(MELZE[OELY 1DC-ZETOELDD1B C)CDIC)) @)GX
)@@G@@EL DTJEL^B1#E(MELZE[OELY 1MC(#F9IE(HCK( C)@K@[@[^@)^@1A88 0)^@)^@)^@)^@)GY
)@@G@@^@)^@)^@)^@)^@)^[OD[ D0)CTPELMF9KE-MBK.CTPELMF9KE-MF0,D1 F[OF9ID9^C*)^@)GZ
)@@G@@@J@[@[^@)^@1A89 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[ D-NC*)C9MC([E-ZE-CCDIF9GHA
)@@G@@DDNE-ZDD^BK.C1[D-NC*;^@)@E@[@[^@)^@1B@0 0)^@)^@)^@)^@)^@)^[DC0)CTPELMF9KHB
)@@G@@E-M^@/B0)D1DD))^@)@Q@[@[^@)^@1B@1 0)^@)^@)^@)^@)^@)^[OD[ D0)DDA^@*CTPELMHC
)@@G@@F9KE-MF0,DD^F9NE-MDDIC8.DD^ D[D1^ [#E(MELZE[OELY 1MC(#F9IE(HCK.EL DTJEL^HD
)@@G@@ C)E-CC(I^@)@ @[@[^@)^@1B@2 0)^@)^@)^@)^@)^@)^@)(#@@@[^@)^@)^@)^[+G($HD,HE
)@@G@@@E@[@[^@)^@1B@3 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[AD9PD1^BK.E-ME( BS)@H@[@[HF
)@@G@@^@)^@1B@4 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[OCD]D- F9GD9#CDODDJD0'B(#E(MELZHG
)@@G@@E[OEK;@C@[@[^@)^@1B@5 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[ D1^BS)@A@[@[^@)^@1HH
)@@G@@B@6 0)^@)^@)^@)^@)^@)^[ D1^BS)@H@[@[^@)^@1B@7 0)^@)^@)C(IC);^@)^@* K)C(IHI
)@@G@@C))D9A^[ADDIC-ZDDIF9NFDHCLJD-ZE-[CLGC*) K(@]@[@[^@)^@1B@8 0)@]@[@[^@)^@1HJ
)@@G@@B@9 0)@F@[@[^@)^@1BC0 0)^@)^@)^@)^@)^@)^@* K)C1DD1^F9QCDMF9DD1ZE-[CLGC*)HK
)@@G@@ K(^@)@]@[@[^@)^@1BC1 0)@N@[@[^@)^@1BC2 0)^@)^@)E[MD9#C(^E(MC*)C1DD1^F9(HL
)@@G@@H1ZIT9H(+F9OCD]D-  [QCDM^[AD9PD1^BL]D9JD- CDIBTMC(FD9MC)'HDIE- C9 EK;^@)HM
)@@G@@@J@[@[^@)^@1BC3 0)^@)^@)^@)^@)^@)^[DC)'E-ZDD^F9NE-MDDIC8;E1[EK)D-JCT[E-DHN
)@@G@@D9IBLOF9GDDNE-ZE[OEK(BS)@]@[@[^@)^@1BC4 0)@^@[@[^@)^@1BC5 0)^@)^@)E1[EK)HO
)@@G@@@I@[@[^@)^@1BC6 0)^@)^@)^@)^@)^@)^[OCD]D- F9DD1^C(S -KEL E1ZET#D9KC*?IT<HP
)@@G@@H90G*'DDIE- C9 EK;@ @[@[^@)^@1BC7 0)^@)^@)GL>G9(H0)^@)@B@[@[^@)^@1BC8 0)HQ
)@@G@@^@)^@)C1JE(IC)'B(ACDGET BS)^@)@D@[@[^@)^@1BC9 0)^@)^@)IT<H90G*'B(4H90F9+HR
)@@G@@H-\GT:F9?G(6BS)^@)@E@[@[^@)^@2A@0 0)^@)^@)E-[CLGC(ZDDIC- F@'B(CCDND[ZE1[HS
)@@G@@D-PC**DD^ C;@B@[@[^@)^@2A@1 0)^@)^@)^@)^@)^@)^[MC(KC([E))^@)@P@[@[^@)^@2HT
)@@G@@A@2 0)^@)^@)^@)^@)^@)^[ADDIC-ZDDIF9NE(]F9OCD]D-  [AD9PD1^ -MC(FD9MC)?ET#HU
)@@G@@D9KC*?E-[CLGC(ZDDIC- F@?DD^ -GD9#CDODDJD0(BS)^@)@E@[@[^@)^@2A@3 0)^@)^@)HV
)@@G@@^@)^@)^@)^[KEL E1ZET#D9KC*'B(NCTJE[ BS)^@)@C@[@[^@)^@2A@4 0)^@)^@)^@)^@)HW
)@@G@@^@)^[NCTJE[  *'B*1BS)^@)@I@[@[^@)^@2A@5 0)^@)^@)^@)^@)^@)^[PD1ODDG^@*C1JHX
)@@G@@E(IC)(^[JEK) @)E[MC(QF9NCTJE[ ^@.^@0^@(^@)@F@[@[^@)^@2A@6 0)^@)^@)C(IC);HY
)@@G@@^@* K)D9A^[ADDIC-ZE1[ELZDDIF9OCD]D- ^@% C)@]@[@[^@)^@2A@7 0)@E@[@[^@)^@2HZ
)@@G@@A@8 0)^@)^@)^@)^@)^@)^[;^@) LDC-ZD-DETOF9NEK1 K)^[.^@)@]@[@[^@)^@2A@9 0)IA
)@@G@@@I@[@[^@)^@2AC0 0)^@)^@)I[2H9<G(=I(2G*)HD=F9?HD3I-ZIT2AC*H1-H(>F93GT\I[>IB
)@@G@@BL(H14G($G(2 C;^@)@]@[@[^@)^@2AC1 0)@F@[@[^@)^@2AC2 0)^@)^@)^@)^@)^@)^@)IC
)@@G@@JS)^@/^[(G))H-(IT4^@"^@'BK.^[(G))J*)@]@[@[^@)^@2AC3 0)@^@[@[^@)^@2AC4 0)ID
)@@G@@^@)^@)I1-IK)@D@[@[^@)^@2AC5 0)^@)^@)^@)^@)^@)^[<H95H14F9(H1<IK'^@0 0,AC;IE
)@@G@@@H@[@[^@)^@2AC6 0)^@)^@)^@)^@)^@)^[4G(!I[ZIT>H(ZH1\G->^@'^[3G(!F93I--GT:IF
)@@G@@F9,H9=G*)BS)@F@[@[^@)^@2AC7 0)^@)^@)^@)^@)^@)^[=I(0H-ZG(,I-2JC)BK)GL\H9?IG
)@@G@@G(-H0)BS)^@)@G@[@[^@)^@2AC8 0)^@)^@)^@)^@)^@)^[0I-2F94H9ZETOF9>H14IL9BK)IH
)@@G@@I-ZH-(IT4F90I-2^@;@ @[@[^@)^@2AC9 0)^@)^@)GL>G9(H0)^@)@H@[@[^@)^@2AK0 0)II
)@@G@@^@)^@)I->H(0F93G(!F9,H9=G*'B(3G(!F93I--GT:FT3G(!F93I--GT:F94H90F*;@L@[@[IJ
)@@G@@^@)^@2AK1 0)^@)^@)HD,IT>IL4F9(H1ZI--GL?G**H1-H(>F93GT\I[> -2G(<F9,I(!F93IK
)@@G@@I--GT:FT2G(<F93I--GT:F94H90F*?@L@[@[^@)^@2AK2 0)^@)^@)^@)^@)^@)^[4G(!I[ZIL
)@@G@@IT>H(ZH1\G-> 1(G-ZG0?G-5I[?F9>H14IL9 -0I-2F94H9ZETOF9>H14IL9 C;^@)@D@[@[IM
)@@G@@^@)^@2AK3 0)^@)^@)HD&^[,H94^[=I(0H-ZG(,I-2JC)I-*G(,^@)@A@[@[^@)^@2AK4 0)IN
)@@G@@^@)^@)^@)^@)^@)^[+G($HD,@D@[@[^@)^@2AK5 0)^@)^@)^@)^@)^@)^[<H95H14F9(H1<IO
)@@G@@IK'B*1BS)^@)@C@[@[^@)^@2AK6 0)^@)^@)^@)^@)^@)^[(G-ZGT\I(,I):BK.AC;@@@[@[IP
)@@G@@(I@@@[^@)^@2AK7 0)^@)^@)^@)^@)^@)^[(G-ZIT4GD<HTVHD=F9<H95H14F*'B(0I-2F94IQ
)@@G@@H9ZETOF9>H14IL9BS)@^@[@[^@)^@2AK8 0)^@)^@)G(,G))@A@[@[^@)^@2AK9 0)^@)^@)IR
)@@G@@G(?IT>^@)^[+G($HD,@Q@[@[^@)^@2AS0 0)^@)^@)^@)^@)^@)^[7IL(I->H-, [=HD-G9,IS
)@@G@@F9&HD?G*?^8)HD=BK$ -4G(!I[ZIT>H(ZH1\G-> 1(G-ZG0?^8)GD?IL>GD=JC)G->GT?GD2IT
)@@G@@G(=^8(BS)^@)@D@[@[^@)^@2AS1 0)^@)^@)^@)^@)^@)^[<H95H14F9(H1<IK'B*0BS)^@)IU
)@@G@@@A@[@[^@)^@2AS2 0)^@)^@)^@)^@)^@)^[>H1=BS)@I@[@[^@)^@2AS3 0)^@)^@)IT>H(ZIV
)@@G@@IT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1,H9=G(ZG0'B(4F9(G-ZH-(IT4BS)@G@[@[^@)^@2IW
)@@G@@AS4 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1<H95H14 S'B(<BS)@D@[@[IX
)@@G@@^@)^@2AS5 0)^@)^@)G(,G);^[;^[\G0)HD=F9?HD3I-ZIT2AC)J*)@]@[@[^@)^@2AS6 0)IY
)@@G@@@E@[@[^@)^@2AS7 0)^@)^@)^@)^@)^@)^@)^[;^@%DD^F9GDDNE-ZETMAK%^@)J*)@]@[@[IZ
)@@G@@^@)^@2AS8 0)@I@[@[^@)^@2AS9 0)^@)^@)I[2H9<G(=I(2G*)HD=F9?HD3I-ZIT2AK*H1-JA
)@@G@@H(>F93GT\I[>F9(H14G($G(2 C;^@)@]@[@[^@)^@2A)0 0)@I@[@[^@)^@2A)1 0)^@)^@)JB
)@@G@@^@)^@)^@)^@)^[;^@/HD=^[?HD3I))B0)BK'B*)B-(G))H-(IT4B0) ))HD=^@)J*)@]@[@[JC
)@@G@@^@)^@2A)2 0)@^@[@[^@)^@2A)3 0)^@)^@)I1-IK)@E@[@[^@)^@2A)4 0)^@)^@)^@)^@)JD
)@@G@@^@)^[<H95H14F9(H1<IK)BK)A@, 01BS)^@)@H@[@[^@)^@2A)5 0)^@)^@)^@)^@)^@)^[4JE
)@@G@@G(!I[ZIT>H(ZH1\G->BK)IT>H(ZIT4GD<HTZH1\G->^@;^@)@F@[@[^@)^@2A)6 0)^@)^@)JF
)@@G@@^@)^@)^@)^[=I(0H-ZG(,I-2JC)BK)GL\H9?G(-H0)BS)^@)@G@[@[^@)^@2A)7 0)^@)^@)JG
)@@G@@^@)^@)^@)^[0I-2F94H9ZETOF9>H14IL9^@'^[4F9?HD3I-ZI[4IK;@ @[@[^@)^@2A)8 0)JH
)@@G@@^@)^@)GL>G9(H0)^@)@^@[@[^@)^@2A)9 0)^@)^@)I->H(0(D@@@[F93G(!F9,H9=G*'B(3JI
)@@G@@G(!F93I--GT:FT3G(!F93I--GT:F94H90F*;@L@[@[^@)^@2A*0 0)^@)^@)HD,IT>IL4F9(JJ
)@@G@@H1ZI--GL?G**H1-H(>F93GT\I[> -2G(<F9,I(!F93I--GT:FT2G(<F93I--GT:F94H90F*?JK
)@@G@@@L@[@[^@)^@2A*1 0)^@)^@)^@)^@)^@)^[4G(!I[ZIT>H(ZH1\G-> 1(G-ZG0?G-5I[?F9>JL
)@@G@@H14IL9 -0I-2F94H9ZETOF9>H14IL9 C;^@)@D@[@[^@)^@2A*2 0)^@)^@)HD&^[,H94^[=JM
)@@G@@I(0H-ZG(,I-2JC)I-*G(,^@)@A@[@[^@)^@2A*3 0)^@)^@)^@)^@)^@)^[+G($HD,@D@[@[JN
)@@G@@^@)^@2A*4 0)^@)^@)^@)^@)^@)^[<H95H14F9(H1<IK'B*1BS)^@)@C@[@[^@)^@2A*5 0)JO
)@@G@@^@)^@)^@)^@)^@)^[(G-ZGT\I(,I):BK.AC;@I@[@[^@)^@2A*6 0)^@)^@)^@)^@)^@)^[(JP
)@@G@@G-ZIT4GD<HTVHD=F9<H95H14F*'B(0I-2F94H9ZETOF9>H14IL9BS)@A@[@[^@)^@2A*7 0)JQ
)@@G@@^@)^@)^@)^@)^@)^[>H1=^@)@A@[@[^@)^@2A*8 0)^@)^@)G(?IT>^@)^[+G($HD,@Q@[@[JR
)@@G@@^@)^@2A*9 0)^@)^@)^@)^@)^@)^[7IL(I->H-, [=HD-G9,F9&HD?G*?^8)HD=BK$ -4G(!JS
)@@G@@I[ZIT>H(ZH1\G-> 1(G-ZG0?^8)GD?IL>GD=JC)G->GT?GD2G(=^8(BS)^@)@D@[@[^@)^@2JT
)@@G@@A00 0)^@)^@)^@)^@)^@)^[<H95H14F9(H1<IK'B*0BS)^@)@A@[@[^@)^@2A01 0)^@)^@)JU
)@@G@@^@)^@)^@)^[>H1=BS)@C@[@[^@)^@2A02 0)^@)^@)IT>H(ZIT4GD<HTZI-\I@!BK.AC;^@)JV
)@@G@@@G@[@[^@)^@2A03 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1<H95H14 S'JW
)@@G@@B(<BS)@E@[@[^@)^@2A04 0)^@)^@)G(,G);^[;^@)H9&^[(G-ZH-(IT4F93IK2^@)J*)^@)JX
)@@G@@@]@[@[^@)^@2A05 0)@F@[@[^@)^@2A06 0)^@)^@)^@)^@)^@)^[;^@) LOFDKC(ZD1[D( JY
)@@G@@F9NELZEL CDG^[.^@)@]@[@[^@)^@2A07 0)@E@[@[^@)^@2A08 0)^@)^@)I[2H9<G(=I(2JZ
)@@G@@G*)I-9I[>F9,GD!G(ZIT2F92G(-H);@]@[@[^@)^@2A09 0)@B@[@[^@)^@2A80 0)^@)^@)KA
)@@G@@^@)^@)^@)^[;^@/I-9I[>^[,(^@@@[GD!G*"^@'BK.^[2G(-H))J*E@]@[@[^@)^@2A81 0)KB
)@@G@@@ @[@[^@)^@2A82 0)^@)^@)GL>G9(H0)^@)@C@[@[^@)^@2A83 0)^@)^@)IT>H(ZIT4GD<KC
)@@G@@HTZI-\I@:BK.AC;^@)@J@[@[^@)^@2A84 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZKD
)@@G@@I-\I[X 1,H9=G(ZG0'B(4F94JD0G(ZH1-H(>BS)^@)@H@[@[^@)^@2A85 0)^@)^@)IT>H(ZKE
)@@G@@IT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 14JD0G(ZI)'B(4F92G(-H);@H@[@[^@)^@2A86 0)KF
)@@G@@^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 14JD0G(ZIT(JL>BK.AC;^@)@F@[@[KG
)@@G@@^@)^@2A87 0)^@)^@)G(,G);^[;^@)H9&^[4JD0G(ZH1-H(>F93ILZIL>GD?^[.^@)@]@[@[KH
)@@G@@^@)^@2A88 0)@G@[@[^@)^@2A89 0)^@)^@)^@)^@)^@)^[;^@) LOFDKC(ZD1[D( F9NELZKI
)@@G@@DDIE- C9 EK)J*)^@)@]@[@[^@)^@2B@0 0)@F@[@[^@)^@2B@1 0)^@)^@)I[2H9<G(=I(2KJ
)@@G@@G*)I-9I[>F9,GD!G(ZIT2F9(H14G($G(2BS)@]@[@[^@)^@2B@2 0)@G@[@[^@)^@2B@3 0)KK
)@@G@@^@)^@)^@)^@)^@)^@)JS)B-4JD0G(ZH1-H(>B0)BK'B*)HD,I->G9>IK)J*)@]@[@[^@)^@2KL
)@@G@@B@4 0)@ @[@[^@)^@2B@5 0)^@)^@)GL>G9(H0)^@)@C@[@[^@)^@2B@6 0)^@)^@)IT>H(ZKM
)@@G@@IT4GD<HTZI-\I@:BK.AC;^@)@J@[@[^@)^@2B@7 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4KN
)@@G@@GD<HTZI-\I[X 1,H9=G(ZG0'B(4F94JD0G(ZH1-H(>BS)^@)@I@[@[^@)^@2B@8 0)^@)^@)KO
)@@G@@IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 14JD0G(ZI)'B(4F9(H14G($G(2BS)@H@[@[KP
)@@G@@^@)^@2B@9 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 14JD0G(ZIT(JL>BK.KQ
)@@G@@AC;^@)@G@[@[^@)^@2BC0 0)^@)^@)G(,G);^@)JS)H9&^[4JD0G(ZH1-H(>F93ILZHD,I->KR
)@@G@@G9>IK)J*)^@)@]@[@[^@)^@2BC1 0)@G@[@[^@)^@2BC2 0)^@)^@)^@)^@)^@)^@)^[;^@%KS
)@@G@@E-TE[ F9ICDHC(ZETMF9]D9JD- CDI K)^[.@]@[@[^@)^@2BC3 0)@]@[@[^@)^@2BC4 0)KT
)@@G@@(D@@@[^@)^@)I[2H9<G(=I(2G*)I-9I[>F9,GD!G(ZIT2F9+H9\H->GD,BS)@G@[@[^@)^@2KU
)@@G@@BC5 0)^@)^@)^@)^@)^@)^@)JS)B-4JD0G*)H1-H(>^@"^@'BK.^[+H9\H->GD,^[.@]@[@[KV
)@@G@@^@)^@2BC6 0)@ @[@[^@)^@2BC7 0)^@)^@)GL>G9(H0)^@)@C@[@[^@)^@2BC8 0)^@)^@)KW
)@@G@@IT>H(ZIT4GD<HTZI-\I@:BK.AC;^@)@J@[@[^@)^@2BC9 0)^@)^@)IT>H(ZIT4GD<HTVIT>KX
)@@G@@H(ZIT4GD<HTZI-\I[X 1,H9=G(ZG0'B(4F94JD0G(ZH1-H(>BS)^@)@I@[@[^@)^@3A@0 0)KY
)@@G@@^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 14JD0G(ZI)'B(4F9+H9\H->GD,BS)KZ
)@@G@@@H@[@[^@)^@3A@1 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 14JD0G(ZIT(LA
)@@G@@JL>BK.AC;^@)@G@[@[^@)^@3A@2 0)^@)^@)G(,G);^@)JS)H9&^[4JD0G(ZH1-H(>F93ILZLB
)@@G@@GL\H9?G(-H0)J*)^@)@]@[@[^@)^@3A@3 0)@]@[@[^@)^@3A@4 0)@D@[@[^@)^@3A@5 0)LC
)@@G@@^@)^@)^@)^@)^@)^@)JS) LQCDMF9^C(#F9NEK%^[.@]@[@[^@)^@3A@6 0)@D@[@[^@)^@3LD
)@@G@@A@7 0)^@)^@)I[2H9<G(=I(2G*)I1-ILZG->GTZETMBS)^@)@]@[@[^@)^@3A@8 0)@J@[@[LE
)@@G@@^@)^@3A@9 0)^@)^@)^@)^@)^@)^@)JS)B-6GD2^[=G(<^@"^@'BK.^@/HD=^[?HD3I))B0)LF
)@@G@@BK)B))I-9I[>^@"^[.@]@[@[^@)^@3AC0 0)@^@[@[^@)^@3AC1 0)^@)^@)I1-IK)@E@[@[LG
)@@G@@^@)^@3AC2 0)^@)^@)^@)^@)^@)^[4HD0G*'I-ZGL-IT(GTZI-9I[>BS)^@)@D@[@[^@)^@3LH
)@@G@@AC3 0)^@)^@)^@)^@)^@)^[3HD'G*)BK)HD,I->G9>IK)BS)@E@[@[^@)^@3AC4 0)^@)^@)LI
)@@G@@^@)^@)^@)^[6GD2F9<H95H14^@'^[(H14G($G(2^@;@H@[@[^@)^@3AC5 0)^@)^@)^@)^@)LJ
)@@G@@^@)^[4G(!I[ZIT>H(ZH1\G->^@'^[3G(!F93I--GT:F9,H9=G*)BS)@ @[@[^@)^@3AC6 0)LK
)@@G@@^@)^@)GL>G9(H0)^@)@I@[@[^@)^@3AC7 0)^@)^@)I->H(0F93G(!F9,H9=G*'B(3G(!F93LL
)@@G@@I--GT:FS)IT>H(ZIT4GD<HTZI-\I@)F*;^@)@[@[@[^@)^@3(D@@@[AC8 0)^@)^@)I-(I[>LM
)@@G@@BK.I->H(0F93G(!F9,H9=G*,I-ZI-9I[>BS)@F@[@[^@)^@3AC9 0)^@)^@)IT(JL>BK.I->LN
)@@G@@H(0F93G(!F9,H9=G*,I-9I[>F93HD'G*;^@)@C@[@[^@)^@3AK0 0)^@)^@)IT>H(ZIT4GD<LO
)@@G@@HTZI-\I@!BK.AC;^@)@H@[@[^@)^@3AK1 0)^@)^@)I->H(0F93G(!F9,H9=G*'B(3G(!F93LP
)@@G@@I--GT:FT3G(!F93I--GT:F94H90F*;@F@[@[^@)^@3AK2 0)^@)^@)I1-ILZGT\I(,I)'B(4LQ
)@@G@@G(!I[ZIT>H(ZH1\G-> 1<H95H14BS)@E@[@[^@)^@3AK3 0)^@)^@)HD&^[2G(<F93I--GT:LR
)@@G@@F94H90^@.^@0^[4H[>H0)^@)@A@[@[^@)^@3AK4 0)^@)^@)^@)^@)^@)^[+G($HD,@E@[@[LS
)@@G@@^@)^@3AK5 0)^@)^@)^@)^@)^@)^[+GD3G*'B(4H90F90IL\GTZH->I0;^@)@I@[@[^@)^@3LT
)@@G@@AK6 0)^@)^@)^@)^@)^@)^[\G1&IT>I)'B(+H-\GT:F93I--GT:FT+H-\GT:F93I--GT:F94LU
)@@G@@H90F*;@H@[@[^@)^@3AK7 0)^@)^@)^@)^@)^@)^[0IL\GTZIT4GD<HTVI[2H9<F93I--GT:LV
)@@G@@F94H90F*:B(3HD'G*;@A@[@[^@)^@3AK8 0)^@)^@)^@)^@)^@)^[>H1=^@)@A@[@[^@)^@3LW
)@@G@@AK9 0)^@)^@)G(?IT>^@)^[+G($HD,@B@[@[^@)^@3AS0 0)^@)^@)^@)^@)^@)^[+GD3G*'LX
)@@G@@B*0BS)@K@[@[^@)^@3AS1 0)^@)^@)^@)^@)^@)^[\G1&IT>I)'B(2G(<F9,I(!F93I--GT:LY
)@@G@@FT2G(<F93I--GT:F94H90F*,H9&G13G(4BS)@K@[@[^@)^@3AS2 0)^@)^@)^@)^@)^@)^[2LZ
)@@G@@G(<F9,I(!F93I--GT:FS)IL>GTZIT4GD<HTZI-\I[X 1\G1&IT>I):BK.IT(JL>BS)@A@[@[MA
)@@G@@^@)^@3AS3 0)^@)^@)^@)^@)^@)^[>H1=BS)@E@[@[^@)^@3AS4 0)^@)^@)G1\IK)HD,G->MB
)@@G@@J@)BK.AC)I-\^[(G-ZGT\I(,I))G-\@A@[@[^@)^@3AS5 0)^@)^@)^@)^@)^@)^[+G($HD,MC
)@@G@@@C@[@[^@)^@3AS6 0)^@)^@)^@)^@)^@)^[\G1&IT>I):BK.AC;^@)@H@[@[^@)^@3AS7 0)MD
)@@G@@^@)^@)^@)^@)^@)^[(G-ZIT4GD<HTVHD,G->J[X 16GD2F94JD0G*'B(4HD0G*;^@)@^@[@[ME
)@@G@@^@)^@3AS8 0)^@)^@)^@)^@)(D@@@[^@)^[(G-ZIT4GD<HTVHD,G->J[X 16GD2F9+GD3G*'MF
)@@G@@B(+GD3G*;^@)@I@[@[^@)^@3AS9 0)^@)^@)^@)^@)^@)^[(G-ZIT4GD<HTVHD,G->J[X 16MG
)@@G@@GD2F9\G1&IT>I)'B(\G1&IT>I);^@)@G@[@[^@)^@3A)0 0)^@)^@)^@)^@)^@)^[(G-ZIT4MH
)@@G@@GD<HTVHD,G->J[X 1<H90JC'B(&GD?IT>BS)@^@[@[^@)^@3A)1 0)^@)^@)G(,G);@A@[@[MI
)@@G@@^@)^@3A)2 0)^@)^@)HD=F9<H95H14BK.A@;@I@[@[^@)^@3A)3 0)^@)^@)IT>H(ZIT4GD<MJ
)@@G@@HTVIT>H(ZIT4GD<HTZI-\I[X 1,H9=G(ZG0'B(4F96GD2F9=G(<BS)@I@[@[^@)^@3A)4 0)MK
)@@G@@^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1=G(<H-ZIT(JL>BK.IT(JL>BS)^@)ML
)@@G@@@^@[@[^@)^@3A)5 0)^@)^@)G(,G);@]@[@[^@)^@3A)6 0)@G@[@[^@)^@3A)7 0)^@)^@)MM
)@@G@@^@)^@)^@)^@)^@)JS) L#D9IE1[ELOFDKC(^C(#D-ZETMAC%^[.^@)@]@[@[^@)^@3A)8 0)MN
)@@G@@@F@[@[^@)^@3A)9 0)^@)^@)I[2H9<G(=I(2G*)CT\H1QGD2E-9I[>C->GT?F9NEK1BS)^@)MO
)@@G@@@]@[@[^@)^@3A*0 0)@R@[@[^@)^@3A*1 0)^@)^@)^@)^@)JS/GT\H13I)?I1-IK?I-9I[>MP
)@@G@@ -=G(<^[?^@"^@'BK.^@/GT\H13I)?I1-IK?I-9I[> -=G(<^[?B0)BS/GT\H13I)?I1-IK?MQ
)@@G@@I-9I[> -=G(<B1.^@)@]@[@[^@)^@3A*2 0)@ @[@[^@)^@3A*3 0)^@)^@)GL>G9(H0)^@)MR
)@@G@@@Q@[@[^@)^@3A*4 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I@!ADX 1=G(<H-ZMS
)@@G@@IT(JL>BK.IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1=G(<H-ZIT(JL> S)^@)@K@[@[MT
)@@G@@^@)^@3A*5 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[3G(!F93I--GT:FT3G(!F93I--GT:F94MU
)@@G@@H90 *1F*,G->GT?F93HD'G*;@C@[@[^@)^@3A*6 0)^@)^@)IT>H(ZIT4GD<HTZI-\I@!BK.MV
)@@G@@AC;^@)@F@[@[^@)^@3A*7 0)^@)^@)G(,G);^[;^@)H9&^[#H9,E1-ILOJD0G(^G(<H-ZETMMW
)@@G@@F81^[.@]@[@[^@)^@3A*8 0)@B@[@[^@)^@3A*9 0)^@)^@)^@)^@)^@)^[;^@%CTJD1QCDMMX
)@@G@@( @@@[E-TE[ C- CTGF9NELZAK%^@)J*)^@)@^@[@[^@)^@3A00 0)^@)^@)@@)^@)@F@[@[MY
)@@G@@^@)^@3A01 0)^@)^@)I[2H9<G(=I(2G*)CT\H1QGD2E-9I[>C->GT?F9NELZAK;^@)@]@[@[MZ
)@@G@@^@)^@3A02 0)@L@[@[^@)^@3A03 0)^@)^@)^@)^@)^@)^@)JS)B-<H9,IT4 -6GD2 -4JD0NA
)@@G@@G*?G->GS)H)"^@'BK.^@/GT\H13I)?I1-IK?I-9I[>B0)J*)@]@[@[^@)^@3A04 0)@^@[@[NB
)@@G@@^@)^@3A05 0)^@)^@)I1-IK)@H@[@[^@)^@3A06 0)^@)^@)^@)^@)^@)^[4G(!I[ZIT>H(ZNC
)@@G@@H1\G->^@'^[3G(!F93I--GT:F9,H9=G*)BS)@ @[@[^@)^@3A07 0)^@)^@)GL>G9(H0)^@)ND
)@@G@@@H@[@[^@)^@3A08 0)^@)^@)I->H(0F93G(!F9,H9=G*'B(3G(!F93I--GT:FT3G(!F93I--NE
)@@G@@GT:F94H90F*;@K@[@[^@)^@3A09 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[XNF
)@@G@@ 13HD'G*'B(4G(!I[ZIT>H(ZH1\G-> 13HD'G*;^@)@G@[@[^@)^@3A80 0)^@)^@)G(,G);NG
)@@G@@^@)^[;^[\G0)CT\H1QGD2E-9I[>C->GT?F9NELZAK)J*)^@)@]@[@[^@)^@3A81 0)@H@[@[NH
)@@G@@^@)^@3A82 0)^@)^@)^@)^@)^@)^@)^@)JS) L#D9IE1[ELOFDKC(^C(#D-NCTZETMF81 K)NI
)@@G@@J*)^@)@]@[@[^@)^@3A83 0)@F@[@[^@)^@3A84 0)^@)^@)I[2H9<G(=I(2G*)CT\H1QGD2NJ
)@@G@@E-9I[>C->GT?ET#F9NELZBS)@]@[@[^@)^@3A85 0)@O@[@[^@)^@3A86 0)^@)^@)^@)^@)NK
)@@G@@^@)^@)JS)B-<H9,IT4 -6GD2 -4JD0G*?G->GS)H);B0)BK'B*)G->GT?GD2G*)B-<H9,IT4NL
)@@G@@ -6GD2 -4JD0G*?G->GS)H)"@E@[@[^@)^@3A87 0)^@)^@)^@)^@)^@)^@/G(,G))H9&^[=NM
)@@G@@G(<H--IL>^@"^[.^@)@^@[@[^@)^@3A88 0)^@)^@)I1-IK)@H@[@[^@)^@3A89 0)^@)^@)NN
)@@G@@^@)^@)^@)^[4G(!I[ZIT>H(ZH1\G->^@'^[3G(!F93I--GT:F9,H9=G*)BS)@ @[@[^@)^@3NO
)@@G@@B@0 0)^@)^@)GL>G9(H0)^@)@C@[@[^@)^@3B@1 0)^@)^@)IT>H(ZIT4GD<HTZI-\I@!BK.NP
)@@G@@AC;^@)@A@[@[^@)^@3B@2 0)^@)^@)I->H(0F93G(!F9,H9=(B@@@[G*'B(3G(!F93I--GT:NQ
)@@G@@FT3G(!F93I--GT:F94H90F*;@K@[@[^@)^@3B@3 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4NR
)@@G@@GD<HTZI-\I[X 13HD'G*'B(4G(!I[ZIT>H(ZH1\G-> 13HD'G*;^@)@G@[@[^@)^@3B@4 0)NS
)@@G@@^@)^@)G(,G);^[;^[\G0)CT\H1QGD2E-9I[>C->GT?ET<F9NELZAC)^[.^@)@]@[@[^@)^@3NT
)@@G@@B@5 0)@G@[@[^@)^@3B@6 0)^@)^@)^@)^@)^@)^[;^@%CTJD1QCDME-TE[ C- CTZETMF9QNU
)@@G@@C)%^@)J*)^@)@]@[@[^@)^@3B@7 0)@F@[@[^@)^@3B@8 0)^@)^@)I[2H9<G(=I(2G*)CT\NV
)@@G@@H1QGD2E-9I[>C->GTZETMF9QC);^@)@]@[@[^@)^@3B@9 0)@J@[@[^@)^@3BC0 0)^@)^@)NW
)@@G@@^@)^@)^@)^@)JS)B-<H9,IT4 -6GD2 -4JD0G*?G->GS)B0)BK'B*)B-6GD2^[=G(<B0)J*)NX
)@@G@@@]@[@[^@)^@3BC1 0)@^@[@[^@)^@3BC2 0)^@)^@)I1-IK)@H@[@[^@)^@3BC3 0)^@)^@)NY
)@@G@@^@)^@)^@)^[4G(!I[ZIT>H(ZH1\G->^@'^[3G(!F93I--GT:F9,H9=G*)BS)@ @[@[^@)^@3NZ
)@@G@@BC4 0)^@)^@)GL>G9(H0)^@)@H@[@[^@)^@3BC5 0)^@)^@)I->H(0F93G(!F9,H9=G*'B(3OA
)@@G@@G(!F93I--GT:FT3G(!F93I--GT:F94H90F*;@H@[@[^@)^@3BC6 0)^@)^@)IT>H(ZIT4GD<OB
)@@G@@HTVIT>H(ZIT4GD<HTZI-\I[X 1,H9=G(ZG0'B(4F9=G(<H);@M@[@[^@)^@3BC7 0)^@)^@)OC
)@@G@@IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1=G(<H-ZIT(JL>BK.I->H(0F93G(!F9,H9=OD
)@@G@@G*,G->GTZIT(JL>BS)@F@[@[^@)^@3BC8 0)^@)^@)G(,G);^@)JS)H9&^[#H9,E1-ILOJD0OE
)@@G@@G(^G(<F9NELZE1^^[.@]@[@[^@)^@3BC9 0)@F@[@[^@)^@4A@0 0)^@)^@)^@)^@)^@)^@)OF
)@@G@@JS) L^C(#D-ZET CTODDJD1ZETM K)^[.^@)@]@[@[^@)^@4A@1 0)@E@[@[^@)^@4A@2 0)OG
)@@G@@^@)^@)I[2H9<G(=I(2G*)C->GT?F9NG(<I-(H9,F9NEK;^@)@]@[@[^@)^@4A@3 0)@K@[@[OH
)@@G@@^@)^@4A@4 0)^@)^@)^@)^@)^@)^@)JS)B-=G(<H))IT>GT4HD\H0"^@'BK.^@/GT\H13I)?OI
)@@G@@I1-IK?I-9I[> -=G(<^[?BS"(^@@@[^@/I[2H9<F9=G(<^[?BS"^[.@]@[@[^@)^@4A@5 0)OJ
)@@G@@@^@[@[^@)^@4A@6 0)^@)^@)E1-IK)@H@[@[^@)^@4A@7 0)^@)^@)^@)^@)^@)^[4G(!I[ZOK
)@@G@@IT>H(ZH1\G->BK)IT>H(ZIT4GD<HTZH1\G->BS)^@)@ @[@[^@)^@4A@8 0)^@)^@)GL>G9(OL
)@@G@@H0)^@)@C@[@[^@)^@4A@9 0)^@)^@)IT>H(ZIT4GD<HTZI-\I@!BK.AC;^@)@J@[@[^@)^@4OM
)@@G@@AC0 0)^@)^@)I->H(0F93G(!F93I--GT:F9,H9=G*'B(3G(!F93I--GT:FT3G(!F93I--GT:ON
)@@G@@F94H90F*;^@)@J@[@[^@)^@4AC1 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[XOO
)@@G@@ 1,H9=G(ZG0'B(4F9=G(<H-ZIT>GT4BS)^@)@N@[@[^@)^@4AC2 0)^@)^@)ET>H(ZIT4GD<OP
)@@G@@HTVIT>H(ZIT4GD<HTZI-\I[X 1=G(<F93G(<F93HD'G*'B(4G(!I[ZIT>H(ZH1\G-> 1=G(<OQ
)@@G@@H-ZIT(JL>BS)@E@[@[^@)^@4AC3 0)^@)^@)G(,G);^[;^[\G0)C->GT?F9NG(<I-(H9,F9NOR
)@@G@@EK)J*)@]@[@[^@)^@4AC4 0)@D@[@[^@)^@4AC5 0)^@)^@)^@)^@)^@)^[;^@%CLGD9#DTZOS
)@@G@@ETM K)J*)^@)@]@[@[^@)^@4AC6 0)@C@[@[^@)^@4AC7 0)^@)^@)I[2H9<G(=I(2G*)CL?OT
)@@G@@H9<HTZIT2BS)@]@[@[^@)^@4AC8 0)@K@[@[^@)^@4AC9 0)^@)^@)^@)^@)^@)^[;^@/GL?OU
)@@G@@H9<HS"BK'B*)B-+G($HD,B0)B-=G(<H))IT>GT4HD\H0;B0/IT4^[?B0)J*)@]@[@[^@)^@4OV
)@@G@@AK0 0)@^@[@[^@)^@4AK1 0)^@)^@)I1-IK)@G@[@[^@)^@4AK2 0)^@)^@)^@)^@)^@)^[4OW
)@@G@@G(!I[ZIT>H(ZH1\G->BL3G(!F93I--GT:F9,H9=G*;@ @[@[^@)^@4AK3 0)^@)^@)GL>G9(OX
)@@G@@H0)^@)@C@[@[^@)^@4AK4 0)^@)^@)IT>H(ZIT4GD<HTZI-\I@!BK.AC;^@)@H@[@[^@)^@4OY
)@@G@@AK5 0)^@)^@)I->H(0F93G(!F9,H9=G*'B(3G(!F93I--GT:FT3G(!F93I--GT:F94H90F*;OZ
)@@G@@@M@[@[^@)^@4AK6 0)^@)^@)E[2H9<F9GG(6F9NI--GT:FS)I-\I[ZI[2H9<F9?G(6F*!BK.PA
)@@G@@I->H(0F93G(!F9,H9=G*,G->GT?F93HD'G*:AC;^@)@^@[@[^@)^@4AK7 0)^@)^@)JS)GT?PB
)@@G@@( @@@[H93G*)IT9H(+H9?^[4GD+H->^[.^@)@D@[@[^@)^@4AK8 0)^@)^@)G-(IT0H93G**PC
)@@G@@I-\I[ZGL?H9<HTZH->I0(BS)@C@[@[^@)^@4AK9 0)^@)^@)I-\I[ZGL?H9<HTZH->I0!BK.PD
)@@G@@AC;^@)@M@[@[^@)^@4AS0 0)^@)^@)IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[X 1+H-<PE
)@@G@@HTZIT(JL>BK.I->H(0F93G(!F9,H9=G*,G->GT?F93HD'G*;@C@[@[^@)^@4AS1 0)^@)^@)PF
)@@G@@G(,G);^[;^[\G0)CL?H9<HTZETM^[.@]@[@[^@)^@4AS2 0)@D@[@[^@)^@4AS3 0)^@)^@)PG
)@@G@@^@)^@)^@)^[;^@%CL C9DD1ZETM K)^@)J*)@]@[@[^@)^@4AS4 0)@C@[@[^@)^@4AS5 0)PH
)@@G@@^@)^@)I[2H9<G(=I(2G*)GL>G9(H1ZIT2BS)@]@[@[^@)^@4AS6 0)@F@[@[^@)^@4AS7 0)PI
)@@G@@^@)^@)^@)^@)^@)^@)JS)B-+G($HD,B0)BK'B*)GL>G9(H0)J*)^@)@]@[@[^@)^@4AS8 0)PJ
)@@G@@@ @[@[^@)^@4AS9 0)^@)^@)GL>G9(H0)^@)@F@[@[^@)^@4A)0 0)^@)^@)H--GL>H-ZIT4PK
)@@G@@GD<HTY 1<H9,I-ZGD?H)'B(&GD?IT>BS)^@)@Q@[@[^@)^@4A)1 0)^@)^@)G9>H1>ILZHD,PL
)@@G@@IT4IK*D9KCTZD-^ -6H9?GD4AC?I-\I[ZI[2H9<F9?G(6 -+H-\GT:F9?G(6F93I--GT:FT4PM
)@@G@@H90F9+H-\GT:F9?G(6 *1F*(BS)^@)@G@[@[^@)^@4A)2 0)^@)^@)I[2H9<F9?G(6F93I--PN
)@@G@@GT:FT4H90F90IL\GTZH->I1X S'B*1BS)^@)@C@[@[^@)^@4A)3 0)^@)^@)I-\I[ZGL?H9<PO
)@@G@@HTZH->I0:BK.AC;^@)@N@[@[^@)^@4A)4 0)^@)^@)GL?H9<HTZH->I1ZIT4GD<HTVI-\I[ZPP
)@@G@@GL?H9<HTZH->I1XBK.I[2H9<F9?G(6F93I--GT:FT4H90F90IL\GTZH->I1XBS)^@)@E@[@[PQ
)@@G@@^@)^@4A)5 0)^@)^@)JS)H90G(,^[,G(7^[3JD!GL\H))I--GL?G*)J*)^@)@F@[@[^@)^@4PR
)@@G@@A)6 0)^@)^@)DD,HD4F9NI(+F9OGD+H-> [4H90F9+H-\GT:F9?G(6 C;^@)@P@[@[^@)^@4PS
)@@G@@A)7 0)^@)^@)G9>H1>ILZHD,IT4IK*D9KCTZETO -6H9?GD4AC?I-\I[ZI[2H9<F9?G(6 -+PT
)@@G@@H-\GT:F9?G(6F93I--GT:FT4H90F9+H-\GT:F9?G(6F*(BS)@D@[@[^@)^@4A)8 0)^@)^@)PU
)@@G@@G(,G);^@)JS)H9&^[]G($HD,F9NEK)J*)^@)@]@[@[^@)^@4A)9 0)@B@[@[^@)^@4A*0 0)PV
)@@G@@^@)^@)^[;^@%EDDC-ZETM K)J*)^@)@]@[@[^@)^@4A*1 0)@C@[@[^@)^@4A*2 0)^@)^@)PW
)@@G@@I[2H9<G(=I(2G*)ID(G-ZIT2BS)^@)@C@[@[^@)^@4A*3 0)^@)^@)^[;^@/ID(G)"^@'BK.PX
)@@G@@^[(G))J*)^@)@]@[@[^@)^@4A*4 0)@^@[@[^@)^@4A*5 0)^@)^@)I1-IK)@A@[@[^@)^@4PY
)@@G@@A*6 0)^@)^@)^[<^@'^[<H[-IK;^@)@F@[@[^@)^@4A*7 0)^@)^@)^[4G(!I[ZIT3F9,H9=PZ
)@@G@@G*'IT>H(ZIT4GD<HTZH1\G->BS)^@)@D@[@[^@)^@4A*8 0)^@)^@)^[&H95H1= ->IL2H92QA
)@@G@@BL+H9\H->GD,BS)^@)@B@[@[^@)^@4A*9 0)^@)^@)^[2G(:H92G)'HD,I->G9>IK;@D@[@[QB
)@@G@@^@)^@4A00 0)^@)^@)^[(G->H14HD&HD>IK'I-ZHD=F93I-2HD,G8;@E@[@[^@)^@4A01 0)QC
)@@G@@^@)^@)^[0I-2F94H9ZETOF9>H14IL9BL4F9?HD3I-ZI[4IK;@ @[@[^@)^@4A02 0)^@)^@)QD
)@@G@@GL>G9(H0)^@)@B@[@[^@)^@4A03 0)^@)^@)G(2IL\IK'B(&GD?IT>BS)^@)@A@[@[^@)^@4QE
)@@G@@A04 0)^@)^@)IL>HT\IL=BK.A@;^@)@H@[@[^@)^@4A05 0)^@)^@)I->H(0F93ITZH1\G->QF
)@@G@@BK.IT>H(ZIT4GD<HTVIT>H(ZIT4GD<HTZI-\I[XBS)@F@[@[^@)^@4A06 0)^@)^@)HD=G(,QG
)@@G@@I-(G1(G(2BK.I->H(0F93ITZH1\G-> 14F9(G);^@)@M@[@[^@)^@4A07 0)^@)^@)G1(H1=QH
)@@G@@F9(H1ZIT9H(+F94GD+H-> [&H95H1= -2G(:H92G)?HD=G(,I-(G1(G(2 -0I-2F8N]-NE-ZQI
)@@G@@G(,I-2JC(BS)@C@[@[^@)^@4A08 0)^@)^@)HD&^[,H94^[&H95H1=^[4H[>H0)^@)@ @[@[QJ
)@@G@@^@)^@4A09 0)^@)^@)^[+G($HD,^@)@B@[@[^@)^@4A80 0)^@)^@)^[>IL2H92F90IL\GS*QK
)@@G@@GS(BS)@N@[@[^@)^@4A81 0)^@)^@)^[7IL(I->H-, [=HD-G9,F9&HD?G*?^8% K$ -< )$QL
)@@G@@ K%^[(G))BK$ -(G->H14HD&HD>IK)I(,G->GT?GD2G(=^8(BS)^@)@A@[@[^@)^@4A82 0)QM
)@@G@@^@)^@)^[>IL2H92BK.I-2I(>([@@@[BS)^@)@^@[@[^@)^@4A83 0)^@)^@)^[>H1=@L@[@[QN
)@@G@@^@)^@4A84 0)^@)^@)G(?IT>^[(G0)I[4ILZI-\F9NE-ZG(,I-2JC,I[2H9<F9?G(6G(?B)"QO
)@@G@@I-\I[ZI[2H9<F9?G(6G(?^[4H[>H0)@ @[@[^@)^@4A85 0)^@)^@)^@)^[+G($HD,@C@[@[QP
)@@G@@^@)^@4A86 0)^@)^@)^@)^[>IL2H92F90IL\GS*GS(BS)^@)@K@[@[^@)^@4A87 0)^@)^@)QQ
)@@G@@^@)^[7IL(I->H-, [=HD-G9,F9&HD?G*?^8% K$ -< )$ K%^@)HD=^@'^8?HD=G(,I-(G1(QR
)@@G@@G(2 )$@I@[@[^@)^@4A88 0)^@)^@)^@)^@)^[5H1=G(?GD2G(=^[-I))I-*HD3^[0IL\GT>QS
)@@G@@G-5IL>^[?G(6G(?^8(BS)^@)@B@[@[^@)^@4A89 0)^@)^@)^@)^[>IL2H92BK.I-2I(>BS)QT
)@@G@@@ @[@[^@)^@4B@0 0)^@)^@)^@)^[>H1=^@)@J@[@[^@)^@4B@1 0)^@)^@)^@)^@)^[>H-3QU
)@@G@@G*)HD&^[0I-2F94H9ZETOF9>H14IL9F0,I-ZG1\IL!^@.^[0IL\GS)I-*G(,@A@[@[^@)^@4QV
)@@G@@B@2 0)^@)^@)^@)^@)^@)^[+G($HD,@D@[@[^@)^@4B@3 0)^@)^@)^@)^@)^@)^[>IL2H92QW
)@@G@@F90IL\GS*GS(BS)^@)@M@[@[^@)^@4B@4 0)^@)^@)^@)^@)^@)^[7IL(I->H-, [=HD-G9,QX
)@@G@@F9&HD?G*?^8% K$ -< )$ K%I[2H9<G(=I(2G*)^8?HD=G(,I-(G1(G(2 )$@J@[@[^@)^@4QY
)@@G@@B@5 0)^@)^@)^@)^@)^@)^@)^[+G((H1$^[5IT>G))GD3^[-^[6GD2HD-GL?G*)H92^[<H9,QZ
)@@G@@IT4GD,I)$ C;@C@[@[^@)^@4B@6 0)^@)^@)^@)^@)^@)^[>IL2H92BK.I-2I(>BS)@A@[@[RA
)@@G@@^@)^@4B@7 0)^@)^@)^@)^@)^@)^[>H1=^@)@B@[@[^@)^@4B@8 0)^@)^@)^@)^@)^@)^@)RB
)@@G@@^[>H-3G*)^@)@B@[@[^@)^@4B@9 0)^@)^@)^@)^@)^@)^@)^@)^[+G($HD,@K@[@[^@)^@4RC
)@@G@@BC0 0)^@)^@)^@)^@)^@)^@)^@)^[(G0)I[4ILZI-\F9NE-ZG(,I-2JDY 14F9&H92H*.GT\RD
)@@G@@H13I--H14^[4H[>H0)@C@[@[^@)^@4BC1 0)^@)^@)^@)^@)^@)^@)^@)^@)^[+G($HD,^@)RE
)@@G@@@F@[@[^@)^@4BC2 0)^@)^@)^@)^@)^@)^@)^@)^@)^[3G(!F93I--GT:FT3G(!F93I--GT:RF
)@@G@@(A@@@[F94H90F*,GT\H13F9>J[0IK'B(4IL5G*;^@)@L@[@[^@)^@4BC3 0)^@)^@)^@)^@)RG
)@@G@@^@)^@)^@)^@)^[3G(!F93I--GT:FT3G(!F93I--GT:F94H90F*,IL>GD=F9\H1?JC'B(4IL5RH
)@@G@@G*;^@)@B@[@[^@)^@4BC4 0)^@)^@)^@)^@)^@)^@)^@)^@)^[>H1=@B@[@[^@)^@4BC5 0)RI
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[>H-3G*)@C@[@[^@)^@4BC6 0)^@)^@)^@)^@)^@)^@)^@)^@)RJ
)@@G@@^[+G($HD,^@)@L@[@[^@)^@4BC7 0)^@)^@)^@)^@)^@)^@)^@)^@)^[3G(!F93I--GT:FT3RK
)@@G@@G(!F93I--GT:F94H90F*,GT\H13F9>J[0IK'B(&GD?IT>BS)@K@[@[^@)^@4BC8 0)^@)^@)RL
)@@G@@^@)^@)^@)^@)^@)^@)^[3G(!F93I--GT:FT3G(!F93I--GT:F94H90F*,IL>GD=F9\H1?JC'RM
)@@G@@B*)^@)@I@[@[^@)^@4BC9 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[0I-2F94H9ZETOF9>H14RN
)@@G@@IL9F0,IL>GD=F9\H1?JC;^@)@Q@[@[^@)^@5A@0 0)^@)^@)^@)^@)^@)^@)^@)^@)^[3G(!RO
)@@G@@F93I--GT:FT3G(!F93I--GT:F94H90F*,I[2H9<F9?G(6BK.I[4ILZI-\F9NE-ZG(,I-2JDYRP
)@@G@@ 16GD2F9+GD3G*;^@)@P@[@[^@)^@5A@1 0)^@)^@)^@)^@)^@)^@)^@)^@)^[3G(!F93I--RQ
)@@G@@GT:FT3G(!F93I--GT:F94H90F*,H9&G13G(4BK.I[4ILZI-\F9NE-ZG(,I-2JDY 1\G1&IT>RR
)@@G@@I);^@)@C@[@[^@)^@5A@2 0)^@)^@)^@)^@)^@)^@)^@)^@)^[>H1=BS)^@)@L@[@[^@)^@5RS
)@@G@@A@3 0)^@)^@)^@)^@)^@)^@)^@)^[(G0)I[4ILZI-\F9NE-ZG(,I-2JDY 1#E-KF94JD0G*)RT
)@@G@@B*)I-ZGL\H9?G(-H0)I-*G(,@L@[@[^@)^@5A@4 0)^@)^@)^@)^@)^@)^@)^@)^@)^[3G(!RU
)@@G@@F93I--GT:FT3G(!F93I--GT:F94H90F*,H90I-(H(ZG(6GD?BK.G1-H-3G*;@B@[@[^@)^@5RV
)@@G@@A@5 0)^@)^@)^@)^@)^@)^@)^@)^[>H1=BS)@B@[@[^@)^@5A@6 0)^@)^@)HD&^[>IL2H92RW
)@@G@@^[4H[>H0)^@)@F@[@[^@)^@5A@7 0)^@)^@)^[$G(,G(2F9(H13I-2 [JE[#F9NE1# )0 )0RX
)@@G@@ )!A*0 C;^@)@ @[@[^@)^@5A@8 0)^@)^@)IT>H(ZIT4GD<(D@@@[HTVIT>H(ZIT4GD<HTZRY
)@@G@@I-\I[X 1>IL2H92F92G(<BK.G1-H-3G*;^@)@C@[@[^@)^@5A@9 0)^@)^@)G(,G);^[;^[\RZ
)@@G@@G0)ID(G-ZETM^[.^@)+@@@@@0Q@@@@H,,1,                  =====  SEMSELECT  =SA
)@@G@@====.                                                                   SB
)@@G@@                  +@@@@[@H__@[^@)^@)^@1 0)^@)^@)I[2H9<G(=I(2G*)IT>H(ZIT>SC
)@@G@@H->GT4 [-GT4HD\H0'HD,I->G9>IK(BS)^@)@]@[@[^@)^@)^@2 0)@ @[@[^@)^@)^@3 0)SD
)@@G@@^@)^@)GL>G9(H0)^@)@C@[@[^@)^@)^@4 0)^@)^@)^@)^[<GD3G*)GD<I-(H9,^[\G0)^@)SE
)@@G@@@B@[@[^@)^@)^@5 0)^@)^@)^@)^@1BK)^@)^@)^[+G($HD,@K@[@[^@)^@)^@6 0)^@)^@)SF
)@@G@@^@)^@)^@)^@)^@)^[7IL(I->H-, @$IT\IL2JC)I(,HD!I[?G(!G(,I->G))G1>GD4I(2G*$SG
)@@G@@ C;^@)@B@[@[^@)^@)^@7 0)^@)^@)^@)^@)^@)^@)^@)^[3I-\I@;@B@[@[^@)^@)^@8 0)SH
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[>H1=BS)@G@[@[^@)^@)^@9 0)^@)^@)^@)^@1AK'^@)^[1HD=SI
)@@G@@F9NEK;^[;^@/ID(G)"^@'BK.^[(G))J*)^@)@]@[@[^@)^@)AC0 0)@F@[@[^@)^@)AC1 0)SJ
)@@G@@^@)^@)^@)^@2A8'^@)^[OJD0G(ZH1-H(>F9NELZHD,I->G9>IK;^@)@]@[@[^@)^@)AC2 0)SK
)@@G@@@F@[@[^@)^@)AC3 0)^@)^@)^@)^@2B@'^@)^[OJD0G(ZH1-H(>F9NELZGL\H9?G(-H0;^@)SL
)@@G@@@]@[@[^@)^@)AC4 0)@E@[@[^@)^@)AC5 0)^@)^@)^@)^@2BC'^@)^[4JD0G(ZH1-H(>F9NSM
)@@G@@ELZIL>GD?BS)@]@[@[^@)^@)AC6 0)@I@[@[^@)^@)AC7 0)^@)^@)^@)^@3A@'^@)^[(G-ZSN
)@@G@@H-(IT4F93IK1BS)JS)B-(G))H-(IT4B0)BK'B*)HD=^[.^@)@]@[@[^@)^@)AC8 0)@L@[@[SO
)@@G@@^@)^@)AC9 0)^@)^@)^@)^@3AC'^@)^[(G-ZH-(IT4F9NEK2BS)JS)B))HD=^[?HD3I))B0)SP
)@@G@@BK'B*)B-(G))H-(IT4B0?HD=^[.^@)@]@[@[^@)^@)AK0 0)@B@[@[^@)^@)AK1 0)^@)^@)SQ
)@@G@@^@)^@3AK'^@)^[6GD2F9=G(<([@@@[F9NEK;@]@[@[^@)^@)AK2 0)@F@[@[^@)^@)AK3 0)SR
)@@G@@^@)^@)^@)^@3AS'^@)^[#H9,E1-ILOJD0G(^G(<F9NELZI1=BS)^@)@I@[@[^@)^@)AK4 0)SS
)@@G@@^@)^@)^@)^@)JS/GT\H13I)) -6GD2 -4JD0G*)G->GS"^@'BK.^@/I1-IK)G->GS"^[.^@)ST
)@@G@@@F@[@[^@)^@)AK5 0)^@)^@)^@)^@3A)'^@)^[#H9,E1-ILOJD0G(^G(<H-ZETMF82BS)^@)SU
)@@G@@@L@[@[^@)^@)AK6 0)^@)^@)^@)^[;^@/GT\H13I)?I1-IK?I-9I[>^[=G(<^[?B0)BK'B*/SV
)@@G@@GT\H13I))I1-IK)I-9I[>^[=G(<B0)J*)^@)@]@[@[^@)^@)AK7 0)@F@[@[^@)^@)AK8 0)SW
)@@G@@^@)^@)^@)^@3A*'^@)^[#H9,E1-ILOJD0G(^G(<H-ZETMF81BS)^@)@M@[@[^@)^@)AK9 0)SX
)@@G@@^@)^@)^@)^[;^@/^[<H9,IT4 -6GD2^@?I-9I[>^[=G(<^[?B0)BK'B*)B-<H9,IT4 -6GD2SY
)@@G@@ -4JD0G*?G->GS)H)"BS)^@)@E@[@[^@)^@)AS0 0)^@)^@)^@)^@/GT\H13I)?I1-IK?I-9SZ
)@@G@@I[>^[=G(<B0)J*)^@)@]@[@[^@)^@)AS1 0)@F@[@[^@)^@)AS2 0)^@)^@)^@)^@3A0'^@)TA
)@@G@@^[#H9,E1-ILOJD0G(^G(<H-NCTZETMF81BS)@N@[@[^@)^@)AS3 0)^@)^@)^@)^[;^@/GT\TB
)@@G@@H13I)?I1-IK?I-9I[>^[=G(<^[?BS"^@'BK.^[=G(<H--IL>^@/GT\H13I)?I1-IL4JD0G*)TC
)@@G@@G->GS)H)"^@)@D@[@[^@)^@)AS4 0)^@)^@)^@)^@)B->H1=^[\G0)G->GT?GD2G*)B0)J*)TD
)@@G@@@]@[@[^@)^@)AS5 0)@E@[@[^@)^@)AS6 0)^@)^@)^@)^@3A8'^@)^[^G(<H-ZET>GT4HD\TE
)@@G@@H1ZETMBS)^@)@]@[@[^@)^@)AS7 0)@C@[@[^@)^@)AS8 0)^@)^@)^@)^@3B@'^@)^[+G($TF
)@@G@@HD,F9NEK;^@)@]@[@[^@)^@)AS9 0)@C@[@[^@)^@)A)0 0)^@)^@)^@)^@3BC'^@)^[+H-\TG
)@@G@@GT:F9NEK;^@)@]@[@[^@)^@)A)1 0)@D@[@[^@)^@)A)2 0)^@)^@)^@)^[>H1=BS)JS)G(,TH
)@@G@@G))H9&^[<GD3G*)J*)@^@[@[^@)^@)A)3 0)^@)^@)G(,G);+@@@@@0[@@@@H,N,,.0[@@@@TI
)@@G@@L,1.  @[@[@@@FIN  @@@[@@0[@@@@R .   @ @[@@    RUNID:  AW0990   PROJECT: TJ
)@@G@@(A@@@@08786             USER: 9000207929  @D@]@@  ITEM                  TK
)@@G@@             AMOUNT      COST @D@]@@CPU TIME                     00:00:0TL
)@@G@@0.178        $0.01@D@[@@FILE I/O REQUESTS                       20      TM
)@@G@@ $0.01@D@[@@FILE I/O WORDS                       22408       $0.00@D@[@@TN
)@@G@@MEMORY USAGE                         0.003       $0.00@D@[@@CARDS IN    TO
)@@G@@                             4       $0.00@D@[@@PAGES PRINTED           TP
)@@G@@                16       $0.48@D@[@@SOFTWARE SUPPORT                    TQ
)@@G@@     6       $0.09@D@[@@JOB CHARGE                               1      TR
)@@G@@ $0.08@D@]@@TOTAL COST                                       $0.67@J@]@@TS
)@@G@@    THE ABOVE DOLLAR AMOUNTS ARE APPROXIMATE AND ARE BASED ON RATES FOR TT
)@@G@@WHILE-YOU-WAIT    @D@[@@USER BALANCE                                   $TU
)@@G@@142.58@C@]@@    INITIATION  TIME:   02:42:24 DEC  1,1978    @C@]@@    TETV
)@@G@@RMINATION TIME:   02:42:30 DEC  1,1978    @C@]@@   PREVIOUS RUN TIME:   TW
)@@G@@02:39:02 DEC  1,1978    0^@@@@D,@@TTY RUN=CLS,BRF=ON  _@_____[__________TX
)@@G@@_V______________________________________________________________________TY
)@@G@@________________________________________________________________________TZ
)@@G@@_________________________V______________________________________________UA
)@@G@@________________________________________________________________________UB
)@@G@@________________________________________________________________________UC
)@@G@@________________________________________________________________________UD
)@@G@@________________________________________________________________________UE
)@@G@@________________________________________________________________________UF
)@@G@@________________________________________________________________________UG
)@@G@@________________________________________________________________________UH
)@@G@@________________________________________________________________________UI
)@@G@@________________________________________________________________________UJ
)@@G@@________________________________________________________________________UK
)@@G@@________________________________________________________________________UL
)@@G@@________________________________________________________________________UM
)@@G@@________________________________________________________________________UN
)@@G@@________________________________________________________________________UO
)@@G@@________________________________________________________________________UP
)@@G@@________________________________________________________________________UQ
)@@G@@________________________________________________________________________UR
)@@G@@________________________________________________________________________US
)@@G@@________________________________________________________________________UT
)@@G@@________________________________________________________________________UU
)@@G@@________________________00    @^@@@@-102      SMQUES    31.0@I@@@@      UV
)@@G@@    DIISTR                                                        . DI2.UW
)@@G@@00    @^@@@@-103      SMQUES    31.0@I@@@@          DIIEND              UX
)@@G@@                                          . DI2.00    @I@@@@          DIUY
)@@G@@OSTR                                                        . DI2.00    UZ
)@@G@@@I@@@@          L,U       A1,,A0            . SET BASE AS CURRENT SEG   VA
)@@G@@      . DI2.00    @I@@@@          DIOEND                                VB
)@@G@@                        . DI2.00    @^@@@@-131      SMQUES    31.0@I@@@@VC
)@@G@@          DIISTR                                                        VD
)@@G@@. DI2.00    @^@@@@-132      SMQUES    31.0@I@@@@          DIIEND        VE
)@@G@@                                                . DI2.00    @I@@@@      VF
)@@G@@    DIOSTR                                                        . DI2.VG
)@@G@@00    @I@@@@          L,U       A0,,A2                                  VH
)@@G@@            . DI2.00    @I@@@@          DIOEND                          VI
)@@G@@                              . DI2.00    @^@@@@-135      SMQUES    31.0VJ
)@@G@@@#@@@@          DIOSTR  @ @@@@          LXI       A2,TAL    @#@@@@      VK
)@@G@@    DIOEND  @^@@@@-139      SMQUES    31.0@#@@@@          DIISTR  @^@@@@VL
)@@G@@-140      SMQUES    31.0@#@@@@          DIIEND  @#@@@@          DIOSTR  VM
)@@G@@@ @@@@          SSL       A2,18     @A@@@@          D         SDEX1,INDEVN
)@@G@@F,A2  @#@@@@          DIOEND  @^@@@@-143      SMQUES    31.0@I@@@@      VO
)@@G@@    DIISTR                                                        . DI2.VP
)@@G@@00    @^@@@@-145      SMQUES    31.0@I@@@@          DIIEND              VQ
)@@G@@                                          . DI2.00    @I@@@@          DIVR
)@@G@@OSTR                                                        . DI2.00    VS
)@@G@@@I@@@@          L,U       A0,,X11                                       VT
)@@G@@      . DI2.00    @D@@@@          XER11     0101              . QUE BASEVU
)@@G@@ = 0  @I@@@@          DIOEND                                            VV
)@@G@@            . DI2.00    @^@@@@-155      SMQUES    31.0@#@@@@          DIVW
)@@G@@ISTR  @^@@@@-157      SMQUES    31.0@#@@@@          DIIEND  @#@@@@      VX
)@@G@@    DIOSTR  @E@@@@          L,U       A2,,A1            . SAVE LAST QUE VY
)@@G@@SEG.  @D@@@@          LXI,U     A2,,A0            . SAVE QUE BASE @#@@@@VZ
)@@G@@          DIOEND  @^@@@@-159      SMQUES    31.0@#@@@@          DIISTR  WA
)@@G@@@^@@@@-162      SMQUES    31.0@#@@@@          DIIEND  @#@@@@          DIWB
)@@G@@OSTR  @ @@@@          L,U       A1,,A2    @ @@@@          SSL       A2,1WC
)@@G@@8     @ @@@@          LXI,U     A0,,A2    @ @@@@          L,U       A2,,WD
)@@G@@A0    @#@@@@          DIOEND  @^@@@@-174      SMQUES    30.0@#@@@@      WE
)@@G@@    DIISTR  @^@@@@-176      SMQUES    30.0@#@@@@          DIIEND  @#@@@@WF
)@@G@@          DIOSTR  @ @@@@          L,U       A5,,A1    @E@@@@          L,WG
)@@G@@U       A1,(SEGSIZ-3)/2-2 . GET NO. ENTRIES - 2 @ @@@@          LXI     WH
)@@G@@  A1,KM1    @G@@@@          S         A5,BEGSEG         . PUT BEGIN OF SWI
)@@G@@EG IN EACH ENTRY  @#@@@@          DIOEND  @^@@@@-178      SMQUES    30.0WJ
)@@G@@@#@@@@          DIISTR  @^@@@@-182      SMQUES    30.0@#@@@@          DIWK
)@@G@@IEND  @#@@@@          DIOSTR  @ @@@@          JMGI      A1,$-3    @F@@@@WL
)@@G@@          SZ        SMQLNK            . CLEAR LINK IN LAST ENTRY  @ @@@@WM
)@@G@@          S         A5,BEGSEG @E@@@@          J         CHKFUL          WN
)@@G@@  . START ALL OVER AGAIN@#@@@@          DIOEND  @ @@_@-448      SMQUES  WO
)@@G@@  31.241    @I@@@@          DIOSTR                                      WP
)@@G@@                  . DI2.00    @I@@@@P         PROC                      WQ
)@@G@@                                    . DI2.00    @I@@@@QUEQE1*   NAME    WR
)@@G@@                                                      . DI2.00    @I@@@@WS
)@@G@@          +         0                                                   WT
)@@G@@. DI2.00    @I@@@@*         QGEN      P(1,1)            . ACTUAL QUEUE  WU
)@@G@@                  . DI2.00    @I@@@@          END                       WV
)@@G@@                                    . DI2.00    @I@@@@I         DO 2*DMRWW
)@@G@@MAX  ,QU(I)  QUEQE1  5                                . DI2.00    @I@@@@WX
)@@G@@SMDMQT* . TABLE OF ABOVE QUEUES                                         WY
)@@G@@. DI2.00    @I@@@@I     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ED
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ER
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ES
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ET
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ID
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@II
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ME
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ML
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ND
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@5S@5?@C@^R(^@@@5?^R(@@@@4]@@@@@[@@@@@@@@@@[5OF
)@@G@@@]G@@W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@68-2  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!@C@@@E^@@@[\^@V@@S^MEOH
)@@G@@@[&^N<@@=^RA@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___OI
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___OJ
)@@G@@R#W@@DR#?@@EA#!)@@;K)@@S/C)@CAR3?@@EAB?@@BR#?@@CA#W@@DC G@@DG G@@BC W@@AOK
)@@G@@GDW@@^H[@@@L/D@@CNN^W@@BM#Y)@@A#W@@D/KF@@[C W@@BH[K@@KN@K@@LM#Y)@@[ G@@BOL
)@@G@@0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/ V@@@C[W@@A[ W@@^;[K@@M[[W@@A[ W@@DOM
)@@G@@'=@@@[R#W@@D/K@@CDRBW@@AABW@@DC[W@@ HDW@@B[[W@@ CDW@@BT9K@@W[DW@@^/KF@@@ON
)@@G@@0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/ V@@@RBW@@AABW@@^RBW@@DD8)___AF!@@@OO
)@@G@@PBW@@AO;K@@[;GK@@=W8K@@W/@)@D]O;K@@[R#)@@HT8)@@WAF?@@^O#W@@ '=@@@#A#W@@ OP
)@@G@@C5W@@#/ V@@@/KF@@[R#W@@DR#?@@CR#.)@@A#/@@EA#W@@D;C0@@Y%80@@_/K@@DQP;K@@[OQ
)@@G@@A#W@@D/KF@@[R#/@@E;K0@@S/C0@DUR3/@@E!^/@@BRB/@@BC G@@DG[@@@JC W@@AGDW@@^OR
)@@G@@H[@@@L/D@@EAN@K@@JM#!)@@A#W@@DR#/@@E;K0@@S/C0@D(R3/@@EPB/@@B/G;@@]C G@@DOS
)@@G@@G[@@@J[ G@@DC W@@AGDW@@^H[@@@L/HF@@]P#0@@K0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ OT
)@@G@@C5W@@#/[K@D"%9K@@ /KF@@@(^G@@#/KF@@@C[W@@A[ W@@^;[K@@M[[W@@A[ W@@D'=@@@[OU
)@@G@@R#0@@K/K@@D:P#0@@KN@K@@JM#!)@@R#0@@K0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#OV
)@@G@@/[K@EP%9K@@ /KF@@@(^G@@#/KF@@@C[W@@A[ W@@^;[K@@M[[W@@A[ W@@D'=@@@[R#W@@DOW
)@@G@@/K@@DWR#W@@AABW@@^ABW@@D;@K@@M'=@@@#C[W@@ GDW@@B[[W@@ C5W@@#/[K@E:%9K@@ OX
)@@G@@/KF@@@(^G@@#/KF@@@ABW@@^;@K@@MA#W@@A'=@@@[/KF@@[0@G@@#'=@@@AC[W@@ GDW@@BOY
)@@G@@[[W@@ /KF@@@[@@^@@C8W@@@KCK^@@H8)@@[&;K@FGC@@@@H'=@@@HG8W@@@ @H@@@>@@@I)OZ
)@@G@@/K@@FD>@@@I-/KF@@[C8H@@@?8I@@@/K@@E;C@@@IZC8K@@#/KF@@@C@@@IOC8K@@[/KF@@@PA
)@@G@@C@@@IUC8K@@]/KF@@@L8@@@[C@)^@@G8)@@[*@I@@@?CY@@@/K@@FRG),@@@/K@@FL%CI@@@PB
)@@G@@/KF@@@C)"@@@H80@@[T80@@AG="@@@9?I@@[?80@@BC@K@I+/KF@@[N8W@@@C^@^@@G8@@@[PC
)@@G@@C9K@@[ @@^@IN8)@@@(@G@@@/K@@GG(4G@@@/K@@F/%1W@@@/K@@GGC?W@@@!8K@@A/K@@F_PD
)@@G@@%(K^@I @@^@H[(K^@I9??@@[C-G@@@:9@@@[C@0@I+')H@G/H9@@@[T9@@@AG>G@@@')H@H^PE
)@@G@@G)G@@@G8@@@[/K@@F$:9K@@[/K@@G^C*?@@@:8)@@.N8)@@[%[K@[[/K@@F//K@@F3%@)@I+PF
)@@G@@[5@^@H:@)@I+[-K^@H/K@@F/(@@@[]:(K^@I/K@@GL[(K^@I @@^@H:[K@[[/K@@GTG9K@@[PG
)@@G@@*@G@@@/K@@F& @@^@H @@^@I/KF@@@:(K^@I *@^@I9?K^@H98V@@@C8@@@-[=@^@I(?@^@IPH
)@@G@@/KF@@[C@@^@UD8)@@@C80@@@C!@^@I8^@@G?1@@@@I!8)@[@C80@@E[))^@I[=0^@I/KF@@[PI
)@@G@@C8K@@@;=@@@A?8K@@'?8K@@0/K@@G7(@@@@JC80@[@H8K@@0T8)@@EG8!@@@/K@@G>/^0@G*PJ
)@@G@@%8K@@+:8K@@-C8.@@@/@0@G*/K@@G>9*)^@J9*)^@L[@)^@N[@)^@O[@)^@P9*)^@Q9*)^@SPK
)@@G@@[@)^@U/K@@GB[1@^@H[!@^@H[(@^@H[>@^@H[5@^@I[1@^@I[!@^@IC80@@F+8K@@_:8)@@ PL
)@@G@@;^@@@A8#0@HI9*@^@]C@@@I<C@K@I=C8)@@BC@0@I+[@"^@ 8#)@HRN4K^@H9!@^@J/\)@I PM
)@@G@@C9K@@*(4@^@H*)@^@H')H)@@N0K^@H9!@^@L*@@@[[/K@@H&C[@@I>N8K@@^/\)@I N?K^@HPN
)@@G@@(@@@[[/K@@H0C9K@@(')H)@@C[@^@N/\)@I C9K@@)')H)@@(*@^@H*=@^@H/K@@H6C@@@I&PO
)@@G@@'=@@@J/KF@@@C9K@@/')H)@@N*K^@HC[@^@O/\)@I N=K^@H(@@@[[/K@@H3C9K@@/')H)@@PP
)@@G@@C[@^@P/\)@I /K@@H3;>@@@A')H)@@8KK@I#/KI@@@[5W@@@[1W@@@[!W@@@[(W@@@[>W@@@PQ
)@@G@@/\0@IH[-W)@@Q;K@IB/KJ@@@PROCESSOR CALL ERROR    @[^@IKABNORMAL RETURN FRPR
)@@G@@OM READ$    @[ @IPTOO MANY SPECIFICATIONS @[^@IV]@@@@@[@@@@@      @@[^@ PS
)@@G@@@@[@IBTPF$  @@G^@[?@@@[@?A@@[V?B@@[X?C@@@<?D@@[Y?E@@@)?F@@[[?G@@[]?H@@[#PT
)@@G@@?I@@[^?J@@[ ?K@@[A?L@@[B?M@@[C?N@@[D?O@@[E?P@@[F?Q@@[G?R@@[H?S@@[I?T@@[JPU
)@@G@@?U@@[K?V@@[L?W@@[M?X@@[N?Y@@[O?Z@@[P?[@@[Q?\@@[R?]@@[S?^@@[T?_@@[U @@@@(PV
)@@G@@!A@@@!"B@@@:#C@@@/$D@@@.%E@@@"&F@@@&'G@@@=(H@@@%)I@@@**J@@@>+K@@@',L@@@_PW
)@@G@@-M@@@-.N@@@?/O@@[W0P@@@01Q@@@12R@@@23S@@@34T@@@45U@@@56V@@@67W@@@78X@@@8PX
)@@G@@9Y@@@9:Z@@@$;?@@@;<\@@@\=!@@@,>^@@@+?_@@[ZC[@@L#A#K@@L;G@@@M;CK@@M/@V@@@PY
)@@G@@H9K@@[G[K@@HT8K@@# @@@@GW8@@@]/@K@J5O;@@@[R#0@L^;^0@@MK@@@@IP;K@@[&;K__"PZ
)@@G@@;*@@@MQ#@@@FR]0@@LC[K@@G;DK@@MH9K@@[&'0__"R#)@L ')I)KERB_@I$;^0@@D/C0@K@QA
)@@G@@[[H)@@C[@@L#8^K@K@;G@@@M;CK@@M/KH@@@/K@@KKR3;@@@R\;@@@R:;@@@R$;@@@R<;@@@QB
)@@G@@R7;)@@Q;)@@ /K@@K[&;@@@@/@F@@@C[K@@G&#@@@FR]0@@H&;)@@[&'0@@[R#K@LAR#0@L#QC
)@@G@@8^K@KXC[F)@@;=0@@D;*0@@X;C0@@X=80@[@/K@@K>R7_@I$/K@@K&R3_@H$')H)K' @@@@JQD
)@@G@@/D@@KY/ K@KV;G@@@M;CK@@MR]0@@GT8K@@] @@@@GW8@@@#/@V@@@O;@@@[P;K@@[R;0@@ QE
)@@G@@A<"@@@A$"@@@/^V@@@A:"@@@A\"@@@/KF@@@A7"@@@A3"@@@A\"@@@A:"@@@A$"@@@/K@@L@QF
)@@G@@A<")@@R#K@LA/K@@K$)@@@@@@@@^@)__"@@ @@[@@@R;K@@[A:K^[X/K@@LF *@^[XA#@^[QQG
)@@G@@A]0^@X*@@^@)/K@@M@0@@^[R/K@@LW(4@^[V(@@^[R/K@@M?()@^@Z/K@@U9 )@^@ZC[K^[SQH
)@@G@@G9K@@[[[K^[R[[K^[S/K@@P-*4@^[V/K@@L<R#@^[.0@G@@@/K@@U9 @@^[R/K@@M?R:K^[XQI
)@@G@@()@^[XA$K^[X @@^[RR#K^MF*@@^@+C@K^@<*=@^[XO;K@@[(@@^@+/K@@L0[@K^@</K@@L3QJ
)@@G@@A#K^["R#K^[2A#K^]ER;K@@BA:K^[V )@^[X(@@^P!/K@@X@R3@^P2*=@^[X/K@@L.+8@@@\QK
)@@G@@/K@@L")8@@@KA3K^P2/K@@WXR#@^[/R#K^[,A#K^[1R;K^[,*=@^[XR;K^[0NCK^[QM#H)@@QL
)@@G@@R;@^[4/,0@DF/K@@YH/K@@Y<R#@^@W*=@^[XO#@^MG*0@^[WO#@^MHA#@^@VR3@^["0@@^["QM
)@@G@@/K@@MRRF@^[";C@@@AO#@^@WO;@@@[A#@^@W0@@^["/K@@M@R<K^P??)K^["/K@@M@(*@^["QN
)@@G@@/K@@M<!*K^["/K@@M@(=@^["/K@@M$R;KNEWABK^[1R\K^["A#K^[\A:K^[V ^@^ME/K@@X]QO
)@@G@@R#@^[/R;K^[,*=@^[XR;K^[0NCK^[QM#H)@@R#@^[N @@^["R;K@@@]@K^[-(=@^[W*)@^[WQP
)@@G@@/K@@T9(*@^@Z/K@@NGR;@NEWAB@^[1R<@^P?O;@@@[A<@^["*4@^@Z/K@@TR*=@^@Z/K@@Y,QQ
)@@G@@ @@^@ZR#@^[MP#@^@?N@K@@GR#@^@?R#K^[&M#W)@@/K@@N_(=@^[X/K@@NMR;)@@[A<)^[XQR
)@@G@@'=@@[6/K@@NO'=@@@H )@^[XA3@^["K8@^]EABK^[M*4@^[V/K@@W R;@NEWAB@^[1R;@@@[QS
)@@G@@A$@^["(?@^[V/K@@N&*=@^[X/K@@N=C@@^[O'=@@@I/K@@N&C@@^[P'=@@@8*4@^[V/K@@W QT
)@@G@@(=@^[X/K@@N_R#K^MIR#)^MJN0K^["M#Y)@@R;K^]ER#)@@HR3@^["/,0@KNR#K^[&R\)^[:QU
)@@G@@R;@@@ /,0@O*')I@O2/K@@N'8#)@N5/K@@OAN0K^["R#K^MJR#)^MIM#Y)@@/K@@OYR#K^[&QV
)@@G@@R\)^[:R;@@@ /,0@O*')I@O2/K@@OY8#)@O]/,0@O*%80@@=/K@@O5 @@@@L/,0@O*A#0^[:QW
)@@G@@/,0@O*:80@@ /K@@OWC[@^[:;(@@@A[[@^[:A<0^[:G9K@@[/,0@O*:80@@ /K@@OWC[@^[:QX
)@@G@@;(@@@A[[@^[:A<0^[:G9K@@[[DK^[:/K@@M?**@^[W/K@@M?R<K^P?O;K@@[A<K^["*4@^@ZQY
)@@G@@/K@@QN*?@^@Z/K@@T%/K@@W ')G@O?8#F@@@R;@@@ /KF@@@R<.)@@R$.@@@R:.@@@R\.@@@QZ
)@@G@@R3.@@@R7.@@@%)0^[:%=0^[:%*0^[: *@^[W*4@^@Z/K@@T) @@^@Z9!@^]E9(@^@_9!@^]GRA
)@@G@@9(@^[[/\)@P;/K@@YH%80@@ /K@@PI?[K^[U/K@@YH[[K^[R[[K^[S @@^[T @@^[U%[K^[?RB
)@@G@@/K@@PF @@^[R/K@@M?![K^[?/K@@U9/K@@YH%80@@,/K@@YH/\)@P\/,0@O*/\)@P;/K@@YHRC
)@@G@@%80@@-/K@@PZ*@@^[X/K@@T^R;0@@[A70^@ZH[K^[R/HK@YH[ K^@YC[K^[R/K@@P-%80@@ RD
)@@G@@/K@@YH?[K^[R/K@@YH[[K^[TR#0^[?!@0^[R/K@@YHC[@^[UG9@@@[%[@^[R/K@@P!H @^[\RE
)@@G@@[[@^[R[[K^[U/K@@U9[[K^[R*@@^[U/K@@P6C[@^[S![@^[R/K@@YH/K@@P9C[@^[U![@^[RRF
)@@G@@/K@@YH[[K^[S/KI@@@ @@@@L%80@@ /K@@Q]:@K^[M/KI@@@/,0@O*/K@@P/!80@@0!80@@'RG
)@@G@@/KI@@@/K@@QJ%@K^[M/K@@QF/[Y@@@R;0@@ /KI@@[/,0@O*!80@@0!80@@'/KI@@[H80@@0RH
)@@G@@T9K@@EG[K@@J/K@@QA @@^@=R#@^[&OF@^[QA#@^@$R#@^@?O3@^["A#@^[MR#@^[&R#K^@?RI
)@@G@@N0K^["M#W)@@R;@@@ A7H@@@RF@^[QO;@@@]N@K@@GR;K^[,R#@^[&M#H)@@**@^@Z/K@@TRRJ
)@@G@@R#K^@?R#@^@!/,0@O*/\)@P;/K@@RG[DK^@=%80@@ /K@@Q3/\)@P;/K@@Q"/K@@TD%80@@,RK
)@@G@@/K@@Q"/,0@O*/\)@P;/K@@TD[ K^@=%80@@ /K@@Q"/\)@P;/K@@Q"/K@@TDA30^@ZA#@^@:RL
)@@G@@A#K^@%(C@^@=/K@@TGRF@^[QS8@@@A?^K^@=/K@@TG*^@^@=RBK^@=?CK^@=/K@@TG/K@@R'RM
)@@G@@:@K^[M/K@@TDA30^@ZA#@^@:A#K^@%9?)^[ZC9K@@[9?@^@%/,0@S6:@)^@&/K@@TJ')J@S"RN
)@@G@@/K@@R,8#0@RVR;0@@ [DK^@=9*)^@*:@@^[M/K@@TD/,0@S6:1@^@Z/K@@R2:@)^@&/K@@TJRO
)@@G@@')J@S"/K@@R%8#0@R*R;0@@ G9K@@[/K@@RXCDK^@=9?)^@*G9K@@[/K@@RNG9K@@[8#0@R1RP
)@@G@@R;0@@ /K@@RN9*@^@%/,0@S6%1@^@Z/K@@R8[ K^@=/K@@R'%@@^[M/K@@R3C9K@@[9?@^[ZRQ
)@@G@@9?)^[&/,0@S6:DK^@=/K@@S#/,0@S'G9K@@[/K@@R.(^@^@=/K@@SE: K^@=/K@@SEG9K@@[RR
)@@G@@/,0@S6/K@@S CDK^@=9*@^@*9?@^@%/,0@S6:1@^@Z/K@@SQ/,0@S'G9K@@[:@)^@$/K@@S)RS
)@@G@@%@@^[M/K@@SH(^@^@=/K@@S)9?@^@*:@@^@&/K@@S):@)^@$/K@@S)/,0@S6/,0@S'/K@@STRT
)@@G@@C[K^[,%[Y@@@/K@@S$:@)^[&/K@@S*P;)@@[/K@@S-O;)@@[P#)^[&A3)^["R;0@@[A\0^@ZRU
)@@G@@A<0^@ZRB0^@Y/^0@S1 4@^@Z/K@@W P;0@@[AB0^@YR#0^[SA#0^[R/K@@W ')H@U!8#V@@@RV
)@@G@@R;K@@ /KF@@@')J@U38#;@@@R;0@@ /KF@@@%-I)@@%>I@@@%(I@@@%!I@@@%1I@@@%5I@@@RW
)@@G@@9?K^@,9*K^@.R#@^@''=@@@I/K@@YH9?K^@29*K^@./K@@TM9?K^@49*K^@./K@@TM9?K^@0RX
)@@G@@9*K^@./K@@TMR#@^@';@@@@MO3@^[";@@@@M'=@@@IR#@^[&R#K^[ZNCK^[QM#H)@@RF)^@>RY
)@@G@@C@@^@-G8@@@[[@@^@-/K@@S(C9@@@[[(@^@Z9!@^@89(@^@.R#@^@''=@@@IC@@^@-G8@@@[RZ
)@@G@@[@@^@-/K@@QN9!@^@69(@^@.R#@^@''=@@@IC@@^@-G8@@@[[@@^@- @@^[R @@^[S @@^[TSA
)@@G@@ @@^[UC9@@@[[(@^[W @@^@Z/K@@M?9?@^[=9?)^[&RA0^[*/%0@U#R#@^[(AB@^[='=@@@HSB
)@@G@@R#@^[=R;K@@ RA0^[%')H@U!8#K@UAR;K@@ P'0@@[:9@@@-/K@@Y>:9@@@)/K@@U-:9@@@@SC
)@@G@@/K@@T/; @@@ ;DK@@Z/>@@UU8^K@UM/K@@T/')H@U!8#K@UPR;K@@ P'0@@[')J@U38#0@UTSD
)@@G@@R;0@@ /K@@UKC9@@@ 8^K@UX/K@@T/')J@U38#0@U)R;0@@ /K@@UV9*@^[=AA0^[*R;K@@BSE
)@@G@@A:K^[VR;K@@*A\K^[3%80@@ O;)@@[P#)^[&A3)^[" )@^[X/K@@ZQC-G)@@C>G@@@C(G@@@SF
)@@G@@C!G@@@C1G@@@C5G@@@[-I)@@[>I@@@[(I@@@[!I@@@[1I@@@[5I@@@R#@^[/R#K^[,A#K^[1SG
)@@G@@R;K^[,*?@^[XR;K^[0NCK^[QM#H)@@R;@^[4/,0@DF/K@@YH/K@@YVR;)@@+C@@^["[@@^@<SH
)@@G@@0@@^["/K@@VI*@@^@+ ^@^[" ?@^[" =@^["%4)^["/K@@VNR<)^["A\)^[X/K@@VTR\K^[XSI
)@@G@@A<K^[X1@@^["/K@@VZ0@@^[R/K@@L&R;K@@BA:K^[V!8)@@](@@^P!/K@@X@/K@@WXR<K^P?SJ
)@@G@@R:)^["A#)^[-?)K^["/K@@WF(*@^["/K@@V*!*K^["/K@@WFR#)^[?O;)@@[A#)^[??@)^[RSK
)@@G@@/K@@W :@)^[R*@@^[T/K@@V2 @@^[R/K@@W O;K@@[]@K^[-%@)^[T/K@@WFP#)^[RO;)@@[SL
)@@G@@A#)^[\ @@^[R @@^[T(4@^@Z/K@@WFR3)^["AF)^@>R#)^[&R#K^[ZNCK^[QM#Y)@@ABK^@&SM
)@@G@@/K@@WFR;K@@BA:K^[VC9@@@ 0@@^[-C9@@@*[!@^[3*4@^[V/K@@ZF(0@^[V/K@@ZFC)K^P?SN
)@@G@@!*K^P*/K@@Y2R#)^[-/C)@WR/@)@WV]*)^["/K@@WX?)K^["/K@@X@!*K^["/K@@WX @@^[-SO
)@@G@@ *@^["R#0^[X/,0@Z2 ^@^MER#K^["(@@^@+/K@@W>(=@^["C@K^@<[@K^]D/GK@W(=80@[[SP
)@@G@@/K@@W?R;)^]EAB)^]B/K@@W\R;)^#EAB)^]B/,0@ZZR;@^[_/,0@C@/K@@YHR#@^@W*=@^[XSQ
)@@G@@O#@^MG*0@^[WO#@^MHA#@^@VR3@^]D0@@^]D/K@@W.RF@^]D;C@@@AO#@^@WO;@@@[A#@^@WSR
)@@G@@(*@^[V/K@@LL/,0@Z2R#0^[X>80[@[/K@@XFRB@^ME%8@@W\/,0@ZWR]0^[Z/K@@XGR]0^[/SS
)@@G@@R#@^[/QB@^[QNCK^[QM#F)@@ *@^[VR<)^["C9K@@];G)@@=W8)@@EO;0@@0;G0@@A8^K@XNST
)@@G@@;[@@@M[ @^[30@@^["/K@@X2(4@^[W/K@@X2(0@^[W/K@@X2R#)^]QR#0^]R;C0@@S;*0@@SSU
)@@G@@**@^[X9?)^]W?@)^[+/K@@YE%@)^[+/K@@X,?@0^[</K@@YE:@0^[</K@@YEA#)^[+A#0^[<SV
)@@G@@R;)@@ A3)^[3R#K^["C[K^[X=9K[@[R#K^]DR#0^[1R#)^[3R]0^@X(*@^[X/KF@@]R;0NEWSW
)@@G@@%^0^[1/K@@Y@R#0^MK/KF@@]R;0   %^0^[1/K@@Y R#0^[0/KF@@]R$0^[1;*0@@DO<0^[1SX
)@@G@@&;0^@!/KF@@]R;)@@#A3)^[3/K@@X2R]0^@X:8@^[4/KF@@@:8@^[_/KF@@@C9K@@[[(K^[WSY
)@@G@@ @@^[R @@^[S @@^[T @@^[U @@@@LR;@^@_/KF@@@R;@@@Z:4@^[R/K@@Y+ @@^@ZA7@^[RSZ
)@@G@@R]0^@X/K@@YS/,0@Z2R]0^@X/KF@@[*4@^[V/K@@Y<(4@^@Z/K@@Y,R;K@@[A$K^@ZR;KNEWTA
)@@G@@ABK^[1/K@@T) @@^@ZR;K@@ZA7K^[R/K@@U9R#K^[-/CK@Y5]*K^["R<K^P*%0K^P*/K@@Z[TB
)@@G@@R:K^P*O;K@@[P<K^P*%)K^["/K@@Z[O;K@@[:*K^["/K@@X@A<K^["()@^[!/K@@WXR<K^["TC
)@@G@@P<K^[!A<K^["R:K^["/@K@WXP<K^[!A:K^["/K@@WXR#K^[-/CK@ZJ/@K@ZQ/K@@LLR<K^P?TD
)@@G@@?)K^["/K@@LL(*@^["/K@@ZQ!*K^["/K@@LL *@^[" @@^[- )@^["*@@^P!/K@@WX/K@@X@TE
)@@G@@R#)^["A#)^]DR;)^#EAA0^MER3@^["R;K^]E=80@@[/K@@Z$/,0@J$R;0^[0/K@@Z(/,0@KNTF
)@@G@@R;0^[,A3@^]DPF@^[Q1@@@@G/K@^ME]@@@[[R#)^[YOF)^[QM#\)@@/K@^MEC[@^[\/[F@@@TG
)@@G@@(*@^[V/KF@@@C K^[1:9KNEW/KF@@@!9@@@_C9@@@_[!@^[";H@@@=W9@@@EG9K@@0[-K^[1TH
)@@G@@;H@@@=W9@@@EG9K@@0[>K^[1C9K@@-[(K^[1 @@^[\/KF@@@R;K@@[A]0^@XR;@@@KA3@^[7TI
)@@G@@]@@^[R @@^[S @@^[T @@^[U @@^[? @@^[* @@^[+R;)@@)A7)^[+A7)^[< @@^[!R#)^P9TJ
)@@G@@*@@^@)R#)^P7S8)@@WA#0^@W*@@^@)/K@@-&R;)@@-A#)^[:R#)^PZ;@)@@E/))@)=A<K^[XTK
)@@G@@/C)@)$A<K^[XA$K^[X;))@@B/))@)%A\K^[V;@)@@J/))@)!A3K^[W;))@@#/))@)0A7K^[WTL
)@@G@@;@)@@]/))@)_A7K^[V;@)@@]/))@)9A<K^[WR;@@[KAB@^[%/K@@-O;))@@#/))@-OA$K^[WTM
)@@G@@R;@@[CAB@^[%/K@@-O;))@@G/=)@-3R7)^PZ/@)@-O%8)@@*A<K^[V9?@^P)9*@^[4R#@^P%TN
)@@G@@A#@^[9R;@^[4/,0@EX/K@@YHR#K^[.R#H@@@0@@@@G/=@@-L @@@@GA\@^[X()@^[XA$@^[XTO
)@@G@@(@@^P!/K@@-XR#@^P9A#@^]^A#@^P79?@^P!9*@^[_R;@^[_/,0@C$R]0^@XR3@^P2*=@^[XTP
)@@G@@/K@@-<+8@@@\/K@@-=)8@@@KA3K^P2/KF@@[R#@^P7A#@^[9R#@^[,A#@^[39?@^P!9*@^[4TQ
)@@G@@R$@^[XA<@^[XR;@^[4/,0@EX/K@@YHR]0^@X/KF@@[A3K^[VR<)^P?%8)@@"/K@@-[R<0^P*TR
)@@G@@O;)@@[:00^P*O;)@@[P<)^P*A<)^[!/K@@-[R;@^[4A]0^@X/,0@E0*@@^@)/K@@+$ ^@^[WTS
)@@G@@()@^[V/K@@+ER;@@@(A3@^[7R;@^[4'=@@@#R;K@@[A#K^@)(0@^[V/K@@+(R<)^P?P:)^P*TT
)@@G@@O<)^P*O<K^P?P<K^[!A<K^P?A:K^P5R3@^P*A3@^P5%@@@@IO;)@@[A<)^P5R;@^[_/,0@C0TU
)@@G@@/K@@YHR#@^]^P#@^P7AB@^P6D8@^P!R#K^]^'=@@[^/@)@+$ @@@@LR]0^@X/KF@@@R]0^@XTV
)@@G@@/KF@@[ )@^P?R;K@@[A<K^P5 *@^P5(@@^P!/K@@+$*@@^P\/K@@+UR;@^[_/,0@C0/K@@YHTW
)@@G@@/K@@+$TPF$              **EF**@@@@@@C8@@@@C4@^P?C0@^P?[4K^P?[0K^P?9?K@+5TX
)@@G@@9?K^P)9?K^P!A     AX    AR    AA0^MMAE)^MMAAK^MLAE@^MLC@@@$2/,0@E6/K@@$WTY
)@@G@@C@@^M?[@@^PZ 4@^PZC8K@@@=8@)@@G8K@@[=8@@@)G8K@@]C@@@$@/KH@<Q/K@@<U/K@@<?TZ
)@@G@@/K@@<;/K@@$W/,)@>[/K@@<=Q'K@>CC8@@@]/,0@F-/K@@<*/,)@>MC8@@@ [0@^P5/K@@<"UA
)@@G@@C@@^PZ)8@=@@[@K^PZ/K@@<0C@@^PZ)8@^@@[@K^PZ/K@@<"/,)@>^/K@@<0C8@@@ [0@^P5UB
)@@G@@/,)@>E(@@^P!/K@@$?C8@^P!'=@@[CC@@^N$/^)@$Q[@K^P9C8@@@[[?@^P2/K@@$?/,)@>[UC
)@@G@@/K@@=Y/,)@>BC8@@@*C4K^P?=8K@@KC8@@@"[4@^PZ%8@@@*/K@@=)C8@@@[[C@^P>C8@^P)UD
)@@G@@'=@@[ C@@@$ /^)@$WC@@@$LC=0^MQ:80@@E/K@@$WC*K^P*L)K^P*:80@@@C)K^MQ:80@@-UE
)@@G@@H)K^MQ%80@@+/K@@=TC/Y@@[G)K^MQC*0^P*,@)@@H/K@@$W[)K^P?/K@@<1C@@@$P/K@@$WUF
)@@G@@9?@^P)9*@^MTC8@^MT'=@@@#C4@^MW/@@@=!;G@@@#;CK@@-;*@@@AG8H 00[C@^N!C@@^N,UG
)@@G@@/K@@$WC@@@$E9?K^M+C^0^MW:80@@W9/K@+8/K@@$WCC0^M$+80@@_9?K^M=?9@@@ 9/K^P+UH
)@@G@@/K@@$W9?K^M*%9@@@@9/K^P&/K@@$W[C0^P>9?@^M%9*@^P*/K@@=F/,K@>H[@[[@[SI@^P)UI
)@@G@@/,K@>H[0[@@]SI@^P!/,K@>H]0@@@]SO@^P!/,K@>H]@[@[@SO@@@@C4D@@@AAW^MNQ,D@@@UJ
)@@G@@/,0@F-/%E@@@*?D@@@Q'%@@[Q+D@@@C@@^N2*=D@@@/K@@$Q*?D@@@*4@^@I/K@@>XC@@^N7UK
)@@G@@/K@@$QC*@^@I/^@@><*@@^@H/K@@>:(4@^@IC8@@@[C)/OMN')J@+_(@@@@H9?K@+59*TK@[UL
)@@G@@')J@+'+8@@@0/K@@&Y&FD@@[G@@@$3C@K@+69*@^M+9*DK@[/,0@HH/G@@>"C8K@@[C8@^M+UM
)@@G@@'=@@[GCC)^M*!8)[@@>8)@)@/K@@>'/K@@&JC8@^M)'=@@@J/C@@&D')C@+/N8K@@FN/)__8UN
)@@G@@9?K@$4<@@@@H;C@@@#;^K@@A8KK@&[;^K@@=9*K^N.C@@^N_/K@@$QC8K@@]>@@@$6C8K@@#UO
)@@G@@C8@^M+'=@@[GCC)^M*')C@+/?8)K@@?8)[@@/K@@&PG8K@@K/K@@&TC@@^O#?8))@@?8)S@@UP
)@@G@@/K@@$QC@@^OC=8)@]@/K@@$Q=8)@^@G8K@@)+0T@@@C@@^OI=8)@@KC@@^ON/^)@$Q')C@+/UQ
)@@G@@C@0^MOC^_@@[QAD@@[9?@^@Q(4@^@I9?J@@]9*C@@]9?@@+6(0@^@I/K@@&09?@^@S/K@@&2UR
)@@G@@(4@^@I9?J@@A9*C@@AC@@^@I**D@@@[@@^MQ*?@^@I**D@@@/KE@@@C@@^OU/,0@$R/KE@@@US
)@@G@@I/U-OPTION CONFLICT     @[^@&/SI: ELEMENT NOT FOUND   @[^@$[SI: IMPROPERUT
)@@G@@ LABEL BLOCK@[^@$ASI: CYCLE NONEXISTANT OR IN ERROR   @[A@$FSI: MISSING UU
)@@G@@FIELD @[#@$MR'0@$XCCT@@[G8K@@:[CW@@@'=@@@I/KF@@@'=@@@IC@0@$7N8K@@[')J@+_UV
)@@G@@9*K^MT')J)+'+8@@@#/@K@$*C@H@<[[@@^MSC8@^MR'=@@@J8KK@$Z C@^P?R'0@@@/K@@$!UW
)@@G@@R'0@@[OA0^MMQE)^MMQAK^MLQE@^ML/KF@@@@@7^M?@@$   000000000000C@@@@@@@[@@[UX
)@@G@@C8G@@@;G@@@=W8@@8KC8?@@@C8H@@@/\K@*DC8)@@:')])\T;G@@@=W8@@@/C8?@@@C8H@@@UY
)@@G@@/\K@*DC8)@@:')])\TC8?@@@C8V@@@;G)@@=W8)@@EG8)@@0')])\TC8\@@0')])\T/KH@@@UZ
)@@G@@C8G@@@&'0 AM?8@E<@/K@@*QH8@E<@&'0 PM;G@@@=W8@@8KC8?@@@C8H@@@/^)@*WC8)@@GVA
)@@G@@;G)@@=W8)@@E/@)@*-G8)@@0')])\TC8\@@0')])\TC8)@@:')])\T;G@@@=W8@@@/C8?@@@VB
)@@G@@C8H@@@/\K@*DC8)@@:')])\TC8?@@@/\K@*DC@@@@F;C@@@M/K@@0V;C@@@M+8@_@@;GK@@0VC
)@@G@@/\K@*DC8)@@/')])\T+8@@_@;GK@@%/\K@*DC8)@@/')])\T+8@@@_K8K@[@/\K@*D/KF@@@VD
)@@G@@;C@@@M+8@@_@;GK@@%/\K@*D+8@_@@;CK@@FC@X@%[C80@@^;)K@@A+8K@@_')])\T8#0@(CVE
)@@G@@+8@@@_K8K@[@/\K@*D/KF@@@AE1@@#;C@@@M[@@@[[+8@_@@;CK@@F9?H@%[/,0@0MC8)@@ VF
)@@G@@')])\TC@K@[[+8K@_@;G)@@%W8)@@E/@)@()G8)@@0')])\TC8\@@0')])\TC8)@@,')])\TVG
)@@G@@+8K@@_C8I@Y?C8K@@ RE1@@# C[@@#/K@@1H;C@@@M+8@@@_C8.@[@[C1@@#;C0@@]C@)@@GVH
)@@G@@CC[@@#T8@@ !G8J@@[;G)@@G;C0@@YG@I@%-G8J@@ACCL@@# C[@@#>8K@@[=8K@@#/K@@("VI
)@@G@@?8)@@#H8@@@[;G@@@=W8@@@BC@H@%VC8KDAY/K@@0M JAN UARY    FEB RUARY   MAR CVJ
)@@G@@H      APR IL      MAY         JUN E       JUL Y       AUG UST     SEP TVK
)@@G@@EMBER  OCT OBER    NOV EMBER   DEC EMBER  @@@SUN@@@MON@@TUESWEDNES@THURSVL
)@@G@@@@@FRI@SATUR@@@@@@@@@@@Z@@@@@;@@@@[U@@@@[8@@@@]R@@@@]5@@@@#O@@@@#3@@@@^LVM
)@@G@@@@@@^0@@@@ IC8.@@@;G@@@M;CK@@M&;@@@[&;K@@[/K@@%6')G):+')])\T8#0@%4/KF@@@VN
)@@G@@C8.@@@;G@@@M;CK@@M&;@@@[&;K@@[/K@@:#')G):+:8)@@ /K@@: %8)@@@')])\T8#0@%"VO
)@@G@@/KF@@@')])\T8#0@:C/KF@@@')G):+%8)@@ /K@@:[8#0@:C/KF@@@&'0@@@C?[@@[C^L@@[VP
)@@G@@/K@@:Q&'0__"/K@@:O&'0@@@;G@@@M;CK@@M&;@@@[&;K@@[')G):+:0-@@@/K@@:X')])\TVQ
)@@G@@/K@@:S0@@@@F/KF@@@[?[@@[[^L@@[/KF@@@C4!@@@C0!@@@C?!@@@C*!@@@C=!@@@/\@@:*VR
)@@G@@C)!)@@[^[@@]Q;@@@@/K[K@]C@K@?NC@0@@GC@@@@H/G@@:6/^@@:3C@@@?O/K@@:6;S@@@GVS
)@@G@@;*@@@[;*.@@[H@@@?O;SK@@G;?@@@>;CI@@@)8@@@[9?@@@HG8K@@[T@K@?P;CK@@+;C)@@=VT
)@@G@@;?!@@@G8)@@0')])\T'G@@?D'G@@?D'G@@?D;C)@@=;?)@@#/K@@?[;C@@@[/@F@@@C8)@@ VU
)@@G@@')])\T;S@@@G;*@@@[;CH@@@/K@@:/C@K@?Q/K@@:!)+C*@@)@@@@@PPPPPP)@@)@@R7<@@@VV
)@@G@@R3<@@@R\<@@@R:<@@@R$<@@@R<<@@@D8)@@@/\)@?'/\)@?'/\)@?'/\)@?'/\)@?'AE1@@#VW
)@@G@@')]@?RR#@@@I/KF@@@R7<@@@R3<@@@R\<@@@R:<@@@R$<@@@/?)@?3/\)@?'/\)@?'/\)@?'VX
)@@G@@/\)@?'/\)@?'/\)@?'R<<)@@/K@@\&AE1@@#')])?$A#)@@G')]@?R/KF@@@D8)@@[QE1@@#VY
)@@G@@/KF@@@&'0@@@/K@@!@&"0__"AE1@@#')]@?R:@)@@G/K@@!J')])?$/K@@![&'0@@@/K@@!DVZ
)@@G@@&"0__"AE1@@#')]@?R%8)@@ /K@@!J')])?$/K@@!ER#@@@I1@@@@F/KF@@@')])?$R#@@@IWA
)@@G@@')]@?R/KF@@@R;0@@ &A0J_"/K@@!VR;0@@F&'0@@@ @@@@HAE1@@#')])?$:8)@@ /K@@!XWB
)@@G@@;?@@@AO#K@@I8#0@!X0@@@@FR#@@@H')]@?R/KF@@@R;0@@ &"0__"/K@@!?R;0@@F&'0@@@WC
)@@G@@ @@@@HAE1@@#')])?$;?@@@AO#K@@I8#0@!,0@@@@FR#@@@H')]@?R/KF@@@;?@@[C/K@@!9WD
)@@G@@')])?$')]@?R:8)@@ /K@@!8 ?[@@[:8)@@+/K@@!M%8)@@-/KF@@@A\-@@[')])?$/KF@@@WE
)@@G@@')])?$P;)@@0T8K@@EO#K@@I8#0@,^/KF@@@')])?$P;)@@0;?@@@#O#K@@I8#0@,E/KF@@@WF
)@@G@@AE1@@#/,0@!6 @@@@J')]@?R:8)@@0/K@@,</K@@,UAE1@@# @@@@J/,0@!6')]@?R!8)@@0WG
)@@G@@!8)@@'/K@@,3/,0@,^/K@@,UAE1@@# @@@@J/,0@!6')]@?R!8)@@0!8)@@8/K@@,3/,0@,EWH
)@@G@@/K@@,<AE1@@#R#0@@G/,0@!6/,0@,^/K@@,3AE1@@#R#0@@G/,0@!6/,0@,E/K@@,3*?[@@[WI
)@@G@@90@@@GQE1@@#')]@?R/KF@@@A^W@@#A@?@@^A@/@@ Q8W@@@N?L@@@R@)@2]R^1@@@&80@@[WJ
)@@G@@C8@@2#M@/)@@Q^1@@@ ?[@@]/KF@@@ 4G@@[ 0G@@[A^W@@#A@?@@^A@/@@ Q8W@@@&8)@@[WK
)@@G@@Q4-@@[&80@@[Q01@@[O^1@@@/KF@@@A4-@@[P^1@@@A01@@[C8[@@@Q^L@@#R@?@@^R@/@@ WL
)@@G@@/KF@@@[4<@@@[0<@@@[?<@@@[*<@@@[=<@@@/?)@\>/\)@1$/\)@1$/\)@1$/\)@1$/\)@1$WM
)@@G@@/\)@1$[)<)@@A^-@@]Q8,@@@C8<@@@?^-@@@/K@@\1H?-@@@!^-@@@/K@@\1R;+@@@Q8)@@@WN
)@@G@@/K[K@]R;+@@@Q8)@@AP80@@[/K[K@]C8?@@@')])\T/KF@@@;G@@@=W8@@@AG^[@@@Q8!@@@WO
)@@G@@Q8/@@@L?[@@@?^L@@@?^[@@@/K@@0]/KF@@@O8)@@AP80@@[/KF@@@G8]@@@C8N@@@H^L@@@WP
)@@G@@T8K@@AG8H@@@/K@@\8C8#@@@H^[@@@T8@@@AG8]@@@/KF@@@C80@@ /K@@0NC80@@F;^@@[]WQ
)@@G@@+8K@@_%8)@@ :8)@@@/K@@0T')])\T8#0@0N/KF@@@C80@@ /K@@0YC80@@F;^@@[]+8K@@_WR
)@@G@@%8)@@@')])\T8#0@0Y/KF@@@C@K@2#C80@@FAE1@@#R'0@@@+8K@@_%8)@@ /K@@00O'0@@AWS
)@@G@@;G@@@A8#0@0*RE1@@#/KF@@@;?F@@@RE1@@#;^@@[]+8K@@_')])\T8#0@02/KF@@@C80@@@WT
)@@G@@;G@@@#/@@@0_G80@@[;G@@@#/^@@0'C8)@@0')])\TC8)@@@;=K@@#G8)@@0')])\T8#0@0_WU
)@@G@@/KF@@@C8.@@@T8K@@#;GH@@@H80@@[/K@@0_&'0@@0/K@@1IC8K@@@&'0@@ N8X@@@C80@@@WV
)@@G@@;O@@@=W8@@@EE/X@@@;?)@@AG8.@@08KK@1Q/^@@1K/C@@1V;?)@@AG80@@-8KK@1V9?@@@IWW
)@@G@@C@0@@F;C0@@M/K@@1-C@)@@J')])\T8KK@1Z+8K@@_')])\T;G@@@A/^K@1+/KF@@@[@@@16WX
)@@G@@C@@@2^'=@@@I(C[@@#/K@@1,RE1@@# C[@@#A^K@15[@@@16C8@@14'=@@[QC8@@@@/K@@\8WY
)@@G@@E$PKT 8@E@@@@@@@@@*****  EDIT$: ATTEMPT TO STORE OR LOAD OUTSIDE OF IMAGWZ
)@@G@@E  *****    @@[@@@      @[F@17&'0@%8/K@@2/&'0@%,/K@@2/&'0@:H/K@@2/&'0@:LXA
)@@G@@/K@@2/&'0@:N/K@@2/&'0@:?/K@@2/&'0@:!/K@@2/&'0@?L/K@@2/&'0@\5/K@@2/&'0@\8XB
)@@G@@/K@@2/&'0@0 /K@@2/&'0@2X/K@@2//,0@0F[@@^O</K@@3D&'0@0K/K@@2/&'0@0M/K@@2/XC
)@@G@@&'0@0V/K@@2/&'0@0X/K@@2/&'0@0=/K@@2/&'0@0>/K@@2/&'0@07/K@@2/&'0@1 /K@@2/XD
)@@G@@&'0@1G/K@@2/&'0@1H/K@@2/&'0@1E/K@@2/A]0^O+Q'0@3G/K@@2"A]0^O+Q'0@3F/K@@2"XE
)@@G@@A]0^O+Q'0@3DA@K^OZA@)^O)A@0^O-9*@^O<9*)^O>^@K^O$CC0^O+R@K^OVR@)^OWR@0^OXXF
)@@G@@/KJ@@@C@@^O<C@)^O>C@K^O=A@K^OVA@)^OWA@0^OXR]0^O+R@K^OZR@)^O)R@0^O-C@0^O&XG
)@@G@@N@K^O$/KF@@@&'0@3)/K@@2/&'0@3$/K@@2/&'0@3?/K@@2/&'0@3\/K@@2/&'0@34/K@@2/XH
)@@G@@[0@^OYC?[@@@[?@^OYC^[@@@[^@^OYC@@^OY'=@@@IN?L@@@C^[@@@&;@@@[C8K^PCM#H)@@XI
)@@G@@Q8)@@@Q^1@@@/KF@@@C8K@3$[^[@@@;C@@@M[?[@@@/KH@@@C8K@3?/K@@30&'0@$8/K@@2/XJ
)@@G@@&'0@*K/K@@2/&'0@*1/K@@2/&'0@(@/K@@2/&'0@(K/K@@2/&'0@(%/K@@2//,0@< /K@@5%XK
)@@G@@C@@^R)/,0@3WC8@^RA/,0@2H'=@@@?/,0@4@C/@@@,/,0@2PC/@@@[/,0@2T'=@@@?/,0@3"XL
)@@G@@C@@^R-/,0@2='=@@@?/,0@38C@@^R+'=@@@I/,0@3SC@@^R<'=@@@I/,0@)C/K@@5%C'K@@@XM
)@@G@@C')@@@C'0@@@C@@^R=/,0@LE/K@@5%/K@@5$0@@@@H/K@@4YG'0@@[C/@^RI/,0@\BC/@@@@XN
)@@G@@/,0@\8/,0@?5%8@@@*/K@@5^/,0@3S/,0@?5%8@@@.:8@@@ /K@@43/,0@2P/K@@4!9?@^QBXO
)@@G@@C@)^R>N8K@@^2@I)@@/K@@4'G')@@[/K@@5^C@)^R&N8K@@]2@I)@@/K@@5@H'K@@[/K@@5^XP
)@@G@@%@@^R$/K@@5^H'K@@[C')@@[/,0@3SC/@@@ /,0@2TC@@@@RC8K@@A/,0@22C/@@@./,0@2PXQ
)@@G@@C/@@@[/,0@2T/]K@5P/EK@5PC/@@@L/,0@2PC'K@@@C')@@@/K@@5RC/@@@[/,0@2TC/@@@^XR
)@@G@@/,0@2TC@@@@PT8@@@ !8@@[=C8@@[=/,0@2TC8@^PDC8K@[K/,0@2BC@@^R+'=@@@I/,0@3SXS
)@@G@@G]K@@QC')@@@/K@@4Y/,0@-"/K@@5%'=@@@DC@@^R('=@@@I'=@@@D@@@@@@@USE  @@@@@@XT
)@@G@@@@@@@@,     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@[^#D@@@@@@@@@@@@@@@@@@@@@@@@XV
)@@G@@@@[^[#@@@@@  ASCII MODE  NO FIND     SEPARATOR   COLUMN      CARD COUNT>XW
)@@G@@ CARD COUNT<@#C^@;SIR EDIT ERR            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XY
)@@G@@@@@@@@@@@@@@@@[^]E@Y>^]E@[I^]E@[O^]E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XZ
)@@G@@@@@@@@@@@@@@__"^#D@@[^#E@@@@@ @@@@@@@@@@@@@@@@@@@@[^FE@@@@@ @@[^]E@@@@@ YA
)@@G@@@@@@@@@YH^FE@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@^@)^@)      *SDFF*      YB
)@@G@@@@@@@@@@@@@@@@@@@@@K@@@@@#)@@@@@@@@@^FE^I%@@C@@_@@[^]E@@[@@@@@@@@@@@@@@@YC
)@@G@@@@@@@@@@@@@@@C@@@@@#)@@@@@@@@@^^E^B%@@C@@_@@[^#E@@[@@@@@@@@@/K@@ZY*[S@@@YD
)@@G@@C@@@@@^@@@@@@@[^#E@@[^]E^[IC(R@@@@@@@@@@@@@@@@+9@@@@@@@@@@@@@@@@@@@FREE,YE
)@@G@@OPTION@@@@@@@@@@@@@@@@@@@<@@@@@@]^MY@@E^M+K@O^M&@ASG,AX     XXX NOT A PRYF
)@@G@@OGRAM FILE  @[^^N<SI: TAPE I/O ERROR - STATUS:  @@@   @[A^N*XXX ILLEGAL YG
)@@G@@FIELD @[#^N\XXX BADLY CODED FIELD   @[^^N3XXX FILE NOT FOUND - STATUS:  YH
)@@G@@@@@@@@@@@@@@@[B^N8XXX ILLEGAL DEVICE@[#^O@XXX FILE CAN NOT BE READ@[^^O^YI
)@@G@@XXX READ ONLY OUTPUT FILE     @[ ^ODXXX OUTPUT FILE IS TAPE @[^^OJXXX CYYJ
)@@G@@CLE SPECIFICATION IGNORED     @[A^OO@@@^O*@@[@@@@@[^O2@@@@@@@@@@@@@@@@@@YK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&Q^O2@@@@@@[[@@@@@@@@@@@@@@@@YL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                          YM
)@@G@@                                                                        YN
)@@G@@                        THIS SKELETON LISTED BY THE BONES PROCESSOR ON &YO
)@@G@@@&Q^PD@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@INCREMENT   DEFINE      CORRECT     YP
)@@G@@IF          LOOP        END         @@_^QB@@ AT @[Q^QB@]@@@@@@Q^PD@@]^ROYQ
)@@G@@@@]^RWELSE  OOPS!!@[[^R*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@MAIN        @[U@@@@@@@@[        'LUP'     R#0@@NYS
)@@G@@          +       G.0@@=5,2,072     @ @@@@/]0^L>    +         'LUSR]@^MFYT
)@@G@@@A@@@@          + R_S@@@  04016,1,072     /K@^LZSDFO        K@]@@AD>G^X YU
)@@G@@@@@@@@@[F@C@SDFI        K@]@@GAR:[C @@@@@@@[:@DFINFOR$      K@]@@MDQD^KBYV
)@@G@@@@V^@@@#1@E6FDASC       K@]@@SN@5BEC@@@@@@@])@I$SIRASM      K@#@@ZN[GBECYW
)@@G@@@@@@@@@L,@LB@L6^@VPREPRM      K@]@@>[=XC^B@]E^ML@ #@+5EDIT$T      K@]@@:YX
)@@G@@JQ]^SD@@@@@@@]6@$8EDIT$A      K@]@@1GEDAQD@@@@@@@[(@%,EDIT$S      K@]@@7YY
)@@G@@JP4^SD@@@@@@@]-@?REDIT$       K@]@@.JO[^SD@@@@@@@#H@,8FDIT$A      K@]@[#YZ
)@@G@@JR]^SD@@@@@@@@K@2 FDIT$       K@]@[DJQ7^SD@@,^OV@[-@2PFDIT$T      K@]@[JZA
)@@G@@JR*^SD@@@@@@@@G@36ERU$        K@@@[NLU:CBCBONES       @@#@@@GA*E]D@@@@@@ZB
)@@G@@@[:@4]@]-^PD          +         'ES'@A@@@@          +         04014,014,ZC
)@@G@@073   @ @@@@          +         'LLA'     @A@@@@          +         0401ZD
)@@G@@*[@@@@*SDFF*@ @@_@@SSG  ,,,,,,SGS/1,GEN.MATRIX  @[@@@@SKEL  @[@@@@#ECHO ZE
)@@G@@@ @@@@*INCREMENT C TO [SEARCH,1,2]  @#@@@@[SEARCH,1,2,C]:   @]@@@@*CLEARZF
)@@G@@ D    @^@@@@*INCREMENT A TO [CONFD] @#@@@@*IF [CONFD,A]>1   @ @@@@*INCREZG
)@@G@@MENT B TO [CONFD,A,2]   @A@@@@*IF [CONFD,A,2,B] = [SEARCH,1,2,C]  @#@@@@ZH
)@@G@@*SET D TO D+1     @]@@@@*IF [DONT]=0@#@@@@[*D] [CONFD,A,1,1]@[@@@@*END  ZI
)@@G@@@[@@@@*END  @[@@@@*LOOP @[@@@@*END  @[@@@@*LOOP @]@@@@*IF [DONT]  @#@@@@ZJ
)@@G@@[*D] ELEMENTS.    @[@@@@*END  @[@@@@      @[@@@@*LOOP @[@@@@@EOF  ___@@@ZK
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @[@@@@$(1)  @ @@@@START     L,U     ZL
)@@G@@  A0,CSFPAK @A@@@@          LXI,U     A0,IOWPAK-CSFPAK@^@@@@          ERZM
)@@G@@        CSF$@ @@@@          ER        DATE$     @ @@@@          S       ZN
)@@G@@  A0,MSG+5  @D@@@@          S,T3      A0,MSG+7            . STORE YEAR  ZO
)@@G@@@ @@@@          SSL       A0,12     @D@@@@          S,T1      A0,MSG+7  ZP
)@@G@@          . STORE DAY   @ @@@@          SSL       A0,12     @D@@@@      ZQ
)@@G@@    S,T2      A0,MSG+6            . STORE MONTH @^@@@@          L,U     ZR
)@@G@@  A0,5@ @@@@          L,U       A1,'0'    @ @@@@          TNE,S3    A1,MZS
)@@G@@SG+6  @ @@@@          S,S3      A0,MSG+6  @ @@@@          TNE,S1    A1,MZT
)@@G@@SG+7  @ @@@@          S,S1      A0,MSG+7  @ @@@@          TNE,S5    A1,MZU
)@@G@@SG+7  @ @@@@          S,S5      A0,MSG+7  @ @@@@          L,U       A0,IZV
)@@G@@OWPAK @^@@@@          ER        IOW$@ @@@@          ER        EXIT$     ZW
)@@G@@@[@@@@$(0)  @#@@@@MSG '*[@@@@*SDFF*'@B@@@@    '@ @@@@GENDATE     000000 ZX
)@@G@@ 00  00  00'@#@@@@ + 0777777000000  @A@@@@CSFPAK '@ASG,T GENDATESGS,F///ZY
)@@G@@2 '   @^@@@@IOWPAK 'GENDATESGS'     @[@@@@ + 0  @]@@@@ + 010,0,0  @]@@@@ZZ
)@@G@@ + 9,MSG    @[@@@@ + 0  @]@@@@ END START  ___@@@^@)^@)^@)^@)^@)C(M^@)^@)AA
)@@G@@^@)^@)C(SDDO^))^@)@[@@@@@@@@]*@CO@C@^@M^@@@CO^@M@@@@C@@@@@@[@@@@@@@@@@@^AB
)@@G@@@@8@@W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@69    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P@C@@@N^@@@@@___@@@___AD
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AE
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AF
)@@G@@R;@^@D&;@@@^'=@@@J'=@@@MA#@^@ AR@^@B;C@@@GAZ@^@B;C@@@GAV@^@AR;@@@ R;K@@0AG
)@@G@@:?K^@AA\@^@A:4K^@BA7@^@B:=K^@BA$@^@BR;@^@H'=@@@#'=@@@D*[@@@@*SDFF*@ @@@@AH
)@@G@@GENDATE     000000  00  00  00___@@@@ASG,T GENDATESGS,F///2 GENDATESGS  AI
)@@G@@@@@@@@@C@@@@@@D^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MAIN        @@E@@@@@@@@[AK
)@@G@@ACLU*PAREPTMCH11(1R#0@@NLE ALREADY BACKED G.0@@=@B@[@@ACLU*PAUPDA(/]0^L>AL
)@@G@@O ACTION COMPLETEDR]@^MF@C@[@@ACLU*PA-BACKR_S@@@ *FILE ALREADY BAC/K@^LZAM
)@@G@@ERU$        K@@@@^J--E[DGENDATESGS  @@]@@@[&U^^E@@N^@@@@P@C@ACLU*PA-COPYAN
)@@G@@(1)  *NO ACTION COMPLETED*    @B@[@@ACLU*PA-DATA(1)  *FILE ALREADY BACKEAO
)@@G@@D UP* @B@[@@ACLU*PA-REPT@@^@@@@@^@@@@@^@@&@]W@@@RMATH$      @C@@@@@@@)@[AP
)@@G@@DMATH$      @C@@@@@@@)@]CMATH$      @C@@@@@@@)@#NIOCB$      @C@@@@@@@)@^AQ
)@@G@@ASM$        @C@@@@@@@)@ NWBCB$      @C@@@@@@@)@AED$         @C@@@@@@@)@BAR
)@@G@@FLIT$       @C@@@@@@@)@CFURPR$      @C@@@@@@@)@DSPICB$      @C@@@@@@@)@EAS
)@@G@@T$SCRN      @C@@@@@@@)@FISISCB$     @C@@@@@@@)@GCTS$I       @C@@@@@@@)@HAT
)@@G@@BSCAN$      @C@@@@@@@)@IBFOR$I      @C@@@@@@@)@JC2A$        @C@@@@@@@)@KAU
)@@G@@C2S$        @C@@@@@@@)@LC2D$        @C@@@@@@@)@MC2E$        @C@@@@@@@)@NAV
)@@G@@C2B$        @C@@@@@@@)@OC2F$        @C@@@@@@@)@PC2P$        @C@@@@@@@)@QAW
)@@G@@FTN$1       @C@@@@@@@)@RFTN$2       @C@@@@@@@)@SFTN$3       @C@@@@@@@)@TAX
)@@G@@FTN$4       @C@@@@@@@)@UFTN$U       @C@@@@@@@)@VFTN$XR      @C@@@@@@@)@WAY
)@@G@@FTN$E       @C@@@@@@@)@XCDMATH$     @C@@@@@@@)@YBCOB$I      @C@@@@@@@)@3AZ
)@@G@@EDQC$       @C@@@@@@@)@'EDQ$C1      @C@@@@@@@)@'EDQ$C2      @C@@@@@@@)@;BA
)@@G@@STAT$       @C@@@@@@@)@/NYU1$       @C@@@@@@@)@.NYU2$       @C@@@@@@@)@"BB
)@@G@@NYU3$       @C@@@@@@@)@_%>R0/IR>%>Q%PZ#09YQ%PU(P/J#>9U(P%>R0/IR>%>Q%PZ#0BC
)@@G@@9YQ%PU(P/J#>9U(P%>R0/IR>*[S@@@*SDFF*@I@@@@CONFD  ACCNTG  SBLEV1,SBRUN,SBBD
)@@G@@TIMEON,CONTIM,GROUP,TUSL,DUSL,SYML,SUANUM,ACCTON,;    @I@@@@            BE
)@@G@@   QGROUP,SUA(1),SUA(2),SUA(3),SUA(4),SUA(5),SUA(6),SUA(7),SUA(8),;     BF
)@@G@@@I@@@@               SUA(9),SUA(10),SUA(11),SUA(12),SUA(13),SUA(14),SUA(BG
)@@G@@15),SUA(16),;     @I@@@@               SUA(17),SUA(18),SUA(19),SUA(20),SBH
)@@G@@UA(21),SUA(22),SUA(23),SUA(24),;    @I@@@@               SUA(25),SUA(26)BI
)@@G@@,SUA(27),SUA(28),SUA(29),SUA(30),SUA(31),SUA(32),;    @ @@@@            BJ
)@@G@@   SUA(33),STPAUL @A@@@@CONFD  ACINT$  TIP,KONSFL,FILCTRL   @H@@@@CONFD BK
)@@G@@ ADH     NMSA,IODBUG,NMHSP,NOS93,STPAUL,SBLEV1,SBLEV3,SIPIO,ALTERNATE,; BL
)@@G@@@H@@@@               SUBSYSTEM,NIOAU,SYMBIONT,SMSADV,IOAUACR,IOAUSTR,IOABM
)@@G@@UCHI,IOLM   @#@@@@CONFD  ARPID$  TIP@ @@@@CONFD  BDSPOT  SUBSYSTEM,IONSSBN
)@@G@@@I@@@@CONFD  BOOT1   ACU,SPU,NMSA,STPAUL,NOMUX,ESIBAS,EXTCH,DCBOOT,AUTORBO
)@@G@@ECOV,CONNECT,;    @F@@@@               SUBSYSTEM,SWAP,NIOAU,ESSIZE,EDITDBP
)@@G@@UMPS,DCLUTS,OFLMEM@H@@@@CONFD  BOOT2   ACU,ACUNSS,SPU,SPUNSS,IONSS,STPAUBQ
)@@G@@L,NOMUX,ESIBAS,EXDRCH,EXOCH,; @H@@@@               EXTCH,EXPEXP,DCBOOT,DBR
)@@G@@CLUTS,SYSPRP,OVSIZE,AUTORECOV,SWAP,STORE,;@G@@@@               CONNECT,SBS
)@@G@@UBSYSTEM,NIOAU,ESSIZE,EDITDUMPS,OFLMEM,DBLOCK   @I@@@@CONFD  BOOT2A  ACUBT
)@@G@@,ACUNSS,SPU,SPUNSS,NOMUX,ESIBAS,FIXEDISC,DCBOOT,SYSPRP,SWAP,;     @C@@@@BU
)@@G@@               AUTORECOV,SUBSYSTEM,NIOAU,DCLUTS @C@@@@CONFD  BOOT2B  NCSBV
)@@G@@P,TERMINAL,LTG,SYMBIONT,TIP   @C@@@@CONFD  BOOT2C  NCSP,NOMUX,EXPTRACE,TBW
)@@G@@ERMINAL,LTG @H@@@@CONFD  BOOT2D  SPU,UNIVAC,STPAUL,FCDBSZ,AUTORECOV,SWAPBX
)@@G@@,TERMINAL,LTG,SYMBIONT,;@H@@@@               NCSP,U1CONFG,U3CONFG,NOS93,BY
)@@G@@RTPROG,REPS,URSCNT,SBLEV1,EXSNAP,;  @H@@@@               EXPRINT,NMSA,CABZ
)@@G@@USTRP,CAUGRSP,IOAUSTR,IOAUACR,IOAUCHI,GCCINT,;  @E@@@@               ESSCA
)@@G@@IZE,URSCNT,QWMODE,SSSCSP,SUBSYSTEM,TIP    @ @@@@CONFD  BOOT2E  TERMINAL,CB
)@@G@@LTG   @A@@@@CONFD  BOOT2T  TERMINAL,LTG,EXTCH   @#@@@@CONFD  BOOT2U     CC
)@@G@@@I@@@@CONFD  BOOT2X  ACU,SPU,NMSA,UNIVAC,STPAUL,NOMUX,ESIBAS,EXTCH,DCBOOCD
)@@G@@T,AUTORECOV,;     @G@@@@               CLRCOR,SWAP,CONNECT,SUBSYSTEM,NIOCE
)@@G@@AU,ESSIZE,DCLUTS,OFLMEM @#@@@@CONFD  BOOT2Y     @#@@@@CONFD  BOOT2Z     CF
)@@G@@@I@@@@CONFD  BOOT3   ACU,SPU,NMSA,UNIVAC,STPAUL,NOMUX,ESIBAS,EXTCH,DCBOOCG
)@@G@@T,AUTORECOV,;     @H@@@@               CLRCOR,SWAP,CONNECT,SUBSYSTEM,NIOCH
)@@G@@AU,ESSIZE,EDITDUMPS,DCLUTS,;  @ @@@@               OFLMEM,DBLOCK  @A@@@@CI
)@@G@@CONFD  BRMTRM  SYMBIONT,NOMUX,CNIOC @H@@@@CONFD  CATFR   UNIVAC,DCLUTS,FCJ
)@@G@@IXEDISC,DCBOOT,SYSPRP,STORE,RESERVE,SUBSYSTEM,; @C@@@@               ESSCK
)@@G@@IZE,IONSS,CKSM,LASTRK,TIP     @A@@@@CONFD  CCR300  U3SFK,U3CONFG,RSICNT CL
)@@G@@@C@@@@CONFD  CDISP   STPAUL,NCSP,SSSCSP,NOMUX,CSPRDP  @A@@@@CONFD  CGYCOCM
)@@G@@D  UNIVAC,NOMUX,NCSP,LTG@#@@@@CONFD  CHKPAR     @H@@@@CONFD  CKEY    STPCN
)@@G@@AUL,NOMUX,DCBOOT,FNCCHK,SBLEV1,SBRUN,SBTIMEON,CONTIM,NCSP,; @H@@@@      CO
)@@G@@         SYMBIONT,U1CONFG,U3CONFG,NOS93,RTPROG,SPU,REPS,URSCNT,DCLUTS,; CP
)@@G@@@H@@@@               EXSNAP,EXPRINT,CKSM,NMSA,GCCINT,ESSIZE,QWMODE,CAUSTCQ
)@@G@@RP,CAUGRSP,;@E@@@@               IOAUSTR,IOAUACR,IOAUCHI,SSSCSP,SUBSYSTECR
)@@G@@M,TIP @^@@@@CONFD  CKPT    ACCTON   @#@@@@CONFD  CKPTFN     @#@@@@CONFD CS
)@@G@@ CKPTFS     @ @@@@CONFD  CKPTKY  CNIOC,ESIBAS   @ @@@@CONFD  CKPTTB  TLSCT
)@@G@@,SSEQPT     @F@@@@CONFD  CMPOOL  TIP,FILCTRL,CBUFCT,CHKSUM,C32NBR,C82NBRCU
)@@G@@,MBUFCT     @D@@@@CONFD  CNSLI   IONSS,AUTORECOV,SWAP,CONSOL,OPSTOP     CV
)@@G@@@B@@@@CONFD  CNSLIT  CNSN,CONSOL,OPSTOP,RTMC    @H@@@@CONFD  COMAVL  SPUCW
)@@G@@,NCSP,SSSCSP,NOMUX,CNIOC,ESIBAS,U1CONFG,U3CONFG,CSPPAR,LTG,;@B@@@@      CX
)@@G@@         TERMINAL,RSICNT,IOLM,RTPROG@B@@@@CONFD  COMBPC  NCSP,NOMUX,TERMCY
)@@G@@INAL,LTG    @B@@@@CONFD  COMCHN  NOMUX,SUBSYSTEM,SBLEV1     @H@@@@CONFD CZ
)@@G@@ COMDH   NCSP,NOMUX,CNIOC,ESIBAS,DIALTM,TERMINAL,LTG,ALTERNATE,RTPROG,; DA
)@@G@@@^@@@@               CSPRDP   @H@@@@CONFD  COME    NCSP,NOMUX,ESIBAS,CNIDB
)@@G@@OC,ESITMO,DIALTM,SBLEV1,SBLEV2,CSPLU,LTG,;@B@@@@               RTPROG,TEDC
)@@G@@RMINAL,STPAUL     @D@@@@CONFD  COMILM  CNIOC,ESIBAS,TERMINAL,LTG,DCLUTS,DD
)@@G@@URSTRT@B@@@@CONFD  COMINT  NCSP,NOMUX,DCLUTS,RTPROG   @^@@@@CONFD  COMPODE
)@@G@@L  NCSP,LTG @I@@@@CONFD  COMR    UNIVAC,U1106,QWMODE,NCSP,NOMUX,ESIBAS,CDF
)@@G@@NIOC,ESITMO,LTG,TERMINAL,;    @A@@@@               RTPROG,U1CONFG,CSPRDPDG
)@@G@@@E@@@@CONFD  COMROU  NCSP,NOMUX,CNIOC,ESIBAS,TERMINAL,LTG,RTPROG  @H@@@@DH
)@@G@@CONFD  COMS    NCSP,NOMUX,CNIOC,ESIBAS,REPS,TERMINAL,LTG,ALTERNATE,RTPRODI
)@@G@@G,;   @ @@@@               SBLEV1,CSPRDP  @A@@@@CONFD  COMSU2  UNIVAC,UWDJ
)@@G@@RITP,MAXBDI @I@@@@CONFD  COMT    U1106,INCORE,NCSP,NOMUX,CNIOC,ESIBAS,ESDK
)@@G@@ITMO,TERMINAL,ALTERNATE,;     @B@@@@               RTPROG,LTG,SBLEV1,CSPDL
)@@G@@RDP   @C@@@@CONFD  COR$VT  TIP,FILCTRL,VTRECS,TRMXVT,VI3DIG @B@@@@CONFD DM
)@@G@@ CPLOGS  TIP,CBUFCT,CHKSUM,MBUFCT   @I@@@@CONFD  CSA     UNIVAC,AFICM,REDN
)@@G@@PS,RSICNT,MAXOPN,SWAP,SBLEV1,SBLEV3,LTG,TERMINAL,;    @A@@@@            DO
)@@G@@   LIBTE,UWRITP,FPRSC   @ @@@@CONFD  CSF     MAXLOG,RSICNT  @^@@@@CONFD DP
)@@G@@ CSFMOD  RSICNT   @]@@@@CONFD  CSI  @^@@@@CONFD  CSI1    STPAUL   @ @@@@DQ
)@@G@@CONFD  CSI2    AUTORECOV,SWAP @B@@@@CONFD  CSK     CONNECT,SUBSYSTEM,SBLDR
)@@G@@EV1   @I@@@@CONFD  CSN     UNIVAC,STPAUL,CLRCOR,STDPAG,STDBOT,SAFHDG,SHDDS
)@@G@@GSP,CMSS,CMSL,MASS,;    @C@@@@               ACCTON,OVERACC,OVRUSR,USERODT
)@@G@@N,TIP @H@@@@CONFD  CSP     UNIVAC,STPAUL,ERACCNT,CLRCOR,STDPAG,STDBOT,SADU
)@@G@@FHDG,SHDGSP,ROPT,;@G@@@@               ACCTON,OVRACC,OVRUSR,RESTRICT,STDDV
)@@G@@ACC,USERON,PCTMAX,TIP   @ @@@@CONFD  CSPAT2  STPAUL,UNIVAC  @A@@@@CONFD DW
)@@G@@ CSPCOM  IONSS,NCSP,CSPRDP    @C@@@@CONFD  CSPDEM  UNIVAC,CMSL,MASS,ACCTDX
)@@G@@ON,USERON   @^@@@@CONFD  CSPERR  NCSP     @A@@@@CONFD  CSPESI  NCSP,RTPRDY
)@@G@@OG,CSPRDP   @F@@@@CONFD  CSPIH   NCSP,UNIVAC,SSSCSP,CSPRDP,RTPROG,STPAULDZ
)@@G@@,ICACOL     @A@@@@CONFD  CSPIN   NCSP,UNIVAC,SSSCSP   @B@@@@CONFD  CSPINEA
)@@G@@R  NCSP,UNIVAC,STPAUL,SSSCSP  @C@@@@CONFD  CSPIO   NCSP,UNIVAC,STPAUL,CSEB
)@@G@@PRDP,RTPROG @ @@@@CONFD  CSPMSS  NCSP,CSPRDP    @B@@@@CONFD  CSPOUT  NCSEC
)@@G@@P,SSSCSP,UNIVAC,STPAUL  @D@@@@CONFD  CSPREC  NCSP,SSSCSP,UNIVAC,CSPRDP,RED
)@@G@@TPROG,STPAUL@ @@@@CONFD  CSPRMI  STPAUL,NCSP    @ @@@@CONFD  CSPRMO  STPEE
)@@G@@AUL,NCSP    @H@@@@CONFD  CSPSON  NCSP,SSSCSP,UNIVAC,CSPRDP,RTPROG,LTG,TEEF
)@@G@@RMINAL,DCLUTS,RSICNT    @B@@@@CONFD  CSPSSS  NCSP,SSSCSP,UNIVAC,CSPRDP  EG
)@@G@@@E@@@@CONFD  CSPSUB  NCSP,UNIVAC,STPAUL,NOMUX,SUBSYSTEM,TERMINAL  @B@@@@EH
)@@G@@CONFD  CSPUTL  NCSP,STPAUL,EXPRT,CSPRDP   @A@@@@CONFD  CSTART  MASS,ACCTEI
)@@G@@ON,USERON   @H@@@@CONFD  DA      UNIVAC,STPAUL,CNIOC,ESIBAS,RTPROG,MAXOPEJ
)@@G@@N,SWAP,DMIN,DINC,DMAX,; @G@@@@               AUTORECOV,STORE,RSICNT,SBLEEK
)@@G@@V1,SBLEV2,SBLEV3,SIPDAT,TIP   @H@@@@CONFD  DACCC   IONSS,UNIVAC,STPAUL,REL
)@@G@@TPROG,UWRITP,STORE,RSICNT,SWAP,MAXOPN,;   @D@@@@               SBLEV1,SBEM
)@@G@@LEV2,SBLEV3,SUBSYSTEM,OLM,TIP @ @@@@CONFD  DAICRD  UNIVAC,RTPROG  @D@@@@EN
)@@G@@CONFD  DAILR   UNIVAC,UWRITP,AFICM,FRRSC,SBLEV1,SBLEV3@H@@@@CONFD  DALOAEO
)@@G@@D  UNIVAC,MAXOPN,STPAUL,SWAP,CLRCOR,AUTORECOV,SBLEV1,SBLEV3,TIP,; @A@@@@EP
)@@G@@               LOG$TP,CLRTPC,FILCTRL@G@@@@CONFD  DAMCOR  OLM,NCSP,NOMUX,EQ
)@@G@@RTPROG,CLRCOR,TERMINAL,LTG,STPAUL,SPU,ACU @I@@@@CONFD  DAPA    ACU,NCSP,ER
)@@G@@NOMUX,RTPROG,MAXOPN,RSICNT,SWAP,AUTORECOV,STORE,CONSOL,;    @F@@@@      ES
)@@G@@         TERMINAL,LTG,SYMBIONT,STPAUL,SBLEV1,SBLEV3,TIP     @H@@@@CONFD ET
)@@G@@ DAPAM   ACU,ACUNSS,SPU,MAXOPN,RSICNT,SWAP,AUTORECOV,STORE,STPAUL,OLM,; EU
)@@G@@@^@@@@               UNIVAC   @H@@@@CONFD  DARQS   STPAUL,UNIVAC,SUBSYSTEV
)@@G@@EM,MAXOPN,RSICNT,SWAP,AUTORECOV,STORE,;   @^@@@@               SBLEV1   EW
)@@G@@@^@@@@CONFD  DART    RTPROG   @H@@@@CONFD  DASI    UNIVAC,STPAUL,SBLEV1,EX
)@@G@@SBLEV2,SBLEV3,CLRCOR,STORE,RSICNT,IONSS   @H@@@@CONFD  DC      NMSA,IODBEY
)@@G@@UG,UNIVAC,STPAUL,IOLM,SBLEV1,INCORE,SUBSYSTEM,SMSADV,;@C@@@@            EZ
)@@G@@   IOAUACR,IOAUSTR,IOAUCHI,DCBOOT   @^@@@@CONFD  DCTBEL  SYMBIONT @A@@@@FA
)@@G@@CONFD  DCTCP   SYMBIONT,SUBSYSTEM   @A@@@@CONFD  DCTCR   SYMBIONT,SUBSYSFB
)@@G@@TEM   @^@@@@CONFD  DCTERM  SYMBIONT @A@@@@CONFD  DCTINT  SYMBIONT,SUBSYSFC
)@@G@@TEM   @A@@@@CONFD  DCTPR   SYMBIONT,SUBSYSTEM   @^@@@@CONFD  DCTPRB  SYMFD
)@@G@@BIONT @C@@@@CONFD  DCTRES  SYMBIONT,STPAUL,USAMOD,SUBSYSTEM @I@@@@CONFD FE
)@@G@@ DH      IOLM,CNIOC,ESIBAS,DHLACE,DHLACH,DHLAC8,SBLEV1,CONNECT,SUBSYSTEMFF
)@@G@@,;    @A@@@@               NMSA,CHNPAR,IODBUG   @I@@@@CONFD  DISP    UNIFG
)@@G@@VAC,STPAUL,U1106,OLM,NCSP,NOMUX,CNIOC,ESIBAS,ESITMO,TLS,REPS,;    @H@@@@FH
)@@G@@               RTPROG,SBLEV1,SBLEV2,SBLEV3,TERMINAL,LTG,GROUP,GCCINT,ACCFI
)@@G@@TON,; @A@@@@               TIP,LOG$TP,US$ER     @A@@@@CONFD  DKEY    EXSFJ
)@@G@@NAP,EXPRINT,DCLUTS@C@@@@CONFD  DLABEL  SUBSYSTEM,CKSM,STPAUL,FIXEDISC   FK
)@@G@@@D@@@@CONFD  DPREP   DCBOOT,SYSPRP,FASTSK,STPAUL,CKSM,TIP   @G@@@@CONFD FL
)@@G@@ DRC     EXSNAP,DCLUTS,CONNECT,SUBSYSTEM,FIXEDISC,MASS,QGROUP     @A@@@@FM
)@@G@@CONFD  DUMP    NIOAU,CAUIPAR,STORE  @B@@@@CONFD  D5AILM  WATTIM,TERMINALFN
)@@G@@,LTG,RSICNT @H@@@@CONFD  D5CCR   DCT500,D5TTON,SATLMT,TRY2,TERMINAL,LTG,FO
)@@G@@D5LINE,D5SATM,FRID71,;  @F@@@@               TTYCNT,NOMUX,RSICNT,OUTPAR,FP
)@@G@@DMDPAR,TEKTRO,SUBSYSTEM @H@@@@CONFD  D5CRIT  DCT500,D5LINE,D5SATM,TTYWDTFQ
)@@G@@,FRID71,TTYCNT,LTG,NOMUX,RSICNT,;   @^@@@@               TEKTRO   @I@@@@FR
)@@G@@CONFD  EIH     MPHW,UNIVAC,NCSP,NOMUX,RTPROG,UWRITP,LTG,TERMINAL,SBLEV1,FS
)@@G@@SBLEV4,;    @C@@@@               SBLEV5,MAXTUX,CAUSTRP,CAUGRSP    @ @@@@FT
)@@G@@CONFD  ERRF0   RTPROG,TIP     @A@@@@CONFD  ESHS    ESSIZE,SUBSYSTEM     FU
)@@G@@@A@@@@CONFD  EXBKSG  EXSNAP,EXPRINT,EXPRT @I@@@@CONFD  EXERR   ACU,SPU,MFV
)@@G@@PHW,STPAUL,NOMUX,DCBOOT,AUTORECOV,SWAP,CONSOL,TERMINAL,;    @F@@@@      FW
)@@G@@         LTG,FNCCHK,NIOAU,CAUSTRP,CAUGRSP,DBLOCK,UNIVAC,TIP @H@@@@CONFD FX
)@@G@@ EXITF0  NCSP,NOMUX,RTPROG,TERMINAL,LTG,SBLEV1,SBLEV2,SIPDAT,UNIVAC,;   FY
)@@G@@@B@@@@               STORE,RSICNT,SBLEV3,TIP    @C@@@@CONFD  EXMISC  UNIFZ
)@@G@@VAC,QWMODE,RTPROG,EXPRIM,TIP  @H@@@@CONFD  EXPOOL  UNIVAC,EXPSPL,EXPRIM,GA
)@@G@@EXPEXP,EXPTRACE,PRIEXP,SBLEV1,SBLEV3,;    @C@@@@               SBLEV4,MAGB
)@@G@@XOPN,STPAUL,POOLSIZE    @A@@@@CONFD  EX8BUF  NOMUX,ESIBAS,NIOAU   @H@@@@GC
)@@G@@CONFD  EX8LOD  SPU,FNCCHK,XRESEG,XRPSEG,XTPSEG,SYMBIONT,NCSP,U1CONFG,U3CGD
)@@G@@ONFG,;@H@@@@               NOS93,RTPROG,REPS,URSCNT,SBLEV1,EXSNAP,EXPRINGE
)@@G@@T,DCLUTS,QWMODE,; @H@@@@               ESSIZE,NMSA,CAUSTRP,CAUGRSP,IOAUSGF
)@@G@@TR,IOAUACR,IOAUCHI,GCCINT,;   @E@@@@               DCBOOT,SYSPRP,SSSCSP,GG
)@@G@@SUBSYSTEM,RSICNT,TIP    @H@@@@CONFD  EX8MAP  URSCNT,NCSP,SYMBIONT,U1CONFGH
)@@G@@G,U3CONFG,REPS,RSICNT,NOS93,RTPROG,;@H@@@@               SPU,ESSIZE,SBLEGI
)@@G@@V1,QWMODE,GCCINT,EXSNAP,EXPRINT,XRESEG,XRPSEG,; @H@@@@               XTPGJ
)@@G@@SEG,NMSA,CAUSTRP,CAUGRSP,IOAUSTR,IOAUACR,IOAUCHI,SUBSYSTEM,;@A@@@@      GK
)@@G@@         SSSCSP,DCBOOT,TIP    @I@@@@CONFD  E8END   TTYSTC,DCTSTC,RT4STC,GL
)@@G@@MAXOPN,TTYCNT,SWAP,EXPRIM,EXPADJ,TERMINAL,;     @H@@@@               LTGGM
)@@G@@,REMOTE,SYMBIONT,U1CONFG,U3CONFG,TSITE,DCT500,NCSP,URSCNT,; @F@@@@      GN
)@@G@@         D5LINE,D5SATM,GROUP,RSICNT,STATN,STNGRP,GCCMIN,TIP @ @@@@CONFD GO
)@@G@@ E8ID    STPAUL,SITEID  @H@@@@CONFD  FALL    ESIBAS,MSW1,MSW5,DCBOOT,SUBGP
)@@G@@SYSTEM,MAXOPN,EXSNAP,EXPRINT,CKSM,; @ @@@@               MASS,QGROUP    GQ
)@@G@@@E@@@@CONFD  FASEC   CNIOC,ESIBAS,SUBSYSTEM,EXSNAP,EXPRINT,CKSM   @B@@@@GR
)@@G@@CONFD  FCUI    TLS,TERMINAL,LTG,SUBSYSTEM @ @@@@CONFD  FC$ASG  TIP,FILCTGS
)@@G@@RL    @ @@@@CONFD  FC$BLD  TIP,FILCTRL    @ @@@@CONFD  FC$DER  TIP,FILCTGT
)@@G@@RL    @ @@@@CONFD  FC$DSS  TIP,FILCTRL    @ @@@@CONFD  FC$FDC  TIP,FILCTGU
)@@G@@RL    @H@@@@CONFD  FC$FDT  TIP,KONSFL,FILCTRL,C32NBR,C82NBR,TIMDAYS,TIMLGV
)@@G@@NKBLKS,TRMXVT,;   @F@@@@               LNKBLKS,MINBLKS,DAYBLKS,FIXPID,POGW
)@@G@@LPID,AAANMR,AAASCR@ @@@@CONFD  FC$FSC  TIP,FILCTRL    @ @@@@CONFD  FC$GTGX
)@@G@@S  TIP,FILCTRL    @ @@@@CONFD  FC$IET  TIP,FILCTRL    @ @@@@CONFD  FC$INGY
)@@G@@T  TIP,FILCTRL    @B@@@@CONFD  FC$LFC  TIP,FILCTRL,FLFCTR,LOG$TP  @A@@@@GZ
)@@G@@CONFD  FC$LLX  TIP,FILCTRL,LOG$TP   @ @@@@CONFD  FC$LOW  TIP,FILCTRL    HA
)@@G@@@ @@@@CONFD  FC$LST  TIP,FILCTRL    @ @@@@CONFD  FC$MSG  TIP,FILCTRL    HB
)@@G@@@ @@@@CONFD  FC$MSU  TIP,FILCTRL    @ @@@@CONFD  FC$RCT  TIP,FILCTRL    HC
)@@G@@@ @@@@CONFD  FC$REL  TIP,FILCTRL    @ @@@@CONFD  FC$RES  TIP,FILCTRL    HD
)@@G@@@ @@@@CONFD  FC$RFS  TIP,FILCTRL    @ @@@@CONFD  FC$ROL  TIP,FILCTRL    HE
)@@G@@@ @@@@CONFD  FC$RR   TIP,FILCTRL    @ @@@@CONFD  FC$RWD  TIP,FILCTRL    HF
)@@G@@@A@@@@CONFD  FC$SNP  TIP,FILCTRL,LOG$TP   @A@@@@CONFD  FC$SS   TIP,FILCTHG
)@@G@@RL,LOG$TP   @ @@@@CONFD  FC$SSP  TIP,FILCTRL    @I@@@@CONFD  FC$SUB  TIPHH
)@@G@@,KONSFL,FILCTRL,CBUFCT,C32NBR,C82NBR,TIMCTRL,TIMDAYS,VI$DEV,;     @H@@@@HI
)@@G@@               TIMLNKBLKS,TRMXVT,PR$DEV,TI$DEV,SE$DEV,SY$DEV,SS$DEV,VA$DHJ
)@@G@@EV,;  @H@@@@               LNKBLKS,MINBLKS,DAYBLKS,FIXPID,POLPID,AAANMR,HK
)@@G@@AAASCR,LOG$TP     @ @@@@CONFD  FC$TBL  TIP,FILCTRL    @ @@@@CONFD  FC$UTHL
)@@G@@   TIP,FILCTRL    @F@@@@CONFD  FH      IODBUG,IOLM,SBLEV1,CONNECT,SUBSYSHM
)@@G@@TEM,NMSA,CHNPAR   @C@@@@CONFD  FHR     CONNECT,SUBSYSTEM,NMSA,CHNPAR    HN
)@@G@@@E@@@@CONFD  FIASG   NMSA,EXSNAP,NCSP,NOMUX,TERMINAL,LTG,GROUP    @A@@@@HO
)@@G@@CONFD  FIBLOK  DBLOCK,SPU,ACU,ESSIZE@H@@@@CONFD  FIBRKI  NMSA,EXSNAP,NCSHP
)@@G@@P,NOMUX,TFEXP,TFMAX,TERMINAL,LTG,SUBSYSTEM,;    @C@@@@               ARBHQ
)@@G@@DSK,ARBDRM,WHLDRM,GROUP,ACCTON@H@@@@CONFD  FICKAC  NMSA,EXSNAP,NCSP,NOMUHR
)@@G@@X,CNIOC,ESIBAS,TERMINAL,LTG,CSPLU,CSPRDP,;@^@@@@               DCLUTS   HS
)@@G@@@I@@@@CONFD  FICKAF  NMSA,EXSNAP,NCSP,NOMUX,TERMINAL,LTG,SUBSYSTEM,ARBDSHT
)@@G@@K,STPAUL,IONSS    @F@@@@CONFD  FICKAT  NMSA,EXSNAP,NCSP,NOMUX,TERMINAL,LHU
)@@G@@TG,SUBSYSTEM,IOLM @G@@@@CONFD  FICRIT  NMSA,EXSNAP,NCSP,NOMUX,MAXGRN,TERHV
)@@G@@MINAL,LTG,GROUP,CSPRDP  @H@@@@CONFD  FIFREE  STPAUL,NCSP,NOMUX,CNIOC,ESIHW
)@@G@@BAS,TLS,PRIVAC,TERMINAL,LTG,RTPROG,;@A@@@@               SBLEV1,SBLEV5,CHX
)@@G@@KSM   @^@@@@CONFD  FIHOLD  SBLEV1   @B@@@@CONFD  FIMAIN  EXSNAP,NHOLDT,SHY
)@@G@@BLEV1,SBLEV5@H@@@@CONFD  FIRVSU  ACU,SPU,OLM,NCSP,NOMUX,ESSIZE,DCLUTS,STHZ
)@@G@@ORE,CONNECT,SUBSYSTEM,; @ @@@@               CKSM,IONSS     @H@@@@CONFD IA
)@@G@@ FISTDN  ACU,SPU,ACUNSS,SPUNSS,NCSP,NMSA,ESSIZE,NOMUX,OLM,DCLUTS,STORE,;IB
)@@G@@@B@@@@               NIOAU,CONNECT,IONSS,DCBOOT @H@@@@CONFD  FISTUP  ACUIC
)@@G@@,SPU,ACUNSS,SPUNSS,NCSP,NMSA,ESSIZE,NOMUX,AUTORECOV,DCLUTS,;@F@@@@      ID
)@@G@@         SUBSYSTEM,STORE,NIOAU,CONNECT,OLM,SYMBIONT,IONSS   @B@@@@CONFD IE
)@@G@@ FISUMM  CONNECT,SUBSYSTEM,DCLUTS   @^@@@@CONFD  FIUMQ   NMSA,IOLM@F@@@@IF
)@@G@@CONFD  FLTLOG  CAUSTRP,CAUGRSP,CAUIPAR,IOAUSTR,IOAUACR,IOAUCHI    @H@@@@IG
)@@G@@CONFD  FNCCNT  UNIVAC,FNCCHK,FCDBSZ,SBLEV1,SBLEV3,STORE,XRESEG,XRPSEG,XTIH
)@@G@@PSEG,;@H@@@@               SYMBIONT,U1CONFG,U3CONFG,NOS93,RTPROG,SPU,REPII
)@@G@@S,URSCNT,SBLEV2,; @I@@@@               SBLEV4,STPAUL,EXSNAP,EXPRINT,NCSPIJ
)@@G@@,NMSA,CAUSTRP,CAUGRSP,IOAUSTR,;     @H@@@@               IOAUACR,IOAUCHIIK
)@@G@@,GCCINT,ESSIZE,QWMODE,OVSIZE,SIPDAT,SUBSYSTEM,; @A@@@@               SSSIL
)@@G@@CSP,DCBOOT,TIP    @F@@@@CONFD  FREL    CNIOC,ESIBAS,SUBSYSTEM,EXSNAP,EXPIM
)@@G@@RINT,CKSM,QGROUP  @E@@@@CONFD  FRSEC   CNIOC,ESIBAS,SUBSYSTEM,EXSNAP,EXPIN
)@@G@@RINT,CKSM   @I@@@@CONFD  FSMCT   ACU,SPU,IONSS,AUTORECOV,NMSA,NIOAU,NCSPIO
)@@G@@,NOMUX,DCLUTS,STORE,CKSM,;    @ @@@@               CONNECT,ESSIZE @D@@@@IP
)@@G@@CONFD  GCCERA  RS$TRA,STPAUL,GCCBAT,GCCPUN,GCCDEM     @B@@@@CONFD  GCCFUIQ
)@@G@@N  GCCBAT,GCCPUN,STPAUL,GCCDEM@A@@@@CONFD  GENCCR  RS$TRA,GCCPUN,GCCBAT IR
)@@G@@@A@@@@CONFD  GTLDCD  SYMBIONT,SSSCSP,NCSP @H@@@@CONFD  IH      NMSA,LTG,IS
)@@G@@TERMINAL,NOS93,MPHW,UNIVAC,NCSP,NOMUX,SBLEV1,SIPIO,;  @G@@@@            IT
)@@G@@   NIOAU,RTPROG,CNIOC,NMHSP,IOAUACR,IOAUSTR,IOAUCHI,CAUIPAR @I@@@@CONFD IU
)@@G@@ IHESI   MPHW,STPAUL,NOMUX,CNIOC,ESIBAS,SBLEV1,TERMINAL,LTG,CONNECT,NCSPIV
)@@G@@,;    @^@@@@               SUBSYSTEM@A@@@@CONFD  IHTEMP  NOMUX,ESIBAS,LTIW
)@@G@@G     @I@@@@CONFD  INASG   EXSNAP,EXPRINT,MAXOPN,RSICNT,SWAP,AUTORECOV,SIX
)@@G@@TORE,TERMINAL,LTG,;     @H@@@@               URSCNT,URDBUG,ACCS,ACCL,CMSIY
)@@G@@S,CMSL,TMPSS,TMPSL,TUSS,TUSL,DUSS,; @I@@@@               DUSL,SYMS,SYML,IZ
)@@G@@AMPRIOR,AAPRIOR,ADEDLN,ARTLVL,AXCEED,ASUAS,FIXS,;     @H@@@@            JA
)@@G@@   FIXL,TAPS,TAPL,DISCS,DISCL,MASS,MASL,QQSTRT,QQSTOP,QRTL,QQSET,;@H@@@@JB
)@@G@@               QPAGES,QCARDS,QCBSIZ,QMPRIOR,QSUPS,QVDT,QDES1,QDES2,ATOCLJC
)@@G@@,;    @H@@@@               OVRUSR,STDACC,STDUSR,USERON,QCONECT,QVACNT,ACJD
)@@G@@CTON,OVRACC,;     @I@@@@               NTAP(1),NTAP(2),NTAP(3),NTAP(4),NJE
)@@G@@TAP(5),QTAP(1),QTAP(2),QTAP(3),;    @H@@@@               QTAP(4),QTAP(5)JF
)@@G@@,NDISC(1),NDISC(2),NDISC(3),NDISC(4),NDISC(5),; @I@@@@               QDIJG
)@@G@@SC(1),QDISC(2),QDISC(3),QDISC(4),QDISC(5),QRTMS(1),QRTMS(2),;     @I@@@@JH
)@@G@@               QRTMS(3),QRTMS(4),QRTMS(5),QRTMS(6),QRTMS(7),QRTMS(8),QRCJI
)@@G@@MS(1),;     @I@@@@               QRCMS(2),QRCMS(3),QRCMS(4),QRCMS(5),QRCJJ
)@@G@@MS(6),QRCMS(7),QRCMS(8),;     @I@@@@               AACMS(1),AACMS(2),AACJK
)@@G@@MS(3),AACMS(4),AACMS(5),AACMS(6),AACMS(7),;     @^@@@@               AACJL
)@@G@@MS(8) @H@@@@CONFD  INDA    IONSS,DHLACE,DHLACH,DHLAC8,DCBOOT,MAXBDI,AUTOJM
)@@G@@RECOV,SWAP,STORE,;@H@@@@               TERMINAL,LTG,REENTRANT,LIBTE,DCLUJN
)@@G@@TS,SUBSYSTEM,STPAUL,FIXEDISC,;@^@@@@               FNCCHK   @H@@@@CONFD JO
)@@G@@ INDRIV  NMSA,IONSS,STPAUL,EXSNAP,EXPRINT,NCSP,NOMUX,REBOOTCT,TERMINAL,;JP
)@@G@@@I@@@@               LTG,REENTRANT,LIBTE,CONNECT,SUBSYSTEM,CSHRCV,NIOAU,JQ
)@@G@@CSPRDP,CKSM,;     @H@@@@               DCLUTS,ESSIZE,SPU,DIAGTYP,TPFTYP,JR
)@@G@@DBLOCK,OVRACC,OVRUSR,LOGTYP,; @ @@@@               LOGEOF,TIP     @D@@@@JS
)@@G@@CONFD  INGEN   COR$MAX,TERMINAL,LTG,SYMBIONT,STPAUL   @H@@@@CONFD  INIT1JT
)@@G@@   ACU,ACUNSS,SPU,SPUNSS,NMSA,IONSS,UNIVAC,STPAUL,NOMUX,EXTCH,;   @I@@@@JU
)@@G@@               EXPRIM,DCBOOT,MAXBDI,SBLEV1,SIPIO,SBRUN,SBTIMEON,CONTIM,CJV
)@@G@@ONNECT,;    @I@@@@               SUBSYSTEM,TERMINAL,LTG,NIOAU,ESSIZE,DCLJW
)@@G@@UTS,XRESEG,XRPSEG,XTPSEG,;    @B@@@@               DBLOCK,SIPDAT,SBLEV3,JX
)@@G@@PCTMAX@I@@@@CONFD  INIT2   ACU,SPU,IONSS,UNIVAC,STPAUL,DCLUTS,DCBOOT,CLRJY
)@@G@@COR,OVSIZE,ESSIZE,;     @H@@@@               SWAP,AUTORECOV,LTG,TERMINALJZ
)@@G@@,STORE,XTPSEG,XRESEG,XRPSEG,RTMC,;  @C@@@@               CNSN,DBLOCK,ACCKA
)@@G@@TON,XRRCLG,TIP    @B@@@@CONFD  INRESV  IONSS,FIXEDISC,RESERVE     @A@@@@KB
)@@G@@CONFD  INTLOC  NOMUX,TERMINAL,LTG   @H@@@@CONFD  IO      SPU,NMSA,IONSS,KC
)@@G@@IODBUG,POOLSIZE,STORE,NOS93,STPAUL,IOLM,NCSP,;  @H@@@@               NOMKD
)@@G@@UX,TLS,MAXBDI,TERMINAL,LTG,SUBSYSTEM,CHNPAR,INCORE,ESSIZE,; @I@@@@      KE
)@@G@@         SBLEV1,SBLEV3,SIPIO,RLTIME,GROUP,NMHSP,CAUSTRP,CAUGRSP,CAUIPAR,KF
)@@G@@;     @B@@@@               IOAUACR,IOAUSTR,IOAUCHI,TIP@H@@@@CONFD  IOD  KG
)@@G@@   ACU,SPU,NMSA,IONSS,CSPRDP,NOS93,ESSIZE,UNIVAC,IOLM,NCSP,CKSM,; @I@@@@KH
)@@G@@               NOMUX,CNIOC,ESIBAS,FIXEDISC,SYSPRP,AUTORECOV,SWAP,CSPCLT,KI
)@@G@@CSPLU,;     @I@@@@               STORE,LTG,TERMINAL,CONNECT,SUBSYSTEM,DCKJ
)@@G@@LUTS,POSDIR,POS60,NIOAU,;     @C@@@@               IOAUACR,IOAUSTR,IOAUCKK
)@@G@@HI,CAUIPAR  @#@@@@CONFD  IODISC     @]@@@@CONFD  IODOC@C@@@@CONFD  IODUSKL
)@@G@@T  STORE,ESSIZE,SUBSYSTEM,IONSS     @]@@@@CONFD  IOECC@H@@@@CONFD  IOESHKM
)@@G@@   SUBSYSTEM,STPAUL,IOLM,ESSIZE,IODBUG,IOAUACR,IOAUSTR,IOAUCHI,;  @ @@@@KN
)@@G@@               CONNECT,SBLEV1 @ @@@@CONFD  IOFCS   IONSS,IODBUG   @H@@@@KO
)@@G@@CONFD  IOMSA   NMSA,IODBUG,STPAUL,AUTORECOV,SWAP,CONNECT,SUBSYSTEM,INCORKP
)@@G@@E,;   @F@@@@               SBLEV1,SBLEV3,SIPIO,IOAUACR,IOAUSTR,IOAUCHI,IKQ
)@@G@@OLM   @A@@@@CONFD  IOMTIM  NMSA,STPAUL,DCBOOT   @A@@@@CONFD  IONRDT  TERKR
)@@G@@MINAL,LTG,IOLM    @B@@@@CONFD  IOSPU   SPU,SPUNSS,IODBUG,STORE    @H@@@@KS
)@@G@@CONFD  JNTRNR  UCDMST,U3CDST,TERMINAL,LTG,U1CONFG,U3CONFG,SYMBIONT,SUBSYKT
)@@G@@STEM,;@C@@@@               RSICNT,UCTCS,CSPLU,ACSPLU,GCCINT @I@@@@CONFD KU
)@@G@@ JNTRRS  NOMUX,DEDLIN,TERMINAL,LTG,TSITE,SYMCLS,U1CONFG,U3CONFG,SYMBIONTKV
)@@G@@,;    @E@@@@               SUBSYSTEM,RSICNT,UCTCS,DCLUTS,CSPLU,ACSPLU   KW
)@@G@@@H@@@@CONFD  KONS    TIP,COREFILE,KONSFL,KONSEC,KSECNB,KONU3L,KONSBL,KONKX
)@@G@@SPW,C32NBR,;@^@@@@               C82NBR   @G@@@@CONFD  KPOOL   UNIVAC,NOKY
)@@G@@MUX,DCBOOT,CKSM,DBLOCK,SUBSYSTEM,PCTMAX,TIP     @A@@@@CONFD  LBYTES  SYMKZ
)@@G@@BIONT,SSSCSP,NCSP @C@@@@CONFD  LINK    UWRITP,MAXBDI,REENTRANT,REPS,LTG LA
)@@G@@@ @@@@CONFD  LIST    LIBTE,REPS     @H@@@@CONFD  LOCTAB  RTLEV,MAXOPN,RSLB
)@@G@@ICNT,SWAP,MAXTIM,MAXPAG,MAXCRD,APRIOR,MPRIOR,;  @H@@@@               DEDLC
)@@G@@LIN,TRMXCO,TRMXPO,TRMXT,STPAUL,UNIVAC,SBLEV1,MASS,ACCTON,;  @^@@@@      LD
)@@G@@         USUAS    @B@@@@CONFD  LOGGER  STPAUL,MASLOG,COR$MAX,TIP  @H@@@@LE
)@@G@@CONFD  LOGIT   LOGTYP,LOGEOF,SBLEV1,SBFILE,CMSL,TUSL,DUSL,SYML,ACCTON,USLF
)@@G@@ERON  @^@@@@CONFD  LOGM    COR$MAX  @E@@@@CONFD  MACINT  TIP,CBUFCT,C32NLG
)@@G@@BR,C82NBR,CMPAN1,CMPAN2,CMPAN3@#@@@@CONFD  MAPBLD  TIP@#@@@@CONFD  MAPUPLH
)@@G@@D  TIP@I@@@@CONFD  MCT     NMSA,IONSS,U1106,ESITMO,XRRCLG,SITEID,SSEQPT,LI
)@@G@@SSDENS,SPU,CONNECT,;    @H@@@@               SUBSYSTEM,CONSOL,STORE,NIOALJ
)@@G@@U,ESSIZE,CKSM,FIXEDISC,REBOOTCT,;   @B@@@@               DBLOCK,LOGTYP,LLK
)@@G@@OGSS,LOGUNIT@#@@@@CONFD  MISCNR     @G@@@@CONFD  MSCON   STPAUL,DCLUTS,FLL
)@@G@@IXEDISC,SUBSYSTEM,EXSNAP,EXPRINT,CKSM     @#@@@@CONFD  MSPOOL     @F@@@@LM
)@@G@@CONFD  MSUP    STORE,POSDIR,POS60,ESSIZE,CKSM,SUBSYSTEM,FIXEDISC  @#@@@@LN
)@@G@@CONFD  NAME    SPU@A@@@@CONFD  NEC     TIP,FILCTRL,COREFILE @^@@@@CONFD LO
)@@G@@ ONCPSP  SYMBIONT @^@@@@CONFD  ONCRSP  SYMBIONT @^@@@@CONFD  ONPNSP  SYMLP
)@@G@@BIONT @^@@@@CONFD  OSCP    SYMBIONT @^@@@@CONFD  OSCR    SYMBIONT @^@@@@LQ
)@@G@@CONFD  OSPN    SYMBIONT @ @@@@CONFD  PAKEY   TIP,POLPID     @^@@@@CONFD LR
)@@G@@ PANCSF  SSEQPT   @H@@@@CONFD  PANTAG  ACU,ACUNSS,SPU,SPUNSS,NMSA,IONSS,LS
)@@G@@IODBUG,POOLSIZE,NMHSP,NOS93,; @H@@@@               UNIVAC,STPAUL,U1106,NLT
)@@G@@OMUX,ESITMO,RM9300,FIXEDISC,REPS,RTPROG,; @H@@@@               RTLEV,MAXLU
)@@G@@OPN,RSICNT,SWAP,EXPSPL,EXPRIM,EXPEXP,EXPADJ,EXPTRACE,;@H@@@@            LV
)@@G@@   DCBOOT,CLRCOR,FCDBSZ,SITEID,PRIEXP,UWRITP,OVSIZE,MAXBDI,STORE,;@H@@@@LW
)@@G@@               AUTORECOV,REBOOTCT,TERMINAL,LTG,REENTRANT,LIBTE,ESIBAS,SCLX
)@@G@@GA,;  @D@@@@               CNIOC,NCSP,CSPRDP,ESSIZE,EPLACM,EPLACP @ @@@@LY
)@@G@@CONFD  PANWRT  STPAUL,SSEQPT  @#@@@@CONFD  PCTDEF     @D@@@@CONFD  PCTLNLZ
)@@G@@K  MAXOPN,SWAP,AUTORECOV,UNIVAC,CLRCOR,TIP@]@@@@CONFD  PFP  @]@@@@CONFD MA
)@@G@@ PFS1 @#@@@@CONFD  PNCHCN     @C@@@@CONFD  PNTERR  PFRCVR,PFURVR,GCCINT,MB
)@@G@@SYMBIONT    @ @@@@CONFD  PRCLOS  FIXEDISC,TIP   @H@@@@CONFD  PRINT$  EXSMC
)@@G@@NAP,EXPRINT,E8TAPM,E8DRPM,E8IML,E8PGL,STDPAG,STDBOT,SAFHDG,;@E@@@@      MD
)@@G@@         SHDGSP,PRSPMX,RSNSWP,RSNGRP,RSICNT,SCGA,TIP  @]@@@@CONFD  PRTCNME
)@@G@@@ @@@@CONFD  PRTCON  PRSPMX,RSICNT  @B@@@@CONFD  PR$RDS  STPAUL,SCGA,EXSMF
)@@G@@NAP,RSICNT  @ @@@@CONFD  PSH     TIP,DSTITV     @D@@@@CONFD  PST     TIPMG
)@@G@@,FILCTRL,LOG$TP,VTRECS,COREFILE     @#@@@@CONFD  PUNCH$     @ @@@@CONFD MH
)@@G@@ RB9000  NOS93,IODBUG   @#@@@@CONFD  RDCHKP     @]@@@@CONFD  RDCLR@#@@@@MI
)@@G@@CONFD  READA$     @D@@@@CONFD  READ$   STPAUL,QWMODE,SYMBIONT,RSICNT,SCGMJ
)@@G@@A     @C@@@@CONFD  REFORK  RTPROG,CLRCOR,STPAUL,PCTMAX,TIP  @E@@@@CONFD MK
)@@G@@ REMID   UNIVAC,REPS,LTG,EXSNAP,EXPRINT,GCCINT,TIP    @ @@@@CONFD  RMCPCML
)@@G@@   SYMBIONT,DLTYPE@^@@@@CONFD  RMCRC   SYMBIONT @D@@@@CONFD  RMCRTN  RM9MM
)@@G@@300,TERMINAL,LTG,SYMBIONT,DLTYPE    @A@@@@CONFD  RMCTL   TERMINAL,LTG,SYMN
)@@G@@MBIONT@C@@@@CONFD  RMDSP   RM9300,TERMINAL,LTG,SYMBIONT     @D@@@@CONFD MO
)@@G@@ RMMSG   TTYSTC,RT4STC,DEDLIN,SYMBIONT,DCLUTS   @^@@@@CONFD  RMPB    SYMMP
)@@G@@BIONT @ @@@@CONFD  RMPNC   SYMBIONT,DLTYPE@H@@@@CONFD  RMSID   URSCNT,URMQ
)@@G@@STRT,TTYSTC,DCTSTC,RT4STC,MAXOPN,RSICNT,SWAP,UCDMST,; @H@@@@            MR
)@@G@@   U3CDST,U1CONFG,U3CONFG,DCT500,AUTORECOV,LTG,TERMINAL,SYMBIONT,;@ @@@@MS
)@@G@@               QWMODE,TTYCNT  @E@@@@CONFD  RMSRTN  RM9300,TERMINAL,LTG,SMT
)@@G@@YMBIONT,ATRON,DLTYPE    @D@@@@CONFD  RMSUB   MAXOPN,RSICNT,SWAP,AUTORECOMU
)@@G@@V,SYMBIONT  @F@@@@CONFD  ROLBAK  DCLUTS,SSEQPT,SSDENS,AUTORECOV,SWAP,OVRMV
)@@G@@ACC,OVRUSR  @H@@@@CONFD  ROLOUT  DCLUTS,MSW1,MSW2,MSW3,MSW4,MSW5,MSTOL,MMW
)@@G@@AXOPN,EXSNAP,EXPRINT,;  @ @@@@               OVRACC,OVRUSR  @H@@@@CONFD MX
)@@G@@ ROUTNG  TIP,CBUFCT,DSTITV,LOG$TP,MBUFCT,VTRECS,TRDLID,PRINQE,TRMXVT,;  MY
)@@G@@@^@@@@               VI3DIG   @^@@@@CONFD  RSIACT  RSICNT   @B@@@@CONFD MZ
)@@G@@ RSIFIO  RSNPKT,RSNSWP,RSNGRP,RSICNT@ @@@@CONFD  RSIGET  RSNSWP,RSICNT  NA
)@@G@@@^@@@@CONFD  RSIMSG  RSICNT   @ @@@@CONFD  RSIPUT  LOGONS,RSICNT  @H@@@@NB
)@@G@@CONFD  RSIQUE  NCSP,NOMUX,MAXOPN,RSICNT,SWAP,AUTORECOV,U1CONFG,U3CONFG,LNC
)@@G@@TG,;  @F@@@@               TERMINAL,FRID71,DCT500,TTYCNT,D5LINE,D5SATM,GND
)@@G@@CCINT @H@@@@CONFD  RSSUBS  STDPAG,STDBOT,SAFHDG,SHDGSP,MAXINQ,RSNSWP,U1CNE
)@@G@@ONFG,U3CONFG,;    @E@@@@               RSICNT,SYMBIONT,NCSP,LOGONS,UCTCSNF
)@@G@@,GCCINT     @#@@@@CONFD  RSTABL     @ @@@@CONFD  RSTASG  STPAUL,UNIVAC  NG
)@@G@@@#@@@@CONFD  RSTDMP  TLS@ @@@@CONFD  RSTFID  TLS,STPAUL     @B@@@@CONFD NH
)@@G@@ RSTIMR  U1CONFG,U3CONFG,RSICNT     @#@@@@CONFD  RSTPAR     @ @@@@CONFD NI
)@@G@@ RSTRT   ACCTON,USERON  @H@@@@CONFD  SACCNT  CMSS,CMSL,FIXS,FIXL,TAPS,TANJ
)@@G@@PL,DISCS,DISCL,MASS,MASL,ACCTON,;   @E@@@@               ATOCL,OVRACC,RENK
)@@G@@CSIZ,STDACC,STDUSR,USERON     @#@@@@CONFD  SCH8PF     @A@@@@CONFD  SEXEMNL
)@@G@@   TIP,CBUFCT,MBUFCT    @#@@@@CONFD  SMADCL     @#@@@@CONFD  SMADOP     NM
)@@G@@@#@@@@CONFD  SMALTR  TIP@D@@@@CONFD  SMALTS  STDPAG,STDBOT,SAFHDG,SHDGSPNN
)@@G@@,SMALTM     @^@@@@CONFD  SMCRS   SYMBIONT @^@@@@CONFD  SMCSI   QWMODE   NO
)@@G@@@^@@@@CONFD  SMCVT1  SYMBIONT @#@@@@CONFD  SMDACT     @ @@@@CONFD  SMDFANP
)@@G@@C  SSSCSP,NCSP    @C@@@@CONFD  SMFILE  CONNECT,SUBSYSTEM,NCSP,SSSCSP    NQ
)@@G@@@ @@@@CONFD  SMICOL  SYMBIONT,QWMODE@F@@@@CONFD  SMKEY   NCSP,SSSCSP,NOMNR
)@@G@@UX,RSICNT,SYMBIONT,CSPRDP,IONSS     @G@@@@CONFD  SMLIST  NCSP,SSSCSP,NOMNS
)@@G@@UX,URSCNT,DEDLIN,AUTORECOV,SWAP,SYMBIONT  @B@@@@CONFD  SMNXTP  URSCNT,SYNT
)@@G@@MBIONT,RSICNT,TIP @C@@@@CONFD  SMPRB9  NOMUX,AUTORECOV,SWAP,SYMBIONT    NU
)@@G@@@B@@@@CONFD  SMPRCN  GCCINT,SAFHDG,SYMBIONT     @F@@@@CONFD  SMQUES  MAXNV
)@@G@@OPN,RSICNT,SWAP,RSMAXE,AUTORECOV,TERMINAL,LTG   @#@@@@CONFD  SMRKEY     NW
)@@G@@@#@@@@CONFD  SMRTRM  TIP@^@@@@CONFD  SMSACR  SYMBIONT @^@@@@CONFD  SMSAPNX
)@@G@@R  SYMBIONT @^@@@@CONFD  SMSENT  SYMBIONT @^@@@@CONFD  SMSNTN  SYMBIONT NY
)@@G@@@#@@@@CONFD  SMTPOS     @G@@@@CONFD  SMUPQ   URSCNT,NCSP,SYMBIONT,RSICNTNZ
)@@G@@,CSPRDP,QWMODE,FIXEDISC,TIP   @^@@@@CONFD  SNAP    EXSNAP   @A@@@@CONFD OA
)@@G@@ SN$AP   U1106,EXSNAP,ESITMO  @B@@@@CONFD  SQKEY   URSCNT,SUBSYSTEM,SYMBOB
)@@G@@IONT  @E@@@@CONFD  SRKEY   SSEQPT,SUBSYSTEM,FIXEDISC,URSCNT,SYMBIONT    OC
)@@G@@@#@@@@CONFD  SSUTIL  TIP@C@@@@CONFD  SVKEY   SSEQPT,URSCNT,SUBSYSTEM,SYMOD
)@@G@@BIONT @C@@@@CONFD  SXKEY   SSEQPT,SUBSYSTEM,SYMBIONT,URSCNT @^@@@@CONFD OE
)@@G@@ SYMACT  SBLEV1   @F@@@@CONFD  SYMBIO  SCGA,MAXF4,MAXF8,MAXF17,CONNECT,SOF
)@@G@@UBSYSTEM,UNIVAC   @G@@@@CONFD  SYMBKP  STDPAG,STDBOT,SAFHDG,SHDGSP,NCSP,OG
)@@G@@URSCNT,RSICNT,FIXEDISC  @B@@@@CONFD  SYMBUF  EXSNAP,EXPRINT,SYMBIONT    OH
)@@G@@@^@@@@CONFD  SYMCLC  SCGA     @ @@@@CONFD  SYMCOR  IONSS,STPAUL   @ @@@@OI
)@@G@@CONFD  SYMCRS  SYMBIONT,ASGSCN@D@@@@CONFD  SYMICR  STPAUL,TERMINAL,LTG,SOJ
)@@G@@YMBIONT,ASGSCN    @^@@@@CONFD  SYMPCH  SYMBIONT @^@@@@CONFD  SYMPER  SYMOK
)@@G@@BIONT @E@@@@CONFD  SYMPRB  NCSP,CSPRDP,NOMUX,SYMBIONT,STPAUL,SSSCSP     OL
)@@G@@@I@@@@CONFD  SYMPRS  U1106,ESITMO,STDPAG,STDBOT,SAFHDG,SHDGSP,SYMBIONT,UOM
)@@G@@RSCNT,SSSCSP,;    @A@@@@               NCSP,SMSADV,GCCINT   @E@@@@CONFD ON
)@@G@@ SYMPUS  PCHHDG,PCHMSG,SYMBIONT,URSCNT,SSSCSP,NCSP    @ @@@@CONFD  SYM75OO
)@@G@@1  PRLOOP,SYMBIONT@I@@@@CONFD  SYSBAL  IONSS,UNIVAC,FCDBSZ,SBLEV1,SBLEV2OP
)@@G@@,SBLEV3,SBLEV4,SBLEV5,SBTIMEON,;    @H@@@@               SIPIO,SBFILE,SBOQ
)@@G@@RUN,CONTIM,CONNECT,SUBSYSTEM,NMSA,STORE,RTPROG,;@H@@@@               SYMOR
)@@G@@BIONT,REENTRANT,EXSNAP,EXPRINT,NCSP,U1CONFG,U3CONFG,NOS93,; @H@@@@      OS
)@@G@@         CAUSTRP,CAUGRSP,IOAUSTR,IOAUACR,IOAUCHI,SPU,GCCINT,ESSIZE,;    OT
)@@G@@@E@@@@               URSCNT,QWMODE,SIPDAT,PRIEXP,SSSCSP,IOLM,TIP  @I@@@@OU
)@@G@@CONFD  SYSSIP  SYMBIONT,SBLEV1,SBLEV2,SBLEV3,SIPIO,CONTIM,SBFILE,SBRUN,COV
)@@G@@ONTIM,;     @H@@@@               SBTIMEON,NOMUX,NCSP,EXSNAP,EXPRINT,REENOW
)@@G@@TRANT,RTPROG,U1CONFG,;  @I@@@@               U3CONFG,NOS93,NMSA,CAUSTRP,OX
)@@G@@CAUGRSP,IOAUSTR,IOAUACR,IOAUCHI,SPU,;     @H@@@@               GCCINT,ESOY
)@@G@@SIZE,URSCNT,QWMODE,SIPDAT,SSSCSP,SUBSYSTEM,IOLM,TIP   @C@@@@CONFD  TA   OZ
)@@G@@   STPAUL,CONNECT,SUBSYSTEM,NMSA    @#@@@@CONFD  TERLBL     @F@@@@CONFD PA
)@@G@@ TERM    UNIVAC,REPS,RTPROG,NCSP,NOMUX,LTG,TERMINAL,TIP     @A@@@@CONFD PB
)@@G@@ TEST1   IONSS,STPAUL,IOLM    @I@@@@CONFD  TH      IODBUG,UNIVAC,IOLM,TLPC
)@@G@@S,SUBSYSTEM,IOAUACR,IOAUCHI,IOAUSTR,CAUIPAR     @D@@@@CONFD  THR     IOLPD
)@@G@@M,SUBSYSTEM,CAUIPAR,IOAUCHI,TLS     @H@@@@CONFD  TIME    ACU,SPU,NCSP,NOPE
)@@G@@MUX,AUTORECOV,SWAP,SBLEV1,TERMINAL,LTG,CONNECT,;@B@@@@               SUBPF
)@@G@@SYSTEM,RTPROG,REMOTE,TIP@H@@@@CONFD  TIMER   TIP,TIMCTRL,TIMDAYS,TIMLNKBPG
)@@G@@LKS,LNKBLKS,MINBLKS,DAYBLKS,FILCTRL @H@@@@CONFD  TIMREQ  TIP,TIMCTRL,TIMPH
)@@G@@DAYS,TIMLNKBLKS,LNKBLKS,MINBLKS,DAYBLKS,FILCTRL @ @@@@CONFD  TINTL   TLSPI
)@@G@@,PRIVAC     @E@@@@CONFD  TIPDSP  TIP,FILCTRL,LOG$TP,TIMCTRL,US$ER,COREFIPJ
)@@G@@LE    @ @@@@CONFD  TIPFUN  TIP,COREFILE   @ @@@@CONFD  TIPKEY  TIP,LOG$TPK
)@@G@@P     @A@@@@CONFD  TIPLOD  TIP,CLRTPC,LOG$TP    @#@@@@CONFD  TIPMIS  TIPPL
)@@G@@@#@@@@CONFD  TIPSNP  TIP@#@@@@CONFD  TIPTRM  TIP@D@@@@CONFD  TLABEL  QWMPM
)@@G@@ODE,TLS,TPOWN,TLSIMP,PRIVAC,STPAUL  @ @@@@CONFD  TLANSI  QWMODE,TLSIMP  PN
)@@G@@@^@@@@CONFD  TLTRAL  QWMODE   @G@@@@CONFD  TM      TLS,SUBSYSTEM,IOLM,STPO
)@@G@@PAUL,IODBUG,IOAUACR,IOAUSTR,IOAUCHI @ @@@@CONFD  TMR     SUBSYSTEM,IOLM PP
)@@G@@@H@@@@CONFD  TODRUM  NCSP,NOMUX,AUTORECOV,SWAP,CSPCLT,CSPLU,ACSPLU,STATNPQ
)@@G@@,TERMINAL,; @I@@@@               STNGRP,LTG,REMOTE,TSITE,D5LINE,D5SATM,SPR
)@@G@@YMCLS,DCLUTS,GROUP,CSPAUX     @D@@@@CONFD  TOUT    CNIOC,ESIBAS,HBM,U1COPS
)@@G@@NFG,RSICNT,UCTCS  @ @@@@CONFD  TPLOGM  TIP,LOG$TP     @ @@@@CONFD  TPLOGPT
)@@G@@R  TIP,LOG$TP     @H@@@@CONFD  TP$INT  TIP,COREFILE,KONSFL,FILCTRL,TIMCTPU
)@@G@@RL,TIMLNKBLKS,INTFLS,MIN432,; @G@@@@               MAX432,MIN782,MAX782,PV
)@@G@@MINIF2,MAXIF2,TYP432,TYP782,TYPEF2  @^@@@@CONFD  TRACER  SYMBIONT @H@@@@PW
)@@G@@CONFD  TRACES  NCSP,TERMINAL,LTG,SYMBIONT,U1CONFG,U3CONFG,NOS93,RTPROG,SPX
)@@G@@PU,;  @I@@@@               REPS,URSCNT,SBLEV1,EXSNAP,EXPRINT,NMSA,CAUSTRPY
)@@G@@P,CAUGRSP,IOAUSTR,;     @G@@@@               IOAUACR,IOAUCHI,GCCINT,ESSIPZ
)@@G@@ZE,QWMODE,SSSCSP,SYBSYSTEM,TIP@#@@@@CONFD  TREAD$     @H@@@@CONFD  TRFUNQA
)@@G@@C  TIP,FILCTRL,CBUFCT,LOG$TP,STATXN,TIMCTRL,VTRECS,VI3DIG,TRMXVT,;@A@@@@QB
)@@G@@               PRINQE,POLPID,TPTELE @#@@@@CONFD  TSSRES     @H@@@@CONFD QC
)@@G@@ TSTPCT  STPAUL,EXTCH,MAXBDI,TERMINAL,LTG,REENTRANT,CONNECT,SUBSYSTEM   QD
)@@G@@@ @@@@CONFD  TSWAP   TLS,PRIVAC     @#@@@@CONFD  TSWCNT     @B@@@@CONFD QE
)@@G@@ TSWFIL  TLS,PRIVAC,LOGTYP,LOGEOF   @#@@@@CONFD  TSWMSH  TLS@E@@@@CONFD QF
)@@G@@ UCDMCT  HBM,U1CONFG,SYMBIONT,RSICNT,UCTCS,U1DELY     @C@@@@CONFD  UCDMIQG
)@@G@@N  HBM,U1CONFG,SYMBIONT,RSICNT,UCTCS@H@@@@CONFD  UKEYIN  IONSS,NCSP,NOMUQH
)@@G@@X,FNCCHK,SBLEV1,CNSN,CONSOL,URSCNT,QWMODE,RTMC,;@B@@@@               CKSQI
)@@G@@M,SUBSYSTEM,TIP,LOG$TP  @^@@@@CONFD  UPREG   SUBSYSTEM@A@@@@CONFD  UPROAQJ
)@@G@@R  SUBSYSTEM,LASTRK     @F@@@@CONFD  VALA    QWMODE,LOGONS,REMUSE,NOMUX,QK
)@@G@@NCSP,LTG,TERMINAL,RSICNT@A@@@@CONFD  XKEY    UNIVAC,SUBSYSTEM     @^@@@@QL
)@@G@@CONFD  ZRCOMP  SUBSYSTEM@^@@@@CONFD  ZREXPD  SUBSYSTEM@^@@@@CONFD  ZRIN QM
)@@G@@   SUBSYSTEM@C@@@@CONFD  ZRMAIN  SUBSYSTEM,URDBUG,SYMBIONT,URSTRT @^@@@@QN
)@@G@@CONFD  ZROUT   SUBSYSTEM@A@@@@CONFD  ZSASNC  SUBSYSTEM,URDBUG     @B@@@@QO
)@@G@@CONFD  ZSINTS  SUBSYSTEM,URDBUG,SYMBIONT  @B@@@@CONFD  ZSKEY   SUBSYSTEMQP
)@@G@@,URDBUG,SYMBIONT  @^@@@@CONFD  ZSPOOL  SUBSYSTEM@B@@@@CONFD  ZSTERM  SUBQQ
)@@G@@SYSTEM,URDBUG,SYMBIONT  ___TEM,RTPROG,REMOTE,TIP@H@@@@CONFD  TIMER   TIPQR
)@@G@@,TIMCTRL,TIMDAYS,TIMLNKBLKS,LNKBLKS,MINBLKS,DAYBLKS,FILCTRL @H@@@@CONFD QS
)@@G@@ TIMREQ  TIP,TIMCTRL,TIM*[S@@@*SDFF*@[@@@@*DACCC@]@@@@-561,563    @C@@@@QT
)@@G@@          L         A0,CLPTYPE,A2     . RUN TYPE@B@@@@          TNE,U   QU
)@@G@@  A0,DEMAND         .   @B@@@@          TLE,U     A4,SPRD+CPLEV+1   .   QV
)@@G@@@]@@@@-2362,2362  @B@@@@          L         A1,PCQEA,A0       .   @C@@@@QW
)@@G@@          L         A1,CLPTYPE,A1     . RUN TYPE@]@@@@*DALOAD     @#@@@@QX
)@@G@@-40       DALOAD  @B@@@@          AU        A2,PCBDI,A0       .   @B@@@@QY
)@@G@@          L         A5,BDPSR,A3       .   @H@@@@          TEP,U     A5,1QZ
)@@G@@*/16          . $T CONTROL BANK WRITE PROTECTED ?     @E@@@@          J RA
)@@G@@        SEGER1            . $A YES,SEGER1   NO  @#@@@@-56,56    DALOAD  RB
)@@G@@@H@@@@          A         A5,BCLL,A2        . BASE + RELATIVE START = ABRC
)@@G@@S ADDRESS   @C@@@@          LSSL      A5,9              . IN WORDS@B@@@@RD
)@@G@@          L         X10,A5            .   @[@@@@*DAPAM@#@@@@-307,307  DARE
)@@G@@PAM   @F@@@@          TG        A5,R1             . $T IS DEADLINE CRITIRF
)@@G@@CAL?  @]@@@@*EX8LOD     @]@@@@-228/1,1    @F@@@@          JZ        A10,RG
)@@G@@VOIDSG        . CHECK FOR 5-ID 2EGMEN3    @#@@@@-235      EX8LOD  @]@@@@RH
)@@G@@VOIDSG    . @]@@@@*FISTUP     @#@@@@-400,400  FISTUP  @B@@@@          L RI
)@@G@@        A3,MDBASE         .   @B@@@@          SSL       A3,9            RJ
)@@G@@  .   @[@@@@*MSCON@#@@@@-2219,2222 DISP   @F@@@@          LXI       A0,BRK
)@@G@@LDRD          . $P GET USER BUFFER LENGTH @H@@@@          LSSL      A0,6RL
)@@G@@              . $P SHIFT OFF S1 TO REMOVE POSSIBLE    @E@@@@          SSRM
)@@G@@L       A0,6              . $P SIGN EXTEND BITS @F@@@@          LXM     RN
)@@G@@  A0,BADRD          . $P GET USER BUFFER ADDR   @[@@@@*SMUPQ@#@@@@-897  RO
)@@G@@    SMUPQ   @H@@@@          SZ        MLTBLK,A3         . ZERO, SO NOT RRP
)@@G@@ELEASED ON NEXT FILE    @]@@@@*SYMPRS     @#@@@@-996,999  SYMPRS  @^@@@@RQ
)@@G@@-1006,1012    SYMPRS    @[@@@@*TM   @]@@@@-331,331  TM@G@@@@          TNRR
)@@G@@        USTNBE,X9         . $T WRITE AFTER BACKING OVER EOF @[@@@@*TSWAPRS
)@@G@@@]@@@@-489/5,5    @G@@@@          SZ        RSTLOD,A0         . CLEAR ALRT
)@@G@@TERNATE MESSAGE ADDRESS @B@@@@          S         A4,TRUN,A0        .   RU
)@@G@@@]@@@@*UPROAR     @D@@@@          L         X8,A0             . GET D-BARV
)@@G@@NK    @F@@@@          SZ        RTNFLG            . CLEAR RETURN TO UPRERW
)@@G@@G FLAG___^TUR7K^TJR])@[MR#@@[M;*@@@GBCH@@@BGH@@@*[@@@@*SDFF*@^@@@@PROGRARX
)@@G@@MMER 32 0-0040S   @#@@@@ROQUAL    MTDEW   @D@@@@PRINTAPES 1028/1020,1130RY
)@@G@@/1288,1366/1390,1597/2840     @^@@@@ASMD      E8ID ALWAYS   @#@@_@DONTASRZ
)@@G@@M CDISP     @#@@_@DONTASM CSPAT2    @#@@_@DONTASM CSPCOM    @#@@_@DONTASSA
)@@G@@M CSPERR    @#@@_@DONTASM CSPESI    @#@@_@DONTASM CSPIH     @#@@_@DONTASSB
)@@G@@M CSPINR    @#@@_@DONTASM CSPIN     @#@@_@DONTASM CSPIO     @#@@_@DONTASSC
)@@G@@M CSPMSS    @#@@_@DONTASM CSPOUT    @#@@_@DONTASM CSPREC    @#@@_@DONTASSD
)@@G@@M CSPRMI    @#@@_@DONTASM CSPRMO    @#@@_@DONTASM CSPSON    @#@@_@DONTASSE
)@@G@@M CSPSSS    @#@@_@DONTASM CSPSUB    @#@@_@DONTASM CSPUTL    @#@@_@DONTASSF
)@@G@@M DCTBEL    @#@@_@DONTASM DCTCP     @#@@_@DONTASM DCTCR     @#@@_@DONTASSG
)@@G@@M DCTERM    @#@@_@DONTASM DCTINT    @#@@_@DONTASM DCTPRB    @#@@_@DONTASSH
)@@G@@M DCTPR     @#@@_@DONTASM DCTRES    @#@@_@DONTASM ONCPSP    @#@@_@DONTASSI
)@@G@@M ONCRSP    @#@@_@DONTASM ONPNSP    @#@@_@DONTASM RB9000    @#@@_@DONTASSJ
)@@G@@M ZRCOMP    @#@@_@DONTASM ZREXPD    @]@@_@DONTASM ZRIN@#@@_@DONTASM ZRMASK
)@@G@@IN    @#@@_@DONTASM ZROUT     @#@@_@DONTASM ZSASNC    @#@@_@DONTASM ZSINSL
)@@G@@TS    @#@@_@DONTASM ZSKEY     @#@@_@DONTASM ZSPOOL    @#@@_@DONTASM ZSTESM
)@@G@@RM    @G@@@@RUN GEN0 GEN1 GEN2 GEN3 GEN4 GEN5       . FILES FOR GEN0-GENSN
)@@G@@5 RUNSTREAMS@D@@@@MSGFILE MSGFILE ADD4COPY                . ADD FILES   SO
)@@G@@@G@@@@PACK EVERYTHING                         . NOT, NOTHING, OR EVERYTHSP
)@@G@@ING   @F@@@@KLUDGE    ''[''                         . FOR RESTART PROCEDSQ
)@@G@@URE   @^@@@@CONFIG    ACCTON    2   @^@@@@CONFIG    ACU       0   @^@@@@SR
)@@G@@CONFIG    ACUNSS    17  @^@@@@CONFIG    ASGSCN    1   @^@@@@CONFIG    CKSS
)@@G@@SM      1   @^@@@@CONFIG    CNIOC     0   @^@@@@CONFIG    CNSN      1   ST
)@@G@@@^@@@@CONFIG    CONTIM    300 @^@@@@CONFIG    COREFILE  0   @^@@@@CONFIGSU
)@@G@@    CSPRDP    0   @^@@@@CONFIG    DBLOCK    100 @^@@@@CONFIG    DCBOOT  SV
)@@G@@  1   @^@@@@CONFIG    DCLUTS    8443@^@@@@CONFIG    DEDLIN    0   @^@@@@SW
)@@G@@CONFIG    DHLACE    1   @^@@@@CONFIG    DHLACH    1   @ @@@@CONFIG    DISX
)@@G@@AGTYP   'F40'     @^@@@@CONFIG    DINC      4   @^@@@@CONFIG    DMAX    SY
)@@G@@  90  @^@@@@CONFIG    DMDPAR    0   @^@@@@CONFIG    DMIN      40  @^@@@@SZ
)@@G@@CONFIG    EDITDUMPS 1   @^@@@@CONFIG    ESSIZE    0   @^@@@@CONFIG    EXTA
)@@G@@DRCH    1   @^@@@@CONFIG    EXOCH     7   @ @@@@CONFIG    EXPADJ    -010TB
)@@G@@000   @^@@@@CONFIG    EXPRINT   0   @I@@@@CONFIG    EXPRT     0251461050TC
)@@G@@505     . SPACES BEFORE SECOND ' CONFUSE EDQ MACRO    @^@@@@CONFIG    EXTD
)@@G@@PTRACE  0100@^@@@@CONFIG    EXSNAP    0   @^@@@@CONFIG    FCDBSZ    50  TE
)@@G@@@^@@@@CONFIG    FIXEDISC  16  @^@@@@CONFIG    GCCBAT    1   @^@@@@CONFIGTF
)@@G@@    GCCDEM    1   @^@@@@CONFIG    GCCINT    1   @^@@@@CONFIG    GCCMIN  TG
)@@G@@  60  @^@@@@CONFIG    ICACOL    0   @^@@@@CONFIG    IOLM      1   @^@@@@TH
)@@G@@CONFIG    IONSS     17  @ @@@@CONFIG    LASTRK    0640000   @^@@@@CONFIGTI
)@@G@@    LOGEOF    0   @^@@@@CONFIG    LOGONS    0   @^@@@@CONFIG    LOGSS   TJ
)@@G@@  7   @^@@@@CONFIG    LOGUNIT   4   @^@@@@CONFIG    LOGTYP    1   @^@@@@TK
)@@G@@CONFIG    MASLOG    0   @^@@@@CONFIG    MAXBDI    0100@^@@@@CONFIG    MATL
)@@G@@XCRD    50  @^@@@@CONFIG    MAXF17    500 @^@@@@CONFIG    MAXF4     0   TM
)@@G@@@^@@@@CONFIG    MAXF8     0   @^@@@@CONFIG    MAXGRN    200 @^@@@@CONFIGTN
)@@G@@    MAXOPN    5   @^@@@@CONFIG    MAXPAG    25  @^@@@@CONFIG    MAXTIM  TO
)@@G@@  0   @^@@@@CONFIG    MAXTUX    15  @^@@@@CONFIG    MP        0   @^@@@@TP
)@@G@@CONFIG    MPRIOR    'D' @^@@@@CONFIG    NCSP      0   @^@@@@CONFIG    NITQ
)@@G@@OAU     0   @^@@@@CONFIG    NIOC      0   @^@@@@CONFIG    NMHSP     0   TR
)@@G@@@^@@@@CONFIG    NMSA      4   @^@@@@CONFIG    NOMUX     1   @^@@@@CONFIGTS
)@@G@@    NOS93     0   @^@@@@CONFIG    OFLMEM    0   @^@@@@CONFIG    PFRCVR  TT
)@@G@@  0   @A@@@@CONFIG    PRIVAC    '0-0040-167OV'  @^@@@@CONFIG    REBOOTCTTU
)@@G@@  4   @^@@@@CONFIG    REMUSE    500 @^@@@@CONFIG    RM9300    0   @^@@@@TV
)@@G@@CONFIG    RSICNT    16  @^@@@@CONFIG    RS$TRA    1   @^@@@@CONFIG    RTTW
)@@G@@LEV     2   @^@@@@CONFIG    RTMC      0   @^@@@@CONFIG    SBFILE    0   TX
)@@G@@@^@@@@CONFIG    SBLEV1    0   @^@@@@CONFIG    SBLEV2    0   @^@@@@CONFIGTY
)@@G@@    SBLEV3    0   @^@@@@CONFIG    SBLEV4    0   @^@@@@CONFIG    SBLEV5  TZ
)@@G@@  0   @^@@@@CONFIG    SBRUN     0   @^@@@@CONFIG    SBTIMEON  0   @^@@@@UA
)@@G@@CONFIG    SCGA      0   @^@@@@CONFIG    SIPDAT    0   @^@@@@CONFIG    SIUB
)@@G@@PIO     0   @ @@@@CONFIG    SITEID    'N.Y.U.'  @^@@@@CONFIG    SMSADV  UC
)@@G@@  1   @^@@@@CONFIG    SPUNSS    17  @ @@@@CONFIG    SSEQPT    ' 6C'     UD
)@@G@@@^@@@@CONFIG    SSSCSP    0   @^@@@@CONFIG    STDPAG    66  @^@@@@CONFIGUE
)@@G@@    STPAUL    0   @^@@@@CONFIG    TEKTRO    0   @^@@@@CONFIG    TLS     UF
)@@G@@  0   @ @@@@CONFIG    TPFTYP    'F17'     @^@@@@CONFIG    TRMXCO    1   UG
)@@G@@@^@@@@CONFIG    TRMXPO    1   @^@@@@CONFIG    TRMXT     1   @^@@@@CONFIGUH
)@@G@@    TTYCNT    16  @^@@@@CONFIG    UCTCS     1   @ @@@@CONFIG    UIBANK  UI
)@@G@@  047000    @^@@@@CONFIG    URSCNT    0   @^@@@@CONFIG    U1CONFG   1   UJ
)@@G@@@^@@@@CONFIG    U1110     0   @^@@@@CONFIG    U3CONFG   0   @[@@@@.     UK
)@@G@@@^@@@@CONFIG    ARTLVL    0   @^@@@@CONFIG    AXCEED    1   @^@@@@CONFIGUL
)@@G@@    AACMS(1)  1000@^@@@@CONFIG    AACMS(2)  5000@ @@@@CONFIG    AACMS(3)UM
)@@G@@  20000     @ @@@@CONFIG    AACMS(4)  20000     @ @@@@CONFIG    AACMS(5)UN
)@@G@@  20000     @ @@@@CONFIG    QPAGES    10000     @^@@@@CONFIG    QCARDS  UO
)@@G@@  1000@ @@@@CONFIG    QCBSIZ    01000     @ @@@@CONFIG    QSUPS     6000UP
)@@G@@0     @^@@@@CONFIG    QVDT      600 @^@@@@CONFIG    NTAP(1)   5   @^@@@@UQ
)@@G@@CONFIG    NTAP(2)   5   @^@@@@CONFIG    NTAP(3)   5   @^@@@@CONFIG    QTUR
)@@G@@AP(1)   600 @^@@@@CONFIG    QTAP(2)   600 @^@@@@CONFIG    QTAP(3)   600 US
)@@G@@@^@@@@CONFIG    QDISC(1)  600 @^@@@@CONFIG    QDISC(2)  600 @^@@@@CONFIGUT
)@@G@@    QDISC(3)  600 @^@@@@CONFIG    QRTMS(1)  300 @^@@@@CONFIG    QRTMS(2)UU
)@@G@@  300 @^@@@@CONFIG    QRTMS(3)  5000@^@@@@CONFIG    QRTMS(4)  5000@^@@@@UV
)@@G@@CONFIG    QRCMS(1)  5000@^@@@@CONFIG    QRCMS(2)  5000@^@@@@CONFIG    QRUW
)@@G@@CMS(3)  5000@^@@@@CONFIG    QRCMS(4)  5000@A@@@@CONFIG    OVRACC    '0-0UX
)@@G@@040-167OV'  @ @@@@CONFIG    OVRUSR    'OVERHEAD'@^@@@@CONFIG    RESTRICTUY
)@@G@@  1   @^@@@@CONFIG    USERON    0   @ @@@@CONFIG    USUAS     200000    UZ
)@@G@@@[@@@@.     @[@@@@.     @ @@@@CONFIG    SUA(1)    ''0.0''   @ @@@@CONFIGVA
)@@G@@    SUA(2)    ''0.2''   @ @@@@CONFIG    SUA(3)    ''0.4''   @ @@@@CONFIGVB
)@@G@@    SUA(4)    ''0.0746''@ @@@@CONFIG    SUA(5)    ''0.0275''@ @@@@CONFIGVC
)@@G@@    SUA(6)    ''0.0''   @ @@@@CONFIG    SUA(7)    ''0.0''   @ @@@@CONFIGVD
)@@G@@    SUA(8)    ''0.0''   @ @@@@CONFIG    SUA(9)    ''0.0''   @ @@@@CONFIGVE
)@@G@@    SUA(10)   ''0.0''   @ @@@@CONFIG    SUA(11)   ''0.0''   @ @@@@CONFIGVF
)@@G@@    SUA(12)   ''0..0''  @ @@@@CONFIG    SUA(13)   ''0.0''   @ @@@@CONFIGVG
)@@G@@    SUA(14)   ''0.25''  @ @@@@CONFIG    SUA(15)   ''0.25''  @ @@@@CONFIGVH
)@@G@@    SUA(16)   ''0.25''  @ @@@@CONFIG    SUA(17)   ''0.25''  @ @@@@CONFIGVI
)@@G@@    SUA(18)   ''0.25''  @ @@@@CONFIG    SUA(19)   ''0.0''   @ @@@@CONFIGVJ
)@@G@@    SUA(20)   ''0.0''   @ @@@@CONFIG    SUA(21)   ''0.0''   @ @@@@CONFIGVK
)@@G@@    SUA(22)   ''0.0''   @ @@@@CONFIG    SUA(23)   ''0.0''   @ @@@@CONFIGVL
)@@G@@    SUA(24)   ''0.0''   @ @@@@CONFIG    SUA(25)   ''0.0''   @ @@@@CONFIGVM
)@@G@@    SUA(26)   ''0.0''   @ @@@@CONFIG    SUA(27)   ''0.0''   @ @@@@CONFIGVN
)@@G@@    SUA(28)   ''0.0''   @ @@@@CONFIG    SUA(29)   ''0.0''   @ @@@@CONFIGVO
)@@G@@    SUA(30)   ''0.0''   @ @@@@CONFIG    SUA(31)   ''0.0''   @ @@@@CONFIGVP
)@@G@@    SUA(32)   ''0.0''   @ @@@@CONFIG    SUA(33)   ''0.0''   @E@@@@REMOTEVQ
)@@G@@ THINGO  0252314172761 'CLAIRE'    USLOW1 APPLICATIONS@E@@@@REMOTE THINGVR
)@@G@@O  0252314172762 'J.X.T.'    USLOW2 APPLICATIONS@D@@@@REMOTE THINGO  025VS
)@@G@@2314172763 '-BEAR-'    USLOW3 TEDDY @E@@@@REMOTE THINGO  0252314172764 'VT
)@@G@@JACK-S'    USLOW4 APPLICATIONS@E@@@@REMOTE THINGO  0252314172765 'NICKIEVU
)@@G@@'    USLOW5 APPLICATIONS@E@@@@REMOTE THINGO  0252314172766 'QUINN!'    UVV
)@@G@@SLOW6 APPLICATIONS@E@@@@REMOTE THINGO  0250310221124 '>KRAK<'    UCHRIT VW
)@@G@@APPLICATIONS@E@@@@REMOTE THINGO  0250611031005 'ETOILE'    UFICHE APPLICVX
)@@G@@ATIONS@E@@@@REMOTE THINGO  0250715606061 'GEORGE'    UGM001 APPLICATIONSVY
)@@G@@@F@@@@REMOTE THINGO  0250601232461 '!TWIG!'    UFAST1 APPLICATIONS-30/72VZ
)@@G@@@F@@@@REMOTE THINGO  0250601232462 '-TRIP-'    UFAST2 APPLICATIONS-30/72WA
)@@G@@@F@@@@REMOTE THINGO  0250601232463 'STOPIT'    UFAST3 APPLICATIONS-30/72WB
)@@G@@@F@@@@REMOTE THINGO  0250601232464 'STASH!'    UFAST4 APPLICATIONS-30/72WC
)@@G@@@F@@@@REMOTE THINGO  0250601232465 '>TILT<'    UFAST5 APPLICATIONS-30/72WD
)@@G@@@F@@@@REMOTE THINGO  0250601232466 'STUFFY'    UFAST6 APPLICATIONS-30/72WE
)@@G@@@F@@@@REMOTE THINGO  0250601232467 '>TOWA<'    UFAST7 APPLICATIONS-30/72WF
)@@G@@@F@@@@REMOTE THINGO  0250601236762 'FT72PH'    UFAS72 POMPLUN-PHRI-30/72WG
)@@G@@@E@@@@REMOTE THINGO  0256360046163 'FD13PH'    U30D13 PHRI-30/132 @E@@@@WH
)@@G@@REMOTE THINGO  0252162676061 'MCTT01'    UQ2701 DR-TICK     @D@@@@REMOTEWI
)@@G@@ THINGO  0252161666671 'MCTT02'    UQ1669 MEDCTR@D@@@@REMOTE THINGO  025WJ
)@@G@@3262676164 'MCTT03'    UZ2714 MEDCTR@D@@@@REMOTE THINGO  0253267646760 'WK
)@@G@@MCTT04'    UZ7470 MEDCTR@D@@@@REMOTE THINGO  0252164666263 'MCTT05'    UWL
)@@G@@Q4623 MEDCTR@D@@@@REMOTE THINGO  0252166717166 'MCTT06'    UQ6996 MEDCTRWM
)@@G@@@D@@@@REMOTE THINGO  0253265656267 'MCTT07'    UZ5527 MEDCTR@D@@@@REMOTEWN
)@@G@@ THINGO  0253261626762 'MCTT08'    UZ1272 MEDCTR@D@@@@REMOTE THINGO  025WO
)@@G@@2661646661 'MCTT09'    UV1461 MEDCTR@D@@@@REMOTE THINGO  0252663656465 'WP
)@@G@@MCTT10'    UV3545 MEDCTR@D@@@@REMOTE THINGO  0252663616065 'MCTT11'    UWQ
)@@G@@V3105 MEDCTR@D@@@@REMOTE THINGO  0252664606461 'MCTT12'    UV4041 MEDCTRWR
)@@G@@@D@@@@REMOTE THINGO  0250164656761 'MCTT13'    UA4571 MEDCTR@D@@@@REMOTEWS
)@@G@@ THINGO  0252163606161 'MCTT14'    UQ3011 MEDCTR@D@@@@REMOTE THINGO  025WT
)@@G@@3067676267 'MCTT15'    UX7727 MEDCTR@D@@@@REMOTE THINGO  0250371716164 'WU
)@@G@@MCTT16'    UC9914 MEDCTR@D@@@@REMOTE THINGO  0250365656663 'MCTT17'    UWV
)@@G@@C5563 MEDCTR@D@@@@REMOTE THINGO  0250364616270 'MCTT18'    UC4128 MEDCTRWW
)@@G@@@D@@@@REMOTE THINGO  0250366656362 'MCTT19'    UC6532 MEDCTR@D@@@@REMOTEWX
)@@G@@ THINGO  0250365626167 'MCTT20'    UC5217 MEDCTR@E@@@@REMOTE THINGO  025WY
)@@G@@1767606761 'PHRI05'    UO7071 PHRI-POMPLIN@F@@@@REMOTE THINGO  025076464WZ
)@@G@@6767 'PROV02'    UG4477 PROVOST-OFFICE    @F@@@@REMOTE THINGO  025076665XA
)@@G@@7066 'PROV03'    UG6586 PROVOST-OFFICE    @F@@@@REMOTE THINGO  025236263XB
)@@G@@7170 'UCREG5'    US2398 REGISTRATION-UCAS @F@@@@REMOTE THINGO  025236360XC
)@@G@@6471 'UCREG6'    US3049 REGISTRATION-UCAS @E@@@@REMOTE THINGO  025131426XD
)@@G@@6167 'ARCTIC'    UKLV17 OCEANOGRAPHY@E@@@@REMOTE THINGO  0251314266762 'XE
)@@G@@REDSEA'    UKLV72 OCEANOGRAPHY@E@@@@REMOTE THINGO  0251314266466 'BERINGXF
)@@G@@'    UKLV46 OCEANOGRAPHY@E@@@@REMOTE THINGO  0251314267060 'BAIKAL'    UXG
)@@G@@KLV80 OCEANOGRAPHY@E@@@@REMOTE THINGO  0251314266671 'THAMES'    UKLV69 XH
)@@G@@OCEANOGRAPHY@E@@@@REMOTE THINGO  0251311200110 'DEDSEA'    UKIPAH OCEANOXI
)@@G@@GRAPHY@E@@@@REMOTE THINGO  0252355100420 'OTPHRI'    US-HDP PHRI-NOVICK XJ
)@@G@@@E@@@@REMOTE THINGO  0250471616264 'PHRI02'    UD9124 PHRI-NOVICK @E@@@@XK
)@@G@@REMOTE THINGO  0252271616201 'ROCK01'    UR912A ROCKEFELLER @E@@@@REMOTEXL
)@@G@@ THINGO  0252262666165 'ROCK02'    UR2615 ROCKEFELLER @E@@@@REMOTE THINGXM
)@@G@@O  0252267627064 'ROCK03'    UR7284 ROCKEFELLER @E@@@@REMOTE THINGO  025XN
)@@G@@2266646571 'ROCK04'    UR6459 ROCKEFELLER @E@@@@REMOTE THINGO  025226662XO
)@@G@@6461 'ROCK05'    UR6241 ROCKEFELLER @D@@@@REMOTE THINGO  0251455140420 'XP
)@@G@@OFPHRI'    UL-LDP PHRI  @D@@@@REMOTE THINGO  0251455100420 'ODPHRI'    UXQ
)@@G@@L-HDP PHRI  @E@@@@REMOTE THINGO  0252004206161 'DAK001'    UPDP11 DOUG-KXR
)@@G@@OPPIE @F@@@@REMOTE THINGO  0256160556163 '-FONG-'    U10-13 ZEITLIN-10/1XS
)@@G@@30    @F@@@@REMOTE THINGO  0256360556762 '-TEST-'    U30-72 ZEITLIN-30/7XT
)@@G@@2     @F@@@@REMOTE THINGO  0256360556163 '-DEEZ-'    U30-13 ZEITLIN-30/1XU
)@@G@@30    @E@@@@REMOTE THINGO  0250405151716 '-RTST-'    UDEMON ZEITLIN     XV
)@@G@@@D@@@@REMOTE THINGO  0256161636001 '-GBA1-'    U1130A GBA   @D@@@@REMOTEXW
)@@G@@ THINGO  0256161636002 '-GBA2-'    U1130B GBA   @D@@@@REMOTE THINGO  025XX
)@@G@@6161636003 '-GBA3-'    U1130C GBA   @F@@@@REMOTE THINGO  0252327021661 'XY
)@@G@@USWB01'    USWBN1 WEATHER-BUREAU    @F@@@@REMOTE THINGO  0252327021662 'XZ
)@@G@@USWB02'    USWBN2 WEATHER-BUREAU    @F@@@@REMOTE THINGO  0252303171561 'YA
)@@G@@COMRCE'    USCOM1 COMMERCE-SCHOOL   @D@@@@REMOTE THINGO  0251405010422 'YB
)@@G@@MEYERS'    ULEADR MEYERS@F@@@@REMOTE THINGO  0250522161105 'ERNEST'    UYC
)@@G@@ERNIE OPERATIONS-EFO    @F@@@@REMOTE THINGO  0252201202431 'LARRYC'    UYD
)@@G@@RAPTY OPERATIONS-LC     @F@@@@REMOTE THINGO  0252005222231 '-T-MOY'    UYE
)@@G@@PERRY OPERATIONS-PM     @E@@@@REMOTE THINGO  0252627303132 'COMTST'    UYF
)@@G@@VWXYZ COMM-TESTER @F@@@@REMOTE THINGO  0250215140102 'PHYS01'    UPHYSX YG
)@@G@@PHYSICS-DOWNTOWN  @F@@@@REMOTE THINGO  0251002220104 'BHRADO'    UHBRAD YH
)@@G@@BELLEVUE-RADIOLOGY@E@@@@REMOTE THINGO  0250310051561 'CHEM01'    UCHEM1 YI
)@@G@@CHEM-DEPT   @E@@@@REMOTE THINGO  0250310051562 'CHEM02'    UCHEM2 CHEM-DYJ
)@@G@@EPT   @F@@@@REMOTE THINGO  0252303220527 'SYSTMS'    USCREW SYSTEMS-10CPYK
)@@G@@S     @F@@@@REMOTE THINGO  0252215172605 'XTREEM'    URMOVE SYSTEMS-30CPYL
)@@G@@S     @F@@@@REMOTE THINGO  0252303220322 'ITSRCR'    USCRCR BOB-ROBBINS-YM
)@@G@@30CPS @F@@@@REMOTE THINGO  0250301221714 '!THWAK'    UCAROL SYSTEMS-CAROYN
)@@G@@L     @E@@@@REMOTE THINGO  0252022170122 'ATHOME'    UPROAR SYSTEMS-DUFFYO
)@@G@@@E@@@@REMOTE THINGO  0250671656460 'MDCT01'    UF9540 NYUMED-30/72@E@@@@YP
)@@G@@REMOTE THINGO  0250671617160 'MDCT02'    UF9190 NYUMED-30/72@E@@@@REMOTEYQ
)@@G@@ THINGO  0250660616462 'MDCT03'    UF0142 NYUMED-30/72@E@@@@REMOTE THINGYR
)@@G@@O  0250661666161 'MDCT04'    UF1611 NYUMED-30/72@F@@@@REMOTE THINGO  025YS
)@@G@@2217070522 'ROGESO'    UROGER ROGER-SO-370/145  @E@@@@REMOTE THINGO  025YT
)@@G@@6160146163 '-FONG2'    U10L13 CHORY-LARRY @F@@@@REMOTE THINGO  025610215YU
)@@G@@0522 'MR-1BM'    U1BMER J-ACKNER-370/145  @F@@@@REMOTE THINGO  025021114YV
)@@G@@1423 'TTBILL'    UBILLS B-SUROWIC-370/145 @F@@@@REMOTE THINGO  025201416YW
)@@G@@2470 'PLANT8'    UPLNT8 UNIVAC-PLANT8     @E@@@@REMOTE THINGO  025230504YX
)@@G@@6061 'EDSCL1'    USED01 SCHL-OF-ED  @F@@@@REMOTE THINGO  0252305046062 'YY
)@@G@@EDSCL2'    USED02 ED-SCH(D-PAYNE)   @E@@@@REMOTE THINGO  0250210171414 'YZ
)@@G@@PRABHL'    UBHOLL B-HOLLANDER @D@@@@REMOTE THINGO  0256061070201 'GBA001ZA
)@@G@@'    U01GBA GBA   @E@@@@REMOTE THINGO  0250717140431 'BGOLDN'    UGOLDY ZB
)@@G@@BEN-GOLDIN  @F@@@@REMOTE THINGO  0250204012401 'BRDAB1'    UBDATA BRDCASZC
)@@G@@T-DATA-BASE @E@@@@REMOTE THINGO  0252723240461 'STUD01'    UWSTD1 STUDENZD
)@@G@@TS    @E@@@@REMOTE THINGO  0252723240462 'STUD02'    UWSTD2 STUDENTS    ZE
)@@G@@@E@@@@REMOTE THINGO  0252723240463 'STUD03'    UWSTD3 STUDENTS    @E@@@@ZF
)@@G@@REMOTE THINGO  0252723240464 'STUD04'    UWSTD4 STUDENTS    @E@@@@REMOTEZG
)@@G@@ THINGO  0256161607001 'U1108A'    U1108A STUDENTS    @E@@@@REMOTE THINGZH
)@@G@@O  0256161607002 'U1108B'    U1108B STUDENTS    @E@@@@REMOTE THINGO  025ZI
)@@G@@6161607003 'U1108C'    U1108C STUDENTS    @E@@@@REMOTE THINGO  025616160ZJ
)@@G@@7004 'U1108D'    U1108D STUDENTS    @E@@@@REMOTE THINGO  0256161607005 'ZK
)@@G@@U1108E'    U1108E STUDENTS    @E@@@@REMOTE THINGO  0256161607006 'U1108FZL
)@@G@@'    U1108F STUDENTS    @E@@@@REMOTE THINGO  0256161607007 'U1108G'    UZM
)@@G@@1108G STUDENTS    @E@@@@REMOTE THINGO  0256161607010 'U1108H'    U1108H ZN
)@@G@@STUDENTS    @E@@@@REMOTE THINGO  0256161607011 'U1108I'    U1108I STUDENZO
)@@G@@TS    @E@@@@REMOTE THINGO  0256161607012 'U1108J'    U1108J STUDENTS    ZP
)@@G@@@E@@@@REMOTE THINGO  0256161607013 'U1108K'    U1108K STUDENTS    @E@@@@ZQ
)@@G@@REMOTE THINGO  0256161607014 'U1108L'    U1108L STUDENTS    @E@@@@REMOTEZR
)@@G@@ THINGO  0256161607015 'U1108M'    U1108M STUDENTS    @E@@@@REMOTE THINGZS
)@@G@@O  0256161607016 'U1108N'    U1108N STUDENTS    @E@@@@REMOTE THINGO  025ZT
)@@G@@6161607020 'U1108P'    U1108P STUDENTS    @E@@@@REMOTE THINGO  025616160ZU
)@@G@@7021 'U1108Q'    U1108Q STUDENTS    @E@@@@REMOTE THINGO  0256161607022 'ZV
)@@G@@U1108R'    U1108R STUDENTS    @E@@@@REMOTE THINGO  0256161607023 'U1108SZW
)@@G@@'    U1108S STUDENTS    @E@@@@REMOTE THINGO  0256161607024 'U1108T'    UZX
)@@G@@1108T STUDENTS    @E@@@@REMOTE THINGO  0256161607026 'U1108V'    U1108V ZY
)@@G@@STUDENTS    @E@@@@REMOTE THINGO  0256161607027 'U1108W'    U1108W STUDENZZ
)@@G@@TS    @E@@@@REMOTE THINGO  0256161607030 'U1108X'    U1108X STUDENTS    AA
)@@G@@@E@@@@REMOTE THINGO  0256161607031 'U1108Y'    U1108Y STUDENTS    @E@@@@AB
)@@G@@REMOTE THINGO  0256161607032 'U1108Z'    U1108Z STUDENTS    @F@@@@REMOTEAC
)@@G@@ THINGO  0250220016061 'BPA001'    UBPA01 BUS&PUB-ADMIN     @E@@@@REMOTEAD
)@@G@@ THINGO  0250220012223 'BPA002'    UBPARS RON-SEIGL   @E@@@@REMOTE THINGAE
)@@G@@O  0250220012361 'BPA003'    UBPAS1 BPA-STUDENTS@D@@@@REMOTE THINGO  025AF
)@@G@@0220010515 'BPA004'    UBPAEM BPA-ED@F@@@@REMOTE THINGO  0252224022307 'AG
)@@G@@R/TBAS'    URTBSG REAL-TIME-BASIC   @E@@@@REMOTE THINGO  0252324012515 'AH
)@@G@@SYS370'    USTAUM IBM-370     @D@@@@REMOTE THINGO  0250305236061 'TTYCESAI
)@@G@@'    UCES01 CES   @E@@@@REMOTE THINGO  0251405222401 'DAMMOR'    ULERTA AJ
)@@G@@DAMES&MOORE @E@@@@REMOTE THINGO  0252317062413 'SOFTEC'    USOFTK SOF-TEAK
)@@G@@CH    @E@@@@REMOTE THINGO  0250417246063 'RAY001'    UDOT03 RAYTHEON    AL
)@@G@@@E@@@@REMOTE THINGO  0250260606166 'RAY002'    UB0016 RAYTHEON    @E@@@@AM
)@@G@@REMOTE THINGO  0250417246064 'RAY003'    UDOT04 RAYTHEON    @E@@@@REMOTEAN
)@@G@@ THINGO  0253020606160 'XPAN10'    UXP010 XPANSHUN    @E@@@@REMOTE THINGAO
)@@G@@O  0253020606161 'XPAN11'    UXP011 XPANSHUN    @E@@@@REMOTE THINGO  025AP
)@@G@@3020606162 'XPAN12'    UXP012 XPANSHUN    @E@@@@REMOTE THINGO  025302060AQ
)@@G@@6071 'XPAN09'    UXP009 XPANSHUN    @E@@@@REMOTE THINGO  0253020606070 'AR
)@@G@@XPAN08'    UXP008 XPANSHUN    @E@@@@REMOTE THINGO  0253020606067 'XPAN07AS
)@@G@@'    UXP007 XPANSHUN    @E@@@@REMOTE THINGO  0253020606066 'XPAN06'    UAT
)@@G@@XP006 XPANSHUN    @E@@@@REMOTE THINGO  0253020606065 'XPAN05'    UXP005 AU
)@@G@@XPANSHUN    @E@@@@REMOTE THINGO  0253020606064 'XPAN04'    UXP004 XPANSHAV
)@@G@@UN    @E@@@@REMOTE THINGO  0253020606063 'XPAN03'    UXP003 XPANSHUN    AW
)@@G@@@E@@@@REMOTE THINGO  0253020606062 'XPAN02'    UXP002 XPANSHUN    @E@@@@AX
)@@G@@REMOTE THINGO  0253020606061 'XPAN01'    UXP001 XPANSHUN    @E@@@@REMOTEAY
)@@G@@ THINGO  0253020606060 'XPAN00'    UXP000 XPANSHUN    @E@@@@REMOTE THINGAZ
)@@G@@O   050024252601 'RMMCT4',NO    NAK MEDCTR-1004 @F@@@@REMOTE THINGO   05BA
)@@G@@0024252602 'RMAINT',NO    NAK 1004-MAINTENANCE  @F@@@@REMOTE THINGO   05BB
)@@G@@0024252603 'RMSEAS',NO    NAK METEOROLOGY-1004  @E@@@@REMOTE THINGO   05BC
)@@G@@0000000040 'RM1130',NO    NAK GBA-1130    @D@@@@REMOTE THINGO   05000000BD
)@@G@@0001 'RMWASQ',NO    NAK UHMC  @E@@@@REMOTE THINGO   050000000033 'RMSNDSBE
)@@G@@',NO    NAK SMITH-SINGER@D@@@@REMOTE THINGO   050000000012 'RMTISH',NO  BF
)@@G@@  NAK UHMC  @E@@@@REMOTE THINGO   050000000002 'RMRK92',NO    NAK ROCK-9BG
)@@G@@200   @F@@@@REMOTE THINGO   050000000031 'RMROCK',PUNCH NAK ROCKEFELLER-BH
)@@G@@PDP15 @F@@@@REMOTE THINGO   050000000010 'RMDATA',PUNCH NAK BROADCAST-DABI
)@@G@@TABASE@E@@@@REMOTE THINGO   050000000042 'U90019',NO    NAK RAYTHEON    BJ
)@@G@@___6 'U1108V'    U1108V STUDENTS    @E@@@@REMOTE THINGO  0256161607027 'BK
)@@G@@======@@^@@ @@@@@@@@@@@@@@ ^( @@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BL
)@@G@@@@@@@@L8/FAE70-1  @@@@]]@@@@@/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^C@@A@@A@]+BM
)@@G@@@JJ@@@@@V@@^@@@@18@@@@@@@^@@@]@^@@@[@ @@@]K^@)@)@]@@@B@@@SOP@#@@@B@@@LIABN
)@@G@@@^@@@B@@@LOA@ @@@B@@@LIP@A@@@B@@@LOP@B@@@B@@@LCB@C @@B@@@LPI@D @@B@@@LDJBO
)@@G@@@E @@B@@@LIJ@F @@B@@@LPD)G@@@B@@@SPD)H@@@B@@@LBR@@@___@[Q^@@@@Q^#Q@A*^L?BP
)@@G@@@@?^S%@AP^U2@@,^-P@[H^( @[-^61@[W^8:@@E^'Y@@E^'5@@I^"+@]6 R?@@Q V])]@^[QBQ
)@@G@@)I@^#?)@Q^SO)[W^TQ)@I^-B)B]^+#)GZ^%M)@T^8M)@R^'B)@H^'*)#<^'_)S/^"0)@) U+BR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@[^]P@@@@@@@@@@@@@@@@@@@@@@@@@@[^@>BS
)@@G@@@@@@@  ASCII MODE  NO FIND     SEPARATOR   COLUMN      CARD COUNT> CARD BT
)@@G@@COUNT<@#C^@USIR EDIT ERR            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BV
)@@G@@@@@@@@@@@@@@@@@@@@@@[^[Q@S$^[Q@[I^[Q@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BW
)@@G@@@@@@@@@@@@@@+@@@@[__"^]P@[^^[Q@@[^]Q@@@@@ @@@@@@@@@@@@@@@@@@@@[^E?@@@@@ BX
)@@G@@@@[^[Q@@@@@ @@@@@@@SJ^E?@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@^@)^@)      BY
)@@G@@*SDFF*      @@@@@@@@@@@@@@@@@@@K@@@@@#)@@@@@@@@@^E?^IG@@C@@_@@[^[Q@@[@@@BZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@@@@#)@@@@@@@@@^#?^BG@@C@@_@@[^]Q@@[@@@@@@@@@CA
)@@G@@/K@@T)/K@@@@/K@@T4/K@^L\*4@^@//K@^L\/K@@T.R#)^9VR;0@@=;G@@@=W8@@@EO;!@@:CB
)@@G@@;@)@@AP;0@@A/^@^L5;@\@@@/KF@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CC
)@@G@@@@@@@@?@@@[@?A@@[V?B@@[X?C@@@<?D@@[Y?E@@@)?F@@[[?G@@[]?H@@[#?I@@[^?J@@[ CD
)@@G@@?K@@[A?L@@[B?M@@[C?N@@[D?O@@[E?P@@[F?Q@@[G?R@@[H?S@@[I?T@@[J?U@@[K?V@@[LCE
)@@G@@?W@@[M?X@@[N?Y@@[O?Z@@[P?[@@[Q?\@@[R?]@@[S?^@@[T?_@@[U @@@@(!A@@@!"B@@@:CF
)@@G@@#C@@@/$D@@@.%E@@@"&F@@@&'G@@@=(H@@@%)I@@@**J@@@>+K@@@',L@@@_-M@@@-.N@@@?CG
)@@G@@/O@@[W0P@@@01Q@@@12R@@@23S@@@34T@@@45U@@@56V@@@67W@@@78X@@@89Y@@@9:Z@@@$CH
)@@G@@;?@@@;<\@@@\=!@@@,>^@@@+?_@@[ZC[@^O-A#K@@L;G@@@M;CK@@M/@V@@@H9K@@[G[K@@HCI
)@@G@@T8K@@# @@@@GW8@@@]/@K^NNO;@@@[R#0^O+;^0@@MK@@@@IP;K@@[&;K__";*@@@MQ#@@@FCJ
)@@G@@R]0@@LC[K@@G;DK@@MH9K@@[&'0__"R#)^O<')I=N*RB_^M ;^0@@D/C0^NY[[H)@@C[@^O-CK
)@@G@@8^K^NY;G@@@M;CK@@M/KH@@@/K@^N,R3;@@@R\;@@@R:;@@@R$;@@@R<;@@@R7;)@@Q;)@@ CL
)@@G@@/K@^NZ&;@@@@/@F@@@C[K@@G&#@@@FR]0@@H&;)@@[&'0@@[R#K^O=R#0^O-8^K^N;C[F)@@CM
)@@G@@;=0@@D;*0@@X;C0@@X=80@[@/K@^O#R7_^M /K@^O^R3_^L ')H=OS @@@@J/D@^N// K^N9CN
)@@G@@;G@@@M;CK@@MR]0@@GT8K@@] @@@@GW8@@@#/@V@@@O;@@@[P;K@@[R;0@@ A<"@@@A$"@@@CO
)@@G@@/^V@@@A:"@@@A\"@@@/KF@@@A7"@@@A3"@@@A\"@@@A:"@@@A$"@@@/K@^OYA<")@@R#K^O=CP
)@@G@@/K@^O )@@@@@@@@^@)__"@@ @@[@@@[@@^SJC8W@@@KCK^SJH8)@@[&;K^O;C@@@@H'=@@@HCQ
)@@G@@G8W@@@ @H@@@>@@^S%/K@^O8>@@^S:/KF@@[C8H@@@?8I@@@/K@^O%C@@^SIC8K@@#/KF@@@CR
)@@G@@C@@^S#C8K@@[/KF@@@C@@^SDC8K@@]/KF@@@L8@@@[C@)^SJG8)@@[*@I@@@?CY@@@/K@^PACS
)@@G@@G),@@@/K@^P@%CI@@@/KF@@@C)"@@@H80@@[T80@@AG="@@@9?I@@[?80@@BC@K^S?/KF@@[CT
)@@G@@N8W@@@C^@^SJG8@@@[C9K@@[ @@^SXN8)@@@(@G@@@/K@^P;(4G@@@/K@^P:%1W@@@/K@^P;CU
)@@G@@C?W@@@!8K@@A/K@^P,%(K^SX @@^SW[(K^SX9??@@[C-G@@@:9@@@[C@0^S?')H^Q:H9@@@[CV
)@@G@@T9@@@AG>G@@@')H^Q3G)G@@@G8@@@[/K@^PQ:9K@@[/K@^P3C*?@@@:8)@@.N8)@@[%[K@[[CW
)@@G@@/K@^P:/K@^P+%@)^S?[5@^SW:@)^S?[-K^SW/K@^P:(@@@[]:(K^SX/K@^Q@[(K^SX @@^SWCX
)@@G@@:[K@[[/K@^QCG9K@@[*@G@@@/K@^PP @@^SW @@^SX/KF@@@:[K@[[ *@^SX9?K^SW98V@@@CY
)@@G@@C8@@@-[=@^SX(?@^SX/KF@@[C@@^S(D8)@@@C80@@@C!@^SX8^@^QV1@@@@I!8)@[@C80@@ECZ
)@@G@@[))^SX[=0^SX/KF@@[C8K@@@;=@@@A?8K@@'?8K@@0/K@^Q&(@@@@JC80@[@H8K@@0T8)@@EDA
)@@G@@G8!@@@/K@^QO/^0^QR%8K@@+:8K@@-C8.@@@/@0^QR/K@^QO9*)^SY9*)^S)[@)^S+[@)^S<DB
)@@G@@[@)^S=9*)^S>9*)^S$[@)^S(/K@^P6[1@^SW[!@^SW[(@^SW[>@^SW[5@^SX[1@^SX[!@^SXDC
)@@G@@C80@@F+8K@@_:8)@@ ;^@@@A8#0^Q.9*@^SLC@@^S!C@K^S,C8)@@BC@0^S?[@"^SO8#)^RADD
)@@G@@N4K^SW9!@^SY/\)^R4C9K@@*(4@^SW*)@^SW')H)@@N0K^SW9!@^S)*@@@[[/K@^RPC[@^S\DE
)@@G@@N8K@@^/\)^R4N?K^SW(@@@[[/K@^RZC9K@@(')H)@@C[@^S+/\)^R4C9K@@)')H)@@(*@^SWDF
)@@G@@*=@^SW/K@^R>C@@^S0'=@@@J/KF@@@C9K@@/')H)@@N*K^SWC[@^S</\)^R4N=K^SW(@@@[[DG
)@@G@@/K@^R+C9K@@/')H)@@C[@^S=/\)^R4/K@^R+;>@@@A')H)@@8KK^R2/KI@@@[5W@@@[1W@@@DH
)@@G@@[!W@@@[(W@@@[>W@@@/\0^R/[-W)@@Q;K^R6/KJ@@@PROCESSOR CALL ERROR    @[^^R_DI
)@@G@@ABNORMAL RETURN FROM READ$    @[ ^S^TOO MANY SPECIFICATIONS @[^^SE@@@@@@DJ
)@@G@@@USE  @@@@@@@@@@@@,     ]@@@@@[@@@@@      @@[^SO@@[^R6TPF$  @@G^SKTPF$  DK
)@@G@@            **EF**@@@@@@C8@@@@C4@ SSC?@ SSC0@ SS[4K SS[?K SS[0K SS9?K^S1DL
)@@G@@9?K SG9?K S&9?K STA     AX    AR    @@@@@@@@@@@@@@@^S5@@@@@@@@@@@@@@@@@@DM
)@@G@@@@@@@@@FREE,OPTION@@@@@@@@@@@@@@@@@@@<@@@@@@]^TM@@E^TQK@O^TU@ASG,AX     DN
)@@G@@AA0^T AE)^T AAK^T^AE@^T^C@@^)4/,0^O>/K@^)YC@@^T)[@@ SF 4@ SFC8K@@@=8@)@@DO
)@@G@@G8K@@[=8@@@)G8K@@]C@@^Y//KH^V#/K@^VB/K@^VO/K@^V0/K@^)Y/,)^W7/K@^VK/,)^W.DP
)@@G@@Q'K^X^C8@@@#/,0^PK/K@^V4/,)^XI/K@^V4C@@ SF)8@)@@[@K SF/K@^V&/,)^W'/K@^V&DQ
)@@G@@/,)^W.C8@@@ [0@ S-/,)^XA(@@ ST/K@^),C8@ ST'=@@[CC@@^Z[/^)^)S[@K S>C8@@@[DR
)@@G@@[?@ SYR;@@@ A3@ S-/K@^),/,)^X@/K@^V(/K@^VT9?@^S19*@ S&9?@^)59*@ S*9?@^S2DS
)@@G@@9*@ S?/K@^VT/,)^W7/K@^WO/,)^W./,)^X#C8@@@*C4K SS=8K@@KC8@@@"[4@ SF%8@@@*DT
)@@G@@/K@^WQC8@@@[[C@ SLC8@ SG'=@@[ C@@^ZA/^)^)YC@@^ZTC=0^TE:80@@E/K@^)YC*K SODU
)@@G@@L)K SO:80@@@C)K^TE:80@@-H)K^TE%80@@+/K@^WJC/Y@@[G)K^TEC*0 SO,@)@@H/K@^)YDV
)@@G@@[)K SS/K@^VUC@@^ZX/K@^)Y9?@ SG9*@^THC8@^TH'=@@@#C4@^TK/@@^W<;G@@@#;CK@@-DW
)@@G@@;*@@@AG8H 00[C@^ZLC@@^ZM/K@^)YC@@^ZF9?K^TQC^0^TK:80@@W9/K^S4/K@^)YCC0^TVDX
)@@G@@+80@@_9?K^TS?9@@@ 9/K SI/K@^)Y9?K^TW%9@@@@9/K SM/K@^)Y[C0 SL9?@^TY9*@ SODY
)@@G@@/K@^W[/,K^XD[@[[@[SI@ SG/,K^XD[0[@@#SI@ ST/,K^XD]0@@@]RO@ S&/,K^XD]0[@@]DZ
)@@G@@RO@ S&/,K^XD#0@@@#SO@ ST/,K^XD#@[@[@SO@@@@C4D@@@AAW^TAQ,D@@@/,0^PK/%E@@@EA
)@@G@@*?D@@@Q'%@@[Q+D@@@C@@^Z-*=D@@@/K@^)S*?D@@@*4@^SX/K@^XTC@@^Z&/K@^)SC*@^SXEB
)@@G@@/^@^XZ*@@^SW/K@^X$(4@^SXC8@@@[C)/OTA')J^S.(@@@@H9?K^S19*TK@[')J^S6+8@@@0EC
)@@G@@/K@^YU&FD@@[G@@^)7C@K^S29*@^TQ9*DK@[/,0^Q//G@^X'C8K@@[C8@^TQ'=@@[GCC)^TWED
)@@G@@!8)[@@>8)@)@/K@^X6/K@^YFC8@^TO'=@@@J/C@^Y ')C^S9N8K@@FN/)__89?K^)8<@@@@HEE
)@@G@@;C@@@#;^K@@A8KK^X.;^K@@=9*K^Z,C@@^Z0/K@^)SC8K@@]>@@^)'C8K@@#C8@^TQ'=@@[GEF
)@@G@@CC)^TW')C^S9?8)K@@?8)[@@/K@^YLG8K@@K/K@^YPC@@^Z4?8))@@?8)S@@/K@^)SC@@^Z9EG
)@@G@@=8)@]@/K@^)S=8)@^@G8K@@)+0T@@@C@@^Z_=8)@@KC@@^)^/^)^)S')C^S9C@0^TBC^_@@[EH
)@@G@@QAD@@[9?@^S>(4@^SX9?J@@]9*C@@]9?@^S2(0@^SX/K@^Y?9?@^S$/K@^Y,(4@^SX9?J@@AEI
)@@G@@9*C@@AC@@^SX**D@@@[@@^TE*?@^SX**D@@@/KE@@@C@@^)F/,0^)T/KE@@@I/U-OPTION CEJ
)@@G@@ONFLICT     @[^^Y8XXX NOT A PROGRAM FILE  @[^^Y.SI: ELEMENT NOT FOUND   EK
)@@G@@@[^^Z]SI: IMPROPER LABEL BLOCK@[^^ZBSI: TAPE I/O ERROR - STATUS:  @@@   EL
)@@G@@@[A^ZGSI: CYCLE NONEXISTANT OR IN ERROR   @[A^ZNSI: MISSING FIELD @[#^ZUEM
)@@G@@XXX ILLEGAL FIELD @[#^ZYXXX BADLY CODED FIELD   @[^^Z+XXX FILE COULD NOTEN
)@@G@@ BE ASSIGNED - STATUS:  @@@@@@@@@@@@@[D^Z$XXX ILLEGAL DEVICE@[#^Z1XXX FIEO
)@@G@@LE CAN NOT BE READ@[^^Z5XXX READ ONLY OUTPUT FILE     @[ ^Z'XXX OUTPUT FEP
)@@G@@ILE IS TAPE @[^^)@XXX CYCLE SPECIFICATION IGNORED     @[A^) I OR U OPTIOEQ
)@@G@@N NOT ALLOWED IN DEMAND, USE @ELT OR @ED. @[D^)GR#@^)P/K@^)YR'0^)ZCCT@@[ER
)@@G@@G8K@@:[CW@@@'=@@@I/KF@@@'=@@@IC@0^);N8K@@]')J^S.9*K^TH')J=S6+8@@@#/@K^)%ES
)@@G@@C@H^T@[@@^TGC8@^TF'=@@@J8KK^)- C@ SSR'0@@@/K@^)\R'0@@[OA0^T QE)^T QAK^T^ET
)@@G@@QE@^T^/KF@@@@[M^T)NAME$       @@$   000000000000C@@@@@@@[@@[@FREE,OPTIONEU
)@@G@@@@@@@@@@@@@@FILE NOT ASSIGNED:      @@@@@@@@@@@@@[A^-@@@@@@@@@@@@@@@@@@@EV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EX
)@@G@@@@@@@@@@@@@@__"@@G@@[@@@/K@J__/K@@&)/K@J__/K@@&9@@@@@@@@@@@@TPF$        EY
)@@G@@@@@@@@@C@@@@@#)@@@@@@@@@^+#^>=@@[@@@@@[^-B&;@@[=Q;@ M0'=@@@49?K N89*K^(KEZ
)@@G@@R#@^(J%@K^(N'=@@[.R#@^(M'=@@[9@@[^(KTPF$        A$M   LIB$  END ASM. ERRFA
)@@G@@ORS :       AMOUNT OF UNUSED TABLE AREA :       DECIMAL     UNDEFINED SYFB
)@@G@@MBOLS:@[  RS@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LOG  ASSEMBLY IN ERROR - ELEMFC
)@@G@@ENT:  @@@@@@@@@@@@   FLAGS:   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FD
)@@G@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@H@I@@@H@G@[@N@O@[@N@M      ^@)^@)@@@@@@FE
)@@G@@@@@@@@@@@@@@***   TOO MANY LONG LABELS   ***    @[A^%C@@@@@@@@@@@@@@@@@@FF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^^8'ERROR WHILE READING PROCEDURE @@@@@@@@@@@@FG
)@@G@@ FROM FASTRAND    @@@@@@@[^ RSLINE NUMBER SEQUENCE ERRORS   @@@@@@@@@@@@FH
)@@G@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FI
)@@G@@KG@@@@K>@@@@K"K@@@LR4@@@L48)@@MIA*@@M$*M@@N^1FK@NX.Y^@N7W5>@OO%[ZCK[)@@@FJ
)@@G@@@@@@@@K^*@@@@@@@@@KB2@@@@@@@@@KE")@@@@@@@@KI$^@@@@@@@@KL05@@@@@@@@KO.]K@FK
)@@G@@@@@@@@KS&DU@@@@@@@KV\:0)@@@@@@KY;&?*@@@@@@K+>KF9@@@@@@@@@@@@@@@@@@@@@@@@FL
)@@G@@K@@@@@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                     *    -         FM
)@@G@@@@@@@@@@@@@@@@@@@@000000@[D^7_@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FO
)@@G@@@@@@@@__"@@@@@@@@@@@@@@@I$ FORM 6,4,4,4,2,16.   @@ @@@ASM$TD EQU       0FP
)@@G@@XXXXXXXXXXXX      @@@@@@@@@@@@/,@@.>C@@^9F'=@@@I/K@^9G@#A]X]R#@ SF>8@@@^FQ
)@@G@@/K@@.1'=@@@QASSEMBLY WAS RE-STARTED AFTER ADDING **K TO TABLE AREA@@@@@@FR
)@@G@@. '.              ASM12F70-1              -(  )        SC-02@@@@@@@@@@@@FS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@; 3$000000@@@@J_@[Q RK@[C RK@[K RQ@[Q RKFT
)@@G@@@@@@@@@@@@@@ASM$PF      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E@@@@@D@@@@@I@@@@@L@@@@@RFY
)@@G@@@@@@@T@@@@@U@@@@@G@@@@@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FZ
)@@G@@@@@@@@@@@@@@@@@ R8@@@ R7@@@ R'@@@ R5@@@ R9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@]@@@@@#@@@@@^@@@@@ @@@@@AGI
)@@G@@@@@@@B@@@@@C@@@@@D@@@@@E@@@@@F@@@@@G@@@@@H@@@@@I@@@@@J@@@@@K@@@@@L@@@@@MGJ
)@@G@@@@@@@N@@@@@O@@@@@P@@@@@Q@@@@@R@@@@@S@@@@@T@@@@@U@@@@@V@@@@@W@@@@@X@@@@@YGK
)@@G@@@@@@@Z@@@@@)@@@@@-@@@@@+@@@@@<@@@@@=@@@@@>@@@@@&@@@@@$@@@@@*@@@@@(@@@@@%GL
)@@G@@@@@@@:@@@@@?@@@@@!@@@@@,@@@@@\@@@@@0@@@@@1@@@@@2@@@@@3@@@@@4@@@@@5@@@@@6GM
)@@G@@@@@@@7@@@@@8@@@@@9@@@@@'@@@@@;@@@@@/@@@@@.@@@@@"@@@@@_@@@@@@@@@@@@@@@@@@GN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^9"@@@@@@@@@@@@GO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@E 2!@@E 41@@[B/-)RP VS)[' 27+B& 4;)#YB/+@@@___GQ
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___GR
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@@@@@@@@@@@@@@@@@@@@@@GS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GU
)@@G@@$MAIN$      @@^@@^@@@@@]@@@[@ @@@@@][WR 3N[@$ 3O/K@]V49*R 3O/K@]V4^[B 3.GV
)@@G@@/?K[&'A#Q VH/@K]V6/K@]V2()A VE/K@]V6^[B 3./?K[&'+@K@">%@K@@I^[@ R'=@@@"&GW
)@@G@@^[@ R9!@)^9%[@)^9%/K@]V6BINBCD      EAO SDBSP         EAS SDBTDEC       GX
)@@G@@EAX SDBTF         EA) SDBTOD        EA< SDCHAR        EA$ SDDATA        GY
)@@G@@EA! SDDEFLIST     EA3 SDDIRECTIVES  G[= SDEDIT        C.S XDENDPRE      GZ
)@@G@@EBW SDEQUF        EB+ SDERU$        D1<]FEESRCH       EB& SDFDASC       HA
)@@G@@EB: SDFORMREF     EB5 SDFSI         EB' SDFUNCREF     EC  SDGET         HB
)@@G@@ECF SDGETREF      ECJ SDGITMS       ECQ SDGSIS        ECY SDGVLU        HC
)@@G@@EC+ SDHLST        EC> SDID          EC$ SDINFOR$      EC! SDINLN        HD
)@@G@@EC3 SDMAIN        LVQFAEMVSTITM     EDA SDNEGSR       EDF SDNSRT        HE
)@@G@@EDM SDNSRTE       EDR SDPLF         EDZ SDPOSTPR$     ED< SDPREPRO      HF
)@@G@@ED? SDPROCESS     ED6 SDQUOTE       ED" SDREAD        EEB SDROR         HG
)@@G@@EEI SDRORBIT      EEM SDRSMP        EEQ SDRSTITM      EEU SDSCAN        HH
)@@G@@EE? SDSCRP        EE6 SDSDFI        NRS^ DSDFO        D>G^X SIRASM      HI
)@@G@@EF] SDSKIP        EFF SDSRCH        EFK SDSTOR        EFO SDSTUFFS      HJ
)@@G@@EFQ SDUNDEF       EFW SDUNXT        EFZ SDWRD         EF= SD@@@@@@@@@@@@HK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@$IBANK      @@@@@\$DBANK      @]H@@(C@6 VF:@7 2"HL
)@@G@@/K@@\ZC@@@[A%8@@@[*4@^;W/K@@\MC8@@@#[0B 2.^5A VEN@)@"*R'7 2./?K]MP/?K[+NHM
)@@G@@()A VD/K@@,3C0B 2.+8@@@N%8K@@#/K@@\M%8@@@#/K@@\@@@@@]BK@@[@^@[F@C@@@@@]^HN
)@@G@@K@@[@^@](@DF@@@@]E@@@[@^@LG@F4@@@@@#@@@[@^@#Z@X@@@@@[<@@@[@^@@$@)Z@@@@[2HO
)@@G@@@@@[@^@A&@-A@@@@[I@@@[@^@@X@$?@@@@[)@@@[@^@]A@*D@@@@@S@@@[@^@P#@%J@@@@@3HP
)@@G@@@@@[@^@]N@_M@@@@@P@@@[@^@[N[[>@@@@[(@@@[@^@AG[]8@@@@@-@@@[@^@]+[D^@@@@[OHQ
)@@G@@@@@[@^@@)[F&@@@@[;@@@[@^@@?[GA@@@@[5@@@[@^@@?[G2@@@@@!@@@[@^@#7[HY@@@@]THR
)@@G@@@@@[@^@['[LP@@@@[8@@@[@^@@9[NJ@@@@@/@@@[@^@[T[OC@@@@@_@@@[@^@#9[P-@@@@[\HS
)@@G@@@@@[@^@A=[TU@@@@@6@@@[@^@]P[Z"@@@@]H@@@[@^@@,[+N@@@@[]@@@[@^@@,[<[@@@@[?HT
)@@G@@@@@[@^@[8[<\@@@@@J@@@[@^@@)[>$@@@@]Z@@@[@^@@N[&B@@@@[R@@@[@^@@)[&U@@@@["HU
)@@G@@@@@[@^@Q-[&'@@@@@D@@@[@^@@Q[.V@@@@@V@@@[@^@GM[.1@@@@@9@@@[@^@@P]E#@@@@@GHV
)@@G@@@@@[@^@@L]ES@@@@]N@@@[@^@[O]E(@@@@[U@@@[@^@#.]F.@@@@[X@@@[@^@[N]J'@@@@[ HW
)@@G@@@@@[@^@@1]LH@@@@@0@@@[@^@@I]L"@@@@]W@@@[@^@@D]MG@@@@]K@@@[@^@[H]MP@@@@@$HX
)@@G@@@@@[@^@[R]N+@@@@][@@@[@^@]R]O9@@@@@Y@@@[@^@#G]RK@@@@@M@@@[@^@[2]UW@@@@@AHY
)@@G@@@@@[@^@@F]WI@@@@[L@@@[@^@IG]WT@@@@]E)@@@@ @L?^@@@@@@]E)@@]@ @@B^L?@@@@@@HZ
)@@G@@)@@@@ @@E^L3@@@@@#)@@@@ @@C^L.@@@@@%)@@@@ @])^M @@@@[F)@@@@ @^G^O>@@@@[&IA
)@@G@@)@@@@ @CF^S1@@@@[<)@@@@ @@F^)/@@@@[2)@@@@ @@I^-B@@@@[2)@@]@ @B0^-P@@@@[IIB
)@@G@@)@@@@ @@J^( @@@@@S)@@@@ @@<^(O@@@@[()@@@@ @@[^(7@@@@@-)@@@@ @@[^(8@@@@[;IC
)@@G@@)@@@@ @@[^(9@@@@[5)@@@@ @@[^('@@@@@!)@@@@ @@#^(;@@@@]T)@@@@ @@[^("@@@@[8ID
)@@G@@@[X@@V@[I@@@@@@@[*@@K@@@@@@@@@@@@@@@@@@@@Y@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IE
)@@G@@@@@@@@@@@@@@@[=@@-@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@[@[R@@@@@H@@N@@@IF
)@@G@@@@@@@7@@^@@@@[Z@@@@@@@[U@@P@@@@[(@@@@@@@@@@@@@@@@@@@@L@['@[V@@@@@Z@@:@@@IG
)@@G@@@@@@@@@@ @@@@@@@[;@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@@@@@[K@@@@@@@@@@@@@@@IH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@6@@@@@@@@@@@@@@@@@@@[]@@@@@@@@@@@@@@@@@@@@(@@#@@@II
)@@G@@@@@@@@@[D@@@@@@@@W@@+@[:@@@@@1@@@@@@@@@@@@@@@@@@@@@@[2@[?@@@@@@@@@@@C@@@IJ
)@@G@@@@@@@@@@@@[!@@@@@3@@@@@@@@@@[ @[A@@@@@@@[O@[,@@@@@@@@J@@@@@@@@@@@@@@@@@@IK
)@@G@@@@@@@9@@@@@@@@@@@@@@O@@@@@@@@Q@@@@@@@@0@@@@[1@@@@@@@[@@@@@@@@@@@[-@[B@@@IL
)@@G@@@@,@[G@[4@@@@[5@@@@@@@@@@[\@@@@[H@@M@[7@@!@[>@@E@@@@@_@@@@@8@@@@[#@@@@@GIM
)@@G@@@@@@@@@@@@@D@@@@@F@[M@@@@@@@[L@@@@@@@@@@[9@@@@@@@@I@@)@@@@@@@@@@@>@[^@@@IN
)@@G@@@@@@[S@@U@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@[J@@@@[T@@@@@@@@B@@@@@A@@@@@@@@@IO
)@@G@@@@@@@=@@"@@\@@@@@'@@$@@@@@@@@@@@@@@@@[E@@@@@^@[/FUZZUP      @@]@@@@@@HGZIP
)@@G@@FUZZDN      @@]@@4@@@HGZFUZDEF      @@]@[C@@@HGZSETFUZ      @@]@@5@@@HIRIQ
)@@G@@FUZDIF      @@]@@@@@@HJ/THALFW      @@]@@@@@@HMUCFLOAT      @@]@@T@@@HN2IR
)@@G@@TESTIN      @@]@@/@@@HPZVERIFY      @@]@@@@@@HVUVERIFS      @@]@@@@@@HVUIS
)@@G@@VERIFZ      @@]@[F@@@HVUVERIFW      @@]@@@@@@HVUJMRTST      @@]@@@@@@HY>IT
)@@G@@JN$010      @@]@@@@@@HY>ERROR       @@]@@S@@@H)4FCALL       @@]@@@@@@H+LIU
)@@G@@SCALL       @@]@@@@@@H+LFC$000      @@]@@R@@@H+LCALREP      @@]@@<@@@H=(IV
)@@G@@GHFINT      @@]@@@@@@H>YCBLOCK      @@#@@@@@@H$1STATEV      @@#@@@@@@H48IW
)@@G@@CONFIG      @@^@@@@@@H'GALLOCT      @@ @@X@@@H/!ALGLOB      @@ @@@@@@H/!IX
)@@G@@FREE        @@ @[[@@@H"XUNLNKL      @@ @@@@@@H_+ALOCTB      @@ @@@@@@I@<IY
)@@G@@ALOCTT      @@ @@*@@@I@<JE          @@A@@@@@@I^EJNE         @@A@@@@@@I^EIZ
)@@G@@JG          @@A@@@@@@I^EJNG         @@A@[Q@@@I^EJLE         @@A@@@@@@I^EJA
)@@G@@JW          @@A@@@@@@I^EJNW         @@A@@@@@@I^EJOP         @@A@@2@@@I^EJB
)@@G@@JEP         @@A@[P@@@I^EJNGD        @@A@@@@@@I _COMJMP      @@A@@@@@@IA1JC
)@@G@@JMPTBL      @@A@@?@@@IA1C$JP01      @@A@[N@@@IA1DFLOAT      @@A@@@@@@IG7JD
)@@G@@SAVER       @@A@[<@@@IH"LOADR       @@A@[Y@@@IH"INSTRS      @@A@@@@@@IL+JE
)@@G@@CONSTS      @@A@[W@@@IL+VARBLS      @@A@[)@@@IL+VARCON      @@A@@@@@@IL+JF
)@@G@@MASTER      @@A@@@@@@IL+INITAL      @@A@@;@@@IL+UNLI$T      @@A@@@@@@IOAJG
)@@G@@LI$T        @@A@@@@@@IP(PROCSW      @@A@@@@@@IQ>ENDSW       @@A@@@@@@IQ>JH
)@@G@@PS$010      @@A@@@@@@IQ>QWDON       @@A@@.@@@IR*QWDOFF      @@A@@@@@@IR.JI
)@@G@@DTG         @@A@@@@@@IS-DTLE        @@A@@@@@@IS-TSC         @@A@[$@@@IW=JJ
)@@G@@TSL         @@A@@@@@@IW=TSA         @@A@[/@@@IW=LTSC        @@A@@@@@@IW=JK
)@@G@@LTSL        @@A@@@@@@IW=TSTO        @@A@@@@@@IZBTLD         @@A@[0@@@IZBJL
)@@G@@TTE         @@A@@@@@@I)#TTNE        @@A@@@@@@I)#LIJ         @@A@@@@@@I-DJM
)@@G@@FILDEF      @@B@@@@@@I+IDOIO        @@B@[%@@@I3(JNOPER      @@B@@@@@@I4"JN
)@@G@@TEMPIC      @@B@@@@@@I6HPOP         @@C@@@@@@I7-PUSH        @@C@@@@@@I7-JO
)@@G@@PU$H01      @@C@[3@@@I7-POPDEF      @@C@@@@@@I7-PSUDOP      @@D@@@@@@I"BJP
)@@G@@SKMARX      @@D@@@@@@JA?APSYMB      @@E@@@@@@JB/TDIGIT      @@E@@@@@@JVVJQ
)@@G@@TNDIGT      @@E@@@@@@JVVJDIGIT      @@E@[+@@@JVVJNDIGT      @@E@@@@@@JVVJR
)@@G@@TALFA       @@E@@@@@@JVVTNALFA      @@E@@@@@@JVVJALFA       @@E@@@@@@JVVJS
)@@G@@JNALFA      @@E@@@@@@JVVTALFAM      @@E@@@@@@JVVTNALFM      @@E@@@@@@JVVJT
)@@G@@JALFAM      @@E@@@@@@JVVJNALFM      @@E@[&@@@JVVT$EX01      @@E@@@@@@JVVJU
)@@G@@T$EX10      @@E@@@@@@JVVT$EX20      @@E@@@@@@JVVFDSYMB      @@E@@@@@@JZSJV
)@@G@@OUTCNV      @@E@@@@@@J,LOUTCNB      @@E@@@@@@J,LOC$010      @@E@@@@@@J,LJW
)@@G@@INCNV       @@E@[8@@@J02APLBCI      @@E@@@@@@J2LWSDEF       @@F@@@@@@J6NJX
)@@G@@ABSADR      @@F@@@@@@J",RELADR      @@F@@@@@@J"_WSDUMP      @@F@@@@@@J_UJY
)@@G@@BASCPY      @@F@@@@@@K@CBASACT      @@F@@@@@@K@CABSCPY      @@F@@@@@@K@:JZ
)@@G@@ABSACT      @@F@@@@@@K@:RELCPY      @@F@[6@@@K[FRELACT      @@F@@@@@@K[FKA
)@@G@@RUNCTL      @@F@@@@@@K[6IODEF       @@F@@@@@@KEMMOVE        @@F@@@@@@KNSKB
)@@G@@MOVE$1      @@F@@@@@@KNSMOVE$2      @@F@@@@@@KNSMOVE$4      @@F@@@@@@KNSKC
)@@G@@MOVE$6      @@F@@@@@@KNSMOVE$7      @@F@@@@@@KNSSEND        @@F@@@@@@KRSKD
)@@G@@PRINT       @@F@@@@@@KT)TIMEON      @@F@@@@@@KU+TIMOFF      @@F@@@@@@KV:KE
)@@G@@#@@^9XE)]@BRC[]@@@A@]@@^B@B@@@CK]@@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@KF
)@@G@@#@]^_HA@B@@[CLB@@@#@] #DA@B@@@CLB@@@]@]^.!#@[ #HEK@@BQV@@@@@I@@ [1#@@^9XKG
)@@G@@E)]@BNC[]@@@A@]@@^B@B@@@CK]@@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_HKH
)@@G@@A@B@@[CLB@@@#@] #DA@B@@@CLB@@@]@]^.(#@[ #LEK@@BMV@@@@@I@@ [!#@@^9XE)]@BJKI
)@@G@@C[]@@@A@]@@^B@B@@@CK]@@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_ A@B@@[KJ
)@@G@@CLB@@@#@]^;9A@B@@@CLB@@@]@]^"L#@[^_LEK@@BIV@@@@@I@@ [(#@@^9XE)]@BFC[]@@@KK
)@@G@@A@]@@^B@B@@@CK]@@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_DA@B@@[CLB@@@KL
)@@G@@#@]^;9A@B@@@CLB@@@]@]^"-#@[^9XEK@@BEV@@@@@I@@ [>#@@^9XE)]@BBC[]@@@A@]@@^KM
)@@G@@B@B@@@CK]@@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_HA@B@@[CLB@@@#@] #DKN
)@@G@@A@B@@@CLB@@@]@]^.1#@[^'DEK@@BAV@@@@@I@@ [-#@@^9XE)]@B#C[]@@@A@]@@^B@B@@@KO
)@@G@@CK]@@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_HA@B@@[CLB@@@#@] #DA@B@@@KP
)@@G@@CLB@@@]@]^.!#@[ #PEK@@B]V@@@@@I@@ [X#@@^9XE)]@A_C[]@@@A@]@@^B@B@@@CK]@@@KQ
)@@G@@A@B@@#]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_HA@B@@[CLB@@@#@] #DA@B@@@CLB@@@KR
)@@G@@]@]^.(#@[ #TEK@@A"V@@@@@I@@ [T#@@^9XE)]@A;C[]@@@A@]@@^B@B@@@CK]@@@A@B@@#KS
)@@G@@]@]^/9CLB@@@#@[ ]9A@B@@]CLB@@@#@]^".A@B@@[CLB@@@#@] #XA@B@@@CLB@@@]@]^.9KT
)@@G@@#@[ ]9EK@@A'V@@@@@I@@ [P#@@^9XE)]@A7C[]@@@A@]@@^B@B@@@CK]@@@A@B@@#]@]^/9KU
)@@G@@CLB@@@#@[ ]9A@B@@]CLB@@@#@]^_ A@B@@[CLB@@@#@]^;9A@B@@@CLB@@@]@]^.5#@[ #-KV
)@@G@@EK@@A6O@@@@[H@@ [LEB[@A5C[ @@@A@ @@@B@B@@@C^ @@@]@[^9!#[[@@[E#@@A4O@@@@@KW
)@@G@@V@@@@@C[]@@@B@B@@@]@] [[E>@@A1C[[@@@B@B@@@]@[^9[E>@@A0C[[@@@B@B@@@]@[^9 KX
)@@G@@E>@@A\I@@ [H#@@^9XE)]@A,C[]@@@A@]@@[]@] [[CG]@@@#@]^".A@]@@@CE]@@@]@]>[[KY
)@@G@@#@] [ E[@@A!C[]@@@A@]@@@]@] [[CF]@@@]@] @9]@] @.E[@@A?C[]@@@A@]@@@]@] @.KZ
)@@G@@CK]@@J]@[^9[B@]@@@E[@@A:C[]@@@A@]@@@]@] @9CK]@@J]@[^9 B@]@@@E[@@A%V@@@@@LA
)@@G@@C[]@@@B@B@@@]@] [[E>@@A$C[[@@@B@B@@@]@[^9HE>@@A&C[[@@@B@B@@@]@[^89E>@@A>LB
)@@G@@I@@ [D#@@^9XE)]@A=C[]@@@A@]@@[]@] [[CG]@@@#@]^".A@]@@@CE]@@@]@]>[[#@] [ LC
)@@G@@E[@@A<C[]@@@A@]@@@]@] [[CF]@@@]@] @9]@] @.E[@@A+C[]@@@A@]@@@]@] @.CK]@@JLD
)@@G@@]@[^9HB@]@@@E[@@A-C[]@@@A@]@@@]@] @9CK]@@J]@[^89B@]@@@E[@@A)V@@@@@C[[@@@LE
)@@G@@B@B@@@]@[^89E>@@AXI@@ @5#@@^9XE)]@AWF@@^;[B[@@@@EN[@AUK@2 @HF@@ @(H@@ @(LF
)@@G@@EB[@ARV@@@@@C[]@@@B@B@@@]@]^8TE>@@AOC[]@@@B@B@@@]@]^8LE>@@ANC[]@@@B@B@@@LG
)@@G@@]@]^8HE>@@AMC[]@@@B@B@@@]@]^8DE>@@AKK@4 @1C[]@@@B@B@@@A@]@@[CJ]@@@T-@@@TLH
)@@G@@ @[@@TA@]@@@CN]@@@^[[__"]@]^8 E>@@AJG@[ @1J@4^'LC[[@@@B@B@@@]@[ @-E>@@AGLI
)@@G@@C[[@@@B@B@@@]@[ @TE>@@AFC[[@@@B@B@@@]@[ @PE>@@AEC[[@@@B@B@@@]@[^/-E>@@ADLJ
)@@G@@I@@ @!#@@^9XE)]@ACO@@@@[H@@ @(EB[@ABC[ @@@A@ @@@B@B@@@CA @@@]@]=8D#@]^".LK
)@@G@@E#@@AAO@@@@@C[[@@@A@[@@@B@B@@@CK[@@@]@[^/-]@[ @>EK@@A C[[@@@A@[@@]]@[ @-LL
)@@G@@CF[@@@#[[@[=A@[@@[CJ[@@@/,0B,2@]8I1</,0[A6@@[I1F@@@I\+@]9I1<'^@[AC/,0]ADLM
)@@G@@@@@I:F@@@I1G/K@BN[@];I1<[@@I:>/,0B?E@@@I:T@@@I1R@@@I:F@]/I1</,0['@@@@I;'LN
)@@G@@@@@I0P@].I1</,0B,2@]"I1</,0[A6@@[I1F@@@I,_@]_I1<'^@[ACC@@I1H[@@I:(/,0B?;LO
)@@G@@@@@I:F@@@I1I@#]I1</,0] ;@@@I:F@@@I1G/K@BN[@##I1<[@@I:>(@@I:>/K@BJXC4)I:FLP
)@@G@@[4)I:(C/)@@[C[@I:(H[@I1S*@@@@KC8)@@@C.@@@[C[)I:(H[)I1T*@@@@MC9@@@@)@)@@KLQ
)@@G@@C.@@@[C[)I:(H[)I1J*@@@@MC9@@@@)[@@@J[[KI:E/>KBJ=/,0[']@@@I;9@@@I0R@@@I:FLR
)@@G@@@#EI1</K@BI(/,0[A6@@[I1F@@@I0[@#GI1<'^@[ACC@@I1T[@@I:(/,0@:F@@@I1U@@@I:<LS
)@@G@@@@@I:=@#JI1</,0['@@@@I;'@@@I0T@#KI1</,0B,2@#LI1</,0[A6@@[I1F@@@I\$@#MI1<LT
)@@G@@'^@[AC/,0]AD@@@I:F@@@I1G/K@BN[@#OI1<[@@I:>/,0B\O@@@I:F@@@I:>@#PI1</)@BFDLU
)@@G@@/,0B?E@@@I0!@@@I1V@@@I:<@#RI1</,0B?E@@@I05@@@I1V@@@I:<@#SI1</,0B?E@@@I0.LV
)@@G@@@@@I1V@@@I:<@#TI1</,0B?E@@@I1 @@@I1V@@@I:<@#UI1</,0@:F@@@I1F@@@I0:@#VI1<LW
)@@G@@/,0@:F@@@I1F@@@I03@#WI1</,0[A6@@[I1W@@@I:!@#XI1<'^@[AC/,0[A6@@[I1W@@@I:7LX
)@@G@@@#ZI1<'^@[AC/,0[A6@@[I1W@@@I:/@#-I1<'^@[AC/,0[A6@@[I1W@@@I?E@#<I1<'^@[ACLY
)@@G@@/,0[A6@@[I1W@@@I\=@#>I1<@@KI:&@@KI:$R@KI1XN.@@@DC8[,:S'^K[A^8L@BK7'^@[ACLZ
)@@G@@/,0[A6@@[I1W@@@I?J@#!I1<'^@[AC/,0@& @@@I1W@@@I1I@#\I1</,0@:F@@@I1F@@@I1#MA
)@@G@@@#0I1</,0[A6@@[I1F@@@I\:@#1I1<'^@[ACC@@I:(H@@I1T*@@@@G/K@BLNC@@I1Y[0@I0/MB
)@@G@@C@@I:(H@@I1S*@@@@G/K@BLTC@@I1Z[0@I0/C@@I:(H@@I1J*@@@@G/K@BLZC@@I1)[0@I0/MC
)@@G@@/,0@:F@@@I1F@@@I0;@#9I1</,0I:B@@@I::@#'I1<[@@I:%/,0[A6@@[I1F@@@I0A@#;I1<MD
)@@G@@@@KI:%'^@[AC/,0[A6@@[I1F@@@I0V@#"I1<R@KI1XN.@@@[C8[,:+'^K[A^8L@BL3'^@[ACME
)@@G@@C@@I:(H@@I1J(@@@@G/K@BM9/,0@:F@@@I1U@@@I0!@@@I0,@^BI1</,0B?E@@@I05@@@I1VMF
)@@G@@@@@I0!@^CI1</,0B?E@@@I0.@@@I1V@@@I0!@^DI1<C@@I1)[0@I0//,0B?E@@@I1 @@@I1VMG
)@@G@@@@@I0!@^FI1</,0@:F@@@I1F@@@I0:@^GI1</,0@:F@@@I1F@@@I03@^HI1</,0[A6@@[I1WMH
)@@G@@@@@I:!@^II1<'^@[AC/,0[A6@@[I1W@@@I?M@^KI1<R@KI1XN.@@@[C8[,:+'^K[A^8L@BM=MI
)@@G@@'^@[AC/,0[A6@@[I1W@@@I?J@^QI1<'^@[AC/,0@& @@@I1W@@@I1I@^SI1</,0@:F@@@I1FMJ
)@@G@@@@@I1#@^TI1</,0@:F@@@I1F@@@I0;@^UI1</,0[A6@@[I1F@@@I\5@^VI1<'^@[ACN@0BN@MK
)@@G@@/K@BV#@^XI1</,0[A6@@[I1F@@@I\;@^YI1<'^@[AC/,0[A6@@[I1F@@@I\5@^)I1<'^@[ACML
)@@G@@C8)@@[N@0BNI/K@BU_@^+I1</,0B,2@^<I1</,0[A6@@[I1F@@@I,+@^=I1<'^@[ACC@@I1HMM
)@@G@@[@@I:?/,0B?;@@@I:F@@@I1I@^$I1</,0] ;@@@I:F@@@I1G/K@BU1@^*I1<[@@I:>(@@I:>MN
)@@G@@/K@BU(C4)I:F[4)I:?C/)@@[C[@I:?H[@I1L*@@@@KC8)@@@C.@@@[C[)I:?H[)I1P*@@@@MMO
)@@G@@C9@@@@)@)@@K/=0BN8/,0[']@@@I;9@@@I0Z@@@I:F@^,I1</K@BNJ/,0['@@@@I;'@@@I0-MP
)@@G@@@^0I1</,0B,2@^1I1</,0[A6@@[I1F@@@I,/@^2I1<'^@[ACC@@I1H[@@I:$/,0B?;@@@I:FMQ
)@@G@@@@@I1I@^5I1</,0] ;@@@I:F@@@I1G/K@BU1@^6I1<[@@I:>(@@I:>/K@BU(T/@@@A[@@I:*MR
)@@G@@H/@@@=E@@@@GC@)I:F;C?@@@E@@I:*C@0I:$;)/@@@;G)Y:*[@0I:$C/@@@[C@)I:$H@)I1MMS
)@@G@@*@@@@IC8@@@@C/)@@[C[@I:$H[@I1L*@@@@KC8)@@@)@@@@IC/)@@[C[@I:$H[@I1N*@@@@KMT
)@@G@@C8)@@@)@)@@H[@0I:E/=0BPDC/@@@[C[@I:$H[@I1O*@@@@KC8@@@@C.@@@[C[)I:$H[)I1PMU
)@@G@@*@@@@MC9@@@@)@@@@KC.@@@[C[)I:$H[)I1Q*@@@@MC9@@@@C@@@@H)@@@@K[@KI:E/=KBPDMV
)@@G@@/,0[']@@@I;9@@@I0<@@@I:F@ [I1</K@BN8/,0['@@@@I;'@@@I0>@ #I1</,0B,2@ ^I1<MW
)@@G@@/,0[A6@@[I1F@@@I,_@  I1<'^@[ACC@@I1H[@@I:(/,0B?;@@@I:F@@@I1I@ CI1</,0] ;MX
)@@G@@@@@I:F@@@I1G/K@BU1@ DI1<[@@I:>(@@I:>/K@BP"C4)I:F[4)I:(C/)@@[C[@I:(H[@I1SMY
)@@G@@*@@@@KC8)@@@C.@@@[C[)I:(H[)I1T*@@@@MC9@@@@)@)@@KC.@@@[C[)I:(H[)I1J*@@@@MMZ
)@@G@@C9@@@@C@)@@J)@)@@K[@0I:E/=0BQ /,0[']@@@I;9@@@I0$@@@I:F@ KI1</K@BPD/,0[A6NA
)@@G@@@@[I1F@@@I0[@ MI1<'^@[ACC@@I1T[@@I:(/,0B,2@ PI1<C@@I:?H@@I1P*@@@@G/K@BQKNB
)@@G@@/,0[A6@@[I1F@@@I,:@ RI1<'^@[ACC@@I:?H@@I1L*@@@@G/K@BQT/,0[A6@@[I1F@@@I,0NC
)@@G@@@ UI1<'^@[ACC@@I:$H@@I1L*@@@@G/K@BQ+/,0[A6@@[I1F@@@I\G@ XI1<'^@[ACC@@I:$ND
)@@G@@H@@I1M*@@@@G/K@BQ:/,0[A6@@[I1F@@@I\L@ )I1<'^@[ACC@@I:$H@@I1N*@@@@G/K@BQ4NE
)@@G@@/,0[A6@@[I1F@@@I\O@ <I1<'^@[ACC@@I:$H@@I1P*@@@@G/K@BQ./,0[A6@@[I1F@@@I\RNF
)@@G@@@ &I1<'^@[ACC@@I:$H@@I1O*@@@@G/K@BRA/,0[A6@@[I1F@@@I\V@ (I1<'^@[ACC@@I:$NG
)@@G@@H@@I1Q*@@@@G/K@BRJ/,0[A6@@[I1F@@@I\Y@ ?I1<'^@[AC/,0@:F@@@I1U@@@I:<@@@I:=NH
)@@G@@@ ,I1</,0['@@@@I;'@@@I0(@ \I1</,0B,2@ 0I1</,0[A6@@[I1F@@@I\$@ 1I1<'^@[ACNI
)@@G@@/,0]AD@@@I:F@@@I1G/K@BU1@ 3I1<[@@I:>/,0B\O@@@I:F@@@I:>@ 4I1</)@BNJ/,0B?ENJ
)@@G@@@@@I0!@@@I1V@@@I:<@ 6I1</,0B?E@@@I05@@@I1V@@@I:<@ 7I1</,0B?E@@@I0.@@@I1VNK
)@@G@@@@@I:<@ 8I1</,0B?E@@@I1 @@@I1V@@@I:<@ 9I1</,0@:F@@@I1F@@@I0:@ 'I1</,0@:FNL
)@@G@@@@@I1F@@@I03@ ;I1</,0[A6@@[I1W@@@I:!@ /I1<'^@[AC/,0[A6@@[I1W@@@I:/@ "I1<NM
)@@G@@'^@[AC/,0[A6@@[I1W@@@I?R@A@I1<'^@[AC/,0[A6@@[I1W@@@I?+@A]I1<'^@[AC/,0[A6NN
)@@G@@@@[I1W@@@I\=@A^I1<@@KI:?@@KI:$'^@[AC/,0[A6@@[I1W@@@I?$@ACI1<'^@[AC/,0[A6NO
)@@G@@@@[I1W@@@I!=@AEI1<'^@[AC/,0[A6@@[I1W@@@I?J@AGI1<'^@[AC/,0@& @@@I1W@@@I1INP
)@@G@@@AII1</,0@:F@@@I1F@@@I1#@AJI1</,0[A6@@[I1F@@@I\:@AKI1<'^@[ACC@@I:(H@@I1TNQ
)@@G@@*@@@@G/K@BT#C@@I1Y[0@I0/C@@I:(H@@I1S*@@@@G/K@BTDC@@I1Z[0@I0/C@@I:(H@@I1JNR
)@@G@@*@@@@G/K@BTJC@@I1)[0@I0//,0@:F@@@I1F@@@I0;@ASI1</,0I:B@@@I::@ATI1<[@@I:%NS
)@@G@@/,0[A6@@[I1F@@@I0A@AUI1<@@KI:%'^@[AC/,0[A6@@[I1F@@@I0V@AXI1<R@KI1XN.@@@[NT
)@@G@@C8[,:+'^K[A^8L@BT<'^@[ACC@@I:(H@@I1J(@@@@G/K@BU(/,0@:F@@@I1U@@@I0!@@@I0,NU
)@@G@@@A>I1</,0B?E@@@I05@@@I1V@@@I0!@A&I1</,0B?E@@@I0.@@@I1V@@@I0!@A$I1<C@@I1)NV
)@@G@@[0@I0//,0B?E@@@I1 @@@I1V@@@I0!@A(I1</,0@:F@@@I1F@@@I0:@A%I1</,0@:F@@@I1FNW
)@@G@@@@@I03@A:I1</,0[A6@@[I1W^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1NX
)@@G@@B@3DK0A@0A@0A80D*0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@4AC8B@6^@)^@)NY
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A09C00NZ
)@@G@@A@0A@0A09C0)^@)^[I@O@O=@D00A@4BC7B@1E[TA@5A@1B@6^@2A@6^@)^@)^@)C-MFL[DD#OA
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@3EK0A@0A@0A09D80A@0A@2A*3D0)^@0^[IOB
)@@G@@@O@O=@D00A@4BC7B@1DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OC
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A08D@0A@0A@0A08D@)^@)^[I@O@O=@D00A@4BC7B@1OD
)@@G@@E[TA@5AK8B@6^@2AK4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OE
)@@G@@B@4E@0A@0A@0A08EC0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@6AC6B@6^@)^@)OF
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A08CC0OG
)@@G@@A@0A@0A08CC)^@)^[I@O@O=@D00A@4BC7B@1E[TA@6AK7B@6^@2A)6^@)^@)^@)C-MFL[DD#OH
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@5D*0A@0A@0A08DK0A@0A@2A*3D0)^@0^[IOI
)@@G@@@O@O=@D00A@4BC7B@1DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OJ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A07CS0A@0A@0A07CS)^@)^[I@O@O=@D00A@4BC7B@1OK
)@@G@@E[TA@7AS0B@6^@)AK1^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OL
)@@G@@B@6DS0A@0A@0A07D)0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@8AC8B@6^@)^@)OM
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A06C*0ON
)@@G@@A@0A@0A06C*)^@)^[I@O@O=@D00A@4BC7B@1E[TA@8AK8B@6^@)A)3^@)^@)^@)C-MFL[DD#OO
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@7J*0A@0A@0A06D00A@0A@2A*3D0)^@0^[IOP
)@@G@@@O@O=@D00A@4BC7B@1DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OQ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A05C80A@0A@0A05C8)^@)^[I@O@O=@D00A@4BC7B@1OR
)@@G@@E[TA@9AS0B@6^@)A05^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OS
)@@G@@B@7EC0A@0A@0A05E@0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#AC0AK0B@6^@)^@)OT
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A04DC0OU
)@@G@@A@0A@0A04DC)^@)^[I@O@O=@D00A@4BC7B@1E[TAC0AK9B@6^@)B@6^@)^@)^@)C-MFL[DD#OV
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@8D80A@0A@0A04EK0A@0A@2A*3D0)^@0^[IOW
)@@G@@@O@O=@D00A@4BC7B@1DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A04CK0A@0A@0A04CK)^@)^[I@O@O=@D00A@4BC7B@1OY
)@@G@@E[TAC2A@1B@6^@1A@7^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OZ
)@@G@@B@9D)0A@0A@0A04DS0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#AC2AC1B@6^@)^@)PA
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A03C)0PB
)@@G@@A@0A@0A03C))^@)^[I@O@O=@D00A@4BC7B@1E[TA@1A@9B@7^@1AK9^@)^@)^@)C-MFL[DD#PC
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC0DK0A@0A@0A03D*0A@0A@2A*3D0)^@0^[IPD
)@@G@@@O@O=@D00A@4BC7B@1DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)PE
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A02C00A@0A@0A02C0)^@)^[I@O@O=@D00A@4BC7B@1PF
)@@G@@E[TA@1AK8B@7^@1A)4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1PG
)@@G@@BC0EK0A@0A@0A02D80A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@2AC9B@7^@)^@)PH
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A01D@0PI
)@@G@@A@0A@0A01D@)^@)^[I@O@O=@D00A@4BC7B@1E[TA@2AK6B@7^@1A05^@)^@)^@)C-MFL[DD#PJ
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC1E@0A@0A@0A01EC0A@0A@2A*3D0)^@0^[IPK
)@@G@@@O@O=@D00A@4BC7B@1DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)PL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A01JS0A@0A@0A01JS)^@)^[I@O@O=@D00A@4BC7B@1PM
)@@G@@E[TA@3AK7B@7^@1B@6^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1PN
)@@G@@BC2D00A@0A@0A01J*0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@4AK1B@7^@)^@)PO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A00CK0PP
)@@G@@A@0A@0A00CK)^@)^[I@O@O=@D00A@4BC7B@1E[TA@4AK9B@7^@2A@8^@)^@)^@)C-MCDUCDDPQ
)@@G@@CS?^[^^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC3D)0A@0A@0A00DS0A@0A@2A*3D0)^@0^[IPR
)@@G@@@O@O=@D00A@4BC7B@1DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)PS
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*9C)0A@0A@0A*9C))^@)^[I@O@O=@D00A@4BC7B@1PT
)@@G@@E[TA@6A@1B@7^@2AS0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1PU
)@@G@@BC4DK0A@0A@0A*9D*0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@6AC8B@7^@)^@)PV
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*8C00PW
)@@G@@A@0A@0A*8C0)^@)^[I@O@O=@D00A@4BC7B@1E[TA@6AK6B@7^@2A)9^@)^@)^@)C-MFL[DD#PX
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC4EK0A@0A@0A*8D80A@0A@2A*3D0)^@0^[IPY
)@@G@@@O@O=@D00A@4BC7B@1DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)PZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7D@0A@0A@0A*7D@)^@)^[I@O@O=@D00A@4BC7B@1QA
)@@G@@E[TA@8A@4B@7^@)AK5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QB
)@@G@@A)3DS0A@0A@0A*7EC0A@0A@2A@1J*)^@0^[I@O@O=@D00A@4BC7B@1DD#A@8AK1B@7^@)^@)QC
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7CK0QD
)@@G@@A@0A@0A*7CK)^@)^[I@O@O=@D00A@4BC7B@1E[TA@9A@2B@7^@)A)6^@)^@)^@)C-MFL[DD#QE
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC6D)0A@0A@0A*7DS0A@0A@2A*3D0)^@0^[IQF
)@@G@@@O@O=@D00A@4BC7B@1DD#A@9AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QG
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*6CS0A@0A@0A*6CS)^@)^[I@O@O=@D00A@4BC7B@1QH
)@@G@@E[TAC0A@1B@7^@)A06^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QI
)@@G@@BC7DS0A@0A@0A*6D)0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#AC0AK1B@7^@)^@)QJ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*5C*0QK
)@@G@@A@0A@0A*5C*)^@)^[I@O@O=@D00A@4BC7B@1E[TAC0AK9B@7^@)B@6^@)^@)^@)C-MFL[DD#QL
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC8J*0A@0A@0A*5D00A@0A@2A*3D0)^@0^[IQM
)@@G@@@O@O=@D00A@4BC7B@1DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QN
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*4C80A@0A@0A*4C8)^@)^[I@O@O=@D00A@4BC7B@1QO
)@@G@@E[TAC2A@1B@7^@1A@7^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QP
)@@G@@BC8EC0A@0A@0A*4E@0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#AC2AC8B@7^@)^@)QQ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*3DC0QR
)@@G@@A@0A@0A*3DC)^@)^[I@O@O=@D00A@4BC7B@1E[TA@1A@7B@8^@1AS0^@)^@)^@)C-MFL[DD#QS
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)5E@0A@0A@1A@7EC0A@0A@2A*3D0)^@1^[IQT
)@@G@@@O@O=@D00A@4BC7B@1DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QU
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*3DC0A@0A@0A*3DC)^@)^[I@O@O=@D00A@4BC7B@1QV
)@@G@@E[TA@1AK9B@8^@1A)6^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2QW
)@@G@@A*3D00A@0A@0A@0A@0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@2AK0B@8^@)^@)QX
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*2CK0QY
)@@G@@A@0A@0A*2CK)^@)^[I@O@O=@D00A@4BC7B@1E[TA@3A@4B@8AC1A81^@)^@)^@)C-MFL[DD#QZ
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@1D)0A@0A@0A*2DS0A@0A@2A*3D0)^@0^[IRA
)@@G@@@O@O=@D00A@4BC7B@1DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RB
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*1C)0A@0A@0A*1C))^@)^[I@O@O=@D00A@4BC7B@1RC
)@@G@@E[TA@3AK9B@8^@1B@8^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2RD
)@@G@@A@2DK0A@0A@0A*1D*0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@4AK0B@8^@)^@)RE
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*0C*0RF
)@@G@@A@0A@0A*0C*)^@)^[I@O@O=@D00A@4BC7B@1E[TA@4AK8B@8^@2A@9^@)^@)^@)C-MFL[DD#RG
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@3J*0A@0A@0A*0D00A@0A@2A*3D0)^@0^[IRH
)@@G@@@O@O=@D00A@4BC7B@1DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RI
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)9C80A@0A@0A)9C8)^@)^[I@O@O=@D00A@4BC7B@1RJ
)@@G@@E[TA@6A@2B@8^@2AS3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2RK
)@@G@@A@3EC0A@0A@0A)9E@0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@6AK1B@8^@)^@)RL
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)8D@0RM
)@@G@@A@0A@0A)8D@)^@)^[I@O@O=@D00A@4BC7B@1E[TA@6AK9B@8^@2A*2^@)^@)^@)C-MFL[DD#RN
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@4E@0A@0A@0A)8EC0A@0A@2A*3D0)^@0^[IRO
)@@G@@@O@O=@D00A@4BC7B@1DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RP
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)8JS0A@0A@0A)8JS)^@)^[I@O@O=@D00A@4BC7B@1RQ
)@@G@@E[TA@7AK6B@8^@)AC7^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2RR
)@@G@@A@5D00A@0A@0A)8J*0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@8AC8B@8^@)^@)RS
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)7CC0RT
)@@G@@A@0A@0A)7CC)^@)^[I@O@O=@D00A@4BC7B@1E[TA@8AS0B@8^@)A)2^@)^@)^@)C-MFL[DD#RU
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@6D*0A@0A@0A)7DK0A@0A@2A*3D0)^@0^[IRV
)@@G@@@O@O=@D00A@4BC7B@1DD#A@9AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RW
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)6CS0A@0A@0A)6CS)^@)^[I@O@O=@D00A@4BC7B@1RX
)@@G@@E[TA@9AK6B@8^@)A00^@)^@)^@)C-MFL[DDU ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2RY
)@@G@@A@7DS0A@0A@0A)6D)0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#AC0AC9B@8^@)^@)RZ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5C)0SA
)@@G@@A@0A@0A)5C))^@)^[I@O@O=@D00A@4BC7B@1E[TAC0AK6B@8^@)B@2^@)^@)^@)C-MFL[DD#SB
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@8DK0A@0A@0A)5D*0A@0A@2A*3D0)^@0^[ISC
)@@G@@@O@O=@D00A@4BC7B@1DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SD
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)4C*0A@0A@0A)4C*)^@)^[I@O@O=@D00A@4BC7B@1SE
)@@G@@E[TAC2A@7B@8^@1AC0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2SF
)@@G@@A@9J*0A@0A@0A)4D00A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#AC2AK1B@8^@)^@)SG
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3C80SH
)@@G@@A@0A@0A)3C8)^@)^[I@O@O=@D00A@4BC7B@1E[TAC2AK9B@8^@1AK5^@)^@)^@)C-MFL[DD#SI
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@9EC0A@0A@0A)3E@0A@0A@2A*3D0)^@0^[ISJ
)@@G@@@O@O=@D00A@4BC7B@1E[TA@1AK7B@9^@1A)5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)SK
)@@G@@^@)^@)^@)^@0A@0A@2AC0E@0A@0A@0A)2EC0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1SL
)@@G@@DD#A@2A@1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SM
)@@G@@A@0A@0A@0A@0A)2D@0A@0A@0A)2D@)^@)^[I@O@O=@D00A@4BC7B@1DD#A@2AC7B@9^@)^@)SN
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1DC0SO
)@@G@@A@0A@0A)1DC)^@)^[I@O@O=@D00A@4BC7B@1E[TA@2AK8B@9^@1A07^@)^@)^@)C-MFL[DD#SP
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2AC1D80A@0A@0A)1EK0A@0A@2A*3D0)^@0^[ISQ
)@@G@@@O@O=@D00A@4BC7B@1DD#A@3AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SR
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1JS0A@0A@0A)1JS)^@)^[I@O@O=@D00A@4BC7B@1SS
)@@G@@E[TA@3AK7B@9^@1B@5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2ST
)@@G@@AC2D00A@0A@0A)1J*0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@4AK1B@9^@)^@)SU
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0CC0SV
)@@G@@A@0A@0A)0CC)^@)^[I@O@O=@D00A@4BC7B@1E[TA@4AK7B@9^@2A@8^@)^@)^@)C-MFL[DD#SW
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2AC3D*0A@0A@0A)0DK0A@0A@2A*3D0)^@0^[ISX
)@@G@@@O@O=@D00A@4BC7B@1DD#A@5AC9B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SY
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS9CK0A@0A@0AS9CK)^@)^[I@O@O=@D00A@4BC7B@1SZ
)@@G@@E[TA@5AK6B@9^@2AK9^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2TA
)@@G@@AC4D)0A@0A@0AS9DS0A@0A@2A*3D0)^@0^[I@O@O=@D00A@4BC7B@1DD#A@6AK1B@9^@)^@)TB
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8C)0TC
)@@G@@A@0A@0AS8C))^@)^[I@O@O=@D00A@4BC7B@1E[TA@6AK7B@9^@2A*0^@)^@)^@)C-MFL[DD#TD
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2AC5DK0A@0A@0AS8D*0A@0A@2A*3D0)^@0^[ITE
)@@G@@@O@O=@D00A@4BC7B@2D-KA@8AK7B@1^@)^@)^@)^@)^@)D-JCDI^[KELDD1#DDKCDG^@)^@)TF
)@@G@@^@)^@)^@)^@0A@0A)0A*0A@0A@0A@0A@0A@0A@0A)0A*0A@)^@0^[I@O@O=@D00A@4BC7B@2TG
)@@G@@D-KA@1AC4B@2^@)^@)^@)^@)^@)C-MFL[DD# ))C-[E1DC))^@)^@)^@)^@)^@)^@0A@0AS0TH
)@@G@@A*0A@0A@0A@0A@0A@0A@0AS0A*0A@)^@0^[I@O@O=@D00A@4BC7B@2DD#A@2AK0B@4^@)^@)TI
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3A80TJ
)@@G@@A@0A@0AK3A8)^@)^[I@O@O=@D00A@4BC7B@2E[TA@3A@6B@4^@1A83^@)^@)^@)C-MFL[DD#TK
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)8DS0A@0A@0AK3E@0A@0A@0A81EK)^@0^[ITL
)@@G@@@O@O=@D00A@4BC7B@2DD#A@3AK1B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)TM
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3A*0A@0A@0AK3A*)^@)^[I@O@O=@D00A@4BC7B@2TN
)@@G@@E[TA@4A@3B@4^@1BC3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TO
)@@G@@A)8D*0A@0A@0AK3D00A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@4AC9B@4^@)^@)TP
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3AS0TQ
)@@G@@A@0A@0AK3AS)^@)^[I@O@O=@D00A@4BC7B@2E[TA@4AK7B@4^@2AC0^@)^@)^@)C-MFL[DD#TR
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)8D80A@0A@0AK3D)0A@0A@0A81EK)^@0^[ITS
)@@G@@@O@O=@D00A@4BC7B@2DD#A@5AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)TT
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3AK0A@0A@0AK3AK)^@)^[I@O@O=@D00A@4BC7B@2TU
)@@G@@E[TA@5AS1B@4^@2AS3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TV
)@@G@@A)8E@0A@0A@0AK3DS0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@6AK1B@4^@)^@)TW
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3A@0TX
)@@G@@A@0A@0AK3A@)^@)^[I@O@O=@D00A@4BC7B@2E[TA@6AK8B@4^@2A*3^@)^@)^@)C-MFL[DD#TY
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)8EK0A@0A@0AK3J*0A@0A@0A81EK)^@0^[ITZ
)@@G@@@O@O=@D00A@4BC7B@2DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UA
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2BC0A@0A@0AK2BC)^@)^[I@O@O=@D00A@4BC7B@2UB
)@@G@@E[TA@7AK7B@4^@)AC9^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UC
)@@G@@A)9J*0A@0A@0AK2EK0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@8AK2B@4^@)^@)UD
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2A80UE
)@@G@@A@0A@0AK2A8)^@)^[I@O@O=@D00A@4BC7B@2E[TA@9AC7B@4^@)A*5^@)^@)^@)C-MFL[DD#UF
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)9DS0A@0A@0AK2E@0A@0A@0A81EK)^@0^[IUG
)@@G@@@O@O=@D00A@4BC7B@2DD#A@9AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UH
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2A*0A@0A@0AK2A*)^@)^[I@O@O=@D00A@4BC7B@2UI
)@@G@@E[TAC0A@2B@4^@)A06^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UJ
)@@G@@A)9D*0A@0A@0AK2D00A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC0AK2B@4^@)^@)UK
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2A)0UL
)@@G@@A@0A@0AK2A))^@)^[I@O@O=@D00A@4BC7B@2E[TAC1A@1B@4^@)B@8^@)^@)^@)C-MFL[DD#UM
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)9D00A@0A@0AK2D*0A@0A@0A81EK)^@0^[IUN
)@@G@@@O@O=@D00A@4BC7B@2DD#AC1AK7B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UO
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2AK0A@0A@0AK2AK)^@)^[I@O@O=@D00A@4BC7B@2UP
)@@G@@E[TAC1AK8B@4^@1A@5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UQ
)@@G@@A)9E@0A@0A@0AK2DS0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC2AC9B@4^@)^@)UR
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2A@0US
)@@G@@A@0A@0AK2A@)^@)^[I@O@O=@D00A@4BC7B@2E[TA@1A@4B@5^@1AK4^@)^@)^@)C-MFL[DD#UT
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)9EK0A@0A@0AK2J*0A@0A@0A81EK)^@0^[IUU
)@@G@@@O@O=@D00A@4BC7B@2DD#A@1AK5B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UV
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1BC0A@0A@0AK1BC)^@)^[I@O@O=@D00A@4BC7B@2UW
)@@G@@D( A@1AS0B@5D( ^@)^@)^@)^@)CS)E*)C9MCD^^@6D[MES)^@)^@)^@)^@)^@)^@0A@0A@0UX
)@@G@@A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC7B@2ETOA@1AS0B@5ETO^@)UY
)@@G@@^@)^@)^@)A@1A@1B[F *0A*0AC8A*)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0UZ
)@@G@@A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC7B@2DD#A@2A@1B@5DD#^@)^@)^@)^@)CD^DK)C-PVA
)@@G@@C*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1EK0A@0A@0AK1EK)^@0^[IVB
)@@G@@@O@O=@D00A@4BC7B@2DD#A@5AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)VC
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1BC0A@0A@0AK1BC)^@)^[I@O@O=@D00A@4BC7B@2VD
)@@G@@ETOA@6A@3B@5ETO^@)^@)^@)^@)A@1A@1B@5 *0A*0AC8A*)^@)^@)^@)^@)^@)^@0A@0A@0VE
)@@G@@A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC7B@2DD#A@6A@7B@5DD#^@)VF
)@@G@@^@)^@)^@)CD^DK)C-PC*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1EK0VG
)@@G@@A@0A@0AK1EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@6A@7B@5DD#^@)^@)^@)^@)CD^DK)C-PVH
)@@G@@C*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1EK0A@0A@0AK1EK)^@0^[IVI
)@@G@@@O@O=@D00A@4BC7B@2DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)VJ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1DC0A@0A@0AK1DC)^@)^[I@O@O=@D00A@4BC7B@2VK
)@@G@@E[TAC2A@5B@5^@1AC0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VL
)@@G@@A81EK0A@0A@0A@0A@0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC2AC3B@5^@)^@)VM
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1C00VN
)@@G@@A@0A@0AK1C0)^@)^[I@O@O=@D00A@4BC7B@2E[TA@1A@9B@6^@1AK6^@)^@)^@)C-MFL[DD#VO
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*0D)0A@0A@0AK1D80A@0A@0A81EK)^@0^[IVP
)@@G@@@O@O=@D00A@4BC7B@2DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)VQ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1C*0A@0A@0AK1C*)^@)^[I@O@O=@D00A@4BC7B@2VR
)@@G@@E[TA@1AS0B@6^@1A)2^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VS
)@@G@@A*0D*0A@0A@0AK1D00A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@2AK0B@6^@)^@)VT
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1CS0VU
)@@G@@A@0A@0AK1CS)^@)^[I@O@O=@D00A@4BC7B@2E[TA@2AK8B@6^@1A02^@)^@)^@)C-MFL[DD#VV
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*0D80A@0A@0AK1D)0A@0A@0A81EK)^@0^[IVW
)@@G@@@O@O=@D00A@4BC7B@2DD#A@3AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)VX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1CC0A@0A@0AK1CC)^@)^[I@O@O=@D00A@4BC7B@2VY
)@@G@@E[TA@4A@1B@6^@1B@4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VZ
)@@G@@A*0EC0A@0A@0AK1DK0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@4AC8B@6^@)^@)WA
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1JS0WB
)@@G@@A@0A@0AK1JS)^@)^[I@O@O=@D00A@4BC7B@2E[TA@5A@1B@6^@2A@6^@)^@)^@)C-MFL[DD#WC
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*0EK0A@0A@0AK1J*0A@0A@0A81EK)^@0^[IWD
)@@G@@@O@O=@D00A@4BC7B@2DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WE
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0D@0A@0A@0AK0D@)^@)^[I@O@O=@D00A@4BC7B@2WF
)@@G@@E[TA@5AK8B@6^@2AK4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WG
)@@G@@A*1DK0A@0A@0AK0EC0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@6AC6B@6^@)^@)WH
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0C00WI
)@@G@@A@0A@0AK0C0)^@)^[I@O@O=@D00A@4BC7B@2E[TA@6AK7B@6^@2A)6^@)^@)^@)C-MFL[DD#WJ
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*1D)0A@0A@0AK0D80A@0A@0A81EK)^@0^[IWK
)@@G@@@O@O=@D00A@4BC7B@2DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0C)0A@0A@0AK0C))^@)^[I@O@O=@D00A@4BC7B@2WM
)@@G@@E[TA@7AS0B@6^@)AK1^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WN
)@@G@@A*1D00A@0A@0AK0D*0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@8AC8B@6^@)^@)WO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0CS0WP
)@@G@@A@0A@0AK0CS)^@)^[I@O@O=@D00A@4BC7B@2E[TA@8AK8B@6^@)A)3^@)^@)^@)C-MFL[DD#WQ
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*1D80A@0A@0AK0D)0A@0A@0A81EK)^@0^[IWR
)@@G@@@O@O=@D00A@4BC7B@2DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WS
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0CC0A@0A@0AK0CC)^@)^[I@O@O=@D00A@4BC7B@2WT
)@@G@@E[TA@9AS0B@6^@)A05^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WU
)@@G@@A*1EC0A@0A@0AK0DK0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC0AK0B@6^@)^@)WV
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9DC0WW
)@@G@@A@0A@0AC9DC)^@)^[I@O@O=@D00A@4BC7B@2E[TAC0AK9B@6^@)B@6^@)^@)^@)C-MFL[DD#WX
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*2J*0A@0A@0AC9EK0A@0A@0A81EK)^@0^[IWY
)@@G@@@O@O=@D00A@4BC7B@2DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9D@0A@0A@0AC9D@)^@)^[I@O@O=@D00A@4BC7B@2XA
)@@G@@E[TAC2A@1B@6^@1A@7^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XB
)@@G@@A*2DK0A@0A@0AC9EC0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC2AC1B@6^@)^@)XC
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9C00XD
)@@G@@A@0A@0AC9C0)^@)^[I@O@O=@D00A@4BC7B@2E[TA@1A@9B@7^@1AK9^@)^@)^@)C-MFL[DD#XE
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*2D)0A@0A@0AC9D80A@0A@0A81EK)^@0^[IXF
)@@G@@@O@O=@D00A@4BC7B@2DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)XG
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9C)0A@0A@0AC9C))^@)^[I@O@O=@D00A@4BC7B@2XH
)@@G@@DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XI
)@@G@@A@0A@0A@0A@0AC9C)0A@0A@0AC9C))^@)^[I@O@O=@D00A@4BC7B@2E[TA@2AK6B@7^@1A05XJ
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AS3DK0A@0A@0AS8EC0XK
)@@G@@A@0A@0A81EK)^@1^[I@O@O=@D00A@4BC7B@2DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL XL
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9CS0A@0A@0AC9CS)^@)^[IXM
)@@G@@@O@O=@D00A@4BC7B@2E[TA@3AK7B@7^@1B@6^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)XN
)@@G@@^@)^@)^@)^@0A@0A@0A*2D80A@0A@0AC9D)0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2XO
)@@G@@DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XP
)@@G@@A@0A@0A@0A@0AC9CC0A@0A@0AC9CC)^@)^[I@O@O=@D00A@4BC7B@2E[TA@4AK9B@7^@2A@8XQ
)@@G@@^@)^@)^@)C-MCDUCDDCS?^[^^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*2EC0A@0A@0AC9DK0XR
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL XS
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC8DC0A@0A@0AC8DC)^@)^[IXT
)@@G@@@O@O=@D00A@4BC7B@2E[TA@6A@1B@7^@2AS0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)XU
)@@G@@^@)^@)^@)^@0A@0A@0A*3J*0A@0A@0AC8EK0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2XV
)@@G@@DD#A@6AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XW
)@@G@@A@0A@0A@0A@0AC8D@0A@0A@0AC8D@)^@)^[I@O@O=@D00A@4BC7B@2E[TA@6AK6B@7^@2A)9XX
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*3DK0A@0A@0AC8EC0XY
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL XZ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC8C00A@0A@0AC8C0)^@)^[IYA
)@@G@@@O@O=@D00A@4BC7B@2E[TA@8A@4B@7^@)AK5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)YB
)@@G@@^@)^@)^@)^@0A@0A@1A@5EC0A@0A@0AC8D80A@0A@1AK4D*)^@0^[I@O@O=@D00A@4BC7B@2YC
)@@G@@DD#A@8AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YD
)@@G@@A@0A@0A@0A@0AC8CK0A@0A@0AC8CK)^@)^[I@O@O=@D00A@4BC7B@2E[TA@9A@2B@7^@)A)6YE
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*3E@0A@0A@0AC8DS0YF
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@9AK1B@7^@)^@)^@)^@)^@)DDIE- EL YG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC8CC0A@0A@0AC8CC)^@)^[IYH
)@@G@@@O@O=@D00A@4BC7B@2E[TAC0A@1B@7^@)A06^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)YI
)@@G@@^@)^@)^@)^@0A@0A@0A*3EC0A@0A@0AC8DK0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2YJ
)@@G@@DD#AC0AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YK
)@@G@@A@0A@0A@0A@0AC7DC0A@0A@0AC7DC)^@)^[I@O@O=@D00A@4BC7B@2E[TAC0AK9B@7^@)B@6YL
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*4J*0A@0A@0AC7EK0YM
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL YN
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7C80A@0A@0AC7C8)^@)^[IYO
)@@G@@@O@O=@D00A@4BC7B@2E[TAC2A@1B@7^@1A@7^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)YP
)@@G@@^@)^@)^@)^@0A@0A@0A*4DS0A@0A@0AC7E@0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2YQ
)@@G@@DD#AC2AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YR
)@@G@@A@0A@0A@0A@0AC7C*0A@0A@0AC7C*)^@)^[I@O@O=@D00A@4BC7B@2E[TA@1A@7B@8^@1AS0YS
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AS6EK0A@0A@0AS5J*0YT
)@@G@@A@0A@0A81EK)^@1^[I@O@O=@D00A@4BC7B@2DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL YU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7C*0A@0A@0AC7C*)^@)^[IYV
)@@G@@@O@O=@D00A@4BC7B@2E[TA@1AK9B@8^@1A)6^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)YW
)@@G@@^@)^@)^@)^@0A@0A@0A81EK0A@0A@0A@0A@0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2YX
)@@G@@DD#A@2AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YY
)@@G@@A@0A@0A@0A@0AC7CK0A@0A@0AC7CK)^@)^[I@O@O=@D00A@4BC7B@2E[TA@3A@4B@8AC1A81YZ
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*4E@0A@0A@0AC7DS0ZA
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL ZB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7JS0A@0A@0AC7JS)^@)^[IZC
)@@G@@@O@O=@D00A@4BC7B@2E[TA@3AK9B@8^@1B@8^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)ZD
)@@G@@^@)^@)^@)^@0A@0A@0A*4EK0A@0A@0AC7J*0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2ZE
)@@G@@DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZF
)@@G@@A@0A@0A@0A@0AC6D@0A@0A@0AC6D@)^@)^[I@O@O=@D00A@4BC7B@2E[TA@4AK8B@8^@2A@9ZG
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*5DK0A@0A@0AC6EC0ZH
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL ZI
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6C00A@0A@0AC6C0)^@)^[IZJ
)@@G@@@O@O=@D00A@4BC7B@2E[TA@6A@2B@8^@2AS3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)ZK
)@@G@@^@)^@)^@)^@0A@0A@0A*5D)0A@0A@0AC6D80A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2ZL
)@@G@@DD#A@6AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZM
)@@G@@A@0A@0A@0A@0AC6C)0A@0A@0AC6C))^@)^[I@O@O=@D00A@4BC7B@2E[TA@6AK9B@8^@2A*2ZN
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*5D00A@0A@0AC6D*0ZO
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL ZP
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6CK0A@0A@0AC6CK)^@)^[IZQ
)@@G@@@O@O=@D00A@4BC7B@2E[TA@7AK6B@8^@)AC7^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)ZR
)@@G@@^@)^@)^@)^@0A@0A@0A*5E@0A@0A@0AC6DS0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2ZS
)@@G@@DD#A@8AC8B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZT
)@@G@@A@0A@0A@0A@0AC6CC0A@0A@0AC6CC)^@)^[I@O@O=@D00A@4BC7B@2E[TA@8AS0B@8^@)A)2ZU
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*5EC0A@0A@0AC6DK0ZV
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@9AK1B@8^@)^@)^@)^@)^@)DDIE- EL ZW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC5DC0A@0A@0AC5DC)^@)^[IZX
)@@G@@@O@O=@D00A@4BC7B@2E[TA@9AK6B@8^@)A00^@)^@)^@)C-MFL[DDU ))C))^@)^@)^@)^@)ZY
)@@G@@^@)^@)^@)^@0A@0A@0A*6J*0A@0A@0AC5EK0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2ZZ
)@@G@@DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AA
)@@G@@A@0A@0A@0A@0AC5C80A@0A@0AC5C8)^@)^[I@O@O=@D00A@4BC7B@2E[TAC0AK6B@8^@)B@2AB
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*6DS0A@0A@0AC5E@0AC
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL AD
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC5C*0A@0A@0AC5C*)^@)^[IAE
)@@G@@@O@O=@D00A@4BC7B@2E[TAC2A@7B@8^@1AC0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)AF
)@@G@@^@)^@)^@)^@0A@0A@0A*6D*0A@0A@0AC5D00A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2AG
)@@G@@DD#AC2AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AH
)@@G@@A@0A@0A@0A@0AC5CS0A@0A@0AC5CS)^@)^[I@O@O=@D00A@4BC7B@2E[TAC2AK9B@8^@1AK5AI
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*6D80A@0A@0AC5D)0AJ
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2E[TA@1AK7B@9^@1A)5^@)^@)^@)C-MFL[DD#AK
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*6EC0A@0A@0AC5DK0A@0A@0A81EK)^@0^[IAL
)@@G@@@O@O=@D00A@4BC7B@2DD#A@2A@1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)AM
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC5CC0A@0A@0AC5CC)^@)^[I@O@O=@D00A@4BC7B@2AN
)@@G@@DD#A@2AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AO
)@@G@@A@0A@0A@0A@0AC4DC0A@0A@0AC4DC)^@)^[I@O@O=@D00A@4BC7B@2E[TA@2AK8B@9^@1A07AP
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*7J*0A@0A@0AC4EK0AQ
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@3AC7B@9^@)^@)^@)^@)^@)DDIE- EL AR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC4C80A@0A@0AC4C8)^@)^[IAS
)@@G@@@O@O=@D00A@4BC7B@2E[TA@3AK7B@9^@1B@5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)AT
)@@G@@^@)^@)^@)^@0A@0A@0A*7DS0A@0A@0AC4E@0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2AU
)@@G@@DD#A@4AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AV
)@@G@@A@0A@0A@0A@0AC4C*0A@0A@0AC4C*)^@)^[I@O@O=@D00A@4BC7B@2E[TA@4AK7B@9^@2A@8AW
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*7D*0A@0A@0AC4D00AX
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2DD#A@5AC9B@9^@)^@)^@)^@)^@)DDIE- EL AY
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC4C)0A@0A@0AC4C))^@)^[IAZ
)@@G@@@O@O=@D00A@4BC7B@2E[TA@5AK6B@9^@2AK9^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)BA
)@@G@@^@)^@)^@)^@0A@0A@0A*7D00A@0A@0AC4D*0A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@2BB
)@@G@@DD#A@6AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC
)@@G@@A@0A@0A@0A@0AC4CK0A@0A@0AC4CK)^@)^[I@O@O=@D00A@4BC7B@2E[TA@6AK7B@9^@2A*0BD
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*7E@0A@0A@0AC4DS0BE
)@@G@@A@0A@0A81EK)^@0^[I@O@O=@D00A@4BC7B@3D-KA@8AK6B@2^@)^@)^@)^@)^@)D-JCDI^[KBF
)@@G@@ELDD1#DDKCDG^@)^@)^@)^@)^@)^@0A@0A02A*0A@0A@0A@0A@0A@0A@0A02A*0A@)^@0^[IBG
)@@G@@@O@O=@D00A@4BC7B@3D-KA@1AC3B@3^@)^@)^@)^@)^@)C-MFL[DD# ))C-[E1DC))C*)^@)BH
)@@G@@^@)^@)^@)^@0A@0A02A*0A@0A@0A@0A@0A@0A@0A02A*0A@)^@0^[I@O@O=@D00A@4BC7B@3BI
)@@G@@DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BJ
)@@G@@A@0A@0A@0A@0A)1A80A@0A@0A)1A8)^@)^[I@O@O=@D00A@4BC7B@3E[TA@3A@6B@4^@1A83BK
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC0EK0A@0A@0A)1E@0BL
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@3AK1B@4^@)^@)^@)^@)^@)DDIE- EL BM
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1A)0A@0A@0A)1A))^@)^[IBN
)@@G@@@O@O=@D00A@4BC7B@3E[TA@4A@3B@4^@1BC3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)BO
)@@G@@^@)^@)^@)^@0A@0A@0BC1DS0A@0A@0A)1D*0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3BP
)@@G@@DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BQ
)@@G@@A@0A@0A@0A@0A)1AC0A@0A@0A)1AC)^@)^[I@O@O=@D00A@4BC7B@3E[TA@4AK7B@4^@2AC0BR
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC1D00A@0A@0A)1DK0BS
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@5AK2B@4^@)^@)^@)^@)^@)DDIE- EL BT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0B@0A@0A@0A)0B@)^@)^[IBU
)@@G@@@O@O=@D00A@4BC7B@3E[TA@5AS1B@4^@2AS3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)BV
)@@G@@^@)^@)^@)^@0A@0A@0BC1EC0A@0A@0A)0EC0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3BW
)@@G@@DD#A@6AK1B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BX
)@@G@@A@0A@0A@0A@0A)0A)0A@0A@0A)0A))^@)^[I@O@O=@D00A@4BC7B@3E[TA@6AK8B@4^@2A*3BY
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC2DS0A@0A@0A)0D*0BZ
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL CA
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0AC0A@0A@0A)0AC)^@)^[ICB
)@@G@@@O@O=@D00A@4BC7B@3E[TA@7AK7B@4^@)AC9^@)^@)^@)C-MFL[DDGCS?^[^^@)^@)^@)^@)CC
)@@G@@^@)^@)^@)^@0A@0A@0BC2D00A@0A@0A)0DK0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3CD
)@@G@@DD#A@8AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CE
)@@G@@A@0A@0A@0A@0AS9B@0A@0A@0AS9B@)^@)^[I@O@O=@D00A@4BC7B@3E[TA@9AC7B@4^@)A*5CF
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC2EC0A@0A@0AS9EC0CG
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@9AK0B@4^@)^@)^@)^@)^@)DDIE- EL CH
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS9A*0A@0A@0AS9A*)^@)^[ICI
)@@G@@@O@O=@D00A@4BC7B@3E[TAC0A@2B@4^@)A06^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)CJ
)@@G@@^@)^@)^@)^@0A@0A@0BC3DK0A@0A@0AS9D00A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3CK
)@@G@@DD#AC0AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CL
)@@G@@A@0A@0A@0A@0AS9AK0A@0A@0AS9AK)^@)^[I@O@O=@D00A@4BC7B@3E[TAC1A@1B@4^@)B@8CM
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC3D*0A@0A@0AS9DS0CN
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#AC1AK7B@4^@)^@)^@)^@)^@)DDIE- EL CO
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8BC0A@0A@0AS8BC)^@)^[ICP
)@@G@@@O@O=@D00A@4BC7B@3E[TAC1AK8B@4^@1A@5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)CQ
)@@G@@^@)^@)^@)^@0A@0A@0BC3E@0A@0A@0AS8EK0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3CR
)@@G@@DD#AC2AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CS
)@@G@@A@0A@0A@0A@0AS8A00A@0A@0AS8A0)^@)^[I@O@O=@D00A@4BC7B@3E[TA@1A@4B@5^@1AK4CT
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC4J*0A@0A@0AS8D80CU
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@1AK5B@5^@)^@)^@)^@)^@)DDIE- EL CV
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8AS0A@0A@0AS8AS)^@)^[ICW
)@@G@@@O@O=@D00A@4BC7B@3D( A@1AS0B@5D( ^@)^@)^@)^@)CS)E*)C9MCD^^@6D[MES)^@)^@)CX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC7B@3CY
)@@G@@ETOA@1AS0B@5ETO^@)^@)^@)^@)A@1A@1B[F *0A*0AC8A*)^@)^@)^@)^@)^@)^@0A@0A@0CZ
)@@G@@A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC7B@3DD#A@2A@1B@5DD#^@)DA
)@@G@@^@)^@)^@)CD^DK)C-PC*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8D)0DB
)@@G@@A@0A@0AS8D))^@0^[I@O@O=@D00A@4BC7B@3DD#A@5AK1B@5^@)^@)^@)^@)^@)DDIE- EL DC
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8AS0A@0A@0AS8AS)^@)^[IDD
)@@G@@@O@O=@D00A@4BC7B@3ETOA@6A@3B@5ETO^@)^@)^@)^@)A@1A@1B@5 *0A*0AC8A*)^@)^@)DE
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC7B@3DF
)@@G@@DD#A@6A@7B@5DD#^@)^@)^@)^@)CD^DK)C-PC*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0DG
)@@G@@A@0A@0A@0A@0AS8D)0A@0A@0AS8D))^@0^[I@O@O=@D00A@4BC7B@3DD#A@6A@7B@5DD#^@)DH
)@@G@@^@)^@)^@)CD^DK)C-PC*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8D)0DI
)@@G@@A@0A@0AS8D))^@0^[I@O@O=@D00A@4BC7B@3DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL DJ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8CS0A@0A@0AS8CS)^@)^[IDK
)@@G@@@O@O=@D00A@4BC7B@3E[TAC2A@5B@5^@1AC0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)DL
)@@G@@^@)^@)^@)^@0A@0A@1AS2D80A@0A@0A@0A@0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DM
)@@G@@DD#AC2AC3B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DN
)@@G@@A@0A@0A@0A@0AS7D@0A@0A@0AS7D@)^@)^[I@O@O=@D00A@4BC7B@3E[TA@1A@9B@6^@1AK6DO
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC4EC0A@0A@0AS7EC0DP
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL DQ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7C*0A@0A@0AS7C*)^@)^[IDR
)@@G@@@O@O=@D00A@4BC7B@3E[TA@1AS0B@6^@1A)2^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)DS
)@@G@@^@)^@)^@)^@0A@0A@0BC5DK0A@0A@0AS7D00A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DT
)@@G@@DD#A@2AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DU
)@@G@@A@0A@0A@0A@0AS7CK0A@0A@0AS7CK)^@)^[I@O@O=@D00A@4BC7B@3E[TA@2AK8B@6^@1A02DV
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC5D*0A@0A@0AS7DS0DW
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@3AK0B@6^@)^@)^@)^@)^@)DDIE- EL DX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6DC0A@0A@0AS6DC)^@)^[IDY
)@@G@@@O@O=@D00A@4BC7B@3E[TA@4A@1B@6^@1B@4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)DZ
)@@G@@^@)^@)^@)^@0A@0A@0BC5E@0A@0A@0AS6EK0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3EA
)@@G@@DD#A@4AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EB
)@@G@@A@0A@0A@0A@0AS6C00A@0A@0AS6C0)^@)^[I@O@O=@D00A@4BC7B@3E[TA@5A@1B@6^@2A@6EC
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC6J*0A@0A@0AS6D80ED
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL EE
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6CK0A@0A@0AS6CK)^@)^[IEF
)@@G@@@O@O=@D00A@4BC7B@3E[TA@5AK8B@6^@2AK4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)EG
)@@G@@^@)^@)^@)^@0A@0A@0BC6D*0A@0A@0AS6DS0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3EH
)@@G@@DD#A@6AC6B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EI
)@@G@@A@0A@0A@0A@0AS5DC0A@0A@0AS5DC)^@)^[I@O@O=@D00A@4BC7B@3E[TA@6AK7B@6^@2A)6EJ
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC6E@0A@0A@0AS5EK0EK
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL EL
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS5C00A@0A@0AS5C0)^@)^[IEM
)@@G@@@O@O=@D00A@4BC7B@3E[TA@7AS0B@6^@)AK1^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)EN
)@@G@@^@)^@)^@)^@0A@0A@0BC7J*0A@0A@0AS5D80A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3EO
)@@G@@DD#A@8AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EP
)@@G@@A@0A@0A@0A@0AS5CS0A@0A@0AS5CS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@8AK8B@6^@)A)3EQ
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC7D)0A@0A@0AS5D)0ER
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL ES
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS5JS0A@0A@0AS5JS)^@)^[IET
)@@G@@@O@O=@D00A@4BC7B@3E[TA@9AS0B@6^@)A05^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)EU
)@@G@@^@)^@)^@)^@0A@0A@0BC7D80A@0A@0AS5J*0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3EV
)@@G@@DD#AC0AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EW
)@@G@@A@0A@0A@0A@0AS4C00A@0A@0AS4C0)^@)^[I@O@O=@D00A@4BC7B@3E[TAC0AK9B@6^@)B@6EX
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC8J*0A@0A@0AS4D80EY
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL EZ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS4CS0A@0A@0AS4CS)^@)^[IFA
)@@G@@@O@O=@D00A@4BC7B@3E[TAC2A@1B@6^@1A@7^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)FB
)@@G@@^@)^@)^@)^@0A@0A@0BC8D)0A@0A@0AS4D)0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3FC
)@@G@@DD#AC2AC1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0FD
)@@G@@A@0A@0A@0A@0AS4JS0A@0A@0AS4JS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@1A@9B@7^@1AK9FE
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC8D80A@0A@0AS4J*0FF
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL FG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS3C00A@0A@0AS3C0)^@)^[IFH
)@@G@@@O@O=@D00A@4BC7B@3E[TA@1AK8B@7^@1A)4^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)FI
)@@G@@^@)^@)^@)^@0A@0A@0BC9J*0A@0A@0AS3D80A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3FJ
)@@G@@DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0FK
)@@G@@A@0A@0A@0A@0AS3CS0A@0A@0AS3CS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@2AK6B@7^@1A05FL
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC9D)0A@0A@0AS3D)0FM
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL FN
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS3JS0A@0A@0AS3JS)^@)^[IFO
)@@G@@@O@O=@D00A@4BC7B@3E[TA@3AK7B@7^@1B@6^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)FP
)@@G@@^@)^@)^@)^@0A@0A@0BC9D80A@0A@0AS3J*0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3FQ
)@@G@@DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0FR
)@@G@@A@0A@0A@0A@0AS2C80A@0A@0AS2C8)^@)^[I@O@O=@D00A@4BC7B@3E[TA@4AK9B@7^@2A@8FS
)@@G@@^@)^@)^@)C-MCDUCDDCS?^[^^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC9EK0A@0A@0AS2E@0FT
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL FU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2CS0A@0A@0AS2CS)^@)^[IFV
)@@G@@@O@O=@D00A@4BC7B@3E[TA@6A@1B@7^@2AS0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)FW
)@@G@@^@)^@)^@)^@0A@0A@1A@0D)0A@0A@0AS2D)0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3FX
)@@G@@DD#A@6AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0FY
)@@G@@A@0A@0A@0A@0AS2JS0A@0A@0AS2JS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@6AK6B@7^@2A)9FZ
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@0D80A@0A@0AS2J*0GA
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL GB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS1C00A@0A@0AS1C0)^@)^[IGC
)@@G@@@O@O=@D00A@4BC7B@3E[TA@8A@4B@7^@)AK5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)GD
)@@G@@^@)^@)^@)^@0A@0A@1A@1J*0A@0A@0AS1D80A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3GE
)@@G@@DD#A@8AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GF
)@@G@@A@0A@0A@0A@0AS1CS0A@0A@0AS1CS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@9A@2B@7^@)A)6GG
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@1D)0A@0A@0AS1D)0GH
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@9AK1B@7^@)^@)^@)^@)^@)DDIE- EL GI
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS1JS0A@0A@0AS1JS)^@)^[IGJ
)@@G@@@O@O=@D00A@4BC7B@3E[TAC0A@1B@7^@)A06^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)GK
)@@G@@^@)^@)^@)^@0A@0A@1A@1D80A@0A@0AS1J*0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3GL
)@@G@@DD#AC0AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GM
)@@G@@A@0A@0A@0A@0AS0C00A@0A@0AS0C0)^@)^[I@O@O=@D00A@4BC7B@3E[TAC0AK9B@7^@)B@6GN
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@2J*0A@0A@0AS0D80GO
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL GP
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0CS0A@0A@0AS0CS)^@)^[IGQ
)@@G@@@O@O=@D00A@4BC7B@3E[TAC2A@1B@7^@1A@7^@)^@)^@)C-MFL[DD# -^^@)^@)^@)^@)^@)GR
)@@G@@^@)^@)^@)^@0A@0A@1A@2D)0A@0A@0AS0D)0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3GS
)@@G@@DD#AC2AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GT
)@@G@@A@0A@0A@0A@0AS0JS0A@0A@0AS0JS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@1A@7B@8^@1AS0GU
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A82D80A@0A@0A00J*0GV
)@@G@@A@0A@1AS2D8)^@1^[I@O@O=@D00A@4BC7B@3DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL GW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0JS0A@0A@0AS0JS)^@)^[IGX
)@@G@@@O@O=@D00A@4BC7B@3E[TA@1AK9B@8^@1A)6^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)GY
)@@G@@^@)^@)^@)^@0A@0A@1AS2D80A@0A@0A@0A@0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3GZ
)@@G@@DD#A@2AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0HA
)@@G@@A@0A@0A@0A@0AK9CS0A@0A@0AK9CS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@3A@4B@8AC1A81HB
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@3D)0A@0A@0AK9D)0HC
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL HD
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8DC0A@0A@0AK8DC)^@)^[IHE
)@@G@@@O@O=@D00A@4BC7B@3E[TA@3AK9B@8^@1B@8^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)HF
)@@G@@^@)^@)^@)^@0A@0A@1A@3E@0A@0A@0AK8EK0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3HG
)@@G@@DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0HH
)@@G@@A@0A@0A@0A@0AK8C00A@0A@0AK8C0)^@)^[I@O@O=@D00A@4BC7B@3E[TA@4AK8B@8^@2A@9HI
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@4J*0A@0A@0AK8D80HJ
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL HK
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8CK0A@0A@0AK8CK)^@)^[IHL
)@@G@@@O@O=@D00A@4BC7B@3E[TA@6A@2B@8^@2AS3^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)HM
)@@G@@^@)^@)^@)^@0A@0A@1A@4D*0A@0A@0AK8DS0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3HN
)@@G@@DD#A@6AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0HO
)@@G@@A@0A@0A@0A@0AK7DC0A@0A@0AK7DC)^@)^[I@O@O=@D00A@4BC7B@3E[TA@6AK9B@8^@2A*2HP
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@4E@0A@0A@0AK7EK0HQ
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL HR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7C*0A@0A@0AK7C*)^@)^[IHS
)@@G@@@O@O=@D00A@4BC7B@3E[TA@7AK6B@8^@)AC7^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)HT
)@@G@@^@)^@)^@)^@0A@0A@1A@5DK0A@0A@0AK7D00A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3HU
)@@G@@DD#A@8AC8B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0HV
)@@G@@A@0A@0A@0A@0AK7CK0A@0A@0AK7CK)^@)^[I@O@O=@D00A@4BC7B@3E[TA@8AS0B@8^@)A)2HW
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@5D*0A@0A@0AK7DS0HX
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@9AK1B@8^@)^@)^@)^@)^@)DDIE- EL HY
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK6D@0A@0A@0AK6D@)^@)^[IHZ
)@@G@@@O@O=@D00A@4BC7B@3E[TA@9AK6B@8^@)A00^@)^@)^@)C-MFL[DDU ))C))^@)^@)^@)^@)IA
)@@G@@^@)^@)^@)^@0A@0A@1A@5EC0A@0A@0AK6EC0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3IB
)@@G@@DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0IC
)@@G@@A@0A@0A@0A@0AK6C*0A@0A@0AK6C*)^@)^[I@O@O=@D00A@4BC7B@3E[TAC0AK6B@8^@)B@2ID
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@6DK0A@0A@0AK6D00IE
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL IF
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK6CC0A@0A@0AK6CC)^@)^[IIG
)@@G@@@O@O=@D00A@4BC7B@3E[TAC2A@7B@8^@1AC0^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)IH
)@@G@@^@)^@)^@)^@0A@0A@1A@6D00A@0A@0AK6DK0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3II
)@@G@@DD#AC2AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0IJ
)@@G@@A@0A@0A@0A@0AK5D@0A@0A@0AK5D@)^@)^[I@O@O=@D00A@4BC7B@3E[TAC2AK9B@8^@1AK5IK
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@6EC0A@0A@0AK5EC0IL
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3E[TA@1AK7B@9^@1A)5^@)^@)^@)C-MFL[DD#IM
)@@G@@ ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@7DS0A@0A@0AK5D*0A@0A@1AS2D8)^@0^[IIN
)@@G@@@O@O=@D00A@4BC7B@3DD#A@2A@1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)IO
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK5C)0A@0A@0AK5C))^@)^[I@O@O=@D00A@4BC7B@3IP
)@@G@@DD#A@2AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0IQ
)@@G@@A@0A@0A@0A@0AK5CC0A@0A@0AK5CC)^@)^[I@O@O=@D00A@4BC7B@3E[TA@2AK8B@9^@1A07IR
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@7D00A@0A@0AK5DK0IS
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@3AC7B@9^@)^@)^@)^@)^@)DDIE- EL IT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4C80A@0A@0AK4C8)^@)^[IIU
)@@G@@@O@O=@D00A@4BC7B@3E[TA@3AK7B@9^@1B@5^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)IV
)@@G@@^@)^@)^@)^@0A@0A@1A@7EK0A@0A@0AK4E@0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3IW
)@@G@@DD#A@4AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0IX
)@@G@@A@0A@0A@0A@0AK4CS0A@0A@0AK4CS)^@)^[I@O@O=@D00A@4BC7B@3E[TA@4AK7B@9^@2A@8IY
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8D)0A@0A@0AK4D)0IZ
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3DD#A@5AC9B@9^@)^@)^@)^@)^@)DDIE- EL JA
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4JS0A@0A@0AK4JS)^@)^[IJB
)@@G@@@O@O=@D00A@4BC7B@3E[TA@5AK6B@9^@2AK9^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)JC
)@@G@@^@)^@)^@)^@0A@0A@1A@8D80A@0A@0AK4J*0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7B@3JD
)@@G@@DD#A@6AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0JE
)@@G@@A@0A@0A@0A@0AK3C00A@0A@0AK3C0)^@)^[I@O@O=@D00A@4BC7B@3E[TA@6AK7B@9^@2A*0JF
)@@G@@^@)^@)^@)C-MFL[DD# ))C))^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@9J*0A@0A@0AK3D80JG
)@@G@@A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC7BC1D-KA@8AK3A89BC0A87^@)^@)^@)D-JCDI^[KJH
)@@G@@ELDD1#DDKCDG^@)^@)^@)^@)^@)^@0A@0AK5AK0JS0A@0A@0A@0A@0A@0AK5AK0A@)^@0^[IJI
)@@G@@@O@O=@D00A@4BC7BC1D-KA@1AC7B@0A@5A06^@)^@)^@)C-PD1BCDI^[FCDOD[GC( D0)D*)JJ
)@@G@@^@)^@)^@)^@0A@0AK5AK0JS0A@0A@0A@0A@0A@0AK5AK0A@)^@0^[I@O@O=@D00A@4BC7BC1JK
)@@G@@D-KA@8AK8B@0AK1AC0^@)^@)^@)C-PD1BCDI^[FCDOD[GC( D0)D*)^@)AC2AC1A@0A@0AS3JL
)@@G@@AK0JS0A@0A@0A@0A@0A@0AS3AK0A@)^@0^[I@O@O=@D00A@4BC7BC1D-KA@1AC5B@1AS5AC1JM
)@@G@@^@)^@)^@)C-PD1BCDI^[FCDOD[GC( D0)D*)^@)AC3A*1AC0A@0AS8AK0JS0A@0A@0A@0A@0JN
)@@G@@A@0AS8AK0A@)^@0^[I@O@O=@D00A@4BC7BC1DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL JO
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0A*0A@0A@0AS0A*)^@)^[IJP
)@@G@@@O@O=@D00A@4BC7BC1E[TA@3A@6B@4^@1A83^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)JQ
)@@G@@^@)^@)^@)^@0A@0A@1A01D00A@0A@0AS0D00A@0A@1BC2^C)^@0^[I@O@O=@D00A@4BC7BC1JR
)@@G@@DD#A@3AK1B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0JS
)@@G@@A@0A@0A@0A@0AS0A@0A@0A@0AS0A@)^@)^[I@O@O=@D00A@4BC7BC1DD#A@4AC9B@4^@)^@)JT
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0A@0JU
)@@G@@A@0A@0AS0A@)^@)^[I@O@O=@D00A@4BC7BC1E[TA@4AK3B@4^@2A@6^@)^@)^@)C-PD1BCDIJV
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1AS2J*0A@0A@0A00J*0A@0A@1BC2^C)^@1^[IJW
)@@G@@@O@O=@D00A@4BC7BC1E[TA@5AC7B@4^@2AK4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)JX
)@@G@@^@)^@)^@)^@0A@0A@1BC2^C0A@0A@0A@0A@0A@0A@1BC2^C)^@0^[I@O@O=@D00A@4BC7BC1JY
)@@G@@DD#A@5AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0JZ
)@@G@@A@0A@0A@0A@0AK9AK0A@0A@0AK9AK)^@)^[I@O@O=@D00A@4BC7BC1E[TA@6AC9B@4^@2A)6KA
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A02EC0A@0A@0AK9DS0KB
)@@G@@A@0A@1BC2^C)^@0^[I@O@O=@D00A@4BC7BC1DD#A@6AK1B@4^@)^@)^@)^@)^@)DDIE- EL KC
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8B@0A@0A@0AK8B@)^@)^[IKD
)@@G@@@O@O=@D00A@4BC7BC1DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)KE
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8B@0A@0A@0AK8B@)^@)^[I@O@O=@D00A@4BC7BC1KF
)@@G@@DD#A@8AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0KG
)@@G@@A@0A@0A@0A@0AK8B@0A@0A@0AK8B@)^@)^[I@O@O=@D00A@4BC7BC1E[TA@9A@4B@4^@)A)6KH
)@@G@@^@)^@)^@)C-PD1BCDI -#^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@5D80A@0A@0B@6D*0KI
)@@G@@A@0A@1BC2^C)^@2^[I@O@O=@D00A@4BC7BC1DD#A@9AK0B@4^@)^@)^@)^@)^@)DDIE- EL KJ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8A00A@0A@0AK8A0)^@)^[IKK
)@@G@@@O@O=@D00A@4BC7BC1DD#AC0AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)KL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8A00A@0A@0AK8A0)^@)^[I@O@O=@D00A@4BC7BC1KM
)@@G@@E[TAC0AK6B@4^@)B@4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2KN
)@@G@@BC8J*0A@0A@0A*7DS0A@0A@3A*5DS)^@4^[I@O@O=@D00A@4BC7BC1DD#AC1AK7B@4^@)^@)KO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7B@0KP
)@@G@@A@0A@0AK7B@)^@)^[I@O@O=@D00A@4BC7BC1DD#AC2AC9B@4^@)^@)^@)^@)^@)DDIE- EL KQ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7B@0A@0A@0AK7B@)^@)^[IKR
)@@G@@@O@O=@D00A@4BC7BC1E[TA@1A@3B@5^@1AK3^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)KS
)@@G@@^@)^@)^@)^@0A@0A@4BC1EC0A@0A@0A*5D80A@0A@5A)7D*)^@4^[I@O@O=@D00A@4BC7BC1KT
)@@G@@DD#A@1AK5B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0KU
)@@G@@A@0A@0A@0A@0AK6A00A@0A@0AK6A0)^@)^[I@O@O=@D00A@4BC7BC1E[TA@1AK9B@5^@1A)2KV
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A05D*0A@0A@0AK6D80KW
)@@G@@A@0A@1BC2^C)^@1^[I@O@O=@D00A@4BC7BC1DD#A@2AK0B@5^@)^@)^@)^@)^@)DDIE- EL KX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK6AK0A@0A@0AK6AK)^@)^[IKY
)@@G@@@O@O=@D00A@4BC7BC1DD#A@3AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)KZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK6AK0A@0A@0AK6AK)^@)^[I@O@O=@D00A@4BC7BC1LA
)@@G@@E[TA@3AK2B@5^@1B@0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1LB
)@@G@@AS9D80A@0A@0A*2D*0A@0A@1BC2^C)^@2^[I@O@O=@D00A@4BC7BC1DD#A@4AC9B@5^@)^@)LC
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK5B@0LD
)@@G@@A@0A@0AK5B@)^@)^[I@O@O=@D00A@4BC7BC1E[TA@4AK2B@5^@2A@0^@)^@)^@)C-PD1BCDILE
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A06DS0A@0A@0AK5EC0A@0A@1BC2^C)^@2^[ILF
)@@G@@@O@O=@D00A@4BC7BC1DD#A@5AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)LG
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK5A)0A@0A@0AK5A))^@)^[I@O@O=@D00A@4BC7BC1LH
)@@G@@E[TA@5AK1B@5^@2AK1^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1LI
)@@G@@A06D80A@0A@0AK5D*0A@0A@1BC2J*)^@2^[I@O@O=@D00A@4BC7BC1E[TA@6AC7B@5^@2AS9LJ
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC2J*0A@0A@0A@0A@0LK
)@@G@@A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1DD#A@6AK0B@5^@)^@)^@)^@)^@)DDIE- EL LL
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4A*0A@0A@0AK4A*)^@)^[ILM
)@@G@@@O@O=@D00A@4BC7BC1DD#A@7AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)LN
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4A*0A@0A@0AK4A*)^@)^[I@O@O=@D00A@4BC7BC1LO
)@@G@@E[TA@7AK4B@5^@)AC7^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1LP
)@@G@@A)3J*0A@0A@0A)9J*0A@0A@1BC2J*)^@2^[I@O@O=@D00A@4BC7BC1E[TA@8A@7B@5^@)AK6LQ
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC2J*0A@0A@0A@0A@0LR
)@@G@@A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1DD#A@8AC6B@5^@)^@)^@)^@)^@)DDIE- EL LS
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3A80A@0A@0AK3A8)^@)^[ILT
)@@G@@@O@O=@D00A@4BC7BC1E[TA@8AK8B@5^@)A)2^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)LU
)@@G@@^@)^@)^@)^@0A@0A@1A08D)0A@0A@0AK3E@0A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1LV
)@@G@@E[TA@9AC2B@5^@)A*2^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1LW
)@@G@@BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@9AC9B@5^@)^@)LX
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2B@0LY
)@@G@@A@0A@0AK2B@)^@)^[I@O@O=@D00A@4BC7BC1DD#AC0AK2B@5^@)^@)^@)^@)^@)DDIE- EL LZ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2D@0A@0A@0AK2D@)^@)^[IMA
)@@G@@@O@O=@D00A@4BC7BC1E[TAC1AC3B@5^@)BC6^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)MB
)@@G@@^@)^@)^@)^@0A@0A@2A88D*0A@0A@0A)5D80A@0A@3AK4J*)^@1^[I@O@O=@D00A@4BC7BC1MC
)@@G@@DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0MD
)@@G@@A@0A@0A@0A@0AK2CC0A@0A@0AK2CC)^@)^[I@O@O=@D00A@4BC7BC1E[TAC1AK1B@5^@1A@2ME
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@5AK9EK0A@0A@0AK2DK0MF
)@@G@@A@0A@5A*2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#AC2AC3B@5^@)^@)^@)^@)^@)DDIE- EL MG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0D@0A@0A@0AK0D@)^@)^[IMH
)@@G@@@O@O=@D00A@4BC7BC1DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)MI
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0D@0A@0A@0AK0D@)^@)^[I@O@O=@D00A@4BC7BC1MJ
)@@G@@E[TA@2A@3B@6^@1A)4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1MK
)@@G@@A*0D*0A@0A@0A)1D80A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1DD#A@2AK0B@6^@)^@)ML
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0C)0MM
)@@G@@A@0A@0AK0C))^@)^[I@O@O=@D00A@4BC7BC1E[TA@2AK1B@6^@1A*8^@)^@)^@)C-PD1BCDIMN
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A81D80A@0A@0AK0D*0A@0A@1BC2J*)^@1^[IMO
)@@G@@@O@O=@D00A@4BC7BC1E[TA@3AC4B@6^@1A83^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)MP
)@@G@@^@)^@)^@)^@0A@0A@1BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1MQ
)@@G@@DD#A@3AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0MR
)@@G@@A@0A@0A@0A@0AC9C*0A@0A@0AC9C*)^@)^[I@O@O=@D00A@4BC7BC1E[TA@4A@1B@6^@1B@4MS
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A82D00A@0A@0AC9D00MT
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@4AC8B@6^@)^@)^@)^@)^@)DDIE- EL MU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9JS0A@0A@0AC9JS)^@)^[IMV
)@@G@@@O@O=@D00A@4BC7BC1E[TA@5AC6B@6^@2AC7^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)MW
)@@G@@^@)^@)^@)^@0A@0A@1A83J*0A@0A@0AC9J*0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1MX
)@@G@@DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0MY
)@@G@@A@0A@0A@0A@0AC8C00A@0A@0AC8C0)^@)^[I@O@O=@D00A@4BC7BC1E[TA@6AC3B@6^@2AS6MZ
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A*4EC0A@0A@0AS7DS0NA
)@@G@@A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1DD#A@6AC6B@6^@)^@)^@)^@)^@)DDIE- EL NB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC8C00A@0A@0AC8C0)^@)^[INC
)@@G@@@O@O=@D00A@4BC7BC1E[TA@7AC4B@6^@)^@9^@)^@)^@)C-PD1BCDI -F^@)^@)^@)^@)^@)ND
)@@G@@^@)^@)^@)^@0A@0A@1BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1NE
)@@G@@DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0NF
)@@G@@A@0A@0A@0A@0AC7C80A@0A@0AC7C8)^@)^[I@O@O=@D00A@4BC7BC1E[TA@8A@7B@6^@)AK7NG
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A84D)0A@0A@0AC7E@0NH
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@8AC8B@6^@)^@)^@)^@)^@)DDIE- EL NI
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7CS0A@0A@0AC7CS)^@)^[INJ
)@@G@@@O@O=@D00A@4BC7BC1E[TA@9AC0B@6^@)A*1^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)NK
)@@G@@^@)^@)^@)^@0A@0A@1A84E@0A@0A@0AC7D)0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1NL
)@@G@@DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0NM
)@@G@@A@0A@0A@0A@0AC6DC0A@0A@0AC6DC)^@)^[I@O@O=@D00A@4BC7BC1E[TAC0AC0B@6^@)A83NN
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A85DK0A@0A@0AC6EK0NO
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#AC0AK0B@6^@)^@)^@)^@)^@)DDIE- EL NP
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6C)0A@0A@0AC6C))^@)^[INQ
)@@G@@@O@O=@D00A@4BC7BC1E[TAC1A@5B@6^@)BC1^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)NR
)@@G@@^@)^@)^@)^@0A@0A@1A85D80A@0A@0AC6D*0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1NS
)@@G@@DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0NT
)@@G@@A@0A@0A@0A@0AC6JS0A@0A@0AC6JS)^@)^[I@O@O=@D00A@4BC7BC1E[TAC2A@5B@6^@1AC1NU
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A86J*0A@0A@0AC6J*0NV
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#AC2AC1B@6^@)^@)^@)^@)^@)DDIE- EL NW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC5C00A@0A@0AC5C0)^@)^[INX
)@@G@@@O@O=@D00A@4BC7BC1E[TA@1A@2B@7^@1AK4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)NY
)@@G@@^@)^@)^@)^@0A@0A@1A86D*0A@0A@0AC5D80A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1NZ
)@@G@@DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0OA
)@@G@@A@0A@0A@0A@0AC5CC0A@0A@0AC5CC)^@)^[I@O@O=@D00A@4BC7BC1E[TA@2A@2B@7^@1A)7OB
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A86EK0A@0A@0AC5DK0OC
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL OD
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC4C80A@0A@0AC4C8)^@)^[IOE
)@@G@@@O@O=@D00A@4BC7BC1E[TA@2AK6B@7^@1A05^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)OF
)@@G@@^@)^@)^@)^@0A@0A@1A87D)0A@0A@0AC4E@0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1OG
)@@G@@DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0OH
)@@G@@A@0A@0A@0A@0AC4CK0A@0A@0AC4CK)^@)^[I@O@O=@D00A@4BC7BC1E[TA@4A@1B@7^@1B@9OI
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A87EC0A@0A@0AC4DS0OJ
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL OK
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC3D@0A@0A@0AC3D@)^@)^[IOL
)@@G@@@O@O=@D00A@4BC7BC1E[TA@5AC4B@7^@2AC9^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)OM
)@@G@@^@)^@)^@)^@0A@0A@1A88DS0A@0A@0AC3EC0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1ON
)@@G@@DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0OO
)@@G@@A@0A@0A@0A@0AC3CS0A@0A@0AC3CS)^@)^[I@O@O=@D00A@4BC7BC1E[TA@6AC2B@7^@2AS9OP
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A88E@0A@0A@0AC3D)0OQ
)@@G@@A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@6AC8B@7^@)^@)^@)^@)^@)DDIE- EL OR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC2DC0A@0A@0AC2DC)^@)^[IOS
)@@G@@@O@O=@D00A@4BC7BC1DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OT
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC2DC0A@0A@0AC2DC)^@)^[I@O@O=@D00A@4BC7BC1OU
)@@G@@E[TA@7AK8B@7^@)AK0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OV
)@@G@@A06DS0A@0A@0AK5EC0A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1E[TA@8AK0B@7^@)AS7OW
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A89D00A@0A@0AC2D00OX
)@@G@@A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1DD#A@8AK1B@7^@)^@)^@)^@)^@)DDIE- EL OY
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC2C*0A@0A@0AC2C*)^@)^[IOZ
)@@G@@@O@O=@D00A@4BC7BC1E[TA@9A@3B@7^@)A)7^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)PA
)@@G@@^@)^@)^@)^@0A@0A@1BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1PB
)@@G@@E[TA@9AC5B@7^@)A*4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1PC
)@@G@@BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@9AK1B@7^@)^@)PD
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC1CC0PE
)@@G@@A@0A@0AC1CC)^@)^[I@O@O=@D00A@4BC7BC1DD#AC0AK1B@7^@)^@)^@)^@)^@)DDIE- EL PF
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC1CC0A@0A@0AC1CC)^@)^[IPG
)@@G@@@O@O=@D00A@4BC7BC1E[TAC1A@4B@7^@)BC0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)PH
)@@G@@^@)^@)^@)^@0A@0A@1A09EC0A@0A@0AK2DS0A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1PI
)@@G@@DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0PJ
)@@G@@A@0A@0A@0A@0AC0C00A@0A@0AC0C0)^@)^[I@O@O=@D00A@4BC7BC1DD#AC2AC8B@7^@)^@)PK
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC0C00PL
)@@G@@A@0A@0AC0C0)^@)^[I@O@O=@D00A@4BC7BC1E[TAC2AK9B@7^@1AK5^@)^@)^@)C-PD1BCDIPM
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3A02EC0A@0A@0AK1DS0A@0A@3B@4J*)^@2^[IPN
)@@G@@@O@O=@D00A@4BC7BC1E[TA@1A@7B@8^@1AS0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)PO
)@@G@@^@)^@)^@)^@0A@0A@1B@2D)0A@0A@0A@9E@0A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1PP
)@@G@@DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0PQ
)@@G@@A@0A@0A@0A@0A@9C80A@0A@0A@9C8)^@)^[I@O@O=@D00A@4BC7BC1E[TA@2AC9B@8^@1A01PR
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3A84E@0A@0A@0A@9D)0PS
)@@G@@A@0A@3B@4J*)^@1^[I@O@O=@D00A@4BC7BC1DD#A@2AK0B@8^@)^@)^@)^@)^@)DDIE- EL PT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@9CS0A@0A@0A@9CS)^@)^[IPU
)@@G@@@O@O=@D00A@4BC7BC1DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)PV
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@8CS0A@0A@0A@8CS)^@)^[I@O@O=@D00A@4BC7BC1PW
)@@G@@DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0PX
)@@G@@A@0A@0A@0A@0A@8CS0A@0A@0A@8CS)^@)^[I@O@O=@D00A@4BC7BC1E[TA@4AK1B@8^@2A@4PY
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A85D*0A@0A@0AC6D80PZ
)@@G@@A@0A@1BC2J*)^@1^[I@O@O=@D00A@4BC7BC1E[TA@5A@6B@8^@2AC5^@)^@)^@)C-PD1BCDIQA
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@0^[IQB
)@@G@@@O@O=@D00A@4BC7BC1DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QC
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7C)0A@0A@0A@7C))^@)^[I@O@O=@D00A@4BC7BC1QD
)@@G@@E[TA@6A@9B@8^@2AS8^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QE
)@@G@@B@4D80A@0A@0A@7D*0A@0A@1BC2J*)^@0^[I@O@O=@D00A@4BC7BC1DD#A@6AK1B@8^@)^@)QF
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7JS0QG
)@@G@@A@0A@0A@7JS)^@)^[I@O@O=@D00A@4BC7BC1DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL QH
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7JS0A@0A@0A@7JS)^@)^[IQI
)@@G@@@O@O=@D00A@4BC7BC1DD#A@8AC8B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QJ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7JS0A@0A@0A@7JS)^@)^[I@O@O=@D00A@4BC7BC1QK
)@@G@@E[TA@9AC9B@8^@)A*5^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3QL
)@@G@@A*6J*0A@0A@0AK8J*0A@0A@3B@4J*)^@3^[I@O@O=@D00A@4BC7BC1DD#A@9AK1B@8^@)^@)QM
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7JS0QN
)@@G@@A@0A@0A@7JS)^@)^[I@O@O=@D00A@4BC7BC1E[TAC0AC8B@8^@)A86^@)^@)^@)C-PD1BCDIQO
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@5EK0A@0A@0A@6DK0A@0A@1BC2J*)^@3^[IQP
)@@G@@@O@O=@D00A@4BC7BC1DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QQ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@6CC0A@0A@0A@6CC)^@)^[I@O@O=@D00A@4BC7BC1QR
)@@G@@DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0QS
)@@G@@A@0A@0A@0A@0A@5C00A@0A@0A@5C0)^@)^[I@O@O=@D00A@4BC7BC1E[TAC1AK2B@8^@1A@1QT
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@6D*0A@0A@0A@5D80QU
)@@G@@A@0A@1BC2J*)^@3^[I@O@O=@D00A@4BC7BC1E[TAC2AC9B@8^@1AC8^@)^@)^@)C-PD1BCDIQV
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@6EK0A@0A@0A@5DK0A@0A@1BC2J*)^@3^[IQW
)@@G@@@O@O=@D00A@4BC7BC1DD#AC2AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5CC0A@0A@0A@5CC)^@)^[I@O@O=@D00A@4BC7BC1QY
)@@G@@E[TA@1AC2B@9^@1AS4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QZ
)@@G@@BC2J*0A@0A@0A@0A@0A@0A@1BC2J*)^@2^[I@O@O=@D00A@4BC7BC1DD#A@2A@1B@9^@)^@)RA
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@4CK0RB
)@@G@@A@0A@0A@4CK)^@)^[I@O@O=@D00A@4BC7BC1E[TA@2AC0B@9^@1A*5^@)^@)^@)C-PD1BCDIRC
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0AC6A87DK0A@0A@0A@4DS0A@0AC6B@1D))^@1^[IRD
)@@G@@@O@O=@D00A@4BC7BC2D-KA@8AK7B@1^@)^@)^@)^@)^@)D-JCDI^[KELDD1#DDKCDG^@)^@)RE
)@@G@@^@)^@)^@)^@0A@0A)0A@0A@0A@0A@0A@0A@0A@0A)0A@0A@)^@0^[I@O@O=@D00A@4BC7BC2RF
)@@G@@D-KA@1AC4B@2^@)^@)^@)^@)^@)C-PD1BCDI ))DT[E-CD- C*)^@)^@)^@)^@)^@0A@0AS0RG
)@@G@@A@0A@0A@0A@0A@0A@0A@0AS0A@0A@)^@0^[I@O@O=@D00A@4BC7BC2DD#AC1AK1B@3^@)^@)RH
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3AS0RI
)@@G@@A@0A@0AK3AS)^@)^[I@O@O=@D00A@4BC7BC2E[TAC2A@6B@3^@1AC0^@)^@)^@)C-PD1BCDIRJ
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@4E@0A@0A@0AK3D)0A@0A@1A@8^C)^@0^[IRK
)@@G@@@O@O=@D00A@4BC7BC2DD#AC2AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK3AC0A@0A@0AK3AC)^@)^[I@O@O=@D00A@4BC7BC2RM
)@@G@@E[TA@1A@9B@4^@1AS1^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0RN
)@@G@@B@4EK0A@0A@0AK3DK0A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2DD#A@1AC7B@4^@)^@)RO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2B@0RP
)@@G@@A@0A@0AK2B@)^@)^[I@O@O=@D00A@4BC7BC2E[TA@2A@7B@4^@1A*3^@)^@)^@)C-PD1BCDIRQ
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@5DS0A@0A@0AK2EC0A@0A@1A@8^C)^@0^[IRR
)@@G@@@O@O=@D00A@4BC7BC2DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RS
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2A*0A@0A@0AK2A*)^@)^[I@O@O=@D00A@4BC7BC2RT
)@@G@@E[TA@3A@6B@4^@1A83^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0RU
)@@G@@B@5D00A@0A@0AK2D00A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2DD#A@3AK1B@4^@)^@)RV
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2AK0RW
)@@G@@A@0A@0AK2AK)^@)^[I@O@O=@D00A@4BC7BC2DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL RX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2AK0A@0A@0AK2AK)^@)^[IRY
)@@G@@@O@O=@D00A@4BC7BC2E[TA@4AK3B@4^@2A@6^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)RZ
)@@G@@^@)^@)^@)^@0A@0A@0A03D80A@0A@0A)4D*0A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2SA
)@@G@@DD#A@5AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SB
)@@G@@A@0A@0A@0A@0AK2A@0A@0A@0AK2A@)^@)^[I@O@O=@D00A@4BC7BC2E[TA@5AK5B@4^@2AS0SC
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@6J*0A@0A@0AK2J*0SD
)@@G@@A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2E[TA@6AC9B@4^@2A)6^@)^@)^@)C-PD1BCDISE
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8^C0A@0A@0A@0A@0A@0A@1A@8^C)^@0^[ISF
)@@G@@@O@O=@D00A@4BC7BC2DD#A@6AK1B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SG
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1AS0A@0A@0AK1AS)^@)^[I@O@O=@D00A@4BC7BC2SH
)@@G@@DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SI
)@@G@@A@0A@0A@0A@0AK1AS0A@0A@0AK1AS)^@)^[I@O@O=@D00A@4BC7BC2DD#A@8AK2B@4^@)^@)SJ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1AS0SK
)@@G@@A@0A@0AK1AS)^@)^[I@O@O=@D00A@4BC7BC2DD#A@9AK0B@4^@)^@)^@)^@)^@)DDIE- EL SL
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1AS0A@0A@0AK1AS)^@)^[ISM
)@@G@@@O@O=@D00A@4BC7BC2DD#AC0AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SN
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1AS0A@0A@0AK1AS)^@)^[I@O@O=@D00A@4BC7BC2SO
)@@G@@E[TAC0AK6B@4^@)B@4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2SP
)@@G@@AC7D00A@0A@1A@6D00A@0A@3AK4^C)^@4^[I@O@O=@D00A@4BC7BC2DD#AC1AK7B@4^@)^@)SQ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0A00SR
)@@G@@A@0A@0AK0A0)^@)^[I@O@O=@D00A@4BC7BC2DD#AC2AC9B@4^@)^@)^@)^@)^@)DDIE- EL SS
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0A00A@0A@0AK0A0)^@)^[IST
)@@G@@@O@O=@D00A@4BC7BC2E[TA@1A@3B@5^@1AK3^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)SU
)@@G@@^@)^@)^@)^@0A@0A@2A01D00A@0A@0A)1DS0A@0A@3A@2E@)^@4^[I@O@O=@D00A@4BC7BC2SV
)@@G@@DD#A@1AK5B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SW
)@@G@@A@0A@0A@0A@0AC9A80A@0A@0AC9A8)^@)^[I@O@O=@D00A@4BC7BC2E[TA@2A@5B@5^@1A)7SX
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@8D)0A@0A@0AC9E@0SY
)@@G@@A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2DD#A@2AK0B@5^@)^@)^@)^@)^@)DDIE- EL SZ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC9A)0A@0A@0AC9A))^@)^[ITA
)@@G@@@O@O=@D00A@4BC7BC2E[TA@3A@1B@5^@1A05^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)TB
)@@G@@^@)^@)^@)^@0A@0A@0B@8D80A@0A@0AC9D*0A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2TC
)@@G@@DD#A@3AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TD
)@@G@@A@0A@0A@0A@0AC9AK0A@0A@0AC9AK)^@)^[I@O@O=@D00A@4BC7BC2E[TA@3AK2B@5^@1B@0TE
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@8EC0A@0A@0AC9DS0TF
)@@G@@A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2DD#A@4AC9B@5^@)^@)^@)^@)^@)DDIE- EL TG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC8BC0A@0A@0AC8BC)^@)^[ITH
)@@G@@@O@O=@D00A@4BC7BC2E[TA@4AK2B@5^@2A@0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)TI
)@@G@@^@)^@)^@)^@0A@0A@0B@9DK0A@0A@0AC8EK0A@0A@1A@8^C)^@0^[I@O@O=@D00A@4BC7BC2TJ
)@@G@@DD#A@5AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TK
)@@G@@A@0A@0A@0A@0AC8A00A@0A@0AC8A0)^@)^[I@O@O=@D00A@4BC7BC2E[TA@5AK1B@5^@2AK1TL
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@9D*0A@0A@0AC8D80TM
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2E[TA@6AC7B@5^@2AS9^@)^@)^@)C-PD1BCDITN
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[ITO
)@@G@@@O@O=@D00A@4BC7BC2DD#A@6AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)TP
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7BC0A@0A@0AC7BC)^@)^[I@O@O=@D00A@4BC7BC2TQ
)@@G@@DD#A@7AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TR
)@@G@@A@0A@0A@0A@0AC7BC0A@0A@0AC7BC)^@)^[I@O@O=@D00A@4BC7BC2E[TA@7AK4B@5^@)AC7TS
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A82DS0A@0A@0AS5EC0TT
)@@G@@A@0A@1A@8J*)^@1^[I@O@O=@D00A@4BC7BC2E[TA@8A@7B@5^@)AK6^@)^@)^@)C-PD1BCDITU
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[ITV
)@@G@@@O@O=@D00A@4BC7BC2DD#A@8AC6B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)TW
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7AS0A@0A@0AC7AS)^@)^[I@O@O=@D00A@4BC7BC2TX
)@@G@@E[TA@8AK9B@5^@)A)3^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TY
)@@G@@BC0E@0A@0A@0AC7D)0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2E[TA@9AC2B@5^@)A*2TZ
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0UA
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@9AC9B@5^@)^@)^@)^@)^@)DDIE- EL UB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6A00A@0A@0AC6A0)^@)^[IUC
)@@G@@@O@O=@D00A@4BC7BC2DD#AC0AK2B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UD
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6C00A@0A@0AC6C0)^@)^[I@O@O=@D00A@4BC7BC2UE
)@@G@@DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UF
)@@G@@A@0A@0A@0A@0AC6C00A@0A@0AC6C0)^@)^[I@O@O=@D00A@4BC7BC2E[TAC1AK1B@5^@1A@2UG
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A06DS0A@0A@0A)9EC0UH
)@@G@@A@0A@2AC6J*)^@2^[I@O@O=@D00A@4BC7BC2DD#AC2AC3B@5^@)^@)^@)^@)^@)DDIE- EL UI
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6CC0A@0A@0AC6CC)^@)^[IUJ
)@@G@@@O@O=@D00A@4BC7BC2DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UK
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC6CC0A@0A@0AC6CC)^@)^[I@O@O=@D00A@4BC7BC2UL
)@@G@@E[TA@2A@3B@6^@1A)4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1UM
)@@G@@A07DS0A@0A@0AS2DS0A@0A@1BC9D*)^@2^[I@O@O=@D00A@4BC7BC2DD#A@2AK0B@6^@)^@)UN
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC5C*0UO
)@@G@@A@0A@0AC5C*)^@)^[I@O@O=@D00A@4BC7BC2E[TA@2AK0B@6^@1A*7^@)^@)^@)C-PD1#CDIUP
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC2D00A@0A@0AC5D00A@0A@1A@8J*)^@0^[IUQ
)@@G@@@O@O=@D00A@4BC7BC2E[TA@3AC4B@6^@1A83^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)UR
)@@G@@^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2US
)@@G@@DD#A@3AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UT
)@@G@@A@0A@0A@0A@0AC4DC0A@0A@0AC4DC)^@)^[I@O@O=@D00A@4BC7BC2E[TA@4A@1B@6^@1B@4UU
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC3DK0A@0A@0AC4EK0UV
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@4AC8B@6^@)^@)^@)^@)^@)DDIE- EL UW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC4C*0A@0A@0AC4C*)^@)^[IUX
)@@G@@@O@O=@D00A@4BC7BC2E[TA@5AC6B@6^@2AC7^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)UY
)@@G@@^@)^@)^@)^@0A@0A@0BC3D00A@0A@0AC4D00A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2UZ
)@@G@@DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VA
)@@G@@A@0A@0A@0A@0AC4CK0A@0A@0AC4CK)^@)^[I@O@O=@D00A@4BC7BC2E[TA@6AC3B@6^@2AS6VB
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A89D80A@0A@0AK8D*0VC
)@@G@@A@0A@1A@8J*)^@1^[I@O@O=@D00A@4BC7BC2DD#A@6AC6B@6^@)^@)^@)^@)^@)DDIE- EL VD
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC4CK0A@0A@0AC4CK)^@)^[IVE
)@@G@@@O@O=@D00A@4BC7BC2E[TA@7AC4B@6^@)^@9^@)^@)^@)C-PD1BCDI -F^@)^@)^@)^@)^@)VF
)@@G@@^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2VG
)@@G@@DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VH
)@@G@@A@0A@0A@0A@0AC3C00A@0A@0AC3C0)^@)^[I@O@O=@D00A@4BC7BC2E[TA@8A@7B@6^@)AK7VI
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC4D*0A@0A@0AC3D80VJ
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@8AC8B@6^@)^@)^@)^@)^@)DDIE- EL VK
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC3CS0A@0A@0AC3CS)^@)^[IVL
)@@G@@@O@O=@D00A@4BC7BC2E[TA@9AC1B@6^@)A*2^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)VM
)@@G@@^@)^@)^@)^@0A@0A@0BC4E@0A@0A@0AC3D)0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2VN
)@@G@@DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VO
)@@G@@A@0A@0A@0A@0AC3JS0A@0A@0AC3JS)^@)^[I@O@O=@D00A@4BC7BC2E[TAC0AC0B@6^@)A83VP
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC5J*0A@0A@0AC3J*0VQ
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#AC0AK0B@6^@)^@)^@)^@)^@)DDIE- EL VR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC2C80A@0A@0AC2C8)^@)^[IVS
)@@G@@@O@O=@D00A@4BC7BC2E[TAC1A@5B@6^@)BC1^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)VT
)@@G@@^@)^@)^@)^@0A@0A@0BC5D)0A@0A@0AC2E@0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2VU
)@@G@@DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VV
)@@G@@A@0A@0A@0A@0AC2CS0A@0A@0AC2CS)^@)^[I@O@O=@D00A@4BC7BC2E[TAC2A@5B@6^@1AC1VW
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC5E@0A@0A@0AC2D)0VX
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#AC2AC1B@6^@)^@)^@)^@)^@)DDIE- EL VY
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC2JS0A@0A@0AC2JS)^@)^[IVZ
)@@G@@@O@O=@D00A@4BC7BC2E[TA@1A@2B@7^@1AK4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)WA
)@@G@@^@)^@)^@)^@0A@0A@0BC6J*0A@0A@0AC2J*0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2WB
)@@G@@DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WC
)@@G@@A@0A@0A@0A@0AC1C80A@0A@0AC1C8)^@)^[I@O@O=@D00A@4BC7BC2E[TA@2A@2B@7^@1A)7WD
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC6D)0A@0A@0AC1E@0WE
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL WF
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC1C)0A@0A@0AC1C))^@)^[IWG
)@@G@@@O@O=@D00A@4BC7BC2E[TA@2AK6B@7^@1A05^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)WH
)@@G@@^@)^@)^@)^@0A@0A@0BC6D80A@0A@0AC1D*0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2WI
)@@G@@DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WJ
)@@G@@A@0A@0A@0A@0AC1CC0A@0A@0AC1CC)^@)^[I@O@O=@D00A@4BC7BC2E[TA@4A@1B@7^@1B@9WK
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC6EK0A@0A@0AC1DK0WL
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL WM
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC0C80A@0A@0AC0C8)^@)^[IWN
)@@G@@@O@O=@D00A@4BC7BC2E[TA@5AC4B@7^@2AC9^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)WO
)@@G@@^@)^@)^@)^@0A@0A@0BC7D)0A@0A@0AC0E@0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2WP
)@@G@@DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WQ
)@@G@@A@0A@0A@0A@0AC0C)0A@0A@0AC0C))^@)^[I@O@O=@D00A@4BC7BC2E[TA@6AC2B@7^@2AS9WR
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC7D80A@0A@0AC0D*0WS
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@6AC8B@7^@)^@)^@)^@)^@)DDIE- EL WT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC0CC0A@0A@0AC0CC)^@)^[IWU
)@@G@@@O@O=@D00A@4BC7BC2DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WV
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC0CC0A@0A@0AC0CC)^@)^[I@O@O=@D00A@4BC7BC2WW
)@@G@@E[TA@8A@3B@7^@)AK4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WX
)@@G@@B@7EC0A@0A@0AK0DS0A@0A@1A@8J*)^@1^[I@O@O=@D00A@4BC7BC2E[TA@8AK0B@7^@)AS7WY
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC8DS0A@0A@0A@9EC0WZ
)@@G@@A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@8AK1B@7^@)^@)^@)^@)^@)DDIE- EL XA
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@9D@0A@0A@0A@9D@)^@)^[IXB
)@@G@@@O@O=@D00A@4BC7BC2E[TA@9A@3B@7^@)A)7^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)XC
)@@G@@^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2XD
)@@G@@E[TA@9AC5B@7^@)A*4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1XE
)@@G@@A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@9AK1B@7^@)^@)XF
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@8D@0XG
)@@G@@A@0A@0A@8D@)^@)^[I@O@O=@D00A@4BC7BC2DD#AC0AK1B@7^@)^@)^@)^@)^@)DDIE- EL XH
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@8D@0A@0A@0A@8D@)^@)^[IXI
)@@G@@@O@O=@D00A@4BC7BC2E[TAC1A@4B@7^@)BC0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)XJ
)@@G@@^@)^@)^@)^@0A@0A@0BC0D*0A@0A@0AC7D80A@0A@1A@8J*)^@1^[I@O@O=@D00A@4BC7BC2XK
)@@G@@DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XL
)@@G@@A@0A@0A@0A@0A@8C*0A@0A@0A@8C*)^@)^[I@O@O=@D00A@4BC7BC2DD#AC2AC8B@7^@)^@)XM
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@8C*0XN
)@@G@@A@0A@0A@8C*)^@)^[I@O@O=@D00A@4BC7BC2E[TAC2AK9B@7^@1AK5^@)^@)^@)C-PD1BCDIXO
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC9J*0A@0A@0AC7J*0A@0A@2AC6J*)^@2^[IXP
)@@G@@@O@O=@D00A@4BC7BC2E[TA@1A@7B@8^@1AS0^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)XQ
)@@G@@^@)^@)^@)^@0A@0A@1A@0DS0A@0A@0A@7EC0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2XR
)@@G@@DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XS
)@@G@@A@0A@0A@0A@0A@7D@0A@0A@0A@7D@)^@)^[I@O@O=@D00A@4BC7BC2E[TA@2AC9B@8^@1A01XT
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A@8D00A@0A@0A@7D00XU
)@@G@@A@0A@2AC6J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@2AK0B@8^@)^@)^@)^@)^@)DDIE- EL XV
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7C*0A@0A@0A@7C*)^@)^[IXW
)@@G@@@O@O=@D00A@4BC7BC2DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)XX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@6D@0A@0A@0A@6D@)^@)^[I@O@O=@D00A@4BC7BC2XY
)@@G@@DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XZ
)@@G@@A@0A@0A@0A@0A@6D@0A@0A@0A@6D@)^@)^[I@O@O=@D00A@4BC7BC2E[TA@4AK1B@8^@2A@4YA
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC4D*0A@0A@0AC3D80YB
)@@G@@A@0A@1A@8J*)^@1^[I@O@O=@D00A@4BC7BC2E[TA@5A@6B@8^@2AC5^@)^@)^@)C-PD1BCDIYC
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@0^[IYD
)@@G@@@O@O=@D00A@4BC7BC2DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YE
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@6CC0A@0A@0A@6CC)^@)^[I@O@O=@D00A@4BC7BC2YF
)@@G@@E[TA@6A@9B@8^@2AS8^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1YG
)@@G@@A@1EK0A@0A@0A@6DK0A@0A@1A@8J*)^@0^[I@O@O=@D00A@4BC7BC2DD#A@6AK1B@8^@)^@)YH
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5C80YI
)@@G@@A@0A@0A@5C8)^@)^[I@O@O=@D00A@4BC7BC2DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL YJ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5C80A@0A@0A@5C8)^@)^[IYK
)@@G@@@O@O=@D00A@4BC7BC2DD#A@8AC8B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5C80A@0A@0A@5C8)^@)^[I@O@O=@D00A@4BC7BC2YM
)@@G@@E[TA@9AC9B@8^@)A*5^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1YN
)@@G@@BC3DS0A@0A@0AK2EC0A@0A@2AC6J*)^@3^[I@O@O=@D00A@4BC7BC2DD#A@9AK1B@8^@)^@)YO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5C80YP
)@@G@@A@0A@0A@5C8)^@)^[I@O@O=@D00A@4BC7BC2E[TAC0AC8B@8^@)A86^@)^@)^@)C-PD1BCDIYQ
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@2EK0A@0A@0A@5DK0A@0A@1A@8J*)^@3^[IYR
)@@G@@@O@O=@D00A@4BC7BC2DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YS
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5CC0A@0A@0A@5CC)^@)^[I@O@O=@D00A@4BC7BC2YT
)@@G@@DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YU
)@@G@@A@0A@0A@0A@0A@4D@0A@0A@0A@4D@)^@)^[I@O@O=@D00A@4BC7BC2E[TAC1AK2B@8^@1A@1YV
)@@G@@^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@3DS0A@0A@0A@4EC0YW
)@@G@@A@0A@1A@8J*)^@3^[I@O@O=@D00A@4BC7BC2E[TAC2AC9B@8^@1AC8^@)^@)^@)C-PD1BCDIYX
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@3D80A@0A@0A@4D*0A@0A@1A@8J*)^@3^[IYY
)@@G@@@O@O=@D00A@4BC7BC2DD#AC2AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@4C)0A@0A@0A@4C))^@)^[I@O@O=@D00A@4BC7BC2ZA
)@@G@@E[TA@1AC2B@9^@1AS4^@)^@)^@)C-PD1BCDI ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1ZB
)@@G@@A@8J*0A@0A@0A@0A@0A@0A@1A@8J*)^@2^[I@O@O=@D00A@4BC7BC2DD#A@2A@1B@9^@)^@)ZC
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@3C80ZD
)@@G@@A@0A@0A@3C8)^@)^[I@O@O=@D00A@4BC7BC2E[TA@2AC0B@9^@1A*5^@)^@)^@)C-PD1BCDIZE
)@@G@@ ))DS)^@)^@)^@)^@)^@)^@)^@)^@0A@0AC1AC2EC0A@0A@0A@3E@0A@0AC1AC6D0)^@1^[IZF
)@@G@@@O@O=@D00A@4BC8A@1D-KA@8AK3A89BC0A88^@)^@)^@)D-JCDI^[KELDD1#DDKCDG^@)^@)ZG
)@@G@@^@)^@)^@)^@0A@0A02A*0JS0A@0A@0A@0A@0A@0A02A*0A@)^@0^[I@O@O=@D00A@4BC8A@1ZH
)@@G@@D-KA@1AC7B@0A@5A07^@)^@)^@)C(#DT ELHCDID0)DLJD[ICDOD[[D0)D*)^@)^@0A@0A02ZI
)@@G@@A*0JS0A@0A@0A@0A@0A@0A02A*0A@)^@0^[I@O@O=@D00A@4BC8A@1E[TAC2AK3B@0^@1A)4ZJ
)@@G@@^@)^@0A@0C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@3A@0J*0A@0A@0A@0A@0ZK
)@@G@@A@0A@3A@0J*)^@0^[I@O@O=@D00A@4BC8A@1E[TA@2A@5B@1^@1A81^@)^@0A@0C(#DT ELHZL
)@@G@@CDID0?^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3A@0J*0A@0A@0A@0A@0A@0A@3A@0J*)^@0^[IZM
)@@G@@@O@O=@D00A@4BC8A@1DD#A@3AC9B@1^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)ZN
)@@G@@^@)^@)^@)^@0A@0A@0A@0JS0A@0A@0AK9D@0A@0A@0AK9D@)^@)^[I@O@O=@D00A@4BC8A@1ZO
)@@G@@E[TA@3AK4B@1^@2A@4^@)^@0A@0C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2ZP
)@@G@@A80DS0A@0A@0AK9EC0A@0A@3A@0J*)^@0^[I@O@O=@D00A@4BC8A@1E[TA@4AC0B@1^@2AC7ZQ
)@@G@@^@)^@0A@0C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@3A@0J*0A@0A@0A@0A@0ZR
)@@G@@A@0A@3A@0J*)^@0^[I@O@O=@D00A@4BC8A@1DD#A@4AK0B@1^@)^@)^@)^@)^@)DDIE- EL ZS
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0JS0A@0A@0AK8CS0A@0A@0AK8CS)^@)^[IZT
)@@G@@@O@O=@D00A@4BC8A@1E[TA@5A@6B@1^@2AS5^@)^@0A@0C(#DT ELHCDID0?^[E^@)^@)^@)ZU
)@@G@@^@)^@)^@)^@0A@0A@2A81E@0A@0A@0AK8D)0A@0A@3A@0J*)^@0^[I@O@O=@D00A@4BC8A@1ZV
)@@G@@DD#A@5AC9B@1^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZW
)@@G@@A@0JS0A@0A@0AK7C00A@0A@0AK7C0)^@)^[I@O@O=@D00A@4BC8A@1E[TA@6A@9B@1^@)^@7ZX
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2A82D*0A@0A@0AK7D80ZY
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@6AC7B@1^@)^@)^@)^@)^@)DDIE- EL ZZ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7A@0A@0A@0AK7A@)^@)^[IAA
)@@G@@@O@O=@D00A@4BC8A@1E[TA@7A@3B@1^@)AK5^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)AB
)@@G@@^@)^@)^@)^@0A@0A@2A83J*0A@0A@0AK7J*0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1AC
)@@G@@DD#A@7AK0B@1^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AD
)@@G@@A@0A@0A@0A@0AK6AS0A@0A@0AK6AS)^@)^[I@O@O=@D00A@4BC8A@1E[TA@8A@5B@1^@)A)8AE
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2A83E@0A@0A@0AK6D)0AF
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@8AC9B@1^@)^@)^@)^@)^@)DDIE- EL AG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK5A00A@0A@0AK5A0)^@)^[IAH
)@@G@@@O@O=@D00A@4BC8A@1E[TA@9AC0B@1^@)A83^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)AI
)@@G@@^@)^@)^@)^@0A@0A@2A84D*0A@0A@0AK5D80A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1AJ
)@@G@@DD#A@9AK1B@1^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AK
)@@G@@A@0A@0A@0A@0AK4BC0A@0A@0AK4BC)^@)^[I@O@O=@D00A@4BC8A@1E[TAC0A@6B@1^@)BC1AL
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2A85DK0A@0A@0AK4EK0AM
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#AC0AC9B@1^@)^@)^@)^@)^@)DDIE- EL AN
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4AK0A@0A@0AK4AK)^@)^[IAO
)@@G@@@O@O=@D00A@4BC8A@1E[TAC1A@3B@1^@1AC1^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)AP
)@@G@@^@)^@)^@)^@0A@0A@2A85EC0A@0A@0AK4DS0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1AQ
)@@G@@DD#AC1AC8B@1^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AR
)@@G@@A@0A@0A@0A@0AK3A*0A@0A@0AK3A*)^@)^[I@O@O=@D00A@4BC8A@1E[TAC2A@9B@1^@1AS5AS
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2A86D00A@0A@0AK3D00AT
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#AC2AC6B@1^@)^@)^@)^@)^@)DDIE- EL AU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2B@0A@0A@0AK2B@)^@)^[IAV
)@@G@@@O@O=@D00A@4BC8A@1E[TA@1A@4B@2^@1A)9^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)AW
)@@G@@^@)^@)^@)^@0A@0A@2A87DS0A@0A@0AK2EC0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1AX
)@@G@@DD#A@1AC8B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AY
)@@G@@A@0A@0A@0A@0AK2AK0A@0A@0AK2AK)^@)^[I@O@O=@D00A@4BC8A@1E[TA@2A@3B@2^@1A82AZ
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2A87EC0A@0A@0AK2DS0BA
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@2AC7B@2^@)^@)^@)^@)^@)DDIE- EL BB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK1A*0A@0A@0AK1A*)^@)^[IBC
)@@G@@@O@O=@D00A@4BC8A@1E[TA@3A@3B@2^@1BC2^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)BD
)@@G@@^@)^@)^@)^@0A@0A@2A88D00A@0A@0AK1D00A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1BE
)@@G@@DD#A@3AC7B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BF
)@@G@@A@0A@0A@0A@0AK0B@0A@0A@0AK0B@)^@)^[I@O@O=@D00A@4BC8A@1E[TA@4A@6B@2^@2AC6BG
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2A89DS0A@0A@0AK0EC0BH
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@4AC9B@2^@)^@)^@)^@)^@)DDIE- EL BI
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK0AC0A@0A@0AK0AC)^@)^[IBJ
)@@G@@@O@O=@D00A@4BC8A@1E[TA@5A@3B@2^@2AS4^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)BK
)@@G@@^@)^@)^@)^@0A@0A@2A89EK0A@0A@0AK0DK0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1BL
)@@G@@DD#A@5AC8B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BM
)@@G@@A@0A@0A@0A@0AC9A)0A@0A@0AC9A))^@)^[I@O@O=@D00A@4BC8A@1E[TA@5AK8B@2^@2A*3BN
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@0D80A@0A@0AC9D*0BO
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@6AC7B@2^@)^@)^@)^@)^@)DDIE- EL BP
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC8A80A@0A@0AC8A8)^@)^[IBQ
)@@G@@@O@O=@D00A@4BC8A@1E[TA@7A@7B@2^@)AK6^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)BR
)@@G@@^@)^@)^@)^@0A@0A@2B@1D)0A@0A@0AC8E@0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1BS
)@@G@@DD#A@7AK0B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BT
)@@G@@A@0A@0A@0A@0AC8A@0A@0A@0AC8A@)^@)^[I@O@O=@D00A@4BC8A@1E[TA@8A@2B@2^@)A)4BU
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@2J*0A@0A@0AC8J*0BV
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@8AC7B@2^@)^@)^@)^@)^@)DDIE- EL BW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC7AS0A@0A@0AC7AS)^@)^[IBX
)@@G@@@O@O=@D00A@4BC8A@1E[TA@9A@8B@2^@)A81^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)BY
)@@G@@^@)^@)^@)^@0A@0A@2B@2E@0A@0A@0AC7D)0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1BZ
)@@G@@DD#A@9AK0B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CA
)@@G@@A@0A@0A@0A@0AC6A*0A@0A@0AC6A*)^@)^[I@O@O=@D00A@4BC8A@1E[TAC0A@1B@2^@)B@8CB
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@3D00A@0A@0AC6D00CC
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#AC0AK1B@2^@)^@)^@)^@)^@)DDIE- EL CD
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC5B@0A@0A@0AC5B@)^@)^[ICE
)@@G@@@O@O=@D00A@4BC8A@1E[TAC1A@3B@2^@1AC1^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)CF
)@@G@@^@)^@)^@)^@0A@0A@2B@4DS0A@0A@0AC5EC0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1CG
)@@G@@DD#AC1AC8B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CH
)@@G@@A@0A@0A@0A@0AC5AC0A@0A@0AC5AC)^@)^[I@O@O=@D00A@4BC8A@1E[TAC2A@3B@2^@1AS1CI
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@4EK0A@0A@0AC5DK0CJ
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#AC2AK1B@2^@)^@)^@)^@)^@)DDIE- EL CK
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC4A)0A@0A@0AC4A))^@)^[ICL
)@@G@@@O@O=@D00A@4BC8A@1E[TA@1A@6B@3^@1A*2^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)CM
)@@G@@^@)^@)^@)^@0A@0A@2B@5D80A@0A@0AC4D*0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1CN
)@@G@@DD#A@1AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CO
)@@G@@A@0A@0A@0A@0AC3A80A@0A@0AC3A8)^@)^[I@O@O=@D00A@4BC8A@1E[TA@2A@3B@3^@1A82CP
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@6D)0A@0A@0AC3E@0CQ
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@2AC7B@3^@)^@)^@)^@)^@)DDIE- EL CR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC3A@0A@0A@0AC3A@)^@)^[ICS
)@@G@@@O@O=@D00A@4BC8A@1E[TA@3A@3B@3^@1BC3^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)CT
)@@G@@^@)^@)^@)^@0A@0A@2B@7J*0A@0A@0AC3J*0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1CU
)@@G@@DD#A@3AC7B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CV
)@@G@@A@0A@0A@0A@0AC2AS0A@0A@0AC2AS)^@)^[I@O@O=@D00A@4BC8A@1E[TA@4A@8B@3^@2AC8CW
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@7E@0A@0A@0AC2D)0CX
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@4AC9B@3^@)^@)^@)^@)^@)DDIE- EL CY
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC1A*0A@0A@0AC1A*)^@)^[ICZ
)@@G@@@O@O=@D00A@4BC8A@1E[TA@5A@3B@3^@2AS5^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)DA
)@@G@@^@)^@)^@)^@0A@0A@2B@8D00A@0A@0AC1D00A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DB
)@@G@@DD#A@5AC8B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DC
)@@G@@A@0A@0A@0A@0AC0B@0A@0A@0AC0B@)^@)^[I@O@O=@D00A@4BC8A@1E[TA@6A@2B@3^@2A*6DD
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2B@9DS0A@0A@0AC0EC0DE
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@6AK0B@3^@)^@)^@)^@)^@)DDIE- EL DF
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AC0AC0A@0A@0AC0AC)^@)^[IDG
)@@G@@@O@O=@D00A@4BC8A@1E[TA@7A@7B@3^@)^@4^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)DH
)@@G@@^@)^@)^@)^@0A@0A@2B@9EK0A@0A@0AC0DK0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DI
)@@G@@DD#A@7AC9B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DJ
)@@G@@A@0A@0A@0A@0A@9A)0A@0A@0A@9A))^@)^[I@O@O=@D00A@4BC8A@1E[TA@8AC1B@3^@)AK9DK
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2BC0D80A@0A@0A@9D*0DL
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@8AC8B@3^@)^@)^@)^@)^@)DDIE- EL DM
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@8A80A@0A@0A@8A8)^@)^[IDN
)@@G@@@O@O=@D00A@4BC8A@1E[TA@9A@9B@3^@)A)8^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)DO
)@@G@@^@)^@)^@)^@0A@0A@2BC1D)0A@0A@0A@8E@0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DP
)@@G@@DD#A@9AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DQ
)@@G@@A@0A@0A@0A@0A@7BC0A@0A@0A@7BC)^@)^[I@O@O=@D00A@4BC8A@1E[TAC0A@4B@3^@)A07DR
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2BC2DK0A@0A@0A@7EK0DS
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#AC0AC9B@3^@)^@)^@)^@)^@)DDIE- EL DT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@7AK0A@0A@0A@7AK)^@)^[IDU
)@@G@@@O@O=@D00A@4BC8A@1E[TAC1AC1B@3^@)BC5^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)DV
)@@G@@^@)^@)^@)^@0A@0A@2BC2EC0A@0A@0A@7DS0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DW
)@@G@@DD#AC1AK1B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DX
)@@G@@A@0A@0A@0A@0A@6A*0A@0A@0A@6A*)^@)^[I@O@O=@D00A@4BC8A@1E[TAC2A@5B@3^@1A@9DY
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2BC3D00A@0A@0A@6D00DZ
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#AC2AK0B@3^@)^@)^@)^@)^@)DDIE- EL EA
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@5A80A@0A@0A@5A8)^@)^[IEB
)@@G@@@O@O=@D00A@4BC8A@1E[TA@1A@4B@4^@1AK8^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)EC
)@@G@@^@)^@)^@)^@0A@0A@2BC4D)0A@0A@0A@5E@0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1ED
)@@G@@DD#A@1AC7B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EE
)@@G@@A@0A@0A@0A@0A@5A@0A@0A@0A@5A@)^@)^[I@O@O=@D00A@4BC8A@1E[TA@2A@2B@4^@1A*0EF
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2BC5J*0A@0A@0A@5J*0EG
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL EH
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@4AS0A@0A@0A@4AS)^@)^[IEI
)@@G@@@O@O=@D00A@4BC8A@1E[TA@3A@2B@4^@1A81^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)EJ
)@@G@@^@)^@)^@)^@0A@0A@2BC5E@0A@0A@0A@4D)0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1EK
)@@G@@DD#A@3AK1B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EL
)@@G@@A@0A@0A@0A@0A@3A*0A@0A@0A@3A*)^@)^[I@O@O=@D00A@4BC8A@1E[TA@4A@4B@4^@1BC4EM
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2BC6D00A@0A@0A@3D00EN
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL EO
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@2B@0A@0A@0A@2B@)^@)^[IEP
)@@G@@@O@O=@D00A@4BC8A@1E[TA@5A@3B@4^@2AC4^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)EQ
)@@G@@^@)^@)^@)^@0A@0A@2BC7DS0A@0A@0A@2EC0A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1ER
)@@G@@DD#A@5AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ES
)@@G@@A@0A@0A@0A@0A@2A@0A@0A@0A@2A@)^@)^[I@O@O=@D00A@4BC8A@1E[TA@6A@6B@4^@2AS7ET
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2BC8J*0A@0A@0A@2J*0EU
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DD#A@6AK1B@4^@)^@)^@)^@)^@)DDIE- EL EV
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@1AS0A@0A@0A@1AS)^@)^[IEW
)@@G@@@O@O=@D00A@4BC8A@1DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)EX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@1AS0A@0A@0A@1AS)^@)^[I@O@O=@D00A@4BC8A@1EY
)@@G@@E[TA@7AK0B@4^@)AC4^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@2EZ
)@@G@@BC7D*0A@0A@0A@2D80A@0A@3A@0^C)^@1^[I@O@O=@D00A@4BC8A@1E[TA@8A@9B@4^@)AK8FA
)@@G@@^@)^@)^@)C(#DT ELHCDID0?^[E^@)^@)^@)^@)^@)^@)^@0A@0A@3A@0^C0A@0A@0A@0A@0FB
)@@G@@A@0A@3A@0^C)^@0^[I@O@O=@D00A@4BC8A@1DL AC0AC5B@4A81A@3^@)^@)^@)CTMC(^DDOFC
)@@G@@^[]CDG^[JD0)D1^^@)^@)^@)^@)^@0A@0A@0B@3AK0A@0A@0A@0A@0A@0A@0B@3AK)^@0^[IFD
)@@G@@@O@O=@D00A@4BC8AC1D-KA@8AK3A89BC0A89^@)^@)^@)D-JCDI^[KELDD1#DDKCDG^@)^@)FE
)@@G@@^@)^@)^@)^@0A@0A*6BC0JS0A@0A@0A@0A@0A@0A*6BC0A@)^@0^[I@O@O=@D00A@4BC8AC1FF
)@@G@@D-KA@1AC7B@0A@5A81^@)^@)^@)C(CELHCDI^[HCDMDS)C*)^@)^@)^@)^@)^@)^@0A@0A*6FG
)@@G@@BC0JS0A@0A@0A@0A@0A@0A*6BC0A@)^@0^[I@O@O=@D00A@4BC8AC1D-KA@9A@5B@0^@)^@)FH
)@@G@@^@)^@0A@0C(CELHCDI ))D([ELF^@)^@)^@)^@)AC1A03B@0A@0A02A*0JS0A@0A@0A@0A@0FI
)@@G@@A@0A02A*0A@)^@0^[I@O@O=@D00A@4BC8AC1D-KA@1AC5B@1AS5AC8^@)^@)^@)C(CELHCDIFJ
)@@G@@^[HCDMDS)C*)^@)^@)^@)AC3A*1B@0A@0A02A*0JS0A@0A@0A@0A@0A@0A02A*0A@)^@0^[IFK
)@@G@@@O@O=@D00A@4BC8AC1DD#A@2AC7B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)FL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*9A80A@0A@0A*9A8)^@)^[I@O@O=@D00A@4BC8AC1FM
)@@G@@DD#A@3AC7B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0FN
)@@G@@A@0A@0A@0A@0A*9A80A@0A@0A*9A8)^@)^[I@O@O=@D00A@4BC8AC1DD#A@4AC9B@2^@)^@)FO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*9A80FP
)@@G@@A@0A@0A*9A8)^@)^[I@O@O=@D00A@4BC8AC1DD#A@5AC8B@2^@)^@)^@)^@)^@)DDIE- EL FQ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*9A80A@0A@0A*9A8)^@)^[IFR
)@@G@@@O@O=@D00A@4BC8AC1E[TA@6AC5B@2^@)AC1^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)FS
)@@G@@^@)^@)^@)^@0A@0A@9A01DS0A@0A@2AS8EC0A@0AC2A@0^C)^@3^[I@O@O=@D00A@4BC8AC1FT
)@@G@@DD#A@6AC7B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0FU
)@@G@@A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@7AK0B@2^@)^@)FV
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0FW
)@@G@@A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@8AC7B@2^@)^@)^@)^@)^@)DDIE- EL FX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[IFY
)@@G@@@O@O=@D00A@4BC8AC1DD#A@9AK0B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)FZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1GA
)@@G@@DD#AC0AK1B@2^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GB
)@@G@@A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#AC1AC8B@2^@)^@)GC
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0GD
)@@G@@A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#AC2AK1B@2^@)^@)^@)^@)^@)DDIE- EL GE
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[IGF
)@@G@@@O@O=@D00A@4BC8AC1DD#A@1AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)GG
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1GH
)@@G@@DD#A@2AC7B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GI
)@@G@@A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@3AC7B@3^@)^@)GJ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0GK
)@@G@@A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@4AC9B@3^@)^@)^@)^@)^@)DDIE- EL GL
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[IGM
)@@G@@@O@O=@D00A@4BC8AC1DD#A@5AC8B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)GN
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1GO
)@@G@@DD#A@6AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GP
)@@G@@A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@7AC9B@3^@)^@)GQ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0GR
)@@G@@A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@8AC8B@3^@)^@)^@)^@)^@)DDIE- EL GS
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[IGT
)@@G@@@O@O=@D00A@4BC8AC1DD#A@9AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)GU
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1GV
)@@G@@E[TA@9AK8B@3^@)A05^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0GW
)@@G@@A@0A@0A@0A@6A@0J*0A@0A@6A@0^C)^@7^[I@O@O=@D00A@4BC8AC1DD#AC0AC9B@3^@)^@)GX
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*7AS0GY
)@@G@@A@0A@0A*7AS)^@)^[I@O@O=@D00A@4BC8AC1E[TAC1AC1B@3^@)BC5^@)^@)^@)C(CELHCDIGZ
)@@G@@ ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@6AK5EK0A@0A@3A84DK0A@0AC0A@0^C)^@7^[IHA
)@@G@@@O@O=@D00A@4BC8AC1DD#AC1AK1B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)HB
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*5A80A@0A@0A*5A8)^@)^[I@O@O=@D00A@4BC8AC1HC
)@@G@@E[TAC1AK9B@3^@1A@5^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3HD
)@@G@@A)4D)0A@0A@0A*5E@0A@0A@4A@0^C)^@7^[I@O@O=@D00A@4BC8AC1DD#AC2AK0B@3^@)^@)HE
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*4BC0HF
)@@G@@A@0A@0A*4BC)^@)^[I@O@O=@D00A@4BC8AC1DD#A@1AC7B@4^@)^@)^@)^@)^@)DDIE- EL HG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*4BC0A@0A@0A*4BC)^@)^[IHH
)@@G@@@O@O=@D00A@4BC8AC1DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)HI
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*4BC0A@0A@0A*4BC)^@)^[I@O@O=@D00A@4BC8AC1HJ
)@@G@@E[TA@2AK3B@4^@1A05^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2HK
)@@G@@AS5D)0A@0A@1A04E@0A@0A@4A@0^C)^@7^[I@O@O=@D00A@4BC8AC1DD#A@3AK1B@4^@)^@)HL
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*4AS0HM
)@@G@@A@0A@0A*4AS)^@)^[I@O@O=@D00A@4BC8AC1E[TA@4A@3B@4^@1BC3^@)^@)^@)C(CELHCDIHN
)@@G@@ ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC5E@0A@0A@0A*4D)0A@0A@1A*0^C)^@7^[IHO
)@@G@@@O@O=@D00A@4BC8AC1DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)HP
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*4A@0A@0A@0A*4A@)^@)^[I@O@O=@D00A@4BC8AC1HQ
)@@G@@DD#A@5AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0HR
)@@G@@A@0A@0A@0A@0A*4A@0A@0A@0A*4A@)^@)^[I@O@O=@D00A@4BC8AC1E[TA@6A@6B@4^@2AS7HS
)@@G@@^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0AS5AK9EC0A@0A@1A@8J*0HT
)@@G@@A@0AS6AS7EC)^@7^[I@O@O=@D00A@4BC8AC1DD#A@6AK1B@4^@)^@)^@)^@)^@)DDIE- EL HU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5AK0A@0A@0A)5AK)^@)^[IHV
)@@G@@@O@O=@D00A@4BC8AC1DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)HW
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5AK0A@0A@0A)5AK)^@)^[I@O@O=@D00A@4BC8AC1HX
)@@G@@DD#A@8AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0HY
)@@G@@A@0A@0A@0A@0A)5AK0A@0A@0A)5AK)^@)^[I@O@O=@D00A@4BC8AC1ETOA@9AC2B@4ETO^@)HZ
)@@G@@^@)^@)^@)AC0A@1B@2 *1AK0AC8AS)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0IA
)@@G@@A@0A@0A@0A@)^@6^[I@O@O=@D00A@4BC8AC1E[[A@9AC4B@4E[[^@)^@)^@)^@)A@9AC3B@4IB
)@@G@@ *0AK0AC8A*)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@6^[IIC
)@@G@@@O@O=@D00A@4BC8AC1DL A@9AC7B@4A80B@3^@)^@)^@)DDIE))D1JE))C-PC*)E9CDDGC*)ID
)@@G@@C- C0)^@)^@0A@0A@8A@6DS0A@0A@8A@6AK0A@0A@0A@0A@)^@6^[I@O@O=@D00A@4BC8AC1IE
)@@G@@DD[A@9AC7B@4DD[^@)^@)^@)^@)CD^DK)C-PC*)E-J^[EC*)^@)^@)^@)^@)^@)^@0A@0A@0IF
)@@G@@A@0A@0A@0A@8A@6DS0A@0A@8A@6DS)^@6^[I@O@O=@D00A@4BC8AC1DD#A@9AK0B@4^@)^@)IG
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0IH
)@@G@@A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#AC0AK2B@4^@)^@)^@)^@)^@)DDIE- EL II
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[IIJ
)@@G@@@O@O=@D00A@4BC8AC1DD#AC1AK7B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)IK
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1IL
)@@G@@DD#AC2AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0IM
)@@G@@A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#A@1AK5B@5^@)^@)IN
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0IO
)@@G@@A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#A@2AK0B@5^@)^@)^@)^@)^@)DDIE- EL IP
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[IIQ
)@@G@@@O@O=@D00A@4BC8AC1DD#A@3AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)IR
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1IS
)@@G@@DD#A@4AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0IT
)@@G@@A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#A@5AK1B@5^@)^@)IU
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0IV
)@@G@@A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#A@6AK0B@5^@)^@)^@)^@)^@)DDIE- EL IW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[IIX
)@@G@@@O@O=@D00A@4BC8AC1DD#A@7AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)IY
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1IZ
)@@G@@DD#A@8AC6B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0JA
)@@G@@A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#A@9AC9B@5^@)^@)JB
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0JC
)@@G@@A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AC1DD#AC0AK2B@5^@)^@)^@)^@)^@)DDIE- EL JD
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3CK0A@0A@0A)3CK)^@)^[IJE
)@@G@@@O@O=@D00A@4BC8AC1E[TAC1AC3B@5^@)BC6^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)JF
)@@G@@^@)^@)^@)^@0A@0A@9A@9D80A@0A@7A)0D*0A@0AC6A*0J*)^@5^[I@O@O=@D00A@4BC8AC1JG
)@@G@@DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0JH
)@@G@@A@0A@0A@0A@0A)0DC0A@0A@0A)0DC)^@)^[I@O@O=@D00A@4BC8AC1DD#AC2AC3B@5^@)^@)JI
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0JJ
)@@G@@A@0A@0A)0DC)^@)^[I@O@O=@D00A@4BC8AC1DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL JK
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0A@0A@0A)0DC)^@)^[IJL
)@@G@@@O@O=@D00A@4BC8AC1DD[A@1AS0B@6DD[^@)^@)^@)^@)CD^DK)C-PC*)E-J^[^C(A^@)^@)JM
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0B@1EC0A@0A@0B@1EC)^@5^[I@O@O=@D00A@4BC8AC1JN
)@@G@@DD#A@1AS0B@6DD#^@)^@)^@)^@)CD^DK)C-PC*)E-J^[^C(A^@)^@)^@)^@)^@)^@0A@0A@0JO
)@@G@@A@0A@0A@0A@0A)0EK0A@0A@0A)0EK)^@5^[I@O@O=@D00A@4BC8AC1DD#A@2AK0B@6^@)^@)JP
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0JQ
)@@G@@A@0A@0A)0DC)^@)^[I@O@O=@D00A@4BC8AC1DD#A@3AK0B@6^@)^@)^@)^@)^@)DDIE- EL JR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0A@0A@0A)0DC)^@)^[IJS
)@@G@@@O@O=@D00A@4BC8AC1DD#A@4AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)JT
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0A@0A@0A)0DC)^@)^[I@O@O=@D00A@4BC8AC1JU
)@@G@@DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0JV
)@@G@@A@0A@0A@0A@0A)0DC0A@0A@0A)0DC)^@)^[I@O@O=@D00A@4BC8AC1DD#A@6AC6B@6^@)^@)JW
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0JX
)@@G@@A@0A@0A)0DC)^@)^[I@O@O=@D00A@4BC8AC1DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL JY
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0DC0A@0A@0A)0DC)^@)^[IJZ
)@@G@@@O@O=@D00A@4BC8AC1E[TA@8AC2B@6^@)AS1^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)KA
)@@G@@^@)^@)^@)^@0A@0A@5A*4D80A@0A@2A)5D*0A@0A@8A@0J*)^@5^[I@O@O=@D00A@4BC8AC1KB
)@@G@@DD#A@8AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0KC
)@@G@@A@0A@0A@0A@0AS9C*0A@0A@0AS9C*)^@)^[I@O@O=@D00A@4BC8AC1E[TA@8AC9B@6^@)AS5KD
)@@G@@^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@9A00D00A@0A@0AS9D00KE
)@@G@@A@0AC0A@0J*)^@4^[I@O@O=@D00A@4BC8AC1DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL KF
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7CC0A@0A@0AS7CC)^@)^[IKG
)@@G@@@O@O=@D00A@4BC8AC1DD#AC0AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)KH
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7CC0A@0A@0AS7CC)^@)^[I@O@O=@D00A@4BC8AC1KI
)@@G@@DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0KJ
)@@G@@A@0A@0A@0A@0AS7CC0A@0A@0AS7CC)^@)^[I@O@O=@D00A@4BC8AC1DD#AC2AC1B@6^@)^@)KK
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7CC0KL
)@@G@@A@0A@0AS7CC)^@)^[I@O@O=@D00A@4BC8AC1E[TA@1A@2B@7^@1AK4^@)^@)^@)C(CELHCDIKM
)@@G@@ ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3A*1D80A@0A@1A)8D*0A@0A@5A@0J*)^@4^[IKN
)@@G@@@O@O=@D00A@4BC8AC1DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)KO
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6CS0A@0A@0AS6CS)^@)^[I@O@O=@D00A@4BC8AC1KP
)@@G@@DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0KQ
)@@G@@A@0A@0A@0A@0AS6CS0A@0A@0AS6CS)^@)^[I@O@O=@D00A@4BC8AC1E[TA@3A@5B@7^@1A80KR
)@@G@@^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@4AK7D*0A@0A@0A82D80KS
)@@G@@A@0A@5A@0J*)^@5^[I@O@O=@D00A@4BC8AC1DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL KT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS5CK0A@0A@0AS5CK)^@)^[IKU
)@@G@@@O@O=@D00A@4BC8AC1E[TA@4AC0B@7^@1BC6^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)KV
)@@G@@^@)^@)^@)^@0A@0AC2A04EC0A@0A@0AS5DS0A@0AC3A@0J*)^@4^[I@O@O=@D00A@4BC8AC1KW
)@@G@@DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0KX
)@@G@@A@0A@0A@0A@0AS2JS0A@0A@0AS2JS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@5AK0B@7^@)^@)KY
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2JS0KZ
)@@G@@A@0A@0AS2JS)^@)^[I@O@O=@D00A@4BC8AC1E[TA@6AC5B@7^@2A)0^@)^@)^@)C(CELHCDILA
)@@G@@ ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@5AS6J*0A@0A@0A04J*0A@0A@6A@0J*)^@1^[ILB
)@@G@@@O@O=@D00A@4BC8AC1DD#A@6AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)LC
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0C80A@0A@0AS0C8)^@)^[I@O@O=@D00A@4BC8AC1LD
)@@G@@DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0LE
)@@G@@A@0A@0A@0A@0AS0C80A@0A@0AS0C8)^@)^[I@O@O=@D00A@4BC8AC1DD#A@8AK1B@7^@)^@)LF
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0C80LG
)@@G@@A@0A@0AS0C8)^@)^[I@O@O=@D00A@4BC8AC1E[TA@9A@3B@7^@)A)7^@)^@)^@)C(CELHCDILH
)@@G@@ ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@8A@7EK0A@0A@0BC2DK0A@0A@9A@0J*)^@2^[ILI
)@@G@@@O@O=@D00A@4BC8AC1DD#A@9AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)LJ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8C80A@0A@0AK8C8)^@)^[I@O@O=@D00A@4BC8AC1LK
)@@G@@DD#AC0AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0LL
)@@G@@A@0A@0A@0A@0AK8C80A@0A@0AK8C8)^@)^[I@O@O=@D00A@4BC8AC1E[TAC1AC0B@7^@)BC4LM
)@@G@@^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@5A)2D80A@0A@0A*7D*0LN
)@@G@@A@0A@6A@0J*)^@1^[I@O@O=@D00A@4BC8AC1DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL LO
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CS0A@0A@0AK7CS)^@)^[ILP
)@@G@@@O@O=@D00A@4BC8AC1DD#AC2AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)LQ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CS0A@0A@0AK7CS)^@)^[I@O@O=@D00A@4BC8AC1LR
)@@G@@DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0LS
)@@G@@A@0A@0A@0A@0AK7CS0A@0A@0AK7CS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@2AK0B@8^@)^@)LT
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CS0LU
)@@G@@A@0A@0AK7CS)^@)^[I@O@O=@D00A@4BC8AC1DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL LV
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CS0A@0A@0AK7CS)^@)^[ILW
)@@G@@@O@O=@D00A@4BC8AC1E[TA@4AC2B@8^@1BC7^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)LX
)@@G@@^@)^@)^@)^@0A@0AC0A03D00A@0A@1AS6D00A@0AC2A@0J*)^@4^[I@O@O=@D00A@4BC8AC1LY
)@@G@@DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0LZ
)@@G@@A@0A@0A@0A@0AK4C80A@0A@0AK4C8)^@)^[I@O@O=@D00A@4BC8AC1DD#A@5AC9B@8^@)^@)MA
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4C80MB
)@@G@@A@0A@0AK4C8)^@)^[I@O@O=@D00A@4BC8AC1DD#A@6AK1B@8^@)^@)^@)^@)^@)DDIE- EL MC
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4C80A@0A@0AK4C8)^@)^[IMD
)@@G@@@O@O=@D00A@4BC8AC1DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)ME
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK4C80A@0A@0AK4C8)^@)^[I@O@O=@D00A@4BC8AC1MF
)@@G@@E[TA@8AC5B@8^@)AS1^@)^@)^@)C(CELHCDI ))D*)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@9MG
)@@G@@A@1DS0A@0A@0BC8EC0A@0AC0A@0J*)^@4^[I@O@O=@D00A@4BC8AC1DD#A@8AC8B@8^@)^@)MH
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0MI
)@@G@@A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1DD#A@9AK1B@8^@)^@)^@)^@)^@)DDIE- EL MJ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[IMK
)@@G@@@O@O=@D00A@4BC8AC1DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)ML
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1MM
)@@G@@DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0MN
)@@G@@A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1DD#AC2AK1B@8^@)^@)MO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0MP
)@@G@@A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1DD#A@2A@1B@9^@)^@)^@)^@)^@)DDIE- EL MQ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[IMR
)@@G@@@O@O=@D00A@4BC8AC1DD#A@2AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)MS
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1MT
)@@G@@DD#A@3AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0MU
)@@G@@A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1D[NA@4AC4B@9D[N^@)MV
)@@G@@^@)^@)^@)A@8A@1B@8 *0BC0AC8BC)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0MW
)@@G@@A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC8AC1DD#A@4AK1B@9^@)^@)^@)^@)^@)DDIE- EL MX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[IMY
)@@G@@@O@O=@D00A@4BC8AC1DD#A@5AC9B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)MZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AC1NA
)@@G@@DD#A@6AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0NB
)@@G@@A@0A@0A@0A@0AK2C)0A@0A@0AK2C))^@)^[I@O@O=@D00A@4BC8AK1D-KA@8AK3A89BC0B@0NC
)@@G@@^@)^@)^@)D-JCDI^[KELDD1#DDKCDG^@)^@)^@)^@)^@)^@0A@0A)6A*0JS0A@0A@0A@0A@0ND
)@@G@@A@0A)6A*0A@)^@0^[I@O@O=@D00A@4BC8AK1D-KA@1AC7B@0A@5A83^@)^@)^@)C(GDD#D9INE
)@@G@@C*)EL[FDHD9IC))CC)^@)^@)^@)^@0A@0A)6A*0JS0A@0A@0A@0A@0A@0A)6A*0A@)^@0^[INF
)@@G@@@O@O=@D00A@4BC8AK1D-KA@8AK8B@0AK1AC7^@)^@)^@)C(GDD#D9IC*)EL[FDHD9IC))CC)NG
)@@G@@^@)AC2AC1A80A@0A*1A@0JS0A@0A@0A@0A@0A@0A*1A@0A@)^@0^[I@O@O=@D00A@4BC8AK1NH
)@@G@@D-KA@1AC5B@1AS5AK1^@)^@)^@)C(GDD#D9IC*)EL[FDHD9IC))CC)^@)AC3A*2AC0A@0A*1NI
)@@G@@A@0JS0A@0A@0A@0A@0A@0A*1A@0A@)^@0^[I@O@O=@D00A@4BC8AK1E[TA@1AC4B@3^@1A*8NJ
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@5A@0^C0A@0A@0A@0A@0NK
)@@G@@A@0A@5A@0^C)^@0^[I@O@O=@D00A@4BC8AK1DL A@2AC5B@3A00AK3^@)^@)^@)E[TD(O^[NNL
)@@G@@ 9]^[OD8)ETO^[OC(MD*)^@)^@)^@0A@0A@5A@0A@0A@0A@0A@0A@0A@0A@5A@0A@)^@0^[INM
)@@G@@@O@O=@D00A@4BC8AK1E[TA@2AC5B@4^@1A*9^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)NN
)@@G@@^@)^@)^@)^@0A@0A@1B@8D)0A@0A@0A@0A@0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1NO
)@@G@@DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0NP
)@@G@@A@0A@0A@0A@0A)8AS0A@0A@0A)8AS)^@)^[I@O@O=@D00A@4BC8AK1DD#A@3AK1B@4^@)^@)NQ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)8AS0NR
)@@G@@A@0A@0A)8AS)^@)^[I@O@O=@D00A@4BC8AK1E[TA@4AC2B@4^@2A@0^@)^@)^@)C(GDD#D9INS
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC1E@0A@0A@0BC6D80A@0A@1B@8D))^@1^[INT
)@@G@@@O@O=@D00A@4BC8AK1DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)NU
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)8AC0A@0A@0A)8AC)^@)^[I@O@O=@D00A@4BC8AK1NV
)@@G@@E[TA@5A@4B@4^@2AC5^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1NW
)@@G@@A)0DS0A@0A@0A)8DK0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#A@5AK2B@4^@)^@)NX
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)7A80NY
)@@G@@A@0A@0A)7A8)^@)^[I@O@O=@D00A@4BC8AK1E[TA@6A@7B@4^@2AS8^@)^@)^@)C(GDD#D9INZ
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)0D80A@0A@0A)7E@0A@0A@1B@8D))^@0^[IOA
)@@G@@@O@O=@D00A@4BC8AK1DD#A@6AK1B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OB
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)7AS0A@0A@0A)7AS)^@)^[I@O@O=@D00A@4BC8AK1OC
)@@G@@E[TA@7AC6B@4^@)AC0^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OD
)@@G@@A)1J*0A@0A@0A)7D)0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#A@7AC9B@4^@)^@)OE
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)7A@0OF
)@@G@@A@0A@0A)7A@)^@)^[I@O@O=@D00A@4BC8AK1E[TA@8A@9B@4^@)AK8^@)^@)^@)C(GDD#D9IOG
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)1D)0A@0A@0A)7J*0A@0A@1B@8D))^@0^[IOH
)@@G@@@O@O=@D00A@4BC8AK1DD#A@8AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OI
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)6A00A@0A@0A)6A0)^@)^[I@O@O=@D00A@4BC8AK1OJ
)@@G@@E[TA@9AC7B@4^@)A*5^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1OK
)@@G@@A)1E@0A@0A@0A)6D80A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#A@9AK0B@4^@)^@)OL
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)6AS0OM
)@@G@@A@0A@0A)6AS)^@)^[I@O@O=@D00A@4BC8AK1E[TAC0AC2B@4^@)A84^@)^@)^@)C(GDD#D9ION
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)2J*0A@0A@0A)6D)0A@0A@1B@8D))^@0^[IOO
)@@G@@@O@O=@D00A@4BC8AK1DD#AC0AK2B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OP
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5BC0A@0A@0A)5BC)^@)^[I@O@O=@D00A@4BC8AK1OQ
)@@G@@E[TAC1AK0B@4^@1A@1^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0OR
)@@G@@BC6D00A@0A@0BC1EC0A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1DD#AC1AK7B@4^@)^@)OS
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5BC0OT
)@@G@@A@0A@0A)5BC)^@)^[I@O@O=@D00A@4BC8AK1E[TAC2A@5B@4^@1AC0^@)^@)^@)C(GDD#D9IOU
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@8D)0A@0A@0A@0A@0A@0A@1B@8D))^@0^[IOV
)@@G@@@O@O=@D00A@4BC8AK1DD#AC2AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)OW
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5AK0A@0A@0A)5AK)^@)^[I@O@O=@D00A@4BC8AK1OX
)@@G@@DD#A@1AK5B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0OY
)@@G@@A@0A@0A@0A@0A)5AK0A@0A@0A)5AK)^@)^[I@O@O=@D00A@4BC8AK1E[TA@2AC2B@5^@1A*2OZ
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC7EK0A@0A@0BC0D*0PA
)@@G@@A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1DD#A@2AK0B@5^@)^@)^@)^@)^@)DDIE- EL PB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5A@0A@0A@0A)5A@)^@)^[IPC
)@@G@@@O@O=@D00A@4BC8AK1E[TA@3A@8B@5^@1A80^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)PD
)@@G@@^@)^@)^@)^@0A@0A@1A)3D)0A@0A@0A)5J*0A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1PE
)@@G@@DD#A@3AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0PF
)@@G@@A@0A@0A@0A@0A)4A00A@0A@0A)4A0)^@)^[I@O@O=@D00A@4BC8AK1E[TA@4AC4B@5^@1B@9PG
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)3E@0A@0A@0A)4D80PH
)@@G@@A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1DD#A@4AC9B@5^@)^@)^@)^@)^@)DDIE- EL PI
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)4AS0A@0A@0A)4AS)^@)^[IPJ
)@@G@@@O@O=@D00A@4BC8AK1E[TA@5A@7B@5^@2AC1^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)PK
)@@G@@^@)^@)^@)^@0A@0A@1A)4J*0A@0A@0A)4D)0A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1PL
)@@G@@DD#A@5AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0PM
)@@G@@A@0A@0A@0A@0A)3BC0A@0A@0A)3BC)^@)^[I@O@O=@D00A@4BC8AK1DD#A@6AK0B@5^@)^@)PN
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3BC0PO
)@@G@@A@0A@0A)3BC)^@)^[I@O@O=@D00A@4BC8AK1E[TA@6AK0B@5^@2A)2^@)^@)^@)C(GDD#D9IPP
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@0D00A@0A@0B@7EC0A@0A@1B@8D))^@2^[IPQ
)@@G@@@O@O=@D00A@4BC8AK1E[TA@7A@9B@5^@)^@6^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)PR
)@@G@@^@)^@)^@)^@0A@0A@1B@8D)0A@0A@0A@0A@0A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1PS
)@@G@@DD#A@7AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0PT
)@@G@@A@0A@0A@0A@0A)3AK0A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AK1DD#A@8AC6B@5^@)^@)PU
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AK0PV
)@@G@@A@0A@0A)3AK)^@)^[I@O@O=@D00A@4BC8AK1E[TA@9A@3B@5^@)A)5^@)^@)^@)C(GDD#D9IPW
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC6EK0A@0A@0B@6D*0A@0A@1B@3D))^@2^[IPX
)@@G@@@O@O=@D00A@4BC8AK1DD#A@9AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)PY
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)2BC0A@0A@0A)2BC)^@)^[I@O@O=@D00A@4BC8AK1PZ
)@@G@@DD#AC0AK2B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0QA
)@@G@@A@0A@0A@0A@0A)2DC0A@0A@0A)2DC)^@)^[I@O@O=@D00A@4BC8AK1E[TAC0AK3B@5^@)B@1QB
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2BC0EC0A@0A@0B@5EC0QC
)@@G@@A@0A@3A86D8)^@3^[I@O@O=@D00A@4BC8AK1E[TAC1AC3B@5^@)BC6^@)^@)^@)C(GDD#D9IQD
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@8D)0A@0A@0A@0A@0A@0A@1B@8D))^@0^[IQE
)@@G@@@O@O=@D00A@4BC8AK1DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QF
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1C80A@0A@0A)1C8)^@)^[I@O@O=@D00A@4BC8AK1QG
)@@G@@E[TAC2A@5B@5^@1AC0^@)^@)^@)C(GE-#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QH
)@@G@@A)6D80A@0A@0A)1E@0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#AC2AC3B@5^@)^@)QI
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1C)0QJ
)@@G@@A@0A@0A)1C))^@)^[I@O@O=@D00A@4BC8AK1E[TA@1AC4B@6^@1AK9^@)^@)^@)C(GDD#D9IQK
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@5D00A@0A@0B@2EC0A@0A@1B@8D))^@2^[IQL
)@@G@@@O@O=@D00A@4BC8AK1DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QM
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1C)0A@0A@0A)1C))^@)^[I@O@O=@D00A@4BC8AK1QN
)@@G@@E[TA@2AC3B@6^@1A*2^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1QO
)@@G@@B@8D)0A@0A@0A@0A@0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#A@2AK0B@6^@)^@)QP
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0C00QQ
)@@G@@A@0A@0A)0C0)^@)^[I@O@O=@D00A@4BC8AK1DD#A@3AK0B@6^@)^@)^@)^@)^@)DDIE- EL QR
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0C00A@0A@0A)0C0)^@)^[IQS
)@@G@@@O@O=@D00A@4BC8AK1DD#A@4AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)QT
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0C00A@0A@0A)0C0)^@)^[I@O@O=@D00A@4BC8AK1QU
)@@G@@E[TA@5AC5B@6^@2AC6^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@4QV
)@@G@@A)3DK0A@0A@1AK1EC0A@0A@5A04EK)^@2^[I@O@O=@D00A@4BC8AK1DD#A@5AK1B@6^@)^@)QW
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS9C*0QX
)@@G@@A@0A@0AS9C*)^@)^[I@O@O=@D00A@4BC8AK1E[TA@5AK8B@6^@2AK4^@)^@)^@)C(GDD#D9IQY
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)8EC0A@0A@0AS9D00A@0A@1B@8D))^@0^[IQZ
)@@G@@@O@O=@D00A@4BC8AK1E[TA@6A@3B@6^@2AK8^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)RA
)@@G@@^@)^@)^@)^@0A@0A@1B@8D)0A@0A@0A@0A@0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1RB
)@@G@@DD#A@6AC6B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0RC
)@@G@@A@0A@0A@0A@0AS8C80A@0A@0AS8C8)^@)^[I@O@O=@D00A@4BC8AK1E[TA@7A@1B@6^@)^@9RD
)@@G@@^@)^@)^@)C(GDD#D9IC*?EK)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)9D80A@0A@0AS8E@0RE
)@@G@@A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#A@7AC8B@6^@)^@)^@)^@)^@)DDIE- EL RF
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8CS0A@0A@0AS8CS)^@)^[IRG
)@@G@@@O@O=@D00A@4BC8AK1E[TA@8A@4B@6^@)AK4^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)RH
)@@G@@^@)^@)^@)^@0A@0A@1A*0J*0A@0A@0AS8D)0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1RI
)@@G@@DL A@8A@8B@6A@0B@1^@)^@)^@)A*\AC5 88A0)E[[ELO^[KFDHE))A)9B@2 *3^@0A@0A@1RJ
)@@G@@B@8AS0A@0A@0A@0A@0A@0A@1B@8AS)^@0^[I@O@O=@D00A@4BC8AK1DD#A@8AC8B@6^@)^@)RK
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8C)0RL
)@@G@@A@0A@0AS8C))^@)^[I@O@O=@D00A@4BC8AK1E[TA@9AC5B@6^@)A*4^@)^@)^@)C(GDD#D9IRM
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)9EK0A@0A@0AS8D*0A@0A@1B@8D))^@0^[IRN
)@@G@@@O@O=@D00A@4BC8AK1DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RO
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8JS0A@0A@0AS8JS)^@)^[I@O@O=@D00A@4BC8AK1RP
)@@G@@E[TAC0AC4B@6^@)A85^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1RQ
)@@G@@A*0D)0A@0A@0AS8J*0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#AC0AK0B@6^@)^@)RR
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7C80RS
)@@G@@A@0A@0AS7C8)^@)^[I@O@O=@D00A@4BC8AK1E[TAC1AC4B@6^@)BC8^@)^@)^@)C(GDD#D9IRT
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A*0D80A@0A@0AS7E@0A@0A@1B@8D))^@0^[IRU
)@@G@@@O@O=@D00A@4BC8AK1DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)RV
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7CS0A@0A@0AS7CS)^@)^[I@O@O=@D00A@4BC8AK1RW
)@@G@@DD#AC2AC1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0RX
)@@G@@A@0A@0A@0A@0AS7CS0A@0A@0AS7CS)^@)^[I@O@O=@D00A@4BC8AK1E[TAC2AC6B@6^@1AC8RY
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1AC3E@0A@0A@0A84D80RZ
)@@G@@A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1E[TA@1AK0B@7^@1AS8^@)^@)^@)C(GDD#D9ISA
)@@G@@C*?EK)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A*1D)0A@0A@0AS7J*0A@0A@1B@8D))^@1^[ISB
)@@G@@@O@O=@D00A@4BC8AK1DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SC
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7JS0A@0A@0AS7JS)^@)^[I@O@O=@D00A@4BC8AK1SD
)@@G@@DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SE
)@@G@@A@0A@0A@0A@0AS6C00A@0A@0AS6C0)^@)^[I@O@O=@D00A@4BC8AK1DD#A@3AK3B@7^@)^@)SF
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6C00SG
)@@G@@A@0A@0AS6C0)^@)^[I@O@O=@D00A@4BC8AK1E[TA@3AK3B@7^@1B@2^@)^@)^@)C(GDD#D9ISH
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1AC5DK0A@0A@0A83DS0A@0A@1B@8D))^@2^[ISI
)@@G@@@O@O=@D00A@4BC8AK1DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SJ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6CS0A@0A@0AS6CS)^@)^[I@O@O=@D00A@4BC8AK1SK
)@@G@@DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SL
)@@G@@A@0A@0A@0A@0AS6CS0A@0A@0AS6CS)^@)^[I@O@O=@D00A@4BC8AK1DD#A@6AC8B@7^@)^@)SM
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6CS0SN
)@@G@@A@0A@0AS6CS)^@)^[I@O@O=@D00A@4BC8AK1E[TA@6AC9B@7^@2A)4^@)^@)^@)C(GDD#D9ISO
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@4A*6J*0A@0A@1A@8EK0A@0A@5A04EK)^@4^[ISP
)@@G@@@O@O=@D00A@4BC8AK1DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SQ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS5CK0A@0A@0AS5CK)^@)^[I@O@O=@D00A@4BC8AK1SR
)@@G@@DD#A@8AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0SS
)@@G@@A@0A@0A@0A@0AS5CK0A@0A@0AS5CK)^@)^[I@O@O=@D00A@4BC8AK1E[TA@9A@3B@7^@)A)7ST
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3B@4D)0A@0A@0A80D*0SU
)@@G@@A@0A@4A*4E@)^@3^[I@O@O=@D00A@4BC8AK1E[TA@9AC5B@7^@)A*4^@)^@)^@)C(GDD#D9ISV
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@4A02D80A@0A@0A@0A@0A@0A@4A02D8)^@3^[ISW
)@@G@@@O@O=@D00A@4BC8AK1DD#A@9AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)SX
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS3CC0A@0A@0AS3CC)^@)^[I@O@O=@D00A@4BC8AK1SY
)@@G@@E[TAC0AC5B@7^@)A86^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1SZ
)@@G@@A*5DS0A@0A@0AS3DK0A@0A@1B@8D))^@0^[I@O@O=@D00A@4BC8AK1DD#AC0AK1B@7^@)^@)TA
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2C80TB
)@@G@@A@0A@0AS2C8)^@)^[I@O@O=@D00A@4BC8AK1DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL TC
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2C80A@0A@0AS2C8)^@)^[ITD
)@@G@@@O@O=@D00A@4BC8AK1E[TAC1AC9B@7^@1A@1^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)TE
)@@G@@^@)^@)^@)^@0A@0A@1AK2EK0A@0A@0A05D*0A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1TF
)@@G@@DD#AC2AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TG
)@@G@@A@0A@0A@0A@0AS2C)0A@0A@0AS2C))^@)^[I@O@O=@D00A@4BC8AK1E[TAC2AK9B@7^@1AK5TH
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A*5EK0A@0A@0AS2D*0TI
)@@G@@A@0A@1B@8D))^@1^[I@O@O=@D00A@4BC8AK1DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL TJ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2JS0A@0A@0AS2JS)^@)^[ITK
)@@G@@@O@O=@D00A@4BC8AK1DD#A@2AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)TL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2JS0A@0A@0AS2JS)^@)^[I@O@O=@D00A@4BC8AK1TM
)@@G@@E[TA@2AK3B@8^@1A03^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3TN
)@@G@@AC2D80A@0A@0A04J*0A@0A@3A86D8)^@2^[I@O@O=@D00A@4BC8AK1DD#A@3AK2B@8^@)^@)TO
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS1CK0TP
)@@G@@A@0A@0AS1CK)^@)^[I@O@O=@D00A@4BC8AK1DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL TQ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS1CK0A@0A@0AS1CK)^@)^[ITR
)@@G@@@O@O=@D00A@4BC8AK1E[TA@4AK5B@8^@2A@6^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)TS
)@@G@@^@)^@)^@)^@0A@0A@3AC4DS0A@0A@0A02D*0A@0A@3A86D8)^@2^[I@O@O=@D00A@4BC8AK1TT
)@@G@@DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0TU
)@@G@@A@0A@0A@0A@0AS0C)0A@0A@0AS0C))^@)^[I@O@O=@D00A@4BC8AK1DD#A@6AK1B@8^@)^@)TV
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0C)0TW
)@@G@@A@0A@0AS0C))^@)^[I@O@O=@D00A@4BC8AK1DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL TX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0C)0A@0A@0AS0C))^@)^[ITY
)@@G@@@O@O=@D00A@4BC8AK1DD#A@8AC8B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)TZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0C)0A@0A@0AS0C))^@)^[I@O@O=@D00A@4BC8AK1UA
)@@G@@E[TA@9A@2B@8^@)A)5^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2UB
)@@G@@A*5J*0A@0A@1AK1D80A@0A@3A86D8)^@4^[I@O@O=@D00A@4BC8AK1DD#A@9AK1B@8^@)^@)UC
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9D@0UD
)@@G@@A@0A@0AK9D@)^@)^[I@O@O=@D00A@4BC8AK1DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL UE
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9D@0A@0A@0AK9D@)^@)^[IUF
)@@G@@@O@O=@D00A@4BC8AK1E[TAC0AK8B@8^@)B@4^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)UG
)@@G@@^@)^@)^@)^@0A@0A@1AK8E@0A@0A@0A*9D80A@0A@1B@8D))^@4^[I@O@O=@D00A@4BC8AK1UH
)@@G@@DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UI
)@@G@@A@0A@0A@0A@0AK9C*0A@0A@0AK9C*)^@)^[I@O@O=@D00A@4BC8AK1DD#AC2AK1B@8^@)^@)UJ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9C*0UK
)@@G@@A@0A@0AK9C*)^@)^[I@O@O=@D00A@4BC8AK1DD#A@2A@1B@9^@)^@)^@)^@)^@)DDIE- EL UL
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9C*0A@0A@0AK9C*)^@)^[IUM
)@@G@@@O@O=@D00A@4BC8AK1DD#A@2AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UN
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9C*0A@0A@0AK9C*)^@)^[I@O@O=@D00A@4BC8AK1UO
)@@G@@DD#A@3AC7B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0UP
)@@G@@A@0A@0A@0A@0AK9C*0A@0A@0AK9C*)^@)^[I@O@O=@D00A@4BC8AK1DD#A@4AK1B@9^@)^@)UQ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9C*0UR
)@@G@@A@0A@0AK9C*)^@)^[I@O@O=@D00A@4BC8AK1E[TA@5AC2B@9^@2AC9^@)^@)^@)C(GDD#D9IUS
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1BC9D80A@0A@1A87J*0A@0A@3A86D8)^@7^[IUT
)@@G@@@O@O=@D00A@4BC8AK1DD#A@5AC9B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)UU
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9JS0A@0A@0AK9JS)^@)^[I@O@O=@D00A@4BC8AK1UV
)@@G@@E[TA@5AC9B@9^@2AK4^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1UW
)@@G@@A*9D)0A@0A@0AK9J*0A@0A@1B@8D))^@7^[I@O@O=@D00A@4BC8AK1E[TA@6AC4B@9^@2A)1UX
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1B@8D)0A@0A@0A@0A@0UY
)@@G@@A@0A@1B@8D))^@7^[I@O@O=@D00A@4BC8AK1DD#A@6AK1B@9^@)^@)^@)^@)^@)DDIE- EL UZ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8CC0A@0A@0AK8CC)^@)^[IVA
)@@G@@@O@O=@D00A@4BC8AK2D-KA@8AK7B@1^@)^@)^@)^@)^@)D-JCDI^[KELDD1#DDKCDG^@)^@)VB
)@@G@@^@)^@)^@)^@0A@0A85A@0A@0A@0A@0A@0A@0A@0A85A@0A@)^@0^[I@O@O=@D00A@4BC8AK2VC
)@@G@@D-KA@1AC3B@2^@)^@)^@)^@)^@)C(GDD#D9IC*?^[MCDTD(JD0)^@)^@)^@)^@)^@0A@0A02VD
)@@G@@A*0^C0A@0A@0A@0A@0A@0A02A*0^C)^@0^[I@O@O=@D00A@4BC8AK2D-KA@1AC4B@2^@)^@)VE
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[MCDTD(JD0)^@)^@)^@)^@)^@0A@0A05A@0A@0A@0A@0A@0A@0VF
)@@G@@A@0A05A@0A@)^@0^[I@O@O=@D00A@4BC8AK2D-KA@1AC3B@3^@)^@)^@)^@)^@)C(GDD#D9IVG
)@@G@@C*?^[MCDTD(JD0)^@)^@)^@)^@)^@0A@0A02A*0A@0A@0A@0A@0A@0A@0A02A*0A@)^@0^[IVH
)@@G@@@O@O=@D00A@4BC8AK2DD#AC1AK1B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)VI
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)6A80A@0A@0A)6A8)^@)^[I@O@O=@D00A@4BC8AK2VJ
)@@G@@DD#AC2AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VK
)@@G@@A@0A@0A@0A@0A)6A80A@0A@0A)6A8)^@)^[I@O@O=@D00A@4BC8AK2E[TAC2AK9B@3^@1AK5VL
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A)8D)0A@0A@0BC3D*0VM
)@@G@@A@0A@1A)1E@)^@1^[I@O@O=@D00A@4BC8AK2E[TA@1A@9B@4^@1AS1^@)^@)^@)C(GDD#D9IVN
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2A84D)0A@0A@0A@0A@0A@0A@2A84D))^@0^[IVO
)@@G@@@O@O=@D00A@4BC8AK2DD#A@1AC7B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)VP
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5A00A@0A@0A)5A0)^@)^[I@O@O=@D00A@4BC8AK2VQ
)@@G@@E[TA@2AC5B@4^@1A*9^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0VR
)@@G@@BC6DK0A@0A@0A)5D80A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@2AK0B@4^@)^@)VS
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5AS0VT
)@@G@@A@0A@0A)5AS)^@)^[I@O@O=@D00A@4BC8AK2DD#A@3AK1B@4^@)^@)^@)^@)^@)DDIE- EL VU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)5AS0A@0A@0A)5AS)^@)^[IVV
)@@G@@@O@O=@D00A@4BC8AK2E[TA@3AK6B@4^@1B@7^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)VW
)@@G@@^@)^@)^@)^@0A@0A@0A*1DK0A@0A@0BC0D80A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2VX
)@@G@@E[TA@4AC2B@4^@2A@0^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2VY
)@@G@@A84D)0A@0A@0A@0A@0A@0A@2A84D))^@0^[I@O@O=@D00A@4BC8AK2E[[A@4AC3B@4E[[^@)VZ
)@@G@@^@)^@)^@)A@4AC2B@4 *0A00AC8A))^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A@0A@0WA
)@@G@@A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL WB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)4AK0A@0A@0A)4AK)^@)^[IWC
)@@G@@@O@O=@D00A@4BC8AK2E[TA@5A@4B@4^@2AC5^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)WD
)@@G@@^@)^@)^@)^@0A@0A@0BC7D00A@0A@0A)4DS0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2WE
)@@G@@E[[A@5A@9B@4E[[^@)^@)^@)^@)A@5A@4B@4 *0A80AC8A))^@)^@)^@)^@)^@)^@0A@0A@0WF
)@@G@@A@0A@0A@0A@0A@0A@0A@0A@0A@0A@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@5AK2B@4^@)^@)WG
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3BC0WH
)@@G@@A@0A@0A)3BC)^@)^[I@O@O=@D00A@4BC8AK2E[TA@6A@7B@4^@2AS8^@)^@)^@)C(GDD#D9IWI
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC7EC0A@0A@0A)3EK0A@0A@1A)1E@)^@0^[IWJ
)@@G@@@O@O=@D00A@4BC8AK2DL A@6AC4B@4A80A01^@)^@)^@)A)!AC2 *8A))E[TD(O^[N 9]^@4WK
)@@G@@BC8AK!AS)^@0A@0A@1AS2A00A@0A@0A@0A@0A@0A@1AS2A0)^@0^[I@O@O=@D00A@4BC8AK2WL
)@@G@@DL A@6AC4B@4A80A01^@)^@)^@)E[TD(O^[N 9]^[OD8)A)9B@2 *3^@)^@)^@)^@0A@0A@1WM
)@@G@@AS2A00A@0A@0A@0A@0A@0A@1AS2A0)^@0^[I@O@O=@D00A@4BC8AK2DD#A@6AK1B@4^@)^@)WN
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)4A)0WO
)@@G@@A@0A@0A)4A))^@)^[I@O@O=@D00A@4BC8AK2E[TA@7AC6B@4^@)AC0^@)^@)^@)C(GDD#D9IWP
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC7D)0A@0A@0A)4D*0A@0A@1A)1E@)^@1^[IWQ
)@@G@@@O@O=@D00A@4BC8AK2DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WR
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)4AC0A@0A@0A)4AC)^@)^[I@O@O=@D00A@4BC8AK2WS
)@@G@@E[TA@8A@9B@4^@)AK8^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0WT
)@@G@@BC7D80A@0A@0A)4DK0A@0A@1A)1E@)^@2^[I@O@O=@D00A@4BC8AK2DD#A@8AK2B@4^@)^@)WU
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3B@0WV
)@@G@@A@0A@0A)3B@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@9AC7B@4^@)A*5^@)^@)^@)C(GDD#D9IWW
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BC7EK0A@0A@0A)3EC0A@0A@1A)1E@)^@3^[IWX
)@@G@@@O@O=@D00A@4BC8AK2DD#A@9AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)WY
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3A)0A@0A@0A)3A))^@)^[I@O@O=@D00A@4BC8AK2WZ
)@@G@@E[TAC0AC2B@4^@)A84^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0XA
)@@G@@BC8D)0A@0A@0A)3D*0A@0A@1A)1E@)^@3^[I@O@O=@D00A@4BC8AK2DD#AC0AK2B@4^@)^@)XB
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AC0XC
)@@G@@A@0A@0A)3AC)^@)^[I@O@O=@D00A@4BC8AK2E[TAC1AK0B@4^@1A@1^@)^@)^@)C(GDD#D9IXD
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A*5D00A@0A@0B@6DS0A@0A@1A)1E@)^@4^[IXE
)@@G@@@O@O=@D00A@4BC8AK2DD#AC1AK7B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)XF
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)3AC0A@0A@0A)3AC)^@)^[I@O@O=@D00A@4BC8AK2XG
)@@G@@E[TAC2A@5B@4^@1AC0^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1XH
)@@G@@A)1E@0A@0A@0A@0A@0A@0A@1A)1E@)^@3^[I@O@O=@D00A@4BC8AK2DD#AC2AC9B@4^@)^@)XI
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)2A*0XJ
)@@G@@A@0A@0A)2A*)^@)^[I@O@O=@D00A@4BC8AK2E[TA@1A@3B@5^@1AK3^@)^@)^@)C(GDD#D9IXK
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@4AK0DK0A@0A@0A)2D00A@0A@4A02D8)^@3^[IXL
)@@G@@@O@O=@D00A@4BC8AK2DD#A@1AK5B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)XM
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)1AC0A@0A@0A)1AC)^@)^[I@O@O=@D00A@4BC8AK2XN
)@@G@@E[TA@2AC2B@5^@1A*2^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1XO
)@@G@@A@0D80A@0A@0A)1DK0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@2AK0B@5^@)^@)XP
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0A80XQ
)@@G@@A@0A@0A)0A8)^@)^[I@O@O=@D00A@4BC8AK2E[TA@3A@8B@5^@1A80^@)^@)^@)C(GDD#D9IXR
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@1J*0A@0A@0A)0E@0A@0A@1A)1E@)^@0^[IXS
)@@G@@@O@O=@D00A@4BC8AK2DD#A@3AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)XT
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0A)0A@0A@0A)0A))^@)^[I@O@O=@D00A@4BC8AK2XU
)@@G@@E[TA@4AC4B@5^@1B@9^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1XV
)@@G@@A@1D)0A@0A@0A)0D*0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@4AC9B@5^@)^@)XW
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)0A@0XX
)@@G@@A@0A@0A)0A@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@5A@7B@5^@2AC1^@)^@)^@)C(GDD#D9IXY
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@1E@0A@0A@0A)0J*0A@0A@1A)1E@)^@0^[IXZ
)@@G@@@O@O=@D00A@4BC8AK2DD#A@5AK1B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YA
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS9A80A@0A@0AS9A8)^@)^[I@O@O=@D00A@4BC8AK2YB
)@@G@@DD#A@6AK0B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YC
)@@G@@A@0A@0A@0A@0AS9A80A@0A@0AS9A8)^@)^[I@O@O=@D00A@4BC8AK2E[TA@6AK0B@5^@2A)2YD
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A02D)0A@0A@0A89D*0YE
)@@G@@A@0A@1A)1E@)^@1^[I@O@O=@D00A@4BC8AK2E[TA@7A@9B@5^@)^@6^@)^@)^@)C(GDD#D9IYF
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)1E@0A@0A@0A@0A@0A@0A@1A)1E@)^@0^[IYG
)@@G@@@O@O=@D00A@4BC8AK2DD#A@7AC9B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YH
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS9A@0A@0A@0AS9A@)^@)^[I@O@O=@D00A@4BC8AK2YI
)@@G@@DD#A@8AC6B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YJ
)@@G@@A@0A@0A@0A@0AS9A@0A@0A@0AS9A@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@9A@3B@5^@)A)5YK
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A03E@0A@0A@0A88J*0YL
)@@G@@A@0A@1A)1E@)^@1^[I@O@O=@D00A@4BC8AK2DD#A@9AC9B@5^@)^@)^@)^@)^@)DDIE- EL YM
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8B@0A@0A@0AS8B@)^@)^[IYN
)@@G@@@O@O=@D00A@4BC8AK2DD#AC0AK2B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)YO
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS8D@0A@0A@0AS8D@)^@)^[I@O@O=@D00A@4BC8AK2YP
)@@G@@E[TAC0AK3B@5^@)B@1^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2YQ
)@@G@@A@5EC0A@0A@0A87D80A@0A@2B@3D*)^@2^[I@O@O=@D00A@4BC8AK2E[TAC1AC3B@5^@)BC6YR
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)1E@0A@0A@0A@0A@0YS
)@@G@@A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#AC1AK0B@5^@)^@)^@)^@)^@)DDIE- EL YT
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7C80A@0A@0AS7C8)^@)^[IYU
)@@G@@@O@O=@D00A@4BC8AK2E[TAC2A@5B@5^@1AC0^@)^@)^@)C(GE-#D9IC*?^[M^@)^@)^@)^@)YV
)@@G@@^@)^@)^@)^@0A@0A@1A@4J*0A@0A@0AS7E@0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2YW
)@@G@@DD#AC2AC3B@5^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0YX
)@@G@@A@0A@0A@0A@0AS7CS0A@0A@0AS7CS)^@)^[I@O@O=@D00A@4BC8AK2E[TA@1AC4B@6^@1AK9YY
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A07DK0A@0A@0A84D80YZ
)@@G@@A@0A@1A)1E@)^@1^[I@O@O=@D00A@4BC8AK2DD#A@1AC5B@6^@)^@)^@)^@)^@)DDIE- EL ZA
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS7CS0A@0A@0AS7CS)^@)^[IZB
)@@G@@@O@O=@D00A@4BC8AK2E[TA@2AC3B@6^@1A*2^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)ZC
)@@G@@^@)^@)^@)^@0A@0A@1A)1E@0A@0A@0A@0A@0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2ZD
)@@G@@DD#A@2AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZE
)@@G@@A@0A@0A@0A@0AS6C00A@0A@0AS6C0)^@)^[I@O@O=@D00A@4BC8AK2DD#A@3AK0B@6^@)^@)ZF
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6C00ZG
)@@G@@A@0A@0AS6C0)^@)^[I@O@O=@D00A@4BC8AK2DD#A@4AC8B@6^@)^@)^@)^@)^@)DDIE- EL ZH
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS6C00A@0A@0AS6C0)^@)^[IZI
)@@G@@@O@O=@D00A@4BC8AK2E[TA@5AC5B@6^@2AC6^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)ZJ
)@@G@@^@)^@)^@)^@0A@0A@2A*0D00A@0A@1A@9EC0A@0A@3A00D))^@2^[I@O@O=@D00A@4BC8AK2ZK
)@@G@@DD#A@5AK1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZL
)@@G@@A@0A@0A@0A@0AS5D@0A@0A@0AS5D@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@5AK8B@6^@2AK4ZM
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@5EK0A@0A@0AS5EC0ZN
)@@G@@A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2E[TA@6A@3B@6^@2AK8^@)^@)^@)C(GDD#D9IZO
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A)1E@0A@0A@0A@0A@0A@0A@1A)1E@)^@0^[IZP
)@@G@@@O@O=@D00A@4BC8AK2DD#A@6AC6B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)ZQ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS5JS0A@0A@0AS5JS)^@)^[I@O@O=@D00A@4BC8AK2ZR
)@@G@@E[TA@7A@1B@6^@)^@9^@)^@)^@)C(GDD#D9IC*?EK)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1ZS
)@@G@@A@6E@0A@0A@0AS5J*0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@7AC8B@6^@)^@)ZT
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS4C00ZU
)@@G@@A@0A@0AS4C0)^@)^[I@O@O=@D00A@4BC8AK2E[TA@8A@4B@6^@)AK4^@)^@)^@)C(GDD#D9IZV
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@7DK0A@0A@0AS4D80A@0A@1A)1E@)^@0^[IZW
)@@G@@@O@O=@D00A@4BC8AK2DL A@8A@8B@6A@0B@1^@)^@)^@)A*\AC5 88A0)E[[ELO^[KFDHE))ZX
)@@G@@A)9B@2 *3^@0A@0A@0A86BC0A@0A@0A@0A@0A@0A@0A86BC)^@0^[I@O@O=@D00A@4BC8AK2ZY
)@@G@@DD#A@8AC8B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0ZZ
)@@G@@A@0A@0A@0A@0AS4C*0A@0A@0AS4C*)^@)^[I@O@O=@D00A@4BC8AK2E[TA@9AC5B@6^@)A*4AA
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@7DS0A@0A@0AS4D00AB
)@@G@@A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#A@9AC8B@6^@)^@)^@)^@)^@)DDIE- EL AC
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS4CC0A@0A@0AS4CC)^@)^[IAD
)@@G@@@O@O=@D00A@4BC8AK2E[TAC0AC4B@6^@)A85^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)AE
)@@G@@^@)^@)^@)^@0A@0A@1A@7D80A@0A@0AS4DK0A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2AF
)@@G@@DD#AC0AK0B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AG
)@@G@@A@0A@0A@0A@0AS3D@0A@0A@0AS3D@)^@)^[I@O@O=@D00A@4BC8AK2E[TAC1AC4B@6^@)BC8AH
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@7EK0A@0A@0AS3EC0AI
)@@G@@A@0A@1A)1E@)^@0^[I@O@O=@D00A@4BC8AK2DD#AC1AK0B@6^@)^@)^@)^@)^@)DDIE- EL AJ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS3C)0A@0A@0AS3C))^@)^[IAK
)@@G@@@O@O=@D00A@4BC8AK2DD#AC2AC1B@6^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)AL
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS3C)0A@0A@0AS3C))^@)^[I@O@O=@D00A@4BC8AK2AM
)@@G@@E[TAC2AC6B@6^@1AC8^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AN
)@@G@@A84EK0A@0A@0A06EC0A@0A@1A)1E@)^@1^[I@O@O=@D00A@4BC8AK2E[TA@1AK0B@7^@1AS8AO
)@@G@@^@)^@)^@)C(GDD#D9IC*?EK)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A@8D00A@0A@0AS3DS0AP
)@@G@@A@0A@1A)1E@)^@1^[I@O@O=@D00A@4BC8AK2DD#A@1AK1B@7^@)^@)^@)^@)^@)DDIE- EL AQ
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS3CK0A@0A@0AS3CK)^@)^[IAR
)@@G@@@O@O=@D00A@4BC8AK2DD#A@2AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)AS
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2D@0A@0A@0AS2D@)^@)^[I@O@O=@D00A@4BC8AK2AT
)@@G@@DD#A@3AK3B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AU
)@@G@@A@0A@0A@0A@0AS2D@0A@0A@0AS2D@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@3AK3B@7^@1B@2AV
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A86DK0A@0A@0A05D80AW
)@@G@@A@0A@1A)1E@)^@2^[I@O@O=@D00A@4BC8AK2DD#A@4AK1B@7^@)^@)^@)^@)^@)DDIE- EL AX
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2C00A@0A@0AS2C0)^@)^[IAY
)@@G@@@O@O=@D00A@4BC8AK2DD#A@5AK0B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)AZ
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS2C00A@0A@0AS2C0)^@)^[I@O@O=@D00A@4BC8AK2BA
)@@G@@DD#A@6AC8B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BB
)@@G@@A@0A@0A@0A@0AS2C00A@0A@0AS2C0)^@)^[I@O@O=@D00A@4BC8AK2E[TA@6AC9B@7^@2A)4BC
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@3AK7D)0A@0A@0BC7EC0BD
)@@G@@A@0A@4AK5DK)^@4^[I@O@O=@D00A@4BC8AK2DD#A@7AC7B@7^@)^@)^@)^@)^@)DDIE- EL BE
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS1C*0A@0A@0AS1C*)^@)^[IBF
)@@G@@@O@O=@D00A@4BC8AK2DD#A@8AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)BG
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS1C*0A@0A@0AS1C*)^@)^[I@O@O=@D00A@4BC8AK2BH
)@@G@@E[TA@9A@3B@7^@)A)7^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2BI
)@@G@@A03D)0A@0A@0A03J*0A@0A@3AK6D))^@3^[I@O@O=@D00A@4BC8AK2DD#A@9AK1B@7^@)^@)BJ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0C00BK
)@@G@@A@0A@0AS0C0)^@)^[I@O@O=@D00A@4BC8AK2E[TAC0AC5B@7^@)A86^@)^@)^@)C(GDD#D9IBL
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1AC1DK0A@0A@0AS0D80A@0A@1A)1E@)^@1^[IBM
)@@G@@@O@O=@D00A@4BC8AK2DD#AC0AK1B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)BN
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AS0CK0A@0A@0AS0CK)^@)^[I@O@O=@D00A@4BC8AK2BO
)@@G@@DD#AC1AC9B@7^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BP
)@@G@@A@0A@0A@0A@0AS0CK0A@0A@0AS0CK)^@)^[I@O@O=@D00A@4BC8AK2E[TAC1AC9B@7^@1A@1BQ
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@1D)0A@0A@0A00D*0BR
)@@G@@A@0A@1A)1E@)^@2^[I@O@O=@D00A@4BC8AK2DD#AC2AC8B@7^@)^@)^@)^@)^@)DDIE- EL BS
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9DC0A@0A@0AK9DC)^@)^[IBT
)@@G@@@O@O=@D00A@4BC8AK2E[TAC2AK9B@7^@1AK5^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)BU
)@@G@@^@)^@)^@)^@0A@0A@1AC1EC0A@0A@0AK9EK0A@0A@1A)1E@)^@2^[I@O@O=@D00A@4BC8AK2BV
)@@G@@DD#A@1AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0BW
)@@G@@A@0A@0A@0A@0AK9C00A@0A@0AK9C0)^@)^[I@O@O=@D00A@4BC8AK2DD#A@2AK0B@8^@)^@)BX
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK9C00BY
)@@G@@A@0A@0AK9C0)^@)^[I@O@O=@D00A@4BC8AK2E[TA@2AK3B@8^@1A03^@)^@)^@)C(GDD#D9IBZ
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2AK4DS0A@0A@0A*9DS0A@0A@2B@3D*)^@3^[ICA
)@@G@@@O@O=@D00A@4BC8AK2DD#A@3AK2B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)CB
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8D@0A@0A@0AK8D@)^@)^[I@O@O=@D00A@4BC8AK2CC
)@@G@@DD#A@4AK0B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CD
)@@G@@A@0A@0A@0A@0AK8D@0A@0A@0AK8D@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@4AK5B@8^@2A@6CE
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@2AK5EC0A@0A@0A*7D80CF
)@@G@@A@0A@2B@3D*)^@3^[I@O@O=@D00A@4BC8AK2DD#A@5AC9B@8^@)^@)^@)^@)^@)DDIE- EL CG
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8CC0A@0A@0AK8CC)^@)^[ICH
)@@G@@@O@O=@D00A@4BC8AK2DD#A@6AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)CI
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8CC0A@0A@0AK8CC)^@)^[I@O@O=@D00A@4BC8AK2CJ
)@@G@@DD#A@7AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CK
)@@G@@A@0A@0A@0A@0AK8CC0A@0A@0AK8CC)^@)^[I@O@O=@D00A@4BC8AK2DD#A@8AC8B@8^@)^@)CL
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK8CC0CM
)@@G@@A@0A@0AK8CC)^@)^[I@O@O=@D00A@4BC8AK2E[TA@9A@2B@8^@)A)5^@)^@)^@)C(GDD#D9ICN
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1A81J*0A@0A@1AC2D*0A@0A@2B@3D*)^@5^[ICO
)@@G@@@O@O=@D00A@4BC8AK2DD#A@9AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)CP
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7C*0A@0A@0AK7C*)^@)^[I@O@O=@D00A@4BC8AK2CQ
)@@G@@DD#AC0AC9B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CR
)@@G@@A@0A@0A@0A@0AK7C*0A@0A@0AK7C*)^@)^[I@O@O=@D00A@4BC8AK2E[TAC0AK8B@8^@)B@4CS
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@6E@0A@0A@0A*5J*0CT
)@@G@@A@0A@1A)1E@)^@5^[I@O@O=@D00A@4BC8AK2DD#AC1AC7B@8^@)^@)^@)^@)^@)DDIE- EL CU
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CK0A@0A@0AK7CK)^@)^[ICV
)@@G@@@O@O=@D00A@4BC8AK2DD#AC2AK1B@8^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)CW
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CK0A@0A@0AK7CK)^@)^[I@O@O=@D00A@4BC8AK2CX
)@@G@@DD#A@2A@1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0CY
)@@G@@A@0A@0A@0A@0AK7CK0A@0A@0AK7CK)^@)^[I@O@O=@D00A@4BC8AK2DD#A@2AC7B@9^@)^@)CZ
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CK0DA
)@@G@@A@0A@0AK7CK)^@)^[I@O@O=@D00A@4BC8AK2DD#A@3AC7B@9^@)^@)^@)^@)^@)DDIE- EL DB
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CK0A@0A@0AK7CK)^@)^[IDC
)@@G@@@O@O=@D00A@4BC8AK2DD#A@4AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)DD
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK7CK0A@0A@0AK7CK)^@)^[I@O@O=@D00A@4BC8AK2DE
)@@G@@E[TA@5AC2B@9^@2AC9^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1DF
)@@G@@AK0DS0A@0A@1A03DS0A@0A@2B@3D*)^@7^[I@O@O=@D00A@4BC8AK2DD#A@5AC9B@9^@)^@)DG
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0AK6D@0DH
)@@G@@A@0A@0AK6D@)^@)^[I@O@O=@D00A@4BC8AK2E[TA@5AC9B@9^@2AK4^@)^@)^@)C(GDD#D9IDI
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@1AC4EK0A@0A@0AK6EC0A@0A@1A)1E@)^@7^[IDJ
)@@G@@@O@O=@D00A@4BC8AK2E[TA@6AC4B@9^@2A)1^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)DK
)@@G@@^@)^@)^@)^@0A@0A@1A)1E@0A@0A@0A@0A@0A@0A@1A)1E@)^@7^[I@O@O=@D00A@4BC8AK2DL
)@@G@@DD#A@6AK1B@9^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DM
)@@G@@A@0A@0A@0A@0AK6JS0A@0A@0AK6JS)^@)^[I@O@O=@D00A@4BC8AK3D-KA@1AC3B@2^@)^@)DN
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[MCDTD(JD0)^@)^@)^@)^@)^@0A@0A02A*0A@0A@0A@0A@0A@0DO
)@@G@@A@0A02A*0A@)^@0^[I@O@O=@D00A@4BC8AK3D-KA@8AK6B@2^@)^@)^@)^@)^@)D-JCDI^[KDP
)@@G@@ELDD1#DDKCDG^@)^@)^@)^@)^@)^@0A@0A02A*0A@0A@0A@0A@0A@0A@0A02A*0A@)^@0^[IDQ
)@@G@@@O@O=@D00A@4BC8AK3DD#AC1AK1B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)DR
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*2AC0A@0A@0A*2AC)^@)^[I@O@O=@D00A@4BC8AK3DS
)@@G@@DD#AC2AK0B@3^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0DT
)@@G@@A@0A@0A@0A@0A*2AC0A@0A@0A*2AC)^@)^[I@O@O=@D00A@4BC8AK3E[TAC2AK9B@3^@1AK5DU
)@@G@@^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AK8D*0A@0A@1A@4DS0DV
)@@G@@A@0A@1AS2D8)^@1^[I@O@O=@D00A@4BC8AK3DD#A@1AC7B@4^@)^@)^@)^@)^@)DDIE- EL DW
)@@G@@ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*2A@0A@0A@0A*2A@)^@)^[IDX
)@@G@@@O@O=@D00A@4BC8AK3E[TA@2AC5B@4^@1A*9^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)DY
)@@G@@^@)^@)^@)^@0A@0A@0B@0D80A@0A@0A*2J*0A@0A@1AS2D8)^@1^[I@O@O=@D00A@4BC8AK3DZ
)@@G@@DD#A@2AK0B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EA
)@@G@@A@0A@0A@0A@0A*1A00A@0A@0A*1A0)^@)^[I@O@O=@D00A@4BC8AK3DD#A@3AK1B@4^@)^@)EB
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*1A00EC
)@@G@@A@0A@0A*1A0)^@)^[I@O@O=@D00A@4BC8AK3E[TA@3AK6B@4^@1B@7^@)^@)^@)C(GDD#D9IED
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0AK9D*0A@0A@1A@3DS0A@0A@1AS2D8)^@2^[IEE
)@@G@@@O@O=@D00A@4BC8AK3DD#A@4AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)EF
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*1A*0A@0A@0A*1A*)^@)^[I@O@O=@D00A@4BC8AK3EG
)@@G@@E[TA@5A@4B@4^@2AC5^@)^@)^@)C(GDD#D9IC*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0EH
)@@G@@B@1DK0A@0A@0A*1D00A@0A@1AS2D8)^@2^[I@O@O=@D00A@4BC8AK3DD#A@5AK2B@4^@)^@)EI
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A*1AK0EJ
)@@G@@A@0A@0A*1AK)^@)^[I@O@O=@D00A@4BC8AK3E[TA@6A@7B@4^@2AS8^@)^@)^@)C(GDD#D9IEK
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@1D*0A@0A@0A*1DS0A@0A@1AS2D8)^@2^[IEL
)@@G@@@O@O=@D00A@4BC8AK3DL A@6AC4B@4A80A01^@)^@)^@)A)!AC2^[KFDHE))C1MD9H^@4BC8EM
)@@G@@AK!AK)^@)^@0A@0A@1AS2D80A@0A@0A@0A@0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC8AK3EN
)@@G@@DL A@6AC4B@4A80A01^@)^@)^@)E[TD(O^[AELJD*)A)9B@2 *2^@)^@)^@)^@)^@0A@0A@1EO
)@@G@@AS2D80A@0A@0A@0A@0A@0A@1AS2D8)^@0^[I@O@O=@D00A@4BC8AK3DD#A@6AK1B@4^@)^@)EP
)@@G@@^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)9A80EQ
)@@G@@A@0A@0A)9A8)^@)^[I@O@O=@D00A@4BC8AK3E[TA@7AC6B@4^@)AC0^@)^@)^@)C(GDD#D9IER
)@@G@@C*?^[M^@)^@)^@)^@)^@)^@)^@)^@0A@0A@0B@2EK0A@0A@0A)9E@0A@0A@1AS2D8)^@0^[IES
)@@G@@@O@O=@D00A@4BC8AK3DD#A@7AC9B@4^@)^@)^@)^@)^@)DDIE- EL ETO^@)^@)^@)^@)^@)ET
)@@G@@^@)^@)^@)^@0A@0A@0A@0A@0A@0A@0A)9A)0A@0A@0A)9A))^@)^[I@O@O=@D00A@4BC8AK3EU
)@@G@@E[TA@8A@9B@4^@)AK8^@)^@)*[@@@@*SDFF*@A@@@@ UNIVERSITY OF MARYLAND APL\11EV
)@@G@@00    @#@@@@4INTRODUCTION     @F@@@@     THE UNIVERSITY OF MARYLAND APL\EW
)@@G@@1100 PROCESSOR IS AN IMPLEMEN-@F@@@@ TATION OF THE APL PROGRAMMING LANGUEX
)@@G@@AGE AS DESCRIBED IN S. PAKIN, @F@@@@ 'APL REFERENCE MANUAL', PUBLISHED BEY
)@@G@@Y SCIENCE RESEARCH ASSOCIATES,@F@@@@ CHICAGO, ILL.  THIS LANGUAGE HAS ASEZ
)@@G@@ ITS BASE THE APL PROGRAMMING @F@@@@ LANGUAGE ORIGINALLY DEFINED BY K. IFA
)@@G@@VERSON IN HIS BOOK 'A PROGRAM-@F@@@@ MING LANGUAGE' (WILEY, 1962).  IVERFB
)@@G@@SON'S ORIGINAL SPECIFICATION  @F@@@@ HAS UNDERGONE CONSIDERABLE EVOLUTIOFC
)@@G@@NARY REFINEMENT SINCE THE     @G@@@@ PUBLICATION OF THE ORIGINAL WORK, RFD
)@@G@@ESULTING IN THE TERMINAL SYSTEM     @ @@@@ DESCRIBED IN THE PAKIN BOOK. FE
)@@G@@@F@@@@      WE AT THE UNIVERSITY OF MARYLAND HAVE TRIED TO ADHERE AS    FF
)@@G@@@F@@@@ CLOSELY AS POSSIBLE TO THE EXISTING VERSIONS OF APL ON OTHER     FG
)@@G@@@F@@@@ MACHINES.  OUR OBJECTIVE HAS BEEN THAT, ONCE HE SIGNS ON, A USER FH
)@@G@@@G@@@@ OF APL\1100 CANNOT TELL THE DIFFERENCE BETWEEN IT AND ANY OTHER HFI
)@@G@@E     @E@@@@ HAS USED.  APL\1100 IS UNIQUE AMONG CURRENTLY AVAILABLE    FJ
)@@G@@@F@@@@ IMPLEMTATIONS IN THAT IS IS USABLE FROM BATCH OR A TERMINAL, AND FK
)@@G@@@G@@@@ SEVERAL TYPES OF TERMINALS ARE SUPPORTED.  IF AN APL USER IS USINFL
)@@G@@G     @F@@@@ ONE OF THE MANY AVAILABLE ASCII-COMPATIBLE TERMINALS WITH TFM
)@@G@@HE APL@F@@@@ CHARACTERSET, THEN HE WILL NOTICE ALMOST NO DIFFERENCE BETWFN
)@@G@@EEN   @A@@@@ APL\1100 AND OTHER IMPLEMENTATIONS.@F@@@@      MANY 1100 INFO
)@@G@@STALLATIONS USE TELETYPE-LIKE TERMINALS WHICH   @F@@@@ HAVE ONLY A LIMITFP
)@@G@@ED SET OF PRINTABLE CHARACTERS AND NO BACKSPACE @F@@@@ CAPABILITY; A SIMFQ
)@@G@@ILARLY LIMITED CHARACTER SET IS AVAILABLE FOR   @F@@@@ PUNCHED CARDS.  FFR
)@@G@@OR BATCH AND TELETYPE USE, AN ALTERNATE FORM OF @E@@@@ THE EXTENSIVE (OVFS
)@@G@@ER 130 CHARACTERS) APL CHARACTER SET IS   @F@@@@ AVAILABLE.  THIS SET USFT
)@@G@@ES DIGRAPHS; TWO KEYSTROKES ARE USED TO   @G@@@@ GENERATE A SINGLE APL CFU
)@@G@@HARACTER.  THIS SET IS MORE FULLY DESCRIBED     @F@@@@ IN THE WORKSPACE FV
)@@G@@ 1 CHARACTERSET .  TO BE USABLE WITH TERMINALS  @F@@@@ EQUIPPED WITH THEFW
)@@G@@ IVERSON KEYBOARD, THE UNIVERSITY OF MARYLAND   @F@@@@ FULL ASCII MODIFIFX
)@@G@@CATIONS INCLUDED IN THIS DISTRIBUTION MUST BE   @#@@@@ MADE TO EXEC8.   FY
)@@G@@@F@@@@     AT THIS POINT, IT IS APPROPRIATE TO ACKNOWLEDGE THE CONTRIBU-FZ
)@@G@@@F@@@@ TIONS OF THE MANY PEOPLE WHO HELPED BRING THIS PROJECT TO FRUI-  GA
)@@G@@@F@@@@ TION:  GEORGE MCHUGH, WHO CODED MOST OF THE OUTPUT FORMATTING    GB
)@@G@@@G@@@@ ROUTINES;  JOHN ROUNTREE, WHO DID THE INTERFACING WITH THE FORTRAGC
)@@G@@N     @G@@@@ LIBRARY AND WROTE THOSE MATHEMATICAL FUNCTION SUBROUTINES WGD
)@@G@@HICH WE     @F@@@@ COULD NOT PIRATE;  RAY COOK, WHO DID MOST OF THE CODIGE
)@@G@@NG FOR THE  @F@@@@ DEFINITION OF FUNCTIONS;  DAN MINTZ, WHO WROTE MANY OGF
)@@G@@F THE ROU-  @G@@@@ TINES FOR MIXED OPERATORS; MIKE MCAMIS, WHO DESIGNED GG
)@@G@@AND CODED THE     @F@@@@ LIBRARY SAVE, LOAD, ETC. FUNCTIONS;  MIKE FRITZGH
)@@G@@, WHO DID THE     @G@@@@ SUPPORT FOR ASCII-APL TERMINALS; AND ALL OF THEGI
)@@G@@M COLLECTIVELY, FOR     @G@@@@ FINDING BUGS IN MY OWN CODE.  A SPECIAL VGJ
)@@G@@OTE OF THANKS GOES TO THE     @E@@@@ ASSOCIATE DIRECTOR OF THE COMPUTER GK
)@@G@@SCIENCE CENTER OF THE   @E@@@@ UNIVERSITY OF MARYLAND, MR.  JOHN P. MENAGL
)@@G@@RD,  WITHOUT WHOSE@F@@@@ ENCOURAGEMENT AND FINANCIAL WIZARDRY NONE OF THGM
)@@G@@IS WORK WOULD HAVE@#@@@@ BEEN POSSIBLE .  @ @@@@              P. E. HAGEGN
)@@G@@RTY   @A@@@@              COLLEGE PARK, MARYLAND@ @@@@              REVIGO
)@@G@@SED, 7/1/73 @^@@@@4SYSTEM INFORMATION     @ @@@@3FORMAT OF THE DISTRIBUTGP
)@@G@@ION   @F@@@@      THE APL DISTRIBUTION  CONSISTS OF 5 FILES, ALL IN EXECGQ
)@@G@@8     @F@@@@ PROGRAM FILE (COPOUT) FORMAT.  THE FIRST OF THESE CONTAINS GR
)@@G@@THE   @F@@@@ NECESSARY RELOCATABLES, MAP SYMBOLICS, ETC. NEEDED TO GENERGS
)@@G@@ATE A @F@@@@ VERSION OF APL FOR YOUR SYSTEM.  THE SECOND FILE IS A SKELEGT
)@@G@@TON OF@F@@@@ THE APL SAVED WORKSPACE FILE, CONTAINING VARIOUS OF THE PUBGU
)@@G@@LIC   @F@@@@ WORKSPACES IN RELOCATABLE ELEMENT FORMAT.  THIS RELEASE (5.GV
)@@G@@8) OF @E@@@@ APL INCLUDES THE SYMBOLICS AND A PRELIMINARY VERSION OF THEGW
)@@G@@@F@@@@ MANUAL.  FILE 3 CONTAINS THE SKELETON AND MANUAL, FILE 4 THE     GX
)@@G@@@F@@@@ RELOCATABLES, AND FILE 5 THE SYMBOLICS.  IT IS NOT NECESSARY TO  GY
)@@G@@@G@@@@ USE THEM; A WORKING VERSION OF APL CAN BE GENERATED USING ONLY THGZ
)@@G@@E     @#@@@@ FIRST TWO FILES. @^@@@@2CONTENTS OF FILE 1     @]@@@@COLUMNHA
)@@G@@ 26   @F@@@@      SITEPAR/APL   ASM  -- CONTAINS EQU'S FOR SITE DEPENDENHB
)@@G@@T     @F@@@@                         PARAMETERS. THIS ELEMENT MUST BE UPHC
)@@G@@DATED @G@@@@                         AND REASSEMBLED... IN PARTICULAR, AHD
)@@G@@PL WILL     @F@@@@                         NOT WORK UNLESS AT LEAST THE HE
)@@G@@PARAMETERS  @E@@@@                         'INSTAL' AND 'INSTAM' ARE RESHF
)@@G@@ET.   @F@@@@      XQTMAP-MULTI/APL -MAP SYMBOLICS NEEDED TO GENERATE I-BHG
)@@G@@ANK   @G@@@@                         WHICH SUPERVISES EXECUTION OF APL PHH
)@@G@@ROGRAMS     @D@@@@                         (ABSOLUTE ELEMENT APL$XQ).   HI
)@@G@@@F@@@@      SYSMAP-MULTI/APL   --MAP SYMBOLICS TO GENERATE I-BANK WHICH HJ
)@@G@@@F@@@@                         HANDLES SYSTEM COMMANDS AND FUNCTION DEF-HK
)@@G@@@E@@@@                         ITION (ABSOLUTE ELEMENT APL$SY).   @G@@@@HL
)@@G@@      DBMAP-MULTI/APL    --MAP SYMBOLICS USED TO GENERATE D-BANK OF     HM
)@@G@@@D@@@@                         APL (ABSOLUTE ELEMENT APL).  @F@@@@      HN
)@@G@@UOMMAP    ABS      A SPECIALLY ENHANCED VERSION OF THE 1100 @F@@@@      HO
)@@G@@                   SERIES COLLECTOR WHICH ALLOWS THE USE OF @F@@@@      HP
)@@G@@                   SPECIAL DIRECTIVES FOR COLLECTION OF REPS@F@@@@      HQ
)@@G@@                   WITH SEVERAL I AND/OR D BANKS.  THIS     @E@@@@      HR
)@@G@@                   COLLECTOR MUST BE USED TO COLLECT  @A@@@@            HS
)@@G@@             APL\1100.  @F@@@@      GENERATE/APL  ELT  --AN @ADD ELEMENTHT
)@@G@@ WHICH PERFORMS THE     @F@@@@                         REQUIRED COLLECTIHU
)@@G@@ONS AND DOES A TEST     @F@@@@                         EXECUTION OF THE HV
)@@G@@PROGRAM.  IF APL IS NEW @F@@@@                         TO YOUR SYSTEM, THW
)@@G@@HIS RUN WILL CREATE AND @F@@@@                         CATALOG THE PUBLIHX
)@@G@@C SAVED WORKSPACE FILE. @F@@@@                         YOU SHOULD ****NOHY
)@@G@@T**** ATTEMPT TO CATALOG@G@@@@                         THIS FILE YOURSELHZ
)@@G@@F. APL\1100 REQUIRES THAT     @G@@@@                         THIS FILE BIA
)@@G@@E SPECIALLY INITIALIZED, AND IT     @F@@@@                         WILL IB
)@@G@@INITIALIZE IT ONLY UPON FINDING THAT@F@@@@                         IT HAIC
)@@G@@S NOT BEEN PREVIOUSLY CATALOGGED. IF@F@@@@                         YOU AID
)@@G@@RE TOO SMART FOR YOUR OWN GOOD AND  @F@@@@                         TRY TIE
)@@G@@O DO APL\1100 A FAVOR BY CREATING   @F@@@@                         THIS IF
)@@G@@FILE IN ADVANCE, IT WILL BLOW UP ON @ @@@@                         YOU. IG
)@@G@@@G@@@@      SAMPLE/APL    ELT  -- AN @ADD ELEMENT WHICH CONTAINS THE DATIH
)@@G@@A     @B@@@@                         USED TO TEST APL.@F@@@@      DOCS/AII
)@@G@@PL      DOC  THE ELEMENT FROM WHICH THE DOCUMENT YOU  @D@@@@            IJ
)@@G@@             ARE READING WAS PRODUCED     @F@@@@      WSDOCS/ADDELEMENT IK
)@@G@@ AN ELEMENT WHICH, WHEN ADDED, PRODUCES A @F@@@@                        IL
)@@G@@ LISTING OF ALL OF THE DOCUMENTATION WHICH@F@@@@                        IM
)@@G@@ IS CONTAINED IN THE DISTRIBUTED PUBLIC   @G@@@@                        IN
)@@G@@ LIBRARY WORKSPACES.  THIS ELEMENT IS ADDED     @E@@@@                  IO
)@@G@@       BY GENERATE/APL, BUT MAY BE USED   @B@@@@                        IP
)@@G@@ INDEPENDENTLY.   @]@@@@COLUMN 2    @^@@@@2CONTENTS OF FILE 2     @F@@@@IQ
)@@G@@      FILE 2 CONTAINS SEVERAL RELOCATABLE ELEMENTS WHICH FORM THE @F@@@@IR
)@@G@@ NUCLEUS OF THE PUBLIC WORKSPACE FILE.  IT SHOULD BE NOTED THAT   @F@@@@IS
)@@G@@ ALTHOUGH THESE ELEMENTS ARE IN WHAT APPEARS TO BE RELOCATABLE    @F@@@@IT
)@@G@@ FORMAT, THEY ARE IN NO SENSE OF THE WORD ACTUAL RELOCATABLE DECKS@F@@@@IU
)@@G@@ PRODUCED BY A PROCESSOR.  THEY ARE MERELY BIT FOR BIT COPIES OF  @F@@@@IV
)@@G@@ THE CORE IMAGES OF APL WORKSPACES.  THE RELOCATABLE FORMAT HAS   @G@@@@IW
)@@G@@ BEEN CHOSEN IN ORDER TO MAKE IT POSSIBLE TO USE FURPUR COMMANDS TO     IX
)@@G@@@F@@@@ MAINTAIN THE SAVED WORKSPACE FILE.  THUS, SAVED WORKSPACES MAY BEIY
)@@G@@@F@@@@ INTERCHANGED BETWEEN APL INSTALLATIONS BY USING @COPY,R OR @PCH,RIZ
)@@G@@@F@@@@ COMMANDS.  IN ADDITION, THE FURPUR @PACK COMMAND CAN BE USED TO  JA
)@@G@@@F@@@@ RECOVER SPACE IN THE FILE CAUSED BY DELETION OF OLD COPIES OF    JB
)@@G@@@F@@@@ SAVED WORKSPACES.  AS OF LEVEL 5.8, THE FORMAT OF WORKSPACES HAS JC
)@@G@@@F@@@@ BEEN SLIGHTLY MODIFIED. WORKSPACES SAVED UNDER 5.8 AND LATER MAY JD
)@@G@@@F@@@@ BE PLACED IN ANY EXEC8 PROGRAM FILE. THE FURPUR @PREP COMMAND MAYJE
)@@G@@@F@@@@ BE USED ON FILES CONTAINING WORKSPACES WITH IMPUNITY. NEW FORMAT JF
)@@G@@@B@@@@ WORKSPACES WILL BE IGNORED BY @PREP.     @F@@@@      AS OF LEVEL JG
)@@G@@5.8, APL\1100 CAN BE CONFIGURED TO USE A SINGLE @F@@@@ FILE FOR THE WORKJH
)@@G@@SPACES OF ALL USERS, OR A SEPERATE FILE FOR EACH@F@@@@ USER; GENERATION JI
)@@G@@INSTRUCTIONS ARE IN THE ELEMENT SITEPAR/APL.  IF@G@@@@ YOU HAVE ALREADY JJ
)@@G@@ESTABLISHED AN APL WORKSPACE FILE ON YOUR SYSTEM,     @E@@@@ AND ARE CONJK
)@@G@@TEMPLATING GENERATION OF A VERSION WHICH USES A @E@@@@ FILE-PER-USER, YOJL
)@@G@@U SHOULD DEFER THIS UNTIL YOU HAVE FIRST  @F@@@@ GENERATED AND USED A 5.JM
)@@G@@8 OR HIGHER LEVEL FOR SOME TIME WITH YOUR @F@@@@ EXISTING LIBRARY FILE. JN
)@@G@@ THE WORKSPACE 271828 WSFILEFIXUP CONTAINS@E@@@@ CONVERSION AIDS WHICH CJO
)@@G@@AN BE USED TO AID IN THE CONVERSION @F@@@@ PROCESS. THE CONVERSION PROGRJP
)@@G@@AM MUST, HOWEVER, BE EXECUTED ON A  @D@@@@ LEVEL 5.8 OR HIGHER VERSION WJQ
)@@G@@HICH USES A SINGLE FILE.@F@@@@    WHENEVER WORKSPACES ARE SAVED, THE USEJR
)@@G@@R'S DESIGNATED WORKSPAE @F@@@@ NAME IS USED AS AN ELEMENT NAME, AND HIS JS
)@@G@@LIBRARYNUMBER (PADDED TO@F@@@@ TWELVE CHARACTERS WITH LEADING ZEROES) ISJT
)@@G@@ USED AS A VERSION.  FOR@D@@@@ FURTHER INFORMATION, SEE THE ELEMENT SITEJU
)@@G@@PAR/APL.    @F@@@@     THE ELEMENTS IN FILE 2 OF THE DISTRIBUTION TAPE AJV
)@@G@@RE ALL PART @E@@@@ OF THE PUBLIC LIBRARIES (I.E. LESS THAN 1000).  THEY JW
)@@G@@ARE   @G@@@@ DOCUMENTED IN THE WORKSPACE  1 LIBRARYINDEX, A LISTING OF WJX
)@@G@@HICH IS     @F@@@@ GENERATED BY ADDING THE ELEMENT  WSDOCS/ADDELEMENT INJY
)@@G@@ FILE 1 OF  @#@@@@ THE DISTRIBUTION.@ @@@@2CONTENTS OF FILES 3, 4, AND 5JZ
)@@G@@@]@@@@COLUMN 1    @F@@@@     FILE 3 CONTAINS THE MANUAL, AND THE SKELETOKA
)@@G@@N AND SGSSES USED @F@@@@ INTERNALLY AT UOM TO MAINTAIN APL\1100.  THE SKKB
)@@G@@ELETON IS GENERA- @F@@@@ LIZED, AND CAN BE USED TO MAINTAIN ANY PROGRAM KC
)@@G@@OF SIMILAR SIZE.  @C@@@@ IT CONTAINS ITS OWN DOCUMENTATION AS COMMENTS. KD
)@@G@@@F@@@@      FILES 4 AND 5 CONTAIN THE RELOCATABLES AND BASE SYMBOLICS,  KE
)@@G@@@G@@@@ RESPECTIVELY.  IN ADDITION, FILE 5 CONTAINS ELEMENTS FOR THE EXECKF
)@@G@@8     @G@@@@ CHANGES NEEDED IF YOU WISH TO IMPLEMENT SUPPORT FOR TERMINAKG
)@@G@@LS WITH     @G@@@@ THE FULL APL CHARACTERSET.  THESE CHANGES IMPLEMENT TKH
)@@G@@HE FULL ASCII     @F@@@@ CODE IN THE TELETYPE HANDLER OF THE EXEC.  THE KI
)@@G@@ELEMENTS ALL HAVE @A@@@@ THE WORD ASCII IN THEIR NAMES.     @ @@@@3IMPLEKJ
)@@G@@MENTATION INSTRUCTIONS  @E@@@@      TO GENERATE A VERSION OF APL\1100 FOKK
)@@G@@R YOUR OWN SYSTEM-@]@@@@COLUMN 14   @F@@@@         (0) BE SURE THE EXEC KL
)@@G@@YOU ARE RUNNING UNDER ALLOWS THE    @F@@@@             QUARTERWORD J-DESKM
)@@G@@IGNATORS IN INSTRUCTIONS.  AN EXEC  @F@@@@             CONFIG PARAMETER KN
)@@G@@DETERMINES WHETHER THIS IS ALLOWED. @E@@@@             ***NOTE*** THE SEKO
)@@G@@TTING OF THIS PARAMETER HAS   @F@@@@             ***NOTHING*** TO DO WITKP
)@@G@@H QUARTER-WORD CTMC'S OR ANY  @F@@@@             OTHER CONFIGURATION PARKQ
)@@G@@AMETERS, IT MERELY DETERMINES @F@@@@             WHETHER A PROGRAM CAN SKR
)@@G@@ET THE QUARTERWORD BIT IN ITS @F@@@@             PSR.  THE PARAMETER EXIKS
)@@G@@STS FOR HISTORICAL REASONS    @F@@@@             ONLY. THE ORIGINAL 1108KT
)@@G@@'S (VERY LOW SERIAL NUMBERS)  @F@@@@             DID NOT HAVE QUARTERWORKU
)@@G@@D HARDWARE.  VERY FEW OF THESE@F@@@@             MACHINES STILL EXIST, AKV
)@@G@@LL 1106'S AND 1110'S HAVE THE @F@@@@             HARDWARE.  MOST 1108'S KW
)@@G@@ARE IN FACT 1108A'S WHICH ALSO@G@@@@             HAVE IT.  IF YOUR MACHIKX
)@@G@@NE IS OLD, AND YOU ARE NOT SURE     @F@@@@             WHETHER IT IS AN KY
)@@G@@1108 OR THE NEWER 1108A, WRITE A    @E@@@@             SMALL ASSEMBLY PRKZ
)@@G@@OGRAM WHICH EXECUTES THE PAIJ @F@@@@             INSTRUCTION.  ON 1108'SLA
)@@G@@ THIS INSTRUCTION WILL EXECUTE@F@@@@             IN A USER PROGRAM, ON ALB
)@@G@@N 1108A IT WILL CAUSE A GUARD @^@@@@             MODE FAULT.@F@@@@      LC
)@@G@@   (1) IF YOU HAVE NOT ALREADY DONE SO, LIST THE ELEMENT    @F@@@@      LD
)@@G@@       SITEPAR/APL IN FILE 1 OF THE DISTRIBUTION TAPE.  THIS@F@@@@      LE
)@@G@@       ELEMENT IS SELF DOCUMENTING, AND TELLS YOU HOW TO SET@F@@@@      LF
)@@G@@       THE PARAMETERS NEEDED TO GENERATE A LOCAL VERSION OF @F@@@@      LG
)@@G@@       THE PROCESSOR.  NOTE: THIS ELEMENT MUST BE CONFIGURED@F@@@@      LH
)@@G@@       AND ASSEMBLED LOCALLY.  APL WILL NOT EXECUTE IF THE  @F@@@@      LI
)@@G@@       PARAMETERS INSTAL AND INSTAM ARE LEFT SET TO THE     @F@@@@      LJ
)@@G@@       DISTRIBUTED VALUE, 'INSTALLATION'.  THEY MUST BE SET @G@@@@      LK
)@@G@@       IDENTICAL TO THE ACCOUNT NUMBER FIELD ON THE @RUN CARD     @C@@@@LL
)@@G@@             OF THE INITIAL APL GENERATION RUN. @B@@@@         (2) EXECULM
)@@G@@TE THE FOLLOWING RUN--  @^@@@@               @RUN  ---@B@@@@            LN
)@@G@@   @ASG,T  TAPE,8C,REELNO     @C@@@@               @COPIN   TAPE.      .LO
)@@G@@ GET FILE 1 @C@@@@               @ASM,US  SITEPAR/APL,SITEPAR/APL @E@@@@LP
)@@G@@               ... YOUR CORRECTION DECK HERE--'INSTAL' AND  @F@@@@      LQ
)@@G@@         'INSTAM' MUST CORRESPOND TO THE ACCOUNT NO ON THE  @F@@@@      LR
)@@G@@         @RUN CARD FOR THIS JOB OR APL WILL DESTROY ITSELF. @F@@@@      LS
)@@G@@         @ADD GENERATE/APL  . COLLECT AND EXECUTE TEST RUN  @D@@@@      LT
)@@G@@                           -- SEE NOTE BELOW -- @B@@@@               @ASLU
)@@G@@G,CR   APL$*ABSOLUTES.  @F@@@@               @COPY,A   ,APL$*ABSOLUTES. LV
)@@G@@   . SAVE CURRENT APL   @D@@@@               @ASG,AX <QUAL>*<FILE>/<RKEYLW
)@@G@@>/<WKEY>.   @F@@@@               @COPIN TAPE.,<QUAL>*<FILE>.  . INITIALILX
)@@G@@ZE LIBRARY  @^@@@@               @FIN     @]@@@@COLUMN 14   @F@@@@      LY
)@@G@@       THE <QUAL>*<FILE>.,ETC. FIELDS ON THE ABOVE CARDS    @F@@@@      LZ
)@@G@@       REFER TO THE PUBLIC WORKSPACE FILE-- I.E.THEY MUST   @F@@@@      MA
)@@G@@       AGREE WITH THE PARAMETERS SET IN SITEPAR/APL WHICH   @G@@@@      MB
)@@G@@       DEFINE THIS FILE.  YOU ***MUST*** ***NOT*** ATTEMPT TO     @E@@@@MC
)@@G@@             EXPLICITLY CREATE THE FILE; APL WILL CREATE AND@F@@@@      MD
)@@G@@       INITIALIZE THE FILE ITSELF IF IT FINDS THAT THE FILE @E@@@@      ME
)@@G@@       WAS NOT ALREADY CREATED (E.G. BY A PREVIOUS    @ @@@@            MF
)@@G@@ GENERATION).     @F@@@@         (3) AT THIS POINT, YOU NOW HAVE A VERSIMG
)@@G@@ON OF APL, WHICH  @F@@@@             CONSISTS OF THE THREE ABSOLUTE ELEMMH
)@@G@@ENTS APL, APL$XQ  @F@@@@             AND APL$SY. THE ELEMENT APL IS THE MI
)@@G@@ONE CALLED BY THE @F@@@@             PROCESSOR CALL CARD.  THE ELEMENTS MJ
)@@G@@APL$XQ AND APL$SY @G@@@@             ARE REENTRANT MODULES LOADED BY SIMMK
)@@G@@ULATION OF THE 1110     @G@@@@             LIJ  INSTRUCTION WITH THE  ERML
)@@G@@ LINK$.  THE PROCESSOR IS     @F@@@@             CAPABLE OF DETERMINING MM
)@@G@@WHETHER IT IS BEING EXECUTED  @G@@@@             FROM SYS$*LIB$ OR NOT, MN
)@@G@@AND WILL TAKE IT UPON ITSELF TO     @E@@@@             DO AN RLIST$ IF OMO
)@@G@@NE IS NECESSARY.  THE ABSOLUTE@E@@@@             ELEMENTS MAY BE PUT INTMP
)@@G@@O SYS$*LIB$ AT YOUR     @ @@@@             CONVENIENCE.     @F@@@@      MQ
)@@G@@   (4) IF YOU ARE RUNNING THE RIGHT (OR WRONG, DEPENDING ON @G@@@@      MR
)@@G@@       YOUR POINT OF VIEW) VERSION OF LEVEL26, THE SAMPLE RUN     @F@@@@MS
)@@G@@             MAY GIVE SPURIOUS ERRORS, USUALLY INDICATED BY WHAT  @F@@@@MT
)@@G@@             SEEMS TO BE MISSING WORDS IN THE INPUT STATEMENTS.   @F@@@@MU
)@@G@@             THIS IS A BUG IN EXEC8, WHICH SHOWS UP BECAUSE APL   @F@@@@MV
)@@G@@             DOES ER  TREAD$'S  FROM AN @ADD FILE.  AT ONE POINT A@G@@@@MW
)@@G@@             'FIX' WAS DISTRIBUTED WHICH CAUSED THE EXEC TO USE THE     MX
)@@G@@@F@@@@             PACKET ADDRESS AS THE BUFFER ADDRESS.  A LATER FIX   MY
)@@G@@@F@@@@             ACTUALLY REPAIRED THE PROBLEM.  IF YOU SEEM TO BE    MZ
)@@G@@@E@@@@             HAVING THIS PROBLEM, BE SURE YOUR SYSTEM IS    @^@@@@NA
)@@G@@             UP-TO-DATE.@F@@@@         (5) IT IS POSSIBLE THAT YOU MAY GNB
)@@G@@ET A SYMBIONT ERROR TYPE@F@@@@             03 DURING THE COLLECTION. IF NC
)@@G@@THIS HAPPENS, USE THE   @F@@@@             FURPUR @PCH COMMAND TO PUNCH ND
)@@G@@THE ELEMENT GENERATE/APL@F@@@@             ON CARDS AND PUT IT IN YOUR RNE
)@@G@@UNSTREAM INSTEAD OF     @G@@@@             @ADD'ING IT FROM THE FILE.  TNF
)@@G@@HIS ERROR IS NOT AN ERROR     @F@@@@             IN THE COLLECTOR, ALTHONG
)@@G@@UGH IT MAY SEEM TO BE SUCH.   @F@@@@         (6) THE CHARACTERISTICS OF NH
)@@G@@APL USERS ARE SUCH THAT THEY  @F@@@@             MAKE VERY LIBERAL USE ONI
)@@G@@F THE )SAVE AND )CONTINUE     @F@@@@             COMMANDS.  SINCE EACH )NJ
)@@G@@SAVE CREATES A NEW ELEMENT IN @G@@@@             THE FILE, AND DELETES TNK
)@@G@@HE OLD COPY, THE FILE SHOULD BE     @F@@@@             @PACKED FREQUENTLNL
)@@G@@Y (AT LEAST ONCE A DAY).  THIS IS   @G@@@@             MOST EASILY DONE NM
)@@G@@BY THE INSERTION OF A CANNED RUN INTO     @F@@@@             BOOTELT, WHNN
)@@G@@ICH WILL PACK THE FILE AT EVERY REBOOT.   @]@@@@COLUMN 2    @ @@@@3LIBRANO
)@@G@@RY NUMBERS AND QUOTAS   @F@@@@      SINCE THERE ARE NO RESTRICTIONS ON TNP
)@@G@@HE NAMES UNDER WHICH    @F@@@@ USERS MAY SAVE WORKSPACES, IT IS OBVIOUS NQ
)@@G@@THAT AN ADDITIONAL ME-  @F@@@@ CHANISM IS NEEDED IN ORDER TO INSURE UNIQNR
)@@G@@UENESS OF THE ELEMENTS  @F@@@@ SAVED BY DIFFERENT USERS IN THE COMMON FINS
)@@G@@LE.  FOR THIS PURPOSE,  @F@@@@ APL AUTOMATICALLY GENERATES A 'LIBRARY NUNT
)@@G@@MBER' FOR EACH USER BY  @G@@@@ HASHING TOGETHER HIS ACCOUNT NUMBER AND CNU
)@@G@@URRENT QUALIFIER.  COLLI-     @F@@@@ SIONS ARE RESOLVED BY KEEPING A SPENV
)@@G@@CIAL ELEMENT IN THE LIBRARY   @F@@@@ FILE IN WHICH A RECORD OF EVERY LIBNW
)@@G@@RARY NUMBER AND THE ASSOCIATED@F@@@@ ACCOUNT NUMBER AND QUALIFIER ARE KENX
)@@G@@PT.  IN THIS WAY, IT IS UNNE- @F@@@@ CESSARY FOR A USER TO KNOW WHAT HISNY
)@@G@@ LIBRARY NUMBER IS (OR EVEN   @G@@@@ THAT HE HAS ONE), UNLESS HE WISHES NZ
)@@G@@TO SHARE WORKSPACES WITH A USER     @E@@@@ WHO RUNS UNDER A DIFFERENT ACOA
)@@G@@COUNT NUMBER AND/OR QUALIFIER.@F@@@@     IF APL\1100 HAS BEEN CONFIGUREDOB
)@@G@@ SUCH THAT A SINGLE FILE IS   @F@@@@ USED FOR ALL WORKSPACES (ONEFIL EQUOC
)@@G@@ 1 IN SITEPAR/APL), THEN EACH @F@@@@ USER IS LIMITED TO A FIXED QUOTA OFOD
)@@G@@ MASS STORAGE IN SECTORS WHICH@G@@@@ IS SET BY THE INSTALLATION MANAGER.OE
)@@G@@ IF EACH USER HAS HIS OWN FILE,     @B@@@@ THE LIMIT IS SIMPLY THE SIZE OF
)@@G@@OF HIS FILE.@F@@@@      ADDITIONAL FEATURES OF THE LIBRARY SYSTEM ARE: (OG
)@@G@@1) NO USER  @F@@@@ CAN )DROP A WORKSPACE EXCEPT THE USER WHO ORIGINALLY OH
)@@G@@)SAVED IT;  @F@@@@ (2) NO USER CAN )SAVE IN A PUBLIC WORKSPACE EXCEPT THOI
)@@G@@E USER WHO  @F@@@@ SAVED IT ORIGINALLY; (3) ONLY THE INSTALLATION MANAGEOJ
)@@G@@R MAY SAVE A@E@@@@ WORKSPACE IN LIBRARIES 1-99; (4) NO ONE MAY )LIB A USOK
)@@G@@ER'S  @D@@@@ WORKSPACES BUT HIMSELF OR THE INSTALLATION MANAGER.  @A@@@@OL
)@@G@@3INSTALLATION MANAGER PRIVILEGES    @F@@@@      ORDINARILY, A USER SIGNSOM
)@@G@@ ON TO APL USING THE CARD @APL,     @F@@@@ WITHOUT ANY OPTIONS, FIELDS OON
)@@G@@R SUBFIELDS.   THE USER MAY SIGN ON @F@@@@ WITH A LIBRARY NUMBER OTHER TOO
)@@G@@HAN THE ONE AUTOMATICALLY CALCULATED@F@@@@ BY PUTTING THE DESIRED LIBRAROP
)@@G@@Y NUMBER AS SPEC1 ON HIS @APL CARD, @^@@@@ I.E. @APL <NUMBER>     @F@@@@OQ
)@@G@@      ONE LIBRARY NUMBER IS BUILT INTO THE SYSTEM AS A PRIVILEGED @F@@@@OR
)@@G@@ NUMBER-THIS NUMBER IS 271828, AND IT IS INTENDED FOR THE USE OF  @F@@@@OS
)@@G@@ THE INSTALLATION MANAGER.  IN ORDER TO SIGN ON WITH THIS NUMBER, @F@@@@OT
)@@G@@ IT *MUST* BE PUT AS SPEC1 ON THE PROCESSOR CALL CARD.  IT IS     @F@@@@OU
)@@G@@ RECOMMENDED THAT THE INSTALLATION MANAGER PUT A LOCK ON THIS     @F@@@@OV
)@@G@@ NUMBER AS SOON AS HE INTRODUCES APL TO HIS INSTALLATION.  THIS IS@F@@@@OW
)@@G@@ DONE BY SIGNING ON WITH THE NUMBER-- I.E. @APL 271828 AND THEN   @F@@@@OX
)@@G@@ SIGNING OFF WITH A LOCK ON THE )OFF COMMAND-- I.E. )OFF:<LOCK>   @F@@@@OY
)@@G@@ ONCE THIS IS DONE, THE ONLY WAY TO SIGN BACK ON THIS NUMBER IS TO@G@@@@OZ
)@@G@@ SPECIFY BOTH THE NUMBER AND THE LOCK ON THE PROCESSOR CALL CARD BY     PA
)@@G@@@^@@@@ @APL 271828/<LOCK>     @F@@@@      WITH THE RELEASE OF APL\1100 VPB
)@@G@@ERSION 5.8, IMPLEMENTATION OF @F@@@@ THE SPECIAL FUNCTIONS FOR THE INSTAPC
)@@G@@LLATION MANAGER IS ESSENTIALLY@F@@@@ COMPLETE. THE WORKSPACE 271828 OPFNPD
)@@G@@S CONTAINS A COMPLETE SET OF  @E@@@@ FUNCTIONS FOR MAINTENENCE OF THE WOPE
)@@G@@RKSPACE FILE, INCLUDING @F@@@@ FUNCTIONS TO LIST SELECTED INFORMATION, APF
)@@G@@ND FUNCTIONS TO DO MASS @F@@@@ STORAGE BILLING.  EXCEPT FOR AN OCCASIONAPG
)@@G@@L FURPUR @PACK OF THE   @F@@@@ WORKSPACE FILE, IT IS NOW POSSIBLE TO MAIPH
)@@G@@NTAIN THE APL WORKSPACE @D@@@@ COMPLEX COMPLETELY FROM WITHIN THE APL SYPI
)@@G@@STEM ITSELF.@F@@@@      IN ADDITION TO THE SPECIAL PRIVILEGES FOR THE INPJ
)@@G@@STALLATION  @G@@@@ MANAGER, IT SHOULD BE NOTED THAT THE DISTRIBUTED PUBLPK
)@@G@@IC WORKSPACES     @E@@@@ (SUCH AS 1 NEWS) HAVE ALL BEEN SAVED UNDER THE PL
)@@G@@INSTALLATION@F@@@@ MANAGER'S IDENTIFICATION.  THUS, NO ONE MAY CHANGE ANPM
)@@G@@Y OF THESE  @F@@@@ WORKSPACES BUT THE INSTALLATION MANAGER.  FOR THESE RPN
)@@G@@EASONS,  IT @F@@@@ IS STRONGLY RECOMMENDED THAT THE LIBRARY NUMBER FOR TPO
)@@G@@HE INSTALLA-@F@@@@ TION MANAGER BE LOCKED WITH A LOCALLY DEFINED PASSWORPP
)@@G@@D AS SOON AS@ @@@@ THE SYSTEM IS IMPLEMENTED.   @#@@@@4USER INFORMATION PQ
)@@G@@@#@@@@3USER MANUALS     @F@@@@      EVERY ATTEMPT HAS BEEN MADE TO MAKE PR
)@@G@@APL\1100 COMPATIBLE WITH@F@@@@ OTHER EXTANT VERSIONS OF APL.  THE PRIMARPS
)@@G@@Y DIFFERENCE IS IN THE  @F@@@@ CHARACTER SET, WITH OTHER DIFFERENCES BEIPT
)@@G@@NG MINOR.  ALL THE STAN-@G@@@@ DARD MANUALS AND TEXTS WHICH DESCRIBE THEPU
)@@G@@ APL LANGUAGE AND THE USE     @F@@@@ OF THE APL TERMINAL SYSTEM MAY BE UPV
)@@G@@SED ESSENTIALLY AS WRITTEN.   @F@@@@ SINCE APL\1100 INCLUDES SOME UNIQUEPW
)@@G@@ EXTENSIONS, AND MORE ARE     @G@@@@ PLANNED, WE HAVE DECIDED TO PRODUCEPX
)@@G@@ A MANUAL SPECIFIC TO APL\1100,     @G@@@@ A PRELIMINARY COPY OF WHICH MPY
)@@G@@AY BE FOUND IN THE THIRD FILE OF THIS     @#@@@@ DISTRIBUTION.    @F@@@@PZ
)@@G@@     AN APL\1100 USER WHO DOES NOT HAVE A COPY OF THE MANUAL MAY  @G@@@@QA
)@@G@@ INFORM HIMSELF ABOUT ITS FEATURES BY EXAMINING THE CONTENTS OF THE     QB
)@@G@@@F@@@@ PUBLIC WORKSPACES  '1 APL1100' AND '1 CHARACTERSET'.  THE FOLLO- QC
)@@G@@@F@@@@ WING RUNSTREAM IS SUFFICIENT FOR A USER TO GET HIMSELF STARTED:  QD
)@@G@@@^@@@@               @RUN     @^@@@@               @APL     @A@@@@      QE
)@@G@@              )LOAD 1 APL1100 @ @@@@                    DESCRIBE  @B@@@@QF
)@@G@@                    )LOAD 1 CHARACTERSET  @ @@@@                    DESCQG
)@@G@@RIBE  @^@@@@                    )OFF@^@@@@               @FIN     @#@@@@QH
)@@G@@3BIBLIOGRAPHY     @F@@@@ THE FOLLOWING PUBLICATIONS CONTAIN DESCRIPTIONSQI
)@@G@@ OF APL AND ITS   @F@@@@ USE.  THIS LIST IS BY NO MEANS EXHAUSTIVE, BUT QJ
)@@G@@REPRESENTS ONLY   @F@@@@ THOSE PUBLICATIONS PERSONALLY KNOWN TO THE AUTHQK
)@@G@@ORS OF APL\1100 AT@G@@@@ THIS TIME.  NEW TEXTS IN APL ARE CONSTANTLY BEIQL
)@@G@@NG BROUGHT OUT, AND     @F@@@@ YOU ARE ADVISED TO CONSULT THE ADVERTISINQM
)@@G@@G IN RECENT ISSUES OF   @B@@@@ CACM  OR DATAMATION FOR THE LATEST TEXTS.QN
)@@G@@@E@@@@       A PROGRAMMING LANGUAGE, K. E. IVERSON, WILEY(1962).  @]@@@@QO
)@@G@@COLUMN 16   @E@@@@               PRIMARILY OF HISTORICAL INTEREST, THIS QP
)@@G@@BOOK  @F@@@@               DESCRIBES THE ORIGINAL APL NOTATION, WHICH DIQQ
)@@G@@FFERS @F@@@@               SOMEWHAT FROM THE IMPLEMENTED PROGRAMMING SYSQR
)@@G@@TEM.  @E@@@@       APL/360 REFERENCE MANUAL, S. PAKIN, SCIENCE RESEARCH QS
)@@G@@@E@@@@               ASSOCIATES, CHICAGO (1970).  THIS IS THE MOST@F@@@@QT
)@@G@@               COMPLETE REFERENCE TO THE IMPLEMENTED LANGUAGE.    @F@@@@QU
)@@G@@       A FORMAL DESCRIPTION OF APL, R.H. LATHWELL AND J.E. MEZEI. @G@@@@QV
)@@G@@               IBM PHILADELPHIA SCIENTIFIC CENTER, TECH. REPORT NO.     QW
)@@G@@@F@@@@               320-3008 (1971).  THIS GIVES A FORMAL DEFINITION OFQX
)@@G@@@E@@@@               THE SEMANTICS (NOT SYNTAX) OF THE APL SYSTEM,@D@@@@QY
)@@G@@               DESCRIBED IN TERMS OF APL FUNCTIONS.   @E@@@@       APL: QZ
)@@G@@AN INTERACTIVE APPROACH, L. GILMAN AND A. ROSE, @F@@@@               WILRA
)@@G@@EY(1970).  THIS IS THE BEST AVAILABLE TUTORIAL  @F@@@@               PUBRB
)@@G@@LICATION; IT CAN BE USED AS A SELF-TEACHING TOOL@C@@@@               WITRC
)@@G@@H WHICH TO LEARN THE LANGUAGE.@]@@@@COLUMN 2    ___@@@ OTHER EXTANT VERSRD
)@@G@@IONS OF APL.  THE PRIMARY DIFFERENCE IS IN THE  @F@@@@ CHARACTER SET, WIRE
)@@G@@TH OTHER DIFFERENCES BEI*[S@@@*SDFF*@[@@@[/.    @]@@@[       DEF .@D@@@[RF
)@@G@@.     ********** DEFINITIONS OF FUZZING ACCURACY *****@G@@@[FUZIND EQU  RG
)@@G@@ 12          . DEFAULT FUZZ INDEX (NO OF BITS TO IGNORE)    @[@@@[.     RH
)@@G@@@E@@@[.                        INTEGER CONVERSION WITH FUZZING--- @F@@@[RI
)@@G@@F      PROC  . ARG IN A4,A5, RESULT (MAY BE DFL OR HFI) IN A1,A2  @^@@@[RJ
)@@G@@FUZZUP* NAME 0 . CEILING@^@@@[FUZZDN* NAME 1 . FLOOR  @ @@@[       UNLI$RK
)@@G@@T            .    @ @@@[       LMJ   A0,FUZER$   .    @D@@@[ DO   F(0,0)RL
)@@G@@ , +0.0D     . NO ADJUSTMENT FOR FLOOR    @C@@@[ DO 1-F(0,0) , +1.0D    RM
)@@G@@ . BUT CEILING ADDS ONE @#@@@[       LI$T  .    @F@@@[FUZDEF* NAME 0 .  RN
)@@G@@         DUMMY ENTRY TO DEFINE FUZZING CONSTS   @]@@@[       END .@[@@@[RO
)@@G@@.     @B@@@[. SET FUZZING PARAMETERS IN WORKSPACE     @[@@@[.     @D@@@[RP
)@@G@@P      PROC  . ENTER WITH FUZZ INDEX TO USE IN A2     @#@@@[SETFUZ* NAMERQ
)@@G@@ .    @ @@@[       UNLI$T            .    @C@@@[       SA    A2,WSFUZI  RR
)@@G@@ . PUT INDEX INTO THE WS@E@@@[       JZ    A2,LINEUP   . IF INDEX IS ZERRS
)@@G@@O, NO FUZZING     @E@@@[       AA,U  A2,02001-60 . FUZZINDEX OF 60 ALLOWRT
)@@G@@S 100% ERROR@C@@@[       LSSL  A2,1        . MOVE EXPONENT OVER   @E@@@[RU
)@@G@@       AA,U  A2,1        . SO WE CAN FOLD IN THE DIGIT BIT  @E@@@[LINEUPRV
)@@G@@ LDSL  A1,72-13    . ALIGN NORMALIZED DFLOAT FUZZCONST@C@@@[       DS   RW
)@@G@@ A1,WSFUZZ   . AND PUT IT IN THE WS @#@@@[       LI$T  .    @#@@@[      RX
)@@G@@ END   .    @[@@@[.     @ @@@[F      PROC              .    @ @@@[FUZDIFRY
)@@G@@* NAME             .    @^@@@[RITE   EQU   F(1,1) .   @^@@@[LEFT   EQU  RZ
)@@G@@ F(1,2) .   @B@@@[       DFAN  RITE,LEFT , . FORM SIGNED DIF@#@@@[      SA
)@@G@@ UNLIST .   @F@@@[       DFM   LEFT,WSFUZZ   . GET ABS ERROR=PERCENT(FUZSB
)@@G@@Z)*ARGUMENT @C@@@[       DLM   LEFT,LEFT   . FORCE IT POSITIVE    @C@@@[SC
)@@G@@       JP    RITE,$+3    . IS SIGNED DIF NEG?   @E@@@[       DFA   LEFT,SD
)@@G@@RITE   . YES, CALCULATE DIFF BY ADDITION  @E@@@[       J     $+2        SE
)@@G@@ . AND TEST   ABS(ERR)-ABS(DIF)     @F@@@[       DFAN  LEFT,RITE   . DIFSF
)@@G@@ IS POS, SUBTRACT GIVES -ABS(DIF)   @F@@@[       TN    LEFT        . WASSG
)@@G@@ DIF.GT.ALLOWABLE ABSOLUTE ERROR?   @G@@@[       DSL   RITE,72     . NO,SH
)@@G@@ WITHIN ERROR. FORCE DIFFERENCE TO ZERO   @C@@@[       DSL   LEFT,72    SI
)@@G@@ . CLEAR OTHER ARG REG  @#@@@[       LIST .     @ @@@[       END        SJ
)@@G@@       .    @[@@@[.     @F@@@[.     TEST WHETHER CONTENTS OF A DOUBLE RESK
)@@G@@G WILL FIT IN A HALFWORD@[@@@[.     @#@@@[T      PROC .     @#@@@[THALFWSL
)@@G@@* NAME .    @#@@@[       UNLI$T .   @E@@@[       JNZ   T(1,1),NOGO . IF SM
)@@G@@OFLO INTO LEFT REG, NOT HALF  @E@@@[       LDSL  T(1,1),19   . OTHERWISESN
)@@G@@ ALIGH H1 AND SIGN OF H2@E@@@[       JNZ   T(1,1),NOBACK . IF ALL BITS NSO
)@@G@@OT THE SAME, QUIT @F@@@[       DSA   T(1,1),19   . ALL SAME, RESTORE SIGSP
)@@G@@NED ORIGINAL VALUE@C@@@[       J     NOGO+1      . TAKE SUCCESS EXIT    SQ
)@@G@@@E@@@[NOBACK DSA   T(1,1),19   . MISMATCH, RESTORE ORIGINAL VALUE @[@@@[SR
)@@G@@NOGO .@#@@@[       LI$T .     @]@@@[       END .@[@@@[.     @F@@@[A     SS
)@@G@@ PROC . CONDITIONAL FLOAT-- CHECKS SIZE OF DOUBLE INTEGERS  @#@@@[CFLOATST
)@@G@@* NAME .    @D@@@[       LA,U  A(1,1),02074. INITIALIZE FOR NORMAL FLOATSU
)@@G@@@#@@@[       UNLIST .   @F@@@[       JNZ   A(1,2),FLOAT . AND IF LEFT HASV
)@@G@@LF NON-ZERO, GO DO IT   @E@@@[       LDSL  A(1,2),19   . OTHERWISE, SPLISW
)@@G@@T SIGN FROM VALUE @E@@@[       JZ    A(1,2),HALF . IF STILL ZERO, MUST BSX
)@@G@@E HALFINT   @F@@@[       LA,U  A(1,1),02074-19 . IF NOT, PREPARE FOR SHISY
)@@G@@FTED FLOAT  @A@@@[FLOAT  DFP   A(1,1),A(1,2)  . FLOAT @A@@@[       J    SZ
)@@G@@ HALF+1      . AND EXIT @D@@@[HALF   DSA   A(1,2),19   . HALFINT-- RESTOTA
)@@G@@RE VALUE    @#@@@[       LIST .     @]@@@[       END .@[@@@[.     @C@@@[TB
)@@G@@I      PROC    . TEST A DFLOAT FOR HALFINT.     @G@@@[TESTIN* NAME   . WTC
)@@G@@ORKREG,WORD X .  IF SKIP, HALFINT IS IN WORKREG+1,2   @G@@@[    I$  076,TD
)@@G@@014,I(1,1)-A0,I(1,3),2*I(1,*3)+I(1,*2),I(1,2) .  DFU ARG    @#@@@[      TE
)@@G@@ UNLIST .   @D@@@[       DJZ   I(1,1)+1,NOSKIP+1  . IF ZERO, ITS HALFINTTF
)@@G@@@B@@@[       TLE,U I(1,1),02001 . PURE FRACTION?@C@@@[       J     NOSKITG
)@@G@@P      . YES, MUST BE DOUBLE  @F@@@[       TG,U  I(1,1),02022 . WILL INTTH
)@@G@@EGER PART FIT IN 17 BITS?     @B@@@[       J     NOSKIP      . NO--GOODBTI
)@@G@@YE    @E@@@[       LDSC  I(1,1)+1,1  . MAKE SURE NEXT TEST IS FOR +0    TJ
)@@G@@@G@@@[       JNZ   I(1,1)+2,NOSKIP  . YES- BE SURE LEAST SIGNIF PART IS TK
)@@G@@ZERO  @E@@@[       LNA   I(1,1),I(1,1)    . NEGATE EXPONENT FOR SHIFT   TL
)@@G@@@E@@@[       DSA   I(1,1)+1,02031,I(1,1) . ALIGN INTEGER PART     @G@@@[TM
)@@G@@       JNZ   I(1,1)+2,NOSKIP  . IF FRACT NOT CLEAR, GIVE UP RIGHT AWAY  TN
)@@G@@@E@@@[       LDSC  I(1,1)+1,1  . MAKE SURE NEXT TEST IS FOR +0    @F@@@[TO
)@@G@@       JNZ   I(1,1)+2,NOSKIP  . IF NONZERO FRACT, ITS  DOUBLE     @D@@@[TP
)@@G@@       DSA   I(1,1)+1,37      . SIGN EXTEND INTEGER   @^@@@[       J    TQ
)@@G@@ NOSKIP+1   @]@@@[NOSKIP .    @#@@@[       LIST .     @]@@@[       END .TR
)@@G@@@[@@@[/.    @[@@@[.     @F@@@[.     THIS PROC POPS AND DECODES THE TOP OTS
)@@G@@PERAND ON THE STACK     @F@@@[.     ARGUMENTS ARE ALL XFER LOCNS, I.E. LTT
)@@G@@OC1,LOC2,LOC3 , WHERE:  @A@@@[.         LOC1= EXIT IF STAKMARK    @F@@@[TU
)@@G@@.         LOC2,LOC3 = EXIT IF UNDEFINED- FOR STORE-TYPE ENTRIES,  @G@@@[TV
)@@G@@.                   LOC2 IS USED, ELSE LOC3.  OTHER FIELD NO LONGER USEDTW
)@@G@@@G@@@[.     IF A SECOND FIELD IS SUPPLIED, IT IS A POINTER TO A LOCN IN TX
)@@G@@WHICH @C@@@[.     THE (PACKED) DESCRIPTOR IS TO BE STORED   @[@@@[.     TY
)@@G@@@E@@@[.     IF THE STACK CONTAINS A STAKMARK, IT IS LEFT IN A6.   @E@@@[TZ
)@@G@@.     IF IT CONTAINS A DATUM, REGS ARE SET AS FOLLOWS--     @[@@@[.     UA
)@@G@@@D@@@[.       A0 -ABS ADR OF 1ST (PERHAPS ONLY) WORD OF DATA@E@@@[.     UB
)@@G@@  A1 -ABS ADR OF 1ST DATA VAL OF DIM VECTOR, IF ANY   @#@@@[.       A2 -UC
)@@G@@TYPE  @#@@@[.       A3 -MODE  @D@@@[.       A4 -RANK (ALSO=LENGTH OF DIMUD
)@@G@@VECT, IF ANY)     @G@@@[.       A5 -LENGTH OF DATUM (I.E. NO OF ELEMENTSUE
)@@G@@) OR VALUE, IF SCALHAFI @G@@@[.       A6 -RELATIVE ADDR OF DESCRIPTOR BLUF
)@@G@@OK (OR STACK ENTRY IF MARK)   @E@@@[.       A7 -RELATIVE ADDR OF DESCR BUG
)@@G@@LOK OF DIMVECT (IF ANY) @[@@@[.     @#@@@[V      PROC    .  @D@@@[VERIFYUH
)@@G@@* NAME  0     . POP AND REQUIRE DEFINED VAL     @G@@@[VERIFS* NAME  1   UI
)@@G@@  . POP AND FLAG UNDEF VAL BY EXIT THRU 2ND SUBFIELD  @C@@@[VERIFZ* NAMEUJ
)@@G@@  2     . NOPOP, REQUIRE DEFVAL     @F@@@[VERIFW* NAME  3     . NOPOP, AUK
)@@G@@LLOW UNDEFINED (AS IN STORE OPNS)   @^@@@[       UNLI$T       .   @F@@@[UL
)@@G@@VF$FLG EQU   1**V(0,0)   . TRUE IFF STORE ENTRY (NAME LINE ODD )  @C@@@[UM
)@@G@@       LA,U  A2,VF$FLG   . PICK UP STORE FLAG   @C@@@[       LA,U  A1,V(UN
)@@G@@0,0)<2 . SET STACKPOPPING FLAG@D@@@[       LMJ   A0,VERIF$   . GO TO DECUO
)@@G@@ODING SUBROUTINE  @D@@@[. THE NEXT INSTR IS EXECUTED BY AN 'EX' IN THE SUP
)@@G@@UBRTNE@F@@@[  DO V(2)>0 , I$ 071,012,02,V(2,2),2*V(2,*2)+V(2,*1),V(2,1) UQ
)@@G@@.     @E@@@[ DO V(2)<1 , NOP 0,0 . IT WILL STORE DESCR, IF SPECIFIED    UR
)@@G@@@C@@@[       J     V(1,1)      . STAKMARK EXIT  (1,A1)@G@@@[. NEXT WORD US
)@@G@@IS UNDEFINED VALUE EXIT, WHICH IS  FIELD2 FOR STORE-TYPE    @F@@@[. CALLUT
)@@G@@S, AND FIELD3 FOR OTHERS (HISTORICAL REASONS, SORRY).  THE  @B@@@[. OTHEUU
)@@G@@R FIELD (3 OR 2) IS NO LONGER USED. @C@@@[       J     V(1,3-VF$FLG)  . UV
)@@G@@          (2,A1)  @C@@@[       LI$T              . NORMAL EXIT IS (3,A1)UW
)@@G@@@ @@@[       END               .    @[@@@[.     @A@@@[. PROCS TO TEST ARUX
)@@G@@G MODES AND RANKS @[@@@[.     @F@@@[P      PROC    .    GENERAL:   RANK,UY
)@@G@@BAD   MODE1,MODE2,...,BADMODE @F@@@[JMRTST* NAME   .         WHERE RANK UZ
)@@G@@AND MODES ARE THOSE EXPECTED  @#@@@[       UNLI$T  .  @C@@@[       JE,U VA
)@@G@@ A5,1 JN0010 . LENGTH 1 ALWAYS GOOD @D@@@[       JNE,U A4,P(1,1) P(1,2) VB
)@@G@@. ELSE FORCE RANK CHECK @B@@@[JN0010 . TARGET FOR SUCCESSFUL RANK TEST  VC
)@@G@@@ @@@[. NOW DO MODE CHEX, IF ANY    @E@@@[ DO P(2)=0 , GO JN$010   . IF VD
)@@G@@NO MODES GIVEN, DON'T CHECK   @C@@@[       JZ    A5,JN0020   . NULLS CANVE
)@@G@@ BE ANY MODE@C@@@[NMODS  EQU   P(2)-1      . NO OF MODES SPECIFIED@G@@@[VF
)@@G@@ DO NMODS>1 ,K DO NMODS-1  , JE,U A3,P(2,K) JN0020 . ALL BUT LAST MODE  VG
)@@G@@@F@@@[       JNE,U A3,P(2,NMODS)  P(2,NMODS+1)     . CHECK LAST MODE    VH
)@@G@@@B@@@[JN0020 . TARGET FOR SUCCESSFUL MODE TESTS @#@@@[JN$010* NAME   .  VI
)@@G@@@#@@@[       LI$T    .  @#@@@[       END     .  @ @@@[/. GENERATE ERROR VJ
)@@G@@RETURNS     @[@@@[.     @^@@@[E      PROC . CODE,LOC  @#@@@[ERROR* NAME VK
)@@G@@.     @ @@@[       UNLI$T            .    @ @@@[       SLJ   ERPRNT     VL
)@@G@@ .    @ @@@[       +     E(1,1),E(1,2) .  @ @@@[       LI$T             VM
)@@G@@ .    @]@@@[       END .@D@@@[/.           PROC TO SETUP FORTRAN CALLINGVN
)@@G@@ SEQUENCE   @A@@@[.            WITH 1 OR 2 ARGUMENTS  @[@@@[.     @D@@@[VO
)@@G@@.     USAGE:   FCALL SUBNAM,WALKBK ARG1,ARG2...ARGN   @G@@@[.     NOTE**VP
)@@G@@** FCALL IS SPECIAL PROC FOR MATHRTNES, AND ASSUMES ARGS    @E@@@[.     VQ
)@@G@@ IN REGISTERS.  NORMAL FORTRAN TYPE CALLS USE SCALL.  @[@@@[.     @[@@@[VR
)@@G@@.     @ @@@[F      PROC              .    @ @@@[FCALL* NAME             VS
)@@G@@ .    @B@@@[NARGS  EQU   F(2)        . NUMBER OF ARGS @ @@@[       UNLI$VT
)@@G@@T            .    @E@@@[       DS    A4,F(2,NARGS)       . PUT LAST ARG VU
)@@G@@IN CALL SEQ @G@@@[       DO NARGS>1 , DS A1,F(2,1) . PUT FIRST ARG IN CAVV
)@@G@@LL SEQ, IF USED   @ @@@[       GO    FC$000      .    @G@@@[SCALL* NAME VW
)@@G@@             . ENTRY POINT FOR CALLS WITH THEIR ARGS ALREADY@D@@@[      VX
)@@G@@                   . STORED IN CALL SEQ LOCS    @B@@@[NARGS  EQU   F(2) VY
)@@G@@       . NUMBER OF ARGS @ @@@[       UNLI$T            .    @ @@@[FC$000VZ
)@@G@@* NAME             .    @D@@@[       LMJ   X11,F(1,1)  . GO TO FORTRAN SWA
)@@G@@UBROUTINE   @D@@@[L DO NARGS , +F(2,L) . GENERATE ARGUMENT POINTERS     WB
)@@G@@@B@@@[       +F(1,3),F(1,2) . WALKBACK WORD     @ @@@[       LI$T       WC
)@@G@@       .    @ @@@[       END               .    @E@@@[/.  CALL REP OR LMWD
)@@G@@J, DEPENDING UPON RE-ENTRANT MAP PARAMETER@[@@@[.     @G@@@[P      PROC WE
)@@G@@ .           CALL SEQ: CALREP,<BDINDEX>  XA,TARGET,TAG .    @#@@@[CALREPWF
)@@G@@* NAME   .  @#@@@[       UNLI$T .   @G@@[[ DO P(0)>1 , LXI,U P(1,1),P(0,WG
)@@G@@1) . IF GIVEN, FORCE BANK DESCR INDEX     @C @@[       LIJ   P(1,1),P(1,WH
)@@G@@2),P(1,3)  . AND CALL IT@#[@@[       LI$T .     @#@@@[       END     .  WI
)@@G@@@[@@@[.     @B@@@[P      PROC  . GET NUM IN HALFINT TO A2   @B@@@[GHFINTWJ
)@@G@@* NAME . PARAM I LINKREG (X4 OR X6) @ @@@[       UNLI$T            .    WK
)@@G@@@D@@@[ALEFT  EQU   A1+3*(P(1,1)=X6) . RESULT REG IS A1 OR A4@A@@@[      WL
)@@G@@ LMJ   P(1,1),0,P(1,1)  .     @D@@@[       JZ    ALEFT,DUN   . IF HALFINWM
)@@G@@T, WE'RE DONE     @#@@@[. DFLOAT RESULT   @ @@@[ DO P(1,1)=X4 , DL A4,A1WN
)@@G@@ .    @ @@@[       FUZZDN            .    @C@@@[       JNZ   A1,P(2,1)  WO
)@@G@@ . IF CAN'T FIX, DIE    @ @@@[ DO P(1,1)=X6 , J OUT    .    @]@@@[DUN   WP
)@@G@@ .    @ @@@[ DO P(1,1)=X6 , DL A1,A4 .    @]@@@[OUT    .    @C@@@[ DO P(WQ
)@@G@@1)>1 , SA A2,P(1,2) . POST THE PARAM VALUE@#@@@[       LI$T  .    @#@@@[WR
)@@G@@       END   .    ___E  @F@@@[       JNE,U A3,P(2,NMODS)  P(2,NMODS+1)  WS
)@@G@@   . CHECK LAST MODE    @B@@@[JN0020 . TARGET FOR SUCCESSFUL MODE TESTS WT
)@@G@@*[S@@@*SDFF*@F@@@[/. THIS PROC DEFINES THE INTERNAL CONTROL BLOCKS USED WU
)@@G@@BY APL--    @]@@@[       DEF  @E@@@[.     FOR EACH BLOCK, S1 OF 1ST WD=BWV
)@@G@@LOCK TYPE AS FOLLOWS--  @F@@@[ZTPNAM EQU 1 . NAME BLOCK (CONTAINS SYMBOLWW
)@@G@@IC VARIABLE/FN NAME)    @D@@@[ZTPLIT EQU 2 . DESCRIPTOR BLOCK, LITERAL CWX
)@@G@@ONSTANT     @E@@@[ZTPDIM EQU   3 . DIMENSION VECTOR (SPECIFIES ARRAY SHAWY
)@@G@@PES)  @C@@@[ZTPVAR EQU 4 . DESCRIPTOR BLOCK, NAMED VARIABLE @E@@@[ZTPTMPWZ
)@@G@@ EQU 5 . DESCRIPTOR BLOCK, COMPILER DEFINED TEMPORARY @D@@@[ZTPFUN EQU 6XA
)@@G@@ . FUNCTION BLOCK, USER DEFINED FUNCTION  @E@@@[ZTPSTA EQU 7 . STACK BLOXB
)@@G@@CK, USED WHEN STACK OVERFLOWS R-REGS@D@@@[ZTPTXT EQU   010         . TEXXC
)@@G@@T (LEXICALL POINTERS)   @B@@@[ZTPCOD EQU   011         . CODE (COMPILED)XD
)@@G@@@C@@@[ZTPFTB EQU   012         . CLOSED FUNC TABLE    @E@@@[ZTPSEC EQU  XE
)@@G@@ 013         . SYMBOL TABLE SECONDARY ENTRIES   @E@@@[ZTPNMP EQU 014 . NXF
)@@G@@AME BLOK FOR IMPLICITLY NAMED PLEX ELEMENT@G@@[[ZTPNFD EQU   076        XG
)@@G@@ . BLOC TYPE FOR OBJECTS NOT FOUND BY ')COPY'   @[@@@[.     @F@@@[.     XH
)@@G@@S2 OF DESCRIPTOR BLOX INDICATES MODE OF DATA AS FOLLOWS--   @G@@@[ZMONULXI
)@@G@@ EQU   0           . ENTRY NULL (I.E. PGM ERROR, EMPTY STACK, ETC)@F@@@[XJ
)@@G@@ZMOUNK EQU   1           . UNKNOWN (UNINITIALIZED NAMED VARIABLE) @G@@@[XK
)@@G@@ZMOCHR EQU   2           . CHARACTER MODE (NOTE: IF CHAR, ALWAYS VECTOR)XL
)@@G@@@D@@@[ZMOLGL EQU   3           . LOGICAL (I.E. BIT-STRING)  @B@@@[ZMOHFIXM
)@@G@@ EQU   4           . HALF-INTEGER   @A@@@[ZMOINT EQU   5           . INTXN
)@@G@@EGER  @E@@@[ZMODFL EQU   7           . DOUBLE PRECISION FLOATING POINT  XO
)@@G@@@F@@@[ZMODFI EQU   8           . FLAG FOR FLOATING TO INT CONVERSION    XP
)@@G@@@D@@@[ZMOMIX EQU   9           . FLAG FOR MIXED OPERANDS    @C@@@[ZMOPTRXQ
)@@G@@ EQU 10            . POINTER VARIABLE     @F@@@[ZMOMAX EQU 10           XR
)@@G@@ . MAX MODE VAL (USED TO GENERATE TABLES) @E@@@[.     S3 OF DESCRIPTOR IXS
)@@G@@NDICATES RANK, I.E. RHO(RHO(X))     @A@@@[ZRANKS EQU   0           . SCAXT
)@@G@@LAR   @A@@@[ZRANKV EQU   1           . VECTOR   @G@@@[.                 XU
)@@G@@       . OTHER RANKS (MATRIX, ETC) DEFINED DYNAMICALLY@#@@@[. BLOCK FORMXV
)@@G@@ATS-- @G@@@[.                :     WORD1       :    WORD2        :   WORXW
)@@G@@D3       :  @G@@@[.     TYPE       : S1 S2 S3   H2   : S1 S2 S3   H2   :XX
)@@G@@   H1     H2   :  @G@@@[. LIT DESCRIPTS--:                 :            XY
)@@G@@     :               :  @G@@@[.   SCAL INT     : TP MO RA IMDATA :      XZ
)@@G@@           :               :  @G@@@[.   SCAL FLOAT   : 02 MO RA        :YA
)@@G@@ LEFT HALF DATA  : RITE 1/2 DATA :  @G@@@[.   VECT (ANY)   : 02 MO RA LEYB
)@@G@@NGTH : ...  DATA  ...  : ... DATA ...  :  @G@@@[. NAMED VBL DSCR-:      YC
)@@G@@           :                 :               :  @G@@@[.   SCAL INT/BIT :YD
)@@G@@ TP MO RA IMVALU :                 : FLEVEL NEXTDS :  @G@@@[.   SCAL REAYE
)@@G@@L    : TP MO RA DATADR :                 : FLEVEL NEXTDS :  @G@@@[.   VEYF
)@@G@@CT (ALL)   : 04 MO RA LENGTH :          DATADR : FLEVEL NEXTDS :  @G@@@[YG
)@@G@@.   ARRAY (ALL)  : TP MO RA LENGTH :  DIMVAD  DATADR : FLEVEL NEXTDS :  YH
)@@G@@@G@@@[. PRIM NAME BLOK : 01 *NCHR FWDSTL :  REFCNT  NEXTDS : FIRST 4 CHAYI
)@@G@@RS :  @G@@@[. SEC NAME BLOCK :013 ----- FWDSTL : 4 CHARS OF NAME : MORE YJ
)@@G@@OF NAME  :  @G@@@[. FUNCT BLOCK    : TP VF NA NLINES : LF       TBLADR :YK
)@@G@@ LASTDS OPNADR :  @[@@@[.     @]@@@[. WHERE--   @^@@@[.  TP     = BLOCK YL
)@@G@@TYPE  @^@@@[.  MO     = MODE OF DATA@#@@@[.  RA     = RANK  @D@@@[.  IMDYM
)@@G@@ATA = IMMEDIATE DATA VALUE OF SPECIFIED DATUM   @D@@@[.  DATADR = WORKSPYN
)@@G@@ ADDR OF 1ST DATA WORD OF THIS DATUM@C@@@[.  LENGTH = TOTAL NO OF ELEMENYO
)@@G@@TS, I.E. +/,RHO(X)@G@@@[.  FLEVEL = FUNCT CALL LEVEL AT WHICH THIS VALUEYP
)@@G@@ IS DEFINED (0=GLOBAL)  @G@@@[.  NEXTDS = POINTER TO NEXT DESCRIPTOR, PUYQ
)@@G@@SH DOWN SYMBOL DEFINITIONS    @C@@@[.  DIMVAD = ADDR OF DESCRIPTOR BLOK YR
)@@G@@OF DIMVETOR @F@@@[.  NCHR   =TOTAL NO OF CHARS IN THIS NAME (NOTE-- USESYS
)@@G@@ ***Q2***)  @G@@@[.  FWDSTL =FOWARD SYMBOL TABLE LINK TO NEXT 2NDARY ENTYT
)@@G@@RY FOR THIS NAME  @F@@@[.  REFCNT =NO OF TIMES THIS NAME IS REFERENCED IYU
)@@G@@N LEXICAL TEXT    @E@@@[.  VF     = RESULT FLAG (0=UNVALUED FUNC, 1=VALUYV
)@@G@@ED FUNC)    @D@@@[.  NA     = NO OF FUNC ARGS (0=NONAD,1=MONAD,2=DYAD)  YW
)@@G@@@G@@@[.  NLINES = NO OF LINES IN THIS FUNC (INCLUDING LINE ZERO/FUNC HEAYX
)@@G@@DER)  @D@@@[.  LF     = LOCK FLAG (NON-ZERO IF DEFN IS LOCKED)    @C@@@[YY
)@@G@@.  TBLADR = ADDR OF LINENO TABLE (CLOSED FUNCS) @D@@@[.  OPNADR = CHAIN YZ
)@@G@@TO 1ST BLOK OF OPEN FUNC TABLES     @[@@@[.     @G@@@[.     FLAGS STOREDZA
)@@G@@ IN 1ST OCTAL DIGIT OF LEXICALLY ANALYZED TEXT WHICH  @A@@@[. INDICATE TZB
)@@G@@YPE OF TEXT ENTRY--     @[@@@[.     @E@@@[LEXOPR EQU   0 . PRIMITIVE OPRZC
)@@G@@ (REMAINDER OF WD=OPCODE)     @G@@@[LEXLIT EQU   1 . LIT CONST FOLLOWS (ZD
)@@G@@REST OF ENTRY=NO OF WDS USED BY LIT)@G@@@[LEXNAM EQU   2 . OPERAND/FUNC ZE
)@@G@@NAME (REST OF ENTRY=SYMBOL TABLE ADDR)    @A@@@[LEXSTP EQU   3 . STOPVECZF
)@@G@@TOR NAME    @A@@@[LEXTRC EQU   4 . TRACEVECTOR NAME   @[@@@[.     @]@@@[ZG
)@@G@@C     PROC .@D@@@[CBLOCK* NAME . S1,S2,S3,H2  S1,S2,S3,H2  H1,H2  .     ZH
)@@G@@@^@@@[CB    FORM 6,6,6,18 .   @C@@@[ DO C(1)>0 , CB C(1,1),C(1,2),C(1,3)ZI
)@@G@@,C(1,4) .   @^@@@[ DO C(1)>0 , UNLIST .   @C@@@[ DO C(2)>0 , CB C(2,1),CZJ
)@@G@@(2,2),C(2,3),C(2,4) .   @ @@@[ DO C(3)>0 , +C(1,3),C(2,3) . @^@@@[ DO C(ZK
)@@G@@1)>0 , LIST .     @]@@@[      END . @[@@@[/.    @C@@@[.  DEFS OF VALS ANZL
)@@G@@D LOCNS IN STATEVECTOR....    @E@@@[       DEF               . VALUES BEZM
)@@G@@LOW ARE KEPT IN 'STVCUR'@ @@@[STSUSP EQU   0 . SUSPENDED    @A@@@[STFUNCZN
)@@G@@ EQU   1 . IN FUNC DEF MODE   @B@@@[STFUNX EQU   2 . EXECUTING A USER FUZO
)@@G@@NCTION@B@@@[STEVAL EQU   3 . ACCEPTING EVALUATED INPUT@C@@@[STUNQU EQU  ZP
)@@G@@ 4 . PROCESSING AN UNQUOTED LINE    @[@@@[.     @#@@@[S      PROC .     ZQ
)@@G@@@B@@@[STATEV* NAME . DEFINE LOCS IN STATEVECTOR @[@@@[.     @C@@@[.     ZR
)@@G@@        ***** STATEVECTOR LAYOUT *****    @B@@@[.              .........ZS
)@@G@@..............    @B@@@[. STATEV       : CUR : DPT :  CHAIN  :    @B@@@[ZT
)@@G@@. STATEV+1     :  STMNTNO  : INSTCTR :    @B@@@[. STATEV+2     :  COMCODZU
)@@G@@E  : LEXTEXT :    @B@@@[. STATEV+3     : FNAM/UQDS : FUNDESC :    @B@@@[ZV
)@@G@@. STATEV+4     :  FUNLINS  : FUNTABL :    @B@@@[. STATEV+5     :  STAKFLZW
)@@G@@G  : S : T:  :    @B@@@[.              .......................    @[@@@[ZX
)@@G@@.     @E@@@[. WORDS STATEV+5,6 AND 7 ARE RESERVED FOR FUTURE EXPANSION  ZY
)@@G@@@[@@@[.     @G@@@[STVCUR* EQUF WSTATE,,Q1   . CUR    = CURRENT STATE (PEZZ
)@@G@@R 'DEF'S ABOVE)   @G@@@[STVDPT* EQUF WSTATE,,Q2   . DPT    = CURRENT DEPAA
)@@G@@TH OF FUNCTION NESTING  @F@@@[STVCHN* EQUF WSTATE,,H2   . CHAIN  = LINK AB
)@@G@@TO PREVIOUS STATEBLOK   @F@@@[STVSTN* EQUF WSTATE+1,,H1 . STMNTNO= CURREAC
)@@G@@NT STATENT NO (IBEAM 26)@F@@@[STVICT* EQUF WSTATE+1,,H2 . INSTCTR=CURRENAD
)@@G@@T IC (WITHIN STMNT)     @F@@@[STVCCL* EQUF WSTATE+2,,H1 . COMCODE=COMPILAE
)@@G@@ED CODE LEFT WD ADDR    @G@@@[STVLXT* EQUF WSTATE+2,,H2 . LEXTEXT= ADDR AF
)@@G@@OF LEXICAL TEXT (CURRENT STMT)@G@@@[STVFNN* EQUF WSTATE+3,,H1 . FNAM/UQ=AG
)@@G@@ ADD OF FN NAMBLOK/UNQOUTED DESCR   @F@@@[STVFND* EQUF WSTATE+3,,H2 . FUAH
)@@G@@NDSC = ADDR OF CURRENT FUNC DESCR   @F@@@[STVFNL* EQUF WSTATE+4,,H1 . FUAI
)@@G@@NLINS= NO OF LINES IN THIS FUNC     @E@@@[STVFTA* EQUF WSTATE+4,,H2 . FUAJ
)@@G@@NTBL=ADDR OF FUNCTION TABLE   @G@@@[STVSTK* EQUF WSTATE+5,,H1 . STAKFLAGAK
)@@G@@-- NON-ZERO IF ANYTHING IS STACKED  @D@@@[STVSTP* EQUF WSTATE+5,,S4 . S AL
)@@G@@     = STOPVECTOR FLAG  @D@@@[STVTRC* EQUF WSTATE+5,,S5 . T      =TRACEVAM
)@@G@@ECTOR FLAG  @[@@@[.     @]@@@[       END .___   @[@@@[.     @E@@@[LEXOPRAN
)@@G@@*[S@@@*SDFF*@F@@@[/.    ASSEMBLY-TIME CONFIGURATION PARAMETERS AND PROCSAO
)@@G@@ FOR APL--  @[@@@[.     @#@@@[       DEF     .  @[#@@[.     @D@@@[. PARAAP
)@@G@@METERS WHICH AFFECT THE APL LANGUAGE ITSELF     @[@@@[.     @G@@@[MAXSUBAQ
)@@G@@ EQU 63  . MAX NO OF SUBSCRIPTS ALLOWED.  SINCE ONLY A SIXTH WORD @G@@@[AR
)@@G@@               . IS DEFINED IN DESCRIPTORS FOR RANK, THIS CANNOT EXCEED AS
)@@G@@@C@@@[               . 63, BUT IT COULD BE SMALLER    @G@@@[MAXNAM EQU  AT
)@@G@@ 76          . MAX NO OF CHARS IN A VARIABLE OR FUNC NAME   @[@@@[.     AU
)@@G@@@G@@@[MXCNTG EQU   9 . MAX NO OF 'SYSTEM ERROR' TYPE CONTINGENCIES ALLOWAV
)@@G@@ED    @G@@@[               . BEFORE TOTAL COLLAPSE (ER EABT$) OF APL.  TAW
)@@G@@HIS VALUE   @G@@@[               . IS USED TO GUARD AGAINST THE POSSIBILAX
)@@G@@ITY OF LOOPS INTO @G@@@[               . AND OUT OF THE CONTINGENCY ROUTAY
)@@G@@INE CAUSED BY IOPR'S    @C@@@[.              . AND IGDM'S IN STRANGE PLAAZ
)@@G@@CES.  @[@@@[.     @#@@[[CONFIG* PROC   .  @]I@@[       END. ___@@@@@@@@@BA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BB
)@@G@@*[S@@@*SDFF*@[@@@[.     @A@@@[.  DYNAMIC STORAGE ALLOCATION PROX  @[@@@[BC
)@@G@@.     @G@@@[P      PROC .      ALLOCATE A BLOCK (X11,A0,A1,R1 ARE USED),BD
)@@G@@ LOC TO A1  @F@@[[ALLOCT* NAME   BALLOC         . ENTRY FOR TEMPORARY ALBE
)@@G@@LOCATIONS   @E@@[[ALGLOB* NAME   BALLOG         . ENTRY FOR GLOBAL ALLOCBF
)@@G@@ATIONS@#@@[[        UNLI$T .  @G[@@[             .       OR   ALLOCT,J  BG
)@@G@@LOC,TAG(,J) WSFULL (IF A0 NOT SET)  @E@@@[N      EQU   P-1         . FIEBH
)@@G@@LD NO OF WSFULL SPECIFICATION @G@@@[ DO N>1 , I$ 010,P(0,1)+P(1,3),00,P(BI
)@@G@@1,2),2*P(1,*2)+P(1,*1),P(1,1) . LA0 @E@@[[        LMJ    X11,P(0,0)     BJ
)@@G@@. CALL ALLOCATION SUBROUTINE  @F#@@[ I$ 074,04,00,P(N,2),2*P(N,*2)+P(N,*BK
)@@G@@1),P(N,1) . JUMP IF WS IS FULL@#@@[[        LI$T   .  @ [@@[       END. BL
)@@G@@             .    @[@@@[.     @E@@@[P      PROC .      FREE A BLOCK (X11BM
)@@G@@,A0,A1,R1 ARE USED)     @G@@@[FREE*  NAME .     TO USE, LOAD A0 WITH SIZBN
)@@G@@E, A1 WITH LOCATION OF BLOK   @ @@@[       LMJ   X11,BLFREE  .    @]@@@[BO
)@@G@@       END .@F@@@[/. THE FOLLOWING PROCS ARE DESIGNED TO ALLOW A REASONABP
)@@G@@BLY ORDERLY @G@@@[. TRANSITION BETWEEN THE PRESENT METHOD OF STORAGE ALLBQ
)@@G@@OCATION, AND THE  @C@@@[. SYSTEM USED BY APL/360, WHICH IS MUCH SLICKER.BR
)@@G@@@[@@@[.     @G@@@[S      PROC  . UNLINK LARGEST BLOCK; POST ITS LIMITS FBS
)@@G@@OR NEW ALLOCATION @#@@@[UNLNKL* NAME .    @#@@@[       UNLI$T .   @F@@[[BT
)@@G@@        LMJ    X11,BALARG     . UNLINK LARGEST AVAILABLE BLOCK    @#I@@[BU
)@@G@@       LI$T .     @]@@@[       END .@[@@@[.     @G@@@[. ALLOCATE SPACE FBV
)@@G@@ROM THE POOLED BLOCK, AND RETURN THE UNUSED PART TO   @B@@@[. THE NORMALBW
)@@G@@ LIST OF AVAILABLE STORAGE    @[@@@[.     @E@@@[A      PROC    . ASSUME BX
)@@G@@A0 = NO OF WORDS TO BE ALLOCATED    @F@@@[ALOCTB* NAME 0           . ALLBY
)@@G@@OCATE FROM BOTTOM OF POOLED BLOCK   @E@@@[ALOCTT* NAME 1           . ALLBZ
)@@G@@OCATE FROM TOP OF POOLED BLOCK@#@@@[       UNLI$T .   @E@@@[       LA   CA
)@@G@@ A1,WSFFWA   . 1ST WORD ADDR OF POOLED BLOCK    @E@@@[       LA    A2,WSCB
)@@G@@FLWA   . LAST WORD ADDR OF POOLED BLOCK   @G@@@[. COMPUTE LOWER AND UPPECC
)@@G@@R LIMITS OF BLOK TO BE CHAINED ON FREE LIST     @G@@@[ DO 1-A(0,0) , AA CD
)@@G@@A1,A0  . ALLOCATING FROM BOTTOM, BUMP LOWER ADDRESS   @G@@@[ DO A(0,0) ,CE
)@@G@@ ANA A2,A0   . ALLOCATING FROM TOP, DECREMENT UPPER ADDR    @G@@@[ DO A(CF
)@@G@@0,0) , AA,U A2,1   . AND THEN BUMP TO ADDR OF 1ST WD BEING FREED  @E@@@[CG
)@@G@@       LA,U  A0,1,A2     . BUMP HI ADDR OF BLOK BEING FREED @G@@@[      CH
)@@G@@ ANA   A0,A1       . LESS LOW ADDR GIVES NO OF WDS TO PUT BACK    @D@@@[CI
)@@G@@       JN    A0,A(1,1)   . IF NEGATIVE, SYSTEM ERROR  @E@@@[       JZ   CJ
)@@G@@ A0,CLEAR    . IF NO WDS LEFT, DON'T TRY TO FREE@F@@@[       FREE       CK
)@@G@@       . PUT UNUSED SPACE ON REGULAR FREE LIST  @B@@@[CLEAR  SZ    WSFFWCL
)@@G@@A      . CLEAR POINTERS @ @@@[       SZ    WSFLWA      .    @#@@@[      CM
)@@G@@ LI$T .     @]@@@[       END .___FF*@[@@@[.     @A@@@[.  DYNAMIC STORAGECN
)@@G@@ ALLOCATION PROX  @[@@@[.     @G@@@[P      PROC .      ALLOCATE A BLOCK CO
)@@G@@(X11,A0,A1,R1 ARE USED), LOC TO A1  @F@@[[ALLOCT*[S@@@*SDFF*@F@@@[/. THECP
)@@G@@SE PROCS GIVE A SET OF JUMPS WHICH ACT LIKE THE TEST INSTRS @D@@@[P     CQ
)@@G@@ PROC . OP(,J) AREG,UTEST,UTAG(,J) DEST,DTAG    @A@@@[JE*    NAME  053  CR
)@@G@@ . OPCODE IS:TNE  @A@@@[JNE*   NAME  052   .           TE   @A@@@[JG*   CS
)@@G@@ NAME  054   .           TNG  @A@@@[JNG*   NAME  055   .           TG   CT
)@@G@@@A@@@[JLE*   NAME  055   .           TG   @A@@@[JW*    NAME  057   .    CU
)@@G@@       TNW  @A@@@[JNW*   NAME  056   .           TW   @A@@@[JOP*   NAME CV
)@@G@@ 044   .           TEP  @A@@@[JEP*   NAME  045   .           TOP  @ @@@[CW
)@@G@@. GENERATE TEST INSTRUCTION   @#@@@[       UNLI$T .   @G@@@[ I$ P(0,0),PCX
)@@G@@(0,1)+P(1,4),P(1,1)-12,P(1,3),2*P(1,*3)+P(1,*2),P(1,2) .    @F@@@[ I$ 07CY
)@@G@@4,04,0,P(2,2),2*P(2,*2)+P(2,*1),P(2,1) . JUMP IF TEST FAILS @#@@@[      CZ
)@@G@@ LI$T .     @]@@@[       END .@[@@@[.     @ @@@[P      PROC . OP REG,DESDA
)@@G@@T,TAG @A@@@[JNGD*  NAME  070   . OPCODE IS: JGD @ @@@[I      FORM  6,1,7DB
)@@G@@,4,2,16 .   @#@@@[       UNLI$T .   @B@@@[       I     P(0,0),0,P(1,1),0DC
)@@G@@,0,$+2  .   @D@@@[       I$    074,04,0,P(1,3),2*P(1,*3)+P(1,*2),P(1,2) DD
)@@G@@@#@@@[       LI$T .     @]@@@[       END .@[@@@[.     @D@@@[P      PROC DE
)@@G@@.      ***** COMPUTED JUMP PROC ********  @[@@@[.     @F@@@[. THIS JUMP DF
)@@G@@ACTS LIKE A COMPUTED GO TO.  THE FIRST FIELD SPECIFIES@F@@@[. THE AREG TDG
)@@G@@O BE JUMPED ON, AND A NOHIT EXIT.  SUBSEQUENT PAIRS   @G@@@[. GIVE A VALDH
)@@G@@UE, AND A CORRESPONDING JUMP DESTINATION.  IF THE REG IS    @G@@@[. NOT DI
)@@G@@ONE OF THE SPECIFIED VALUES, THE PROGRAM WILL JUMP TO THE NOHIT . @F@@@[DJ
)@@G@@. I.E. USAGE IS: COMJMP AREG,NOHIT VAL1,DEST1 VAL2,DEST2 ...ETC.  @G@@@[DK
)@@G@@. IF NOHIT CONDITION IS AN ERROR, THEN NOHIT ADDR MAY BE OMITTED, WHICH DL
)@@G@@@G@@@[. WILL THEN CAUSE AN IGDM BY JUMPING TO ZERO WHEN (IF) THE ERROR ODM
)@@G@@CCURS @[@@@[.     @#@@@[COMJMP* NAME 1 .  @#@@@[JMPTBL* NAME 0 .  @[@@@[DN
)@@G@@.     @#@@@[       UNLI$T .   @B@@@[. FIND MIN, MAX AND DISPLACEMENT VALDO
)@@G@@UES---@[@@@[.     @B@@@[NTAGS  EQU   P-2         . NO OF TAGS     @C@@@[DP
)@@G@@VMIN(1) EQU  P(2,1)*P(0,0) . INITIALIZE MIN VAL @G@@@[ DO P(0,0) ,K DO NDQ
)@@G@@TAGS , DO P(K+1,1)<VMIN(1) ,VMIN(1) EQU P(K+1,1) .    @B@@@[K DO NTAGS ,DR
)@@G@@DISP(K) EQU P(K+1,1)-VMIN(1) .@D@@@[DMAX(1) EQU  DISP(1)     . INITIALIZDS
)@@G@@E MAX DISPLACEMENT@D@@@[K DO NTAGS , DO DISP(K)>DMAX(1) ,DMAX(1) EQU DISDT
)@@G@@P(K) .@ @@@[VMAX(1) EQU DMAX(1)+VMIN(1) . @^@@@[NJUMPS EQU  DMAX(1)+1 . DU
)@@G@@@E@@@[. NOW GENERATE TESTS FOR VALID ARGS, AND THE ACTUAL JUMP    @E@@@[DV
)@@G@@ DO P(0,0)=0 , GO C$JP01 . IF MAKING A JUMPTABLE, DON'T TEST@D@@@[      DW
)@@G@@ TG,XU P(1,1),VMIN(1) . IS MIN VAL .GT. REG?    @E@@@[       TG,XU P(1,1DX
)@@G@@),VMAX(1)+1 . NO, IS MAX VAL .GE. REG?    @E@@@[       J     P(1,2)     DY
)@@G@@ . ARG NOT IN TABLE, GO TO NOHIT    @D@@@[       J     $+1-VMIN(1),P(1,1DZ
)@@G@@) . JUMP INTO THE TABLE @#@@@[C$JP01* NAME .    @F@@@[. IN CASE NOT ALL EA
)@@G@@VALUES ARE GIVEN, MAKE A TABLE FULL OF NOHITS-- @C@@@[ORG    EQU   $ .  EB
)@@G@@       MARK BEGINNING OF TABLE@D@@@[NOHIT  EQU   P(0,0)+1    . SET SUBFIEC
)@@G@@ELD OF NOHIT JUMP @ @@@[       J     P(1,NOHIT) .     @E@@@[K DO NJUMPS-ED
)@@G@@1 , J P(1,NOHIT) . FILL ENTIRE TABLE WITH NOHITS@B@@@[FINI   EQU   $ .  EE
)@@G@@       MARK END OF TABLE@F@@@[. NOW ZAP THE ERROR JUMPS BY OVERLAYING WIEF
)@@G@@TH CORRECT JUMPS ---    @#@@@[O      PROC .     @#@@@[OLAY*  NAME .     EG
)@@G@@@B@@@[       RES   ORG+DISP(K)-$ . SET LOC CTR  @D@@@[       J     P(K+1EH
)@@G@@,2)    . GENERATE THE CORRECT JUMP  @]@@@[       END .@^@@@[K DO NTAGS ,EI
)@@G@@ OLAY .     @D@@@[       RES   FINI-$      . RESET LC FOR PROPER END    EJ
)@@G@@@#@@@[       LI$T .     @]@@@[       END .@[@@@[.     @ @@@[.  CONVERT TEK
)@@G@@O DOUBLE FLOATING @#@@@[F      PROC .     @ @@@[DFLOAT* NAME .      AREGEL
)@@G@@,U,TAG@#@@@[       UNLI$T .   @ @@@[       LA,U  F(1,1),02074    .@E@@@[EM
)@@G@@ I$   076,015,F(1,1)-12,F(1,3),2*F(1,*3)+F(1,*2),F(1,2) .   @#@@@[      EN
)@@G@@ LI$T .     @]@@@[       END .@A@@@[/. MULTIPLE REGISTER SAVE AND LOAD  EO
)@@G@@@[@@@[.     @G@@@[. FOR EACH CONTIGUOUS GROUP OF REGS TO BE SAVED, USE 1EP
)@@G@@ FIELD OF THE     @C@@@[. FORM:  1STREG,1STCORELOCN, NUMBER OF REGS     EQ
)@@G@@@[@@@[.     @#@@@[P      PROC  .    @ @@@[SAVER* NAME  0           .    ER
)@@G@@@ @@@[LOADR* NAME  1           .    @C@@@[       PROC  . THIS PROC HANDLES
)@@G@@ES A SINGLE FIELD @#@@@[SFLD*  NAME  .    @C@@@[M(1)   EQU   P(K,1)     ET
)@@G@@ . FIRST REG TO SAVE    @C@@@[C(1)   EQU   P(K,2)      . 1ST CORE LOCN TEU
)@@G@@O USE @C@@@[N(1)   EQU   P(K,3)      . NO OF REGS TO SAVE   @G@@@[ DO (MEV
)@@G@@(1)>(R1-1))++((M(1)+N(1))<A1) , GO S$FLD1 . TEST FOR A REGISTERS  @G@@@[EW
)@@G@@ND     EQU   N(1)/2      . NO OF AREGS TO SAVE USING DOUBLEWORD INSTRUCTEX
)@@G@@@E@@@[ DO 1-P(0,0) ,I DO ND    , DS M(1)+2*(I-1),C(1)+2*(I-1) .   @E@@@[EY
)@@G@@ DO   P(0,0) ,I DO ND    , DL M(1)+2*(I-1),C(1)+2*(I-1) .   @E@@@[M(1)  EZ
)@@G@@ EQU   M(1)+2*ND        . UPDATE NEXT REG TO BE SAVED @E@@@[N(1)   EQU  FA
)@@G@@ N(1)-2*ND        . AND NO REGS LEFT TO BE SAVED@F@@@[C(1)   EQU   C(1)+FB
)@@G@@2*ND        . UPDATE NEXT CORE LOCN TO BE USED  @#@@@[S$FLD1* NAME .    FC
)@@G@@@C@@@[ DO 1-P(0,0) ,I DO N(1) , S M(1)+I-1,C(1)+I-1 . @C@@@[ DO   P(0,0)FD
)@@G@@ ,I DO N(1) , L M(1)+I-1,C(1)+I-1 . @[@@@[.     @E@@@[       END   . OF FE
)@@G@@INTERNAL PROC TO HANDLE A SINGLE FIELD    @E@@@[. NOW GENERATE THE ACTUAFF
)@@G@@L CODE BY DOING OVER ALL FIELDS     @ @@@[       UNLI$T            .    FG
)@@G@@@#@@@[K DO P-1 , SFLD . @#@@@[       LI$T  .    @#@@@[       END   .    FH
)@@G@@@B@@@[/.    GLOBAL ASSEMBLY CONTROL PROCS--     @[@@@[.     @[@@@[.     FI
)@@G@@@B@@@[. STD LOCN CTRS FOR RE-ENTRANT PROCESSORS @[@@@[.     @#@@[[      FJ
)@@G@@  DEF    .  @G@@[[MCINFO  EQU    6              . DEFINE LOC CTR FOR MASFK
)@@G@@T CONS COM BLOK   @G@@[[ININFO  EQU    8              . DITTO FOR INITIAFL
)@@G@@LIZATION COMMON BLOCK   @C@@@[I      PROC         . LOC CTR PROX FOR REPFM
)@@G@@S     @B@@@[INSTRS* NAME  1     . INSTRS IN I-BANK    @C@@@[CONSTS* NAMEFN
)@@G@@  3     . CONSTANTS IN I-BANK, TOO .@B@@@[VARBLS* NAME  4     . VARIABLEFO
)@@G@@S IN D-BANK @G@@@[VARCON* NAME  0     . DITTO FOR VARIABLES WHICH HAVE IFP
)@@G@@NITIAL VALUES     @A@@[[MASTER* NAME   MCINFO         .     @A@@[[INITALFQ
)@@G@@* NAME   ININFO         .     @E@@@[$(5)    LIT         . THE LITERAL POFR
)@@G@@OL IS ALSO IN THE I-BANK@E@@[[ DO I(0,0)>5 ,$(I(0,0)) LIT . EXCEPT FOR DFS
)@@G@@ISPOSABLE CODE    @D@@@[$(I(0,0)) .         SET LC FOR WHATEVER FOLLOWS FT
)@@G@@.     @]@@@[       END .@[@@@[.     @G@@@[.     UNLIST/LIST CONTROL FOR FU
)@@G@@NESTED PROC CALLS. LOCN CTR 20 IS USED    @G@@@[.     TO COUNT RECURSIONFV
)@@G@@ LEVELS SO ONLY PROG LEVEL CODE WILL PRINT .    @F@@@[.     THE PROCS UNFW
)@@G@@LI$T AND LI$T MUST BE USED IN MATCHED PAIRS .   @[@@@[.     @#@@@[      FX
)@@G@@ PROC .     @#@@@[UNLI$T* NAME .    @^@@@[$(20),BUMPIT* PROC .    @E@@@[FY
)@@G@@LEVEL  EQU   $           . SAVE CURRENT RECURSION LEVEL     @G@@@[ DO LEFZ
)@@G@@VEL=0 , LIST . AT PROG LEV, LET DUMMY WD PRINT (BOTH ASM PASSES)  @G@@@[GA
)@@G@@       RES BUMPIT(1,1)-$ . SET LC TO SAME AS CALLING LOC FOR IDENT USAGEGB
)@@G@@@E@@@[       +0      . DUMMY WORD TO FORCE PRINT OF PROC CALL LINE@D@@@[GC
)@@G@@       RES   LEVEL+1-$   . INCREMENT LEVEL COUNTER    @]@@@[       END .GD
)@@G@@@F@@@[       BUMPIT $ . BUMP RECURSION LEVEL COUNT, PRINT PRESENT LOCN  GE
)@@G@@@B@@@[       UNLIST . THEN TURN OFF THS LISTING @]@@@[       END .@[@@@[GF
)@@G@@.     @#@@@[$(20),LI$T* PROC .@F@@@[ DO $>0 , RES -1 . RESET NESTING LEVGG
)@@G@@EL (DO IS TO PREVENT ERRORS)  @G@@@[ DO $=0 , LIST . IF WE'RE AT OUTERMOGH
)@@G@@ST NESTING LEVEL, TURN LIST BACK ON.@]@@@[       END .@[@@@[.     @G@@@[GI
)@@G@@. SET PROC/END PAIRS FOR CONDITIONAL ASSEMBLY.  IF FLAG (1ST FIELD) IS  GJ
)@@G@@@E@@@[. ON (NON-ZERO) CODE IS ASSEMBLED, OTHERWISE PROC'D OUT .   @[@@@[GK
)@@G@@.     @#@@@[P      PROC  .    @D@@@[PROCSW* NAME             . SET SWITCGL
)@@G@@H TO PROC/RES     @E@@@[ DO P(1,1)=0 ,* EQU PROC  . IF SWITCH OFF, PROC GM
)@@G@@THE CODE OFF@#@@@[       GO PS$010 .@#@@@[ENDSW* NAME    .  @F@@@[ DO P(GN
)@@G@@1,1)=0 ,* EQU END  . MATCH TO ABOVE PROC FOR SWITCH OFF     @#@@@[PS$010GO
)@@G@@* NAME .    @G@@@[ DO 1-P(1,1)=0 ,* EQU RES . IF SWITCH ON, ALLOW THE COGP
)@@G@@DE TO ASSEMBLE    @]@@@[       END .@[@@@[.     @C@@@[QWDON* PROC 0,2.  GQ
)@@G@@TURN ON QUARTER WORD MODE     @^@@@[       LA,U  A0,1,*0.   @#@@@[      GR
)@@G@@ ER    PSR$.@]@@@[       END. @C@@@[QWDOFF* PROC 0,2.  TURN OFF QUARTER GS
)@@G@@WORD MODE   @#@@@[       LA,U  A0,1.@#@@@[       ER    PSR$.@]@@@[      GT
)@@G@@ END. @A@@@[/. EXTENDED DOUBLE PRECISION OPS    @[@@@[.     @A@@@[.     GU
)@@G@@       DOUBLE PRECISION TESTS @#@@@[D      PROC  .    @#@@@[DTG*   NAME GV
)@@G@@ 02 . @#@@@[DTLE*  NAME  03 . @#@@@[       UNLI$T .   @F@@@[UADR   EQU  GW
)@@G@@ D(1,*2)*/16+D(1,2)  . LUMP INDIRECT BIT INTO U-FIELD @[@@@[.     @F@@@[GX
)@@G@@ TLE  D(1,1),UADR,D(1,3) . IS MOST SIGNIF WORD LESS OR EQUAL?     @E@@@[GY
)@@G@@ J    GRTR               . NO, TAKE GRTR EXIT RIGHT AWAY    @E@@@[ DTE  GZ
)@@G@@D(1,1),UADR,D(1,3) . YES, IF IDENTICAL, GET RIGHT OUT @E@@@[ TE   D(1,1)HA
)@@G@@,UADR,D(1,3) . ELSE ARE MOST SIGNIF WDS .EQ. ?  @F@@@[ J    LEQ         HB
)@@G@@       . NO. SINCE WE KNOW LEQ, MUST BE .LT.    @G@@@[. SINCE MOST SIG IHC
)@@G@@S .EQ. (BY TE), BUT LEAST IS NOT (BY DTE), WE CAN     @G@@@[. TAKE THE DHD
)@@G@@IFFERENCE WITHOUT FEAR OF EITHER OVERFLOW OR NEGATIVE ZERO  @C@@@[ DAN  HE
)@@G@@D(1,1),UADR,D(1,3) . COMPUTE A MINUS U    @G@@@[ I$ 074,D(0,0),D(1,1)-A0HF
)@@G@@,0,0,NOFIX . JP/JN  TAKE NOSKIP EXIT WITH FIXUP @E@@@[ DA   D(1,1),UADR,HG
)@@G@@D(1,3) . SKIP EXIT.. RESTORE OPERAND VALUE@G@@@[ DO D(1,*3) ,SKIP NOP 0,HH
)@@G@@0,*D(1,3) . IF INCR ON, SKIP HERE TO BUMP XREG  @F@@@[ J    LAST+1      HI
)@@G@@       . AFTER VALUE RESTORATION, TAKE SKIP EXIT@F@@@[NOFIX DA D(1,1),UAHJ
)@@G@@DR,D(1,3) . NOSKIP EXIT, FIX UP VALUE OF OPERAND@B@@@[NOSKIP .  NORMAL NHK
)@@G@@OSKIPS ALL COME HERE    @F@@@[ DO D(1,*3) , NOP 0,0,*D(1,3) . IF INCREMEHL
)@@G@@NTATION ON, BUMP THE REG@[@@@[LAST. @A@@@[ DO D(1,*3)<1 ,SKIP EQU LAST+1HM
)@@G@@ .    @C@@@[GRTR   EQU   (D(0,0)=3)*NOSKIP+(D(0,0)=2)*SKIP .@C@@@[LEQ   HN
)@@G@@ EQU   (D(0,0)=2)*NOSKIP+(D(0,0)=3)*SKIP .@]@@@[   LI$T .   @]@@@[      HO
)@@G@@ END .@[@@@[.     @ @@@[/.    TRIPLE WORD OPERATIONS  @G@@@[. ***** CAUTHP
)@@G@@ION *** INDIRECTION REQUIRES 3 ADDRESS POINTER WDS *****    @[@@@[.     HQ
)@@G@@@E@@@[S      PROC   .  SHIFTS--   *OPS GENERATED FOR EACH ARE*    @G@@@[HR
)@@G@@. ***** CAUTION ***** THESE PROCS FAIL FOR SHIFT COUNTS GRTR THAN 36    HS
)@@G@@@C@@@[TSC*   NAME   01 .                 DSC  LSSC DSC@C@@@[TSL*   NAME HT
)@@G@@  03 .                 DSL  LSSL DSL@C@@@[TSA*   NAME   05 .            HU
)@@G@@     DSA  LSSL DSA@D@@@[LTSC*  NAME  011 .                 LDSC SSC  LDSHV
)@@G@@C     @D@@@[LTSL*  NAME  013 .                 LDSL SSL  LDSL     @G@@@[HW
)@@G@@ARAD   EQU   S(0,0)<010  . TRUE FOR RITE SHIFTS (8'S BIT IS DIRECTION)  HX
)@@G@@@G@@@[C(1)   EQU   S(0,0)**06  . GET TYPE (ARITH,LGL,CIRC);TURN OFF DOUBHY
)@@G@@LE BIT@F@@@[ DO S(0,0)=5 ,C(1) EQU 2 . IF ARITH, FORCE 2ND INSTR TO LOGIHZ
)@@G@@CAL   @#@@@[       UNLI$T  .  @D@@@[ I$ 073,S(0,0),S(1,1)-A0+ARAD,S(1,3)IA
)@@G@@,S(1,*2),S(1,2) . @E@@@[ I$ 073,C(1)+8*ARAD,S(1,1)-A0+1,S(1,3),S(1,*2),SIB
)@@G@@(1,2) .     @F@@@[ I$ 073,S(0,0),S(1,1)-A0+1-ARAD,S(1,3),2*S(1,*3)+S(1,*IC
)@@G@@2),S(1,2) . @#@@@[       LI$T  .    @]@@@[       END  @[@@@[.     @ @@@[ID
)@@G@@.  TRIPLE LOAD AND STORES     @[@@@[.     @ @@@[T      PROC             IE
)@@G@@ .    @#@@@[TSTO*  NAME  0    @#@@@[TLD*   NAME  1    @#@@@[       UNLI$IF
)@@G@@T   . @E@@@[       I$    071,012+T(0,0),T(1,1)-A0,T(1,3),T(1,*2),T(1,2) IG
)@@G@@@G@@@[       I$    1+7*T(0,0),0,T(1,1)-A0+2,T(1,3),2*T(1,*3)+T(1,*2),T(1IH
)@@G@@,2)+2 @#@@@[       LI$T     . @#@@@[       END      . @[@@@[.     @ @@@[II
)@@G@@.      TRIPLE EQUALITY TESTS  @[@@@[.     @#@@@[T      PROC .     @#@@@[IJ
)@@G@@TTE*   NAME 0 .   @#@@@[TTNE*  NAME 1 .   @#@@@[       UNLI$T .   @F@@@[IK
)@@G@@. CAUTION... INDEX INCREMENTATION BIT IS IGNORED BY THIS PROC     @F@@@[IL
)@@G@@ I$ 053,0,T(1,1)-A0+2,T(1,3),T(1,*2),T(1,2)+2 . TNE REG+2,WD+2    @E@@@[IM
)@@G@@ I$ 071,017,T(1,1)-A0,T(1,3),T(1,*2),T(1,2) . DTE REG,WORD  @^@@@[ DO T(IN
)@@G@@0,0) , J $+2 .    @#@@@[       LI$T .     @]@@@[       END .@^@@@[/. PROIO
)@@G@@X FOR CALLING REPS@[@@@[.     @#@@@[P      PROC    .  @C@@@[LIJ*   NAME IP
)@@G@@   .    FORMAT  LIJ  XA,TARG,XB     @F@@@[       UNLI$T  .    THIS PROC IQ
)@@G@@IS COMPANION TO LIJ SIMULATOR RTNE  @F@@@[       I$ 072,01,P(1,1),0,0,LIIR
)@@G@@J$$  .  SLJ WITH XA STASHED IN IT   @G@@@[       I$ 010,U,A0-A0,P(1,3),2IS
)@@G@@*P(1,*3)+P(1,*2),P(1,2)  . LA,U A0,TARG,XB@#@@@[       LI$T    .  @#@@@[IT
)@@G@@       END     .  ___          . AFTER VALUE RES*[S@@@*SDFF*@#@@@[      IU
)@@G@@ DEF   .    @[@@@[.     @ @@@[. PERMISSION BIT DEFINITIONS  @[@@@[.     IV
)@@G@@@A@@@[FIPALL EQU   1*/0        . ALLOW ALL@B@@@[FIPXUS EQU   1*/1       IW
)@@G@@ . ALLOW @ASG,X   @F@@@[FIPLOK EQU   1*/2        . ALLOW TEMPORARY XUSE IX
)@@G@@VIA LOCKSECTOR    @B@@@[FIPCAT EQU   1*/3        . CATENATION     @A@@@[IY
)@@G@@FIPRWR EQU   1*/4        . REWRITE  @E@@@[FIPREA EQU   1*/5        . REAIZ
)@@G@@D (BOTH DATA AND TOC POINTERS)@C@@@[FIPRCO EQU   1*/6        . READ COMPJA
)@@G@@ONENT INFO  @B@@@[FIPDEL EQU   1*/7        . DELETE ALLOWED @[@@@[.     JB
)@@G@@@[@@@[.     @A@@@[. DEFINITIONS OF PACKET LABELS--    @[@@@[.     @G@@@[JC
)@@G@@. THE FOLLOWING WORDS HAVE THE SAME USE FOR BOTH RANDOM AND SDF FILES   JD
)@@G@@@[@@@[.     @B@@@[FCTABL EQUF  0,X8        . BASE OF TABLE  @F@@@[LGLXUSJE
)@@G@@ EQUF  FCTABL,,S1  . EXCLUSIVE USE FLAG: 2**0 <=> @ASG,X    @G@@@[      JF
)@@G@@                   . 2**1 <=> LOCAL LOCK VIA LOCKSECTOR (FHOLD)   @G@@@[JG
)@@G@@LGDCLF EQUF  FCTABL,,S2  . USAGE: 0=UNDCL, 1=SEQNL, 2=RANDOM (NAMED)    JH
)@@G@@@E@@@[                         .       3=SEQNL, 4=RANDOM (UNNAMED)@C@@@[JI
)@@G@@LGOPNF EQUF  FCTABL,,S3  . OPEN FLAG, 0=CLOSED  @D@@@[LGASGF EQUF  FCTABJJ
)@@G@@L,,S4  . ASSIGN BITS, 0=NOT ASSIGNED@C@@@[LGLNUM EQUF  FCTABL,,Q4  . LOGJK
)@@G@@ICAL UNIT NUM     @C@@@[LGPERM EQUF  FCTABL+1,,Q4     . PERMISSION BITS JL
)@@G@@@C@@@[LGUKEY EQUF  FCTABL+2    . USER'S KEY (2 WORDS) @F@@@[LGQUAL EQUF JM
)@@G@@ LGUKEY+2    . QUALIFIER, FIELDATA LJSF FROM FACIL$   @C@@@[LGFNAM EQUF JN
)@@G@@ LGQUAL+2    . FILENAME, AS ABOVE   @[@@@[.     @D@@@[. PACKET AND DATA JO
)@@G@@AREAS FOR SECTOR ZERO (LABEL SECTOR)@B@@@[. ALSO USED FOR I/O PACKET ON JP
)@@G@@SDF FILES-  @B@@@[SZPAKT EQUF  LGFNAM+2    . SECTOR 0 PACKET@C@@@[SZUNAMJQ
)@@G@@ EQUF  SZPAKT      . SECTOR 0 USE NAME    @C@@@[SZTSWD EQUF  SZPAKT+2   JR
)@@G@@ . TEST AND SET WORD    @D@@@[SZSTAT EQUF  SZPAKT+3,,S1     . SECTOR 0 IJS
)@@G@@/O STATUS   @D@@@[SZFUNC EQUF  SZPAKT+3,,S2     . SECTOR 0 FUNCTION CODEJT
)@@G@@@B@@@[SZACES EQUF  SZPAKT+4    . ACCESS WORD    @C@@@[SZWDCT EQUF  SZPAKJU
)@@G@@T+4,,H1     . SECTOR 0 WORDCT @D@@@[SZBADR EQUF  SZPAKT+4,,H2     . SECTJV
)@@G@@OR 0 BUF ADDR     @D@@@[SZDADR EQUF  SZPAKT+5         . SECTOR 0 DRUM ADJW
)@@G@@DR    @C@@@[. AN EXTRA WORD HERE NEEDED ONLY FOR SDF FILES  @D@@@[SDSIZSJX
)@@G@@ EQUF  SZDADR+1,,H1     . SDF BUF SIZE (SECTORS)@E@@@[SDNCWD EQUF  SZDADJY
)@@G@@R+1,,H2     . NEXT SDF CTL WD (LOC IN BUF)@D@@@[SDBEND EQUF  SZDADR+2,,HJZ
)@@G@@1     . LWA+1 OF SDF BUFFER   @G@@@[. I/O BUF-FOR SDF FILES, 4 SECTORS- KA
)@@G@@FOR RANDOM, 28 WDS FOR SECTOR ZERO  @E@@@[SZBUFR EQUF  SZDADR+3    . STAKB
)@@G@@RT OF BUF FOR SECT 0 -SDF I/O @F@@@[SDTSIZ EQUF  2+4*28+(0177777**SZBUFRKC
)@@G@@) . TABLE SIZE FOR SDF FILES  @[@@@[.     @C@@@[. --- DEFINE SECTOR ZEROKD
)@@G@@ (CONTROL SECTOR) ----- @[@@@[.     @C@@@[SZLCTL EQUF  SZBUFR      . LABKE
)@@G@@EL CONTROL WORD   @B@@@[SZLABL EQUF  SZLCTL+1    . LABEL (**RA**) @A@@@[KF
)@@G@@SZTADR EQUF  SZLABL+1    . TOC ADDR @D@@@[SZTMAX EQUF  SZTADR+1,,H1     KG
)@@G@@. MAX NO OF TOC ENTRIES @E@@@[SZTCUR EQUF  SZTADR+1,,H2     . CURRENT NOKH
)@@G@@ OF TOC ENTRIES   @B@@@[SZLADR EQUF  SZTADR+2    . LOCKSECTOR ADDR@B@@@[KI
)@@G@@SZMADR EQUF  SZLADR+1    . BITMAP ADDR    @E@@@[SZMSIZ EQUF  SZMADR+1,,HKJ
)@@G@@1     . BITMAP SIZE (NO OF SECTORS) @F@@@[SZDSIZ EQUF  SZMADR+1,,H2     KK
)@@G@@. DATA AREA SIZE (NO OF SECTORS)    @E@@@[SZFWRA EQUF  SZMADR+2    . 1STKL
)@@G@@ (LOWEST) DATA WRITE ADDR     @C@@@[SZNWRA EQUF  SZFWRA+1    . NEXT DATAKM
)@@G@@ WRITE ADDR @E@@@[SZLIBN EQUF  SZNWRA+1    . LIBNO OF OWNER (DFLOAT, 2 WKN
)@@G@@DS)   @D@@@[SZTDAT EQUF  SZLIBN+2    . TDATE$ OF CREATION OF FILE @D@@@[KO
)@@G@@SZTLST EQUF  SZTDAT+1    . TDATE$ OF LAST @ASG/FREE   @E@@@[SZSIZE EQU  KP
)@@G@@ SZTLST+1-SZBUFR  . NO OF WDS USED OF CTL SECTOR@B@@@[. PACKET AND BUF SKQ
)@@G@@PACE FOR TOC ENTRIES    @C@@@[TOPAKT EQUF  SZBUFR+28   . PACKET FOR TOC KR
)@@G@@READS @D@@@[TOUNAM EQUF  TOPAKT      . USE NAME FOR TOC PACKET    @C@@@[KS
)@@G@@TOTSWD EQUF  TOPAKT+2    . TEST AND SET WORD    @D@@@[TOSTAT EQUF  TOPAKKT
)@@G@@T+3,,S1     . TOC I/O STATUS FLAG   @E@@@[TOFUNC EQUF  TOPAKT+3,,S2     KU
)@@G@@. FUNC CODE FOR TOC ACCESS    @A@@@[TOWDCT EQUF  TOPAKT+4,,H1     .     KV
)@@G@@@A@@@[TOBADR EQUF  TOPAKT+4,,H2     .     @A@@@[TODADR EQUF  TOPAKT+5   KW
)@@G@@      .     @D@@@[TOSNUM EQUF  TODADR+1,,H1     . CURRENT TOC SEG NO    KX
)@@G@@@F@@@[TOEADR EQUF  TODADR+1,,H2     . BUF ADDR OF CURRENT TOC ENTRY     KY
)@@G@@@B@@@[TOBUFR EQUF  TODADR+2         . TOC BUFFER@C@@@[. TOC ENTRIES FOR KZ
)@@G@@CURRENT ENTRY BIASED OFF X11--@C@@@[TCNTRY EQUF  0,X11       . CURRENT TLA
)@@G@@OC ENTRY    @D@@@[TCNWDS EQUF  TCNTRY,,H1  . NO WDS USED BY DATA ENTRY  LB
)@@G@@@D@@@[TCDPTR EQUF  TCNTRY+1    . DATA POINTER (SECTOR ADDR) @B@@@[TCDSCRLC
)@@G@@ EQUF  TCNTRY+2    . APL DESCRIPTOR @D@@@[TCTYPE EQUF  TCDSCR,,S1  . TYPLD
)@@G@@E (ALWAYS TEMPORARY)    @A@@@[TCMODE EQUF  TCDSCR,,S2  . MODE     @A@@@[LE
)@@G@@TCRANK EQUF  TCDSCR,,S3  . RANK     @A@@@[TCLNTH EQUF  TCDSCR,,H2  . LENLF
)@@G@@GTH   @E@@@[TCTDAT EQUF  TCDSCR+1    . TDATE WHEN DATUM WAS WRITTEN     LG
)@@G@@@D@@@[TCLIBN EQUF  TCTDAT+1    . LIBNO OF WRITER OF ELEMENT @C@@@[. PACKLH
)@@G@@ET FOR LOCKSECTOR (FOR REWRITING) I/O     @D@@@[LKPAKT EQUF  TOBUFR+28  LI
)@@G@@ . I/O PACKET FOR LOCKSECTOR  @ @@@[LKUNAM EQUF  LKPAKT      .    @ @@@[LJ
)@@G@@LKTSWD EQUF  LKPAKT+2    .    @ @@@[LKSTAT EQUF  LKPAKT+3,,S1 .   @ @@@[LK
)@@G@@LKFUNC EQUF  LKPAKT+3,,S2 .   @ @@@[LKWDCT EQUF  LKPAKT+4,,H1 .   @ @@@[LL
)@@G@@LKBADR EQUF  LKPAKT+4,,H2 .   @ @@@[LKDADR EQUF  LKPAKT+5     .   @C@@@[LM
)@@G@@LKSLOP EQUF  LKPAKT+6    . SLOP WORD FOR XFER   @[@@@[.     @A@@@[. PACKLN
)@@G@@ET AND DATA AREA FOR BIT MAP  @[@@@[.     @^@@@[BMPAKT EQUF  LKSLOP+1   LO
)@@G@@@ @@@[BMUNAM EQUF  BMPAKT      .    @ @@@[BMTSWD EQUF  BMPAKT+2    .    LP
)@@G@@@A@@@[BMSTAT EQUF  BMPAKT+3,,S1     .     @A@@@[BMFUNC EQUF  BMPAKT+3,,SLQ
)@@G@@2     .     @A@@@[BMPACW EQUF  BMPAKT+4    . ACCESS WD@ @@@[BMWDCT EQUF LR
)@@G@@ BMPACW,,H1  .    @ @@@[BMBADR EQUF  BMPACW,,H2  .    @F@@@[BMDADR EQUF LS
)@@G@@ BMPAKT+5    . DRUM ADDR OF CURRENT BITMAP SECTOR     @G@@@[BMDTAD EQUF LT
)@@G@@ BMDADR+1    . DATA SECT ADDR CORRESP TO THIS BITMAP SECT   @[@@@[.     LU
)@@G@@@F@@@[BMBUFR EQUF  BMPAKT+9    . 28 WORD BUF TO HOLD 1 SECTOR OF BITMAP LV
)@@G@@@[@@@[.     @A@@@[. PACKET AND CONTROL INFO FOR DATA--@[@@@[.     @ @@@[LW
)@@G@@DAPAKT EQUF  BMBUFR+28   .    @D@@@[DASTAT EQUF  DAPAKT+3,,S1     . DATALX
)@@G@@ AREA I/O STATUS  @B@@@[DAUNAM EQUF  DAPAKT           . USE NAME  @C@@@[LY
)@@G@@DATSWD EQUF  DAPAKT+2    . TEST AND SET WORD    @A@@@[DAFUNC EQUF  DAPAKLZ
)@@G@@T+3,,S2     .     @E@@@[DAPACW EQUF  DAPAKT+4    . PRIMARY ACCESS WORD FMA
)@@G@@OR DATA     @ @@@[DAWDCT EQUF  DAPACW,,H1     . @B@@@[DABADR EQUF  DAPACMB
)@@G@@W,,H2     . BUF ADDR    @B@@@[DADADR EQUF  DAPAKT+5         . DRUM ADDR MC
)@@G@@@E@@@[DASGAW EQUF  DAPAKT+6    . SCATTER-GATHER ACCESS WDS (2 WDS)@D@@@[MD
)@@G@@DASNUM EQUF  DASGAW+2,,H2     . CURRENT DATA ITEM NO  @F@@@[RATSIZ EQUF ME
)@@G@@ 1+(0177777**DASNUM)   . TABLE SIZE FOR RANDOM FILES  @[@@@[.     @C@@@[MF
)@@G@@. COMPUTE TOT BUF SIZE NEEDED TO HOLD THE ABOVE @[@@@[.     @#@@@[      MG
)@@G@@ PROC .     @#@@@[FILDEF* NAME .    @B@@@[ DO RATSIZ>SDTSIZ ,FCTSIZ* EQUMH
)@@G@@ RATSIZ .   @C@@@[ DO 1-(RATSIZ>SDTSIZ) ,FCTSIZ* EQU SDTSIZ .     @]@@@[MI
)@@G@@       END .@[@@@[.     @A@@@[. DO INPUT/OUTPUT ON USER FILE--    @[@@@[MJ
)@@G@@.     @ @@@[P      PROC  . FUNC,PKT ERROR @#@@@[DOIO*  NAME  .    @ @@@[MK
)@@G@@       UNLI$T            .    @B@@@[       LA,U  A0,P(1,1)   . FUNCTION ML
)@@G@@CODE  @A@@@[       SA,S2 A0,P(1,2)+3 . TO PACKET@B@@@[       LA,U  A0,P(MM
)@@G@@1,2)   . PACKET ADDR    @A@@@[       ER    IOW$        . DO THE OP@D@@@[MN
)@@G@@       LA,S1 A0,P(1,2)+3 . GET STATUS FROM PACKET     @C@@@[       JNZ  MO
)@@G@@ A0,P(2,1)   . AND EXIT IF ERROR    @#@@@[       LI$T  .    @#@@@[      MP
)@@G@@ END   .    @[@@@[.     @B@@@[. CHECK WHETHER A PERMISSION IS GIVEN--   MQ
)@@G@@@[@@@[.     @#@@@[P      PROC  .    @#@@@[JNOPER* NAME .    @ @@@[      MR
)@@G@@ UNLI$T            .    @D@@@[       LA    P(1,1),LGPERM    . GET PERMISMS
)@@G@@SION BITS   @F@@@[       TOP,U P(1,1),P(1,2)    . IS REQUESTED PERMISSIOMT
)@@G@@N EXPLICIT? @G@@@[       JNB   P(1,1),P(2,1)    . NO, IF 'ALL' NOT GIVENMU
)@@G@@ IETHER, WIPE OUT @#@@@[       LI$T  .    @#@@@[       END   .    @[@@@[MV
)@@G@@.     @F@@@[. TEMPORARY PROX TO PUT ALL LOCN CTRS INTO THE D-BANK UNTIL MW
)@@G@@APL   @ @@@[. BECOMES A SEGMENTED REP--   @[@@@[.     @#@@@[       PROC MX
)@@G@@ .    @#@@@[TEMPIC* NAME .    @#@@@[P      PROC  .    @^@@@[INSTRS** NAMMY
)@@G@@E  6  .     @^@@@[CONSTS** NAME  8  .     @^@@@[VARBLS** NAME  10 .     MZ
)@@G@@@^@@@[VARCON** NAME  12 .     @#@@@[$(14)  LIT  .     @]@@@[$(P(0,0)) . NA
)@@G@@@B@@@[       END . OF DEFN OF INTERNAL PROC     @A@@@[       END . OF OUNB
)@@G@@TERMOST PROC DEFN ___,,S2     .     @A@@@[BMPACW*[S@@@*SDFF*@C@@@[/. PRONC
)@@G@@X FOR PUSH AND POP OF VARIABLE STACK.     @E@@@[.  USED IN CONJUNCTION WND
)@@G@@ITH STACK SUBRTNE- STKPSH,STKPOP .  @]@@@[       DEF .@E@@@[STKLFT EQU  NE
)@@G@@ R5          . LEFTMOST R-REG USED FOR STACK    @E@@@[STKRIT EQU   R15  NF
)@@G@@       . RIGHTMOST R-REG USED FOR STACK   @[@@@[.     @E@@@[STKNRG EQU  NG
)@@G@@ STKRIT-STKLFT+1  . TOT NO R-REGS USED FOR STACK@[@@@[.     @#@@@[P     NH
)@@G@@ PROC .     @D@@@[POP*   NAME 1  .    POP(,J)   LOC(,TAG) STAKEMPTY     NI
)@@G@@@C@@@[PUSH*  NAME 0  .    PUSH(,J)  LOC(,TAG)  WSFULL @#@@@[       UNLI$NJ
)@@G@@T .   @ @@@[R0     EQU   R1-1        .    @^@@@[JAY    EQU   P(0,1) .   NK
)@@G@@@^@@@[LOC    EQU   P(1,1) .   @^@@@[TAG    EQU   P(1,2) .   @A@@@[HI    NL
)@@G@@ EQU   2*P(1,*2)+P(1,*1) .    @D@@@[REG    EQU   (LOC<(A15+1))++((LOC>R0NM
)@@G@@)**(LOC<STKLFT)) .@B@@@[DIRECT EQU   (JAY=0)**(TAG=0)**(HI=0)**REG@G@@@[NN
)@@G@@ DO DIRECT ,XFREG EQU LOC     . IF REG TO REG XFER, DEFINE REG USED     NO
)@@G@@@E@@@[ DO 1-DIRECT ,XFREG EQU X11   . IF NOT DIRECT, XFER THRU X11@C@@@[NP
)@@G@@ DO P(0,0)=0 , GO PU$H01 . IF PUSH, GO DO IT    @[@@@[.     @^@@@[.  GENNQ
)@@G@@ERATE POPUP ---   @[@@@[.     @B@@@[       TZ,U  0,X10       . IS STACK NR
)@@G@@EMPTY?@C@@@[       JGD   X10,PO0010  . NO, GO GET DATUM     @F@@@[      NS
)@@G@@ LMJ   X11,STKPOP  . IT'S EMPTY,  GO RELOAD IT FROM CORE    @F@@@[      NT
)@@G@@ J     P(2,1)      . NOTHING TO LOAD, STACK REALLY EMPTY    @E@@@[PO0010NU
)@@G@@ L     XFREG,STKLFT,X10 . LOAD REG FROM TOP STAK LOCN @G@@@[ DO 1-DIRECTNV
)@@G@@ , I$ 06,JAY,X11,TAG,HI,LOC . PUT TO CORE, IF REQUESTED     @B@@@[      NW
)@@G@@ GO POPDEF    . END OF THIS PROC    @[@@@[.     @^@@@[. GENERATE PUSHDOWNX
)@@G@@N --- @[@@@[.     @#@@@[PU$H01* NAME .    @F@@@[       TLEM,U X10,STKNRGNY
)@@G@@ . TEST FOR STACK FULL, THEN BUMP POINTER @C@@@[       J     $+3        NZ
)@@G@@ . NO, GO PUT DATA AWAY @C@@@[       LMJ   X11,STKPSH  . YES, FLUSH IT TOA
)@@G@@O CORE@A@@@[       J     P(2,1)      . WS FULL  @G@@@[ DO 1-DIRECT , I$ OB
)@@G@@027,JAY,X11,TAG,HI,LOC . LOAD FROM CORE IF REQUESTED  @G@@@[       S    OC
)@@G@@ XFREG,STKLFT-1,X10 . REG TO STACK (NOTE:X10 BUMPED BY TLEM)@#@@@[POPDEFOD
)@@G@@* NAME .    @#@@@[       LI$T .     @#@@@[        END  .    ___@@@@@@@@@OE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OG
)@@G@@*[S@@@*SDFF*@F@@@[/.     THIS DEFINES THE PSEUDO MACHINE CODE WHICH IS TOH
)@@G@@HE OUTPUT OF@F@@@[. THE COMPILER, AND IS ACTUALLY INTERPRETED.  EACH INSOI
)@@G@@TRUCTION IS @F@@@[. ONE HALF-WORD, OCTAL DIGIT DESIGNATIONS O1-O6, LEFT OJ
)@@G@@TO RIGHT .  @ @@@[.     FIELD DESIGNATIONS ARE--@F@@@[.         TYPE 1 IOK
)@@G@@NSTR: OP=01; QUAL=02; FLAGS=03; S=04-06 (9 BITS)@D@@@[.         TYPE 2 IOL
)@@G@@NSTR: OP=O1; ADDR=O2-O6 (15 BITS)   @[@@@[.     @B@@@[. ****** PRIMARY OOM
)@@G@@P CODE DEFS FOLLOW --   @A@@@[       DEF . O1   O2   O3   S OR A  @D@@@[ON
)@@G@@PSONUL EQU    0 .  -                         NULL     @F@@@[PSOXQP EQU  OO
)@@G@@  1 .  X   -   S:NUMERIC OP      EXECUTE PRIMITIVE    @D@@@[PSQNIL EQU  OP
)@@G@@       0 . -                      -NILAD  @D@@@[PSQMON EQU         1 . -OQ
)@@G@@                      -MONAD  @D@@@[PSQDYA EQU         2 . -            OR
)@@G@@          -DYAD   @F@@@[PSQXDY EQU         3 . -                      -IOS
)@@G@@NDEX AND DYAD     @G@@@[PSQRED EQU        4 .                         - OT
)@@G@@APPLY REDUCING DYAD     @E@@@[PSFNUL EQU              0 .               OU
)@@G@@     - NO FLAGS   @G@@@[PSFSEL EQU              1 .                    -OV
)@@G@@DO OP ALONG GIVEN COORD @G@@@[PSFSLF EQU              2 .               OW
)@@G@@     -DO OP ALONG 1ST COORD   @F@@@[PSOFUN EQU    2 .        ( LOW 12 BIOX
)@@G@@TS=FUNCNAME) FUNCT OPERATION  @F@@@[PSQXFN EQU         0 .              OY
)@@G@@               --EXECUTE FUNC @G@@@[PSQIFN EQU         1 .              OZ
)@@G@@               --INDEX AND EXECUTE  @G@@@[PSQVSV EQU         2 .        PA
)@@G@@                     --VALUE OF STOPVECT  @G@@@[PSQVTV EQU         3 .  PB
)@@G@@                           --VALUE OF TRACEVECT @F@@@[PSQSSV EQU        PC
)@@G@@ 4 .                             --SET STOPVECT @F@@@[PSQSTV EQU        PD
)@@G@@ 5 .                             --SET TRACEVECT@E@@@[PSOLOD EQU    4 . PE
)@@G@@  A: DESCRIPTOR ADDRESS    LOAD OPERAND   @G@@@[PSOUTR EQU    6 (3) . OUPF
)@@G@@T/IN PROD, LEFT/RITE OPS BIASED TO 6 BITS EACH  @G@@@[PSOLDV EQU    7 . PG
)@@G@@  A: NAMEBLOK ADDR         LOAD OPERAND AND VERIFY VAL@[@@@[.     @A@@@[PH
)@@G@@. DEFINITION OF PRIMITIVE NILADS    @[@@@[.     @B@@@[PSNNOP EQU   0    PI
)@@G@@       . NO OPERATION   @C@@@[PSNXTS EQU   1           . GO TO NEXT STATPJ
)@@G@@EMENT @E@@@[PSNBOS EQU   2           . BEGIN STATEMENT (I.E. MARKSTACK )PK
)@@G@@@G@@@[PSNRBR EQU   3           . MARKSTACK FOR ] ( END OF SUBSRCIPT LISTPL
)@@G@@)     @B@@@[PSNXNO EQU   4           . INDEX AND NO-OP@G@@@[PSNELX EQU  PM
)@@G@@ 5      . MARKSTACK FOR ELIDED INDEX (ADJACENT SEMICOLONS)  @G@@@[PSNFNLPN
)@@G@@ EQU   6           . CREATE/ERASE LOCAL VARIABLE (FUNCT LOCALS)   @F@@@[PO
)@@G@@PSNFNA EQU   7           . COPY/ERASE LOCAL VARIABLE (FUNCT ARGS) @G@@@[PP
)@@G@@PSNFNR EQU   8           . CREATE/STACK LOCAL VARIABLE (FUNCT RESULTS)  PQ
)@@G@@@E@@@[PSNEVI EQU   9           . ACCEPT EVALUATED (QUAD INPUT)    @F@@@[PR
)@@G@@PSNCHI EQU   10          . ACCEPT CHARACTER (QUOTE-QUAD INPUT)    @E@@@[PS
)@@G@@PSNEVO EQU   11          . DISPLAY EVALUATED ( QUAD OUTPUT) @F@@@[PSNCHOPT
)@@G@@ EQU   12          . DISPLAY CHARACTER (QUOTE-QUAD OUTPUT)  @F@@@[PSNESCPU
)@@G@@ EQU   13          . ESCAPE (RIGHT ARROW- STATEVECTOR CLEAR)@[@@@[.     PV
)@@G@@@C@@@[. PROC TO GENERATE A CONSTANT PSEUDO-OP SKELETON@[@@@[.     @#@@@[PW
)@@G@@O      PROC .     @#@@@[PSUDOP* NAME .    @#@@@[PSUDOF** FUNC .   @ @@@[PX
)@@G@@FA     EQU   PSUDOF(1)*/15   .@ @@@[FB     EQU   PSUDOF(2)*/12   .@ @@@[PY
)@@G@@FC     EQU   PSUDOF(3)*/9    .@ @@@[       END   FA++FB++FC  .    @E@@@[PZ
)@@G@@ DO O(1)>2 , +0,PSUDOF(O(1,1),O(1,2),O(1,3))+O(1,4) . TYPE 1@F@@@[ DO O(QA
)@@G@@1)>0 , DO O(1)<3 , +0,PSUDOF(O(1,1),0,0)+O(1,2) . TYPE 2    @]@@@[      QB
)@@G@@ END .@E@@@[/. THIS PROC DEFINES THE ENTRIES WHICH APPEAR IN THE STACK  QC
)@@G@@@[@@@[.     @G@@@[.      STACK ENTRIES ARE 18 BITS-- IF THE MOST SIGNIFIQD
)@@G@@CANT (BIT 17) IS  @G@@@[.      OFF, THE ENTRY IS A DESCRIPTOR ADDR, IN WQE
)@@G@@HICH CASE BIT 16 ON     @C@@@[.      IMPLIES THE OPERAND IS TO BE REDUCEQF
)@@G@@D.    @G@@@[.            IF BIT 17 IS ON, THE ENTRY IS A STACK MARKER ASQG
)@@G@@ BELOW:     @[@@@[.     @#@@@[       DEF   .    @E@@@[SKMRHS EQU   04000QH
)@@G@@00     . RIGHT HAND SIDE OF STATEMENT     @E@@@[SKMESL EQU   0600000    QI
)@@G@@ . END SUBSCRIPT LIST (I.E. ']')    @E@@@[SKMELX EQU   0600001     . ELIQJ
)@@G@@DED INDEX MARKER (I.E. ;;)    @[@@@[.     @#@@@[S      PROC .     @#@@@[QK
)@@G@@SKMARX* NAME .    @]@@@[       END .___--INDEX AND EXECUTE  @G@@@[PSQVSVQL
)@@G@@ EQU         2 .                             --VALUE OF STOPVECT  @G@@@[QM
)@@G@@PSQVTV EQU         3 .  *[S@@@*SDFF*@D@@@[       DEF     . DEFINITION OFQN
)@@G@@ APL INTERNAL CODES--   @G@@@[.                                         QO
)@@G@@             CONTROL CODES    @G@@@[ANULL  EQU 000  .  NOTE: NULL MUST *QP
)@@G@@*NEVER** BE CHANGED TO BE NON-ZERO  @C@@@[AINVAL EQU 0020 .  INVALID CHAQQ
)@@G@@RACTER MARKER     @A@@@[AEOL   EQU 0021 .  END OF LINE FLAG @A@@@[ABKSP QR
)@@G@@ EQU 0022 . BACKSPACE CARRIAGE@ @@@[ALINFD EQU 0023 . LINE-FEED   @A@@@[QS
)@@G@@ACRTRN EQU 0024 . CARRIAGE RETURN   @B@@@[AESCAP EQU 0025 . ESCAPE (O BKQT
)@@G@@SP U BKSP T)@B@@@[.                                  DIGITS @^@@@[AZERO QU
)@@G@@ EQU 0100   . 0   @^@@@[AONE   EQU 0101   . 1   @^@@@[ATWO   EQU 0102   QV
)@@G@@. 2   @^@@@[ATHREE EQU 0103   . 3   @^@@@[AFOUR  EQU 0104   . 4   @^@@@[QW
)@@G@@AFIVE  EQU 0105   . 5   @^@@@[ASIX   EQU 0106   . 6   @^@@@[ASEVEN EQU 0QX
)@@G@@107   . 7   @^@@@[AEIGHT EQU 0110   . 8   @^@@@[ANINE  EQU 0111   . 9   QY
)@@G@@@B@@@[.                        UNDERLINED DIGITS@^@@@[A0BAR  EQU 0112   QZ
)@@G@@ .    @^@@@[A1BAR  EQU 0113    .    @^@@@[A2BAR  EQU 0114    .    @^@@@[RA
)@@G@@A3BAR  EQU 0115    .    @^@@@[A4BAR  EQU 0116    .    @^@@@[A5BAR  EQU 0RB
)@@G@@117    .    @^@@@[A6BAR  EQU 0120    .    @^@@@[A7BAR  EQU 0121    .    RC
)@@G@@@^@@@[A8BAR  EQU 0122    .    @^@@@[A9BAR  EQU 0123    .    @C@@@[.     RD
)@@G@@                             ALFABETICS   @B@@@[AA     EQU 0124   .  A  RE
)@@G@@ ALFABETIC 'A'    @#@@@[AB     EQU 0125   @#@@@[AC     EQU 0126   @#@@@[RF
)@@G@@AD     EQU 0127   @#@@@[AE     EQU 0130   @#@@@[AF     EQU 0131   @#@@@[RG
)@@G@@AG     EQU 0132   @#@@@[AH     EQU 0133   @#@@@[AI     EQU 0134   @#@@@[RH
)@@G@@AJ     EQU 0135   @#@@@[AK     EQU 0136   @#@@@[AL     EQU 0137   @#@@@[RI
)@@G@@AM     EQU 0140   @#@@@[AN     EQU 0141   @#@@@[AO     EQU 0142   @#@@@[RJ
)@@G@@AP     EQU 0143   @#@@@[AQ     EQU 0144   @#@@@[AR     EQU 0145   @#@@@[RK
)@@G@@AS     EQU 0146   @#@@@[AT     EQU 0147   @#@@@[AU     EQU 0150   @#@@@[RL
)@@G@@AV     EQU 0151   @#@@@[AW     EQU 0152   @#@@@[AX     EQU 0153   @#@@@[RM
)@@G@@AY     EQU 0154   @#@@@[AZ     EQU 0155   @B@@@[AABAR  EQU 0156   . UNDERN
)@@G@@RLINED ALFABETICS @#@@@[ABBAR  EQU 0157   @#@@@[ACBAR  EQU 0160   @#@@@[RO
)@@G@@ADBAR  EQU 0161   @#@@@[AEBAR  EQU 0162   @#@@@[AFBAR  EQU 0163   @#@@@[RP
)@@G@@AGBAR  EQU 0164   @#@@@[AHBAR  EQU 0165   @#@@@[AIBAR  EQU 0166   @#@@@[RQ
)@@G@@AJBAR  EQU 0167   @#@@@[AKBAR  EQU 0170   @#@@@[ALBAR  EQU 0171   @#@@@[RR
)@@G@@AMBAR  EQU 0172   @#@@@[ANBAR  EQU 0173   @#@@@[AOBAR  EQU 0174   @#@@@[RS
)@@G@@APBAR  EQU 0175   @#@@@[AQBAR  EQU 0176   @#@@@[ARBAR  EQU 0177   @#@@@[RT
)@@G@@ASBAR  EQU 0200   @#@@@[ATBAR  EQU 0201   @#@@@[AUBAR  EQU 0202   @#@@@[RU
)@@G@@AVBAR  EQU 0203   @#@@@[AWBAR  EQU 0204   @#@@@[AXBAR  EQU 0205   @#@@@[RV
)@@G@@AYBAR  EQU 0206   @#@@@[AZBAR  EQU 0207   @ @@@[AAT    EQU 0210         RW
)@@G@@ .    @ @@@[ADOLAR EQU 0211          .    @[@@[[.     @A@@[[. DECORATIONRX
)@@G@@ CODES OF VARIOUS TYPES @[@@[[.     @D@@[[.              EXTRAS DEFINED RY
)@@G@@BY THE ASCII SET------- @C@@[[ARTACK  EQU    0217      . RIGHT POINTING RZ
)@@G@@TACK  @C@@[[ALTACK  EQU    0220      . LEFT  POINTING TACK  @C@@[[ARBRACSA
)@@G@@  EQU    0221      . RIGHT CURLY BRACE    @C@@[[ALBRAC  EQU    0222     SB
)@@G@@ . LEFT  CURLY BRACE    @A@@[[ADIMND  EQU    0223      . DIAMOND  @G@@[[SC
)@@G@@.                        . ***** OTHER UNUSED DECORATIONS ON 2741--     SD
)@@G@@@ ]@@[AUNION EQU   0224        .    @B@@@[AINTER EQU   0225        . INTSE
)@@G@@ERSECTION   @A@@@[ACNTNS EQU   0226        . CONTAINS @B@@@[ACNTIN EQU  SF
)@@G@@ 0227        . CONTAINEDIN    @A@@@[ADIERS EQU   0230        . DIERESIS SG
)@@G@@@ @@@[AALFA  EQU   0231        .    @ @@@[AOMEGA EQU   0233        .    SH
)@@G@@@[@@[[.     @G@@[[. THE TAGS AMONST AND ADYAST ARE USED IN INTERP/APL TOSI
)@@G@@ SET TABLE SIZES  @[@@[[.     @F@@[[AMONST  EQU    0234           . CODESJ
)@@G@@ FOR SMALLEST VALUED MONAD    @F@@[[ADYAST  EQU    0234           . CODESK
)@@G@@ FOR SMALLEST VALUED DYAD     @[@@[[.     @A@@@[ADOMNO EQU   0234       SL
)@@G@@ . DOMINO   @A[@@[ALGNOT EQU 0240    . LOGICAL NOT    @#@@@[AGOTO  EQU 0SM
)@@G@@241   @ @@@[AUPGRD EQU 0242   . UPGRADE   @A@@@[ADNGRD EQU 0243   .     SN
)@@G@@ DOWNGRADE  @[@@[[.     @G@@[[. THE TAG ARBIAS DEFINES THE 'REDUCTION BISO
)@@G@@AS'.  FUNCS WHICH APPEAR IN   @G@@[[. COMPOUND OPS (E.G. REDUCTION, SCANSP
)@@G@@, INNER PRODUCT) HAVE THEIR OPCODES @G@@[[. BIASED BY THIS AMOUNT BY THESQ
)@@G@@ COMPILER SO THAT THEY CAN BE PACKED INTO @G@@[[. SIX BITS.  ANY NEW PRISR
)@@G@@MITIVES WHICH CAN APPEAR IN COMPOUND OPERATIONS @D@@[[. MUST THEREFORE HSS
)@@G@@AVE CODES IN THE RANGE (0244-0343)  @[@@[[.     @A@@[[ARBIAS  EQU    024ST
)@@G@@4           .     @[@@[[.     @ #@@[AADD   EQU 0244   . +    ADD  @A@@@[SU
)@@G@@ASUBTR EQU 0245   . -    SUBTRACT   @A@@@[AMULT  EQU 0246   .      MULTISV
)@@G@@PLY   @A@@@[ADIVID EQU 0247   .      DIVIDE     @ @@@[ACEIL  EQU 0250   SW
)@@G@@ . CEILING  @ @@@[AFLOOR EQU 0251    . FLOOR    @B@@@[AEXPON EQU 0252   SX
)@@G@@ . EXPONENTIAL/POWER    @ @@@[ALOG   EQU 0253    . LOGARITHM@ @@@[ARESIDSY
)@@G@@ EQU 0254    . RESIDUE  @A@@@[AFACTL EQU 0255   . !    FACTORIAL  @A@@@[SZ
)@@G@@ACIRCL EQU   0256        . TRIG FUNC@A[@@[AROLL  EQU 0257          . ROLTA
)@@G@@L/DEAL@A@@@[ASIZE  EQU 0260   . SIZE/ RESHAPE   @A@@@[ARAVEL EQU 0261   TB
)@@G@@ . RAVEL/CATENATE @ @@@[AINDEX EQU 0262   .      IOTA @A@@@[ASYSTM EQU 0TC
)@@G@@263          . IBEAM    @B@@@[AMEMBR EQU 0264 . MEMBERSHIP, UNQUOTE     TD
)@@G@@@A[@@[AREVER EQU 0265  . REVERSE/ROTATE   @B@@@[ARVFIR EQU 0266  . REVERTE
)@@G@@SE ON 1ST COORD   @ @@@[AXPOSE EQU 0267 . TRANSPOSE   @B@@@[AMONEN EQU 0TF
)@@G@@267 .   ***** END OF MONADS   @^@@@[AREDUC EQU 0270 . REDUCE@B@@@[ARDFIRTG
)@@G@@ EQU 0271 . REDUCE ON 1ST COORDINATE@B@@@[.                         BEGITH
)@@G@@N PURE DYADS@#@@@[AXPFIR EQU 0272   @^@@@[AXPAND EQU 0273 . EXPAND@#]@@[TI
)@@G@@ALGOR  EQU 0274   @A@@@[ALGNAN EQU 0275    . LOGICAL NOTAND @A@@@[ALGNORTJ
)@@G@@ EQU 0276    . LOGICAL NOR    @A@@@[ALESS  EQU 0277    .  LOGICAL .LT.  TK
)@@G@@@D@@@[ALEQ   EQU 0300               . LESSTHAN OR EQUAL     @A@@@[AEQUL TL
)@@G@@ EQU 0301    .         .EQ.   @D@@@[AGEQ   EQU 0302               . GREATM
)@@G@@TER THAN OR EQUAL @A@@@[AGRTR  EQU 0303    .         .GT.   @B@@@[AUNEQLTN
)@@G@@ EQU 0304               . UNEQUAL   @ @@@[ALGAND EQU 0305 . LOGICAL AND TO
)@@G@@@#[@@[ADROP  EQU 0306   @#@@@[ATAKE EQU 0307 .  @A@@@[ADCODE EQU 0310   TP
)@@G@@.      DECODE     @A@@@[ANCODE EQU 0311   .      ENCODE     @B@@@[ASTORETQ
)@@G@@ EQU 0312   .      STORE(LEFT ARROW)@B@@@[AOUTER EQU 0313          . OUTTR
)@@G@@ER PRODUCT  @E@@@[ADYAEN EQU   0313        .       ***** END OF DYADS **TS
)@@G@@***   @C@@@[.                                  PUNCTUATION  @B@@@[AQUAD TT
)@@G@@ EQU 0314   . "    DISPLAY VARIABLE @D@@@[AQQUAD EQU 0315    . QUOTE-QUATU
)@@G@@D ( CHARACTER INPUT)    @^@@@[ACOLON EQU 0316   . :   @^@@@[ALPAR  EQU 0TV
)@@G@@317   . (   @C@@@[ALBRAK EQU 0320    . LEFT SUBSCRIPT BRACKET     @^@@@[TW
)@@G@@ARPAR  EQU 0321   . )   @C@@@[ARBRAK EQU 0322    . RIGHT SUBSCRIPT BRACKTX
)@@G@@ET    @B@@@[ASEMIC EQU 0323    . SUBSCRIPT SEPARATOR  @ @@@[.          LTY
)@@G@@EXICAL  ITEMS     @B@@@[AFUNCT EQU 0324    . FUNCTION DEFINITION  @B@@@[TZ
)@@G@@ALOCK  EQU 0325   . LOCKED FUNCTION DEFN  @E@@@[AALFAN EQU 0326    . ALFUA
)@@G@@ANUMERIC LITERAL ( SINGLE QUOTE)    @ @@@[ASPACE EQU 0327   .      SPACEUB
)@@G@@@A@@@[AUMINS EQU 0330   .      UNARY MINUS@A@@@[ADECPT EQU 0331   . .   UC
)@@G@@ DECIMAL    @B@@@[AMARK  EQU 0332   . MARK FOR TRACE, STOP  @^@@@[ATRACEUD
)@@G@@ EQU 0333    .    @^@@@[ASTOP  EQU 0334    .    @A@@@[ALAMP  EQU 0335   UE
)@@G@@.      COMMENTS   @D@@@[ALLIST EQU   0366  . $[  LEFT HAND DELIMITER FORUF
)@@G@@ LISTS@D@@@[ARLIST EQU   0337  . $] RITET HAND DELIMITER FOR LISTS@A@@@[UG
)@@G@@AUNDRL EQU   0340        . UNDERLINE@F@@@[. ***** INTERNAL SYMBOLS TO MAUH
)@@G@@RK STORED TEXT OF FUNCT HEADER LINES@C@@@[AFNNAM EQU 0350          . NAMUI
)@@G@@E OF THE FUNCT    @B@@@[AFNANS EQU 0351          . RESULT OF FUNCT@C@@@[UJ
)@@G@@AFNARG EQU 0352          . ARGUMENT OF FUNCT    @D@@@[AFNLCL EQU 0353   UK
)@@G@@       . LOCAL VARIABLE OF FUNCT    @^@@@[APSYMB* PROC 0,0    .   @]@@@[UL
)@@G@@        END @F@@@[/. PROX TO TEST WHETHER A PARTICULAR SYMBOL (IN A0) ISUM
)@@G@@ SOME TYPE  @G@@@[.     CAUTION: A REORDERING OF APSYMB MAY NECESSITATE UN
)@@G@@CHANGING THESE,TOO@D@@@[T      PROC .       TEST/JUMP  ON DIGIT/NOT DIGIUO
)@@G@@T .   @#@@@[TDIGIT* NAME 01 . @#@@@[TNDIGT* NAME 02 . @#@@@[JDIGIT* NAMEUP
)@@G@@ 03 . @#@@@[JNDIGT* NAME 04 . @ @@@[       UNLI$T            .    @ @@@[UQ
)@@G@@       TG,U  A0,AZERO    .    @ @@@[       TG,U  A0,ANINE+1  .    @^@@@[UR
)@@G@@       GO  T$EX10 .     @C@@@[.                   TEST/JUMP  ON ALFA/NONUS
)@@G@@-ALFA @#@@@[TALFA*  NAME 01 . @#@@@[TNALFA* NAME 02 . @#@@@[JALFA*  NAMEUT
)@@G@@ 03 . @#@@@[JNALFA* NAME 04 . @ @@@[       UNLI$T            .    @B@@@[UU
)@@G@@       TNE,U A0,AMARK    . IS CHAR A MARK?@C@@@[ DO 1-(T(0,0)**1) , J LAUV
)@@G@@ST         . YES, DO    @C@@@[ DO T(0,0)=1 , J LAST+1            . THE PUW
)@@G@@ROPER @B@@@[ DO T(0,0)=3 , J T(1,1)            . THING@^@@@[       TG,U UX
)@@G@@ A0,A0BAR . @^@@@[       GO    T$EX01 .   @E@@@[.                       UY
)@@G@@ TEST/JUMP ON ALFAMERIC/NONALFAM    @#@@@[TALFAM* NAME 01 . @#@@@[TNALFMUZ
)@@G@@* NAME 02 . @#@@@[JALFAM* NAME 03 . @#@@@[JNALFM* NAME 04 . @ @@@[      VA
)@@G@@ UNLI$T            .    @B@@@[       TNE,U A0,AMARK    . IS CHAR A MARK?VB
)@@G@@@C@@@[ DO 1-(T(0,0)**1) , J LAST         . YES, DO    @C@@@[ DO T(0,0)=1VC
)@@G@@ , J LAST+1            . THE PROPER @B@@@[ DO T(0,0)=3 , J T(1,1)       VD
)@@G@@     . THING@^@@@[       TG,U  A0,AZERO . @#@@@[T$EX01* NAME .    @ @@@[VE
)@@G@@       TG,U  A0,AZBAR+1 .     @ET@@[.                             ASSEMBVF
)@@G@@LE ANY NEEDED JUMPS     @#@@@[T$EX10* NAME .    @ @@@[ DO T(0,0)=1 , GO VG
)@@G@@ T$EX20 .   @^@@@[ DO T(0,0)<4 , J $+2 .  @ @@@[ DO T(0,0)>2 , J  T(1,1)VH
)@@G@@ .    @#@@@[T$EX20* NAME .    @[@@@[LAST .@#@@@[       LI$T  .    @]@@@[VI
)@@G@@       END .@[I@@[/.    @E@@@[FDSYMB* PROC     . DEFINE INTERNAL/FIELDATVJ
)@@G@@A CHAR EQUIVALENCE@E@@@[.        FLDATA(I)  IS FIELDATA WHERE I IS INTERVK
)@@G@@NAL CODE    @E@@@[.        APSYMF(F)  IS INTERNAL CODE WHERE F IS FIELDAVL
)@@G@@TA    @F@@@[. IT IS ASSUMED THAT THE INTERNAL APL CODES HAVE BEEN PREVIOVM
)@@G@@USLY  @A@@@[. DEFINED BY AN 'APSYMB' REFERENCE. @[@@@[.     @D@@@[. DEFIVN
)@@G@@NE CHARACTERS TO BE USED AS FLAGS IN FIELDATA   @B@@@[FDFLAN* EQU 2  . NVO
)@@G@@O OF CHARS USED AS FLAGS@#@@@[FDFLAG*(1) EQU '$'@#@@@[FDFLAG*(2) EQU '@'VP
)@@G@@@[@@@[.     @F@@@[FDSGMT** FUNC . FIND WHICH SEGMENT (64 WD) AN FD CHAR VQ
)@@G@@FALLS INTO  @]@@@[I(1) EQU 192@A@@@[AFLAG EQU (FDSGMT(1)/0100)**077     VR
)@@G@@@B@@@[K DO 2 , DO AFLAG=FDFLAG(K) ,I(1) EQU K*64@A@@@[ DO FDSGMT(1)<0100VS
)@@G@@00 ,I(1) EQU 0    @]@@@[  END  I(1) @[@@@[.     @C@@@[SORT* PROC .  INTEVT
)@@G@@RNAL,FD  INTERNAL,FD ... ETC. @D@@@[L DO SORT ,TAG(L) EQU SORT(L,2)+0100VU
)@@G@@00*SORT(L,*2)     @C@@@[L DO SORT ,FLDATA**(SORT(L,1)+1) EQU TAG(L)     VV
)@@G@@@D@@@[L DO SORT ,Z(L) EQU FDSGMT(TAG(L))+(077**SORT(L,2))+1 @B@@@[L DO SVW
)@@G@@ORT ,APSYMF**(Z(L))  EQU  SORT(L,1) @]@@@[      END   @[@@@[.     @F@@@[VX
)@@G@@. THE FOLLOWING POINTS SHOULD BE NOTED IN USING THE SORT PROC--   @G@@@[VY
)@@G@@.  (1) THE ORDER OF PARAMETER FIELDS IS IMMATERIAL EXCEPT THAT ALTERNATEVZ
)@@G@@@F@@@[.     DEFS (IF ANY) OF A SYMBOL MUST ALL PRECEDE THE PRIMARY DEF. WA
)@@G@@@G@@@[.  (2) SUBFIELDS MUST BE OF THE FORM:  INTERNAL,FD . IF FD IS MULTWB
)@@G@@I-CHAR@B@@@[.     IT MUST BE PRECEDED BY AN ASTERISK. @F@@@[.     IT WILWC
)@@G@@L PRINT AS A QUESTION MARK WHEN WRITTEN AS OUTPUT     @G@@@[.  (3) QUESTWD
)@@G@@ION MARK CAN NEVER BE INPUT FROM A TTY.  ALTERNATE IS '$Q'  @G@@@[.  (4)WE
)@@G@@ THE FOLLOWING FD CHARS HAVE AMBIGUOUS TTY AND PRINTER GRAPHICS:  @C@@@[WF
)@@G@@.     GRAPHIC  PRINTER       TTY       OCTAL    @B@@@[.       ^       DEWG
)@@G@@LTA      UP ARROW     04@B@@@[.       "      LOZENGE   DOUBLE QUOTE   76WH
)@@G@@@B@@@[.             RECORD MK   LEFT ARROW    77@G@@@[.     THE RECORD MWI
)@@G@@ARK (077) CAN NEVER BE USED, AS SYSTEM I/O USES IT    @G@@@[.     AS A FWJ
)@@G@@LAG FOR END OF LINE (AT OUTPUT), AND TTY USES IT FOR EDITING@[@@@[.     WK
)@@G@@@B@@@[. NOW LET'S DEFINE THE DAMN SYMBOLS---    @[@@@[.     @]@@@[ SORT WL
)@@G@@;     @E@@@[;                            **** UNDERLINED NUMERICS ****  WM
)@@G@@@G@@@[A0BAR,  '0'  A1BAR,  '1'  A2BAR,  '2'  A3BAR,  '3'  A4BAR,  '4'   WN
)@@G@@   ;  @G@@@[A5BAR,  '5'  A6BAR,  '6'  A7BAR,  '7'  A8BAR,  '8'  A9BAR,  WO
)@@G@@'9'      ;  @C@@@[ ;                         ***** NUMERICS ***** @G@@@[WP
)@@G@@ AZERO,  '0'  AONE,   '1'  ATWO,   '2'  ATHREE, '3'  AFOUR,  '4'      ; WQ
)@@G@@@G@@@[ AFIVE,  '5'  ASIX,   '6'  ASEVEN, '7'  AEIGHT, '8'  ANINE,  '9'  WR
)@@G@@    ; @D@@@[ ;   .             ***** UNDERLINED ALFABETICS *****  @G@@@[WS
)@@G@@ AABAR,  'A'  ABBAR,  'B'  ACBAR,  'C'  ADBAR,  'D'  AEBAR,  'E'      ; WT
)@@G@@@G@@@[ AFBAR,  'F'  AGBAR,  'G'  AHBAR,  'H'  AIBAR,  'I'  AJBAR,  'J'  WU
)@@G@@    ; @G@@@[ AKBAR,  'K'  ALBAR,  'L'  AMBAR,  'M'  ANBAR,  'N'  AOBAR, WV
)@@G@@ 'O'      ; @G@@@[ APBAR,  'P'  AQBAR,  'Q'  ARBAR,  'R'  ASBAR,  'S'  AWW
)@@G@@TBAR,  'T'      ; @G@@@[ AUBAR,  'U'  AVBAR,  'V'  AWBAR,  'W'  AXBAR,  WX
)@@G@@'X'  AYBAR,  'Y'      ; @#@@@[ AZBAR,  'Z'  ;   @D@@@[ ;                WY
)@@G@@ ***** ORDINARY ALFABETICS *****    @G@@@[ AA,     'A'  AB,     'B'  AC,WZ
)@@G@@     'C'  AD,     'D'  AE,     'E'      ; @G@@@[ AF,     'F'  AG,     'GXA
)@@G@@'  AH,     'H'  AI,     'I'  AJ,     'J'      ; @G@@@[ AK,     'K'  AL, XB
)@@G@@    'L'  AM,     'M'  AN,     'N'  AO,     'O'      ; @G@@@[ AP,     'P'XC
)@@G@@  AQ,     'Q'  AR,     'R'  AS,     'S'  AT,     'T'      ; @G@@@[ AU,  XD
)@@G@@   'U'  AV,     'V'  AW,     'W'  AX,     'X'  AY,     'Y'      ; @G@@@[XE
)@@G@@ AZ,     'Z'                                                          ; XF
)@@G@@@G@@@[AUNION,*'@U' AINTER,*'@I' ACNTNS,*'@C' ACNTIN,*'@N' ADIERS,*'@S'  XG
)@@G@@    ; @G@@[[AALFA, *'@F' AOMEGA,*'@W' ADOMNO,*'@%' AUNDRL,*'@-'         XH
)@@G@@          ; @D[@@[ ; ALTERNATE CHARS FOR SITES WITHOUT UOM TTY35 CHANGESXI
)@@G@@@G@@@[ AMULT, *'$%' ATAKE, *'@T' ADROP, *'@D' AQUAD, *'$W' AQQUAD,*'$H' XJ
)@@G@@    ; @D@@@[ ;                 ***** PRIMITIVE SCALAR OPS *****   @G@@@[XK
)@@G@@ AADD,   '+'  ASUBTR, '-'  AMULT,  '#'  ADIVID,  '%'  ACEIL, *'$C'    ; XL
)@@G@@@G@@@[ AFLOOR,*'$L' AEXPON,  '*' ALOG,  *'$*' ARESID,*'$!' AFACTL,  '!' XM
)@@G@@    ; @G@@@[ AROLL, *'$Q' AROLL,  '?'  ACIRCL,*'$T' ALGNOT,*'$N' ALGAND,XN
)@@G@@*'$A'     ; @G@@@[ ALGOR, *'$O' ALGNAN,*'@A' ALGNOR,*'@O' ALESS,  '<'  AXO
)@@G@@LEQ,  *'$<'     ; @G@@[[ ALGOR, *'$+' ALGNOR,*'@+'  ; NEW STANDARDS FOR XP
)@@G@@LOGICAL OR ON OUTPUT    @E@@[[ ALGAND,*'$#' ALGNAN,*'@#'   ; AND ALSO FOXQ
)@@G@@R LOGICAL AND     @G@@@[ AEQUL,  '='  AUNEQL,*'$=' AGRTR,  '>'  AGEQ,  *XR
)@@G@@'$>'                  ; @D@@@[ ;             ***** PRIMITIVE MIXED FUNCTXS
)@@G@@IONS *****  @G@@@[ ASIZE, *'$R' ARAVEL, ','  AINDEX,*'$I' ATAKE,  '^'  AXT
)@@G@@DROP, *'$^'     ; @G@@@[ AUPGRD,*'$U' ADNGRD,*'$D' AREDUC, '/'  AXPAND, XU
)@@G@@'\'  AREVER,*'$V'     ; @G@@@[ AXPOSE,*'$X' AMEMBR,*'$E' ADCODE,*'$B' ANXV
)@@G@@CODE,*'@B'                  ; @D@@@[ ;        ***** PRIMITIVE MIXED ON LXW
)@@G@@AST COORD *****   @G@@@[ ARDFIR,*'$/' AXPFIR,*'$\' ARVFIR,*'@V'         XX
)@@G@@                      ; @C@@@[ ;        ***** OTHER CALCULATIONAL OPS **XY
)@@G@@***   @G@@@[ AOUTER,*'$.' AGOTO, *'$G' AQUAD,  '"'  AQQUAD,*'$"' ASYSTM,XZ
)@@G@@*'$Y'     ; @G@@@[ ASTORE,*'$S'                                         YA
)@@G@@                ; @D@@@[ ;        ***** PUNCTUATION AND SYSTEM SYMBOLS *YB
)@@G@@****  @G@@@[ AUMINS, '&'  ASPACE, ' '  AALFAN, 072  ALPAR,  '('  ARPAR, YC
)@@G@@ ')'      ; @G@@@[ ALBRAK, '['  ARBRAK, ']'  ADECPT, '.'  ACOLON, ':'  AYD
)@@G@@SEMIC, ';'      ; @G@@@[ AFUNCT,*'$F' ALAMP, *'$:' ALOCK, *'$K' AMARK, *YE
)@@G@@'$M'                  ; @F@@@[ AESCAP,*'$@' ; ESCAPE FROM QUOTE-QUAD INPYF
)@@G@@UT (O-BKSP-U-BKSP-T)    @G@@@[ ADOLAR,*'$$' ADOLAR,  '$' ; DOLLAR SIGN FYG
)@@G@@OR INPUT ($$) AND OUTPUT ($)  @F@@@[ AAT,   *'@@' AAT,     '@' ; ATSIGN YH
)@@G@@FOR INPUT (@@) AND OUTPUT (@) @G@@@[     . END OF CORRESPONDENCE TBL BETYI
)@@G@@WEEN FIELDATA AND INTERNAL -WHEW!   @]@@@[      END   @D@@@[/. CONVERSIOYJ
)@@G@@N PROCS BETWEEN FIELDATA AND INTERNAL CODE@[@@@[.     @F@@@[O      PROC YK
)@@G@@   . EXECUTE TIME CONVERSION, INTERNAL TO FIELDATA    @D@@@[OUTCNV* NAMEYL
)@@G@@ 0 . COUNTLOC FROM,TO (NO WDS LEFT IN A0) @G@@@[OUTCNB* NAME 1 . ENTRY TYM
)@@G@@O FORCE BLANK FILL REGARDLESS OF BATCH/DEMAND   @#@@@[       UNLI$T .   YN
)@@G@@@D@@@[       LR,O(0,1) R1,O(1,1) . CHAR COUNT FOR OUTPUT    @G@@@[ DO O(YO
)@@G@@2,1)<0 , GO OC$010 . IF NOT GIVEN, BYPASS SETUP OF 'FROM' LINKAGE @E@@@[YP
)@@G@@       DL    A1,WRFCTL   . INITIALIZE POINTERS IN EDIT RTNE @F@@@[      YQ
)@@G@@ LXM,U*(1-O(2,*1)) A2,O(2,1) . SET BEGIN ADDR OF 'FROM' AREA@#@@@[OC$010YR
)@@G@@* NAME .    @D@@@[       LA    A0,(+1,O(2,2))  . SET ADDR OF 'TO' AREA  YS
)@@G@@@F@@@[ DO 1-O(0,0) , LMJ X11,WREDIT . EDIT WITH BATCH/DEMAND FILL CHAR  YT
)@@G@@@E@@@[ DO O(0,0)   , LMJ X11,WREDIB . EDIT WITH FORCED BLANK FILL @D@@@[YU
)@@G@@       ANA   A0,(+1,O(2,2)) . COMPUTE NO OF WORDS USED@#@@@[       LI$T YV
)@@G@@.     @]@@@[       END .@[@@@[.     @[@@@[.     @A@@@[.  TRANSLATE FD TOYW
)@@G@@ INTERNAL CODE    @[@@@[.     @A@@@[.  CALL:  INCNV  IN,OUT,COUNT ERROR YX
)@@G@@@[@@@[.     @ @@@[P      PROC              .    @ @@@[INCNV* NAME       YY
)@@G@@       .    @ @@@[       UNLI$T            .    @B@@@[       L,P(0,1) R1YZ
)@@G@@,P(1,3) . CHAR COUNT    @ @@@[       LXI,U A0,1        .    @A@@@[ DO  1ZA
)@@G@@-P(1,*1) , LXM,U A0,P(1,1)   .@A@@@[ DO    P(1,*1) , LXM   A0,P(1,1)   .ZB
)@@G@@@ @@@[       LXI,U  X3,1       .    @A@@@[ DO 1-P(1,*2) , LXM,U  X3,P(1,ZC
)@@G@@2)   .@A@@@[ DO   P(1,*2) , LXM    X3,P(1,2)   .@A@@@[       LMJ   X11,TZD
)@@G@@RANFD  . DO IT    @ @@@[       DO P(2)>0 , J P(2,1) . @ @@@[       LI$T ZE
)@@G@@             .    @ @@@[       END               .    @[@@@[.     @[@@@[ZF
)@@G@@.     @G@@@[APLBCI* PROC . THIS PROC GENERATES MESSAGE CONSTANTS, I.E. TZG
)@@G@@HE INTERNAL @G@@@[.              CODE CORRESPONDING TO A MESSAGE WHICH IZH
)@@G@@S PUNCHED ON THE  @G@@@[.              SOURCE CARD IN THE ASSEMBLER'S CHZI
)@@G@@ARACTER SET (FIELDATA)  @G@@@[.    WE ASSUME THAT THE FIELDATA--- INTERNZJ
)@@G@@AL CORRESPONDENCE HAS BEEN    @G@@@[.  ALREADY ESTABLISHED THROUGH A REFZK
)@@G@@ERENCE TO THE 'FDSYMB PROCEDURE.    @C@@@[UNPK* PROC.   CONVERT ONE FIELZL
)@@G@@D TO INTERNAL     @E@@@[DBL EQU UNPK(1,1)+0D    . FORCE SYMBOL TO DOUBLEZM
)@@G@@ PRECISION  @G@@@[L DO 12 ,C(L)  EQU 077**(DBL*/(6*(L-12)))  . EXTRACT EZN
)@@G@@ACH CHARACTER     @D@@@[NK(1) EQU 12.      SET NO OF CHARS TO BE CONVERTZO
)@@G@@ED    @B@@@[ DO C(1)+C(2)+C(3)+C(4)=0 ,NK(1) EQU 8.   @D@@@[ DO NK(1)=8 ZP
)@@G@@, DO C(5)+C(6)+C(7)+C(8)=0 ,NK(1) EQU 4.  @D@@@[ DO NK(1)=4 , DO C(9)+C(ZQ
)@@G@@10)+C(11)+C(12)=0  , END.     @F@@@[ DO NK(1)<12 ,L DO NK(1) ,C(L) EQU CZR
)@@G@@(L+12-NK(1)) . WORD ADJUST    @C@@@[ADJUST NAME  . NOW LEFT ADJUST AND BZS
)@@G@@LANK FILL   @B@@@[ DO C(1)>0 , GO BCIGEN. OUT IF ADJUSTED   @B@@@[L DO NZT
)@@G@@K(1) ,C(L) EQU C(L+1)  . LEFT ADJUST@B@@@[C(NK(1)) EQU ASPACE.         .ZU
)@@G@@ BLANK FILL @ @@@[       GO    ADJUST. TRY AGAIN@C@@@[BCIGEN* NAME.  NOWZV
)@@G@@ GENERATE THE DATA WORD(S)    @E@@@[M DO NK(1)/4 , + APSYMF(C(4*M-3)+1),ZW
)@@G@@APSYMF(C(4*M-2)+1), ;   @D@@@[                 APSYMF(C(4*M-1)+1),APSYMFZX
)@@G@@(C(4*M)+1). @]@@@[       END. @A@@@[L DO APLBCI(1) , UNPK APLBCI(1,L)   ZY
)@@G@@@]@@@[      END   ___   @D@@@[       LR,O(0,1) R1,O(1,1) . CHAR COUNT FOZZ
)@@G@@R OUTPUT    @G@@@[ DO O(2,1)<0 , GO OC$010 . IF *[S@@@*SDFF*@ @@@[. DEFIAA
)@@G@@NE SIZE OF WORKSPACE    @]@@@[       DEF .@E@@@[WSSVSI EQU   8          AB
)@@G@@ . SIZE OF STATE INDICATOR BLOCK    @G@@[[WSYSIZ  EQU    256            AC
)@@G@@. DEFAULT SYMBOL TBL SIZE (NO OF ENTRIES) @F@@[[WSSIND  EQU    2        AD
)@@G@@      . DEFAULT WS SIZE (4096 WD BLOCKS)  @G@@[[WSSIZE  EQU    4096*WSSIAE
)@@G@@ND    . DEFAULT FREE STORAGE (NOMINAL) IN WORDS @D@@[[WSTAG   EQU    X1 AF
)@@G@@            . BASE REG FOR WORKSPACE@B@@[[. NOW DEFINE TAGS IN THE WORKSAG
)@@G@@PACE ITSELF @C@@[[WSID    EQUF   0,WSTAG        . WORKSPACE NAME  @B@@[[AH
)@@G@@WSPASW  EQU    WSID+3         . PASSWORD  @D@@[[WSDSAV  EQU    WSPASW+2 AI
)@@G@@      . TIME/DATE OF LAST SAVE@F@@[[WSASIZ  EQU    WSDSAV+2       . ACTUAJ
)@@G@@AL SIZE OF CURRENT WORKSPACE  @B@@[[WSISIZ  EQUF   WSASIZ,,H1     . SIZEAK
)@@G@@ INDEX@D@@[[WSNSIZ  EQUF   WSASIZ,,H2     . NOMINAL SIZE IN WORDS @F@@[[AL
)@@G@@WSFREE  EQU    WSASIZ+1       . POINTER TO START OF FREE LIST     @E@@[[AM
)@@G@@WSSTAK  EQU    WSFREE+1       . POINTER TO TOP OF STACK     @E@@[[WSSFEIAN
)@@G@@  EQU    WSSTAK+1       . SIGNAL FLAG FOR EVAL INPUT  @H@@[[WSTATE  EQU AO
)@@G@@   WSSFEI+2       . STATE VECTOR (FIELDS DEFINED BY PROC STATEV)  @E@@[[AP
)@@G@@WSFLGA  EQU    WSTATE+WSSVSI  . FLAG WORD FOR SYMBOL TABLE  @F@@[[WSYMAXAQ
)@@G@@  EQUF   WSFLGA,,H2     . MAX NO ENTRIES ALLOWED IN SYM TBL @F@@[[WSFLGBAR
)@@G@@  EQU    WSFLGA+1       . ANOTHER SYMBOL TABLE FLAG WORD    @F@@[[WSYORGAS
)@@G@@  EQUF   WSFLGB,,H1     . POINTER TO 1ST WORD OF SYMB TBL   @F@@[[WSYENDAT
)@@G@@  EQUF   WSFLGB,,H2     . POINTER TO LAST WORD OF SYMB TBL  @E@@[[WSFLGCAU
)@@G@@  EQU    WSFLGB+1       . AND YET ANOTHER FLAG WORD   @H@@[[WSVERS  EQUFAV
)@@G@@   WSFLGC,,Q1     . APL VERSION UNDER WHICH THIS WS LAST SAVED    @G@@[[AW
)@@G@@WSLEVL  EQUF   WSFLGC,,Q2     . AND LEVEL (IN CASE WS FMT EVER CHANGES) AX
)@@G@@@G@@[[WSYNUM  EQUF   WSFLGC,,H2     . CURRENT NO OF ENTRIES IN SYMBOL TAAY
)@@G@@BLE   @F@@[[WSFUZZ  EQU    WSFLGC+1       . 1ST WORD OF (DFLOAT) FUZZ COAZ
)@@G@@NST   @A@@[[WSFLGD  EQU    WSFUZZ+2       .     @F@@[[WSFUZI  EQUF   WSFBA
)@@G@@LGD,,Q1     . FUZZ INDEX (NO BITS TO IGNORE)    @C@@[[WSPARES(1) EQU 66 BB
)@@G@@            . 66 SPARE WORDS  @A@@[[WSFLGE  EQU    WSFLGD+1+WSPARES(1) .BC
)@@G@@@B@@[[WSDBUG  EQUF   WSFLGE,,Q1     . DEBUG FLAG@C@@[[WSIXOR  EQUF   WSFBD
)@@G@@LGE,,Q2     . INDEX ORIGIN    @D@@[[WSDGTS  EQUF   WSFLGE,,Q3     . SETTBE
)@@G@@ING OF )DIGITS    @D@@[[WSWDTH  EQUF   WSFLGE,,Q4     . SETTING OF )WIDTBF
)@@G@@H     @D@@[[WSRAND  EQU    WSFLGE+1       . RANDOM NUMBER SEED    @F@@[[BG
)@@G@@WSMSIZ  EQU    WSRAND+1       . MAX SIZE TO WHICH WS CAN EXPAND   @E@@[[BH
)@@G@@WSMSZI  EQUF   WSMSIZ,,H1     . INDEX PORTION OF MAX SIZE   @F@@[[WSFPNTBI
)@@G@@  EQU    WSMSIZ+1       . POINTERS FOR DETATCHED FREE BLOCK @F@@[[WSFFWABJ
)@@G@@  EQUF   WSFPNT,,H1     . 1ST WD ADDR OF DETACHED BLOCK     @F@@[[WSFLWABK
)@@G@@  EQUF   WSFPNT,,H2     . LAST WD ADDR OF DETACHED BLOCK    @E@@[[WSGARBBL
)@@G@@  EQU    WSFPNT+1       . POINTER TO GARBAGE LIST     @C@@[[WSPARES(1) EBM
)@@G@@QU 15             . 15 SPARE WORDS  @E@@[[WSYTBL  EQU    WSGARB+1+WSPAREBN
)@@G@@S(1) . START OF SYMBOL TABLE  @D@@[[WSPARES(1) EQU 3*WSYSIZ       . 3 WDBO
)@@G@@S PER TABLE ENTRY @F@@[[WSWORK  EQU    WSYTBL+WSPARES(1)   . NOMINAL STABP
)@@G@@RT OF FREE STORAGE@[@@[[.     @F@@[[WSINFO  EQU    20             . DEFIBQ
)@@G@@NE LOCN CTR USED FOR WORKSPACE@[@@[[.     @#@@[[WSDEF*  PROC   .  @G@@[[BR
)@@G@@$(WSINFO)  RES 0-$            . RESET COUNTER FOR USE BY UNLI$T/LI$T    BS
)@@G@@@#@@[[        END    .  @[_@@[.     @D@@@[. CONVERSIONS BETWEEN ABSOLUTEBT
)@@G@@ AND RELATIVE WS ADDRS  @[@@@[.     @#@@@[P      PROC .     @#@@@[ABSADRBU
)@@G@@* NAME .    @ @@@[       A,U   P(1,1),0,WSTAG . @]@@@[       END .@#@@@[BV
)@@G@@P      PROC .     @#@@@[RELADR* NAME .    @ @@@[       AN,U P(1,1),0,WSTBW
)@@G@@AG .  @]@@@[       END .@[@@[[.     @ @@[[. PROC TO DUMP THE WORKSPACE  BX
)@@G@@@[@@[[.     @#@@[[        PROC   .  @#@@[[WSDUMP* NAME   .  @#@@[[      BY
)@@G@@  UNLI$T .  @G@@[[        X$DUMP 0,WSWORK-WSID+4096,'O','AXR',X1    . ONBZ
)@@G@@LY DUMP 1ST 4K BLK@#@@[[        LI$T   .  @#@@[[        END    .  @[@@[[CA
)@@G@@.     @C@@[[. PROCS TO SET BASEREG TO COPY OR ACTIVE WS     @[@@[[.     CB
)@@G@@@D@@[[B      PROC         . SET BASEREG FOR COPY/ACTIVE WS  @^@@[[BASCPYCC
)@@G@@* NAME  0     .   @^@@[[BASACT* NAME  1     .   @D@@[[       LX    WSTAGCD
)@@G@@,RCCFWA+B(0,0)*(RCAFWA-RCCFWA)  .   @^@@[[       END          .   @ @@[[CE
)@@G@@R      PROC  *1          .    @ @@[[ABSCPY* NAME 0           .    @ @@[[CF
)@@G@@ABSACT* NAME 1           .    @D@@[[       A     R(1,1),RCCFWA+R(0,0)*(RCG
)@@G@@CAFWA-RCCFWA)  .  @#@@[[       END   .    @ @@[[R      PROC  *1         CH
)@@G@@ .    @ @@[[RELCPY* NAME 0           .    @ @@[[RELACT* NAME 1          CI
)@@G@@ .    @D@@[[       AN    R(1,1),RCCFWA+R(0,0)*(RCAFWA-RCCFWA)  .  @#@@[[CJ
)@@G@@       END   .    @A@@@[/. DEFINITION OF RUN CONTROL BLOCK  @#@@[[      CK
)@@G@@  DEF    .  @D@@[[RCDMND  EQU    RUNBLK         . DEMAND/BATCH FLAG     CL
)@@G@@@C@@[[RCSPAR(1) EQU  RCDMND+1       . ONE SPARE WORD  @F@@[[RCTREA  EQU CM
)@@G@@   RCSPAR(1)+1    . ADDR OF TREAD$ ROUTINE TO BE USED @E@@[[RCWRIT  EQU CN
)@@G@@   RCTREA+1       . ADDR OF ROUTINE FOR PRINT$'S@E@@[[RCLSIZ  EQU    RCWCO
)@@G@@RIT+1       . DEFAULT LINE LENGTH (CHARS) @F@@[[RCDATE  EQU    RCLSIZ+1 CP
)@@G@@      . TODAYS DATE (YYMMDD IN DECIMAL)   @G@@[[RCONTM  EQU    RCDATE+1 CQ
)@@G@@      . TIME OF DAY AT SIGNON (DFLOAT 60'THS)   @G@@[[RCPUON  EQU    RCOCR
)@@G@@NTM+2       . COMPUTER TIME USED AT SIGNON (60THS)    @H@@[[RCKEYT  EQU CS
)@@G@@   RCPUON+2       . ACCUMULATED KEYING TIME (INTEGER MILLISEC)    @C@@[[CT
)@@G@@RCSPAR(1) EQU  RCKEYT+1       . ONE SPARE WORD  @D@@[[RCLIBN  EQU    RCSCU
)@@G@@PAR(1)+1    . USER'S LIBRARY NUMBER @D@@[[RCOPTW  EQU    RCLIBN+2       CV
)@@G@@. PROCESSOR OPTIONS WORD@E@@[[RCFCTL  EQU    RCOPTW+1       . FILE SYST CW
)@@G@@CONTROL PARAMS    @D@@[[RCNFIL  EQUF   RCFCTL,,H1     . NO OF ASSIGNED FCX
)@@G@@ILES  @F@@[[RCFSIZ  EQUF   RCFCTL,,H2     . SIZE OF AN FCT BUFFER (WORDSCY
)@@G@@)     @E@@[[RCFFWA  EQUF   RCFCTL+1,,H1   . FWA OF 1ST WD OF FCT BLOCKS CZ
)@@G@@@E@@[[RCFLWA  EQUF   RCFCTL+1,,H2   . LWA OF FILE CONTROL TABLES  @D@@[[DA
)@@G@@RCADDF  EQU    RCFCTL+2       . ADD FILE READ FLAG    @G@@[[RCPTIF  EQU DB
)@@G@@   RCADDF+1       . PAPER TAPE INPUT FLAG (PROMPT WITH X-ON)@F@@[[RCOUTIDC
)@@G@@  EQUF   RCPTIF+1,,H2   . OUTPUT INHIBIT FLAG (SITE/CSITE)  @F@@[[RCALTPDD
)@@G@@  EQU    RCPTIF+2       . ALT PRINT FILE PKT: ACCESS WORD   @G@@[[RCALTFDE
)@@G@@  EQU    RCALTP+1       .                     FILENAME (0 IF NONE)@G@@[[DF
)@@G@@RCPADW  EQU    RCALTF+2       . CTL WD FOR TIMING OF ASCII-APL TERMINALSDG
)@@G@@@F@@[[RCPTCH  EQUF   RCPADW,,H1     . NUM OF PRINT CHARS IN NULL RATIO  DH
)@@G@@@G@@[[RCPDCH  EQUF   RCPADW,,H2     . PAD CHRS IN NULL RATIO (ASCII TERMDI
)@@G@@INALS)@E@@[[RCTBOO  EQU    RCPADW+1       . TDATE$ OF LAST SYSTEM REBOOTDJ
)@@G@@@F@@[[RCBOOT  EQU    RCTBOO+1       . LAST REBOOT IN SECS SINCE 1/1/64  DK
)@@G@@@G@@[[RCMXWS  EQU    RCBOOT+1       . SIZE CTL WD FOR MAX WS USER MAY HADL
)@@G@@VE    @F@@[[RCDFWS  EQU    RCMXWS+1       . SIZE CTL WD FOR DEFAULT CLEADM
)@@G@@R WS  @C@@[[RCSPAR(1) EQU  RCDFWS+9       . 9 SPARE WORDS   @F@@[[RCWRMKDN
)@@G@@  EQU    RCSPAR(1)+1    . ADDR OF OUTPUT AND MARK ROUTINE   @E@@[[RCCOREDO
)@@G@@  EQU    RCWRMK+1       . OVERALL CORE MGMT FLAGS     @D@@[[RCMASF  EQUFDP
)@@G@@   RCCORE,,Q1     . MASTER CONSOLE FLAG   @E@@[[RCLASD  EQUF   RCCORE,,HDQ
)@@G@@2     . CURRENT LAST D-BANK LOCN    @E@@[[RCAFWA  EQUF   RCCORE+1,,H1   DR
)@@G@@. FIRST WORD ADDR OF ACTIVE WS@E@@[[RCALWA  EQUF   RCCORE+1,,H2   . LASTDS
)@@G@@ WORD ADDR OF ACTIVE WS @E@@[[RCCFWA  EQUF   RCCORE+2,,H1   . FWA OF COPDT
)@@G@@Y WS (0 IF NONE)  @C@@[[RCCLWA  EQUF   RCCORE+2,,H2   . LWA OF COPY WS  DU
)@@G@@@C@@[[RCSPAR(1) EQU  RCCORE+2+2     . 2 SPARE WORDS   @B@@[[RCPCT   EQU DV
)@@G@@   RCSPAR(1)+1    . PCT BUFFER@C@@[[RCRUNI  EQU    RCPCT          . ORIGDW
)@@G@@INAL RUNID  @C@@[[RCRUNG  EQU    RCPCT+1        . GENERATED RUNID @B@@[[DX
)@@G@@RCQUAL  EQU    RCPCT+021      . QUALIFIER @C@@[[RCACNT  EQU    RCPCT+023DY
)@@G@@      . ACCOUNT NUMBER  @F@@[[PCTRES  EQU    0144           . SIZE OF PCDZ
)@@G@@T BUFFER (NOTE: MUST    @G@@[[                              . EXTEND UP EA
)@@G@@TO FILE WE'RE EXECUTING FROM) @E@@[[RCSPAR(1) EQU  RCPCT+PCTRES   . 1ST EB
)@@G@@WORD AFTER PCT AREA     @#@@[[RUNCTL* PROC   .  @#@@[[        END    .  EC
)@@G@@@[<@@[/.    @^@@@[. DEFINITIONS FOR I/O   @A@@[[        DEF             ED
)@@G@@      .     @[D@@[.     @ @@@[.      ACCOUNT FILE DEFINTIONS@ @@@[.     EE
)@@G@@ ACCNT DEFINED IN ACCNTG@[@@@[.     @E@@@[ACLIBN EQU   ACCNT+0     . LIBEF
)@@G@@RARY # TO SEARCH OR ENTER     @B@@@[ACKEY  EQU   ACCNT+2     . KEY ON NUEG
)@@G@@MBER  @ @@@[ACLAST EQU   ACCNT+4     .    @B@@@[ACACNT EQU   ACCNT+5    EH
)@@G@@ . ACCOUNT NUMBER @A@@@[ACQUAL EQU   ACCNT+7     . QUALIFIER@A@@@[ACQWTAEI
)@@G@@ EQU   ACCNT+9     . WS QUOTA @C@@@[ACUSED EQU   ACCNT+10    . WS QUOTA EJ
)@@G@@USED SO FAR @B@@@[ACPERM EQU   ACCNT+11    . PERMISSION BITS@[@@[[.     EK
)@@G@@@G@@[[. THESE EQUF'S ARE FOR NEW STYLE BILLING USING SECTORS AND TRK SECEL
)@@G@@S     @[@@[[.     @G@@[[ACRUNI  EQU    ACDUMY+9       . GENERATED RUNID EM
)@@G@@(FOR )PORTS) NOTE LIBNO @G@@[[                              . USES ACTUAEN
)@@G@@L (IF RUNID IS USED AT ALL)   @F@@[[ACMAXU  EQUF   ACDUMY+10,,H1  . MAX EO
)@@G@@ALLOWED DRUM USAGE (SECTORS)  @E@@[[ACCURU  EQUF   ACDUMY+10,,H2  . CURREP
)@@G@@ENT USAGE IN SECTORS    @G@@[[ACMXWS  EQUF   ACDUMY+11,,S1  . MAX WORKSPEQ
)@@G@@ACE SIZE INDEX( FOR CORE CTL) @C@@[[ACPERB  EQUF   ACDUMY+11,,Q4  . PERMER
)@@G@@ISSION BITS @G@@[[ACTRKS  EQU    ACDUMY+12      . ACCUMULATED TRK SECS SES
)@@G@@INCE LAST BILLING @G@@[[ACTBIL  EQU    ACDUMY+13      . TDATE$ OF LAST MET
)@@G@@ASS STORAGE BILLING     @[@@[[.     @B@@[[. FLAG BITS USED IN PERMISSIONEU
)@@G@@ FIELD--    @B@@[[.       EQU    01             . UNUSED    @C@@[[ACLOKBEV
)@@G@@  EQU    02             . LOCKED OUT BIT  @D@@[[ACINUB  EQU    04       EW
)@@G@@      . NUMBER IN USE BIT     @E@@[[ACCONB  EQU    010            . LASTEX
)@@G@@ SESSION )CONTINUED     @F@@[[ACCINH  EQU    020            . CONTINUE WEY
)@@G@@ORKSPACES INHIBITED     @F@@[[ACPINH  EQU    040            . PUBLIC LIBEZ
)@@G@@RARY )SAVE'S INHIBITED  @[@@[[.     @[@@@[.     @G@@[[. DEFINITIONA OF FFA
)@@G@@IELDS IN THE PREAMBLE OF WORKSPACES.  THE STORAGE     @B@@[[. ITSELF IS FB
)@@G@@RESERVED IN ELEMENT LODSAV--  @[@@[[.     @^@@[[. OLD FORMAT PREAMBLES--FC
)@@G@@@[@@[[.     @C]@@[DQUAL  EQU   DIRECT+0    . SAVERS QUALIFIER     @C@@@[FD
)@@G@@DACNT  EQU   DIRECT+2    . SAVERS ACCOUNT NUMBER@B@@@[DREF   EQU   DIRECFE
)@@G@@T+4    . REFERENCE COUNT@B@@@[DKEY   EQU   DIRECT+5    . KEY FOR THIS WSFF
)@@G@@@B@@@[DNAME  EQU   DIRECT+7    . NAME OF THIS WS@C@@@[DCAT   EQU   DIRECFG
)@@G@@T+10   . TIME/DATE CATALOGUED @D@@@[DLAST  EQU   DIRECT+11   . TIME/DATEFH
)@@G@@ LAST REFERENCED  @C@@@[DSIZE  EQU   DIRECT+12   . SIZE OF WS IN WORDS  FI
)@@G@@@B@@@[DLIB   EQU   DIRECT+13   . LIB # OF SAVER @E@@@[DMOST  EQU   DIRECFJ
)@@G@@T+15   . TIME/DATE OF MOST RECENT SAVE    @[@@[[.     @^@@[[. NEW FORMATFK
)@@G@@ PREAMBLE   @[@@[[.     @G@@[[DRFAKE  EQU    PREAMB         . 4 WDS OF ZFL
)@@G@@ERO REQUIRED TO FAKE REL FMT  @G@@[[DRFLAG  EQU    PREAMB+4       . FLAGFM
)@@G@@ WORD-- 'APL*XY' (VERSION-LEVEL)    @F@@[[DRVERS  EQUF   DRFLAG,,S5     FN
)@@G@@. PROCESSOR VERSION AT LAST )SAVE   @C@@[[DRLEVL  EQUF   DRFLAG,,S6     FO
)@@G@@. ... AND LEVEL   @F@@[[DRFTOT  EQU    PREAMB+16      . TOTAL REF CNT (SFP
)@@G@@INCE WS CREATION) @G@@[[DRFSAV  EQU    PREAMB+17      . REF COUNT SINCE FQ
)@@G@@LAST )SAVE OF THIS WS   @G@@[[DRFRES  EQU    PREAMB+18      . REF CNT WIFR
)@@G@@NCE LAST RESET OF WORD DTRES  @G@@[[DTDRES  EQU    PREAMB+19      . TDATFS
)@@G@@E$ OF LAST RESET OF REFCNT ABOVE    @E@@[[DRQUAL  EQU    PREAMB+20      FT
)@@G@@. SAVER'S QUALIFIER (2 WORDS) @F@@[[DRACNT  EQU    PREAMB+22      . AND FU
)@@G@@HIS ACCOUNT (ALSO 2 WORDS)    @D@@[[DRUNID  EQU    PREAMB+24      . AND FV
)@@G@@ALSO HIS RUNID    @G@@[[DMXSIZ  EQU    PREAMB+25      . MAX CORE SIZE TOFW
)@@G@@ WHICH WS CAN EXPAND    @C@@[[DRSPA2  EQU    PREAMB+26      . 2ND SPARE FX
)@@G@@WORD  @E@@[[DRSPA1  EQU    PREAMB+27      . 1ST (REALLY LAST) SPARE WORDFY
)@@G@@@#@@@[       PROC .     @#@@@[IODEF* NAME .     @]@@@[       END  @A@@@[FZ
)@@G@@/.  TRANSMIT A MESSAGE TO THE USER--@[@@@[.     @ @@@[MOVE*  PROC .  NWDGA
)@@G@@S,FROM,TO   @ @@@[       UNLI$T            .    @C@@@[NWDS   EQU   MOVE(GB
)@@G@@1,1) .  NO OF WDS TO BE MOVED @^@@@[ DO NWDS=0 , GO MOVE$7 .@G@@@[ DO NWGC
)@@G@@DS<7 , GO MOVE$1 . IF 6 WDS OR FEWER, USE REG XFERS FOR LESS CODE @ @@@[GD
)@@G@@. 7 WDS OR MORE-- USE A BT    @^@@@[       LXI,U A0,1 .     @ @@@[      GE
)@@G@@ LXM,U A0,MOVE(1,2) .   @^@@@[       LXI,U A1,1 .     @ @@@[       LXM,UGF
)@@G@@ A1,MOVE(1,3) .   @ @@@[       LR,U  R1,MOVE(1,1) .   @^@@@[       BT   GG
)@@G@@ A1,,*A0 .  @^@@@[       GO    MOVE$7 .   @B@@@[MOVE$1* NAME . GENERATE GH
)@@G@@REG XFER INSTRS   @^@@@[ DO NWDS>1 , GO MOVE$2 .@ @@@[       LA    A0,MOGI
)@@G@@VE(1,2) .   @ @@@[       SA    A0,MOVE(1,3) .   @^@@@[       GO    MOVE$GJ
)@@G@@7 .   @#@@@[MOVE$2* NAME .    @ @@@[       DL    A0,MOVE(1,2) .   @ @@@[GK
)@@G@@       DS    A0,MOVE(1,3) .   @^@@@[ DO NWDS=2 , GO MOVE$7 .@^@@@[ DO NWGL
)@@G@@DS>3 , GO MOVE$4 .@ @@@[       LA    A0,MOVE(1,2)+2 . @ @@@[       SA   GM
)@@G@@ A0,MOVE(1,3)+2 . @^@@@[       GO    MOVE$7 .   @#@@@[MOVE$4* NAME .    GN
)@@G@@@ @@@[       DL    A0,MOVE(1,2)+2 . @ @@@[       DS    A0,MOVE(1,3)+2 . GO
)@@G@@@^@@@[ DO NWDS=4 , GO MOVE$7 .@^@@@[ DO NWDS>5 , GO MOVE$6 .@ @@@[      GP
)@@G@@ LA    A0,MOVE(1,2)+4 . @ @@@[       SA    A0,MOVE(1,3)+4 . @^@@@[      GQ
)@@G@@ GO    MOVE$7 .   @#@@@[MOVE$6* NAME .    @ @@@[       DL    A0,MOVE(1,2GR
)@@G@@)+4   @ @@@[       DS    A0,MOVE(1,3)+4 . @#@@@[MOVE$7* NAME .    @ @@@[GS
)@@G@@       LI$T              .    @]@@@[       END. @[@@@[.     @[@@@[.     GT
)@@G@@@A@@@[. PROC TO PRINT LITERAL MESSAGES    @[@@@[.     @]@@@[. CALL:     GU
)@@G@@@[@@@[.     @B@@@[. SEND   '12 CHAR MAX','MORE   ',....     @[@@@[.     GV
)@@G@@@ @@@[P      PROC              .    @ @@@[SEND*  NAME              .    GW
)@@G@@@ @@@[       UNLI$T            .    @F@@@[LCTR   EQU   &           . REMGX
)@@G@@EMBER WHICH LOCATION CTR WE'RE USING@E@@@[       CONSTS  .         . ANDGY
)@@G@@ SWITCH TO GENERATE CONSTANTS @G@@@[ DO LCTR=& , J PAST . IF CODE IS ON GZ
)@@G@@SAME COUNTER, JUMP AREOUND DATA     @[@@@[TOP.  @A@@@[K      DO P(1) , AHA
)@@G@@PLBCI P(1,K)     .@D@@@[NCHAR  EQU   ($-TOP)*4   . CHAR COUNT FOR THIS MHB
)@@G@@ESSAGE@C@@@[$(LCTR) . RESET LOCN CTR TO ITS ORIGINAL SETTING@ @@@[PAST  HC
)@@G@@ L,U   A4,NCHAR    .    @ @@@[       L,U   A3,TOP      .    @ @@@[      HD
)@@G@@ LMJ   X11,PRSEND  .    @#@@@[       LI$T  .    @#@@@[       END   .    HE
)@@G@@@[@@@[.     @A@@@[. PROC TO SEND LITERAL MESSAGES     @[@@@[.     @]@@@[HF
)@@G@@. CALL:     @[@@@[.     @D@@@[. PRINT   COUNT,ADDRESS     ( COUNT IN APLHG
)@@G@@ CHARS )    @[@@@[.     @ @@@[P      PROC              .    @ @@@[PRINT*HH
)@@G@@ NAME              .    @ @@@[       UNLI$T            .    @B@@@[      HI
)@@G@@ L,U   A4,P(1,1)   . CHAR COUNT     @B@@@[       L,U   A3,P(1,2)   . MESHJ
)@@G@@SAGE ADDR   @ @@@[       LMJ   X11,PRSEND  .    @ @@@[       LI$T       HK
)@@G@@       .    @ @@@[       END               .    @[@@@[.     @[@@@[.     HL
)@@G@@@[@@@[.     @ @@@[. PROCS TO COMPUTE KEYING TIME@[@@@[.     @ @@@[P     HM
)@@G@@ PROC              .    @C@@@[TIMEON* NAME             . TURN KEYING TIMHN
)@@G@@ER ON @#@@@[       UNLI$T     @F@@[[        ER     TIME$          . TIMEHO
)@@G@@ NOW (MILLISEC) IS 'BEFORE'   @G@@[[        ANA    A0,RCKEYT      . LESSHP
)@@G@@ ACCUMULATION GIVES (BEFORE-TOTAL)  @G@@[[        SNA    A0,RCKEYT      HQ
)@@G@@. SAVE -(BEFORE-TOT) WHICH IS (TOT-BEFORE)@ ]@@[       LI$T             HR
)@@G@@ .    @ @@@[       END               .    @[@@@[.     @[@@@[.     @ @@@[HS
)@@G@@P      PROC              .    @F@@@[TIMOFF* NAME             . TURN OFF HT
)@@G@@TIM-R AND UPDATE KEYING TIME  @#@@@[       UNLI$T     @D@@[[        ER  HU
)@@G@@   TIME$          . TIME NOW IS 'AFTER'   @H@@[[        AA     A0,RCKEYTHV
)@@G@@      . PLUS (TOT-BEFORE) GIVES TOT+(AFTER-BEFORE)    @F@@[[        TP  HW
)@@G@@   A0             . WAS AFTER GREATER THAN BEFORE?    @G@@[[        AA  HX
)@@G@@   A0,(+24*60*60*1000) . NO, FUDGE FOR CLOCK THRU MIDNITE   @G@@[[      HY
)@@G@@  SA     A0,RCKEYT      . POST KEYING TIME ACCUMULATED TO NOW     @ A@@[HZ
)@@G@@       LI$T              .    @ @@@[       END               .    ___5 ,IA
)@@G@@ GO MOVE$6 .@ @@@[       LA    A0,MOVE(1,2)+4 . @ @@@[       SA    A0,MOIB
)@@G@@VE(1,3)+4 . @^@@@[       GO    MOVE$7 .   @#@@@[*[S@@@*SDFF*@G@@@@. ****IC
)@@G@@***************************************************************** @G@@@@ID
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * IE
)@@G@@@G@@@@.                                                                 IF
)@@G@@    * @G@@@@       AXR$         .                                       IG
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        IH
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        II
)@@G@@                      * @G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLSIJ
)@@G@@                            * @G@@@@       WSDEF.      DEFINE WORKSPACE IK
)@@G@@                                  * @G@@@@WORKSP INFO  2 20.      SET ASIL
)@@G@@IDE THE SPACE                           * @G@@@@       RUNCTL.     DEFINIM
)@@G@@E RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.IN
)@@G@@      AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCIO
)@@G@@K            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.     IP
)@@G@@                                                                * @G@@@@IQ
)@@G@@. END OF STANDARD PROC BLOCK                                          * IR
)@@G@@@G@@@@. ****************************************************************IS
)@@G@@***** @[@@@@.     @[@[@@.     @E@@[[        BRIEF  . UOM ASSEMBLER ONLY,IT
)@@G@@ REMOVE AT OTHER SITES  @[[@@@.     @ @[@@       VARBLS            .    IU
)@@G@@@[@@[[.     @F@@[[. LOC CTR SETTINGS FOR INITIALIZATION AND MASTER CONSOIV
)@@G@@LE CODE     @[@@[[.     @#@@[[        MASTER    @G@@[[ACMAST  INFO   2 MIW
)@@G@@CINFO       . COMMON BLOCK FOR MASTER CONSOLE CLDE    @G@@[[ACINIT  INFOIX
)@@G@@   2 ININFO       . COMMON BLOCK FOR INITIALIZATION CODE    @D@[@@ACCNT*IY
)@@G@@ RES   14          . ACCOUNT INFO FOR THIS RUN  @D@[@@DINDEX* RES  1.   IZ
)@@G@@         DRUM INDEX FOR THIS RUN    @E@@[[. BUFFER IN WHICH ACCOUNT DATAJA
)@@G@@ IS KEPT THROUGHOUT RUN--     @[@@[[.     @G@@[[. NOTE: THE TAGS ACXXXX JB
)@@G@@WHICH POINT INTO THE WORDS OF THE ACCOUNTING    @F@@[[. ENTRY ARE EQU'D JC
)@@G@@BY THE PROC IODEF (IN PDP ELEMENT WSDEF/APL)    @F@@[[. BECAUSE SOME AREJD
)@@G@@ PARTIAL WORDS, WHICH CANNOT BE EXTERNALIZED    @[@@[[.     @#@@[[      JE
)@@G@@  VARBLS .  @A@@[[ACCNT*  RES    14             .     @[@@[[.     @F@@[[JF
)@@G@@. DUMMY AREA USED FOR DEBUGGING UNTIL ACCOUNT EL FMT IS CHANGED-- @[@@[[JG
)@@G@@.     @F@@[[ACDUMY* EQU    ACCNT          . ENABL E NEW STYLE WS ACCOUNTJH
)@@G@@ING   @[@@[[.     @G@@[[ACTMAS* RES    1              . TIME OF LAST MS JI
)@@G@@BILLING IN SECONDS--    @G@@[[               . COMPUTED FROM WORD ACTBILJJ
)@@G@@ OF USER ENTRY, WHICH IS TDATE@[@@[[.     @ #@@@       IODEF            JK
)@@G@@ .    @ @[@@       ACON              .    @]@[@@MCONS* PROC.@[@[@@$(28).JL
)@@G@@@]@[@@       END. @ @[@@WHURP  INFO  2 28        .    @[@@[[.     @#@@[[JM
)@@G@@I      PROC    .  @C@@[[LOCK*  NAME  RDL$   .    PKT,ERR  DRUMADR,ACW   JN
)@@G@@@^@@[[UNLOCK* NAME UNL$   .   @ @@[[ACQIR* NAME  ACQ$        .    @^@@[[JO
)@@G@@READ*  NAME  R$     .   @^@@[[WRITE* NAME  W$     .   @^@@[[       UNLI$JP
)@@G@@T       .   @G@@[[ DO I(1)>0 , DO 1-(I(1,1)<0) , LA,U A0,I(1,1) . IF NEDJQ
)@@G@@ED GET PKT ADDR   @D@@[[        LA,U   A1,I(0,0)      . GET FUNCTION CODJR
)@@G@@E     @B@@[[        SA,S2  A1,3,A0        . STASH IT  @C@@[[ DO I(2)<2 ,JS
)@@G@@ GO IO$010   . SKIP ACESS WORD?     @ @@[[       LA    A1,I(2,2)   . NO JT
)@@G@@@B@@[[        SA     A1,4,A0        . TO PACKET @#@@[[IO$010* NAME   .  JU
)@@G@@@ @@[[ DO I(2)<1 , GO IO$020   .    @ @@[[ DO I(2,1)<0 , GO IO$020 .    JV
)@@G@@@C@@[[       LA,U*(1-I(2,*1)) A1,I(2,1)  . GET DRUMAD @D@@[[        SA  JW
)@@G@@   A1,5,A0        . DRUM ADDR TO PACKET   @#@@[[IO$020* NAME   .  @A@@[[JX
)@@G@@       ER    IOW$        . DO IT    @B@@[[ DO I(1)<2 , GO IO$040   . ERRJY
)@@G@@OR CHECK?   @B@@[[       TZ,S1 3,A0        . YES, DO IT     @ @@[[      JZ
)@@G@@ J     I(1,2)      .    @ @@[[IO$040* NAME             .    @ @@[[      KA
)@@G@@ LI$T              .    @ @@[[       END               .    @[@@[[.     KB
)@@G@@@A@@[[. PROGRAM FILE STUFF FOR ACCNT EL   @[@@[[.     @#@@[[P      PROC KC
)@@G@@ .    @ @@[[PFSRCH* NAME 0           .    @ @@[[       UNLI$T           KD
)@@G@@ .    @ @@[[       LA,U  A0,PFPKT    .    @ @@[[       ER    PFS$       KE
)@@G@@ .    @B@@[[       JNZ   A2,P(1,1)   . ABNORMAL EXIT  @#@@[[       LI$T KF
)@@G@@ .    @#@@[[       END   .    @[@@[[.     @#@@[[P      PROC  .    @ @@[[KG
)@@G@@PFINEW* NAME . INSERT ELEMENT @ @@[[       UNLI$T            .    @E@@[[KH
)@@G@@        TZ,S6  PFSIZW    . IS NEW EL SIZE A TRAK MULTIPLE?  @A@@[[      KI
)@@G@@ ER    ERR$        . NO, CRASH@B@@[[       LA    A1,PFTSIZ   . YES, GET KJ
)@@G@@IT    @C@@[[       AA    A1,PFTADR   . PLUS START ADDR OF EL@D@@[[      KK
)@@G@@ SA    A1,IODADR   . IS NEXT WRITE ADDR, POST IT@C@@[[       ACQIR IOPKTKL
)@@G@@,P(1,1)     . GET THAT TRACK  @D@@[[       SZ    PFTDAT      . BE SURE WKM
)@@G@@E GET TODAY'S DATE@D@@[[       SZ    PFPSIZ      . FORCE PREAMBLE SIZE TKN
)@@G@@O ZERO@B@@[[        SZ     PFPADR    . AND ITS ADDRESS@F@@[[       LNA,UKO
)@@G@@ A0,PFPKT    . FORCE AUTO UPDATE OF NEXT WRITE ADDR   @G@@[[        LA  KP
)@@G@@   A1,IODADR . NEXT WRITE ADDR IS WHAT WE JUST ACQUIRED     @A@@[[      KQ
)@@G@@ ER    PFI$        . DO IT    @C@@[[       JNZ   A2,P(1,1)   . DIE IF NOKR
)@@G@@T SUCCESSFUL@#@@[[       LI$T  .    @#@@[[       END   .    @[ @@@/.    KS
)@@G@@@[@@@@.     @[@@@@.     @E@@@@.         FORMAT OF THE CONTROL SECTOR ( SKT
)@@G@@ECTOR 0 ) OF THE  @D@@@@.         ACCOUNT ELEMENT ( ACCOUNTING/000000000KU
)@@G@@000 ).@[@@@@.     @[@@@@.     @[@@@@.     @G@@@@.        . . . . . . . .KV
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @G@@@@.        .        KW
)@@G@@                     .                             .  @G@@@@. 0      .  KX
)@@G@@    MSGCNT   :    MCFLAG   .      ENTRIES                 . @G@@@@.     KY
)@@G@@   .                             .                             .  @G@@@@KZ
)@@G@@.        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  LA
)@@G@@@G@@@@.        .                                                        LB
)@@G@@   .  @G@@@@. 1      .                        ASSUMED QUOTAS            LC
)@@G@@         .  @G@@@@.        .                                            LD
)@@G@@               .  @G@@@@.        . . . . . . . . . . . . . . . . . . . .LE
)@@G@@ . . . . . . . . . . .  @G@@@@.        .                                LF
)@@G@@                           .  @G@@@@. 2      .                        ASLG
)@@G@@SUMED PERM BITS                  .  @G@@@@.        .                    LH
)@@G@@                                       .  @G@@@@.        . . . . . . . .LI
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @G@@@@.        .        LJ
)@@G@@                                                   .  @G@@@@. 3      .  LK
)@@G@@                      MASCON-                            .  @G@@@@.     LL
)@@G@@   .                                                           .  @G@@@@LM
)@@G@@.        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  LN
)@@G@@@G@@@@.        .                                                        LO
)@@G@@   .  @G@@@@.        .                        NUMBER                    LP
)@@G@@         .  @G@@@@.        .                                            LQ
)@@G@@               .  @G@@@@.        . . . . . . . . . . . . . . . . . . . .LR
)@@G@@ . . . . . . . . . . .  @G@@@@.        .                                LS
)@@G@@                           .  @G@@@@. 5      .                        MELT
)@@G@@SSAGE                            .  @G@@@@.        .                    LU
)@@G@@                                       .  @G@@@@.        .              LV
)@@G@@                                             .  @G@@@@.        .        LW
)@@G@@                                                   .  @B@@@@.           LX
)@@G@@                         .    @B@@@@.                                   LY
)@@G@@ .    @B@@@@.                                    .    @[@@@@.     @[@@@@LZ
)@@G@@.     @[@@@@.     @F@@@@.         MSGCNT - FLAG INDICATING THERE IS A MEMA
)@@G@@SSAGE THAT SHOULD @G@@@@.                  BE DISPLAYED AT SIGN-ON TIME.MB
)@@G@@  THIS FIELD CONTAINS   @D@@@@.                  THE CHARACTER COUNT OF MC
)@@G@@THE MESSAGE.@[@@@@.     @F@@@@.        MCFLAG -  IF NON-ZERO, THE MASTERMD
)@@G@@ IS SIGNED ON WITH WRITE@C@@@@.                 ENABLED INTO THE ACCOINTME
)@@G@@S FILE@[@@@@.     @F@@@@.         ENTRIES - NUMBER OF ACCOUNT NUMBERS CUMF
)@@G@@RRENTLY ENTERED IN@ @@@@.                   THE FILE. @[@@@@.     @G@@@@MG
)@@G@@.         ASSUMED QUOTA - THIS WILL BE USED TO SET A WORKSPACE QUOTA    MH
)@@G@@@G@@@@.                         FOR NEW NUMBERS ENTERED IN THE ACCOUNT FMI
)@@G@@ILE.  @[@@@@.     @H@@@@.         ASSUMED PERM BITS - THIS WILL BE USED MJ
)@@G@@TO SET THE PERMISSION BITS    @H@@@@.                             FOR NEMK
)@@G@@W NUMBERS ENTERED IN THE ACCOUNT FILE.    @[@@@@.     @H@@@@.         MAML
)@@G@@SCON NUMBER - THIS IS THE CURRENT MASTER CONSOLE LIBRARY NUMBER.  @[@@@@MM
)@@G@@.     @G@@@@.         MESSAGE - WORDS 5-27 CONTAIN THE MESSAGE TO BE DISMN
)@@G@@PLAYED AT   @D@@@@.                   SIGN-ON IF MSGCNT IS NON-ZERO.    MO
)@@G@@@[@@@@.     @[@[@@/.    @[@[@@.     @G@[@@.         FORMAT OF INDIVIDUALMP
)@@G@@ ACCOUNT ENTRY.  ENTRY IS 14 WORDS LONG   @B@[@@.         AND THERE ARE MQ
)@@G@@TWO PER SECTOR.   @[@[@@.     @[@[@@.     @G@[@@.        . . . . . . . .MR
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @G@[@@.        .        MS
)@@G@@                                                   .  @G@[@@. 0      .  MT
)@@G@@                      ACLIBN                             .  @G@[@@.     MU
)@@G@@   .                                                           .  @G@[@@MV
)@@G@@.        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  MW
)@@G@@@G@[@@.        .                                                        MX
)@@G@@   .  @G@[@@.        .                                                  MY
)@@G@@         .  @G@[@@.        .                                            MZ
)@@G@@               .  @G@[@@.        . . . . . . . . . . . . . . . . . . . .NA
)@@G@@ . . . . . . . . . . .  @G@[@@.        .                                NB
)@@G@@                           .  @G@[@@. 2      .                        ACNC
)@@G@@KEY                              .  @G@[@@.        .                    ND
)@@G@@                                       .  @G@[@@.        . . . . . . . .NE
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @G@[@@.        .        NF
)@@G@@                                                   .  @G@[@@.        .  NG
)@@G@@                                                         .  @G@[@@.     NH
)@@G@@   .                                                           .  @G@[@@NI
)@@G@@.        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  NJ
)@@G@@@G@[@@.        .                                                        NK
)@@G@@   .  @G@[@@. 4      .                        ACLAST                    NL
)@@G@@         .  @G@[@@.        .                                            NM
)@@G@@               .  @G@[@@.        . . . . . . . . . . . . . . . . . . . .NN
)@@G@@ . . . . . . . . . . .  @G@[@@.        .                                NO
)@@G@@                           .  @G@[@@. 5      .                        ACNP
)@@G@@ACNT                             .  @G@[@@.        .                    NQ
)@@G@@                                       .  @G@[@@.        . . . . . . . .NR
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @G@[@@.        .        NS
)@@G@@                                                   .  @G@[@@.        .  NT
)@@G@@                                                         .  @G@[@@.     NU
)@@G@@   .                                                           .  @G@[@@NV
)@@G@@.        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  NW
)@@G@@@G@[@@.        .                                                        NX
)@@G@@   .  @G@[@@. 7      .                        ACQUAL                    NY
)@@G@@         .  @G@[@@.        .                                            NZ
)@@G@@               .  @G@[@@.        . . . . . . . . . . . . . . . . . . . .OA
)@@G@@ . . . . . . . . . . .  @G@[@@.        .                                OB
)@@G@@                           .  @G@[@@.        .                          OC
)@@G@@                                 .  @G@[@@.        .                    OD
)@@G@@                                       .  @G@[@@.        . . . . . . . .OE
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @G@[@@.        .        OF
)@@G@@                                                   .  @G@[@@. 9      .  OG
)@@G@@                      ACQWTA                             .  @G@[@@.     OH
)@@G@@   .                                                           .  @G@[@@OI
)@@G@@.        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  OJ
)@@G@@@G@[@@.        .                                                        OK
)@@G@@   .  @G@[@@. 10     .                        ACUSED                    OL
)@@G@@         .  @G@[@@.        .                                            OM
)@@G@@               .  @G@[@@.        . . . . . . . . . . . . . . . . . . . .ON
)@@G@@ . . . . . . . . . . .  @G@[@@.        .                                OO
)@@G@@                           .  @G@[@@.        .                          OP
)@@G@@                                 .  @G@[@@. 11     .                    OQ
)@@G@@    ACPERM                             .  @G@[@@.        . . . . . . . .OR
)@@G@@ . . . . . . . . . . . . . . . . . . . . . . .  @[@[@@.     @[@[@@.     OS
)@@G@@@[@[@@.     @E@[@@.         ACLIBN - LIBRARY NUMBER FOR USER. DOUBLE FLOOT
)@@G@@ATING @[@[@@.     @D@[@@.         ACKEY - LIBRARY NUMBER LOCK. 8 APL CHAOU
)@@G@@RS.   @[@[@@.     @F@[@@.         ACLAST - LAST REFERENCE FOR THIS NUMBEOV
)@@G@@R. TDATE FORMAT   @[@[@@.     @D@[@@.         ACACNT - USERS ACCOUNT NUMOW
)@@G@@BER. 12 FD CHARS  @[@[@@.     @C@[@@.         ACQUAL - USERS QUALIFIER. OX
)@@G@@12 FD CHARS @[@[@@.     @D@[@@.         ACQWTA - WORKSPACE QUOTA. FORMATOY
)@@G@@ AS FOLLOWS:@[@[@@.     @C@[@@.         S1 = 0 SAYS CONTINUE NOT ALLOWEDOZ
)@@G@@.     @A@[@@.         S1 <>0 SYAS CONTINUE OK.  @F@[@@.         S2 = MAXPA
)@@G@@ NUMBER OF PUBLIC WORKSPACES THAT CAN BE SAVED. @C@[@@.         S3 = MAXPB
)@@G@@ NUMBER OF 4K WORKSPACES.     @#@[@@.         S4 = 8K @#@[@@.         S5PC
)@@G@@ = 16K@#@[@@.         S6 = 32K@[@[@@.     @G@[@@.         ACUSED - CURREPD
)@@G@@NT SAVED WORKSPACE STATUS. FORMAT AS FOLLOWS:   @[@[@@.     @B@[@@.     PE
)@@G@@    S1 = 0 SAYS CONTINUE IS SAVED.  @B@[@@.         S1 <>0 SAYS NO CONTIPF
)@@G@@NUE EXISTS. @E@[@@.         S2 = CURRENT NUMBER OF SAVED PUBLIC WORKSPACPG
)@@G@@ES.   @D@[@@.         S3 = CURRENT NUMBER OF SAVED 4K WORKSPACES. @#@[@@PH
)@@G@@.         S4 = 8K.@^@[@@.         S5 = 16 K     @#@[@@.         S6 = 32KPI
)@@G@@@[@[@@.     @F@[@@.         ACPERM - PERMISSION BITS FOR THIS NUMBER.  BPJ
)@@G@@ITS ARE USED@ @[@@.                  AS FOLLOWS:@[@[@@.     @ @[@@.     PK
)@@G@@    BIT 0 - NOT USED    @B@[@@.         BIT 1 - NUMBER IS LOCKED OUT    PL
)@@G@@@A@[@@.         BIT 2 - NUMBER IS IN USE. @D@[@@.         BIT 3 - NUMBERPM
)@@G@@ WAS CONTINUED LAST SESSION.  @[@[@@.     @[@[@@.     @ @[@@/      MCONSPN
)@@G@@             .    @ @[@@. INITIAL LOOKUP OF LIB NO    @F@[@@. LIB NO IN PO
)@@G@@A5,A6   ADDR OF WHERE TO XFER ACCOUNT ENTRY IN A0     @ @[@@. RETURNS DRPP
)@@G@@UM INDEX IN A0    @G@@[[. ENTRIES FOR EACH USER ARE IN 14 WORDS.  FOR DEPQ
)@@G@@TAILED LAYOUT, SEE THE  @A@@[[. PROC IODEF IN ELEMENT WSDEF/APL   @C@@[[PR
)@@G@@/. INITIALIZE ACCOUNTING DATA (AT SIGNON TIME)  @F@@[[. ENTER WITH A0=ENPS
)@@G@@TER/NOENTER FLAG, A1,2=KEY IN APLCHARS (LJSF)   @^@@[[. NORMAL EXIT  1,XPT
)@@G@@11    @D@@[[. ERROR EXIT   0,X11 WITH A0=0 (NOFIND), 1 (BAD KEY)  @[@@[[PU
)@@G@@.     @ @[@@SACCNT* SX   X11,SALINK  .    @D@[@@       SA    A0,WHERE   PV
)@@G@@ . SAVE ADDR TO XFER ENTRY TO @C@[@@       DS    A5,WHICH    . SAVE # TOPW
)@@G@@ LOOK FOR   @#@@[[        INITAL .  @A@@[[SACCNT* SX     X11,SALINK     PX
)@@G@@.     @E@@[[        DS     A1,SAKEYA      . STASH USER SPECIFIED KEY    PY
)@@G@@@F@@[[        TZ,U   ONEFIL         . HAS SITE IMPLEMENTED ONE FILE?    PZ
)@@G@@@E@@[[        J      SA0005         . YES, GO DO A REAL LOOKUP    @F@@[[QA
)@@G@@        DS     A1,ASSUMD+2    . NO, JAM KEY IN ASSUMED PARAMS AREA@G@@[[QB
)@@G@@        LMJ    X11,DEFALT     . AND BUILD DUMMY ENTRY USING DEFAULTS    QC
)@@G@@@E@@[[        LA,U   A0,0377777     . GET BIG NUMBER (2047 TRACKS)@E@@[[QD
)@@G@@        SA     A0,ACMAXU      . MAKE IT HIS DRUM USAGE MAX  @C@@[[      QE
)@@G@@  J      SA0500         . AND GO CLEAN UP @E@@[[. THIS SITE HAS HONEST-TQF
)@@G@@O-GOD ACCOUNTING WITHIN APL ITSELF--@C@@[[SA0005  SA     A0,SAENTF      QG
)@@G@@. SAVE ENTER FLAG @ @[@@       LA,U  A0,PFPKT    .    @B@[@@       ER   QH
)@@G@@ PFS$        . FIND ELEMENT   @B@[@@       JZ    A2,AC0100   . IS IT THEQI
)@@G@@RE ?  @D@[@@       TNE,U A2,1        . WAS IT REALLY A NO FOND?   @E@@[[QJ
)@@G@@        PFSRCH SA0010         . LOOK FOR ACCOUNT ELEMENT    @C@@[[      QK
)@@G@@  J      SA0100         . GOT IT, CONTINUE@E@@[[SA0010  TNE,U  A2,1     QL
)@@G@@      . WAS PF STATUS A NO FIND?    @F_@@@       LMJ   X11,ACREAT  . YESQM
)@@G@@, GO MAKE AN ACCOUNTING ELEMENT     @C@@@@       ER    ERR$        . NO,QN
)@@G@@ GIVE UP HERE     @G@[@@       J     AC0300      . NOW THAT WE HAVE AN EQO
)@@G@@LEM, SAY THE #'S NOT IN @ @[@@AC0100 LA,U  A0,R$       .    @ @[@@      QP
)@@G@@ SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@      QQ
)@@G@@ LA,H2 A1,TXTADD   .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@      QR
)@@G@@ LA,U  A0,IOPKT    .    @B@[@@       ER    IOW$        . GET SECTOR ZEROQS
)@@G@@@ @[@@       TZ,S1 3,A0        .    @ @[@@       ER    ERR$        .    QT
)@@G@@@E@[@@       LR,U  R1,1        . ASSUMING I AM A MASTER CONSOLE   @E@[@@QU
)@@G@@       DL    A0,BUFF+3   . GET THE MASTER CONSOLE NUMBER    @B@[@@      QV
)@@G@@ DTE   A0,RCLIBN   . AM I HE???     @A@[@@       LR,U  R1,0        . NOPQW
)@@G@@E     @C@[@@       SR    R1,RCMASF   . SET APPROPRIATE FLAG @ @[@@      QX
)@@G@@ DL    A1,BUFF+1   .    @A@[@@       SA    A1,ASSUMD+9 . SET QUOTA@C@[@@QY
)@@G@@       SA    A2,ASSUMD+11 . AND PERMISSIONS     @A@[@@       TZ    PAFLAQZ
)@@G@@G      . PA SENT? @A@[@@       J     AC0200      . GUESS SO @C@[@@      RA
)@@G@@ TNZ,Q1 BUFF       . NO, IS THERE ANY?    @A@[@@       J     AC0200     RB
)@@G@@ . NOPE     @C@[@@       LA,Q1 A4,BUFF     . YES, GET CHAR COUNT  @E@@[[RC
)@@G@@        J      SA0300         . AND GO ENTER USER IN IT     @A@@[[. ACCORD
)@@G@@UNT ELEMENT EXISTS, GET IT    @F@@[[SA0100  READ   IOPKT,0 *PFTADR,(+28,RE
)@@G@@BUFF)    . GET CTRL SECTOR    @D@@[[. IF NECESSARY, CONVERT CONTROL SECTRF
)@@G@@OR TO NEW FORMAT  @E@@[[SA0110  TZ,S1  BUFF+2         . IS THIS AN OLD FRG
)@@G@@ORMAT FILE? @E@@[[        J      SA0120         . NO, NO CONVERSION NEEDRH
)@@G@@ED    @G@@[[        DL     A0,ASSUMD+10   . YES, GET DRUM USAVE AND PERMRI
)@@G@@ISSIONS     @G@@[[        DS     A0,BUFF+1      . JAM NEW FORMAT DEFAULTRJ
)@@G@@S INTO CTL SECT   @E@@[[        WRITE  IOPKT,0        . AND WRITE IT BACRK
)@@G@@K TO DRUM   @G@@[[. PUT DEFAULTS FROM DRUM CTL SECT INTO ASSUMED VALUES RL
)@@G@@IN CASE NEW USER  @E@@[[SA0120  DL     A0,BUFF+1      . GET DRUM BUF COPRM
)@@G@@Y OF DATA   @F@@[[        DS     A0,ASSUMD+10   . TO SKELETON ENTRY FOR RN
)@@G@@LATER USE   @E@@[[        DL     A0,BUFF+3      . GET MASTER CONSOLE NUMRO
)@@G@@BER   @C@@[[        DS     A0,ACMCON      . AND STASH IT    @B@@[[. IF TRP
)@@G@@HERE'S A )HI MESSAGE, TRANSMIT IT   @F@@[[        LA,Q1  A4,BUFF        RQ
)@@G@@. GET CHAR COUNT FOR )HI MESSAGE    @G@@[[        JZ     A4,SA0200      RR
)@@G@@. IF NONE TO SEND, GO LOOK UP THIS USER   @BR@@@       LA,U  A3,BUFF+5  RS
)@@G@@ . AND WHERE IT IS@ @@@@       LMJ   X11,PRSEND  .    @ @[@@AC0200 DL   RT
)@@G@@ A0,WHICH    .    @B@[@@       LMJ   X11,ACFNUM  . FIND NUMBER    @C@@[[RU
)@@G@@. NOW LOOK THIS USER UP IN THE ACCOUNT ELEMENT  @C@@[[SA0200  DL     A0,RV
)@@G@@RCLIBN      . GET USER'S LIBNO@F@@[[        LA     A2,SABACW      . GET RW
)@@G@@SCRATCH BUFFER ACCESS WORD    @E@@[[        LMJ    X11,FINDNO     . FINDRX
)@@G@@ THIS USER'S NUMBER     @ ]@@@       ER    ERR$        .    @C@[@@      RY
)@@G@@ JZ    A0,AC0300   . NO ADDRESS, NO FIND  @C@@][       JZ    A0,SA0300  RZ
)@@G@@ . NO ADDRESS, NO FIND  @ @[@@       SA    A0,INDEX    .    @F@@[[      SA
)@@G@@  SA     A0,DRUMAD      . POST LOCN OF OUR ACCOUNT ENTRY    @C]@@@      SB
)@@G@@ LR,U  R1,14       . PREPARE TO MOVE ENTRY@D@@@@       LXI,U A1,1       SC
)@@G@@ . A1 SET UP BY FIND RTNE     @C@[@@       LA,H2 A0,WHERE    . TRANSFER SD
)@@G@@IT HERE     @ @[@@       LXI,U A0,1        .    @F@@[[        LA     A0,SE
)@@G@@(+1,ACCNT)  . MOVE TO STANDARD ACCOUNTING AREA  @ ]@@@       BT    A0,0,SF
)@@G@@*A1    .    @ @[@@       LA    A0,INDEX    .    @ @[@@       LX    X11,SSG
)@@G@@ALINK  .    @ @[@@       J     2,X11       .    @ @[@@AC0300 LX    X11,SSH
)@@G@@ALINK  .    @C@[@@       J     1,X11       . REPORT A NO FIND     @ @[@@SI
)@@G@@SALINK RES   1           .    @F@@[[        J      SA0400         . GO SSJ
)@@G@@EE IF CONVERSION IS REQUIRED  @D@@[[. NOFIND-- ENTER THIS USER IN THE ACSK
)@@G@@COUNT ELEMENT     @G@@[[SA0300  LA     A0,(+ASPACE,ASPACE,ASPACE,ASPACE)SL
)@@G@@  . GET SOME BLANKS     @G@@[[        JNE    A0,SAKEYA SA0800    . QUIT SM
)@@G@@IF USER TYPED A NON-BLANK KEY @C@@[[        DL     A0,RCLIBN      . GET SN
)@@G@@HS LIBNO    @D@@[[        LA     A2,SAENTF      . AND AUTO ENTER FLAG   SO
)@@G@@@C@@[[        DTE    A0,ACMCON      . MASTER CONSOLE? @F@@[[        JZ  SP
)@@G@@   A2,SA0800      . NO, QUIT IF ENTER FLAG IS CLEAR   @F@@[[        LMJ SQ
)@@G@@   X11,DEFALT     . BUT IF OK, INITIALIZE TO DEFAULTS @E@@[[       LA,U SR
)@@G@@ A3,ACCNT    . SET POINTER TO INITIALIZED DATA  @B@@[[       LMJ   X11,ESS
)@@G@@NTER   . AND ENTER IT   @ @@[[       ER    ERR$        .    @F@@[[      ST
)@@G@@  SA     A0,DRUMAD      . POST LOCN OF OUR ACCOUNT ENTRY    @C@@[[. CONVSU
)@@G@@ERT ENTRY TO NEW FORMAT, IF NECESSARY     @F@@[[SA0400  TZ     ACMXWS   SV
)@@G@@      . HAS MAX ALLOWED WS BEEN SET UP?   @H@@[[        J      SA0500   SW
)@@G@@      . YES, THIS ENTRY HAS ALREAYD BEEN CONVERTED    @E@@[[        LA,USX
)@@G@@   A0,2           . NO, SET NOMINAL INDEX OF 2  @F@@[[        SA     A0,SY
)@@G@@ACMXWS      . ALD LET HIM HAVE AN 8K WORKSPACE  @F@@[[        SZ     ACTSZ
)@@G@@RKS         . CLEAR ACCUMULATED TRACK SECONDS   @E@@[[        LA     A0,TA
)@@G@@(+1,1,0,0,0,0)   . TDATE$ FOR 1 JAN 64    @E@@[[        SA     A0,ACTBILTB
)@@G@@      . POST AS LAST MS BILLING TIME@E@@[[        LA,U   A0,ACCINH      TC
)@@G@@. GET CONTINUE INHIBIT BIT    @G@@[[        TZ,S1  ACQWTA         . IS UTD
)@@G@@SER NOW ALLOWED TO HAVE A CONTINUE? @E@@[[        LA,U   A0,0           TE
)@@G@@. YES, CLEAR INHIBIT FLAG     @G@@[[        OR     A0,ACPERM      . OLD TF
)@@G@@PERMISSIONS PLUS CONTINUE INHIBIT   @E@@[[        LA,U   A0,ACPINH      TG
)@@G@@. GET PUBLIC SAVE INHIBIT BIT @G@@[[        TZ,S2  ACQWTA         . DOESTH
)@@G@@ USER NOW HAVE ANY PUBLIC QUOTA     @E@@[[        LA,U   A0,0           TI
)@@G@@. YES, CLEAR INHIBIT FLAG     @G@@[[        OR     A1,A0          . COMBTJ
)@@G@@INE PUBLIC ALLOWED WITH OTHER PERMS @E@@[[        SA     A2,ACPERB      TK
)@@G@@. SAVE NEW FORMAT PERMISSIONS @G@@[[        LA,S4  A0,ACQWTA      . GET TL
)@@G@@OLD QUOTA IN NO OF 8K WORKSPACES    @D@@[[        AA,S2  A0,ACQWTA      TM
)@@G@@. PLUS PUBLIC QUOTA     @G@@[[        MSI,U  A0,148         . ASSUME AVGTN
)@@G@@ WS 2 TRACKS PLUS A LITTLE    @E@@[[        LA,S4  A1,ACUSED      . GET TO
)@@G@@CURRENT PRIVATE USAGE   @D@@[[        AA,S2  A1,ACUSED      . PLUS PUBLITP
)@@G@@C USAGE     @G@@[[        MSI,U  A1,148         . ASSUME EXISTING WSSES TQ
)@@G@@ARE ALL AVG SIZE  @G@@[[        SA     A0,ACMAXU      . SAVE EXTIMATED MTR
)@@G@@AX USAGE IN SECTORS     @G@@[[        SA     A1,ACCURU      . SAVE ESTIMTS
)@@G@@ATED CURRENT USAGE IN SECTORS @G@@[[. FINISH INITIALIZING ACCOUNT DATA. TT
)@@G@@NOTE THAT SETUP WILL SET LAST REF   @G@@[[. ANC CLEAR IN USE AND CONTINUTU
)@@G@@ED BITS AFTER DETERMINING WHETHER THIS    @ @@[[. USER IS ENTITLED TO SITV
)@@G@@GN ON @F@@[[SA0500  DL     A0,SAKEYA      . GET KEY GIVEN ON PROCESSOR CTW
)@@G@@ALL   @F@@[[        DTE    A0,ACKEY       . DOES IT MATCH THE ACCOUNT ENTX
)@@G@@TRY?  @E@@[[        J      SA0810         . NO, TAKE NUMBER LOCKED EXIT TY
)@@G@@@E@@[[        LA     A0,RCRUNG      . YES, GET GENERATED RUNID    @D@@[[TZ
)@@G@@        SA     A0,ACRUNI      . POST FOR USE BY )PORTS@G@@[[        LA  UA
)@@G@@   A0,ACTBIL      . GET LAST MS BILLING TIME (TDATE$ FMT)   @D@@[[      UB
)@@G@@  LMJ    X11,TIMTDF     . CONVERT TO SECONDS    @F@@[[        SA     A2,UC
)@@G@@ACTMAS      . POST FOR USE IN STORAGE ACCOUNTING@E@@[[        LA     A0,UD
)@@G@@ACPERM      . RECOVER PERMISSION BITS     @A@@[[SA0510  LX     X11,SALINUE
)@@G@@K     .     @C@@[[        J      1,X11          . NORMAL EXIT     @[@@[[UF
)@@G@@.     @C@@[[SA0800  LA,U   A0,0           . SET NOFIND FLAG @A@@[[      UG
)@@G@@  J      SA0999         .     @C@@[[SA0810  LA,U   A0,1           . SET UH
)@@G@@BAD KEY FLAG@[@@[[.     @E@@[[SA0999  SZ     DRUMAD         . MARK USER UI
)@@G@@NOT SIGNED ON     @A@@[[        LX     X11,SALINK     .     @C@@[[      UJ
)@@G@@  J      0,X11          . ABNORMAL EXIT   @[@@[[.     @A@@[[SALINK  EQUFUK
)@@G@@   $,,H1          .     @B@@[[SAENTF  EQUF   $,,S4          . ENTER FLAGUL
)@@G@@@A@@[[        RES    1              .     @G@@[[SAKEYA  RES    2        UM
)@@G@@      . USER'S KEY FROM PROCESSOR CALL IMAGE    @G@@[[SABACW  +448,BUFF UN
)@@G@@            . ACCESS WD FOR I/O BUFF USED BY LOOKUP   @[@@[[/.    @G@@[[UO
)@@G@@. SUBROUTINE TO SET ACCOUNT DATA TO DEFAULTS-- USED WHEN NEW USERS ENTERUP
)@@G@@@E@@[[. THE SYSTEM OR IF SITE HAS NOT IMPLEMENTED A SINGLE FILE   @[@@[[UQ
)@@G@@.     @#@@[[        INITAL .  @E@@[[DEFALT  LR,U   R1,14          . ENTRUR
)@@G@@IES ARE 14 WORDS LONG   @A@@[[        LA     A1,(+1,ASSUMD) .     @A@@[[US
)@@G@@        LA     A0,(+1,ACCNT)  .     @D@@[[        BT     A0,0,*A1       UT
)@@G@@. MOVE ASSUMED VALUES   @A@@[[        DL     A0,RCLIBN      .     @C@@[[UU
)@@G@@        DS     A0,ACLIBN      . SET UP LIBNO    @A@@[[        DL     A0,UV
)@@G@@RCQUAL      .     @B@@[[        DS     A0,ACQUAL      . QUALIFIER @A@@[[UW
)@@G@@        DL     A0,RCACNT      .     @C@@[[        DS     A0,ACACNT      UX
)@@G@@. AND ACCOUNT     @E@@[[        ER     TDATE$         . FIND OUT WHAT TIUY
)@@G@@ME IT IS NOW@G@@[[        SA     A0,ACLAST      . AND MAKE IT THE TIME OUZ
)@@G@@F LAST REFERENCE  @B@@[[        J      0,X11          . RETURN    @[A@@@VA
)@@G@@/.    @C@@@@. ACCOUNTING ELEMENT DOES NOT EXIST, CREATE ONE @[@@@@.     VB
)@@G@@@D@[@@ACREAT LA,U  A0,RDL$     . HOLD THINGS UP FOR AWHILE  @ @[@@      VC
)@@G@@ SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@      VD
)@@G@@ LA,U  A1,1791     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@      VE
)@@G@@ LA,U  A0,IOPKT    .    @ @[@@       ER    IOW$        .    @ @[@@      VF
)@@G@@ TZ,S1 3,A0        .    @ @[@@       ER    ERR$        .    @#@@[[      VG
)@@G@@  INITAL .  @E@@[[ACREAT  LOCK   IOPKT,0 1791,(+28,BUFF)  . LOCK THE FILVH
)@@G@@E     @ D@@@       LA,U  A0,PFPKT    .    @C@@@@       ER    PFWL$      VI
)@@G@@ . GETNEXT WRITE LOC    @ @@@@       JNZ   A2,AC2100   .    @C@@@@      VJ
)@@G@@ SA    A1,TXTADD   . ELEMENT TO START HERE@B@@@@       LA,U  A0,0       VK
)@@G@@ . NO ENTRIES     @A@[@@       LA    A1,ASSUMD+9 . QUOTAS   @B@[@@      VL
)@@G@@ LA    A2,ASSUMD+11 . PERMISSIONS   @B@[@@       DL    A3,(+ACMNUM) . MAVM
)@@G@@SCON NUMBER @ @[@@       TSTO  A0,BUFF     .    @ @[@@       DS    A3,BUVN
)@@G@@FF+3   .    @E@@[[        LA     A1,ASUSAG      . GET ASSUMED MAX DRUM UVO
)@@G@@SAGE  @D@@[[        LA     A2,ASPERM      . AND PERMISSIONS WORD  @D@@[[VP
)@@G@@        TSTO   A0,BUFF        . STASH QUOTAS, ETC     @F@@[[        DL  VQ
)@@G@@   A0,ACMCON      . GET MASTER CONSOLE ASSUMED LIBNUM @A@@[[        DS  VR
)@@G@@   A0,BUFF+3      .     @ @[@@       LA,U  A0,W$       .    @ @[@@      VS
)@@G@@ SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A1,TXTADD   .    @ @[@@      VT
)@@G@@ SA    A1,IOPKT+5  .    @ @[@@       LA,U  A0,IOPKT    .    @C@[@@      VU
)@@G@@ ER    IOW$        . WRITE CONTROL SECTOR @ @[@@       TZ,S1 3,A0       VV
)@@G@@ .    @ @[@@       J     AC2100      .    @ @[@@       LA    A1,TXTADD  VW
)@@G@@ .    @E@[@@       AA,U  A1,64       . THIS WILL BE THE NEXT WRITE LOC, VX
)@@G@@@F@[@@       SA    A1,IOPKT+5  . SO LET'S WRITE IN IT TO GET OUR TRACK  VY
)@@G@@@ @[@@       ER    IOW$        .    @ @[@@       TZ,S1 3,A0        .    VZ
)@@G@@@ @[@@       J     AC2100      .    @F@@[[        WRITE  IOPKT,AC2100 *PWA
)@@G@@FTADR     . WRITE CTL SECT FROM BUFF@E@@[[        LA     A1,IODADR      WB
)@@G@@. GET DRUM ADDR OF CTL SECT   @D@@[[        AA,U   A1,64          . BUMPWC
)@@G@@ TO NEXT TRACK    @D@@[[        SA     A1,IODADR      . PUT BACK IN PACKWD
)@@G@@ET    @G@@[[        ACQIR  -1,AC2100      . AND FORESTALL I/O 5'S BY ACQWE
)@@G@@UIRING IT   @ N@@@       LA,U  A0,64       .    @C@@@@       SA    A0,TXWF
)@@G@@TSIZ   . START WITH ONE TRACK @E@@@@       SZ    TDATE       . I DON'T KWG
)@@G@@NOW WHAT TIME IT IS     @C@@@@       LA    A1,IOPKT+5  . GET NEXT WRITE WH
)@@G@@LOC   @ @@@@       LNA,U A0,PFPKT    .    @D@@@@       ER    PFI$       WI
)@@G@@ . CREATE THE NEW ELEMENT     @ @[@@       JNZ   A2,AC2100   .    @ @[@@WJ
)@@G@@       LA,U  A0,UNL$     .    @ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@WK
)@@G@@       LA,U  A0,1791     .    @ @[@@       SA    A0,IOPKT+5  .    @ @[@@WL
)@@G@@       LA,U  A0,IOPKT    .    @E@[@@       ER    IOW$        . LET SOMEBWM
)@@G@@ODY ELSE USE IT NOW     @ @[@@       TZ,S1 3,A0        .    @ @[@@      WN
)@@G@@ ER    ERR$        .    @F@[@@       J     1,X11       . GO BACK IN A WAWO
)@@G@@Y TO SAY THAT ALL IS OK @ @[@@AC2100 LA,U  A0,UNL$     .    @ @[@@      WP
)@@G@@ SA,S2 A0,IOPKT+3  .    @ @[@@       LA,U  A1,1791     .    @ @[@@      WQ
)@@G@@ SA    A1,IOPKT+5  .    @ @[@@       LA,U  A0,IOPKT    .    @ @[@@      WR
)@@G@@ ER    IOW$        .    @ @[@@       ER    ERR$        .    @C@[@@/. ROUWS
)@@G@@TINE TO FIND AN ACCOUNTING ENTRY ON DRUM  @A@[@@. ENTER WITH A0,A1 = # TWT
)@@G@@O LOOK FOR  @E@[@@. LEAVE WITH A0 = DRUM INDEX OF ENTRY OR ZERO IF NOT FWU
)@@G@@OUND  @C@[@@.            A1 = INDEX INTO BUFF TO GET ENTRY  @ @[@@      WV
)@@G@@ INSTRS            .    @ @[@@ACFNUM* SX   X11,ACFLNK  .    @D@[@@      WW
)@@G@@ DS    A0,ACNUMB   . SAVE # WE'RE LOOKING FOR   @D@[@@       LA,U  A0,PFWX
)@@G@@PKT    . FIND THE ACCOUNTING ELEMENT@ @[@@       ER    PFS$        .    WY
)@@G@@@ @[@@       JNZ   A2,0,X11    .    @ @[@@       LA,U  A0,R$       .    WZ
)@@G@@@ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   XA
)@@G@@@ @[@@       LA,H2 A1,TXTADD   .    @ @[@@       DS    A0,IOPKT+4  .    XB
)@@G@@@ @[@@       LA,U  A0,IOPKT    .    @B@[@@       ER    IOW$        . GETXC
)@@G@@ SECTOR ZERO@ @[@@       TZ,S1 3,A0        .    @ @[@@       J     0,X11XD
)@@G@@       .    @ @[@@       LA,U  A1,224      .    @E@[@@       SA,H1 A1,IOXE
)@@G@@PKT+4  . SET UP I/O PACKET FOR SEARCH LOOP@F@[@@       LA,H2 A2,BUFF    XF
)@@G@@ . GET NUMBER OF ENTRIES TO LOOK THROUGH  @C@[@@       AA,U  A2,2       XG
)@@G@@ . FUDGE FOR SECTOR ZERO@C@[@@       DL    A4,ACNUMB   . WE LOOK FOR THIXH
)@@G@@S     @D@[@@AC1100 LR,U  R1,16       . ASSUME A FULL BUFFERS WORTH@A@[@@XI
)@@G@@       TLE,U A2,16       . IF NOT,  @B@[@@       LR    R1,A2       . KNOXJ
)@@G@@CK IT DOWN  @C@[@@       ER    IOW$        . READ THE NEXT BUFFER @ @[@@XK
)@@G@@       TZ,S1 3,A0        .    @C@[@@       J     AC1190      . GO CHECK XL
)@@G@@FOR I/O 5'S @A@[@@AC1110 LX    X11,(14,BUFF-14) .     @G@[@@AC1120 SE   XM
)@@G@@ A4,14,*X11  . SEARCH THRU BUFF FOR MATCH ON FIRST WORD OF #@E@[@@      XN
)@@G@@ J     AC1130      . NOT IN THIS ONE, TRY ANOTHER     @E@[@@       TE   XO
)@@G@@ A5,1,X11    . FIRST WORDS MATCH, TRY SECOND    @C@[@@       J     AC112XP
)@@G@@0      . NOPE, KEEP TRYING    @A@[@@       J     AC1140      . FOUND IT:XQ
)@@G@@@E@[@@AC1130 ANA,U A2,16       . DECREMENT # OF ENTRIES TO SEARCH @C@[@@XR
)@@G@@       JG,U  A2,1 AC1150 . NUMBER NOT FOUND     @C@[@@       LA    A1,5,XS
)@@G@@A0     . GET CURRENT READ ADDR@D@[@@       AA,U  A1,8        . BUMP TO GXT
)@@G@@ET NEXT BUFFER    @ @[@@       SA    A1,5,A0     .    @F@[@@       J    XU
)@@G@@ AC1100      . GO READ IN ANOTHER 8 SECTORS WORTH     @ @[@@AC1140 LA,U XV
)@@G@@ A0,0,X11    .    @D@[@@       ANA,U A0,BUFF     . THIS MANY WORDS INTO XW
)@@G@@BUFF  @ @[@@       DSL   A0,36       .    @ @[@@       DI,U  A0,28      XX
)@@G@@ .    @ @[@@       LXI   A0,A1       .    @ @[@@       AA,H2 A0,IOPKT+5 XY
)@@G@@ .    @D@[@@AC1145 LA    A1,X11      . RETURN INDEX INTO BUFF     @ @[@@XZ
)@@G@@AC1146 LX    X11,ACFLNK  .    @ @[@@       J     1,X11       .    @C@[@@YA
)@@G@@AC1150 LA,U  A0,0        . REPORT A NO FIND     @ @[@@       J     AC114YB
)@@G@@6      .    @C@[@@AC1190 LA,S1 A1,3,A0     . GET I/O ERROR STATUS @B@[@@YC
)@@G@@       JE,U  A1,5 AC1110 . I/O 5'S OK     @C@[@@       LX    X11,ACFLNK YD
)@@G@@ . EVERYTHING ELSE DIES @ @[@@       J     0,X11       .    @ @[@@      YE
)@@G@@ VARBLS            .    @ @[@@ACFLNK RES   1           .    @ @[@@ACNUMBYF
)@@G@@ RES   2           .    @[@[@@/.    @[@[@@.     @F@[@@. COPY THE CTRRENTYG
)@@G@@ ACCOUNTING ELEMENT AND ALLOCATE AN EXTRA TRACK @D@[@@. NOTE: THIS ROUTIYH
)@@G@@NE DOES NOT PUT A LOCK ON THE FILE -@D@[@@.      THIS SHOULD BE DONE BY YI
)@@G@@THE CALLER ID DESIRED   @ @[@@       INSTRS            .    @ @[@@ACCOPYYJ
)@@G@@* LA,U A0,PFPKT    .    @C@[@@       ER    PFS$        . FIND THE ELEMENYK
)@@G@@ET    @ @[@@       JNZ   A2,0,X11    .    @C@[@@       ER    PFWL$      YL
)@@G@@ . GET NEXT WRITE LOC   @ @[@@       JNZ   A2,0,X11    .    @D@[@@      YM
)@@G@@ LA    A0,TXTADD   . SAVE WHERE PLD ELEMENT WAS @ @[@@       SA    A0,NXYN
)@@G@@TADD   .    @C@[@@       SA    A1,TXTADD   . POST NEW START ADDR  @D@[@@YO
)@@G@@       LA    A5,TXTSIZ   . GET SIZ OF OLD ELEMENT     @D@[@@       SSL  YP
)@@G@@ A5,3        . TURN IT INTO A BUFFER COUNT@C@[@@       ANA,U A5,1       YQ
)@@G@@ . AND NOW A JGD COUNT  @ @[@@       LA    A1,(224,BUFF) .  @C@[@@      YR
)@@G@@ SA    A1,IOPKT+4  . SET COPY OF ELEMENT  @ @[@@       LA,U  A1,W$      YS
)@@G@@ .    @ @[@@       LA,U  A2,R$       .    @C@[@@       LA    A3,TXTADD  YT
)@@G@@ . GET FIRST WRITE ADDR @C@[@@       LA    A4,NXTADD   . GET FIRST RE1D YU
)@@G@@ADDR  @ @[@@       LA,U  A0,IOPKT    .    @C@[@@CO0100 SA    A4,IOPKT+5 YV
)@@G@@ . SET NEXT READ ADDR   @ @[@@       SA,S2 A2,IOPKT+3  .    @C@[@@      YW
)@@G@@ ER    IOW$        . READ IN NEXT BUFFER  @ @[@@       TZ,S1 3,A0       YX
)@@G@@ .    @ @[@@       J     0,X11       .    @C@[@@       SA    A3,IOPKT+5 YY
)@@G@@ . SET NEXT WRITE ADDR  @ @[@@       SA,S2 A1,IOPKT+3  .    @ @[@@      YZ
)@@G@@ ER    IOW$        .    @ @[@@       TZ,S1 3,A0        .    @ @[@@      ZA
)@@G@@ J     0,X11       .    @ @[@@       AA,U  A4,8        .    @ @[@@      ZB
)@@G@@ AA,U  A3,8        .    @ @[@@       JGD   A5,CO0100   .    @ @[@@      ZC
)@@G@@ SA,H1 A1,IOPKT+4  .    @ @[@@       SA    A3,IOPKT+5  .    @F@[@@      ZD
)@@G@@ ER    IOW$        . WRITE IN NEXT TRACK TO GET IT ALLOCATD @ @[@@      ZE
)@@G@@ TZ,S1 3,A0        .    @ @[@@       J     0,X11       .    @ @[@@      ZF
)@@G@@ LA    A0,TXTSIZ   .    @D@[@@       SA    A0,A5       . TEMP SAVE OLD TZG
)@@G@@EXT SIZE    @E@[@@       AA,U  A0,64       . BUMP ELEM LENGTH BY ONE TRAZH
)@@G@@CK    @ @[@@       SA    A0,TXTSIZ   .    @ @[@@       SZ    TDATE      ZI
)@@G@@ .    @E@[@@       AU    A0,TXTADD   . COMPUTE REAL NEXT WRITE ADDR     ZJ
)@@G@@@C@[@@       LNA,U A0,PFPKT    . REGISTER THE NEW ELEM@C@[@@       ER   ZK
)@@G@@ PFI$        . INSERT THE NEW ELEM  @ @[@@       JNZ   A2,0,X11    .    ZL
)@@G@@@ @[@@. ZERO OUT THE OLD ELEMENT    @D@[@@       LA    A0,(2,BUFF) . FIRZM
)@@G@@ST CLEAR OUT BUFFER     @ @[@@       LR,U  R1,111      .    @ @[@@      ZN
)@@G@@ DSL   A1,72       .    @ @[@@       DS    A1,0,*A0    .    @ @[@@      ZO
)@@G@@ JGD   R1,$-1      .    @F@[@@       SSL   A5,3        . TURN OLD ELEM SZP
)@@G@@IZ INTO A BUFFER COUNT  @ @[@@       ANA,U A5,1        .    @ @[@@      ZQ
)@@G@@ LA    A0,(224,BUFF) .  @C@[@@       LA    A1,NXTADD   . GET ADDR OF OLDZR
)@@G@@ ELEM @ @[@@       DS    A0,IOPKT+4  .    @ @[@@       LA,U  A0,W$      ZS
)@@G@@ .    @ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA,U  A0,IOPKT   ZT
)@@G@@ .    @E@[@@CO0200 ER    IOW$        . WRITE OUT A BUFFER FULL OF ZEROESZU
)@@G@@@ @[@@       TZ,S1 3,A0        .    @ @[@@       J     0,X11       .    ZV
)@@G@@@C@[@@       AA,U  A1,8        . BUMP NEXT WRITE ADDR @ @[@@       SA   ZW
)@@G@@ A1,IOPKT+5  .    @ @[@@       JGD   A5,CO0200   .    @B@[@@       J    ZX
)@@G@@ 1,X11       . ALL DONE !     @#@[@@       VARBLS     @ @[@@NXTADD RES  ZY
)@@G@@ 1           .    @C@@[[        TZ     A2             . WAS PFI OK?     ZZ
)@@G@@@G@@[[AC2100  LX,U   X11,0          . ERROR-- SET X11 SO WE'LL IGDM AT EAA
)@@G@@XIT   @E@@[[        UNLOCK IOPKT,0 1791,(+28,BUFF)  . RELEASE THE FILE  AB
)@@G@@@E@@[[        J      1,X11          . NORMAL EXIT OR IGDM IF ERROR@[@@[[AC
)@@G@@.     @F@@[[. THE SKELETON INFORMATION BELOW IS USED TO INITIALIZE THE DAD
)@@G@@EFAULT@G@@[[. VALUES OF SECTORS ALLOWED, ETC., IN THE CONTROL SECTOR OF AE
)@@G@@THE ACCOUNT @G@@[[. ELEMENT AT THE TIME A NEW APLFILE IS CREATED AND INIAF
)@@G@@TIALIZED.  ONCE   @G@@[[. THE FILE HAS BEEN CREATED, THE VALUES IN THE FAG
)@@G@@ILE ITSELF ARE READ BACK@G@@[[. ON TOP OF THE CONSTANTS BELOW AND USED TAH
)@@G@@O INITIALIZE THE ACCOUNT ENTRY@F@@[[. FOR NEW USERS.  THUS CHANGING THE AI
)@@G@@ASSUMED VALUES MAY BE DONE BY @G@@[[. EXECUTING AN APPROPRIATE APL FUNCTAJ
)@@G@@ION WHICH WRITES THE NEW DEFAULTS   @B@@[[. INTO THE CONTROL SECTOR OF TAK
)@@G@@HE FILE.    @[@@[[.     @H@@[[ACMCON* +271828.0D            . MASTER CONAL
)@@G@@SOLE LIBNUM (E BECAUSE IBM USES PI) @B@@[[ASSUMD* +      0.0D           AM
)@@G@@. LIBNO     @B@@[[        APLBCI '        '     . KEY (NONE)@F@@[[      AN
)@@G@@  +1,1,0,0,0,0          . LAST REF TO THIS NR (1 JAN 64)    @D@@[[      AO
)@@G@@  'WWWWWXXXXX'          . EXEC 8 ACCOUNT NUMBER @C@@[[        'YYYYYZZZZAP
)@@G@@Z'          . EXEC 8 QUALIFIER@G@@[[        'RUNIDX'              . EXECAQ
)@@G@@ 8 RUNID (ACTUAL, NOT ORIGINAL)     @G@@[[ASUSAG  +MAXDRM,0             AR
)@@G@@. MAX NO DRUM SECTS ALLOWED, NO IN USE    @E@@[[PERMS   FORM   6,24,1,1,AS
)@@G@@4     . LAYOUT OF PERMISSIONS WORD  @F@@[[ASPERM  PERMS  MAXWSI,0,PUBINHAT
)@@G@@,CONINH,0 . INITIAL PERMISSIONS     @F@@[[        +      0              AU
)@@G@@. TRACK SECONDS SINCE LAST BILLING  @F@@[[        +1,1,0,0,0,0          AV
)@@G@@. TDATE$ OF LAST BILLING (1 JAN 64) @[_@@@/.    @[@@@@.     @B@@@@. ENTEAW
)@@G@@R A NUMBER INTO THE ACCOUNTS ELEMENT@B@@@@. UPON ENTRY, A3=ADDR OF DATA AX
)@@G@@TO ENTER    @B@@@@. LEAVES WITH A0 = DRUM INDEX OF ENTRY    @]@[@@      AY
)@@G@@ MCONS@ @[@@ENTER* SX    X11,ENLINK  .    @D@[@@       SA    A3,WHERE   AZ
)@@G@@ . SAVE ADDR TO XFER FROM     @ @[@@       LA,U  A0,RDL$     .    @ @[@@BA
)@@G@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@BB
)@@G@@       LA,U  A1,1791     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@BC
)@@G@@       LA,U  A0,IOPKT    .    @E@[@@       ER    IOW$        . HOLD UP OBD
)@@G@@THER PEOPLE FOR A WHILE @ @[@@       TZ,S1 3,A0        .    @ @[@@      BE
)@@G@@ ER    ERR$        .    @ @[@@       LA,U  A0,PFPKT    .    @C@[@@      BF
)@@G@@ ER    PFS$        . FIND THE ELEMENT     @ @[@@       JNZ   A2,AC3900  BG
)@@G@@ .    @ @[@@       LA    A0,TXTADD   .    @ @[@@       SA    A0,IOPKT+5 BH
)@@G@@ .    @ @[@@       LA,U  A0,R$       .    @ @[@@       SA,S2 A0,IOPKT+3 BI
)@@G@@ .    @ @[@@       LA,U  A0,IOPKT    .    @D@[@@       ER    IOW$       BJ
)@@G@@ . READ CONTROL SECTOR (0)    @ @[@@       TZ,S1 3,A0        .    @ @[@@BK
)@@G@@       J     AC3900      .    @A@[@@. FIND OUT IF LAST TRACK IS FULL    BL
)@@G@@@B@[@@       LA,H2 A0,BUFF     . GET ENTRY COUNT@A@[@@       SA    A0,NRBM
)@@G@@ENT    . TEMP SAVE@D@[@@       AA,U  A0,2        . DONT FORGET SECTOR ZEBN
)@@G@@RO    @ @[@@       DSL   A0,36       .    @C@[@@       DSC   A0,5       BO
)@@G@@ . 128 ENTRIES PER TRACK@C@[@@       JNZ   A0,AC3100   . IS THIS TRACK FBP
)@@G@@ULL?  @E@[@@       TZ,Q2 BUFF        . IS THE MASCON ON WITH WRITE?     BQ
)@@G@@@G@[@@       J     AC3910      . YES, DON'T LET THIS GUY MOVE THE ELEMENBR
)@@G@@T     @E@[@@       LMJ   X11,ACCOPY  . YES, GO ALLOCATE AN EXTRA TRACK  BS
)@@G@@@ @[@@       J     AC3900      .    @^@[@@. COMPUTE DRUM INDEX    @C@[@@BT
)@@G@@AC3100 LA    A0,NRENT    . RESTORE $ OF ENTRIES @F@[@@       AA,U  A0,2 BU
)@@G@@       . DON'T FORGET WE HAVE SOMETHING IN SEC 0@D@[@@       DSL   A0,1 BV
)@@G@@       . FIND # SECTORS WE HAVE     @E@[@@       AA,H2 A0,TXTADD   . BIABW
)@@G@@S TO FIND NEXT FREE SECTOR    @D@[@@       JP    A1,$+2      . DOES THISBX
)@@G@@ ENTRY GO IN H1?  @A@[@@       LXI,U A0,14       . NO, H2   @D@[@@      BY
)@@G@@ SA    A0,INDEX    . SAVE FRESH DRUM POINTER    @C@[@@       LA,U  A1,0,BZ
)@@G@@A0     . ISOLATE DRUM ADDR    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@CA
)@@G@@       DS    A0,IOPKT+4  .    @ @[@@       LA,U  A0,R$       .    @ @[@@CB
)@@G@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA,U  A0,IOPKT    .    @G@[@@CC
)@@G@@       ER    IOW$        . READ IN THE SECTOR WHERE THE NEW ENTRY GOES  CD
)@@G@@@ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AC3900      .    CE
)@@G@@@E@[@@       LA    A1,WHERE    . GET PLACE FROM WHICH TO MOVE ITEM@ @[@@CF
)@@G@@       LXI,U A1,1        .    @ @[@@       LA    A2,(1,BUFF) .    @ @[@@CG
)@@G@@       AA,H1 A2,INDEX    .    @ @[@@       LR,U  R1,14       .    @C@[@@CH
)@@G@@       BT    A2,0,*A1    . MOVE IN NEW ENTRY    @ @[@@       LA,U  A1,W$CI
)@@G@@       .    @ @[@@       SA,S2 A1,IOPKT+3  .    @C@[@@       ER    IOW$ CJ
)@@G@@       . WRITE IT TO DRUM     @ @[@@       TZ,S1 3,A0        .    @ @[@@CK
)@@G@@       J     AC3900      .    @ @[@@       LA    A1,TXTADD   .    @ @[@@CL
)@@G@@       SA    A1,IOPKT+5  .    @C@[@@       LA,U  A2,R$       . READ CONTCM
)@@G@@ROL SECTOR  @ @[@@       SA,S2 A2,IOPKT+3  .    @ @[@@       ER    IOW$ CN
)@@G@@       .    @ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AC390CO
)@@G@@0      .    @B@[@@       LA,H2 A1,BUFF     . GET ENTRY COUNT@D@[@@      CP
)@@G@@ AA,U  A1,1        . BUMP TO INCLUDE THIS ENTRY @ @[@@       SA,H2 A1,BUCQ
)@@G@@FF     .    @ @[@@       LA,U  A2,W$       .    @ @[@@       SA,S2 A2,IOCR
)@@G@@PKT+3  .    @E@[@@       ER    IOW$        . WRITE BACK UPDATED CONTROL CS
)@@G@@SECTOR@ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AC3900     CT
)@@G@@ .    @ @[@@       LA,U  A1,UNL$     .    @ @[@@       SA,S2 A1,IOPKT+3 CU
)@@G@@ .    @ @[@@       LA,U  A1,1791     .    @ @[@@       SA    A1,IOPKT+5 CV
)@@G@@ .    @D@[@@       ER    IOW$        . FREE UP THE FILE FOR OTHERS@ @[@@CW
)@@G@@       TZ,S1 3,A0        .    @ @[@@       ER    ERR$        .    @C@[@@CX
)@@G@@       LA    A0,INDEX    . RETURN THE DRUM INDEX@ @[@@       LX    X11,ECY
)@@G@@NLINK  .    @ @[@@       J     1,X11       .    @ @[@@AC3900 LA,U  A0,UNCZ
)@@G@@L$     .    @ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(2DA
)@@G@@8,BUFF) .   @ @[@@       LA,U  A1,1791     .    @ @[@@       DS    A0,IODB
)@@G@@PKT+4  .    @ @[@@       LA,U  A0,IOPKT    .    @ @[@@       ER    IOW$ DC
)@@G@@       .    @ @[@@       ER    ERR$        .    @ @[@@AC3910 ERROR YLIBRDD
)@@G@@A      .    @ @[@@       LA,U  A0,UNL$     .    @ @[@@       SA,S2 A0,IODE
)@@G@@PKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@       LA,U  A1,17DF
)@@G@@91     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@       LA,U  A0,IODG
)@@G@@PKT    .    @B@[@@       ER    IOW$        . UNLOCK 1791    @ @[@@      DH
)@@G@@ TZ,S1 3,A0        .    @ @[@@       ER    ERR$        .    @ @[@@      DI
)@@G@@ J     SINOFF      .    @E@[@@/. UPDATE THE ACCOUNTING ENTRY WHOSE DRUM DJ
)@@G@@INDEX IS IN A0    @#@@[[        INITAL .  @F@@[[. TEMP UNTIL SACCNT IS RDK
)@@G@@EWRITTEN TO DO THIS ALWAYS BY DEFAULT     @ @@[[ENTER   SX     X11,ENLINDL
)@@G@@K .   @F@@[[        SA     A3,ENINIT . SAVE POINTER TO INITIALIZATION STDM
)@@G@@UFF   @E@@[[        LOCK   IOPKT,0 1791,(+28,BUFF)  . LOCK THE FILE     DN
)@@G@@@F@@[[EN0010  PFSRCH           . LOOK FOR CURRENT ACCOUNTING ELEMENT    DO
)@@G@@@F@@[[        LA     A3,ENINIT . RECOVER ADDR OF INITIALIZATION STUFF   DP
)@@G@@@E@@[[        LA,U   A0,0      . SET EXPANSION FLAG TO CONDITIONAL@F@@[[DQ
)@@G@@        LMJ    X11,ADDENT     . TRY TO ADD AN ENTRY FOR THIS USER @E@@[[DR
)@@G@@        J    EN0900      . ERROR-- GO UNLOCK AND THEN DIE   @C@@[[      DS
)@@G@@  SA     A0,ENINDX . TEMP SAVE OUR INDEX  @C@@[[        UNLOCK IOPKT,0 1DT
)@@G@@791   . RELEASE THE FILE@D@@[[        LA     A0,ENINDX      . RECOVER THDU
)@@G@@E INDEX     @F@@[[        JZ     A0,EN0040 . IF ENTRY NOT MADE, SIGN OFFDV
)@@G@@ THIS GUY   @C@@[[        LX     X11,ENLINK     . ELSE GET LINKAGE@C@@[[DW
)@@G@@        J      1,X11     . AND TAKE NORMAL EXIT @E@@[[. ENTRY NOT MADE BDX
)@@G@@ECAUSE MASTER CONS IS UPDATING THE FILE-- @D@@[[EN0040  ERROR  YLIBRA   DY
)@@G@@ . SIGNAL LIBRARY TABLE FULL  @B@@[[        J      SINOFF    . AND SIGN DZ
)@@G@@OFF   @A@@[[. I/O ERROR WHILE FILE LOCKED--     @C@@[[EN0900  UNLOCK IOPEA
)@@G@@KT 1791     . RELEASE THE FILE@C@@[[        ER     ERR$      . AND DIE HEB
)@@G@@ORRIBLY     @[@@[[.     @ @@[[ENLINK  EQUF   $,,H1     .    @ @@[[ENINITEC
)@@G@@  EQUF   $,,H2     .    @ @@[[        RES    1         .    @E@@[[ENINDXED
)@@G@@  RES    1         . LOD IN WHICH INDES IS TEMP STORED@B@@[[/. UPDATE THEE
)@@G@@IS USER'S ACCOUNTING ENTRY--  @#_@@@       INSTRS     @ @@@@UPDATE* SX  EF
)@@G@@ X11,UPLINK  .    @B@[@@       SA    A0,INDEX    . SAVE DRUM INDEX@D@[@@EG
)@@G@@       SZ    UPMOVE      . CLEAR ELEMENT MOVED FLAG   @ @[@@       LA,U EH
)@@G@@ A0,RDL$     .    @ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA   EI
)@@G@@ A3,(28,BUFF) .   @ @[@@       LA,U  A4,1791     .    @ @[@@       DS   EJ
)@@G@@ A3,IOPKT+4  .    @ @[@@       LA,U  A0,IOPKT    .    @B@[@@       ER   EK
)@@G@@ IOW$        . PUT A HOLD ON  @ @[@@       TZ,S1 3,A0        .    @ @[@@EL
)@@G@@       ER    ERR$        .    @E@[@@UP0100 LA,H1 A1,INDEX    . GET WORD EM
)@@G@@POINTER INTO SECTOR     @C@[@@       AA,U  A1,BUFF     . SET UP REGS FOREN
)@@G@@ BT   @ @[@@       LXI,U A1,1        .    @ @[@@       LA    A2,(1,ACCNTEO
)@@G@@) .   @ @[@@       ER    TDATE$      .    @D@[@@       SA    A0,ACLAST  EP
)@@G@@ . SET LAST REFERENCE FIELD   @D@[@@       LA,H2 A3,INDEX    . GET DRUM EQ
)@@G@@ADDR OF ENTRY     @ @[@@       SA    A3,IOPKT+5  .    @ @[@@       LA,U ER
)@@G@@ A3,R$       .    @ @[@@       SA,S2 A3,IOPKT+3  .    @ @[@@       LA,U ES
)@@G@@ A0,IOPKT    .    @D@[@@       ER    IOW$        . READ SECTOR WITH ENTRET
)@@G@@Y     @ @[@@       TZ,S1 3,A0        .    @ @[@@       J     UP0900     EU
)@@G@@ .    @F@@[[        TZ,U   ONEFIL         . HAS SITE IMPLEMENTED SINGLE EV
)@@G@@FILE? @F@@[[        TNZ    DRUMAD         . DID WE ACTUALLY GET TO SIGN EW
)@@G@@ON?   @D@@[[        J      1,X11          . NO, PRETEND WE UPDATED@F@@[[EX
)@@G@@        SZ     UPMOVE         . YES, CLEAR ELEMENT MOVED FLAG     @F@@[[EY
)@@G@@        LOCK   IOPKT,0 1791,(+28,BUFF)  . COMMANDEER THE FILE     @E@@[[EZ
)@@G@@UP0100  LA,H2  A0,DRUMAD      . GET SECTOR OUR ENTRY IS IN  @B@@[[      FA
)@@G@@  SA     A0,IODADR      . TO PACKET @D@@[[        READ   IOPKT,UP0900 -1FB
)@@G@@,(+28,BUFF)    . GET IT @DT@@@       TNZ   BUFF        . HAS THE ELEMENTFC
)@@G@@ MOVED?     @E@@@@       J     UP0200      . YES, GO FIND A NEW DRUM POIFD
)@@G@@NTER  @ @[@@       LR,U  R1,14       .    @D@[@@       BT    A1,0,*A2   FE
)@@G@@ . NO, MOVE IN THE NEW ENTRY  @ @[@@       LA,U  A1,W$       .    @ @[@@FF
)@@G@@       SA,S2 A1,IOPKT+3  .    @D@[@@       ER    IOW$        . WRITE SECFG
)@@G@@TOR BACK TO DRUM  @ @[@@       TZ,S1 3,A0        .    @ @[@@       J    FH
)@@G@@ UP0900      .    @ @[@@       LA,U  A1,UNL$     .    @ @[@@       SA,S2FI
)@@G@@ A1,IOPKT+3  .    @ @[@@       LA,U  A1,1791     .    @ @[@@       SA   FJ
)@@G@@ A1,IOPKT+5  .    @C@[@@       ER    IOW$        . TURN OFF THE HOLD    FK
)@@G@@@ @[@@       TZ,S1 3,A0        .    @ @[@@       ER    ERR$        .    FL
)@@G@@@D@@[[. UPDATE COPY OF DATA, MOVE TO BUFFER, FLUSH IT OUT   @D@@[[      FM
)@@G@@  ER     TDATE$         . GET THE PRESENT TIME  @E@@[[        SA     A0,FN
)@@G@@ACLAST      . POST AS TIME OF LAST REF    @D@@[[        LA,U   A1,BUFF  FO
)@@G@@      . TARGET ADDR IN BUFF   @F@@[[        AA,H1  A1,DRUMAD      . PLUSFP
)@@G@@ HALFSECTOR OFFSET, IF ANY    @A@@[[        LXI,U  A1,1           .     FQ
)@@G@@@F@@[[        LA     A2,(+1,ACCNT)  . SOURCE IS ALWAYS THE CANNED AREA  FR
)@@G@@@C@@[[        LR,U   R1,14          . MOVE 14 WORDS   @B@@[[        BT  FS
)@@G@@   A1,0,*A2       . DO IT     @E@@[[        WRITE  IOPKT,UP0900   . WRITFT
)@@G@@E UPDATED ACCOUNT ENTRY @D@@[[        UNLOCK -1,0 1791      . AND RELEASFU
)@@G@@E THE FILE  @ I@@@       LX    X11,UPLINK  .    @ @@@@       J     1,X11FV
)@@G@@       .    @D@@@@UP0200 TZ    UPMOVE      . HAVE WE TRIED THIS YET?    FW
)@@G@@@A@@@@       J     UP0900      . YES, DIE @D@[@@       DL    A0,RCLIBN  FX
)@@G@@ . NO, GET THIS GUYS LIB NO   @E@[@@       LMJ   X11,ACFNUM  . AND GO FIFY
)@@G@@ND IT IN THE NEW ELEMENT@D@@[[        PFSRCH . FIND NEW COPY OF ACCOUNT FZ
)@@G@@ELEMENT     @B@@[[        DL     A0,RCLIBN . GET OUR LIBNO  @D@@[[      GA
)@@G@@  LA     A2,(+448,BUFF) . SUPPLY SCRATCH SPACE  @F@@[[        LMJ    X11GB
)@@G@@,FINDNO     . AND FIND OUR PLACE IN NEW COPY    @A]@@@       J     UP090GC
)@@G@@0      . ?????????@D@@@@       JZ    A0,UP0900   . COULD NOT FIND THE NUGD
)@@G@@MBER  @D@[@@       SA    A0,INDEX    . SET THE NEW DRUM INDEX     @D@@][GE
)@@G@@       SA    A0,DRUMAD   . SET THE NEW DRUM INDEX     @H[@@@       SX   GF
)@@G@@ X11,UPMOVE  . MARK RECOVERY ATTMPTED(SO NO LOOPS IF BAD FILE)    @ @@@@GG
)@@G@@       J     UP0100      .    @ @[@@UP0900 LA,U  A0,UNL$     .    @ @[@@GH
)@@G@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@GI
)@@G@@       LA,U  A1,1791     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@GJ
)@@G@@       LA,U  A0,IOPKT    .    @B@[@@       ER    IOW$        . UNLOCK THGK
)@@G@@E FILE@[@@[[.     @E@@[[UP0900  UNLOCK IOPKT 1791,(+28,BUFF)    . RELEASGL
)@@G@@E THE FILE  @AB@@@       ER    ERR$        . AND DIE  @ @@@@       VARBLGM
)@@G@@S            .    @B@@@@UPLINK EQUF  $,,H1       . RETURN LINK    @G@@@@GN
)@@G@@UPMOVE EQUF  $,,H2       . FLAG FOR TESTING IF ACCNT ELEMENT HAS MOVED  GO
)@@G@@@^@@@@       RES   1     .    @F@@@@/. THESE ARE ROUTINES TO MANIPULATE GP
)@@G@@THE ACCOUNTS FILE AS PER THE  @^@@@@. MASTER CONSOLE I-BEAMS@#@[@@      GQ
)@@G@@ MCONS .    @D@[@@. OPEN FILE. A1=0 => READ ONLY  ,  1=> WRITE ENABLE   GR
)@@G@@@]@[@@ACFOPN*.    @B@[@@       SX    X11,AFLINK  . SAVE RETURN    @D@[@@GS
)@@G@@       LA,XU A0,-1       . ASSUME FILE ALREADY OPEN   @C@[@@       TZ,Q2GT
)@@G@@ MCAWRD      . IS THE FILE OPEN?    @B@[@@       J     AF0850      . YESGU
)@@G@@, TELL HIM  @C@[@@       SNA,Q2 A0,MCAWRD  . NO, MARK AS OPEN     @B@[@@GV
)@@G@@       SA    A1,A5       . SAVE ALLOW FLAG@E@[@@       LA,U  A0,PFPKT   GW
)@@G@@ . LETS GET THE RIGHT SPOT ON DRUM  @ @[@@       ER    PFS$        .    GX
)@@G@@@ @[@@       JNZ   A2,AF0820   .    @ @[@@       LA,U  A0,RDL$     .    GY
)@@G@@@ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A1,(28,BUFF) .   GZ
)@@G@@@D@[@@       LA,U  A2,1791     . WE WANT TO LOCK ON 1791    @ @[@@      HA
)@@G@@ DS    A1,IOPKT+4  .    @ @[@@       LA,U  A0,IOPKT    .    @D@[@@      HB
)@@G@@ ER    IOW$        . HOLD UP THINGS FOR A WHILE @C@[@@       TZ,S1 3,A0 HC
)@@G@@       . DID THE LOCK WORK?   @D@[@@       J     AF0820      . NO, GO REHD
)@@G@@PORT AN I/O ERROR @D@[@@       LA    A2,TXTADD   . YES, GET ADDR OF ELEMHE
)@@G@@ENT   @C@[@@       SA    A2,IOPKT+5  . POST IT IN PACKET    @ @[@@      HF
)@@G@@ LA,U  A3,R$       .    @ @[@@       SA,S2 A3,IOPKT+3  .    @D@[@@      HG
)@@G@@ ER    IOW$        . READ IN CONTROL SECTOR     @B@[@@       TZ,S1 3,A0 HH
)@@G@@       . DID WE GET IT? @F@[@@       J     AF0819      . NO, GO UNLOCK AHI
)@@G@@ND THE GIVE I/O ERROR   @D@[@@       SA,Q2 A5,BUFF     . YES, SET ALLOW HJ
)@@G@@FLAG IN BUFF@ @[@@       LA,U  A3,W$       .    @ @[@@       SA,S2 A3,IOHK
)@@G@@PKT+3  .    @E@[@@       ER    IOW$        . WRITE MODIFIED CONTROL SECTHL
)@@G@@OR    @C@[@@       TZ,S1 3,A0        . DID THE WRITE WORK?  @D@[@@      HM
)@@G@@ J     AF0819      . NO, SAY WE GOT AN I/O ERR  @D@[@@       LA,U  A1,UNHN
)@@G@@L$     . SET UP PACKET FOR UNLOCKING@ @[@@       SA,S2 A1,IOPKT+3  .    HO
)@@G@@@B@[@@       LA,U  A1,1791     . DO IT TO 1791  @ @[@@       SA    A1,IOHP
)@@G@@PKT+5  .    @F@[@@       ER    IOW$        . GIVE SOME TIME TO OTHER PEOHQ
)@@G@@PLE NOW     @B@[@@       TZ,S1 3,A0        . DID IT WORK?   @C@[@@      HR
)@@G@@ J     AF0820      . NO, GO SAY TOO BAD   @G@[@@       AA,U  A2,1       HS
)@@G@@ . NOW POINT PACKET AT SECTOR ONE(START OF DATA)@ @[@@       LA    A1,(2HT
)@@G@@24,ACPAGE) .@ @[@@       DS    A1,IOPKT+4  .    @ @[@@       LA,U  A1,R$HU
)@@G@@       .    @ @[@@       SA,S2 A1,IOPKT+3  .    @D@[@@       ER    IOW$ HV
)@@G@@       . LOAD IN THE FIRST PAGE     @B@[@@       TZ,S1 3,A0        . DIDHW
)@@G@@ WE GET IT? @C@[@@       J     AF0820      . NO, GO TELL HIM SO   @G@[@@HX
)@@G@@       LA,U  A0,16       . DEFAULT VALUE FOR # OF ENTRIES IS 16 PER PAGEHY
)@@G@@@F@[@@       LA,H2 A1,BUFF     . BUT THERE MAY BE FEWER THAN THAT, SO,  HZ
)@@G@@@D@[@@       TLE   A1,A0       . IF REALLY FEWER THAN 16,   @G@[@@      IA
)@@G@@ LA    A0,A1       . POST LOWER AMNT AS # OF ENTRIES IN THE PAGE  @E@[@@IB
)@@G@@       LXI,U A2,0,A0     . AND PACK IT INTO THE PAGE INDEX  @ @[@@      IC
)@@G@@ SA    A2,ACPIND   .    @C@[@@       SZ    PAGEST      . SET FIRST REC #ID
)@@G@@-1    @D@[@@       LA,H2 A0,BUFF     . GET # OF ENTRIES IN FILE   @D@[@@IE
)@@G@@       SA,H2 A0,MCAWRD   . POST # ENTRIES IN THE FILE @C@[@@       SA,Q1IF
)@@G@@ A5,MCAWRD   . SET LOCAL ALLOW FLAG @C@[@@       SZ,H1 ACTIND      . CLEIG
)@@G@@AR LAST REC #     @A@[@@       J     AF0850      . AND ELAVE@[@[@@.     IH
)@@G@@@ @[@@. GET RECORD SPECIFIED BY (A1)@]@[@@ACGREC*.    @ @[@@       SX   II
)@@G@@ X11,AFLINK  .    @C@[@@       TNZ,Q2 MCAWRD     . IS THE FILE OPEN?    IJ
)@@G@@@B@[@@       J     AF0810      . NO, TELL HIM SO@G@[@@       TZ,Q1 MCAWRIK
)@@G@@D      . IF WRITE TURNED ON AND A RECORD IS ACTIVE    @E@[@@       TNZ,HIL
)@@G@@1 ACTIND     . THEN COPY OLD RECORD BACK TO PAGE@B@[@@       J     AF020IM
)@@G@@0      . OTHERWISE DON'T@D@[@@       LA,H2 A0,ACTIND   . GET INDEX OF REIN
)@@G@@C INTO PAGE @ @[@@       AA    A0,(1,ACPAGE) .  @ @[@@       LA    A2,(1IO
)@@G@@,ACTIVE) .  @ @[@@       LR,U  R1,14       .    @C@[@@       BT    A0,0,IP
)@@G@@*A2    . MOVE OLD RECORD OUT  @D@[@@AF0200 LA,H2 A0,MCAWRD   . HIGHEST RIQ
)@@G@@ECORD # THAT LIVES@ @[@@       TG,U  A1,1        .    @E@[@@       TLE  IR
)@@G@@ A0,A1       . DOES THE DESIRED RECORD EXIST?   @D@[@@       J     AF083IS
)@@G@@0      . NO, TELL HIM SO          - @E@[@@       SA    A1,ACTEMP   . YESIT
)@@G@@, SAVE THE WANTED RECORD #    @E@[@@       LA    A2,PAGEST   . GET FIRSTIU
)@@G@@ REC #-1 IN THIS PAGE   @C@[@@       AU,H1 A2,ACPIND   . A3=LAST REC IN IV
)@@G@@PAGE  @D@[@@       TNW   A2,A1       . DO WE HAVE THIS RECORD?    @E@[@@IW
)@@G@@       J     AF0250      . YES, WE DON'T NEED A NEW PAGE    @ @[@@      IX
)@@G@@ LA    A3,A1       .    @E@[@@       DSL   A3,1        . FIND REL SECTORIY
)@@G@@ ADDR OF RECORD   @D@[@@       JP    A4,$+2      . IF FIRST RECORD OF SEIZ
)@@G@@CTOR, @B@[@@       AA,U  A3,1        . FUDGE UP BY ONE@E@[@@       AA,H2JA
)@@G@@ A3,TXTADD   . AND BIAS BY ABSOLUTE ADDR OF ELEM@E@[@@       TNZ,Q1 MCAWJB
)@@G@@RD     . WAS THE FILE OPEN FOR WRITE?     @D@[@@       J     AF0225     JC
)@@G@@ . NO, SKIP WRITING OF PAGE   @D@[@@       LA,U  A0,RDL$     . YES, SET JD
)@@G@@PACKET FOR LOCK   @ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA   JE
)@@G@@ A0,(28,BUFF) .   @C@[@@       LA,U  A1,1791     . LOACK GOES ON 1791   JF
)@@G@@@ @[@@       DS    A0,IOPKT+4  .    @ @[@@       LA,U  A0,IOPKT    .    JG
)@@G@@@ @[@@       ER    IOW$        .    @C@[@@       TZ,S1 3,A0        . DIDJH
)@@G@@ WE GET THE LOCK ?@F@[@@       J     AF0820      . NO, GO GIVE HIM THE UJI
)@@G@@NIVERSAL I/O ERROR@D@[@@       LA,U  A1,W$       . SET UP PACKET FOR WRIJJ
)@@G@@TE    @ @[@@       SA,S2 A1,IOPKT+3  .    @ @[@@       LA    A1,(224,ACPJK
)@@G@@AGE) .@D@[@@       LA,H2 A2,ACPIND   . GET ADDR OF CURRENT PAGE   @C@[@@JL
)@@G@@       DS    A1,IOPKT+4  . POST IT IN THE PACKET@E@[@@       ER    IOW$ JM
)@@G@@       . WRITE CURRENT PAGE BACK TO DRUM  @B@[@@       TZ,S1 3,A0       JN
)@@G@@ . DID IT TAKE?   @B@[@@       J     AF0819      . NO, GO TELL HIM@ @[@@JO
)@@G@@       LA,U  A1,UNL$     .    @ @[@@       SA,S2 A1,IOPKT+3  .    @ @[@@JP
)@@G@@       LA    A1,(28,BUFF) .   @ @[@@       LA,U  A2,1791     .    @ @[@@JQ
)@@G@@       DS    A1,IOPKT+4  .    @B@[@@       ER    IOW$        . UNLOCK 17JR
)@@G@@91    @ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AF0820     JS
)@@G@@ .    @E@[@@AF0225 LA    A2,(224,ACPAGE) . A3 HAS ADDR OF NEXT PAGE     JT
)@@G@@@E@[@@       DS    A2,IOPKT+4  . POST LOC AND LENGTH OF NEXT LOAD @ @[@@JU
)@@G@@       LA,U  A1,R$       .    @ @[@@       SA,S2 A1,IOPKT+3  .    @ @[@@JV
)@@G@@       LA,U  A0,IOPKT    .    @C@[@@       ER    IOW$        . LOAD IN NJW
)@@G@@EXT PAGE    @B@[@@       TZ,S1 3,A0        . DID WE GET IT? @B@[@@      JX
)@@G@@ J     AF0820      . NO, SAY SO     @B@[@@       LXI,U A3,16       . 16 JY
)@@G@@ENTRIES HERE@C@[@@       SA    A3,ACPIND   . POST NEW PAGE INDEX  @C@[@@JZ
)@@G@@       LA    A1,ACTEMP   . GET RECORD # WE WANT @A@[@@       ANU,U A1,1 KA
)@@G@@       . LESS 1,  @C@[@@       JN    A4,$+2      . OR IF EVEN REC #,    KB
)@@G@@@A@[@@       ANA,U A2,1        . LESS TWO,@C@[@@       SA    A2,PAGEST  KC
)@@G@@ . GIVES FIRST REC#-1   @ @[@@AF0250 AA,U  A2,1        .    @ @[@@      KD
)@@G@@ ANU   A1,A2       .    @ @[@@       MSI,U A2,14       .    @G@[@@      KE
)@@G@@ SA,H2 A2,ACTIND   . WORD RELATIVE INDEX OF THIS REC INTON PAGE   @ @[@@KF
)@@G@@       AA    A2,(1,ACPAGE) .  @ @[@@       LA    A1,(1,ACTIVE) .  @ @[@@KG
)@@G@@       LR,U  R1,14       .    @F@[@@       BT    A1,0,*A2    . LOAD DESIKH
)@@G@@RED REC INTO ACTIVE BUFFER    @ @[@@       LA    A1,ACTEMP   .    @B@[@@KI
)@@G@@       LA,H1 A0,ACTIND   . GET OLD REC NUM@C@[@@       SA,H1 A1,ACTIND  KJ
)@@G@@ . SET NUM OF THIS ONE  @A@[@@       J     AF0850      . LEAVE    @[@[@@KK
)@@G@@.     @ @[@@. GET CURRENT FILE POSITION   @]@[@@ACFPOS*.    @B@[@@      KL
)@@G@@ LA,H1 A0,ACTIND   . GET RECORD NUM @B@[@@       TNZ,Q2 MCAWRD     . IS KM
)@@G@@FILE OPEN?  @B@[@@       LA,XU A0,-1       . NO, TELL HIM   @ @[@@      KN
)@@G@@ J     1,X11       .    @[@[@@.     @H@[@@. CLOSE FILE. A1=0=> AS IS  , KO
)@@G@@ 1=> GARBAGE COLLECT  ,  2=> GARB COLL AND PACK @]@[@@ACFCLO*.    @B@[@@KP
)@@G@@       SX    X11,AFLINK  . WHAT ELSE?     @ @[@@       SX    X8,AFRSAV  KQ
)@@G@@ .    @ @[@@       SX    X9,AFRSAV+1 .    @ @[@@       SX    X10,AFRSAV+KR
)@@G@@2 .   @ @[@@       TSTO  A12,AFRSAV+3 .   @ @[@@       SR    R2,AFRSAV+6KS
)@@G@@ .    @ @[@@       SR    R3,AFRSAV+7 .    @C@[@@       TNZ,Q2 MCAWRD    KT
)@@G@@ . IS THE FILE OPEN?    @C@[@@       J     AF0810      . NO, GO TELL HIMKU
)@@G@@ SO   @C@[@@       SZ,Q2 MCAWRD      . MARK FILE AS CLOSED  @E@[@@      KV
)@@G@@ LA,U  A0,0        . RETURN VALUE IF WRITE IS OFF     @D@[@@       TNZ,QKW
)@@G@@1 MCAWRD     . HAS WRITE BEEN ALLOEED?    @E@[@@       J     AF0850     KX
)@@G@@ . NO, EVRYTHING ALREADY CLOEED     @C@[@@       SA    A1,ACTEMP   . SAVKY
)@@G@@E PARAMETER WORD  @B@[@@. WRITE OUT LAST PAGE BACK INTO THE FILE  @C@[@@KZ
)@@G@@       LA,U  A0,RDL$     . SET UP LOCK PACKET   @ @[@@       SA,S2 A0,IOLA
)@@G@@PKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@       LA,U  A1,17LB
)@@G@@91     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@       LA,U  A0,IOLC
)@@G@@PKT    .    @B@[@@       ER    IOW$        . LOCK ON 1791   @B@[@@      LD
)@@G@@ TZ,S1 3,A0        . DID IT TAKE?   @B@[@@       J     AF0820      . NO,LE
)@@G@@ GO SAY SO  @E@[@@       TNZ,H1 ACTIND     . IS THERE A RECIRD LEFT IN ALF
)@@G@@CTIVE @E@[@@       J     AF0300      . NO, NOTHING TO WRITE TO DRUM HERELG
)@@G@@@E@[@@       LA,H2 A0,ACTIND   . YES, PUT IT BACK IN THE PAGE     @ @[@@LH
)@@G@@       AA    A0,(1,ACPAGE) .  @ @[@@       LA    A2,(1,ACTIVE) .  @ @[@@LI
)@@G@@       LR,U  R1,14       .    @F@[@@       BT    A0,0,*A2    . THEN WRITLJ
)@@G@@E THE PAGE BACK TO THE DRUM   @E@[@@       LA,U  A0,W$       . SET UP PALK
)@@G@@CKET FOR NEXT WRITE     @ @[@@       SA,S2 A0,IOPKT+3  .    @A@[@@      LL
)@@G@@ LA    A0,(224,ACPAGE)  .     @D@[@@       LA,H2 A1,ACPIND   . GET ADDR LM
)@@G@@OF CURRENT PAGE   @B@[@@       DS    A0,IOPKT+4  . POST IN PACKET @ @[@@LN
)@@G@@       LA,U  A0,IOPKT    .    @D@[@@       ER    IOW$        . WRITE BACLO
)@@G@@K CURRENT PAGE    @E@[@@       TZ,S1 3,A0        . DID IT MAKE IT THERE LP
)@@G@@SAFELY?     @E@[@@       J     AF0819      . NO, GO UNLOCK AND SAY II//OLQ
)@@G@@O ERR @B@[@@AF0300 LA    A0,ACTEMP   . GET PARAMETER  @E@[@@       JZ   LR
)@@G@@ A0,AF0800   . IF CLOSE AS IS, WE'RE ALL DONE   @ @[@@       TLE,U  A0,3LS
)@@G@@       .    @ @[@@       TLE,U  A0,1       .    @E@[@@       ER    ERR$ LT
)@@G@@       . SOMEBODY DIDNT DO THEIR WORK     @ @[@@       ANA,U  A0,1      LU
)@@G@@ .    @B@[@@       SA    A0,ACTEMP   . SET PACK FLAG  @F@[@@. FOR GARBAGLV
)@@G@@E COLLECTION, WE CREATE A NEW ACCOUNTING ELEMENT.     @G@[@@. SINCE WE KLW
)@@G@@NOW HOW MANY ENTRIES THERE ARE, WE COPY LOCKED OUT NUMBERS  @F@[@@. TO TLX
)@@G@@HE END OF THE AREA TO BE USED AND GOOD NUMBERS TO THE FRONT.@ @[@@. WHATLY
)@@G@@ FOLLOWS DOES THIS:     @G@[@@.                        THE OLD ELEMENT ILZ
)@@G@@S COPIED 8 SECTORS AT A TIME  @G@[@@. INTO ACPAGE. THE 8 SECTOR AREA BUFMA
)@@G@@F IS BROKEN INTO 4 SEC AREAS, THE   @G@[@@. FIRST FOR GOOD NUMBERS AND TMB
)@@G@@HE LAST FOR LOCKED NUMBERS. AS EACH ENTRY @G@[@@. IN ACPAGE IS CHECKED TMC
)@@G@@O SEE IF IT IS LOCKED OR NOT, THE APPROPRIATE   @G@[@@. ROUTINE IS CALLEMD
)@@G@@D TO MOVE THE ENTRY INTO THE PROPER SEGMENT OF BUFF.  @G@[@@. IF AN ENTRME
)@@G@@Y WILL CAUSE BUFFER OVFLO, THE BUFFER IS FLUSHED TO DRUM    @G@[@@. AND MF
)@@G@@THE ENTRY IS THEN THE FIRST ONE IN A CLEAN BUFFER. WHEN THE MAIN  @F@[@@MG
)@@G@@. LOOP TERMINATES, THERE SHOULD BE AN EVEN NUMBER  OF ENTRIES LEFT@^@[@@MH
)@@G@@. TO BE WRITTEN OUT.    @F@[@@.                        IF THERE ARE AN OMI
)@@G@@DD NUMBER OF ENTRIES TO @G@[@@. START WITH, THE FIRST FLUSH OF THE LOCKEMJ
)@@G@@D OUT BUFFER WILL TRANSFER    @D@[@@. ONLY SEVEN ENTRIES WITH THE LAST 1MK
)@@G@@4 WORDS GARBAGE . @G@[@@. IF PACKING IS INDICATED, THEN THE LOCKED NUMBEML
)@@G@@RS ARE NOT WRITTEN,     @G@[@@. AND THE ENTRY COUNT IS CHANGED TO REFLECMM
)@@G@@T THE NUMBER OF GOOD ENTRIES. @B@[@@. IMPORTANT REGISTER USAGE AS FOLLOWMN
)@@G@@S:    @E@[@@.  A4 - COUNTER FOR MAIN LOOP(NR OF ENTRIES IN OLD ELEM)    MO
)@@G@@@B@[@@.  X8 - CURRENT POINTER INTO LOCKED BUFFER@B@[@@.  R2 - COUNTER FOMP
)@@G@@R LOCKED OUT ENTRIES    @C@[@@.  X9 - CURRENT POINTER INTO GOOD ENTRY BUMQ
)@@G@@FFER  @A@[@@.  R3 - COUNTER FOR GOOD ENTRYIES   @F@[@@. X10 - CURRENT POMR
)@@G@@INTER INTO MCPAGE(UPDATED BY MOVE ROUTINES)     @C@[@@. X11 - COUNTS HOWMS
)@@G@@ MANY GOOD ENTRIES ARE WRITTN @E@[@@. A12 - DRUM POINTER FOR GOOD ENTRIEMT
)@@G@@S(WRITE THEN UPDATE)    @F@[@@. A13 - DRUM POINTER FOR LOCKED OUT ENTRIEMU
)@@G@@S(DECREMENT THEN WRITE) @C@[@@.  A5 - COUNTER FOR A SINGLE PASS AT ACPAGMV
)@@G@@E     @[@[@@.     @F@[@@. AT THE END, THE OLD ELEMENT IS ZEROED OUT SO TMW
)@@G@@HAT ANY SUBSEQUENT@B@[@@. UPDATE BY OTHER USERS FORCES A PFS$.    @ @[@@MX
)@@G@@       LA,U  A0,PFPKT    .    @F@[@@       ER    PFWL$       . FIND OUT MY
)@@G@@WHERE THE NEW ELEMENT WILL GO @ @[@@       JNZ   A2,AF0819   .    @A@[@@MZ
)@@G@@       SA,H2 A1,NXTADD   . SAVE ADDR@C@[@@       LA,H2 A3,MCAWRD   . GETNA
)@@G@@ # OF ENTRIES     @D@[@@       ANU,U A3,1        . A4=CNTR ON # OF ENTRINB
)@@G@@ES    @C@[@@       JNB   A3,$+2      . IF ODD # OF ENTRIES, @C@[@@      NC
)@@G@@ AA,U  A3,1        . ADD ONE SO WE CAN    @D@[@@       SSL   A3,1       ND
)@@G@@ . GET # OF SECTORS USED BY   @E@[@@       LX    X8,(1,BUFF+112) . STARTNE
)@@G@@ OF LOCKED OUT BIFFER   @D@[@@       LR,U  R2,8        . COUNTER OFR LOCNF
)@@G@@KED OUTS    @G@[@@       JB    A4,$+2      . IF ODD # OF ENTRIES, MAKE BNG
)@@G@@ELIEVE THERE'S    @E@[@@       JGD   R2,$+1      . ALREADY ONE IN THE LONH
)@@G@@CKED OUTS   @D@[@@       LX    X9,(1,BUFF) . GOOD ENTRIES START HERE    NI
)@@G@@@ @[@@       LR,U  R3,8        .    @E@[@@       LX    X11,(1,0)   . THINJ
)@@G@@S COUNTS THE # OF GOOD ENTRIES@C@[@@       LA,H2 A12,NXTADD  . START OF NK
)@@G@@NEW ELEM    @E@[@@       AU    A12,A3      . A13 GETS END OF AREA TO BE NL
)@@G@@USED  @D@[@@       AA,U  A12,1       . ENTRIES START AT SECTOR ONE@C@[@@NM
)@@G@@       LA    A14,TXTADD  . START OF OLD ELEMENT @E@[@@       ANA,U A14,7NN
)@@G@@       . A FUDGE SO ADDING EIGHT WORKS    @E@[@@       J     AF0311     NO
)@@G@@ . FORCE LOAD OF FIRST 8 SECTORS    @F@[@@AF0310 JGD   A5,AF0320   . DONNP
)@@G@@E WITH EVERYTHING IN THIS BUFFER?   @F@[@@AF0311 AA,U  A14,8       . YESNQ
)@@G@@, GET NEXT 8 SECS FROM OLD ELEM     @C@[@@       SA    A14,IOPKT+5 . POSNR
)@@G@@T NEXT READ ADDR  @ @[@@       LA,U  A0,R$       .    @ @[@@       SA,S2NS
)@@G@@ A0,IOPKT+3  .    @ @[@@       LA    A0,(224,ACPAGE) .@ @[@@       SA   NT
)@@G@@ A0,IOPKT+4  .    @ @[@@       LA,U  A0,IOPKT    .    @E@[@@       ER   NU
)@@G@@ IOW$        . FILL UP BUFFER WITH NEW STUPH    @ @[@@       TZ,S1 3,A0 NV
)@@G@@       .    @ @[@@       J     AF0398      .    @ @[@@       LA,U  A5,15NW
)@@G@@       .    @ @[@@       LX    X10,(1,ACPAGE) . @E@[@@AF0320 LA    A0,11NX
)@@G@@,X10   . (X10 GETS BUMPED IN MOVE RTNES)  @C@[@@       TOP,U A0,1*/1    NY
)@@G@@ . TEST # LOCKED OUT BIT@C@[@@       J     AF0450      . OK, MOVE TO FRONZ
)@@G@@NT    @E@[@@       J     AF0400      . LOCKED OUT, MOVE TO END OF DRUM  OA
)@@G@@@C@[@@AF0330 JGD   A4,AF0310   . TESTED ALL ENTRIES?  @F@[@@. CHECK TO MOB
)@@G@@AKE SURE PROPER # OF ENTRIES REMAIN IN THE TWO BUFFERS@G@[@@       LA   OC
)@@G@@ A0,R2       . YES, GET 7-# OF ENTRIES IN LOCKED OUT BUFF   @F@[@@      OD
)@@G@@ AU    A0,R3       . NOW ITS 14-TOTAL ENTRIES REMAINING     @D@[@@      OE
)@@G@@ JE,U  A1,16  AF0335 . SKIP THIIS IF BUFFS CLEAR@C@[@@       ANA,U A1,16OF
)@@G@@       . FORGET THE FOURTEEN  @F@[@@       LMA   A1,A1       . THIS MANYOG
)@@G@@ ENTRIES LEFT ALL TOGETHER    @F@[@@      JB    A1,AF0398   . BETTER BE OH
)@@G@@I5TEGRAL NR OF SECTORS LEFT   @G@[@@       ANA,U A0,8        . GET NEG NOI
)@@G@@R ENTRIES IN THE LOCKED OUT BUFF    @B@[@@       MSI,XU A0,-14     . THIOJ
)@@G@@S MANY WORDS@E@[@@       SMA   A0,R1       . DO IT THIS WAY IN CASE OF -OK
)@@G@@0     @E@[@@       LX    X8,(1,BUFF+112) . START OF LOCKED OUT ENTRIES  OL
)@@G@@@G@[@@       BT    X9,0,*X8    . X9 LEFT AT RIGHT PLACE BY LOT LCKED RTNOM
)@@G@@E     @C@[@@       SA    A12,IOPKT+5 . SET LAST WRITE ADDR  @C@[@@      ON
)@@G@@ MSI,U A1,14       . CONVERT TO WORDS     @C@[@@       LSSL  A1,18      OO
)@@G@@ . BUILD AN I/O PACKET  @D@[@@       LXM,U A1,BUFF     . THIS IS WHERE EOP
)@@G@@VERYTHING IS@ @[@@       SA    A1,IOPKT+4  .    @D@[@@       LA,U  A0,W$OQ
)@@G@@       . WE WANT TO WRITE THINGS    @ @[@@       SA,S2 A0,IOPKT+3  .    OR
)@@G@@@ @[@@       LA,U  A0,IOPKT    .    @ @[@@       ER    IOW$        .    OS
)@@G@@@B@[@@       TZ,S1 3,A0        . EVERYTHING OKA @D@[@@       J     AF039OT
)@@G@@8      . NO, RETURN AN I/O ERROR    @^@[@@. NOW WRITE SECTOR ZERO @D@[@@OU
)@@G@@AF0335 LA,H2 A12,TXTADD  . GET SECTOR ZERO OF OLD ELEM@E@[@@       SA   OV
)@@G@@ A12,IOPKT+5 . POST ADDR OF SEC 0 IN PACKET     @ @[@@       LA,U  A0,R$OW
)@@G@@       .    @ @[@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(2OX
)@@G@@8,BUFF) .   @ @[@@       SA    A0,IOPKT+4  .    @ @[@@       LA,U  A0,IOOY
)@@G@@PKT    .    @D@[@@       ER    IOW$        . LOAD IN CONTROL SECTOR     OZ
)@@G@@@ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AF0398      .    PA
)@@G@@@E@[@@       LA,H2 A13,BUFF    . SAVE # OF ENTRIES FOR ZEROING OUT@B@[@@PB
)@@G@@       TZ    ACTEMP      . TO BE PACKED?  @E@[@@       SX,H2 X11,BUFF   PC
)@@G@@ . YES, SET HOW MANY GOOD ENTRIES   @D@[@@       SZ,Q2 BUFF        . CLEPD
)@@G@@AR FILE ACCESS FLAG     @E@[@@       LA,H2 A12,NXTADD  . WHERE SEC ZERO PE
)@@G@@OF NEW ELEM GOES  @C@[@@       SA    A12,IOPKT+5 . POST IT IN PACKET    PF
)@@G@@@ @[@@       LA,U  A1,W$       .    @ @[@@       SA,S2 A1,IOPKT+3  .    PG
)@@G@@@E@[@@       ER    IOW$        . WRITE OUT SEC 0 OF NEW ELEMENT   @ @[@@PH
)@@G@@       TZ,S1 3,A0        .    @ @[@@       J     AF0398      .    @ @[@@PI
)@@G@@. DO THE PFI FOR THE NEW ELEM @F@[@@       SZ    PFPKT+11    . LET SOMEBPJ
)@@G@@ODY ELSE FIGURE OUT THE DATE  @ @[@@       LA,H2 A1,NXTADD   .    @F@[@@PK
)@@G@@       LA,H2 A4,TXTADD   . SAVE OLD TEXT ADDR IN CASE OF ERROE    @ @[@@PL
)@@G@@       SA,H2 A1,TXTADD   .    @C@[@@       LA,H2 A0,BUFF     . GET # OF PM
)@@G@@ENTRIES     @ @[@@       JNB   A0,$+2      .    @ @[@@       AA,U  A0,1 PN
)@@G@@       .    @D@[@@       SSL   A0,1        . FIND # OF SECTORS NEEDED   PO
)@@G@@@F@[@@       AA,U  A1,1,A0     . COMPUTE NXT WRITE LOC(INCLUDE SEC 0)   PP
)@@G@@@ @[@@       LNA,U A0,PFPKT    .    @ @[@@       ER    PFI$        .    PQ
)@@G@@@ @[@@       JNZ   A2,AF0398   .    @F@[@@. SINCE THIS IS THE LAST ELEM PR
)@@G@@IN THE FILE, LET'S MAKE SURE THE    @#@[@@. DRUM IS THERE   @C@[@@      PS
)@@G@@ LA,H2 A12,TXTADD  . GET START OF TEXT    @ @[@@       AA,H2 A12,TXTSIZ PT
)@@G@@ .    @F@[@@       LA    A0,PFPKT    . GET SOMETHING WE CAN SEE EASY IN PU
)@@G@@A DUMP@ @[@@       SA    A0,BUFF     .    @ @[@@       SA    A12,IOPKT+5PV
)@@G@@ .    @ @[@@       LA,U  A0,IOPKT    .    @D@[@@       ER    IOW$       PW
)@@G@@ . GET UNUSED SPACE ALLOCATED @ @[@@       TZ,S1 3,A0        .    @ @[@@PX
)@@G@@       J     AF0398      .    @B@[@@. EVERYTHING OK, ZERO OUT THE OLD ELPY
)@@G@@EMENT @G@[@@       AA,U  A13,2       . GET # ENTRIES TO BE ZEROED(+2 FORPZ
)@@G@@ SEC 0)     @ @[@@       DSL   A13,36      .    @F@[@@       DI,U  A13,1QA
)@@G@@6      . FIND HOW MANY FULL BUFFERS THIS USES   @F@[@@       JZ    A13,AQB
)@@G@@F0350  . IF NO FULL BUFFS, GO DO PARTIAL BUFFS  @C@[@@       ANA,U A13,1QC
)@@G@@       . MAKE A JGD COUNT     @D@[@@       LR,U  R1,224      . THIS MANYQD
)@@G@@ WORDS IN THE BUFF@ @[@@       LA    A2,(1,BUFF) .    @ @[@@       LA,U QE
)@@G@@ A1,(0)      .    @ @[@@       BT    A2,0,*A1    .    @ @[@@       LA   QF
)@@G@@ A3,(224,BUFF) .  @D@[@@       DS    A3,IOPKT+4  . A4 HAS ADDR OF OLD ELQG
)@@G@@EM    @ @[@@       LA,U  A0,IOPKT    .    @D@[@@AF0340 ER    IOW$       QH
)@@G@@ . XFER 8 SECS WORTH OF ZEROS @ @[@@       TZ,S1 3,A0        .    @ @[@@QI
)@@G@@       J     AF0398      .    @C@[@@       AA,U  A4,8        . BUMP WRITQJ
)@@G@@E ADDRESS   @C@[@@       SA    A4,IOPKT+5  . POST IT IN PACKET    @C@[@@QK
)@@G@@       JGD   A13,AF0340  . EVERYTHING DONE?     @C@[@@       ANA,U A4,7 QL
)@@G@@       . MOVE BACK WRITE ADDR @E@[@@AF0350 JZ    A14,AF0360  . SKIP THISQM
)@@G@@ IF NO PARTIAL BUFFERS  @E@[@@       LDSL  A13,35      . A13 = # SECS LEQN
)@@G@@FT TO BE ZEROD    @F@[@@       JN    A14,$+2     . WAS IT AN INTEGRAL NUQO
)@@G@@M OF SECTORS?     @D@[@@       JGD   A13,$+1     . YES, FUDGE THE JGD COQP
)@@G@@UNT   @D@[@@       LA,U  A1,28       . UPDATE PKT FOR 1 SEC XFERS @ @[@@QQ
)@@G@@       SA,H1 A1,IOPKT+4  .    @C@[@@       SA    A4,IOPKT+5  . POST NEXTQR
)@@G@@ WRITE ADDR @D@[@@AF0355 ER    IOW$        . WRITE NEXT SECTOR OF ZEROS QS
)@@G@@@B@[@@       TZ,S1 3,A0        . DID IT GO?     @C@[@@       J     AF039QT
)@@G@@8      . NO, GO REPORT I/O ERR@D@[@@       AA,U  A4,1        . YES, MOVEQU
)@@G@@ TO NEXT SECTOR   @ @[@@       SA    A4,IOPKT+5  .    @C@[@@       JGD  QV
)@@G@@ A13,AF0355  . EVERYTHING DONE?     @C@[@@AF0360 LA,U  A1,UNL$     . YESQW
)@@G@@, SET UP INLOCK   @ @[@@       SA,S2 A1,IOPKT+3  .    @ @[@@       LA   QX
)@@G@@ A1,(28,BUFF) .   @ @[@@       LA,U  A2,1791     .    @ @[@@       DS   QY
)@@G@@ A1,IOPKT+4  .    @E@[@@       ER    IOW$        . LET OTHER PEOPLE USE QZ
)@@G@@THIS STUFF  @ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AF039RA
)@@G@@9      .    @B@[@@       DL    A0,RCLIBN   . GET MY LIB NO  @D@[@@      RB
)@@G@@ LMJ   X11,ACFNUM  . AND GO FIND OUT WHERE IT IS@D@[@@       J     AF039RC
)@@G@@9      . GOT AN ERROR SOMEWHERE     @C@[@@       JZ    A0,AF0399   . A0=RD
)@@G@@0=>NUM NNOT FOUND @E@[@@       SA    A0,INDEX    . POST NEW DRUM INDEX FRE
)@@G@@OR NUMBER   @D@[@@       LA,U  A0,0        . THIS SAYS EVERYTHING OK    RF
)@@G@@@ @[@@AF0390 LX    X8,AFRSAV   .    @ @[@@       LX    X9,AFRSAV+1 .    RG
)@@G@@@ @[@@       LX    X10,AFRSAV+2 .   @ @[@@       TLD   A12,AFRSAV+3 .   RH
)@@G@@@ @[@@       LR    R2,AFRSAV+6 .    @ @[@@       LR    R3,AFRSAV+7 .    RI
)@@G@@@C@[@@       SZ,H1 MCAWRD      . MARK FILE AS NOT OPEN@A@[@@       J    RJ
)@@G@@ AF0850      . LEAVE !! @ @[@@AF0398 LA,U  A0,UNL$     .    @ @[@@      RK
)@@G@@ SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@      RL
)@@G@@ LA,U  A1,1791     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@      RM
)@@G@@ LA,U  A0,IOPKT    .    @ @[@@       ER    IOW$        .    @C@[@@AF0399RN
)@@G@@ LA,XU A0,-2       . RETURN AN I/O ERROR  @^@[@@       J     AF0390     RO
)@@G@@@[@[@@.     @F@[@@. THESE ARE THE LITTLE ROUTINE USED TO MANAGE THE TWO RP
)@@G@@BUFFERS FOR @^@[@@. THE GARBAGE COLLECTOR @E@[@@AF0400 JGD   R2,AF0420  RQ
)@@G@@ . WILL THIS REC OVFLO THE BUFF?    @E@[@@       ANA,U A13,4       . YESRR
)@@G@@, MOVE BACK THE WRITE ADDR    @ @[@@       SA    A13,IOPKT+5 .    @A@[@@RS
)@@G@@       LA    A0,(112,BUFF+112) .    @ @[@@       SA    A0,IOPKT+4  .    RT
)@@G@@@ @[@@       LA,U  A0,W$       .    @ @[@@       SA,S2 A0,IOPKT+3  .    RU
)@@G@@@ @[@@       LA,U  A0,IOPKT    .    @ @[@@       ER    IOW$        .    RV
)@@G@@@ @[@@       TZ,S1 3,A0        .    @ @[@@       J     AF0819      .    RW
)@@G@@@ @[@@       LX    X8,(1,BUFF+112) .@ @[@@       LR,U  R2,7        .    RX
)@@G@@@ @[@@AF0420 LR,U  R1,14       .    @E@[@@       BT    X8,0,*X10   . MOVRY
)@@G@@E CURRENT ENTRY TO BUFFER     @ @[@@       J     AF0330      .    @D@[@@RZ
)@@G@@AF0450 JGD   R3,AF0470   . WILL ENTRY CAUSE OVFLO?    @ @[@@       SA   SA
)@@G@@ A12,IOPKT+5 .    @ @[@@       LA    A0,(112,BUFF) .  @ @[@@       SA   SB
)@@G@@ A0,IOPKT+4  .    @ @[@@       LA,U  A0,W$       .    @ @[@@       SA,S2SC
)@@G@@ A0,IOPKT+3  .    @ @[@@       LA,U  A0,IOPKT    .    @ @[@@       ER   SD
)@@G@@ IOW$        .    @ @[@@       TZ,S1 3,A0        .    @ @[@@       J    SE
)@@G@@ AF0819      .    @C@[@@       AA,U  A12,4       . BUMP NEXT WRITE LOC  SF
)@@G@@@ @[@@       LX    X9,(1,BUFF) .    @ @[@@       LR,U  R3,7        .    SG
)@@G@@@ @[@@AF0470 LR,U  R1,14       .    @D@[@@       BT    X9,0,*X10   . MOVSH
)@@G@@E ENTRY INTO OUT BUFF   @G@[@@       JMGI  X11,AF0330  . KEEP TRACK OF HSI
)@@G@@OW MANY GOOD ONES WE HAVE     @F@[@@       J     AF0330      . THIS IS TSJ
)@@G@@AKEN ON THE FIRST TIME THROUGH@[@[@@.     @B@[@@. RETURN POINTS FOR MASCSK
)@@G@@ON IBEAM RTNES    @[@[@@.     @ @[@@AF0800 LA,U  A0,UNL$     .    @ @[@@SL
)@@G@@       SA,S2 A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@SM
)@@G@@       LA,U  A1,1791     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@SN
)@@G@@       LA,U  A0,IOPKT    .    @D@[@@       ER    IOW$        . FREE UP TSO
)@@G@@HE FILE FOR OTHERS@ @[@@      TZ,S1 3,A0        .     @ @[@@       J    SP
)@@G@@ AF0820      .    @C@[@@       SZ,H1 MCAWRD      . CLEAR FILE OPEN FLAGSSQ
)@@G@@@ @[@@       LA,U  A0,0        .    @ @[@@       J     AF0850      .    SR
)@@G@@@C@[@@AF0810 LA,XU A0,-1       . FILE OPEN OR NOT OPEN@ @[@@       J    SS
)@@G@@ AF0850      .    @ @[@@AF0819 LA,U  A0,UNL$     .    @ @[@@       SA,S2ST
)@@G@@ A0,IOPKT+3  .    @ @[@@       LA    A0,(28,BUFF) .   @ @[@@       LA,U SU
)@@G@@ A1,1791     .    @ @[@@       DS    A0,IOPKT+4  .    @ @[@@       LA,U SV
)@@G@@ A0,IOPKT    .    @B@[@@       ER    IOW$        . UNLOCK THE FILE@A@[@@SW
)@@G@@AF0820 LA,XU A0,-2       . I/O ERROR@C@[@@       SZ,H1 MCAWRD      . MARSX
)@@G@@K FILE AS NOT OPEN@ @[@@       J     AF0850      .    @D@[@@AF0830 LA,XUSY
)@@G@@ A0,-3       . RECORD NUM NOT DEFIBED     @^@[@@AF0850 LX    X11,AFLINK SZ
)@@G@@@ @[@@       J     1,X11       .    @[@[@@.     @G@[@@.             . . TA
)@@G@@. . . . . . . . . . . . . . . . . . . . . . . . . . . @G@[@@. MCAWRD    TB
)@@G@@  : WRITE ALLOW :  FILE OPEN  :     NR ENTRIES IN FILE    : @G@[@@. ACTITC
)@@G@@ND      :       OLD RECORD  #       :INDEX INTO PAGE OF THIS REC: @G@[@@TD
)@@G@@. ACPIND      :  LAST REC # IN THIS PAGE  :  DRUM ADDR OF THIS PAGE   : TE
)@@G@@@G@[@@. PAGEST      :                           :  FIRST REC # IN THIS PTF
)@@G@@AGE : @G@[@@.             . . . . . . . . . . . . . . . . . . . . . . . TG
)@@G@@. . . . . . @[@[@@.     @ @[@@MCAWRD* +    0           .    @#@[@@ACTINDTH
)@@G@@ +     0 .  @#@[@@ACPIND +     0 .  @#@[@@PAGEST +     0 .  @#@[@@ACTEMPTI
)@@G@@ RES   1 .  @D@[@@ACTIVE* RES  14 . MAIN BUFFER FOR A RECORD IN THE FILETJ
)@@G@@@C@[@@ACPAGE RES   224 . PAGE TO GET  GET RECORDS FROM@C@[@@AFRSAV RES  TK
)@@G@@ 8           . REGISTER SAVE AREA   @#@[@@AFLINK RES   1 .  @[@[@@/.    TL
)@@G@@@ @[@@       VARBLS            .    @[@[@@PFPKT.@[@[@@.     @E@[@@.     TM
)@@G@@ PACKET FOR PROGRAM FILE ER'S FOR ACCOUNT ELEMENT     @[@[@@.     @ @[@@TN
)@@G@@       'APL$ACCNTG  '    .    @B@[@@       'ACCOUNTING'      . ELEMENT NTO
)@@G@@AME   @ @[@@       +     0           .    @A@[@@       +     5,0        TP
)@@G@@ . TYPE=REL @B@[@@       '000000000000'    . VERSION NAME   @B@[@@      TQ
)@@G@@ +     0           . PREAMBLE ADD   @B@[@@TXTSIZ +     0           . SIZTR
)@@G@@E OF ELEMENT@D@[@@TXTADD +     0           . STARTING ADDRESS OF TEXT   TS
)@@G@@@E@[@@TDATE  +     0           . TIME/DATE ELEMENT CREATED 0=NOW  @C@[@@TT
)@@G@@NRENT  +     0           . NUMBER OF ENTRIES    @[@[@@.     @C@[@@.     TU
)@@G@@ ASSUMED INFO IF LIB # NOT IN ACCOUNT FILE@[@[@@.     @ @[@@       MCONSTV
)@@G@@             .    @]@[@@ASSUMD*.    @A@[@@       +     0D          . ACCTW
)@@G@@NT #  @C@[@@       APLBCI '        '           . NO KEY     @B@[@@      TX
)@@G@@ +     0           . LAST REFERENCE @A@[@@       +     0D          . ACCTY
)@@G@@OUNT #@A@[@@       +     0D          . QUALIFIER@F@[@@       +     1,4,8TZ
)@@G@@,4,2,1 . CONTINUE,PUBLIC,4K,8K,16K,32K QUOTA    @B@[@@       +     0    UA
)@@G@@       . WS QUOTA USED  @F@[@@       +     0           . PERM BITS AND IUB
)@@G@@N USE, LOCKED OUT FLAGS @A@[@@       +     0D          . SPARES   @ @[@@UC
)@@G@@       VARBLS            .    @[@[@@.     @^@[@@IOPKT  'APL$ACCNTG  '   UD
)@@G@@@ @[@@       +     0           .    @A@[@@       +     $-$,0,0     . FUNUE
)@@G@@CTION @B@[@@       +     $-$,BUFF    . ACCESS WORD    @B@[@@       +    UF
)@@G@@ $-$         . DRUM ADDRESS   @[@[@@.     @ @[@@INDEX  RES   1          UG
)@@G@@ .    @ @[@@       MCONS             .    @ @[@@WHERE  RES   1          UH
)@@G@@ .    @ @[@@WHICH  +     0D          .    @ @[@@ACLINK RES   1          UI
)@@G@@ .    @ @[@@ENLINK RES   1           .    @ @[@@       ACOFF            UJ
)@@G@@ .    @E@@[[P       PROC   . XFER ENTRIES BETWEEN BUFF AND WORK AREA    UK
)@@G@@@E@@[[ACTIVA* NAME   1              . ACTIVATE (BUF TO WORK AREA) @E@@[[UL
)@@G@@DACTIV* NAME   0              . DEACTIVATE (THE OTHER WAY)  @#@@[[      UM
)@@G@@  UNLI$T .  @E@@[[ DO P(0,0) , GO ACT$01        . IF ACTIVATING, ALWAYS UN
)@@G@@MOVE  @G@@[[        TNZ    ACCHFL         . DEACTING.. HAS WORKAREA BEENUO
)@@G@@ CHANGED?   @C@@[[        J      AC0100         . NO, GET OUT     @#@@[[UP
)@@G@@ACT$01* NAME   .  @E@@[[        LA     A0,ACBUFI      . GET RECORD INDEXUQ
)@@G@@ INTO BUFFER@E@@[[        MSI,U  A0,14          . TIMES 14 WORDS PER ENTUR
)@@G@@RY    @G@@[[        AA     A0,(+1,ACBUFF) . PLUS BUF BASE = ADDR OF THISUS
)@@G@@ ENTRY IN BF@D@@[[        LA     A1,(+1,ACTIVE) . POINTER TO WORK AREA  UT
)@@G@@@E@@[[        LR,U   R1,14          . SET ENTRY COUNT TO 14 WORDS @D@@[[UU
)@@G@@        BT     A0+P(0,0),0,*A1-P(0,0)   . MOVE IT     @F@@[[ DO 1-P(0,0)UV
)@@G@@ , SA A0,ACWRFL   . IF DACT, MARK BUFFER AS WRITTEN IN@F@@[[        SZ  UW
)@@G@@   ACCHFL         . MARK WORK AREA UNCHANGED FROM BUF @]@@[[AC0100  .   UX
)@@G@@@#@@[[        LI$T   .  @#@@[[        END    .  @[@@[[.     @F@@[[P     UY
)@@G@@  PROC                  . PUT BUF CONTENTS BACK ON DRUM     @E@@[[BUFDMNUZ
)@@G@@* NAME   0              . THIS ENTRY DOES NO LOCKING  @D@@[[BUFDMP* NAMEVA
)@@G@@   1              . BUT THIS OLE DOES...  @#@@[[        UNLI$T .  @F@@[[VB
)@@G@@        TNZ    ACWRFL         . HAS BUF EVER BEEN WRITTEN INTO?   @E@@[[VC
)@@G@@        J      BD0010         . NO, NOTHING TO BE DUMPED    @F@@[[ DO P(VD
)@@G@@0,0) , LOCK IOPKT,P(1,1) 1791,(+28,BUFF)    . TAKE THE FILE @G@@[[      VE
)@@G@@  WRITE  IOPKT,P(1,2) *ACBFAD,(+224,ACBUFF) . DUMP THE BUFFER     @F@@[[VF
)@@G@@ DO P(0,0) , UNLOCK IOPKT,P(1,1) 1791,(+28,BUFF)  . RELEASE FILE  @E@@[[VG
)@@G@@        SZ     ACWRFL         . MARK BUF NOT WRITTEN INTO   @]@@[[BD0010VH
)@@G@@  .   @#@@[[        LI$T   .  @#@@[[        END    .  @[@@[[.     @B@@[[VI
)@@G@@. OPEN THE FILE-- A1=0,1 FOR READ,WRITE   @[@@[[.     @#@@[[        MASTVJ
)@@G@@ER .  @F@@[[ACFOPN* TNZ,U  ONEFIL         . HAS SITE IMPLEMENTED SINGLE VK
)@@G@@FILE? @G@@[[        ER     ERR$           . NO DIE; IBEAMS SHOULD HAVE CVL
)@@G@@AUGHT THIS  @C@@[[        SX     X11,ACLINK     . YES, CONTINUE   @G@@[[VM
)@@G@@        TZ     ACENAB         . IS ACCOUNT ELEMENT ALREADY ENABLED?     VN
)@@G@@@E@@[[        J      AC0510         . YES, TAKE BAD STATUS EXIT   @D@@[[VO
)@@G@@        AA,U   A1,1           . BUMP ENTRY PARAMETER  @E@@[[        SA  VP
)@@G@@   A1,ACENAB      . SAVE ACCESS ANABLE FLAG     @E@@[[        LOCK   IOPVQ
)@@G@@KT,AC0520 1791,(+28,BUFF)  . LOCK THE FILE@E@@[[        PFSRCH AC0400   VR
)@@G@@      . FIND ACCOUNTING ELEMENT     @E@@[[        LA     A0,PFTADR      VS
)@@G@@. GET TEXT ADDR FROM PACKET   @D@@[[        SA     A0,ACBBAS      . SAVEVT
)@@G@@ BUFFER BASE ADDR @G@@[[        SA     A0,ACBFAD      . MAKE IT ALSO ADDVU
)@@G@@R OF PRESENT BUF CONTENT@G@@[[        READ   IOPKT,AC0400 *ACBFAD,(+224,VV
)@@G@@ACBUFF) . GET CTL SECT, PRIME @E@@[[        LA     A0,ACENAB      . GET VW
)@@G@@ENABLE FLAG BACK AGAIN  @G@@[[        ANA,U  A0,1           . FIX SO REAVX
)@@G@@D WON'T AFFECT OTHER USERS    @F@@[[        SA,Q2  A0,BUFF        . CRAMVY
)@@G@@ INTO FLAG PART OF CTL SECT   @G@@[[        WRITE  IOPKT,AC0400 *ACBFAD,VZ
)@@G@@(+28,ACBUFF)  . DUMP CTL SECT ACCK  @C@@[[        UNLOCK IOPKT,AC0520 17WA
)@@G@@91   . RELEASE    @E@@[[        SZ     ACWRFL         . CLEAR BUF WRITTEWB
)@@G@@N IN FLAG   @E@@[[        SZ     ACCHFL         . MARK ACTIVE RECORD UNCWC
)@@G@@HANGED@E@@[[        LA,H2  A0,ACBUFF      . GET NR OF ENTRIES FROM BUFF WD
)@@G@@@C@@[[        AU,U   A0,1           . BUMP BY ONE     @F@@[[        SA  WE
)@@G@@   A1,ACMAXI      . AND SAVE MAX INDEX FOR RANGE TESTS@G@@[[        SNA WF
)@@G@@   A0,ACBUFI      . FORCE DUMMY REC INDEX IN ACTIVE AREA    @F@@[[      WG
)@@G@@  J      AC0550         . QUIT RETURNING NO OF ENTRIES IN A0@[@@[[.     WH
)@@G@@@G@@[[. LOCK ACCT EL (*** CAUTION*** CAUSES SIGNON ATTEMPTS TO BE DELAYEWI
)@@G@@D)    @[@@[[.     @A@@[[ACALOK* SX     X11,ACLINK     .     @C@@[[      WJ
)@@G@@  LA     A0,ACENAB      . GET ENABLE FLAG @E@@[[        JNE,U  A0,2 AC05WK
)@@G@@10    . ERROR IF NOT WRITE ENABLED  @G@@[[        LOCK   IOPKT,AC0520 *AWL
)@@G@@CBBAS,(+28,BUFF)    . LOCK EL CTL SECT    @C@@[[        J      AC0500   WM
)@@G@@      . NORMAL EXIT     @[@@[[.     @F@@[[. UNLOCK ACCT ELEMENT (LET ALLWN
)@@G@@ THOSE PORR USERS SIGN ON, NOW)     @[@@[[.     @A@@[[ACULOK* SX     X11WO
)@@G@@,ACLINK     .     @C@@[[        LA     A0,ACENAB      . GET ENABLE FLAG WP
)@@G@@@E@@[[        JNE,U  A0,2 AC0510    . ERROR IF NOT WRITE ENABLED  @F@@[[WQ
)@@G@@        UNLOCK IOPKT,AC0520 *ACBBAS,(+28,BUFF)    . LEGGO MY EGGO @C@@[[WR
)@@G@@        J      AC0500         . NORMAL EXIT     @[@@[[.     @G@@[[. ADD WS
)@@G@@NEW ENTRY TO ACCOUNT ELEMENT. NOTE: INITIAL VALS WILL BE TRASH    @[@@[[WT
)@@G@@.     @A@@[[ACADNU* SX     X11,ACLINK     .     @C@@[[        LA     A0,WU
)@@G@@ACENAB      . GET ENABLE FLAG @E@@[[        JNE,U  A0,2 AC0510    . DIE WV
)@@G@@OF NOT OPEN FOR WRITE   @F@@[[        DACTIV                . DEACTIVATEWW
)@@G@@ CURRENT REC, IF ANY    @G@@[[        LOCK   IOPKT,AC0520 1791,(+28,BUFFWX
)@@G@@)  . TAKE CONTROL OF WSFLE    @G@@[[        BUFDMN AC0400,AC0400  . FLUSWY
)@@G@@H BUF (IF ITS BEEN WRITTEN INTO)    @E@@[[        LA,U   A0,2           WZ
)@@G@@. GET EXPANSION ALLOWED FLAG  @F@@[[        LA,U   A3,ASSUMD      . SET XA
)@@G@@POINTER TO DUMMY INITIAL DATA @D@@[[        LMJ    X11,ADDENT     . AND XB
)@@G@@ADD A DUMMY ENTRY @E@@[[        J      AC0400         . OOPS, GO UNLOCK XC
)@@G@@THE FILE    @C@@[[. RESET NO ELS IN FILE, PRIME BUF WITH NEW ENTRY@G@@[[XD
)@@G@@AC0100  LA,H2  A0,BUFF        . GET NEW ENTRY COUNT FROM CTL SECT IMAGE XE
)@@G@@@E@@[[        TE     A0,ACMAXI      . DOES IT MATCH OLD TESTVAL?  @D@@[[XF
)@@G@@        ER     ERR$           . NO, SOMETHING'S BUSTED@C@@[[        AA,UXG
)@@G@@   A0,1           . YES, BUMP IT    @F@@[[        SA     A0,ACMAXI      XH
)@@G@@. AND STASH NEW VAL TO TEST AGAINST @G@@[[        LA     A0,PFTADR      XI
)@@G@@. IN CASE EL WAS MOVED, GET ITS TEXT ADDR @F@@[[        SA     A0,ACBBASXJ
)@@G@@      . AND FORCE BASE ADDR OF EL TO IT   @G@@[[        SNA    A0,ACBFADXK
)@@G@@      . SET DUMMY ADDR TO FORCE BUF RE-PRIME    @F@@[[        UNLOCK IOPXL
)@@G@@KT,AC0520 1791,(+28,BUFF)  . RELEASE THE FILE   @D@@[[        LA     A0,XM
)@@G@@ACMAXI      . RECOVER TEST INDEX VAL@G@@[[        ANA,U  A0,1           XN
)@@G@@. COMPUTE INDEX OF ENTRY WE JUST WROTE    @D@@[[        J      AC0210   XO
)@@G@@      . AND GO ACTIVATE IT    @[@@[[.     @A@@[[. READ ENTRY WHOSE INDEXXP
)@@G@@ IS IN A1 - @[@@[[.     @A@@[[ACGREC* SX     X11,ACLINK     .     @C@@[[XQ
)@@G@@        TNZ    ACENAB         . IS FILE ENABLED?@E@@[[        J      AC0XR
)@@G@@510         . NO, GO RETURN BAD STATUS    @A@@[[. BE SURE DESIRED REC ISXS
)@@G@@ IN RANGE ..@E@@[[AC0210  TLE    A1,ACMAXI      . IS MAX INDEX .LE. DESIXT
)@@G@@REC   @E@@[[        TLE,U  A1,0           . NO, IS INDEX AT LEAST ZERO? XU
)@@G@@@F@@[[        J      AC0530         . IF EITHER TEST FAILS, OUT OF RANGEXV
)@@G@@@F@@[[        TZ     A1             . DOES USER WANT THE CONTROL SECTOR?XW
)@@G@@@E@@[[        AA,U   A1,1           . NO, SKIP OVER )HI BUFFER    @F@@[[XX
)@@G@@        SA     A1,ACFILI      . SAVE INDEX OF RECORD INTO FILE    @F@@[[XY
)@@G@@        DACTIV                . DEACTIVE CONTENTS OF WORK AREA    @G@@[[XZ
)@@G@@        LA     A1,ACFILI      . RECOVER INDEX INTO FILE OF THIS RECORD  YA
)@@G@@@A@@[[        LA,U   A0,0           .     @G@@[[        DI,U   A0,ACNRPBYB
)@@G@@      . INDEX OVER RECS/BLOCK = BLOCK, OFFSET   @E@@[[        SA     A1,YC
)@@G@@ACBUFI      . POST INDEX OF REC INTO BUFF @G@@[[        MSI,U  A0,ACBSIZYD
)@@G@@/28   . BLOCK INDEX TIMES NO SECTS PER BLOCK    @G@@[[        AA     A0,YE
)@@G@@ACBBAS      . BLOCK + EL BASE = DRUMADR OF TARGET BLOC@G@@[[        TNE YF
)@@G@@   A0,ACBFAD      . DOES BUF ALREADY CONTAIN THIS BLOCK?    @F@@[[      YG
)@@G@@  J      AC0230         . YES, DON'T REREAD THE SAME BLOCK  @G@@[[AC0220YH
)@@G@@  SA     A0,ACTIVE      . TEMP SAVE BUF ADDR AND RECORD WORD OFFSE@F@@[[YI
)@@G@@        BUFDMP AC0520,AC0400  . FLUSH CURRENT BUF CONTENTS, IF ANY@F@@[[YJ
)@@G@@        LA     A0,ACTIVE      . GET TARGET DRUM ADDR BACK AGAIN   @D@@[[YK
)@@G@@        SA     A0,ACBFAD      . SAVE BUFFER ADDRESS   @G@@[[        READYL
)@@G@@   IOPKT,AC0520 *ACBFAD,(+224,ACBUFF) . GET DESIRED DATA    @D@@[[AC0230YM
)@@G@@  ACTIVA                . ACTIVATE TARGET RECORD@C@@[[        J      AC0YN
)@@G@@500         . TAKE NORMAL EXIT@[@@[[.     @^@@[[. CLOSE THE FILE --     YO
)@@G@@@[@@[[.     @A@@[[ACFCLO* SX     X11,ACLINK     .     @F@@[[        SA  YP
)@@G@@   A1,ACPACK      . SAVE FLAG INDICATING TYPE OF CLOES@G@@[[        UNLOYQ
)@@G@@CK IOPKT *ACBBAS,(+28,BUFF)      . IN CASE HE FORGOT THIS   @F@@[[      YR
)@@G@@  DACTIV                . DEACTIVATE CONTENTS OF WORK AREA  @E@@[[      YS
)@@G@@  LOCK   IOPKT,AC0520 1791,(+28,BUFF)  . LOCK THE FILE@E@@[[        BUFDYT
)@@G@@MN AC0400,AC0400  . FLUSH BUFFER WITHOUT LOCKING@D@@[[. IF ELEMENT IS TOYU
)@@G@@ BE REORGANIZED, MAKE A COPY OF IT  @G@@[[AC0310  LA     A1,ACPACK      YV
)@@G@@. GET INITIAL ARGUMENT (TYPE OF CLOSE)    @G@@[[        JZ     A1,AC0320YW
)@@G@@      . IF CLOSE AS IS, THEN JUST CLEAR LOCKS   @D@@[[        LA,U   A0,YX
)@@G@@0           . ELSE ASSUME NO PACKINT@E@@[[        TNE,U  A1,2           YY
)@@G@@. DOES FLAG SAY NOT TO PACK?  @D@@[[        LA,U   A0,1           . NO, YZ
)@@G@@TURN ON PACK FLAG @E@@[[        LMJ    X11,ACCOPY     . MAKE A COPY OF TZA
)@@G@@HE ELEMENT  @A@@[[        J      AC0400         .     @C@@[[. NOW THAT AZB
)@@G@@LL ELSE IS DONE, CLEAR OUR LOCKS    @F@@[[AC0320  READ   IOPKT,AC0400 *AZC
)@@G@@CBBAS,(+28,BUFF)    . GET CTL INFO  @F@@[[        SZ,Q2  BUFF           ZD
)@@G@@. CLEAR FLAG SAYING WE'RE SIGNED ON @F@@[[        WRITE  IOPKT,AC0400   ZE
)@@G@@. POST SECTOR WITH OUR FLAG OFF     @D@@[[        UNLOCK IOPKT,AC0510 17ZF
)@@G@@91   . RELEASE THE FILE @D@@[[        DL     A0,RCLIBN      . GET OUR OWZG
)@@G@@N LIBNO     @D@@[[        LA     A2,(+448,BUFF) .AND SOME BUFFER SPACE  ZH
)@@G@@@G@@[[        LXI,U  X11,SYSREP     . WE'RE IN THE EXECUTION REP, FINDNOZI
)@@G@@ ISN'T@F@@[[        LIJ    X11,FINDNS     . SO BANK SWITCH TO FIND OUR EZJ
)@@G@@NTRY  @A@@[[        J      AC0520         .     @A@@[[        JZ     A0,ZK
)@@G@@AC0520      .     @F@@[[        SA     A0,DRUMAD      . POST LOCN OF OURZL
)@@G@@ ACCOUNT ENTRY    @D@@[[        SZ     ACENAB         . TURN OFF ENABLE ZM
)@@G@@FLAG  @F@@[[        J      AC0500         . TAKE NORMAL (ZERO STATUS) EXZN
)@@G@@IT    @E@@[[. EXITS WITH FILE LOCKED (ONLY AN I/O ERROR CAN GET US HERE)ZO
)@@G@@@E@@[[AC0400  UNLOCK IOPKT 1791,(+28,BUFF)    . LET OTHER USERS GO@E@@[[ZP
)@@G@@        J      AC0520         . AND GO SIGNAL I/O ERROR     @ @@[[. EXITZQ
)@@G@@S WITH FILE UNLOCKED--  @B@@[[AC0500  LA,U   A0,0           . NORMAL    ZR
)@@G@@@A@@[[        J      AC0550         .     @G@@[[AC0510  LNA,U  A0,1     ZS
)@@G@@      . FILE NOT ENABLED FOR GIVEN FUNCTION     @A@@[[        J      AC0ZT
)@@G@@550         .     @B@@[[AC0520  LNA,U  A0,2           . I/O ERROR @A@@[[ZU
)@@G@@        J      AC0550         .     @D@@[[AC0530  LNA,U  A0,3           ZV
)@@G@@. INDEX OUT OF RANGE    @B@@[[. COME HERE WITH RESULT ALREADY IN A0     ZW
)@@G@@@A@@[[AC0550  LX     X11,ACLINK     .     @A@@[[        J      1,X11    ZX
)@@G@@      .     @[@@[[.     @^@@[[ACLINK  EQUF   $,,H1    @A@@[[ACPACK  EQUFZY
)@@G@@   $,,H2          .     @A@@[[        RES    1              .     @G@@[[ZZ
)@@G@@ACFLGW* +      0              . FLAG WORD-- ACCESSED BY ELEMENT IBEAMS  AA
)@@G@@@E@@[[ACENAB  EQUF   ACFLGW,,S1     . ENABLE TYPE-- 1=READ, 2=RITE@G@@[[AB
)@@G@@ACCHFL  EQUF   ACFLGW,,H2     . CHANGE FLAG, SET WHEN ACTIVE REC CHANGESAC
)@@G@@@F@@[[ACWRFL  EQUF   $,,H1          . ON IF BUF HAS BEEN STORED INTO    AD
)@@G@@@F@@[[ACMAXI  EQUF   $,,H2          . MAX INDEX +1 OF ENTRIES IN FILE   AE
)@@G@@@A@@[[        RES    1              .     @E@@[[ACBUFI  EQUF   $,,H1    AF
)@@G@@      . BUF INDEX OF CURRENT RECOD  @E@@[[ACFILI  EQUF   $,,H2          AG
)@@G@@. FILE INDEX OF CURRENT RECORD@A@@[[        RES    1              .     AH
)@@G@@@F@@[[ACBBAS  RES    1              . DRUM BASE ADDR OF ACCNT ELEMENT   AI
)@@G@@@E@@[[ACBFAD  RES    1              . DRUM ADDR OF CURRENT BUFFER @G@@[[AJ
)@@G@@ACTIVE* RES    14             . WORK AREA FOR CURRENTLY ACTIVE ENTRY    AK
)@@G@@@D@@[[ACBSIZ  EQU    224            . SIZE OF I/O BUFFER    @A@@[[ACBUFFAL
)@@G@@  RES    ACBSIZ         .     @D@@[[ACNRPB  EQU    ACBSIZ/14      . RECOAM
)@@G@@RDS PER BUFFER    @[@@[[.     @F@@[[/. SUBROUTINE TO FIND THE ENTRY FOR AN
)@@G@@A SPECIFIED LIBNO.  USED AT   @E@@[[. SIGNON, AND WHENEVER UPDATE OR MASAO
)@@G@@TER CONS DETECT THAT THE@A@@[[. ACCOUNTING ELEMENT HAS BEEN MOVED @E@@[[AP
)@@G@@.      ENTER WITH A0,A1 = LIBNO, A2= BUFFER ACCESS WORD.    @E@@[[. BUF AQ
)@@G@@MAY BE FULL TRACK (AT SIGNON TIME) OR EXTERNAL BUFF*  @E@@[[.       EXITAR
)@@G@@ WITH A0 = INDEX OF ENTRY OR ZERO OF NOFIND     @C@@[[.                 AS
)@@G@@A1 = CORE ADDR OF FOUND ENTRY @[@@[[.     @F@@[[. WE ASSUME THAT THE PFSAT
)@@G@@$ HAS BEEN DONE AND THE FILE IS LOCKED    @#@@[[. BY THE CALLER   @[@@[[AU
)@@G@@.     @D@@[[        INSTRS . NOT DISPOSABLE, AS UPDATE MAY CALL US@G@@[[AV
)@@G@@. THIS ENTRY WHEN CALLED BY AN LIJ FROM EXECUTION OF MAST CONS I-BEAMS  AW
)@@G@@@C@@[[FINDNS  SX     X11,FILIJF     . RAISE LIJ FLAG  @A@@[[        J   AX
)@@G@@   FI0010         .     @F@@[[. THIS ENTRY WHEN CALLED BY AN LMJ IN SYSTAY
)@@G@@EM REP AFTER UPDATING   @C@@[[FINDNO  SZ     FILIJF         . LOWER LIJ AZ
)@@G@@FLAG  @F@@[[FI0010  SX     X11,FILINK     . SAVE FULLWD TO PRESERVE BANKBA
)@@G@@ INDEX@[@@[[.     @C@@[[        DS     A0,FITARG . SAVE TARGET LIBNO    BB
)@@G@@@E@@[[        SX     X11,FIBUF1     . TURN ON 1ST BUFFER FLAG     @F@@[[BC
)@@G@@        READ   IOPKT,FI0900 *PFTADR,(+28,BUFF)    . GET CTL SECT  @E@@[[BD
)@@G@@        SA     A2,IOACWD . THEN POST OUR OWN ACCESS WORD    @G@@[[      BE
)@@G@@  LA,H2  A5,BUFF   . INITIALIZE NO OF ENTRIES YET TO BE SEARCHED  @D@@[[BF
)@@G@@        DSL    A2,36+18  . ALIGN BUFF SIZE IN WORDS   @D@@[[        DI,UBG
)@@G@@   A2,14     . COMPUTE ENTRIES PER BUFF   @E@@[[        LA     A3,A2    BH
)@@G@@ . POST ENTRIES/BUF TO SET LOOP CNT @D@@[[        SSL    A2,1      . DIVBI
)@@G@@ BY 2 GIVING SECTS/BUF  @F@@[[        LA     A4,A2     . SET SECTS/BUF FBJ
)@@G@@OR DRUM ADDR BUMPING    @E@@[[. NOW A3=ENTRIES/BUFF, A4=SECTORS/BUFF, A5BK
)@@G@@=TOTAL ENTRIES    @C@@[[. GET NEXT BUFFER'S WORTH AND UPDATE DRUM ADDR  BL
)@@G@@@F@@[[FI0100  JNZ    A5,FI0110 . IF MORE TO EXAMINE, GO RELOAD BUFF     BM
)@@G@@@C@@[[        LA,U   A0,0      . ELSE SET NOFIND FLAG @C@@[[        LX  BN
)@@G@@   X11,FILINK     . RECOVER LINKAGE @D@@[[        J      1,X11     . TAKBO
)@@G@@E NORMAL NOFIND EXIT    @[@@[[.     @E@@[[FI0110  READ   IOPKT     . NOTBP
)@@G@@E: PKT IS ALREADY INITIALIZED @B@@[[        LA     A0,IOSTAT . GET STATUBQ
)@@G@@S     @D@@[[        TE,U   A0,5      . IF I/O 5, THEN LET IT GO   @F@@[[BR
)@@G@@        JNZ    A0,FI0900 . IF NOT 5 AND NON-ZERO EITHER, ERROR    @C@@[[BS
)@@G@@        LA     A0,A4     . GET SECTORS/BUFFER   @D@@[[        AA     A0,BT
)@@G@@IODADR . PLUS LAST DRUM READ ADDR   @C@@[[        SA     A0,IODADR . GIVBU
)@@G@@ES NEXT READ ADDR @ @@[[. SET UP TO SCAN THIS BUFFER  @C@@[[FI0120  LA  BV
)@@G@@   A0,A3     . GET ENTRIES/BUFF     @A@@[[        TZ     FIBUF1    . 1STBW
)@@G@@ PASS @E@@[[        ANA,U  A0,2      . YES, 2 FEWER BECAUSE OF CTL SECT BX
)@@G@@@G@@[[        TG     A0,A5     . DOES NO REMAINING EXCEED NUMBER IN BUFFBY
)@@G@@?     @F@@[[        LA     A0,A5     . NO, USE NUMBER REMAINING AS LOOP BZ
)@@G@@CNT   @F@@[[        ANA    A5,A0     . DECREMENT NO REMAINING BY NO TO SCA
)@@G@@CAN   @C@@[[        LR     R1,A0     . AND SET UP LOOP COUNT@D@@[[      CB
)@@G@@  LA     A0,IOBADR . GET BUF ADDR FRON I/O PKT  @F@@[[        ANA,U  A0,CC
)@@G@@14     . LESS 1 ENTRY BECAUSE SE INST INCREMENTS@B@@[[        TZ     FIBCD
)@@G@@UF1    . 1ST BUFFERLOAD?@D@@[[        AA,U   A0,28     . YES, SKIP OVER CE
)@@G@@SECTOR ZERO @C@@[[        SZ     FIBUF1    . CLEAR 1ST BUFFER FLAG@D@@[[CF
)@@G@@        LXI,U  A0,14     . SET INCREMENT TO ONE ENTRY @E@@[[        DL  CG
)@@G@@   A1,FITARG . AND GET LIBNO WE'RE LOOKING FOR  @B@@[[. NOW SEARCH ON 1SCH
)@@G@@T WORD, TEST ON 2ND     @D@@[[FI0200  SE     A1,14,*A0 . LOOK FOR MATCH CI
)@@G@@ON 1ST WD   @E@@[[        J      FI0100    . NO FIND, GO TRY FOR ANOTHERCJ
)@@G@@ BLOCK@E@@[[        TE     A2,1,A0   . HIT-- DOES 2ND WD MATCH TOO?     CK
)@@G@@@C@@[[        J      FI0200    . NO, KEEP SEARCHING   @[@@[[.     @A@@[[CL
)@@G@@. ENTRY FOUND, COMPUTE ITS INDEX    @[@@[[.     @F@@[[FI0300  LA,U   A0,CM
)@@G@@0,A0   . ISOLATE CORE ADDR WITHOUT INCREMENT    @E@@[[        SA     A0,CN
)@@G@@FIBUF1 . TEMP SAVE FOR RETRIEVAL AT EXIT  @G@@[[        ANA    A0,IOBADRCO
)@@G@@ . LESS BUFFER ORIGIN=WORD OFFSET INTO BUFF     @ @@[[        DSL    A0,CP
)@@G@@36     .    @F@@[[        DI,U   A0,14     . WORDS DIV BY WDS/ENTRY = ENCQ
)@@G@@TRY NUMBER  @E@@[[        DSL    A0,1      . DIV ENTRIES BY 2 GIVING SECCR
)@@G@@TORS  @D@@[[        AA     A0,IODADR . REL SECT PLUS NEXT BUF ADDR@F@@[[CS
)@@G@@        ANA    A0,A4     . LESS SECTS/BUF GIVES DRUM SECT ADDR    @C@@[[CT
)@@G@@        TP     A1        . IS ENTRY NUMBER EVEN?@F@@[[        LXI,U  A0,CU
)@@G@@14     . NO, SET OFFSET TO UPPER HALFSECTOR     @E@@[[        LA     A1,CV
)@@G@@FIBUF1 . RECOVER CORE ADDR OF THIS ENTRY  @A@@[[        LX     X11,FILINCW
)@@G@@K     .     @D@@[[        TNZ    FILIJF         . CALLED WITH AN LIJ?   CX
)@@G@@@C@@[[        J      1,X11          . NO, NORMAL EXIT @F@@[[        LIJ CY
)@@G@@   X11,1,X11      . YES, EXIT WITH SWITCH BACK TO BANK@[@@[[.     @C@@[[CZ
)@@G@@FI0900  LX     X11,FILINK     . I/O ERROR EXIT  @E@@[[        TNZ    FILDA
)@@G@@IJF         . CALLED FROM THE OTHER BANK? @E@@[[        J      0,X11    DB
)@@G@@      . NO, RETURN IN SAME BANK     @E@@[[        LIJ    X11,0,X11      DC
)@@G@@. YES, RELOAD CALLING BANK    @[@@[[.     @#@@[[        VARBLS .  @F@@[[DD
)@@G@@FILINK  RES    1              . FULL WD TO HOLD LIJ BANK INDEX    @E@@[[DE
)@@G@@FILIJF  EQUF   $,,H1          . FLAG ON IF CALLED WITH LIJ  @B@@[[FIBUF1DF
)@@G@@  EQUF   $,,H2     . 1ST BUF FLAG   @ @@[[        RES    1         .    DG
)@@G@@@B@@[[FITARG  RES    2         . TARGET LIBNO   @B@@[[/. ADD NEW ENTRY TDH
)@@G@@O ACCOUNTING ELEMENT    @E@@[[.  MAY BE CALLED AT SIGNON (NEW USER) OR BDI
)@@G@@Y MASTER CONSOLE  @E@@[[.     ENTER WITH A0=0 IF EXPANSION IS CONDITIONADJ
)@@G@@L, ELSE TWO @E@@[[.                A3=ADDR OF CANNED ENTRY TO INITIALIZEDK
)@@G@@ WITH @F@@[[.      EXIT     1,X11 WITH A0=INDEX OR ZERO (IF EXPANSION FADL
)@@G@@ILURE)@[@@[[.     @#@@[[        MASTER .  @A@@[[ADDENT  SX     X11,ADLINDM
)@@G@@K     .     @C@@[[        SA     A0,ADXFLG . SAVE EXPANSION FLAG  @G@@[[DN
)@@G@@        SA,H2  A3,ADBLOK      . SAVE ADDR OF BLOCK TO INITIALIZE WITH   DO
)@@G@@@[@@[[.     @F@@[[AD0010  READ   IOPKT,AD0900 *PFTADR,(+28,BUFF)    . GEDP
)@@G@@T CTRL SECT @F@@[[        LA,H2  A0,BUFF   . NEW (ORIGIN 0) INDEX = OLD DQ
)@@G@@ENTRY COUNT @F@@[[        DSL    A0,1           . SEPARATE INTO SECTOR, DR
)@@G@@HALFSECTOR  @D@@[[        AA,U   A0,1           . BUMP PAST SECTOR ZERO DS
)@@G@@@D@@[[        TP     A1             . IN LOWER HALFSECT?    @D@@[[      DT
)@@G@@  LXI,U  A0,14          . NO- BUMP TO UPPER     @F@@[[        SA     A0,DU
)@@G@@ADRIND      . SAVE RELATIVE INDEX FOR NEW ENTRY @D@@[[        LA,U   A0,DV
)@@G@@0,A0        . ISOLATE SECTOR ONLY   @F@@[[        TLE    A0,PFTSIZ      DW
)@@G@@. WITHIN CURRENT AVAILABLE SPACE?   @G@@[[        J      AD0100         DX
)@@G@@. OK, WITHIN CURRENTLY ALLOCATED ELEMENT  @G@@[[. NEW ENTRY FALLS OUTSIDDY
)@@G@@E CURRENTLY ALLOCATED LIMITS, EXPAND BY A TRACK @C@@[[AD0020  LA     A0,DZ
)@@G@@ADXFLG . GET EXPANSION FLAG   @G@@[[        TZ,Q2  BUFF      . IS MASTEREA
)@@G@@ CONSOLE ON WITH WRITE PERMISSION?  @F@@[[        JZ     A0,AD0200 . YESEB
)@@G@@, IF CONDITIONAL EXPANSION, GET OUT @F@@[[        LA,U   A0,2      . SETEC
)@@G@@ FLAG FORCING COPY RTNE TO EXPAND   @G@@[[        LMJ    X11,ACCOPY     ED
)@@G@@. OTHERWISE COPY AND EXPAND THE ELEMENT   @A@@[[        J      AD0900   EE
)@@G@@      .     @D@@[[. NOW COMPUTE ABSOLUTE DRUM INDEX AND OUTPUT THE STUFFEF
)@@G@@@C@@[[AD0100  LA,H2  A0,ADRIND      . RELATIVE SECTOR @D@@[[        AA  EG
)@@G@@   A0,PFTADR      . PLUS BASE OF ELEMENT  @E@@[[        SA,H2  A0,ADRINDEH
)@@G@@      . STASH ABS ADDR OF THIS ENTRY@A@@[[        SA     A0,IODADR      EI
)@@G@@.     @G@@[[        READ   IOPKT,AD0900 -1,(+28,BUFF)    . GET SECT TO BEJ
)@@G@@E ADDED TO  @D@@[[        LA     A3,ADBLOK      . GET ADDBLOCK POINTER  EK
)@@G@@@D@@[[        LA     A2,(+1,BUFF)   . POINTER TO BUFFER     @E@@[[      EL
)@@G@@  TZ,H1  ADRIND         . IN LOWER HALF OF SECTOR?    @B@@[[        AA,UEM
)@@G@@   A2,14          . NO, UPPER @A@@[[        LR,U   R1,14          .     EN
)@@G@@@B@@[[        BT     A2,0,*A3       . MOVE ENTRY@D@@[[        WRITE  IOPEO
)@@G@@KT,AD0900   . PUT OUT ENTRY ON DRUM @A@@[[. UPDATE NR OF ENTRIES IN CTRLEP
)@@G@@ SECT @E@@[[AD0110  READ   IOPKT,AD0900 *PFTADR     . RECOVER CTL SECT  EQ
)@@G@@@C@@[[        LA,H2  A0,BUFF        . OLD ENTRY COUNT @B@@[[        AA,UER
)@@G@@   A0,1           . BUMP IT   @B@@[[        SA,H2  A0,BUFF        . SAVEES
)@@G@@ NEW  @D@@[[        WRITE  IOPKT,AD0900   . AND REPLACE ON DRUM   @C@@[[ET
)@@G@@        LA     A0,ADRIND . RECOVER DRUM INDEX   @#@@[[. NORMAL EXIT     EU
)@@G@@@A@@[[AD0200  LX     X11,ADLINK     .     @A@@[[        J      1,X11    EV
)@@G@@      .     @#@@[[. I/O ERROR EXIT  @A@@[[AD0900  LX     X11,ADLINK     EW
)@@G@@.     @ @@[[        J      0,X11     .    @[@@[[.     @ @@[[ADLINK  EQUFEX
)@@G@@   $,,H1     .    @ @@[[ADXFLG  EQUF   $,,H2     .    @ @@[[        RES EY
)@@G@@   1         .    @ @@[[ADRIND  RES    1         .    @F@@[[ADBLOK  +1,$EZ
)@@G@@-$           . CTL WD TO BLOCK XFER INITIAL ENTRY DATA@F@@[[/. SUBROUTINFA
)@@G@@E TO MAKE A COPY OF THE CURRENT ACCOUNTING ELEMENT    @G@@[[.  ENTER WITFB
)@@G@@H A0= SUM OF : 1=DELETE LOCKED OUT NOS , 2=EXPAND BY 1 TRACK@G@@[[. WE AFC
)@@G@@SSUME THAT PFS OF OLD COPY HAS BEEN DONE AND PACKET REFLECTS THIS @G@@[[FD
)@@G@@.     'LOCKED OUT' NOS ARE ALWAYS SHIFTED TO END OF ELEMENT. TECHNIQUE  FE
)@@G@@@G@@[[. IS TO USE 2 OUTPUT AREAS AND WRITE THE ELEMENT FROM BOTH ENDS TOFF
)@@G@@WARD  @G@@[[. THE MIDDLE.  AT ENTRY WE ASSUME FILE HAS BEEN LOCKED AT PFFG
)@@G@@S$ TIME.    @[@@[[.     @D@@[[BUFMAX   EQU   448       . MAX BUFFER SPACFH
)@@G@@E (WORDS)   @E@@[[BUFHAF  EQU    BUFMAX/2  . USE HALF OF IT FOR INPUT BUFI
)@@G@@FFER  @D@@[[AYISIZ  EQU    BUFHAF/28 . INPUT BUF SIZE (SECTORS)   @F@@[[FJ
)@@G@@AYOSIZ  EQU    AYISIZ/2  . OUTPUT BUFS ARE HALF AS BIG AS INPUT   @[@@[[FK
)@@G@@.     @B@@[[AYIBUF  EQU    BUFF      . INPUT BUFFER   @D@@[[AYLBUF  EQU FL
)@@G@@   AYIBUF+28*AYISIZ    . LO-ORDER OUTPUT  @E@@[[AYHBUF  EQU    AYLBUF+28FM
)@@G@@*AYOSIZ    . HI-ORDER OUTPUT BUFFER @[@@[[.     @#@@[[        MASTER .  FN
)@@G@@@ @@[[ACCOPY  SX     X11,AYLINK     @G@@[[        SAVER  X2,AYREGS,3 A4,FO
)@@G@@AYREGS+3,3 A13,AYREGS+6,3 R2,AYREGS+9,1   @D@@[[        SZ     AYDFLG   FP
)@@G@@ . CLEAR LOCKOUT DELETE FLAG  @C@@[[        TEP,U  A0,1      . IS DELETIFQ
)@@G@@ON BIT OFF? @D@@[[        SA     A0,AYDFLG . NO, TURN DELETE FLAG ON    FR
)@@G@@@D@@[[        LA,U   A1,0      . SET SECTOR EXPANSION OFF   @D@@[[      FS
)@@G@@  TEP,U  A0,2      . SHOULD WE ADD A TRACK?     @D@@[[        LA,U   A1,FT
)@@G@@64     . YES, EXPAND BY 64 SECTORS  @C@@[[        SA     A1,AYXVAL . SAVFU
)@@G@@E EXPANSION VALUE @D@@[[        LA     A0,PFTSIZ . SIZE OF CURRENT ELEMEFV
)@@G@@NT    @C@@[[        LA     A1,PFTADR . AND ITS BASE ADDR    @B@@[[      FW
)@@G@@  DS     A0,AYOLDE . TEMP SAVE THEM @ @@[[        LA,U   A0,PFPKT  .    FX
)@@G@@@E@@[[        ER     PFWL$     . FIND OUT WHERE NEW COPY SHOOLD GO@ @@[[FY
)@@G@@       JNZ     A2,AY0900 .    @G@@[[        DSL    A1,DPREP       . DIVIFZ
)@@G@@DE BY DISK PREP CONSTANT, IF ANY    @D@@[[        TZ     A2             GA
)@@G@@. ALREADY ON A BOUNDARY?@E@@[[        AA,U   A1,1           . NO, FORCE GB
)@@G@@UP TO START ON ONE@D@@[[        LSSL   A1,DPREP       . REALIGN FUDGED AGC
)@@G@@DDRESS@E@@[[        SA     A1,PFTADR . POST WRITE ADDR IN PF PACKET     GD
)@@G@@@[@@[[.     @D@@[[. SET UP INBUF POINTERS: X2=CORE, A4=DRUM, A13=COUNT  GE
)@@G@@@D@@[[AY0010  LA     A4,AYOLDA . GET DRUM ADDR OF OLD COPY  @G@@[[      GF
)@@G@@  AA,U   A4,1           . BUMP PAST CTRL SECT= NEXT READ ADDR     @D@@[[GG
)@@G@@        LA,U   A13,0          . MARK INPUT BUF EMPTY  @F@@[[        LXI,GH
)@@G@@U  X2,1           . SET INCR (BUF FILL WILL SET ADDR) @G@@[[. SET UP LOWGI
)@@G@@BUF POINTERS: X3=CORE , A5=DRUM ADR A14=BUF CT A2=TOTAL CT  @G@@[[AY0020GJ
)@@G@@ LX,U    X3,AYLBUF      . ALWAYS START STASHING AT ITS ORIGIN     @A@@[[GK
)@@G@@       LXI,U   X3,1           .     @F@@[[       LA      A5,PFTADR      GL
)@@G@@. START WRITING AT START OF ELEMENT @D@@[[       AA,U    A5,1           GM
)@@G@@. PLUS ROOM FOR CTL SECT@E@@[[       LA,U    A14,2*AYOSIZ-1 . SET NO ENTGN
)@@G@@RIES TO BE FILLED @E@@[[       LA,U    A2,0           . CLEAR ACTIVE ENTGO
)@@G@@RY COUNTER  @G@@[[. SET UP HI-BUF . NOTE THAT HI-BUF WILL NOT, IN GENERAGP
)@@G@@L BE TOTALLY FULL,@F@@[[. SO WE MUST FIND POSN IN BUF WHERE LAST ENTRY SGQ
)@@G@@HOULD BE WRITTEN  @G@@[[. REG USAGE IS : X4=CORE, A6=DRUM, A15=BUF CNT, GR
)@@G@@ A3= TOT NO ENTRIES     @G@@[[AY0030 READ    IOPKT,AY0900 *AYOLDA,(+28,BGS
)@@G@@UFF)    . GET CURRENT CTL SECT@E@@[[       LA,H2   A0,BUFF   . GET NO ENGT
)@@G@@TRIES FROM CTL SECT     @E@@[[       LR      R2,A0     . INITIALIZE TOTAGU
)@@G@@L ENTRIES COUNTER @A@@[[       DSL     A0,36     . ALIGN    @F@@[[      GV
)@@G@@ DI,U    A0,2*AYOSIZ    . NUM ENTRIES% ENTRIES PER BUFFER   @E@@[[      GW
)@@G@@ TNZ     A1        . WILL LAST BUF BE PARTIALLY USED? @E@@[[       LA,U GX
)@@G@@   A1,2*AYOSIZ    . NO. POST AS A FILLED BUF    @F@@[[       TNE,U   A1,GY
)@@G@@2*AYOSIZ    . IS LAST BUF NOW MARKED FILLED?    @G@@[[       ANA,U   A0,GZ
)@@G@@1           . YES, COMPENSATE NO BUTS WHICH PRECEDE IT@G@@[[       LA   HA
)@@G@@   A15,A1         . SET NO OF ENTRIES TO USE IN LAST BUF    @E@@[[      HB
)@@G@@  ANA,U  A15,1     . LESS 1 FOR JGD AT END OF LOOP    @G@@[[       MSI,UHC
)@@G@@   A0,AYOSIZ      . NUMBER OF PRECEDING BUFS TIMES SECTS/BUF@F@@[[      HD
)@@G@@ LA,U    A6,1,A0        . PLUS 1 FOR CTL SECT= SECTOR OFFSET@G@@[[      HE
)@@G@@ AA      A6,PFTADR      . PLUS STARTADR= DRUM ADDR OF LAST BUF    @G@@[[HF
)@@G@@       MSI,U   A1,14          . NO ENTRIES IN LAST BUF TIMESWDS/ENTRY   HG
)@@G@@@G@@[[       LX,U    X4,AYHBUF-14,A1     . POST CORE ADDR OF 1ST ENTRY THH
)@@G@@O USE @^@@[[       LXI,U   X4,1     @E@@[[       LA,U    A3,0           HI
)@@G@@. CLEAR LOCKED OUT COUNTER    @^@@[[. GET NEXT INPUT ENTRY -@E@@[[AY0200HJ
)@@G@@  JNGD   R2,AY0300 . IF INPUT EXHAUSTED, GO CLEAN UP  @G@@[[        JGD HK
)@@G@@   A13,AY0210     . IF INBUF NON-EMPTY, GO CHECK NEXT ENTRY @G@@[[      HL
)@@G@@  SA     A4,IODADR . ELSE POST CURRENT DRUM ADDRESS IN PACKET     @G@@[[HM
)@@G@@        AA,U   A4,AYISIZ . BUMP FOR NEXT TIME THRU BY SIZE IN SECTS     HN
)@@G@@@G@@[[        READ   IOPKT,AY0900 -1,(28*AYISIZ,AYIBUF) . FILL INPUT BUFHO
)@@G@@FER   @G@@[[        LX     X2,(+1,AYIBUF) .    RESTORE POINTER TO 1ST ENHP
)@@G@@TRY IN BUF  @F@@[[        LA,U   A13,2*AYISIZ-1      . RESET NO ENTRIES HQ
)@@G@@IN INPUT BUF@A@@[[. EXAMINE CURRENT ENTRY FOR ITS TYPE@E@@[[AY0210  LR,UHR
)@@G@@   R1,14     . SET WORDCT FOR MOVEMENT OF ENTRY @D@@[[        LA     A0,HS
)@@G@@11,X2       . GET PERMISSIONS WORD? @D@@[[        TOP,U  A0,4      . IS HT
)@@G@@THIS USER SIGNED ON?    @D@@[[        TOP,U  A0,2      . FLAGGED TO BE LHU
)@@G@@OCKED OUT?  @F@@[[        J      AY0220    . NO, GO PUT ACTIVE ENTRY IN HV
)@@G@@LOW BUF     @E@@[[        DL     A0,0,X2   . YES, GET LIBNO OF THIS ENTRHW
)@@G@@Y     @C@@[[        DTE    A0,RCLIBN . IS IT MY OWN LIBNO?  @E@@[[      HX
)@@G@@  J      AY0230    . NO, LOCK OUT OTHERS WITH IMPUNITY@F@@[[        LA,SHY
)@@G@@6   A0,11,X2 . EGAD YES.. GET PERMISSIONF FLAGS BACK  @C@@[[        ANA,HZ
)@@G@@U  A0,2      . TURN OFF LOCKOUT FLAG@F@@[[        SA,S6  A0,11,X2  . ANDIA
)@@G@@ INSURE WE DON'T COMMIT SUICIDE     @A@@[[. ACTIVE ENTRY, PUT IN LO-ORDEIB
)@@G@@R BUF @A@@[[AY0220  BT     X3,0,*X2  . SPLAT    @F@@[[        AA,U   A2,IC
)@@G@@1      . INCREMENT TOTALIZER FOR ACTIVE ENTRIES @G@@[[        JGD    A14ID
)@@G@@,AY0200     . IF OUTBUF NOT FULL, GO GET NEXT ENTRY   @C@@[[        SA  IE
)@@G@@   A5,IODADR . ELSE POST DRUM ADDR  @D@@[[        AA,U   A5,AYOSIZ . BUMIF
)@@G@@P FOR NEXT TIME THRU    @F@@[[        WRITE  IOPKT,AY0900 -1,(28*AYOSIZ,IG
)@@G@@AYLBUF) . OUTPUT THE BUF@C@@[[        LXM,U  X3,AYLBUF . RESET CORE PTR IH
)@@G@@TO BUF@F@@[[        LA,U   A14,2*AYOSIZ-1 . RESET ENTRY COUNTER FOR THISII
)@@G@@ BUF  @E@@[[        J      AY0200    . AND GO PROCESS NEXT INPUT ENTRY  IJ
)@@G@@@B@@[[. LOCKED OUT ENTRY, PUT IN HI-ORDER BUF   @A@@[[AY0230  BT     X4,IK
)@@G@@0,*X2  . SPLAT    @F@@[[        AA,U   A3,1      . INCREMENT COUNT OF LOIL
)@@G@@CKED OUT ENTRIES  @G@@[[        ANX,U  X4,2*14   . ADJUST XREG BECAUSE WIM
)@@G@@E'RE MOVING BACKWARDS   @F@@[[        JGD    A15,AY0200     . IF BUF NOTIN
)@@G@@ FULL, GO DO NEXT INPUT @C@@[[        SA     A6,IODADR . POST OUTPUT DRUIO
)@@G@@M ADDR@F@@[[        WRITE  IOPKT,AY0900 -1,(28*AYOSIZ,AYHBUF) . OUTPUT TIP
)@@G@@HE BUF@F@@[[        ANA,U  A6,AYOSIZ . COMPENSATE FOR WRITING BACK TO FRIQ
)@@G@@ONT   @E@@[[        LXM,U  X4,AYHBUF+28*AYOSIZ-14   . RESET CORE ADDR   IR
)@@G@@@D@@[[        LA,U   A15,2*AYOSIZ-1 . RESET ENTRY COUNTER   @A@@[[      IS
)@@G@@  J      AY0200         .     @[@@[[.     @D@@[[. ALL INPUT PROCESSED - IT
)@@G@@WRITE MIDDLE RECORD (IF ANY)  @[@@[[.     @F@@[[AY0300  TE     A5,A6    IU
)@@G@@ . DO BOTH BUFS POINT TO SAME DRUM ADDR?  @F@@[[        J      AY0310   IV
)@@G@@ . NO- LAST BUF HAS FALLEN OUT ALREADY    @F@@[[        LA,U   A0,2*AYOSIW
)@@G@@IZ-1  . ORIGINAL SIZE COUNTER FOR LOWBUF  @F@@[[        ANA    A0,A14   IX
)@@G@@ . LESS NO REMAINING GIVES NO OF ENTRIES  @F@@[[        MSI,U  A0,14    IY
)@@G@@ . ENTRIES TIMES SIZE = NO WDS IN LOW-BUF @C@@[[        LR     R1,A0    IZ
)@@G@@ . USE AS MOVE COUNT    @D@@[[        LXM,U  X3,AYLBUF . MOVE FROM STARTJA
)@@G@@ OF LOW BUF @C@@[[        LXM,U  X4,AYHBUF . TO START OF HIGH BUF @E@@[[JB
)@@G@@        BT     X4,0,*X3  . COMBINE REMAINDER INTO ONE BUF   @B@@[[      JC
)@@G@@  SA     A5,IODADR . POST DRUM ADDR @G@@[[        WRITE  IOPKT,AY0900 -1JD
)@@G@@,(28*AYOSIZ,AYHBUF) . AND OUTPUT LAST BUF @B@@[[. NOW INSERT NEW ELEMENTJE
)@@G@@ IN THE FILE -    @G@@[[AY0310 READ    IOPKT,AY0900 *AYOLDA,(+28,BUFF)  JF
)@@G@@  . RECOVER OLD SECTOR 0@E@@[[       AA      A3,A2     . COMPUTE TOTAL EJG
)@@G@@NTRIES WRITTEN    @B@@[[       TE,H2   A3,BUFF   . IS IT CORRECT? @A@@[[JH
)@@G@@       ER      ERR$      . OOPS     @G@@[[        TZ     AYDFLG    . YESJI
)@@G@@- SHOULD LOCKED OUT ENTRIES BE PURGED?    @G@@[[       SA,H2   A2,BUFF  JJ
)@@G@@ . YES, RESET ENTRY COUNT TO ACTIVE ENTRIES ONLY@F@@[[        MSI,U  A3,JK
)@@G@@14          . ENTRIES (HALFSECTORS) TO WORDS    @C@@[[        AA,U   A3,JL
)@@G@@28          . PLUS SECTOR ZERO@F@@[[        SA     A3,AYOLDS      . SAVEJM
)@@G@@ OLD SIZE IN WORDS FOR LATER  @G@@[[        WRITE  IOPKT,AY0900 *PFTADR JN
)@@G@@    . WRITE CTL SECT OF NEW COPY    @B@@[[       LA,H2   A0,BUFF   . GETJO
)@@G@@ ENTRY COUNT@A@@[[        AA,U   A0,1      . ROUND UP @D@@[[        SSL JP
)@@G@@   A0,1      . OVER 2 GIVES SECTORS USED  @F@@[[       AA,U    A0,1+63  JQ
)@@G@@ . PLUS SECTOR ZERO AND ROUNDUP VALUE     @C@@[[       AA      A0,AYXVALJR
)@@G@@ . PLUS EXPANSION FACTOR@D@@[[       SSL     A0,6      . DIV BY 64 GIVINJS
)@@G@@G TRACKS    @G@@[[       LSSL    A0,6      . CONVERT ELEMENT LENGTH BACKJT
)@@G@@ INTO SECTORS     @G@@[[       SA      A0,PFTSIZ . POST ELEMENT SIZE IN JU
)@@G@@SECTORS TO PF PACKET    @E@@[[       PFINEW            . INSERT NEW ELEMJV
)@@G@@ENT, DELETE OLD   @C@@[[. NOW CLEAR OLD ELEMENT TO ZEROES (TEMP KLUDGE) JW
)@@G@@@D@@[[AY0320 DL      A0,AYOLDE . GET OLD ELEMENT PARAMATERS @D@@[[      JX
)@@G@@ SA      A1,IODADR . TEXT ADDRESS TO I/0 PACKET @D@@[[       MSI,U A0,28JY
)@@G@@       . CONVERT SECTORS TO WORDS   @F@@[[        TG     A0,AYOLDS      JZ
)@@G@@. IS OLD ENTRY LARGER THAN THIS?    @G@@[[        LA     A0,AYOLDS      KA
)@@G@@. NO, BE CONSERVATIVE AND USE SMALLER VAL @D@@[[       LSSL  A0,18      KB
)@@G@@ . WORD COUNT TO INCREMENT    @G@@[[       OR    A0,(+0600000,BUFF)    .KC
)@@G@@ ACCESS WD SAYS NO INCREMENTATION   @A@@[[       SA    A1,IOACWD   . POSKD
)@@G@@T IT  @E@@[[       SZ    BUFF        . CLEAR DATA WORD TO BE XFERRED    KE
)@@G@@@D@@[[        WRITE  IOPKT,AY0900   . TRASH ON OLD COPY     @C@@[[AY0500KF
)@@G@@  LX     X11,AYLINK     . RECOVER LINKAGE @G@@[[        LOADR  X2,AYREGSKG
)@@G@@,3 A4,AYREGS+3,3 A13,AYREGS+6,3 R2,AYREGS+9,1   @C@@[[        J      1,XKH
)@@G@@11     . TAKE NORMAL EXIT     @[@@[[.     @G@@[[. ERROR EXIT-- NOTE THISKI
)@@G@@ IS QUIET, AS CALLER MUST HANDLE I/O ERRORS     @[@@[[.     @A@@[[AY0900KJ
)@@G@@  LX     X11,AYLINK     .     @G@@[[        LOADR  X2,AYREGS,3 A4,AYREGSKK
)@@G@@+3,3 A13,AYREGS+6,3 R2,AYREGS+9,1   @B@@[[        J      0,X11     . ERRKL
)@@G@@OR EXIT     @[@@[[.     @D@@[[AYXVAL  RES    1         . EXPANSION VALUEKM
)@@G@@ (0 OR 64)  @G@@[[AYDFLG  EQUF   $,,S2     . DELETE FLAG, ON IF LOCKED OKN
)@@G@@UTS ARE TO GO AWAY@ @@[[AYLINK  EQUF   $,,H2     .    @ @@[[        RES KO
)@@G@@   1         .    @D@@[[AYOLDE  RES    2         . DESCRIPTION OF OLD ELKP
)@@G@@EMENT @D@@[[AYOLDA  EQU    AYOLDE+1  . DRUM ADDR OF OLD ELEMENT   @G@@[[KQ
)@@G@@AYOLDS  EQUF   $,,H1          . SIZE OF OLD EL COMPUTED FROM ENT COUNT  KR
)@@G@@@A@@[[        RES    1              .     @G@@[[AYREGS  RES    10       KS
)@@G@@ . SAVE OF MAJOR REGS WHICH WE HAVE NEED OF     @A@@[[/. EXECUTION OF THKT
)@@G@@E )HI COMMAND     @C@@[[. X5 POINTS TO THE WORD CONTAINING THE ')HI'    KU
)@@G@@@G@@[[. AS THESE CHARACTERS ARE NOT WANTED, ALL NON-BLANK CHARS ARE SKIPKV
)@@G@@PED   @C@@[[. UNTIL THE FIRST BLANK IS FOUND (OR AN EOL)    @ @@[[. LEADKW
)@@G@@ING BLANX ARE IGNORED   @A@@[[        MASTER                 .    @A@@[[KX
)@@G@@AHICMD* SX     X11,HILINK      .    @D@@[[        LOCK   IOPKT,0 1791,(+KY
)@@G@@28,BUFF) . LOCK THE FILE@E@@[[        READ   IOPKT,0 *PFTADR . READ IN CKZ
)@@G@@ONTROL SECTOR     @G@@[[        LA,U   A13,91          . MAX # CHARS (MILA
)@@G@@NUS 1) IN WORDS 5-27    @C@@[[AH0080  LMJ    X4,0,X4         . GET NEXT LB
)@@G@@CHAR  @D@@[[        JE,U   A1,AEOL AH0210  . NORMAL EXIT FROM LOOP@E@@[[LC
)@@G@@        JNE,U  A1,ASPACE AH0080 . SKIP WHAT MIGHT BE )HI    @C@@[[AH0090LD
)@@G@@  LMJ    X4,0,X4         . GET NEXT CHAR  @E@@[[        JE,U   A1,ASPACELE
)@@G@@ AH0090 . IGNORE LEADING SPACES     @D@@[[AH0100  JE,U   A1,AEOL AH0210 LF
)@@G@@ . NORMAL EXIT FROM LOOP@F@@[[        JNGD   A13,AH0200      . ANY MORE LG
)@@G@@ROOM LEFT TO STORE?     @C@@[[        LMJ    X2,0,X2         . YES, STASLH
)@@G@@H IT  @C@@[[        LMJ    X4,0,X4         . GET NEXT CHAR  @F@@[[      LI
)@@G@@  J      AH0100          . AND BACK TO THE TOP OF THE LOOP  @A@@[[. NO RLJ
)@@G@@OOM EXIT, STORE AN EOL MARK   @E@@[[AH0200  SZ     A1              . ACCLK
)@@G@@OUNT FOR EXTRA DECREMENT@E@@[[        LA,U   A1,AEOL         . GET AN ENLL
)@@G@@D OF LINE FLAG    @A@@[[. END OF LINE DETECTED, STASH IT    @F@@[[AH0210LM
)@@G@@  LMJ    X2,0,X2         . MARK END OF MESSAGE WITH AN EOL  @E@@[[      LN
)@@G@@  SNA    A13,A13         . SUBTRACT CURRENT COUNT     @E@@[[        AA,ULO
)@@G@@   A13,91          . FROM 91 TO GET CHARS STORED@C@@[[        SA,Q1  A13LP
)@@G@@,BUFF        . AND STORE COUNT@D@@[[        WRITE  IOPKT,0         . REVLQ
)@@G@@ISE CONTROL SECTOR@C@@[[        UNLOCK IOPKT,0 1791    . RELEASE LOCK   LR
)@@G@@@C@@[[        LX     X11,HILINK      . RESTORE LINK   @C@@[[        J   LS
)@@G@@   0,X11           . AND GO HOME    @#@@[[HILINK  RES    1 .@D@@[[/. STOLT
)@@G@@RAGE FOR PARAMETERS NEEDED FOR DURATION OF RUN  @ @@[[       VARBLS     LU
)@@G@@       .    @[@@[[.     @E@@[[.      PACKET FOR PROGRAM FILE ER'S FOR ACLV
)@@G@@COUNT ELEMENT     @[@@[[.     @ @@[[PFPKT  'APL$FILE    '    .    @B@@[[LW
)@@G@@       'ACCOUNTING'      . ELEMENT NAME   @ @@[[       +     0          LX
)@@G@@ .    @A@@[[       +     5,0         . TYPE=REL @B@@[[       '0000000000LY
)@@G@@00'    . VERSION NAME   @C@@[[PFPADR +     0           . PREAMBLE ADDRESLZ
)@@G@@S     @D@@[[PFPSIZ EQUF  $,,H1       . PREAMBLE SIZE (SECTORS)    @C@@[[MA
)@@G@@PFTSIZ EQUF  $,,H2       . TEXT SIZE (SECTORS)  @A@@[[PFSIZW  $-$,$-$   MB
)@@G@@       . SIZE WORD@D@@[[PFTADR +$-$              . TEXT ADDR FOR PF$ PACMC
)@@G@@KET   @E@@[[PFTDAT +$-$              . TIME/DATE ELEMENT CREATED 0=NOW  MD
)@@G@@@[@@[[.     @E@@[[. I/O PACKET USED FOR NORMAL REFERENCES (READING/UPDATME
)@@G@@ING)  @[@@[[.     @^@@[[IOPKT  'APL$FILE    '   @ @@[[       +     0    MF
)@@G@@       .    @B@@[[IOSTAT  EQUF   $,,S1     . I/O STATUS     @ @@[[IOFUNCMG
)@@G@@ EQUF  $,,S2       .    @A@@[[       +     $-$,0,0     . FUNCTION @B@@[[MH
)@@G@@IOACWD +     $-$,BUFF    . ACCESS WORD    @C@@[[IOBADR  EQUF   IOACWD,,HMI
)@@G@@2     . CORE BUFFER ADDR@B@@[[IODADR +     $-$         . DRUM ADDRESS   MJ
)@@G@@@#@@[[. TEMP KLUDGES    @ @@[[TXTSIZ  EQU    PFPKT+9   .    @ @@[[TXTADDMK
)@@G@@  EQU    TXTSIZ+1  .    @ @@[[TDATE   EQU    TXTADD+1  .    @G@@[[DRUMADML
)@@G@@  +0                    . DRUM ADDR OF THI S USER'S ACCNT DATA    @F@@[[MM
)@@G@@NRENT   +0                    . NO OF ENTRIES IN ACCOUNT LEMENT   @ _@@@MN
)@@G@@       END               .    ___NE,U  A1,ASPACE AH0080 . SKIP WHAT MIGHMO
)@@G@@T BE )HI    @C@@[[AH0090  LMJ    X4,0,X4         . GET NEXT CHAR  @E@@[[MP
)@@G@@        JE,U   A1,ASPACE AH0090 . IGNORE LEADING*[S@@@*SDFF*@G@@@@. ****MQ
)@@G@@***************************************************************** @G@@@@MR
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * MS
)@@G@@@G@@@@.                                                                 MT
)@@G@@    * @G@@@@       AXR$         .                                       MU
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        MV
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        MW
)@@G@@                      * @G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLSMX
)@@G@@                            * @G@@@@       WSDEF.      DEFINE WORKSPACE MY
)@@G@@                                  * @G@@@@WORKSP INFO  2 20.      SET ASMZ
)@@G@@IDE THE SPACE                           * @G@@@@       RUNCTL.     DEFINNA
)@@G@@E RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.NB
)@@G@@      AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCNC
)@@G@@K            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.     ND
)@@G@@                                                                * @G@@@@NE
)@@G@@. END OF STANDARD PROC BLOCK                                          * NF
)@@G@@@G@@@@. ****************************************************************NG
)@@G@@***** @[@@@@.     @B@@@@/. PARAMETERS USED IN ADDRESS MAPPING--   @[@@@@NH
)@@G@@.     @G@@@@.     FOR EACH SUBSCRIPT, 6 WORDS ARE USED TO COMPUTE THE APNI
)@@G@@PROPRIATE   @G@@@@. SUBSCRIPTS AND THE OFFSET PAST THE BASE ELEMENT OF TNJ
)@@G@@HE ARRAY. FIVE    @G@@@@. DISTINCT TAGS ARE USED SO THAT X8 CAN BE SET TNK
)@@G@@O THE SUBSCRIPT NUMBER  @G@@@@. (STARTING FROM ZERO).  SINCE MAPPING IS NL
)@@G@@ALWAYS OFFSET PAST THE START  @E@@@@. OF THE ARRAY,  THE PARAMETERS ARE NM
)@@G@@ALL STORED AS 0-ORIGIN. @[@@@@.     @^@@@@. THEIR DEFINITIONS ARE:@G@@@@NN
)@@G@@.     AMCLNK   LINKS TO ROUTINE TO CALCULATE NEXT VALUE OF THIS SUBSCR. NO
)@@G@@@G@@@@.              THE ROUTINE MAY FETCH FROM AN EXPRESSION (AS IN INDNP
)@@G@@EXING)@G@@@@.              OR MAY EXPLICITLY CALCULATE THE INDEX. THE RINQ
)@@G@@GHTARG REGS @G@@@@.              (X6,X7,A4,A5 AND A15) ARE USED FOR THISNR
)@@G@@. LOADED IN X6    @[@@@@.     @F@@@@.     AMCOUN   COUNT VALUE(S) USED TNS
)@@G@@O TELL WHEN ALL VALUES OF THIS@F@@@@.              INDEX HAVE BEEN CYCLENT
)@@G@@D THROUGH, AND IT SHOULD BE   @ @@@@.              REINITIALIZED  @[@@@@NU
)@@G@@.     @G@@@@.     AMPARM   PARAMETERS USED IN CHECKING THE SUBSCRIPT ANDNV
)@@G@@ COMPUTING  @G@@@@.              THE MAP VALUE. I.E. MULTIPLIER (TO COMPNW
)@@G@@UTE OFFSET) AND   @G@@@@.              MAX VAL WHICH THE SUBSCR MAY HAVENX
)@@G@@ (FOR DIM CHECKING)     @[@@@@.     @[@@@@.     @G@@@@.     AMDATA   DATNY
)@@G@@A WORD  USED TO POINT TO DATA ADDRESS (IF SUBSCR EXPR @G@@@@.           NZ
)@@G@@   IS AN APL VARIABLE) OR TEMP STORAGE (IF ELIDED INDEX).   @G@@@@.     OA
)@@G@@         THIS IS LOADED (AS A FULLWORD) INTO X7- I.E. H1 IS INCR  @[@@@@OB
)@@G@@.     @G@[@@.     AMDWDI   ANOTHER DATA LINK WORD-- H1=DATA ADDR,  H2=DEOC
)@@G@@SCR ADDR OF @G@@[[.     AMDWD2   ANOTHER DATA LINK WORD-- H1=DATA ADDR, OD
)@@G@@H2=DESCR ADDR OF  @E[@@@.              SUBSCR EXPR (FOR ERASURE) OR ZEROOE
)@@G@@ (IF ELIDED)@[@@@@.     @G@@@@.     AMCVAL   CURRENT VALUE OF THE PARTICOF
)@@G@@ULAR SUBSCRIPT (0-ORIGIN)     @[@@@@.     @G@@@@. NOTICE THAT ALL OF THEOG
)@@G@@ ABOVE PARAMETERS ARE POINTERS USED TO COMPUTE  @G@@@@. THE VALUES OF THOH
)@@G@@E PARTICULAR SUBSCRIPT, AND DO NOT DEPEND ON THE ARRAY@ @@@@. WHICH IS BOI
)@@G@@EING INDEXED INTO @[@@@@.     @C@@@@AMLCUR EQUF  AMCLNK,X8,H2     . CURROJ
)@@G@@ENT LINK    @C@@@@AMLINI EQUF  AMCLNK,X8,H1     . INITIAL LINK    @G@@@@OK
)@@G@@AMCCUR EQUF  AMCOUN,X8,H2     . CURRENT COUNT (NO ELS REMAINING TO GET) OL
)@@G@@@G@@@@AMCINI EQUF  AMCOUN,X8,H1     . INITIAL COUNT (TOT NO ELS TO GET LOM
)@@G@@ESS 1)@E@@@@AMDCUR EQUF  AMDATA,X8,H2     . CURRENT DATA WORD POINTER   ON
)@@G@@@E@@@@AMDINC EQUF  AMDATA,X8,H1     . INCR FOR DATA WORD POINTER  @ @@[[OO
)@@G@@AMPNTR EQUF  AMDATA,X8   .    @G@@@@AMDINI EQUF  AMDWD2,X8,H1     . INITOP
)@@G@@IAL VALUE OF DATA WORD (MODIFIER)   @G@@@@AMDESC EQUF  AMDWD2,X8,H2     OQ
)@@G@@. DESCRIPTOR ADDR (FOR ERASURE) OR ZERO   @ @@[[AMPTR2 EQUF  AMDWD2,X8  OR
)@@G@@ .    @G@@@@AMWGHT EQUF  AMPARM,X8,H1     . MULTIPLIER (WEIGHT) FOR THISOS
)@@G@@ SUBSCR     @F@@@@AMRANG EQUF  AMPARM,X8,H2     . MAX VAL (0-ORG) FOR THOT
)@@G@@IS SUBSCR+1 @E@@@@AMVALU EQUF  AMCVAL,X8,XH2    . CURRENT VALUE OF THIS OU
)@@G@@SUBSCR@F@@@@/. INITIALIZE TO PIK/PUT ARRAY THROUGH USE OF THE ADDRESS MAOV
)@@G@@P     @G@@@@. THIS ROUTINE DECODES THE ARG VARIABLE, INITIALIZES THE STOOW
)@@G@@RAGE MAP    @G@@@@. ARRAYS, AND SETS THE LINK REGISTERS (X2,3 OR X6,7) SOX
)@@G@@O THAT ELEMENTS   @F@@@@. OF THE ARRAY WILL BE FETCHED (STORED) IN THE OOY
)@@G@@RDER DETERMINED BY@F@@@@. THE MAP BY LMJ'ING ON THE APPROPRIATE LINK REGOZ
)@@G@@.  THUS, OUTSIDE  @F@@@@. THIS ROUTINE, ACCESS TO THE ELEMENTS OF THE ARPA
)@@G@@RAY IS ACHIEVED IN@F@@@@. THE SAME FASHION AS IF IT WERE BEING LINEARLY PB
)@@G@@ADDRESSED, I.E. BY@F@@@@. USING THE PUT OR PICK REGS TO FETCH SINGLE ELEPC
)@@G@@MENTS IN ORDER    @[@@@@.     @#@@@@       INSTRS  .  @[@@@@.     @B@@@@PD
)@@G@@. ENTRY POINTS FOR FETCHING UNDER MAP     @[@@@@.     @ @@@@PIKMAP* SX  PE
)@@G@@ X11,PMLINK  .    @A@@@@       VERIFY PM0900,,PM0920  .     @ @@@@      PF
)@@G@@ J     PM0010      .    @C@@@@. ENTER HERE IF ARG HAS ALREADY BEEN DECODPG
)@@G@@ED    @ @@@@PIKMAQ* SX   X11,PMLINK  .    @F@@@@PM0010 LX,U  X11,PIKTBL PH
)@@G@@ . ESTABLISH TABLE ADDR FOR FETCH RTNES   @F@@@@       J     PM0100     PI
)@@G@@ . GO SAVE PARAMS AND SET UP ADDRESS MAP  @[@@@@.     @B@@@@. ENTRIES FOPJ
)@@G@@R STORING UNDER MAP FUNCTION  @[@@@@.     @ @@@@PUTMAP* SX   X11,PMLINK PK
)@@G@@ .    @A@@@@       VERIFY PM0900,,PM0920  .     @ @@@@       J     PM002PL
)@@G@@0      .    @ @@@@PUTMAQ* SX   X11,PMLINK  .    @G@@@@PM0020 LX,U  X11,PPM
)@@G@@UTTBL  . SET TABLE TO USE TO LOCATE ELEMENT RTNES     @G@@@@       JZ   PN
)@@G@@ A4,PM0910   . IF SCALAR, CANNOT STORE INTO IT- RANK ERROR  @[@@@@.     PO
)@@G@@@A@@@@. EXAMINE DIMS AND SET UP ADDR MAP  @D@@@@PM0100 SAVER A2,PMTYPE,6PP
)@@G@@ . SAVE DECODED ARG PARAMS    @A@@[[       SX    X8,PMX8ST   . SAVE X8  PQ
)@@G@@@ @@[[       SA    A4,RESRNK   .    @ @@[[       SA    A5,RESLNT   .    PR
)@@G@@@D@@[[       SAVER A0,RITDAD,8 . SAVE IN RIGHT ORG HOLD AREA@E@[@@      PS
)@@G@@ JG,U  A4,2 PM0130 . IF ARRAY, GO SET UP DIRECTLY     @E@@[[       JNG,UPT
)@@G@@ A4,2 PM0130 . IF ARRAY, GO SET UP DIRECTLY     @D[@@@. FOR SCALARS AND PU
)@@G@@VECTORS, SET UP A DUMMY DIMVECT     @G@@@@PM0110 SA,H1 A5,PMDDMY   . LENPV
)@@G@@GTH OF DATUM IS 1ST (DUMMY) DIMENSION     @F@@@@       JNZ   A4,PM0120  PW
)@@G@@ . IF VECTOR, GO POST DUMMY DIM DATA ADDR @E@@@@       DL    A0,0,A0    PX
)@@G@@ . ELSE GET DATA VALUE OF SCALAR    @C@@@@       TNE,U A3,ZMOHFI   . IS PY
)@@G@@DATUM HALFINT?    @G@@@@       LDSL  A0,18       . YES, ALIGN DATA VAL SPZ
)@@G@@O SCALAR LOOKS LIKE VECT@D@@@@       DS    A0,PMDATA   . SAVE COPY OF SCQA
)@@G@@ALAR DATUM  @F@@@@       LA,U  A0,PMDATA   . ADJUST DATA ADDR SO WE'LL SQB
)@@G@@EE THE COPY @G@@@@       LA,U  A4,1        . FAKE VECTOR RANK TO LOOP OVQC
)@@G@@ER SUBSCRIPTS     @E@@@@PM0120 LA,U  A1,PMDDMY   . SET DUMMY ADDR OF DIMQD
)@@G@@ENSION DATA @F@@@@PM0130 DS    A0,PMOPRP   . SAVE OPERAND DATA AND DIM DQE
)@@G@@ATA POINTERS@[@@@@.     @F@@@@. LOOP THRU SUBSCRIPTS AND POST INITIAL PAQF
)@@G@@RAMS IN ADDRESS MAP     @[@@@@.     @D@@@@PM0200 SAVER X6,PMXSAV,3 . TEMQG
)@@G@@P SAVE WORKING XREGS    @G@@@@       SA    A4,AMNSIG   . SET NO SIGNIFICQH
)@@G@@ANT (I.E. VARYING) COORDS=RANK@F@[@@       LX    X8,A4       . INITIALIZQI
)@@G@@E INDEX INTO MAP AT FAR RIGHT @C@@[[       LX    X8,(+1,0)   . INITIALIZQJ
)@@G@@E INDEX     @C@@[[       LR    R1,A4       . INITIALIZE COUNTER   @F[@@@QK
)@@G@@       LX,U  X7,0,A1     . SET DATA ADDR TO PICK UP DIM VALUES    @ @@@@QL
)@@G@@       LXI,U X7,1        .    @G@@@@       LX    X6,GRITBL+ZMOHFI . USE QM
)@@G@@RITEARG FETCH RTNES TO GET DIMS     @F@[@@       SZ    VBASE       . CLEQN
)@@G@@AR CONST TERM OF ACCESS POLYNOMIAL  @F@@[[       SZ    ABASE       . CLEQO
)@@G@@AR CONST TERM OF ACCESS POLYNOMIAL  @F[@@@       LA    A0,A5       . INIQP
)@@G@@T RUNNING WEIGHT TO TOTAL LENGTH    @G@@@@       LA,U  A2,JVECT    . GETQQ
)@@G@@ INITIAL ADDR TO USE TO COMPUTE DIMVAL    @G@[@@       LR,U  R1,1       QR
)@@G@@ . GET A ONE TO USE TO INITIALIZE COMPUTE INCR  @G@@][       LA,U  A13,1QS
)@@G@@       . GET A ONE TO USE TO INITIALIZE COMPUTE INCR  @D@@[[       LA   QT
)@@G@@ A14,WSIXOR  . USE FOR INITIAL DATA VALUE @E[@@@. NOW LOOP OVER THE DIMSQU
)@@G@@ AND INITIALIZE THE MAP PARAMETERS  @E@[@@PM0210 JNGD  X8,PM0220   . EXIQV
)@@G@@T WHEN ALL SUBSCRS ARE DONE   @E@@][PM0210 JNGD  R1,PM0220   . EXIT WHENQW
)@@G@@ ALL SUBSCRS ARE DONE   @G[@@@       SA    A2,AMLINI   . POST INITIAL LIQX
)@@G@@NK TO SUBSCR VAL COMPUTE RTNE @G@@@@       SZ    AMCCUR      . CLEAR CT QY
)@@G@@OF VALS LEFT TO FORCE INITIALIZATION@D@[@@       SR    R1,AMDINC   . SETQZ
)@@G@@ COMPUTATION INCR TO ONE@E@@][       SA    A13,AMDINC   . SET COMPUTATIORA
)@@G@@N INCR TO ONE     @D@[@@       SZ    AMDESC      . CLEAR DESCRIPTOR ERASRB
)@@G@@E FLAG@C@@[[       SZ    AMDESC      . CLEAR DESCR FLAG     @C@@[[      RC
)@@G@@ SA    A14,AMDINI  . INITIAL DATA VALUE   @E]@@@       LMJ   X6,0,X6    RD
)@@G@@ . FETCH DIM VALUE FROM DIM VECTOR  @E@@@@       SA    A5,AMRANG   . POSRE
)@@G@@T MAX RANGE OF THIS SUBSCR    @F@@@@       ANU,U A5,1        . DECREMENTRF
)@@G@@ FOR USE AS INITIAL COUNT     @D@@@@       SA    A6,AMCINI   . AND POST RG
)@@G@@INITIAL COUNT     @D@@@@       DSL   A0,36       . SET UP TO COMPUTE WEIRH
)@@G@@GHT   @C@@@@       TZ    A1          . IS THIS A NULL ARRAY?@F@@@@      RI
)@@G@@ DI    A0,A5       . NO-WGHT=MULTIPLIER DIV BY THIS DIM     @B@@@@      RJ
)@@G@@ SA    A0,AMWGHT   . SAVE THE WEIGHT@A@@[[       NOP   0,0,*X8     . BUMRK
)@@G@@P X8  @E@@@@       J     PM0210      . AND GO BACK FOR NEXT COORDINATE  RL
)@@G@@@E@@@@. MAP IS INITIALIZED- NOW SET UP LINKAGE TO GET/PUT RTNES   @C@@@@RM
)@@G@@PM0220 LOADR X6,PMXSAV,3 . RESTORE WORK REGS    @C@@@@       LA    A0,PMRN
)@@G@@MODE   . GET OPERAND MODE FLAG@G@@@@       AA,U  A0,0,X11    . PLUS TABLRO
)@@G@@E BASE GIVES POINTER TO GET/PUT RTNE@F@@@@       LA,U  A1,PUTTBL   . GETRP
)@@G@@ BASE ADDR OF STORE POINTER TABLE   @D@@@@       TE,U  A1,0,X11    . IS RQ
)@@G@@THIS A PUT OPERATION?   @C@@@@       J     PM0240      . NO, GO SET UP TRR
)@@G@@O GET @E@@@@. FOR PUT OPERATION, LINKAGE GOES IN X2 (NORMAL STASHREG)   RS
)@@G@@@F@@@@PM0230 LX    X2,0,A0     . GET RTNE ADDR FROM STASH POINTER TABLE RT
)@@G@@@C@[@@       LA    A13,PMLENG  . SET UP LENGTH, TOO   @C@@][       LA   RU
)@@G@@ A13,RESLNT  . SET UP LENGTH, TOO   @^[@@@       J     PM0300     @B@@@@RV
)@@G@@. FOR GET, USE RITEARG REGS (X6,7 AND A15)@ @@@@PM0240 LX    X6,0,A0    RW
)@@G@@ .    @ @[@@       LA    A15,PMLENG  .    @ @@][       LA    A15,RESLNT RX
)@@G@@ .    @E[@@@. NORMAL EXIT - REGS ARE SET UP FOR SEQUENTIAL FETCHING     RY
)@@G@@@ @@@@PM0300 LX    X11,PMLINK  .    @B@@[[       LX    X8,PMX8ST   . RESRZ
)@@G@@TORE X8     @ @@@@       J     1,X11       .    @#@@@@. ERROR EXITS     SA
)@@G@@@E@@@@PM0900 ERROR YSYNTA,PM0990    . STAKMARK DURING ARG POP     @E@@@@SB
)@@G@@PM0910 ERROR YINDEX,PM0990    . TRYING TO SUBSCRIPT A SCALAR@E@@@@PM0920SC
)@@G@@ ERROR YVALUE,PM0990    . TRYING TO SUBSCRIPT A NIL   @[@@@@.     @A@@@@SD
)@@G@@PM0990 LX    X11,PMLINK       .     @B@@[[       LX    X8,PMX8ST   . RESSE
)@@G@@TORE X8     @A@@@@       J     0,X11            .     @#@@@@       VARBLSF
)@@G@@S  .  @A@@@@PMLINK EQUF  $,,H1            .     @A@@@@       RES   1    SG
)@@G@@            .     @ @@@@. DECODED OPERAND PARAMETERS--@ @@@@PMTYPE* RES SH
)@@G@@ 1           .    @ @@@@PMMODE* RES  1           .    @ @@@@PMRANK* RES SI
)@@G@@ 1           .    @ @@@@PMSIZE* RES  1           .    @ @@@@PMDESC* RES SJ
)@@G@@ 1           .    @ @@@@PMDDSC* RES  1           .    @D@@@@. DUMMY PARASK
)@@G@@MS FOR DIMS (IN CASE OF SCALAR OR VECTOR) @A@@@@PMDDMY  RES  1          SL
)@@G@@ . DIMENSION@D@@@@PMDATA  RES  2           . DATA VAL (IN CASE SCALAR)  SM
)@@G@@@F@@@@PMOPRP  RES  2           . POINTERS TO OPERAND DATA AND DIM VALUESSN
)@@G@@@E@[@@ABASE   EQU  PMOPRP      . ARRAY BASE FOR ACCESS POLYNOMIAL @E@@[[SO
)@@G@@VBASE* EQU   PMOPRP      . ARRAY BASE FOR ACCESS POLYNOMIAL @D@@[[ABASE*SP
)@@G@@ RES   1           . TEMP STORAGE OF WORK REGS  @D[@@@PMXSAV  RES  3    SQ
)@@G@@       . TEMP STORAGE OF WORK REGS  @]@@[[. MISC VARS @#@@[[PMX8ST* RES SR
)@@G@@ 1 .  @[@@[[.     @[@@[[.     @[@@[[.     @D@@[[RESLNT EQUF  RESBLK,,H2 SS
)@@G@@ . LENGTH OF SUBSCRIPTANT     @C@@[[RESRNK EQUF  RESBLK,,S3  . RANK OF SST
)@@G@@UBSCRIPTAND @E@@@@/. PICK AND PUT RTNES USED FOR MAPPED ACCESSING OF ARRSU
)@@G@@AYS-  @[@@@@.     @G@@@@. THESE ARE THE ROUTINES WHICH ARE ACTUALLY CALLSV
)@@G@@ED BY AN LMJ ON THE     @B@@@@. LINK REGS TO PICK UP THE NEXT ELEMENT.  SW
)@@G@@@[@@@@.     @F@@@@E      PROC    . BUMP SUBSCR LIST AND GET EFF ADDR OF SX
)@@G@@NEXT ELEMENT@#@@@@EFAD*  NAME    .  @#@@@@       UNLI$T  .  @ @@@@      SY
)@@G@@ LMJ   A1,OFFSET   .    @D@@@@       J     E(1,1),E(1,2)    .,OOPS, INDESZ
)@@G@@X ERROR     @E@@@@ DO E(0,1)=ZMODFL , LSSL A0,1 . DOUBLE OFFSET FOR DFLOTA
)@@G@@AT    @C@[@@DIVCT  EQU   4*(ZMOCHR=E(0,1))+2*(ZMOHFI=E(0,1))@C@@[[DIVCT TB
)@@G@@EQU 2*(ZMOCHR=E(0,1))+1*(ZMOHFI=E(0,1))   @F[@@@ DO DIVCT<1 , GO EF$010 TC
)@@G@@ . IF NOT PARTIAL WORD, GO ADD BASE ADDR  @E@[@@       DSL   A0,36      TD
)@@G@@ . PREPARE FOR PARTIAL WORD DIVIDE  @D@[@@       DI,U  A0,DIVCT    . WORTE
)@@G@@D TO A0, PARTWD TO A1   @B@@[[       DSL   A0,DIVCT    . A0 = WORDS     TF
)@@G@@@B@@[[       SSL   A0,36-DIVCT . A1 HAS PARTWD  @ ]@@@EF$010* NAME      TG
)@@G@@       .    @D@[@@       AA    A0,ABASE    . ADD ABSADR OF BASE OF ARRAYTH
)@@G@@@D@@[[       AA    A0,VBASE    . ADD ABSADR OF BASE OF ARRAY@ [@@@      TI
)@@G@@ LI$T              .    @ @@@@       END               .    @#@@@@      TJ
)@@G@@ INSTRS .   @D@@@@. BOTH THE PICK AND PUT RTNES WIPE OUT A0-A5 AND R1   TK
)@@G@@@[@@@@.     @G@[@@PIKTBL JMPTBL 0 ZMOHFI,PK0100 ZMOINT,PK0200 ZMODFL,PK0TL
)@@G@@300 ZMOCHR,PK0400 @G@@][PIKTBL* JMPTBL 0 ZMOHFI,PK0100 ZMOINT,PK0200 ZMOTM
)@@G@@DFL,PK0300 ZMOCHR,PK0400@[[@@@.     @#@@@@. HALFWORD PICK   @A@[@@PK0100TN
)@@G@@ EFAD,ZMOHFI 0,X4       .     @ @@[[PK0100 EFAD,ZMOHFI 0,X6  .    @A[@@@TO
)@@G@@       EX    PK0110,A1        .     @A@@@@       DSA   A1,36+18         TP
)@@G@@.     @A@[@@       LMJ   X4,1,X4          .     @ @@[[       LMJ   X6,1,TQ
)@@G@@X6     .    @A[@@@       J     PK0100           .     @A@@@@PK0110 LXI,HTR
)@@G@@1 A1,0,A0         .     @A@@@@       LXI,H2 A1,0,A0         .     @B@@@@TS
)@@G@@. FETCH HALFINT AND CONVERT TO DOUBLE     @A@[@@PK0200 EFAD,ZMOHFI 0,X4 TT
)@@G@@      .     @ @@[[PK0200 EFAD,ZMOHFI 0,X6  .    @A[@@@       EX    PK011TU
)@@G@@0,A1        .     @A@@@@       DSA   A1,36+18         .     @A@@@@      TV
)@@G@@ DFLOAT A0,A1           .     @A@[@@       LMJ   X4,1,X4          .     TW
)@@G@@@ @@[[       LMJ   X6,1,X6     .    @A[@@@       J     PK0200           TX
)@@G@@.     @#@@@@. FETCH DOUBLE    @ @@@@                         .    @ @[@@TY
)@@G@@PK0300 EFAD,ZMODFL 0,X4  .    @ @@[[PK0300 EFAD,ZMODFL 0,X6  .    @ [@@@TZ
)@@G@@       DL    A1,0,A0     .    @ @[@@       LMJ   X4,1,X4     .    @ @@[[UA
)@@G@@       LMJ   X6,1,X6     .    @ [@@@       J     PK0300      .    @#@@@@UB
)@@G@@. FETCH CHARACTER @ @[@@PK0400 EFAD,ZMOCHR 0,X4  .    @ @@[[PK0400 EFAD,UC
)@@G@@ZMOCHR 0,X6  .    @ [@@@       EX    PK0410,A1   .    @ @[@@       LMJ  UD
)@@G@@ X4,1,X4     .    @ @@[[       LMJ   X6,1,X6     .    @ [@@@       J    UE
)@@G@@ PK0400      .    @ @@@@PK0410 LA,Q1 A1,0,A0     .    @ @@@@       LA,Q2UF
)@@G@@ A1,0,A0     .    @ @@@@       LA,Q3 A1,0,A0     .    @ @@@@       LA,Q4UG
)@@G@@ A1,0,A0     .    @[@@@@.     @#@@@@. PUT ROUTINES -- @[@@@@.     @G@[@@UH
)@@G@@PUTTBL JMPTBL 0 ZMOHFI,PU0100 ZMOINT,PU0200 ZMODFL,PU0300 ZMOCHR,PU0400 UI
)@@G@@@G@@][PUTTBL* JMPTBL 0 ZMOHFI,PU0100 ZMOINT,PU0200 ZMODFL,PU0300 ZMOCHR,UJ
)@@G@@PU0400@[[@@@.     @#@@@@. HALFINT STORE   @^@[@@PU0100 DS    A1,PUTARG  UK
)@@G@@@^@@][PU0100 SA    A2,PUTARG  @ [@@@       EFAD,ZMOHFI 0,X2  .    @ @[@@UL
)@@G@@       DL    A1,PUTARG   .    @ @@][       LA    A2,PUTARG   .    @ [@@@UM
)@@G@@       EX    PU0110,A1   .    @ @@@@       LMJ   X2,1,X2     .    @ @@@@UN
)@@G@@       J     PU0100      .    @ @[@@PU0110 SA,H1 A5,0,A0     .    @ @@][UO
)@@G@@PU0110 SA,H1 A2,0,A0     .    @ @[@@       SA,H2 A5,0,A0     .    @ @@][UP
)@@G@@       SA,H2 A2,0,A0     .    @ ]@@@. CONV HALF TO DFL AND STORE  @ @@@@UQ
)@@G@@PU0200 DFLOAT A0,A1      .    @^@@@@       DS     A1,PUTARG @ @@@@      UR
)@@G@@ EFAD,ZMODFL 0,X2   .   @ @@@@       DL    A1,PUTARG   .    @ @@@@      US
)@@G@@ DS    A1,0,A0     .    @ @@@@       LMJ   X2,1,X2     .    @ @@@@      UT
)@@G@@ J     PU0200      .    @#@@@@. STORE DFLOAT    @ @@@@PU0300 DS    A1,PUUU
)@@G@@TARG   .    @ @@@@       EFAD,ZMODFL 0,X2  .    @ @@@@       DL    A1,PUUV
)@@G@@TARG   .    @ @@@@       DS    A1,0,A0     .    @ @@@@       LMJ   X2,1,UW
)@@G@@X2     .    @ @@@@       J     PU0300      .    @]@@@@. STORE CHAR@A@@@@UX
)@@G@@PU0400 DS    A1,PUTARG        .     @A@@@@       EFAD,ZMOCHR 0,X2       UY
)@@G@@.     @ @[@@       DL    A1,PUTARG   .    @ @@][       LA    A2,PUTARG  UZ
)@@G@@ .    @A[@@@       EX    PU0410,A1        .     @A@@@@       LMJ   X2,1,VA
)@@G@@X2          .     @A@@@@       J     PU0400           .     @A@[@@PU0410VB
)@@G@@ SA,Q1 A1,0,A0          .     @A@@][PU0410 SA,Q1 A2,0,A0          .     VC
)@@G@@@A@[@@       SA,Q2 A1,0,A0          .     @A@@][       SA,Q2 A2,0,A0    VD
)@@G@@      .     @A@[@@       SA,Q3 A1,0,A0          .     @A@@][       SA,Q3VE
)@@G@@ A2,0,A0          .     @A@[@@       SA,Q4 A1,0,A0          .     @A@@][VF
)@@G@@       SA,Q4 A2,0,A0          .     @[^@@@.     @#@@@@       VARBLS .   VG
)@@G@@@ @@@@PUTARG RES   2           .    @G@@@@/. THIS ROUTINE (USED BY THE GVH
)@@G@@ET/PUT ROUTINES ABOVE) STEPS THE ADDRESS  @G@@@@. MAP TO THE NEXT ELEMENVI
)@@G@@T AND RETURNS THE LINEAR OFFSET OF THAT ELEMENT @E@@@@. IN A0. IT IS LINVJ
)@@G@@KED TO ON A1 AND DESTROYS A0-A5 AND R1.   @A@@@@. X6,7 AND 8 ARE USED, BVK
)@@G@@UT RESTORED @#@@@@        INSTRS .  @^@@@@OFFSET SX    A1,OFLINK  @ @@@@VL
)@@G@@       SAVER X6,PMXSAV,3 .    @F@[@@       LR    R1,AMNSIG   . LOOP CT=NVM
)@@G@@O OF 'SIGNIFICANT'COORDINATES @F@@][       LX    X8,AMNSIG   . LOOP CT=NVN
)@@G@@O OF 'SIGNIFICANT'COORDINATES @D@[@@       SR    R1,OFCARY   . TURN ON CVO
)@@G@@ARRY INDICATOR    @D@@][       SX    X8,OFCARY   . TURN ON CARRY INDICATVP
)@@G@@OR    @F@[@@       LA    A0,VBASE    . INITIALIZE OFFSET TO CONSTANT TERVQ
)@@G@@M     @E@@[[       LA    A0,ABASE    . INITIALIZE OFFSET TOCONSTANT TERMVR
)@@G@@@F@[@@       LX,XU X8,-1       . SET UP TO POINT TO 0'TH SUBSCR ENTRY   VS
)@@G@@@[^@@@.     @D@[@@OF0100 JNGD  R1,OF0200   . EXIT AFTER ALL COORDS DONE VT
)@@G@@@D@@][OF0100 JNGD  X8,OF0200   . EXIT AFTER ALL COORDS DONE @C@[@@      VU
)@@G@@ AX,U  X8,1        . STEP TO NEXT SUBSCR  @C]@@@       TZ    OFCARY     VV
)@@G@@ . IS CARRY FLAG ON?    @D@@@@       J     OF0110      . YES-GO BUMP THIVW
)@@G@@S SUBSCR    @F@@@@       AA    A0,AMVALU   . NO, FOLD THIS SUBSCR INTO TVX
)@@G@@OT OFFSET   @C@@@@       J     OF0100      . AND GO TO NEXT SUBSCR@C@@@@VY
)@@G@@. CARRY ON- STEP THIS SUBSCR TO ITS NEXT VALUE  @E@[@@OF0110 LX    X7,AMVZ
)@@G@@DATA   . DATA POINTER FOR THIS SUBSCRIPT  @E@@[[OF0110 LX    X7,AMPNTR  WA
)@@G@@ . DATA POINTER FOR THISSUBSCRIPT   @E[@@@       LX    X6,AMLCUR   . ANDWB
)@@G@@ LINK TO ITS COMPUTE RTNE     @E@@@@       LA    A2,AMCCUR   . COUNT OF WC
)@@G@@ELS LEFT TO BE PICKED   @F@@@@       JGD   A2,OF0130   . IF ANY ELS LEFTWD
)@@G@@, GO TURN CARRY OFF     @D@@@@. COORD EXHAUSTED, RESET IT TO ITS INITIALWE
)@@G@@ VALUES     @C@@@@OF0120 LXM   X7,AMDINI   . INITIAL DATA ADDR    @F@@@@WF
)@@G@@       LX    X6,AMLINI   . INITIAL LINK TO SUBSCR COMPUTE RTNE    @G@@@@WG
)@@G@@       LA    A2,AMCINI   . INIT CT OF NO ELS TO GET (NO ELS LESS 1)     WH
)@@G@@@G@@@@       J     OF0140      . COMPUTE, LEAVING CARRY TO NEXT SUBSCR OWI
)@@G@@N     @G@@@@OF0130 SZ    OFCARY      . TURN OFF CARRY FLAG AS THIS SUB DWJ
)@@G@@ID NOT CYCLE@C@@@@. COMPUTE AND CHECK VALUE OF THIS SUBSCRIPT     @B@@@@WK
)@@G@@OF0140 LMJ   X6,0,X6     . VALUE TO A4,5  @D@@@@       JNZ   A4,OF0900  WL
)@@G@@ . IF DOUBLE, INDEX ERROR     @C@@@@       ANA   A5,WSIXOR   . FORCE TO WM
)@@G@@ZERO-ORIGIN @B@@@@       TZ    A5          . ZERO IS OK     @C@@@@      WN
)@@G@@ JN    A5,OF0900   . BUT NEGATIVE IS NOT  @E@@@@       TG    A5,AMRANG  WO
)@@G@@ . IS RANGE LARGER THAN THIS VAL?   @D@@@@       J     OF0900      . NO-WP
)@@G@@ANOTHER INDEX ERROR     @B@@@@       MSI   A5,AMWGHT   . FOLD IN WEIGHT WQ
)@@G@@@F@@@@       SA    A5,AMVALU   . SAVE OFFSET VALUE FOR THIS SUBSCRIPT   WR
)@@G@@@G@@@@       AA    A0,A5       . FOLD THIS SUBSCR OFFSET INTO TOTAL OFFSWS
)@@G@@ET    @G@@@@       SX    X6,AMLCUR   . POST CURRENT LINK TO SUBSCR COMPUWT
)@@G@@TE RTNE     @D@[@@       SX    X7,AMDATA   . POST CURRENT DATA POINTER  WU
)@@G@@@D@@[[       SX    X7,AMPNTR   . POST CURRENT DATA POINTER  @E[@@@      WV
)@@G@@ SA    A2,AMCCUR   . AND COUNT OF NO VALUES REMAINING @D@@@@       J    WW
)@@G@@ OF0100      . GO BACK FOR NEXT COORDINATE@C@@@@. ALL SUBSCRS STEPPED ANWX
)@@G@@D OFFSET IS IN A0--     @C@@@@OF0200 LOADR X6,PMXSAV,3 . RESTORE REGS USWY
)@@G@@ED    @ @@@@       LA    A1,OFLINK   .    @B@@@@       J     1,A1       WZ
)@@G@@ . NORMAL EXIT    @#@@@@. INDEX ERROR     @ @@@@OF0900 LOADR X6,PMXSAV,3XA
)@@G@@ .    @ @@[[       ERROR YINDEX      .    @ @@@@       LA    A1,OFLINK  XB
)@@G@@ .    @ @@@@       J     0,A1        .    @#@@@@       VARBLS  .  @ @@@@XC
)@@G@@OFLINK EQUF  $,,H1       .    @ @@@@OFCARY EQUF  $,,H2       .    @ @@@@XD
)@@G@@       RES   1           .    @F@@@@/. COMPUTE ROUTINES USED TO GET THE XE
)@@G@@NEXT VALUE OF A PARTICULAR    @G@@@@. SUBSCRIPT.  IF THE OPERATION IS INXF
)@@G@@DEXING AND AN APL VARIABLE IS USED  @G@@@@. AS THE SUBSCRIPT, THEN THE AXG
)@@G@@PPROPRIATE RITEARG FETCH ROUTINES (IN     @G@@@@. ELEMENT LINEAR) ARE USXH
)@@G@@ED.  THE ROUTINES HERE ARE USED IN THE CASE THAT@G@@@@. ONE IS MERELY WIXI
)@@G@@FFLING THROUGH THE SPECIFIED DIMENSION SEQUENTIALLY,  @F@@@@. E.G. WHEN XJ
)@@G@@A SUBSCRIPT IS ELIDED OR IN ONE OF THE OTHER MIXED OPS@G@@@@.     IN EFFXK
)@@G@@ECT, THESE ROUTINES OBTAIN THE VALUES OF WHAT ABRAMS CALLS  @G@@@@. 'J-VXL
)@@G@@ECTORS' -I.E. THEY VARY BY 1 EITHER ASCENDING OR DESCENDING FROM  @G@@@@XM
)@@G@@. AN ARBITRARY STARTING POINT. THE INITIAL SETTING FOR X7 (I.E. AMDINI) XN
)@@G@@@D@@@@. SHOULD BE THE (0-ORIGIN) VALUE OF THE 1ST SUBSCRIPT.@E@[@@.     XO
)@@G@@INITIALIZATION: TO SCAN FWD,  AMDINC=+1, AMDINI=0     @E@@][.     INITIAXP
)@@G@@LIZATION: TO SCAN FWD,  AMDINC=+1, AMDINI=WSIXOR@G@[@@.                 XQ
)@@G@@    TO SCAN BKWD, AMDINC=-1, AMDINI=AMCINI=LENGTH-1   @I@@][.           XR
)@@G@@          TO SCAN BKWD, AMDINC=-1, AMDINI=AMCINI+WSIXOR=LENGTH-1+WSIXOR XS
)@@G@@@[]@@@.     @#@@[[       INSTRS .   @D@@@@JVECT  LA,XU A4,0,*X7    . GETXT
)@@G@@ SIGNEXTENDED VALUE     @B@@@@       DSL   A4,36       . ALIGN IN A4,5  XU
)@@G@@@A@@@@       LMJ   X6,0,X6     . RETURN   @ @@@@       J     JVECT      XV
)@@G@@ .    @D@[@@. THIS ROUTINE FOR COORDINATES BEING ROTATED UPON-    @ @[@@XW
)@@G@@KVECT  LA,XU A4,0,*X7    .    @F@[@@       AU    A4,ROBIAS   . ADD CURREXX
)@@G@@NT VALUE OF ROTATION BIAS     @B@[@@       TG    A5,AMRANG   . WRAPAROUNXY
)@@G@@D?    @B@[@@       ANA   A5,AMRANG   . YES, DECREMENT @A@[@@       LMJ  XZ
)@@G@@ X6,0,X6     . RETURN   @ @[@@       J     KVECT       .    @[@@[[.     YA
)@@G@@@^@@[[. ROUTINES FOR ROTATION @[@@[[.     @D@@[[.   (1) RIGHT-MOST COORDYB
)@@G@@ -  NOT SELECTED COORDINATE   @^@@[[.       STEP LEFT ARG   @[@@[[.     YC
)@@G@@@B@@[[ROTRIT* LMJ  X11,RTSTEP  . STEP LEFT ARG  @B@@[[       J     0,X6 YD
)@@G@@       . ERROR EXIT     @D@@[[       LA,XU A4,0,*X7    . GET SIGNEXTENDEYE
)@@G@@D VALUE     @B@@[[       DSL   A4,36       . ALIGN IN A4,5  @A@@[[      YF
)@@G@@ LMJ   X6,0,X6     . RETURN   @ @@[[       J     ROTRIT      .    @[@@[[YG
)@@G@@.     @ @@[[.   (2) SELECTED COORDINATE   @[@@[[.     @A@@[[ROTSEL* LA,UYH
)@@G@@ A6,1,X8     . JUMP IF  @D@@[[       JNE   A6,AMNSIG RO0020 . NOT RIGHTMYI
)@@G@@OST COORD   @E@@[[       JNE   A2,AMCINI RO0100 . JUMP IF NOT BEING RESEYJ
)@@G@@T     @B@@[[       LMJ   X11,RTSTEP  . STEP LEFT ARG  @B@@[[       J    YK
)@@G@@ 0,X6        . ERROR EXIT     @B@@[[       J     RO0100      . GO STEP CYL
)@@G@@OORD  @E@@[[RO0020 JNE   A2,AMCINI RO0040 . JUMP IF NOT BEING RESET     YM
)@@G@@@D@@[[       LOADR A6,ROTX6,3 . RESET LEFT ARG PICK VALS    @A@@[[      YN
)@@G@@ SAVER A6,ROTORG,3 . SAVE     @ @@[[       LA    A6,ROBIAS   .    @ @@[[YO
)@@G@@       SA    A6,RTBIAS   .    @B@@[[       J     RO0100      . GO STEP CYP
)@@G@@OORD  @B@@[[RO0040 LOADR A6,ROTORG,3 . GET INIT VALUES@A@@[[       SAVERYQ
)@@G@@ A6,ROTX6,3  . SAVAE    @ @@[[       LA    A6,RTBIAS   .    @ @@[[      YR
)@@G@@ SA    A6,ROBIAS   .    @ @@[[RO0100 LA,XU A4,0,*X7    .    @E@@[[      YS
)@@G@@ AU    A4,ROBIAS   . ADD CURRENT VALUE OF ROTATION    @A@@[[       LA,U YT
)@@G@@ A4,0        . ZER O A4 @ @@[[       LA    A6,AMRANG   .    @B@@[[      YU
)@@G@@ JLE   A6,A5 RO0110 . WRAPAROUND?   @B@@[[       ANA   A5,AMRANG   . YESYV
)@@G@@, DECREMENT @]@@[[RO0110 .    @A@@[[       LMJ   X6,0,X6     . RETURN   YW
)@@G@@@ @@[[       J     ROTSEL      .    @[@@[[.     @ @@[[. STEP LEFT ARG- RYX
)@@G@@OTATION     @B@@[[RTSTEP SAVER X6,RTSAVE,2  . SAVE X6 & X7  @D@@[[      YY
)@@G@@ LOADR X6,ROTX6,2  . LOAD LEFT ARG PIK REGS     @B@@[[       LR    R2,ROYZ
)@@G@@TLEN   . LOAD LENGH     @C@@[[       JGD   R2,RT0020   . IF ANY LEFT, STZA
)@@G@@EP    @^@@[[.  RELOAD LEFT ARGS     @B@@[[       LX    X6, MISAV6  . INIZB
)@@G@@TAL LINK    @C@@[[       LX    X7,MISAV7   . INITAL DATA ADDR     @B@@[[ZC
)@@G@@       LR    R2,MILENG   . INITIAL LENGTH @C@@[[       JGD   R2,$+1     ZD
)@@G@@ . DECREASE CNT BY 1    @[@@[[.     @^@@[[.  PICK NEXT LEFT ARG   @[@@[[ZE
)@@G@@.     @B@@[[RT0020 LMJ   X6,0,X6     . GET NEXT VALUE @B@@[[       JNZ  ZF
)@@G@@ A4,RT0900   . DOMAIN ERROR   @ @@[[       SAVER X6,ROTX6,2  .    @ @@[[ZG
)@@G@@       SR    R2,ROTLEN   .    @C@@[[       LA    A1,MICORD   . LOAD SELEZH
)@@G@@CTED COORD  @E@@[[       DI    A4,RTRANG   . DIVIDE BY RANK( REMAINDER IZI
)@@G@@N A5. @B@@[[       TP    A5          . IF NEGATIVE,   @B@@[[       AA   ZJ
)@@G@@ A5,RTRANG   . ADD IN RANK    @B@@[[       SA    A5,ROBIAS   . STORE NEWZK
)@@G@@ VLAUE@C@@[[       TNE   A1,X8       . SELECTED COORDINATE? @ @@[[      ZL
)@@G@@ J     RT0100      . YES@C@@[[       LA    A8,RTDCUR   . LOAD CURRENT VAZM
)@@G@@LUE   @E@@[[       ANA,U A8,RTDINC   . SET EQUAL TO LAST VALUE PICKED   ZN
)@@G@@@ @@[[       AA    A8,ROBIAS   .    @ @@[[       LA    A7,RTRANG   .    ZO
)@@G@@@C@@[[       JLE   A7,A8 RT0060  . JUMP IF OUT OF RANG@E@@[[       ANA  ZP
)@@G@@ A8,RTRANG   . IF OUT OF RANGE, SUBTRACT RNAK   @B@@[[RT0060 ANA   A8,WSZQ
)@@G@@IXOR   . SUBTRACT ORIGIN@C@@[[       MSI   A8,RTWGHT   . MULTIPLY BY WEIZR
)@@G@@GHT   @C@@[[       SA    A8,RTVALU   . AND STORE NEW VALUE  @B@@[[      ZS
)@@G@@ LOADR X6,RTSAVE,2 . RELOAD X6 & X7 @B@@[[       J     1,X11       . NORZT
)@@G@@MAL EXIT    @[@@[[.     @#@@[[.   ERROR EXITS   @[@@[[.     @B@@[[RT0900ZU
)@@G@@ LOADR X6,RTSAVE,2 . RELOAD XREGS   @B@@[[       J     0,X11       . ERRZV
)@@G@@OR EXIT     @#@@[[       VARBLS .   @#@@[[RTSAVE RES   2 .  @#@@[[RTBIASZW
)@@G@@ RES   1 .  @ @@[[RTPNTR EQUF  AMDATA,A1   .    @ @@[[RTRANG EQUF  AMPARZX
)@@G@@M,A1,H2 .   @ @@[[RTWGHT EQUF AMPARM,A1,H1  .   @ @@[[RTVALU EQUF AMCVALZY
)@@G@@,A1,H2 .    @ @@[[RTDCUR EQUF  AMDATA,A1,H2 .   @ @@[[RTDINC EQUF  AMDATZZ
)@@G@@A,A1,H1 .   @#@@[[       VARBLS .   @#@@[[ROBIAS* RES 1 .   @]B@@@      AA
)@@G@@ END .___    . GO STEP COORD  @B@@[[RO0040 LOADR A6,ROTORG,3 . GET INIT AB
)@@G@@VALUES@A@@[[       SAVER A6,ROTX6,3  . SAVAE    *[S@@@*SDFF*@F@@@@. SPECAC
)@@G@@IAL RE-ENTRANT DUMPS USING SNAP$ INSTEAD OF X$DUMP ROUTINES @#@@@@      AD
)@@G@@ AXR$  .    @ @@@@       VARCON            .    @F@@@@XSTAT$* +1,0,0,0,0AE
)@@G@@,0  .   X$ON/X$OFF FLAG. ZERO INHIBITS DUMPS    @E@@@@XMPSW$* +0        AF
)@@G@@        . MULTIPLE ACTIVITY LOCK FLAG     @D@@@@.      ONLY X$CORE, X$CRAG
)@@G@@EG AND X$DUMP ARE HANDLED     @F@@@@XDMPON EQU   0 . SET NON-ZERO TO PUTAH
)@@G@@ DUMPS INTO REENTRANT VERSIONS@[@@@@.     @#@@@@XCORE$*      .    @#@@@@AI
)@@G@@XCREG$*      .    @C@@@@XDUMP$* +0   . SLUDGE STORES CALL ADDR HERE     AJ
)@@G@@@^@@@@       ON    XDMPON .   @D@@@@       J     XD0010      . GO TO ROUAK
)@@G@@TINE IN I-BANK    @[@@@@.     @ @@@@       INSTRS            .    @]@@@@AL
)@@G@@       OFF .@B@@@@XD0010 DS    A0,XDLINK   . TEMP SAVE REGS @C@@@@      AM
)@@G@@ LA,H2 A0,XDUMP$   . PICK UP ENTRY ADDR   @^@@@@       ON    XDMPON .   AN
)@@G@@@C@@@@       TNZ   XSTAT$      . ARE DUMPS ALLOWED?   @C@@@@       J    AO
)@@G@@ XD0100      . NO, EXIT BACK TO USER@B@@@@. GENERATE A SNAP$ PACKET FROMAP
)@@G@@ X$DUMP INFO@F@@@@XD0020 LA    A1,0,A0     . GET WD 1 OF CALL SEQ (TAG,NAQ
)@@G@@WDS,FWA)    @C@@@@       LSSL  A1,4        . GET RID OF TAG BITS  @B@@@@AR
)@@G@@       SSL   A1,18+4-3   . ALIGN NO OF WDS@F@@@@       LXI,H2 A1,1,A0   AS
)@@G@@ . 2ND WORD OF CALL PKT=REGS TO BE DUMPED @C@@@@       SSL   A1,3       AT
)@@G@@ . PACK REG DUMP BITS IN@ @@@@       SA,H1 A1,SNAPKT+1 .    @D@@@@XD0030AU
)@@G@@ LA    A1,0,A0     . GET CALL SEQ 1ST WORD BACK @D@@@@       LA,U  A0,0 AV
)@@G@@       . CLEAR FOR ADDR CONSTRUCTION@C@@@@       LDSL  A0,4        . SHIAW
)@@G@@FT TAG BITS IN    @D@@@@       LSSL  A1,18-4     . GET RID OF LENGTH FIEAX
)@@G@@LD    @C@@@@       LDSL  A0,18       . SHIFT ADDRESS BITS IN@F@@@@      AY
)@@G@@ OR    A0,XDLOAD   . CREATE AN INSTR TO GET THE ABS ADDR    @C@@@@      AZ
)@@G@@ SA    A1,XDEXLC   . SAVE IT FOR LATER EX @G@@@@       DL    A0,XDLINK  BA
)@@G@@ . RECOVER ORIGINAL REGS IN CASE TAG IS THERE   @C@@@@       EX    XDEXLBB
)@@G@@C      . COMPUTE ABS ADDR     @D@@@@       SA,H2 A0,SNAPKT+1 . AND STASHBC
)@@G@@ IN SNAP$ PACKET  @B@@@@XD0040 LA,H2 A0,XDUMP$   . GET RETURN ADDR@B@@@@BD
)@@G@@       SR    R1,XDEXLC   . TEMP SAVE RREG @D@@@@       LR,U  R1,5       BE
)@@G@@ . PREPARE TO CONVERT 6 CHARS @D@@@@       DSL   A0,3        . ISOLATE NBF
)@@G@@EXT OCTAL DIGIT   @A@@@@       SSL   A1,3        . SPLIT IT @E@@@@      BG
)@@G@@ JGD   R1,$-2      . CONTINUE UNTIL 6 DIGITS ARE SPLIT@^@@@@       LA   BH
)@@G@@ A0,A1 .    @D@@@@       OR    A0,(+'000000')   . CONVERT TO FIELDATA   BI
)@@G@@@C@@@@       SA    A1,SNAPKT   . AND USE AS DUMP IDENT@ @@@@       LA   BJ
)@@G@@ A1,XDLINK+1 .    @B@@@@       LR    R1,XDEXLC   . RESTORE REG    @ @@@@BK
)@@G@@XD0050 LA,U  A0,SNAPKT   .    @A@@@@       ER    SNAP$       . DUMP     BL
)@@G@@@E@@@@       LA,H2 A0,XDUMP$   . RECOVER CALLING SEQUENCE ADDR    @#@@@@BM
)@@G@@       OFF   .    @[@@@@.     @C@@@@XD0100 LA,U  A0,2,A0     . COMPUTE RBN
)@@G@@ETURN ADDR  @D@@@@       SA    A0,XDUMP$   . PLUG BACK INTO PACKET LOCN BO
)@@G@@@F@@@@       DL    A0,XDLINK   . RECOVER ORIGINAL USER REG CONTENTS     BP
)@@G@@@B@@@@       SZ    XMPSW$      . CLEAR TS LOCK  @A@@@@       J     *XDUMBQ
)@@G@@P$     . EXIT     @[@@@@.     @^@@@@       ON    XDMPON .   @ @@@@      BR
)@@G@@ VARCON            .    @B@@@@SNAPKT 'SNAPPY'          . IDENT WORD     BS
)@@G@@@B@@@@       +0    . DUMP CONTROL (ACCESS) WORD @#@@@@       OFF     .  BT
)@@G@@@C@@@@XDLINK RES   2           . REGS A0,A1 AT ENTRY  @ @@@@       ON   BU
)@@G@@ XDMPON      .    @[@@@@.     @E@@@@XDEXLC +0    . INSTR TO COMPUTE ADDRBV
)@@G@@ AFTER TAGGING GOES HERE@E@@@@XDLOAD LA,U  A0,0        . SKELETON INSTR BW
)@@G@@TO GET ABS ADR    @[@@@@.     @]@@@@       OFF .@#@@@@       END   .    BX
)@@G@@___AVE REGS @C@@@@       LA,H2 A0,XDUMP$   . PICK UP ENTRY ADDR   @^@@@@BY
)@@G@@       ON    XDMPON .   @C@@@@       TNZ   XSTAT*[S@@@*SDFF*@G@@@@. ****BZ
)@@G@@***************************************************************** @G@@@@CA
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * CB
)@@G@@@G@@@@.                                                                 CC
)@@G@@    * @G@@@@       AXR$         .                                       CD
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        CE
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        CF
)@@G@@                      * @G@@@@       WSDEF.      DEFINE WORKSPACE       CG
)@@G@@                            * @G@@@@WORKSP INFO  2 20.      SET ASIDE THCH
)@@G@@E SPACE                           * @G@@@@       RUNCTL.     DEFINE RUN CI
)@@G@@CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.      CJ
)@@G@@AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCK     CK
)@@G@@       . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.           CL
)@@G@@                                                          * @G@@@@. END CM
)@@G@@OF STANDARD PROC BLOCK                                          * @G@@@@CN
)@@G@@. ********************************************************************* CO
)@@G@@@[@@@@.     @[@@@@.     @A@@@@. ASCII CHARACTERS OF SPECIFIC TYPES@[@@@@CP
)@@G@@.     @D@@@@ASILCD EQU   07777       . INT CODE FOR SINGLE ILCHARS@H@@@@CQ
)@@G@@ASUNDF EQU   0173        . CHAR ALL SINGLE UNKNOWN CHARS CONV. TO ON OUTCR
)@@G@@PUT   @ @@@@ASCIBS EQU   010        .     @B@@@@ASMARK EQU   051        CS
)@@G@@ . ASCII MARK     @A@@@@ASCRRT EQU   015         . CAR RET  @B@@@@ASNULLCT
)@@G@@ EQU   0177        . ASCII PAD CHAR @A@@@@ASLNFD EQU   012         . LINCU
)@@G@@E FEED@G@@@@ASATTN EQU   ASLNFD      . ATTN CODE FOR EDITING PURPOSES ISCV
)@@G@@ LINE FEED  @D@@@@ASCBEL EQU   07          . ASCII 'BELL' CHARACTER     CW
)@@G@@@B@@@@ASCFLG EQU   0770        . ASCII FLAG     @C@@@@ASCXON EQU   021  CX
)@@G@@       . ASCII X-ON CHARACTER @C@@@@ASXOFF EQU   023         . ASCII X-OCY
)@@G@@FF CHARACTER@A@@@@ASBLNK EQU   040         . BLANK    @B@@[[ASCRUB EQU  CZ
)@@G@@ 0177        . ASCII RUBOUT   @E@@@@ASMAXA EQU   0177        . LARGEST ADA
)@@G@@SCII CHARACTER VALUE    @[@[@@.     @G@[@@. ASCII CHARACTERS DEFINED BY DB
)@@G@@POSITION ON KEYBOARD (ROW AND COLUMN)     @[@[@@.     @ @[@@R1C01U EQU  DC
)@@G@@041         .     @ @[@@R1C01L EQU  061         .     @ @[@@R1C02U EQU  DD
)@@G@@ 0100        .    @ @[@@R1C02L EQU  062         .     @ @[@@R1C03U EQU  DE
)@@G@@043         .     @ @[@@R1C03L EQU  063         .     @ @[@@R1C04U EQU  DF
)@@G@@044         .     @ @[@@R1C04L EQU  064         .     @ @[@@R1C05U EQU  DG
)@@G@@045         .     @ @[@@R1C05L EQU  065         .     @ @[@@R1C06U EQU  DH
)@@G@@ 0136        .    @ @[@@R1C06L EQU  066         .     @ @[@@R1C07U EQU  DI
)@@G@@ 046         .    @ @[@@R1C07L EQU  067         .     @ @[@@R1C08U EQU  DJ
)@@G@@ 052         .    @ @[@@R1C08L EQU  070         .     @ @[@@R1C09U EQU  DK
)@@G@@ 050         .    @ @[@@R1C09L EQU  071         .     @ @[@@R1C10U EQU  DL
)@@G@@ 051         .    @ @[@@R1C10L EQU  060         .     @ @[@@R1C11U EQU  DM
)@@G@@ 0137        .    @ @[@@R1C11L EQU  055         .     @ @[@@R1C12U EQU 0DN
)@@G@@53           .    @ @[@@R1C12L EQU   075         .    @ @[@@R2C01U EQU  DO
)@@G@@ 0121        .    @ @[@@R2C01L EQU   0161        .    @ @[@@R2C02U EQU  DP
)@@G@@ 0127        .    @ @[@@R2C02L EQU   0167        .    @ @[@@R2C03U EQU  DQ
)@@G@@ 0105        .    @ @[@@R2C03L EQU   0145        .    @ @[@@R2C04U EQU  DR
)@@G@@ 0122        .    @ @[@@R2C04L EQU   0162        .    @ @[@@R2C05U EQU  DS
)@@G@@ 0124        .    @ @[@@R2C05L EQU   0164        .    @ @[@@R2C06U EQU  DT
)@@G@@ 0131        .    @ @[@@R2C06L EQU   0171        .    @ @[@@R2C07U EQU 0DU
)@@G@@125          .    @ @[@@R2C07L EQU   0165        .    @ @[@@R2C08U EQU  DV
)@@G@@ 0111        .    @ @[@@R2C08L EQU   0151        .    @ @[@@R2C09U EQU  DW
)@@G@@ 0117        .    @ @[@@R2C09L EQU   0157        .    @ @[@@R2C10U EQU  DX
)@@G@@ 0120        .    @ @[@@R2C10L EQU   0160        .    @ @[@@R2C11U EQU  DY
)@@G@@ 0135        .    @ @[@@R2C11L EQU   0133        .    @ @[@@R2C12U EQU  DZ
)@@G@@0140        .     @ @[@@R2C12L EQU  0100        .     @ @[@@R3C01U EQU  EA
)@@G@@0101        .     @ @[@@R3C01L EQU  0141        .     @ @[@@R3C02U EQU  EB
)@@G@@0123        .     @ @[@@R3C02L EQU  0163        .     @ @[@@R3C03U EQU  EC
)@@G@@0104        .     @ @[@@R3C03L EQU  0144        .     @ @[@@R3C05U EQU  ED
)@@G@@0107        .     @ @[@@R3C04L EQU  0146        .     @ @[@@R3C04U EQU  EE
)@@G@@ 0106        .    @ @[@@R3C09L EQU  0154        .     @ @[@@R3C10L EQU  EF
)@@G@@073         .     @ @[@@R3C11U EQU   042         .    @ @[@@R3C12U EQU  EG
)@@G@@0177        .     @ @[@@R3C11L EQU   047         .    @ @[@@R4C01U EQU  EH
)@@G@@0132        .     @ @[@@R3C12L EQU  0177        .     @ @[@@R3C09U EQU  EI
)@@G@@0114        .     @ @[@@R3C10U EQU   072         .    @ @[@@R3C08L EQU  EJ
)@@G@@0153        .     @ @[@@R3C08U EQU  0113        .     @ @[@@R3C07L EQU  EK
)@@G@@0152        .     @ @[@@R3C07U EQU  0112        .     @ @[@@R3C06U EQU  EL
)@@G@@0110        .     @ @[@@R3C06L EQU  0150        .     @ @[@@R3C05L EQU  EM
)@@G@@0147        .     @ @[@@R4C01L EQU  0172        .     @ @[@@R4C02U EQU  EN
)@@G@@0130        .     @ @[@@R4C02L EQU  0170        .     @ @[@@R4C03U EQU  EO
)@@G@@0103        .     @ @[@@R4C04U EQU  0126        .     @ @[@@R4C03L EQU  EP
)@@G@@0143        .     @ @[@@R4C04L EQU  0166        .     @ @[@@R4C05U EQU  EQ
)@@G@@0102        .     @ @[@@R4C05L EQU  0142        .     @ @[@@R4C06U EQU  ER
)@@G@@0116        .     @ @[@@R4C06L EQU  0156        .     @ @[@@R4C07U EQU  ES
)@@G@@0115        .     @ @[@@R4C07L EQU  0155        .     @ @[@@R4C08U EQU  ET
)@@G@@074         .     @ @[@@R4C08L EQU  054         .     @ @[@@R4C09U EQU  EU
)@@G@@076         .     @ @[@@R4C09L EQU  056         .     @ @[@@R4C10U EQU  EV
)@@G@@ 077         .    @ @[@@R4C10L EQU  057         .     @ @[@@R5C0UL EQU  EW
)@@G@@ 040         .    @[@[@@/ .   @[@[@@.     @^@[@@Z*       PROC   *450    EX
)@@G@@@[@[@@.     @#@[@@S         PROC *0 @#@[@@GO2*      NAME    @A@[@@      EY
)@@G@@    DO        Z(N)=2 , END    @ @[@@OVRNUM**(1)  EQU   OVRNUM(1)+1@D@[@@EZ
)@@G@@W1**(OVRNUM(1)) EQU   INT(1+Z(N,2))*/9+INT(1+Z(N,3))  @B@[@@     DO INT(FA
)@@G@@1+Z(N,2))>INT(1+Z(N,3))  ,;   @D@[@@W1**(OVRNUM(1))   EQU  INT(1+Z(N,3))FB
)@@G@@*/9+INT(1+Z(N,2)) @A@[@@W2**(OVRNUM(1)) EQU      Z(N,1)     @#@[@@      FC
)@@G@@    END     @[@[@@.     @#@[@@W         PROC *0 @#@[@@GO1*      NAME    FD
)@@G@@@^@[@@L(1)     EQU       Z(N) @C@[@@ASC**(1+Z(N,1)) EQU Z(N,L(1))+(L(1)=FE
)@@G@@3)*Z(N,2)*/9@D@[@@          DO        L(1)<3 ,INT**(1+Z(N,2)) EQU Z(N,1)FF
)@@G@@@F@[@@      DO (Z(N,2)>ASCMAX(1))**(L(1)=2)   ,ASCMAX**(1)   EQU  Z(N,2)FG
)@@G@@@C@[@@    DO  Z(N,1)>INTMAX(1)  ,INTMAX*(1) EQU Z(N,1)@#@[@@          ENFH
)@@G@@D     @[@[@@.     @#@[@@INTMAX(1) EQU  0  @^@[@@ASCMAX*(1)  EQU   0     FI
)@@G@@@ @[@@N         DO        Z , GO1   @ @[@@OVRNUM*(1)     EQU       0    FJ
)@@G@@@^@[@@N       DO       Z , GO2@ @[@@MAXCNT*(1)  EQU  OVRNUM(1)    @C@[@@FK
)@@G@@    DO INTMAX(1)>OVRNUM(1)*2+ASCMAX(1)   ,;     @C@[@@MAXCNT*(1)   EQU  FL
)@@G@@((INTMAX(1)-ASCMAX(1))/2)+1   @#@[@@          END     @[@[@@.     @D@[@@FM
)@@G@@       Z     0,ASMAXA  0,0  ; NEVER CHANGE THIS CARD  @F@[@@AZERO, R1C10FN
)@@G@@L    AONE, R1C01L    ATWO, R1C02L  ATHREE, R1C03L   ; @F@[@@AFOUR, R1C04FO
)@@G@@L   AFIVE, R1C05L    ASIX, R1C06L  ASEVEN, R1C07L   ; @G@[@@AEIGHT, R1C0FP
)@@G@@8L   ANINE, R1C09L                                     ;    @F@[@@AA, R3FQ
)@@G@@C01L  AB, R4C05L  AC, R4C03L  AD, R3C03L  AE, R2C03L      ; @F@[@@AF, R3FR
)@@G@@C04L  AG, R3C05L  AH, R3C06L  AI, R2C08L  AJ, R3C07L      ; @F@[@@AK, R3FS
)@@G@@C08L  AL, R3C09L  AM, R4C07L  AN, R4C06L  AO, R2C09L      ; @F@[@@AP, R2FT
)@@G@@C10L  AQ, R2C01L  AR, R2C04L  AS, R3C02L  AT, R2C05L      ; @F@[@@AU, R2FU
)@@G@@C07L  AV, R4C04L  AW, R2C02L  AX, R4C02L  AY, R2C06L      ; @C@[@@AZ,R4CFV
)@@G@@01L  ASPACE,R5C0UL  ADOMNO,R3C09U,R1C12U ;@F@[@@ADIERS, R1C01U  AUMINS, FW
)@@G@@R1C02U  ALESS, R1C03U  ALEQ, R1C04U   ;   @F@[@@AEQUL, R1C05U  AGEQ, R1CFX
)@@G@@06U  AGRTR, R1C07U  AUNEQL, R1C08U   ;    @F@[@@ALGOR, R1C09U  ALGAND, RFY
)@@G@@1C10U  ASUBTR, R1C11U  AADD, R1C11L   ;   @F@[@@ADIVID, R1C12U  AMULT, RFZ
)@@G@@1C12L  AROLL, R2C01U  AOMEGA, R2C02U   ;  @F@[@@AMEMBR, R2C03U  ASIZE, RGA
)@@G@@2C04U  ALGNOT, R2C05U  ATAKE, R2C06U   ;  @F@[@@ADROP, R2C07U  AINDEX, RGB
)@@G@@2C08U  ACIRCL, R2C09U  AEXPON, R2C10U   ; @F@[@@AGOTO, R2C11U  ASTORE, RGC
)@@G@@2C11L  AALFA, R3C01U  ACEIL, R3C02U   ;   @F@[@@AFLOOR, R3C03U  AUNDRL, GD
)@@G@@R3C04U  AFUNCT, R3C05U  AMARK, R3C06U   ; @F@[@@AOUTER, R3C07U  AALFAN, GE
)@@G@@R3C08U  AQUAD, R3C09U  ALPAR, R3C10U   ;  @F@[@@ALBRAK, R3C10L  ARPAR, RGF
)@@G@@3C11U  ARBRAK, R3C11L  ACNTIN, R4C01U   ; @E@[@@ACNTNS,R4C02U AUNION,R4CGG
)@@G@@03U AINTER,R4C04U ANCODE,R4C05U  ;  @F@[@@ADCODE, R4C06U  ARESID, R4C07UGH
)@@G@@  ASEMIC, R4C08U  ARAVEL, R4C08L   ;@F@[@@ACOLON, R4C09U  ADECPT, R4C09LGI
)@@G@@  AXPAND, R4C10U  AREDUC, R4C10L   ;@G@[@@AABAR,R3C04U,R3C01L  ABBAR,R3CGJ
)@@G@@04U,R4C05L  ACBAR,R3C04U,R4C03L        ;  @G@[@@ADBAR,R3C04U,R3C03L  AEBGK
)@@G@@AR,R3C04U,R2C03L  AFBAR,R3C04U,R3C04L        ;  @G@[@@AGBAR,R3C04U,R3C05GL
)@@G@@L  AHBAR,R3C04U,R3C06L  AIBAR,R3C04U,R2C08L        ;  @G@[@@AJBAR,R3C04UGM
)@@G@@,R3C07L  AKBAR,R3C04U,R3C08L  ALBAR,R3C04U,R3C09L        ;  @G@[@@AMBAR,GN
)@@G@@R3C04U,R4C07L  ANBAR,R3C04U,R4C06L  AOBAR,R3C04U,R2C09L        ;  @G@[@@GO
)@@G@@APBAR,R3C04U,R2C10L  AQBAR,R3C04U,R2C01L  ARBAR,R3C04U,R2C04L        ;  GP
)@@G@@@G@[@@ASBAR,R3C04U,R3C02L  ATBAR,R3C04U,R2C05L  AUBAR,R3C04U,R2C07L     GQ
)@@G@@   ;  @G@[@@AVBAR,R3C04U,R4C04L  AWBAR,R3C04U,R2C02L  AXBAR,R3C04U,R4C02GR
)@@G@@L        ;  @G@[@@AYBAR,R3C04U,R2C06L  AZBAR,R3C04U,R4C01L  A0BAR,R3C04UGS
)@@G@@,R1C10L        ;  @G@[@@A1BAR,R3C04U,R1C01L  A2BAR,R3C04U,R1C02L  A3BAR,GT
)@@G@@R3C04U,R1C03L        ;  @G@[@@A4BAR,R3C04U,R1C04L  A5BAR,R3C04U,R1C05L  GU
)@@G@@A6BAR,R3C04U,R1C06L        ;  @G@[@@A7BAR,R3C04U,R1C07L  A8BAR,R3C04U,R1GV
)@@G@@C08L  A9BAR,R3C04U,R1C09L        ;  @G@[@@AUPGRD,R4C07U,R3C06U  ADNGRD,RGW
)@@G@@4C07U,R3C05U  ALOG,R2C09U,R2C10U     ;    @G@[@@AFACTL,R3C08U,R4C09L  ASGX
)@@G@@YSTM,R4C05U,R4C06U  AXPOSE,R2C09U,R4C10U     ;  @G@[@@ALGNAN,R1C10U,R2C0GY
)@@G@@5U  ALGNOR,R1C09U,R2C05U  AQQUAD,R3C09U,R3C08U     ;  @G@[@@ALOCK,R3C05UGZ
)@@G@@,R2C05U  ALAMP,R3C07U,R4C03U  AREVER,R2C09U,R4C07U     ;    @F@[@@ARVFIRHA
)@@G@@,R2C09U,R1C11U  ARDFIR,R4C10L,R1C11U ADOLAR,R3C02L,R4C07U ; @F@[@@ALINFDHB
)@@G@@,ASLNFD AXPFIR,R4C10U,R1C11U AAT,R3C01U,R2C09L ABKSP,ASCIBS @#@[@@      HC
)@@G@@ VARBLS  .  @ @[@@T      PROC              .    @G@[@@TBL1*  NAME       HD
)@@G@@       . GENERATE 1ST HALF OF ASCII-APL-ASCII TABLE   @A@[@@       UNLI$HE
)@@G@@T                 .     @^@[@@B DO ASCMAX(1)+1 ,  ;   @F@[@@ +INT(B)+(INHF
)@@G@@T(B)=0)*(B>1)*ASILCD,ASC(B)+(ASC(B)=0)*(B>1)*ASUNDF   @ @[@@       LI$T HG
)@@G@@             .    @ @[@@       END               .    @[@[@@.     @ @[@@HH
)@@G@@T      PROC              .    @I@[@@TBL2*  NAME              . GENERATE HI
)@@G@@ASCII TABLE PORTION WITH OVERLAYS               @A@[@@       UNLI$T     HJ
)@@G@@            .     @A@[@@DLV       FORM      18,18,18,18     @G@[@@C DO MHK
)@@G@@AXCNT(1) , DLV W1(C),ASC(ASCMAX(1)+2*C)+(ASC(ASCMAX(1)+2*C)=0);   @G@[@@HL
)@@G@@ *ASUNDF,W2(C),ASC(ASCMAX(1)+2*C+1)+(ASC(ASCMAX(1)+2*C+1)=0)*ASUNDF     HM
)@@G@@@ @[@@       LI$T              .    @ @[@@       END               .    HN
)@@G@@@[@[@@.     @G@[@@APASCI TBL1              . GENERATE 1ST HALF OF ASCII-HO
)@@G@@APL-ASCII TABLE   @[@@[[/.    @[@@[[.     @G@@[[.  TABLE USED TO TRANSLAHP
)@@G@@TE INTERNAL APL CODE TO IVERSON ASCII OVERLAY   @D@@[[.             AND HQ
)@@G@@IVERSON ASCII TO APL INTERNAL CODE  @[@@[[.     @F@@[[.                THR
)@@G@@HE FIRST 0177 ENTRIES IN THE TABLE LOOK LIKE:   @F@@[[.          INDEX IHS
)@@G@@N WITH ASCII       .      INDEX IN WITH INTERNAL@F@@[[.            AND PHT
)@@G@@ICK UP INTERNAL    .         AND PICK UP ASCII  @G@@[[.     ............HU
)@@G@@......................................................@G@@[[.     .     HV
)@@G@@         .               . ASCII(INTERNAL).                .@G@@[[.     HW
)@@G@@.              .INTERNAL(ASCII). ZERO IF CHAR   . ASCII(INTERNAL).@G@@[[HX
)@@G@@.     .        0     .               .  IS NOT AN     .                .HY
)@@G@@@G@@[[.     .              .               .   OVERSTRIKE   .           HZ
)@@G@@     .@G@@[[.     ......................................................IA
)@@G@@............@[@@[[.     @[@@[[.     @D@@[[.             THE REMAINDER OFIB
)@@G@@ THE TABLE LOOKS LIKE:  @C@@[[.                            ( TWO WORD ENIC
)@@G@@TRIES)@G@@[[.     ......................................................ID
)@@G@@............@G@@[[.     .              .               .ASCII(INTERNAL) IE
)@@G@@. ASCII(INTERNAL).@G@@[[.     . INTERNAL CODE. INTERNAL CODE . ZERO IF CIF
)@@G@@HAR   .                .@G@@[[.     .              .               . IS IG
)@@G@@NOT AN      .                .@G@@[[.     .              .              IH
)@@G@@ . OVERSTRIKE     .                .@G@@[[.     ........................II
)@@G@@..........................................@G@@[[.     .              .  IJ
)@@G@@             . ASCII(INTERNAL). ASCII(INTERNAL).@G@@[[.     .       0   IK
)@@G@@   . INTERNAL CODE . ZERO IF CHAR   .                .@G@@[[.     .     IL
)@@G@@         . OF OVERSTRIKE . IS NOT AN      .                .@G@@[[.     IM
)@@G@@.              .               .  OVERSTRIKE    .                .@G@@[[IN
)@@G@@.     ..................................................................IO
)@@G@@@[@@[[.     @F@[@@OVRTBL TBL2              . GENERATE 2ND HALF (WITH OVEIP
)@@G@@RSTRIKES)   @#@@[[       VARBLS .   @F@@[[APASCI* RES  256         . RESIQ
)@@G@@ERVED SPACE FOR TRANSLATION TABLE   @D@@[[OVRTBL EQU   APASCI+128  . STAIR
)@@G@@RT OF OVER-STRIKE TABLE @E_@@@/. STORAGE SHARED BY SEVERAL SUBROUTINES OIS
)@@G@@F THIS ELEMENT--  @[@@@@.     @ @@@@       VARBLS            .    @C@@@@IT
)@@G@@ASBUFR* RES   133//4      . INPUT-OUTPUT BUFFER @E@@@@ASWDCT RES   1    IU
)@@G@@       . WORDCOUNT FOR INPUT/OUTPUT LINES @[@@@@.     @ @[@@       CONSTIV
)@@G@@S            .    @^@[@@P      FORM    12,6,18  @D@[@@ASLFCW P  0,1,$+1 IW
)@@G@@       . LINE FEED CONTROL WORD     @A@[@@       + 0777012177177   . LINIX
)@@G@@E FEED@C^@@@/. DRIVER FOR INPUT FROM ASCII-APL TERMINALS -  @E@@@@.     IY
)@@G@@ PROMPT IMAGE IS IN CIOBUF, TERMINATED BY AN EOL CHAR @ @@@@       INSTRIZ
)@@G@@S            .    @B@@@@TREASC* SX   X11,TALINK  . SAVE RETURN    @B@@@@JA
)@@G@@       SAVER X2,TASVX2,2 . SAVE X2,X3     @B@@@@       SAVER A14,TA14SV,JB
)@@G@@2 . SAVE A14,A15  @F@@@@TA0010 LA,U  A14,0777770 . SET NO OF CHARS TO COJC
)@@G@@NV TO INFINITE    @E@@@@       LMJ   X11,WREDIA  . TRANSLATE INTERNAL TOJD
)@@G@@ ASCII/APL  @E@@@@       ER    ERR$               . NO ERROR RETURN AS OJE
)@@G@@F YET @E@@@@       SA    A14,TAPSIZ  . SAVE SIZE OF PROMPT IN APLCHARS  JF
)@@G@@@D@@@@       LA,U  A1,ASCBEL   . GET AN ASCII BELL CHAR     @D@@@@      JG
)@@G@@ TNZ   A14         . IS PROMPT ZERO CHARS LONG? @F@@@@       LMJ   X2,0,JH
)@@G@@X2     . YES, BE SURE TERMINAL SIGNALS READY    @E@@@@       LA,U  A1,ASJI
)@@G@@CXON   . GET XON WHICH STARTS TAPE READER @E@@@@       TZ    RCPTIF     JJ
)@@G@@ . IS PAPER TAPE INPUT FLAG UP?     @F@@@@       LMJ   X2,0,X2     . YESJK
)@@G@@, SEND CHAR WHICH TURNS READER ON   @C@@@@       LA,U  A1,ASNULL   . GETJL
)@@G@@ ASCII IIDLE CHAR @C@@@@ DO 3 , LMJ  X2,0,X2     . STASH THREE OF THEM  JM
)@@G@@@C@@@@       LA,U  A0,0,X3     . CURRENT WORD POINTER @D@@@@       ANA,UJN
)@@G@@ A0,ASBUFR   . LESS FWA OF WRITE BUFFER   @D@@@@TA0040 SA,S3 A0,TATPKT  JO
)@@G@@ . SET LENTH IN TREAD PKT     @C@@@@       TIMEON            . TURN INPUJP
)@@G@@T TIMER ON  @C@@@@       LA,U  A0,TATPKT   . GET POINTER TO PKT   @^@@@@JQ
)@@G@@       ER    TREAD$     @D@@@@       SA    A0,ASWDCT   . SAVE NUMBER OF JR
)@@G@@WORDS READ  @B@@@@       TIMOFF            . CLEAR TIMER    @D@@@@      JS
)@@G@@ SZ    RCADDF      . CLEAR ADD FILE READ FLAG   @E@@@@       LA    A0,ASJT
)@@G@@WDCT   . GET CTL WORD RETURNED FROM TREAD$@^@@@@       TEP   A0,(1*/34) JU
)@@G@@@D@@@@       SA    A0,RCADDF   . GO SET ADD FILE FLAG IN RCB@F@@@@      JV
)@@G@@ LA,S1 A0,ASBUFR   . GET FIRST SIXTH WORD OF INPUT BUFFER   @B@@@@      JW
)@@G@@ TE,U  A0,ASCFLG   . IS INPUT ASCII?@B@@@@       TNZ   RCADDF      . IS JX
)@@G@@ADD FLAG ON?@E@@@@       J     TA0100      . LET RFTRAN HANDLE THIS IMAGJY
)@@G@@E     @C@@@@. LINE IS FIELDATA AND IT IS IN AN ADD FILE     @E@[@@      JZ
)@@G@@ SZ    READDF      . SET FLAG IN FDINOU TO SKIP READ$.@D@[@@       LA   KA
)@@G@@ A0,ASWDCT   . GET CTL WORD FROM READ$    @E@[@@       SA    A0,REASAV  KB
)@@G@@ . SAVE IT WHERE FDINOU CAN GET IT  @^@[@@       LMJ   X11,TREAFD @E@@[[KC
)@@G@@       LA    A0,ASWDCT   . GET STATUS WD LEFT BY OUR READ$  @E@@[[      KD
)@@G@@ LMJ   X11,TREAFA  . CALL FDINOU TO CONVERT THIS IMAGE@D^@@@       ER   KE
)@@G@@ ERR$        . BETTER NEVER GET EOF EXIT! @D@[@@       J     TA0200     KF
)@@G@@ . GO EXIT FROM READ ROUTINE  @D@@][       J     TA0300      . GO EXIT FKG
)@@G@@ROM READ ROUTINE  @F[@@@. NOW SET UP TO CONVERT IMAGE JUST READ TO APLCHKH
)@@G@@ARS IN CIOBUF     @G@@@@TA0100 LA    A0,TAPSIZ   . GET LENTH OF ORIGINALKI
)@@G@@ PROMPT IN APL CHARS    @D@@@@       DSL   A0,2        . DIV BY 4 TO GETKJ
)@@G@@ WORDCT     @E@@@@       LX,U  X3,CIOBUF,A0 . PUT START WORD IN STASH REKK
)@@G@@G     @ @@@@       LXI,U X3,1        .    @C@@@@       SSL   A1,36-2    KL
)@@G@@ . LINE UP CHAR POINTER @F@@@@       LMJ   X2,*AQINIT,A1 . INITIALIZE LIKM
)@@G@@NKREG FOR CIOBUF STASH  @E@@@@       LMJ   X11,RFTRAN  . TRASLATE IMAGE KN
)@@G@@TO INTERNAL CODE  @F@@@@       J     TA0010      . OOPS, CHAR ERR- REPROKO
)@@G@@MPT WITH GOOD PART@D@[@@TA0140 LA    A0,ASLFCW   . GET LINE FEED CTL WORKP
)@@G@@D     @B@[@@       ER    PRINT$      . SEND LINE FEED @E@@[[TA0140 LA   KQ
)@@G@@ A0,TFCCTL   . GET PRINT$ FOR CARRIER CONTROL   @F@@[[       ER    PRINTKR
)@@G@@$      . SEND CR (IN CASE OF TYPEAHEAD) AND LF  @F@[@@. CHECK WHETHER OUKS
)@@G@@TPUT SHOULD BE COPIED TO AN ALTERNATE FILE -    @ @[@@TA0200 NOP        KT
)@@G@@       .    @ ^@@@. NORMAL EXIT            .    @ @@@@TA0300 LX    X11,TKU
)@@G@@ALINK  .    @B@@@@       LOADR X2,TASVX2,2 . RESTORE X2,X3  @C@@@@      KV
)@@G@@ LOADR A14,TA14SV,2 . RESTORE A14,A15     @B@@@@       J     1,X11      KW
)@@G@@ . NORMAL RETURN  @]@@@@. EOF EXIT  @^@@@@TA0400 LX    X11,TALINK @B@@@@KX
)@@G@@       LOADR X2,TASVX2,2 . RESTORE X2     @C@@@@       LOADR A14,TA14SV,KY
)@@G@@2 . RESTORE A14,A15     @#@@@@       J     0,X11@[@@@@.     @#@@@@      KZ
)@@G@@ VARBLS  .  @B@@@@TALINK EQUF  $,,H1       . RETURN ADDR    @D@@@@TAPSIZLA
)@@G@@ EQUF  $,,H2       . PROMPT SIZE IN APLCHARS    @ @@@@       RES   1    LB
)@@G@@       .    @B@@@@TA14SV RES   2           . SAVE A14,A15   @C@@@@TASVX2LC
)@@G@@ RES   2           . SAVE LOCN OF X2,X3   @#@@@@       VARCON  .  @#@@@@LD
)@@G@@TATPKT +  0,ASBUFR@^@@@@       +  TA0400,ASBUFR @#@@[[       CONSTS  .  LE
)@@G@@@C@@[[TFCCTL +1,$+1  . PRINT$ CONTROL WORD FOR...     @F@@[[       +ASCFLF
)@@G@@LG,ASCRRT,ASLNFD,ASNULL . CR-LF AFTER ACCEPTING INPUT @G@@@@/ . WRITAS -LG
)@@G@@ THIS ROUTINE REPLACES WRITFD IF SPECIAL ASCII TERMINALS    @F@@@@.     LH
)@@G@@   ARE USED . IT'S ADDR IS PUT IN THE RUN CTL BLOCK IF THE  @C@@@@.     LI
)@@G@@   Q - OPT IS PRESENT AT SIGN-ON TIME.    @[@@[[.     @F@@[[P      PROC LJ
)@@G@@ . PROC TO CLOSE LINE IMAGES WITH CR-LF OR BLANKS---  @B@@[[LICLOS* NAMELK
)@@G@@ . NORMAL LINE TERMINALTION   @ @@[[       UNLI$T            .    @ @@[[LL
)@@G@@XLF    EQU   ASLNFD      .    @ @@[[XCR    EQU   ASCRRT      .    @ @@[[LM
)@@G@@XXF    EQU   ASXOFF      .    @^@@[[XNU    EQU   ASNULL     @C@@[[      LN
)@@G@@ LA,U  A1,XLF      . LINE FEED (OR SPACE) @ @@[[       LMJ   X2,0,X2    LO
)@@G@@ .    @B@@[[       LA,U  A1,XCR      . CARRIAGE RETURN@A@@[[       LMJ  LP
)@@G@@ X2,0,X2     . STASH IT @A@@[[       LA,U  A1,XXF      . XOFF     @ @@[[LQ
)@@G@@       LMJ   X2,0,X2     .    @ @@[[       LA,U  A1,XNU      .    @G@@[[LR
)@@G@@       LA,U  A2,3        . NO. OF CHARS MINUS 1 TO FILL TO WORD BOUNDARYLS
)@@G@@@E@@[[       TNZ   RCPTCH      . IS SPECIAL PADDING REQUESTED?    @ @@[[LT
)@@G@@       J     LI0010      . NO @D@@[[       LA    A3,A13      . PICK UP CLU
)@@G@@HARACTER COUNT    @C@@[[       LA,U  A2,0        . SET UP FOR DIVIDE    LV
)@@G@@@F@@[[       DI    A2,RCPTCH   . DIVIDE BY NO. OF PRINT CHARS SPECIFIED LW
)@@G@@@G@@[[       MSI   A2,RCPDCH   . MULTIPLY BY NUMBER OF PAD CHARS SPECIFILX
)@@G@@ED    @F@@[[       AA    A13,A2      . INCREASE CHAR COUNT BY NO. OF PADLY
)@@G@@ CHARS@G@@[[       AA,U  A2,3        . NO. OF CHARS MINUS 1 TO FILL TO WLZ
)@@G@@ORD BOUNDARY@A@@[[LI0010 LMJ   X2,0,X2     . STASH EM @ @@[[       JGD  MA
)@@G@@ A2,LI0010   .    @#@@[[       LI$T  .    @#@@[[       END   .    @[@@[[MB
)@@G@@.     @G@@[[. PROC TO OUTPUT ASCII-APLCODE IMAGES-- NOTE: NOT USED FOR PMC
)@@G@@ROMPTING    @#@@[[P      PROC  .    @B@@[[ASCPRT* NAME . PRINT$ PACKET IMD
)@@G@@S IN A0--   @ @@[[       UNLI$T            .    @F@@[[       SA    A0,RCME
)@@G@@ALTP   . SAVE PACKET FOR POSSIBLE ALT PRINT     @C@@[[       TNZ   RCOUTMF
)@@G@@I      . IS OUTPUT INHIBITED? @D@@[[       ER    PRINT$      . NO, XMIT MG
)@@G@@FUNNYMODE IMAGE   @E@@[[        LA,U    A0,RCALTP     . GET ALT FILE PACMH
)@@G@@KET ADDR    @E@@[[        TZ      RCALTF        . ARE ALT PRINTS TURNED MI
)@@G@@ON?   @D@@[[       ER    APRNTA$     . BANG!! SMASH!!!! ZOWIE!!!!!@#@@[[MJ
)@@G@@       LI$T  .    @#@@[[       END   .    @[@@[[.     @#@@@@       INSTRMK
)@@G@@S   . @ @@@@WRITAS* SX   X11,WSLINK  .    @C@@@@       SZ    WSMKFL     ML
)@@G@@ . TURN OFF MARK FLAG   @^@@@@       J     WS0010     @ @@@@WRMKAS* SX  MM
)@@G@@ X11,WSLINK  .    @C@@@@       SX    X11,WSMKFL  . TURN ON MARK FLAG    MN
)@@G@@@C@@@@       SA    A0,WSMCOL   . SAVE MARK LOCATION   @B@@@@WS0010 SAVERMO
)@@G@@ A13,WSA13S,2 . SAVE A13,A14  @B@@@@       SAVER X2,WSXRSV,4 . SAVE X2-XMP
)@@G@@5     @ @@@@. INITIALIZE EDITING ROUTINE  @C@@@@       LA,U  A14,132    MQ
)@@G@@ . MAX NO TO CONVERT    @C@@@@       LMJ   X11,WREDIA  . GO CONVERT BUFFMR
)@@G@@ER    @E@@@@       ER    ERR$               . NO ERROR EXIT EXISTS NOW  MS
)@@G@@@A@[@@       LA,U  A1,ASLNFD   . LINE FEED@A@[@@       LMJ   X2,0,X2    MT
)@@G@@ . STASH IT @A@[@@       LA,U  A1,ASCRRT   . CAR RET  @A@[@@       LMJ  MU
)@@G@@ X2,0,X2     . STASH IT @B@[@@       LA,U  A1,ASXOFF   . X-OFF CHARACTERMV
)@@G@@@A@[@@       LMJ   X2,0,X2     . STASH IT @A@[@@       LA,U  A1,ASNULL  MW
)@@G@@ . PAD CHAR @A@[@@  DO 4 , LMJ X2,0,X2     . STASH EM @E@@[[       LICLOMX
)@@G@@S            . CLOSE LINE IMAGE WITH CR-LF-ETC. @BC@@@       LA    A0,A1MY
)@@G@@3      . GET CHAR COUNT @B@@@@       AA,U  A0,3        . CORRECT COUNT  MZ
)@@G@@@E@@@@       DSL   A0,2        . DIVIDE BY 4 TO GET WORD COUNT    @D@@@@NA
)@@G@@       TE,U  A1,0        . INCREASE WORD COUNT BY ONE?@D@@@@       AA,U NB
)@@G@@ A0,1        . YES - ADD ONE TO WORD COUNT@ @@@@. NOW PRINT CONVERTED LINC
)@@G@@NE    @C@@@@WS0015 LSSL  A0,18       . ALIGN WORD COUNT     @A@@@@      ND
)@@G@@ LXM,U A0,ASBUFR   . FORM PKT @ @[@@       ER    PRINT$      .    @C@@[[NE
)@@G@@       ASCPRT            . PRINT ASCII LINE     @E[@@@       TNZ   WSMKFNF
)@@G@@L      . WAS THIS A TYPE AND MARK OPN?    @B@@@@       J     WS0100     NG
)@@G@@ . NO- GET OUT    @C@@@@WS0016 SZ    WSSPBF  . CLEAR SPLIT BUFFER FLAG  NH
)@@G@@@B@@@@       LA    A13,WSMCOL  . COL OF MARK    @E@@@@       TNG,U A13,8NI
)@@G@@5      . WILL IT FIT IN ONE PRINT$ BUFFER?@B@@@@       J     WS0018     NJ
)@@G@@ . YES- GO DOIT   @F@@@@       ANA,U A13,87      . NO - COMPUTE REMAININNK
)@@G@@G BLANKS TO GO    @E@@@@       SA    A13,WSMCOL  . SAVE BLANKS TO GO FORNL
)@@G@@ NEXT PRINT$@F@@@@       LA,U  A13,87      . COUNT FOR FULL BUFFER FULL NM
)@@G@@OF BLANKS   @C@@@@       SX    X11,WSSPBF  . SET SPLIT BUFFER FLAG@C@@@@NN
)@@G@@WS0018 LX    X2,PUTARY+ZMOCHR . SET UP STASH    @C@@@@       LX    X3,(+NO
)@@G@@1,ASBUFR) . AND BUFFER ADDR   @B@@@@       LA,U  A1,ASCFLG   . ASCII FLANP
)@@G@@G     @A@@@@       LMJ   X2,0,X2     . STASH IT @ @@@@. NOW MOVE BLANKS NQ
)@@G@@TO OUTBUF   @A@@@@       LA,U  A1,ASBLNK   . BLANK    @ @@@@WS0020 JNGD NR
)@@G@@ A13,WS0030  .    @A@@@@       LMJ   X2,0,X2     . STASH IT @ @@@@      NS
)@@G@@ J     WS0020      .    @D@@@@WS0030 TZ    WSSPBF      . IS SPLIT BUFFERNT
)@@G@@ FLAG ON?   @E@@@@       J     WS0050      . YES- GO DO PRINT$ ON FIRST NU
)@@G@@HALF  @F@@@@       LA,U  A1,ASMARK   . NO- GET OUT WERE DONE WITH SPLIT NV
)@@G@@IMAGE @A@@@@       LMJ   X2,0,X2     . STASH IT @A@[@@       LA,U  A1,ASNW
)@@G@@LNFD   . LINE FEED@A@[@@       LMJ   X2,0,X2     . STASH IT @A@[@@      NX
)@@G@@ LA,U  A1,ASCRRT   . CAR RET. @A@[@@       LMJ   X2,0,X2     . STASH IT NY
)@@G@@@A@[@@       LA,U  A1,ASNULL   . PAD CHAR @A@[@@  DO 3 , LMJ X2,0,X2    NZ
)@@G@@ . STASH EM @C@@[[       LICLOS            . CLOSE LINE WITH CR-LF@BA@@@OA
)@@G@@       SZ    WSMKFL      . CLEAR MARK FLAG@C@@@@. COMPUTE WORD COUNT ANDOB
)@@G@@ GO PRINT THE IMAGE     @ @@@@WS0050 LA    A0,X3       .    @C@@@@      OC
)@@G@@ ANA   A0,(+1,ASBUFR) . COMPUTE WD COUNT  @B@@@@       J     WS0015     OD
)@@G@@ . TRANSMIT LINE  @ @@@@WS0100 LX    X11,WSLINK  .    @B@@@@       LOADROE
)@@G@@ A13,WSA13S,2 . SAVE A13,A14  @B@@@@       LOADR X2,WSXRSV,4  . RESTORE OF
)@@G@@X2-X5 @A@@@@       J     0,X11       . RETURN   @ @[@@WS0999 ERROR YSYSTOG
)@@G@@M      .    @A@@[[WS0999 EQU   0           . SYSERR   @#[@@@       VARBLOH
)@@G@@S   . @B@@@@WSLINK EQUF  $,,H1       . RETURN ADDR    @A@@@@WSMKFL EQUF OI
)@@G@@ $,,H2       . MARK FLAG@ @@@@       RES   1           .    @E@@@@WSMCOLOJ
)@@G@@ EQUF  $,,H1       . COLUMN NUMBER IN WHICH MARK GOES @F@@@@WSSPBF EQUF OK
)@@G@@ $,,H2       . SPLIT BUFFER FLAG FOR TYPE AND MARK    @ @@@@       RES  OL
)@@G@@ 1           .    @D@@@@WSA13S RES   2           . SAVE LOCATIONS FOR A1OM
)@@G@@3,A14 @C@@@@WSXRSV RES   4           . SAVE LOCN FOR X2 - X5@F@@@@/. ROUON
)@@G@@TINE TO CONVERT APLCODE TO ASCII-OVERLAY. IF NECESSARY, THIS@G@@@@. ROUTOO
)@@G@@INE WILL PRINT$ A PARTIAL IMAGE, BUT THE LAST PART OF THE IMAGE   @G@@@@OP
)@@G@@. WILL BE LEFT IN THE BUF.  THE CR-LF SEQUENCE IS NOT ADDED SINCE THIS  OQ
)@@G@@@#@@@@. MAY BE A TREAD$ @[@@@@.     @D@@@@. ENTRY CONDITIONS -    X5=(+1OR
)@@G@@,BUF) FOR SOURCE STRING @G@@@@.                      A14=MAX NO OF CHAR OS
)@@G@@TO CONVERT (ALSO STOPS AT EOL)@F@@@@. EXIT  CONDITIONS      X2,X3 SET TOOT
)@@G@@ STASH NEXT CHAR IN ASCIBUF   @D@@@@.                      A14=NO OF APLOU
)@@G@@ CHARS TRANSLATED @F@@@@.                      A13= NO OF CHAR (ASCII) SOV
)@@G@@TORED INCL 077    @#@@@@       INSTRS  .  @ @@@@WREDIA SX    X11,WALINK OW
)@@G@@ .    @C@@@@       SA    A14,WACHCT  . SAVE NO OF CHARS     @E@@@@      OX
)@@G@@ LX    X4,GLFTBL+ZMOCHR . SET FETCH CHREG POINTER     @ @@@@       LX   OY
)@@G@@ X5,(+1,CIOBUF) . @C@@@@. INITIALIZE STASH IN ASCII-FUNNYMODE OUTPUT BUFOZ
)@@G@@@D@@@@WA0010 LX    X2,PUTARY+ZMOCHR . SET STASH POINTER     @D@@@@      PA
)@@G@@ LX    X3,(+1,ASBUFR)   . AND BUFFER ADDRESS    @G@@@@       LA,U  A13,WPB
)@@G@@RBMAX-3     . SET MAX NUMBER OF CHARS BUF WILL HOLD   @D@@@@       LA,U PC
)@@G@@ A1,ASCFLG        . GET FUNNYMODE FLAG    @D@@@@       LMJ   X2,0,X2    PD
)@@G@@ . STORE IT AS FIRST CHAR     @C@@@@. NOW MOVE CHARS FROM APLCODE BUF TOPE
)@@G@@ OUTBUF     @D@@@@WA0100 JGD   A13,WA0110  . IF ROOM,GO GET NEXT CHAR   PF
)@@G@@@C@@@@       LA,U  A1,ASNULL   . ELSE GET ASCII NULL  @B@@@@ DO 3 , LMJ PG
)@@G@@ X2,0,X2     . PAD OUTBUF     @F@@@@       LA    A0,WAPCTL   . GET PRINTPH
)@@G@@$ CONTROL WORD FOR FULL BUFFER@C@[@@       ER    PRINT$      . TRANSMIT PI
)@@G@@THE BUFFER  @ @@[[       ASCPRT            .    @F[@@@       J     WA001PJ
)@@G@@0      . AND REINITIALIZE TO START NEW BUFLOAD  @ @@@@. THERE IS ROOM FOPK
)@@G@@R NEXT CHAR @E@@@@WA0110 JNGD  A14,WA0200  . IF INPUT STRING EXHAUSTED, PL
)@@G@@QUIT  @C@@@@       LMJ   X4,0,X4     . ELSE FETCH NEXT CHAR @F@@@@      PM
)@@G@@ JE,U  A1,AEOL WA0200   . QUIT IF IT'S AN END OF LINE FLAG  @C@@@@      PN
)@@G@@ LA,H2 A1,APASCI,A1     . GET TRANSLATION @F@@@@       JG,U  A1,01000 WAPO
)@@G@@0130  . IF NOT OVERSTRIKE, GO STASH IT    @^@@@@. CHAR IS AN OVERSTRIKE PP
)@@G@@@B@@@@WA0120 DSL   A1,9        . SAVE 2ND IN A2 @A@@@@       LMJ   X2,0,PQ
)@@G@@X2     . STORE IT @A@@@@       JGD   A13,$+1     . COUNT IT @D@@@@      PR
)@@G@@ LA,U  A1,ASCIBS   . GET AN ASCII BACKSPACE     @A@@@@       LMJ   X2,0,PS
)@@G@@X2     . STORE IT @A@@@@       JGD   A13,$+1     . COUNT IT @ @@@@      PT
)@@G@@ LA,U  A1,0        .    @B@@@@       LDSL  A1,9        . GET SECOND CHARPU
)@@G@@@A@@@@. PUT NEXT CHAR INTO ASCII IMAGE    @A@@@@WA0130 LMJ   X2,0,X2    PV
)@@G@@ .STORE IT  @C@@@@       J     WA0100      . GO FETCH NEXT APLCHAR@ @@@@PW
)@@G@@. END OF STRING ENCOUNTERED   @ @@@@WA0200 LNA   A13,A13     .    @D@@@@PX
)@@G@@       AA,U  A13,WRBMAX-3 . ASCII CHAR COUNT INCL 077 @ @@@@       LNA  PY
)@@G@@ A14,A14     .    @C@@@@       AA    A14,WACHCT  . APL CHAR CONVERTED   PZ
)@@G@@@B@@@@       ANA,U A14,1       . DON'T COUNT EOL@ @@@@       LX    X11,WQA
)@@G@@ALINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    @[@@@@.     QB
)@@G@@@#@@@@       VARBLS  .  @#@@@@WALINK RES   1    @F@@@@WRBMAX EQU   88   QC
)@@G@@       . MAX NUMBER OF CHARS BUFFER WILL HOLD   @B@@@@WACHCT RES   1    QD
)@@G@@       . CHAR COUNT     @#@@@@       CONSTS  .  @^@@@@WAPCTL +     22,ASQE
)@@G@@BUFR  @[@@@@.     @ @@@@/ . PROCS USED BY RFTRAN --   @#@@@@P      PROC QF
)@@G@@   .  @#@@@@GETCUR* NAME   .  @#@@@@       UNLI$T  .  @D@@@@       SA   QG
)@@G@@ A1,A2       . MOVE NEW CHAR IN A1 TO A2  @G@@@@       LMJ   X2,1,X2    QH
)@@G@@ . PICK UP PREVIOUSLY STORED CHAR AND PUT IN A1 @D@@@@       LDSC  A1,36QI
)@@G@@       . SWITCH A1 AND A2 LEAVING:  @E@@@@       LI$T              . A1=QJ
)@@G@@NEW CHAR        A2=OLD CHAR   @ @@@@       END               .    @ @@@@QK
)@@G@@.                        .    @ @@@@.                        .    @[@@@@QL
)@@G@@.     @#@@@@P       PROC   .  @#@@@@BACKSP* NAME   .  @#@@@@       UNLI$QM
)@@G@@T     @D@@@@       LMJ   X2,0,X2     . BACKUP ONE CHAR POSITION   @F@@@@QN
)@@G@@       ANA,U A15,1       . MOVE CURRENT COL  POINTER BACK BY ONE  @E@@@@QO
)@@G@@       TLE,U A15,0       . HAVE WE BACKSPACED OFF THE END?  @G@@@@      QP
)@@G@@ LA,U  A15,0       . YES CORRECT IT COL 0 IS AS FAR BACK AS WE GO @ @@@@QQ
)@@G@@       LI$T              .    @ @@@@       END               .    @[@@@@QR
)@@G@@.     @#@@@@P      PROC    .  @#@@@@ASTASH* NAME   .  @#@@@@       UNLI$QS
)@@G@@T  .  @B@@@@       LMJ   X2,3,X2     . STASH VALUE    @F@@@@       AA,U QT
)@@G@@ A15,1       . MOVE CURRENT COL POINTER FOWARD BY ONE @F@@@@       TG   QU
)@@G@@ A15,A13     .  A13 HAVE FARTHEST COL STORED IN TO?   @C@@@@       LA   QV
)@@G@@ A13,A15     . NO - SO MAKE IT SO   @]@@@@       LI$T @]@@@@       END  QW
)@@G@@@[@@@@.     @#@@@@P      PROC    .  @#@@@@GETCOL* NAME   .  @#@@@@      QX
)@@G@@ UNLI$T  .  @E@@@@       LA    A1,A15      . PUT CURRENT  COL POSITION IQY
)@@G@@N A1  @#@@@@       LI$T    .  @#@@@@       END     .  @[@@@@.     @[@@@@QZ
)@@G@@.     @[@@@@.     @[@@@@.     @#@@@@P      PROC    .  @#@@@@CURCOL* NAMERA
)@@G@@   .  @#@@@@       UNLI$T     @C@@@@       LA    A0,RFICOL   . GET ILEGARB
)@@G@@L CHAR FLAG @B@@@@       AA,U  A0,2        . FUDGE FACTOR   @G@@@@      RC
)@@G@@ TG    A15,A0      . TEST TO SEE IF LEFT MOST ILCHAR IS TO RIGHT  @ @@@@RD
)@@G@@       J     $+2         .NO  @B@@@@       SNA   A15,RFICOL  . YES CLEARRE
)@@G@@ FLAG @ @@@@       LI$T              .    @]@@@@       END  @F@@@@/. THIRF
)@@G@@S ROUTINE ACCEPTS IMAGES IN THE FULL APL OVERLAY OF AN ASCII@#@@@@.  KEYRG
)@@G@@BOARD -     @G@@@@.      THE IMAGE IS CONSTRUCTED IN THE APLCODE BUFFER.RH
)@@G@@ ALTHOUGH BACK-   @G@@@@.  SPACE CHARS CAN OVERWRITE THE PROMPT, IT IS NRI
)@@G@@OT LOST, AS IT HAS BEEN @G@@@@.  PREVIOUSLY XLATED INTO THE TREAD$/PRINTRJ
)@@G@@$ BUFFER BEFORE BEING ISSUED. @ @@@@.     ENTRY CONDITIONS ARE:   @G@@@@RK
)@@G@@.        (1) BUFMAN PTRS (X2,X3) ARE SET TO STASH FROM A1 INTO NEXT POS RL
)@@G@@@F@@@@.        (2) INITIAL TREAD$ HAS BEEN DONE; IMAGE IS IN 'ASBUFR'   RM
)@@G@@@^@@@@.     EXIT  CONDITIONS -@F@@@@.         0,X11  RE-ISSUE PROMPT ANDRN
)@@G@@ TREAD$, A CHAR ERROR OCCURED @ @@@@.         1,X11  NORMAL RETURN@[@@@@RO
)@@G@@.     @[@@@@.     @#@@@@       INSTRS  .  @ @@@@RFTRAN* SX   X11,RTLINK RP
)@@G@@ .    @E@@@@       SZ    RFRDFG      . CLEAR CONTINUATION READ FLAG     RQ
)@@G@@@C@@@@       SZ    QESCAP      . CLEAR ESCAPE FLAG    @G@@@@       LA,U RR
)@@G@@ A0,10       . MAKE SURE WE STORE NEG. IN RFPSOF & RFICOL   @D@@@@      RS
)@@G@@ SNA   A0,RFPSOF   . CLEAR POSSIBLE O-U-T FLAG  @B@@@@       SX    X2,RTRT
)@@G@@SVX2   . SAVE POINTERS  @B@@@@       SX    X3,RTSVX3   . SAVE POINTERS  RU
)@@G@@@D@@@@RT0010 SNA   A0,RFICOL   . TURN OFF ILCHAR COL FLAG   @ @@@@. SET RV
)@@G@@FETCH TO  START OF INBUF@A@@@@RT0020 LX    X4,GLFTBL+ZMOCHR .     @A@@@@RW
)@@G@@       LX    X5,(+1,ASBUFR)   .     @E@@@@       LA    A14,ASWDCT  . NUMRX
)@@G@@BER OF WORDS READ BY TREAD$   @D@@@@       LSSL  A14,2       . TIMES 4=NRY
)@@G@@O OF CHAR TO SCAN @F@@@@       TZ    RFRDFG      . SKIP THIS CODE IF CONRZ
)@@G@@TINUATION READ    @ @@@@       J     RT0027      .    @E@@@@       SA   SA
)@@G@@ A14,RTCHEX  . SAVE NUMBER OF CHARS TO EXAMINE  @^@@@@       LA,U  A1,ASSB
)@@G@@PACE  @ @@@@       LNA   A14,TAPSIZ  .    @G@@@@       AA,U  A14,133    SC
)@@G@@ . NUMBER OF BLANKS TO FILL EDITTING BUFFER     @ @@@@RT0022 JNGD  A14,RSD
)@@G@@T0025  .    @D@@@@       LMJ   X2,3,X2     . INITIALIZE BUFFER TO SPACESSE
)@@G@@@ @@@@       J     RT0022      .    @D@@@@RT0025 LA    A14,RTCHEX  . NUMSF
)@@G@@BER OF CHAR TO EXAMINE  @F@@@@       LA    A15,TAPSIZ  . SET COL POS POISG
)@@G@@NTER TO PROMPT SIZE     @E@@@@       LA    A13,TAPSIZ  . POSITION OF FARSH
)@@G@@THEST CHAR STORED @B@@@@       LX    X3,RTSVX3   . LOAD POINTERS  @B@@@@SI
)@@G@@       LX    X2,RTSVX2   . LOAD POINTERS  @E@@@@RT0027 SZ    RFRDFG     SJ
)@@G@@ . CLEAR READ CONTINUATION FLAG     @F@@@@       JNGD  A14,RT0030  . COUSK
)@@G@@NT FIRST CHAR- IF NO CHARS, SYSERR  @B@@@@       LMJ   X4,0,X4     . GETSL
)@@G@@ 1ST CHAR   @ @@@@       SSL   A1,3        .    @B@@@@       TNE,U A1,07SM
)@@G@@7      . IS IMAGE ASCII?@C@@@@       J     RT0100      . YES - GO PROCESSN
)@@G@@S     @D@@@@. SEND 'TYPE SHIFT OUT (CTL N)' AND GO RE-READ IMAGE  @C@@@@SO
)@@G@@RT0030 LA    A0,RTSOPK   . NO -  GET MESSAGE    @B@@@@       ER    PRINTSP
)@@G@@$      . AND PRINT IT   @B@@@@       LA,U  A1,AEOL     . PUT BACK EOL   SQ
)@@G@@@C@@@@       SA,Q1 A1,CIOBUF   . PUT EOL IN CIOBUF    @ @@@@       SZ   SR
)@@G@@ BFEOLP      .    @D@@@@       LX    X11,RTLINK  . GO RE-READ IMAGE AGAISS
)@@G@@N     @A@@@@       J     0,X11       . RETURN   @[@@@@.     @[@@@@.     ST
)@@G@@@B@@@@. PROCESS NEXT CHAR OF FUNNYMODE IMAGE    @G@@@@RT0100 JNGD  A14,RSU
)@@G@@T0300  . IF NO MORE CHARS, GO READ IMAGE CONTINUATION @ @@@@. THERE IS ASV
)@@G@@NOTHER CHAR TO GET@C@@@@       TNE,U A15,133     . STORING 133 CHAR?    SW
)@@G@@@G@@@@       J     RT0210      . YES - CLOSE IMAGE AS IF CAR RET WAS SEESX
)@@G@@N     @A@@@@RT0120 LMJ   X4,0,X4     . GET IT   @E@@@@       JG,U  A1,04SY
)@@G@@0 RT0200 . CONTRL CHAR, SPECIAL HANDLING  @E@@[[       JE,U  A1,ASCRUB RSZ
)@@G@@T0100 . IF RUBOUT IGNORE THIS CHAR  @F@@@@       LA,H1 A1,APASCI,A1 . ALTA
)@@G@@FAMERIC. GET APL CODE FOR THIS CHAR @D@@@@       JE,U  A1,ASILCD RT0170 TB
)@@G@@. IS THIS CHAR ALLOWED? @D@@@@       LA    A0,RFPSOF   . GET POSSIBLE O-TC
)@@G@@U-T FLAG    @G@@@@       JN    A0,RT0130   . IF POSSIBLE O-U-T FLAG NOT TD
)@@G@@SET SKIP TESTS    @B@@@@. TEST TO SEE IF O-U-T HAS BEEN FOUND     @D@@@@TE
)@@G@@       TNE   A0,A15      . SAME COL AS O-U FOUND?     @B@@@@       TE,U TF
)@@G@@ A1,AT       . 'T' FOUND?     @E@@@@       J     RT0125      . NO CLEAR TG
)@@G@@O-U FLAG AND PROCEED    @C@@@@       SX    X11,QESCAP  . YES - WE HAVE OTH
)@@G@@-U-T  @^@@@@       LX    X11,RTLINK @B@@@@       J     1,X11       . NORTI
)@@G@@MAL EXIT    @D@@@@RT0125 SNA   A0,RFPSOF   . CLEAR POSSIBLE O-U-T FLAG  TJ
)@@G@@@B@@@@. APL CHAR IN A1 - CHECK OVERSTRIKES, ETC.@F@@@@RT0130 GETCUR     TK
)@@G@@       . BRING CURRENT CHAR IN THIS POSN TO A2  @C@@@@       TNE,U A1,ASTL
)@@G@@PACE   . IS NEW CHAR A SPACE  @E@@@@       LDSC  A1,36       . YES, SHUFTM
)@@G@@FLE AS IF OLD WERE SPACE@D@@@@       TE,U  A2,ASPACE   . IS 'OLD' CHAR ATN
)@@G@@ SPACE?     @E@@@@       TNE   A1,A2       . NO- IS CHAR STRUCK OVER ITSTO
)@@G@@ELF?  @D@@@@       J     RT0180      . IF EITHER GO STASH NEW CHAR@B@@@@TP
)@@G@@. THIS IS SOME KIND OF OVERSTRIKE ---     @D@@@@RT0140 TG    A1,A2      TQ
)@@G@@ . IS LARGER CHAR ON RIGHT?   @B@@@@       LDSC  A1,36       . NO FORCE TR
)@@G@@IT    @G@@@@       LA    A0,A1       . PREPARE TO TEST ALFA CHAR IN A0 FTS
)@@G@@OR TEST     @D@@@@       TALFA             . IS SMALLER ALPHABETIC?     TT
)@@G@@@E@@@@       J     RT0150      . NO, NOT UL SO GO CHECK TABLES    @F@@@@TU
)@@G@@       TLE,U A1,AABAR    . IS SMALLER CHAR ALREADY UNDERLINED?    @C@@@@TV
)@@G@@       AA,U  A1,AABAR-AA . NO, UNDERLINE IT     @E@@@@       TE,U  A2,AUTW
)@@G@@NDRL   . WAS LARGER CHAR AN UNDERLINE?    @E@@@@       TNE   A1,A2      TX
)@@G@@ . NO, WAS CHAR STRUCK OVER ITSELF? @E@@@@       J     RT0180      . IF TY
)@@G@@EITHER, GO STASH CHAR IN A1   @ @@@@. TEST FOR ESCAPE (O-U-T) FLAG@D@@@@TZ
)@@G@@       TNE,U A1,AOBAR    .  IS SMALLER CHAR A 'O'     @C@@@@       TE,U UA
)@@G@@ A2,AU       . IS SECOND CHAR A 'U' @G@@@@       J     RT0145      . ALPUB
)@@G@@HEBETIC OVRSTK SOMTHING GO LOOK IN TABLE  @G@@@@       SA    A15,RFPSOF UC
)@@G@@ . STORE PRESENT COL NO. IN POSSIBLE OUT FLAG   @E@@@@       J     RT017UD
)@@G@@0      . BUT NON THE LESS TREAT AS ILCHAR @C@@@@. CHAR IS COMPOUND- PACKUE
)@@G@@ UP AND LOOK IN TABLE   @C@@@@RT0145 ANA,U A1,AABAR-AA . REMOVE UNDERLINUF
)@@G@@E     @^@@@@RT0150 LSSL  A2,36-9    @#@@@@       LDSL  A1,9 @E@[@@      UG
)@@G@@ LR,U  R1,OVRNUM(1) . NUMBER OF OVERSTRIKES IN TABLE  @E@@][       LR,U UH
)@@G@@ R1,OVRNUM    . NUMBER OF OVERSTRIKES IN TABLE  @A[@@@       LA    A2,(+UI
)@@G@@2,OVRTBL-1) .     @C@@@@       SE,H1 A1,1,*A2    . LOOK FOR THE CHAR    UJ
)@@G@@@D@@@@       J     RT0170      . ILCHAR NOT FOUND IN TABLE  @D@@@@      UK
)@@G@@ LA,Q2 A1,0,A2     . GET COMPOUND CHAR CODE     @B@@@@       J     RT018UL
)@@G@@0      . AND GO STASH IT@^@@@@. ILLEGAL OVERSTRIKE ---@E@@@@RT0170 GETCOUM
)@@G@@L            . PICK UP CURRENT COL NO (TO AI)   @D@@@@       LA    A2,RFUN
)@@G@@ICOL   .   AND CURRENT ILCHAR FLAG  @F@@@@       JN    A2,$+2      . IF UO
)@@G@@ILCHAR FLAG OFF,ALWAYS TURN IT ON   @C@@@@       TG    A2,A1       . IS UP
)@@G@@OLD COL .GT. NEW? @E@@@@       SA    A1,RFICOL   . YES, STASH SMALLER ILUQ
)@@G@@CHAR COLNUM @C@@@@       LA,U  A1,AEOL     . GET BAD CHAR MARKER  @B@@@@UR
)@@G@@. STASH  CHAR FROM A1 TO APLCODE IMAGE    @B@@@@RT0180 ASTASH           US
)@@G@@ . STORE CHARACTER@C@@@@       J     RT0100      . GO GET NEXT CHAR     UT
)@@G@@@[@@@@.     @D@@@@. ASCII INPUT CHAR IS COMMO CONTROL /EDIT CONTROL     UU
)@@G@@@F@@@@.        ANYTHING OTHER THAN BS, CR OR ERASE RIGHT IS IGNORED-    UV
)@@G@@@[@@@@.     @E@@@@RT0200 JNE,U A1,ASCRRT RT0230 . IF NOT CR , GO CHECK FUW
)@@G@@OR BS @A@@@@. CARRIAGE RETURN-- CLOSE THE IMAGE @D@@@@RT0210 TN    RFICOUX
)@@G@@L      . IS ILEGAL CHAR FLAG ON?    @D@@@@       J     RT0220      . YESUY
)@@G@@ GO SET UP FOR REPROMPT @D@@@@       LA    A0,A13      . FARTHERSET CHARUZ
)@@G@@ STORED     @E@@@@       DSL   A0,2        . DIVIDE BY 4 TO GET WORD COUVA
)@@G@@NT    @E@@@@       LX,U  X3,CIOBUF,A0  . POINT LINK REG FOR CIOBUF STASHVB
)@@G@@@ @@@@       LXI,U X3,1        .    @D@@@@       SSL   A1,36-2     . LINVC
)@@G@@E UP FOR CHAR POINTER   @E@@@@       LMJ   X2,*AQINIT,A1 . POINT LINK REVD
)@@G@@R TO CORRECT CHAR @E@@@@       LA,U  A1,AEOL     . NO, LINE WAS OK, GET VE
)@@G@@EOL FLAG    @A@@@@       ASTASH            . STORE EOL@ @@@@       LX   VF
)@@G@@ X11,RTLINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    @^@@@@VG
)@@G@@. SET UP FOR RE-PROMPT  @E@@@@RT0220 LA    A0,RTILPK   . PICK UP PACKET VH
)@@G@@FOR ILCHAR MSG    @A@@@@       ER    PRINT$      . XMIT IT  @D@@@@      VI
)@@G@@ SZ    RCPTIF      . CLEAR PAPER TAPE INPUT FLAG@ @@@@       LX    X11,RVJ
)@@G@@TLINK  .    @G@@@@       J     0,X11       . RE-PROMPT WITH ALL OF LINE VK
)@@G@@UP TO THE ERROR   @ @@@@.  BACK SPACE HANDLED HERE    @G@@@@RT0230 JNE,UVL
)@@G@@ A1,ASCIBS RT0240 . IF NOT BS GO CHECK FOR ERASE TO RIGHT   @E@@@@      VM
)@@G@@ BACKSP            . MOVE STORE POINTER BACK ONE POS  @B@@@@       J    VN
)@@G@@ RT0100      . GET NEXT CHAR  @B@@@@. CHECK INPUT FOR ERASE TO RIGHT FUNVO
)@@G@@CTION @D@@@@RT0240 JNE,U A1,ASATTN RT0100  . IF NOT ATTN IGNORE IT@A@@@@VP
)@@G@@. PRINT LINE MARKING POSN OF EDITING@G@@@@       CURCOL            . CLEVQ
)@@G@@AR INVALID CHAR FLAG IF IT IS TO THE RIGHT@C@@@@       SA    A15,TAPSIZ VR
)@@G@@ . SAVE CURRENT COL POS @ @@@@       LNA   A0,A15      .    @F@@@@      VS
)@@G@@ AA    A0,A13      . NO. OF BLNKS NEEDED TO BLANK TO RIGHT  @^@@@@      VT
)@@G@@ SX    X2,RTSVX2  @ @@@@       SX    X3,RTSVX3   .    @B@@@@       LA,U VU
)@@G@@ A1,ASPACE   . GET A SPACE    @ @@@@RT0250 JNGD  A0,RT0260   .    @B@@@@VV
)@@G@@       LMJ   X2,3,X2     . STORE BLANKS   @ @@@@       J     RT0250     VW
)@@G@@ .    @D@@@@RT0260 LA    A15,TAPSIZ  . RESTORE CURRENT COL POS    @D@@@@VX
)@@G@@       LA    A13,TAPSIZ  . FARTHEREST COL TO THE RIGHT@ @@@@       LX   VY
)@@G@@ X2,RTSVX2   .    @ @@@@       LX    X3,RTSVX3   .    @B@@@@       J    VZ
)@@G@@ RT0100      . GET NEXT CHAR  @^@@@@RT0300 LA    A0,RTPKRD  @ @@@@      WA
)@@G@@ ER    READ$       .    @B@@@@       LA,U  A0,0,A0     . ISOLATE WORDCT WB
)@@G@@@A@@@@       SA    A0,ASWDCT   . POST IT  @D@@@@       SX    X11,RFRDFG WC
)@@G@@ . SET CONTINUATION READ FLAG @E@@@@       J     RT0020      . AND GO INWD
)@@G@@ITIALIZE SCAN POINTERS  @F@@@@RT0400 CALREP,SYSREP X11, SINOFF . EOF ENCWE
)@@G@@OUNTERED, GO SIGN OFF   @#@@@@       VARBLS  .  @ @@@@RTLINK RES   1    WF
)@@G@@      .     @D@@@@RTCHEX RES   1           . NUMBER OF CHARS TO EXAMINE WG
)@@G@@@ @@@@RFICOL RES   1          .     @ @@@@RTSVX2 RES   1          .     WH
)@@G@@@ @@@@RTSVX3 RES   1          .     @D@@@@RFRDFG EQUF  $,,H1       . REAWI
)@@G@@D CONTINUATION FLAG     @ @@@@       RES   1           .    @F@@@@RFPSOFWJ
)@@G@@ RES   1           . POSSIBLE O-U-T FLAG (MUST BE WHOLE WD) @ @@@@RFTPKTWK
)@@G@@   +  0,ASBUFR     .    @^@@@@RTPKRD  +  RT0400,ASBUFR@C@@@@AQBFWA EQU CWL
)@@G@@IOBUF        . FIRST WORD OF BUFFER @ @@@@       CONSTS            .    WM
)@@G@@@ @@@@P      FORM  12,6,18     .    @ @@@@RTSOPK P     0,7,$+1     .    WN
)@@G@@@D@@@@       '_[4JD0G*)IT*HD&I))H95I))BL<I-?^[,^KH[K@@@@'   @ @@@@RTILPKWO
)@@G@@ P     0,5,$+1     .    @F@@@@       '_@EGT*GD2GD<I->IK)G(2IL\IKE[*@' . WP
)@@G@@CHARACTER ERROR MSG     @G@@@@/. UTILITIES TO MOVE CHARS IN APLCODE BUF WQ
)@@G@@FOR ASCII TO APL CONVERSION   @E@@@@.  LINKAGE-    0,X2=BACKSPACE; 1,X2=WR
)@@G@@EXAMINE; 3,X2=STASH     @[@@@@.     @#@@@@       INSTRS  .  @#@@@@AQINITWS
)@@G@@ +AQ1LNK .  @#@@@@       +AQ2LNK .  @#@@@@       +AQ3LNK .  @#@@@@      WT
)@@G@@ +AQ4LNK .  @[@@@@.     @F@@@@. SPECIAL TREATMENT FOR Q1 BECAUSE BKSP WIWU
)@@G@@LL CROSS WORD BNDRY     @F@@@@AQ1LNK LMJ   X2,0,X2     . ESTABLISH LINK WV
)@@G@@SO NEXT CHAR IS IN Q1   @E@@@@       J     AQ1TST      . BACKSPACE- GO TWW
)@@G@@EST FOR BEGIN BUF @A@@@@       LA,Q1 A1,0,X3     . EXAMINE  @A@@@@      WX
)@@G@@ J     AQ1LNK      . RETURN   @A@@@@       SA,Q1 A1,0,X3     . STASH    WY
)@@G@@@A@@@@       J     AQ2LNK      . RETURN   @D@@@@AQ1TST LA,U  A1,0,X3    WZ
)@@G@@ . GET CURRENT WORD POINTER   @D@@@@       TNE,U A1,AQBFWA   . ALREADY AXA
)@@G@@T 1ST WD OF BUF?  @B@@@@       J     AQ1LNK      . YES, DONT RESET@C@@@@XB
)@@G@@       ANX,U X3,1        . NO STEP BACK ONE WORD@D@@@@       J     AQ4LNXC
)@@G@@K      . AND GO SET LINKAGE FOR Q4  @E@@@@AQ2LNK LMJ   X2,0,X2     . SETXD
)@@G@@ LINKAGE SO Q2 IS NEXT CHAR   @A@@@@       J     AQ1LNK      . BACKSPACEXE
)@@G@@@A@@@@       LA,Q2 A1,0,X3     . EXAMINE  @A@@@@       J     AQ2LNK     XF
)@@G@@ . RETURN   @A@@@@       SA,Q2 A1,0,X3     . STASH    @[@@@@.     @ @@@@XG
)@@G@@AQ3LNK LMJ   X2,0,X2     .    @ @@@@       J     AQ2LNK      .    @ @@@@XH
)@@G@@       LA,Q3 A1,0,X3     .    @ @@@@       J     AQ3LNK      .    @ @@@@XI
)@@G@@       SA,Q3 A1,0,X3     .    @ @@@@.                        .    @ @@@@XJ
)@@G@@AQ4LNK LMJ   X2,0,X2     .    @ @@@@       J     AQ3LNK      .    @ @@@@XK
)@@G@@       LA,Q4 A1,0,X3     .    @ @@@@       J     AQ4LNK      .    @ @@@@XL
)@@G@@       SA,Q4 A1,0,*X3    .    @ @@@@       J     AQ1LNK      .    @[@@@@XM
)@@G@@.     @[@@@@.     @[@@@@.     @[@@@@.     @#@@@@       END     .  ___@@@XN
)@@G@@       SX    X11,RFRDFG  . SET CONTINUATION READ FLAG @E@@@@       J    XO
)@@G@@ RT0020      . AND GO INITIALIZE SCAN POINTERS  @F@@@@RT0400 CALREP,SYSRXP
)@@G@@*[S@@@*SDFF*@G@@[[. ****************************************************XQ
)@@G@@***************   @G@@[[. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APXR
)@@G@@L IN SOURCE DECKS   *   @[@@[[.     @G@@[[       AXR$  .                XS
)@@G@@                                      *   @G@@[[       CONFIG . DEFINE AXT
)@@G@@SSEMBLY PARAMETERS                          *   @G@@[[       APSYMB . DEXU
)@@G@@FINE APL SYMBOL SET                               *   @G@@[[       FDSYMXV
)@@G@@B . DEFINE FIELDATA SYMBOLS                             *   @G@@[[      XW
)@@G@@ WSDEF  . DEFINE WORKSPACE                                    *   @G@@[[XX
)@@G@@WORKSP INFO 2 20 . SET ASIDE THE SPACE                              *   XY
)@@G@@@G@@[[       RUNCTL . DEFINE RUN CTRL BLOK(S)                           XZ
)@@G@@  *   @G@@[[RUNCON INFO 2 22 . AND SET ASIDE ITS SPACE                  YA
)@@G@@        *   @G@@[[       CBLOCK  . DEFINE CONTROL BLOCK TYPES           YB
)@@G@@              *   @[@@[[.     @ @@[[. END OF STANDARD PROC BLOCK  @G@@[[YC
)@@G@@. *******************************************************************   YD
)@@G@@@[@@[[.     @[@@[[/.    @[@@[[.     @[@@[[.     @A@@[[       SKMARX  . DYE
)@@G@@EFINE STACK MARKS @D@@[[/. POP AND EXAMINE A COORDINATE SELECTING EXPRESYF
)@@G@@SION  @[@@[[.     @#@@[[       INSTRS .   @]@@[[CRDPOP* .   @E@@[[      YG
)@@G@@ ANA,U A2,1        . DECREMENT COORD FLAGFOR TESTING  @B@@[[       SX   YH
)@@G@@ X11,CDLINK  . STORE LINK     @D@@[[       SZ    CDNONI      . CLEAR NONYI
)@@G@@-INTEGER FLAG     @D@@[[       LMJ   X11,PIKRIT  . SET-UP TO FETCH VARIAYJ
)@@G@@BLE   @ @@[[       J     CD0990      .    @E@@[[       JNE,U A5,1 CD0900YK
)@@G@@ . IF NOT ONE-ELEMENT, LENGTH ERR   @F@@[[       JNE,U A3,ZMOHFI CD0010 YL
)@@G@@. IF NOT HALFINT, GO CHECK DFLOAT   @D@@[[       LMJ   X6,0,X6     . ELSYM
)@@G@@E FETCH HALFINT VALUE   @B@@[[       DS    A4,CDCOOR   . SAVE VALUE     YN
)@@G@@@B@@[[       J     CD0020      . AND GO EXIT    @E@@[[CD0010 JNE,U A3,ZMYO
)@@G@@ODFL CD0910 . IF NOT DLOAT, DOMAIN ERR    @B@@[[       LMJ   X6,0,X6    YP
)@@G@@ . PICK IT UP     @C@@[[       DS    A4,CDCOOR   . TEMP SAVE DFLOAT VAL YQ
)@@G@@@C@@[[       FUZZDN            . AND TAKE ITS FLOOR   @D@@[[       JNE  YR
)@@G@@ A1,CD0910   . IF TOO BIG, RANK ERROR     @E@@[[       DL    A4,CDCOOR  YS
)@@G@@ . RECOVER ORIGINAL FLOATING VALUE  @C@@[[       DS    A1,CDCOOR   . ANDYT
)@@G@@ SAVE THE INTEGER @D@@[[       DFLOAT A0,A1      . CONVERT BACK TO FLOATYU
)@@G@@ING   @E@@[[       FUZDIF A1,A4      . AND COMPARE WITH ORIGINAL VALUE  YV
)@@G@@@F@@[[       DJZ   A1,CD0020   . IF FUZZY DIF ZERO, VALUE WAS INTEGER   YW
)@@G@@@E@@[[       SX    X11,CDNONI  . ELSE TURN ON NON-INTEGER FLAG    @#@@[[YX
)@@G@@. NORMAL EXIT     @F@@[[CD0020 LMJ   X11,ERASET  . FREE THE SPACE USED BYY
)@@G@@Y THE COORD VALUE @ @@[[       J     CD0990      .    @B@@[[       SZ   YZ
)@@G@@ RITDSC      . MARK IT ERASED @G@@[[       VERIFY CD0030,CD0920,CD0920 .ZA
)@@G@@ LOOK IN STACK FOR TRAILING BRACKET @C@@[[       J     CD0920      . IF ZB
)@@G@@NONE, SYNTAX ERROR@F@@[[CD0030 TE,U  A6,SKMESL   . BE SURE STAKMARK WAS ZC
)@@G@@FOR RITE BRACKET  @C@@[[       J     CD0920      . IF NOT, SYNTAX ERROR ZD
)@@G@@@D@@[[       DL    A1,CDCOOR   . RECOVER INTEGER OF COORD   @C@@[[      ZE
)@@G@@ LA    A0,CDNONI   . AND NON-INTEGER FLAG @C@@[[       TNZ   WSIXOR     ZF
)@@G@@ . ZERO ORIGIN INDEXING?@E@@[[       AA,U  A2,1        . YES, BUMP VALUEZG
)@@G@@ INTO RANGE 1 TO N@D@@[[       JG,U  A2,1 CD0910 . IF = OR < 0, INDEX ERZH
)@@G@@ROR   @ @@[[       LX    X11,CDLINK  .    @ @@[[       J     1,X11      ZI
)@@G@@ .    @[@@[[.     @ @@[[CD0900 ERROR YLENGT,CD0990 .  @ @@[[CD0910 ERRORZJ
)@@G@@ YRANK,CD0990 .   @ @@[[CD0920 ERROR YSYNTA,CD0990 .  @ @@[[CD0990 LX   ZK
)@@G@@ X11,CDLINK  .    @ @@[[       J     0,X11        .   @#@@[[       VARBLZL
)@@G@@S .   @ @@[[CDNONI EQUF  $,,H1       .    @ @@[[CDLINK EQUF  $,,H2      ZM
)@@G@@ .    @ @@[[       RES   1           .    @ @@[[CDCOOR RES   2          ZN
)@@G@@ .    @#@@[[/. THIS ROUTINE:  @F@@[[.        (1) FARBLES POINTERS TO SUBZO
)@@G@@SCRIPTAND FOR HANDLING BEATING@C@@[[.            BEATING (HITTING, KICKIZP
)@@G@@NG, ETC)    @D@@[[.        (2) RESERVES SPACE TO STASH SUBSCRIPTAND     ZQ
)@@G@@@A@@[[.        (3) MOVES SUBSCRIPTAND     @[@@[[.     @E@@[[. NOTE: ON EZR
)@@G@@NTRY X4 CONTAINS ADDRESS OF FARBLING ROUTINE    @C@@[[.                XZS
)@@G@@6 IS ADDRESS OF FETCH ROUTINES@[@@[[.     @ @@[[. ISN'T THAT WONDERFUL!!ZT
)@@G@@!!    @[@@[[.     @#@@[[       INSTRS .   @]@@[[BEMOVN* .   @A@@[[      ZU
)@@G@@ SX    X11,BELINK  . SAVE LINK@D@@[[       LX,H2 X2,PUTARY+ZMOHFI . ADDRZV
)@@G@@ OF DIM STASH RTNE@E@@[[       LX    X3,(+1,RESDIM) . INITIAL RESULT WRDZW
)@@G@@ PONTER     @D@@[[       LX    X5,(1,0)    . INITIALIZE X5 FOR FETCH    ZX
)@@G@@@B@@[[       LA    A14,AMNSIG  . LOAD FOR COUNT @ @@[[BE0010 JNGD  A14,BZY
)@@G@@E0030   .   @B@@[[       LA    A2,OMRANG,*0 . LOAD DIM VALUE@A@@[[      ZZ
)@@G@@ LMJ   X2,0,X2     . AND STORE@ @@[[       J     BE0010      .    @]@@[[AA
)@@G@@BEMOVE* .   @ @@[[       SX    X11,BELINK .     @[@@[[.     @]@@[[.   FAAB
)@@G@@RBLE  @[@@[[.     @A@@[[BE0020 LMJ   X4,0,X4     . DO FARBLE@B@@[[      AC
)@@G@@ J     BE0999      . ERROR RETURN   @[@@[[.     @#@@[[.    RESERVE SPACEAD
)@@G@@@[@@[[.     @]@@[[BE0030 .    @D@@[[       LA,U  A0,RESDIM   . ADDR OF CAE
)@@G@@REATED DIMVECT    @A@@[[       RELADR A0         . ADJUST IT@E@@[[      AF
)@@G@@ SA,H2 A0,RESDDB+1 . PUT INTO DUMMY DESCR OF DIMVECT  @A@@[[       LA   AG
)@@G@@ A1,PMMODE   . GET MODE @D@@[[       LX,H2 X6,PIKTBL,A1 . LOAD PICK ROUTAH
)@@G@@INE ADDRESS @A@@[[       LA    A0,RESRNK   . GET RANK @E@@[[       JNE,UAI
)@@G@@ A0,ZRANKS BE0050 . IF NON-SCALAR, DON'T FARBLE @F@@[[       TNE,U A1,ZMAJ
)@@G@@OCHR   . BUT IF SCALAR, IS IT ALSO CHARCTER?    @G@@[[       LA,U  A0,ZRAK
)@@G@@ANKV   . IF BOTH, FORCE TO VECTOR    *** TEMP ***     @F@@[[       SA,S3AL
)@@G@@ A0,RESBLK   . PUT RANK INTO DUMMY DESCR FOR RESULT   @D@@[[       LA,U AM
)@@G@@ A0,1        . GET APPROPRIATE LENGTH     @E@@[[       SA,H2 A0,RESBLK  AN
)@@G@@ . TO LENGTH FIELD OF DUMMY DESCR   @C@@[[BE0050 SA,H2 A0,RESDDB   . RANAO
)@@G@@K TO LENGTH FIELD @A@@[[       LA    A0,PMRANK   . LOAD RANK@C@@[[      AP
)@@G@@ JNE,U A0,ZRANKS BE0060 . IF NOT SCALAR   @B@@[[       LA,U  A0,ZRANKV  AQ
)@@G@@ . FORCE TO VECTOR@B@@[[       SA    A0,PMRANK   . STORE INTO     @]@@[[AR
)@@G@@BE0060 .    @C@@[[       LA,U  A0,RESDDB   . LOC OF DIMVECT DBLOK @#@@[[AS
)@@G@@       RELADR A0 .@C@@[[       SA,H1 A0,RESBLK+1 . PUT INTO DUMMY DBLOK AT
)@@G@@@D@@[[       LA,U  A0,RESBLK   . ADDR OF THE DUMMY DBLOK    @F@@[[      AU
)@@G@@ LMJ   X11,PUTANS  . SET UP X2 AND X3 FOR STASHING RESULT   @B@@[[      AV
)@@G@@ J     BE0999      . OOPS, WS FULL  @E@@[[       SA    A2,RESDSC   . SAVAW
)@@G@@E RELADR OF RESULT DESCRIPTOR @E@@[[       LA    A14,RESLNT  . GET LENGTAX
)@@G@@H OF RESULT FOR COUNTING@[@@[[.     @]@@[[.    MOVE   @[@@[[.     @D@@[[AY
)@@G@@BE0100 JNGD  A14,BE0110   . MORE TO DO? IF NOT, EXIT  @D@@[[       LMJ  AZ
)@@G@@ X6,0,X6     . YES, GO ACCESS SUBSCRITEE  @B@@[[       J     BE0990     BA
)@@G@@ . ERROR - GO AWAY@A@@[[       LMJ   X2,0,X2     . STORE    @A@@[[      BB
)@@G@@ J     BE0100      . REPEAT   @[@@[[.     @#@@[[. ALL FINISHED    @[@@[[BC
)@@G@@.     @D@@[[BE0110 LA    A0,RESDSC   . GET DESCR ADDR OF RESULT   @A@@[[BD
)@@G@@       PUSH  A0          . STACK IT @ @@[[       LX    X11,BELINK   .   BE
)@@G@@@A@@[[       J     1,X11       . GOO-BY   @[@@[[.     @#@@[[.   EROOR EXBF
)@@G@@ITS   @[@@[[.     @ @@[[BE0900 ERROR YSYSTM,BE0990 .  @[@@[[.     @ @@[[BG
)@@G@@.    FREE ANY RESERVED SPACE  @[@@[[.     @B@@[[BE0990 SA    A0,BETEMP  BH
)@@G@@ . SAVE ERROR CODE@D@@[[       LA    A6,RESDSC   . GET DESCR ADDR OF RESBI
)@@G@@ULT   @B@@[[       LMJ   X11,ERASET  . ERASE SPACE    @B@@[[       J    BJ
)@@G@@ BE0999      . ERROR RETURN   @C@@[[       LA    A0,BETEMP   . RELOAD ERBK
)@@G@@ROR CODE    @ @@[[BE0999 LX    X11,BELINK  .    @ @@[[       J     0,X11BL
)@@G@@       .    @#@@[[       VARBLS .   @#@@[[BETEMP RES   1 .  @#@@[[BELINKBM
)@@G@@ RES   1 .  @G@@[[/. ERASE TEMPORARY EXPRS USED AS SUBSCRS. THIS ROUTINEBN
)@@G@@ IS CALLED BY THE @F@@[[.  SUBSCRIPTING ROUTINES WHEN THEY ARE DONE OR (BO
)@@G@@ERROR). THE SUBSCR@G@@[[.  ROUTINES ARE THE ONLY OONES FOR WHICH ARBITRABP
)@@G@@RY APL EXPRESSIONS COULD@ @@[[.  HAVE APPEARED AS SUBSCRIPTS@[@@[[.     BQ
)@@G@@@#@@[[       INSTRS .   @]@@[[BEBERS* .   @ @@[[       SX      X11,BELINBR
)@@G@@K .   @A@@[[       SX    X8,PMX8ST   . SA E X8  @ @@[[       LA    A4,PMBS
)@@G@@RANK   .    @ @@[[       LX    X8,(1,0)    .    @C@@[[.  LOOP THRU AMDESBT
)@@G@@C, LOOKING FOR DBLOK ADDRESSES@ @@[[BE0600 JNGD  A4,BE0610   .    @B@@[[BU
)@@G@@       TNZ   AMDESC      . EQ TO ZERO?    @C@@[[       J     BE0600     BV
)@@G@@ . YES, NO DBLOK ADDR   @B@@[[       LA    A6,AMDESC-1 . LOAD DBLOK ADDRBW
)@@G@@@D@@[[        DS    A3,BEREGS   .SAVE REGISTERS FROM ERASET @C@@[[      BX
)@@G@@ LMJ   X11,ERASET  . ERASE SUBSCR EXP     @B@@[[       J     BE0650     BY
)@@G@@ . ERROR RETURN   @G@@[[       DL    A3,BEREGS   . RECOVER REGS (COMPUTEBZ
)@@G@@R TALK FOR REGISTERS)   @C@@[[       SZ    AMDESC-1    . ZERO EXPRESSIONCA
)@@G@@ OUT  @^@@[[       J     BE0600 .   @B@@[[BE0610 LX    X11,BELINK  . NORCB
)@@G@@MAL EXIT    @B@@[[       LX    X8,PMX8ST   . RESTORE X8     @ @@[[      CC
)@@G@@ J     1,X11       .    @B@@[[BE0650 LX    X11,BELINK  . ERROR EXIT     CD
)@@G@@@ @@[[       LX    X8,PMX8ST   .    @ @@[[       J     0,X11       .    CE
)@@G@@@#@@[[       VARBLS .   @B@@[[BEREGS RES   2 . SAVE PLACE FOR A2 AND A3 CF
)@@G@@@D@@[[/. ROUTINE TO MODIFY TABLES FOR USE IN SUBSCRIPTING   @B@@[[.  SUBCG
)@@G@@SCRIPTS ARE PICKED ONE BY ONE AND   @D@@[[.  TABLES VALUES MODIFIED - IFCH
)@@G@@ SUBSCRIPT IS ELIDED,   @ @@[[.  TABLES ARE LEFT UNCHANGED  @[@@[[.     CI
)@@G@@@G@@[[.  INITIALIZE THE SETUP OF THE DIMVECT OF THE RESULT-OUTER PROD OFCJ
)@@G@@ SUBS @#@@[[       INSTRS .   @]@@[[SSUB* .     @A@@[[       SX    X8,PMCK
)@@G@@X8ST   . SAVE X8  @E@@[[       LA,U  A13,0       . TOTALIZER FOR RANK OFCL
)@@G@@ RESULT     @C@@[[       LA,U  A3,ZMOHFI   . SET-UP FOR DIM STASH @D@@[[CM
)@@G@@       LX,H2 X2,PUTARY,A3 . ADDR OF DIM STASH RTNE    @E@@[[       LX   CN
)@@G@@ X3,(+1,RESDIM) . INITIAL RESULT WORD POINTER   @[@@[[.     @G@@[[.  INICO
)@@G@@TIALIZE TO ACTUALLY FETCH THE SUBSCRS AND SET UP THE CTRL BLOX    @[@@[[CP
)@@G@@.     @B@@[[       LA    A14,AMNSIG  . LOAD FOR COUNT @G@@[[       SZ   CQ
)@@G@@ AMNSIG      . CLEAR PTR TO MOST RARIDLY VARYING SUBSCR     @D@@[[      CR
)@@G@@ LA,U  A7,1        . INITIALIZE LENGTH COUNTER  @ @@[[       SA    A7,RECS
)@@G@@SLNT   .    @D@@[[       LX    X8,(+1,0)   . SET POINTER TO ADDR MAP    CT
)@@G@@@ @@[[       LX    X5,(+1,0)   .    @[@@[[.     @]@@[[. FETCH LOOP@[@@[[CU
)@@G@@.     @]@@[[SS0010 .    @B@@[[       JNGD  A14,SS0200  . MORE TO DO ?   CV
)@@G@@@E@@[[       VERIFY SS0030,SS0900,SS0999 . POP NEXT EXPRESSION    @C@@[[CW
)@@G@@       SA    A1,SSDIMA   . SAVE DIM DATA ADDR   @F@@[[       SA    A6,OMCX
)@@G@@DESC   . SAVE DESCR ADDR (FOR ERASE AT EXIT)    @E@@[[       JZ    A5,SSCY
)@@G@@0020   . IF NULL, NO MODE CHECK NEEDED    @E@@[[       JE,U  A3,ZMOCHR SCZ
)@@G@@S0930 . IF CHAR SUBSCR, DOMAIN ERR  @E@@[[       TNE,U A3,ZMODFL   . IS DA
)@@G@@SUBSCR EXPRESSION DFLOAT?     @F@@[[       LA,U  A3,ZMODFI   . YES, SET DB
)@@G@@FLAG TO FORCE IT TO INTEGER   @F@@[[SS0020 LMJ   X11,PIKRIU  . SET RITEADC
)@@G@@RG FETCH REGS FOR THIS SUBSCR @[@@[[.     @F@@[[.  SET UP TABLE ENTRIES DD
)@@G@@FOR FETCHING VALS OF THIS SUBSCR EXPR     @[@@[[.     @D@@[[       JZ   DE
)@@G@@ A5,SS0120   . IF NULL, GO SET UP FOR IT  @C@@[[       TE,U  A5,1       DF
)@@G@@ . IS IT OF LENGTH 1    @D@@[[       J     SS0100      . NO, SET UP FETCDG
)@@G@@H ROUTINES  @[@@[[.     @ @@[[.  SUBSCRIPT HAS A LENGTH OF 1@A@@[[.  FETDH
)@@G@@CH VALUE AND ADD TO ABASE     @ @@[[.  THEN UPDATE RESULT RANK    @[@@[[DI
)@@G@@.     @ @@[[       SA    A4,AMCVAL   .    @ @@[[       LA    A0,X8      DJ
)@@G@@ .    @D@@[[       LMJ   X6,0,X6     . IMMEDIATELY FETCH THE VALUE@F@@[[DK
)@@G@@       JNZ   A4,SS0910   . IF NOT REALLY HALFINT, INDEX ERROR     @E@@[[DL
)@@G@@       ANA   A5,WSIXOR   . COMPENSATE FOR CURRENT INDEX ORIG@B@@[[      DM
)@@G@@ JZ    A5,SS0050   . IF ZERO OK     @D@@[[       JN    A5,SS0910   . BUTDN
)@@G@@ NEGATIVE IS INDEX ERROR@D@@[[       TG    A5,OMRANG   . IS SUBSCR WITHIDO
)@@G@@N RANGE?    @B@@[[       J     SS0910      . NO, INDEX ERROR@B@@[[      DP
)@@G@@ LA    A4,AMCVAL   . RELOAD RANK    @C@@[[       J     SS0050      . CALDQ
)@@G@@CULATE INTO ABASE @[@@[[.     @F@@[[.  STACKMARK HIT DURING SUBSCRIPT PODR
)@@G@@P, CHECK FOR ELIDED INDEX     @[@@[[.     @D@@[[SS0030 TE,U  A6,SKMELX  DS
)@@G@@ . IS THERE AN ELIDED INDEX?  @B@@[[       J     SS0910      . NO, INDEXDT
)@@G@@ ERROR@C@@[[       LA,U  A4,ZRANKV   . FORCE RANK TO VECTOR @D@@[[      DU
)@@G@@ LA    A5,OMRANG   . LOAD LENGTH FOR COMPARE    @C@@[[       TNE,U A5,1 DV
)@@G@@       . IF LENGTH NOT = 1    @B@@[[       J     SS0120      . GO MOVE DDW
)@@G@@IMS   @]@@[[SS0045 .    @ @@[[       LA    A15,X8      .    @D@@[[      DX
)@@G@@ TNE   A15,X5      . IF NO SCALAR SUBS SO FAR   @C@@[[       J     SS011DY
)@@G@@5      . NO MOVING NECESSARY  @[@@[[.     @^@@[[.  MOVE ENTRIES OVER    DZ
)@@G@@@[@@[[.     @C@@[[       LA    A6,OMLINI   .  MOVE INITIAL LINK   @ @@[[EA
)@@G@@       SA    A6,AMLINI   .    @B@@[[       LA    A6,OMRANG   .  MOVE MAXEB
)@@G@@ RANGE@ @@[[       SA    A6,AMRANG   .    @B@@[[       LA    A6,OMCINI  EC
)@@G@@ . MOVE INITAL    @B@@[[       SA    A6,AMCINI   .      COUNT     @A@@[[ED
)@@G@@       LA    A6,OMWGHT   . MOVE     @A@@[[       SA    A6,AMWGHT   .   WEE
)@@G@@EIGHT @C@@[[       LA,U  A4,ZRANKV   . FORCE RANK TO VECTOR @ @@[[      EF
)@@G@@ J     SS0115      .    @C@@[[SS0050 MSI   A5,OMWGHT   . MULTIPLY BY WEIEG
)@@G@@GHT   @B@@[[       AA    A5,ABASE    . ADD IN ABASE   @A@@[[       SA   EH
)@@G@@ A5,ABASE    . AND STORE@C@@[[       LA,U  A5,1        . SET LENGTH BACKEI
)@@G@@ TO 1 @D@@[[       JE,U  A4,ZRANKS SS0180 . IF SCALAR, GO AWAY    @ @@[[EJ
)@@G@@       J     SS0120      .    @[@@[[.     @^@@[[. SET UP FETCH ROUTINES EK
)@@G@@@[@@[[.     @]@@[[SS0100 .    @C@@[[       SX    X6,AMLINI   . STORE FETEL
)@@G@@CH SUBR ADDR@C@@[[       SX    X7,AMDINI   . STORE WORD POINTER   @ @@[[EM
)@@G@@       ANU,U A5,1        .    @C@@[[       SA    A6,AMCINI   . STORE INIEN
)@@G@@TIAL COUNT  @B@@[[       LA    A0,X7       . DUPE WORD PTR  @B@@[[      EO
)@@G@@ SSL   A0,18       . ISOLATE STEP   @B@@[[       SA    A0,AMDINC   .    EP
)@@G@@ AND SAVE IT@D@@[[       LA    A0,OMRANG   . IN CASE, X8 AND X5 DIFFER  EQ
)@@G@@@C@@[[       SA    A0,AMRANG   .     UPDATE MAX RANGE @[@@[[.     @A@@[[ER
)@@G@@.  FOR SUBSCRIPTS WITH LENGTH > 1   @[@@[[.     @]@@[[SS0115 .    @D@@[[ES
)@@G@@       LA,U  A2,1,X8      . GET INDEX OF CURRENT SUB  @F@@[[       SA   ET
)@@G@@ A2,AMNSIG   . POST AS MOST RAPIDLY VARYING SUBSCRIPT @B@@[[       NOP  EU
)@@G@@ 0,0,*X8     . BUMP 'TO' PTR  @[@@[[.     @B@@[[.  ADJUST RESULT RANK, PEV
)@@G@@REPARE TO MOVE DIM@[@@[[.     @C@@[[SS0120 AA    A13,A4      . BUMP RESUEW
)@@G@@LT RANK     @D@@[[       TG,U  A13,MAXSUB+1  . IS IT STILL WITHIN RANGE?EX
)@@G@@@C@@[[       J     SS0940      . NO, LENGTH ERROR     @ @@[[       LA   EY
)@@G@@ A7,RESLNT   .    @C@@[[       MSI   A7,A5       . MULTIPLY BY LENGTH   EZ
)@@G@@@ @@[[       SA    A7,RESLNT   .    @D@@[[       JNE,U A4,ZRANKV SS0140 FA
)@@G@@. IF ARRAY,G O COPY DIMS@E@@[[       LA    A2,A5       . MOVE VECTOR LENFB
)@@G@@GTH TO DIM REG    @D@@[[       LMJ   X2,0,X2     . STASH AS NEXT DIM OF FC
)@@G@@RESULT@ @@[[       J     SS0180      .    @E@@[[SS0140 LX,H2 X6,GRITBL+ZFD
)@@G@@MOHFI . SETUP HALFINT PICK SUBR ADDR@C@@[[       LX    X7,SSDIMA   . SETFE
)@@G@@ UP DIM DATA ADDR @ @@[[       LXI,U X7,1        .    @F@@[[       LA   FF
)@@G@@ A15,A4      . REPEAT CT-NO OF DIMS= RANK OF ARRAY    @B@@[[SS0145 JNGD FG
)@@G@@ A15,SS0180  . MORE TO MOVE?  @D@@[[       LMJ   X6,0,X6     . PICK UP DFH
)@@G@@IM OF SUBSCR EXPR @B@@[[       LA    A2,A5       . MOVE FOR STASH @D@@[[FI
)@@G@@       LMJ   X2,0,X2     . STORE IN DIM OF RESULT     @A@@[[       J    FJ
)@@G@@ SS0145      . REPEAT   @B@@[[SS0180 NOP   0,0,*X5     . BUMP 'FROM' PTRFK
)@@G@@@ @@[[       J     SS0010      .    @[@@[[.     @^@@[[. ALL DONE-CLEAN UFL
)@@G@@P     @[@@[[.     @B@@[[SS0200 SA    A13,RESRNK  . STORE RANK     @A@@[[FM
)@@G@@       VERIFY SS0210,SS0900,SS0999 .@D@@[[       J     SS0910      . IF FN
)@@G@@NO STAKMARK, INDEX ERROR@G@@[[SS0210 TE,U  A6,SKMESL   . DOES STAKMARK IFO
)@@G@@NDICATE END OF SUBSCR LIST?   @B@@[[       J     SS0910      . NO, INDEXFP
)@@G@@ ERROR@ @@[[       LX    X8,PMX8ST   .    @A@@[[       J     1,X4       FQ
)@@G@@ . FINISHED @#@@[[       VARBLS .   @#@@[[SSDIMA RES 1 .    @B@@[[/.  ROFR
)@@G@@UTINE TO MODIFY TABLES FOR USE IN   @#@@[[.   TAKE AND DROP @[@@[[.     FS
)@@G@@@^@@[[.   LOOP THRU LEFT ARG  @[@@[[.     @B@@[[.   TAKE:  AMCINI=ABS(PIFT
)@@G@@CKED VAL) - 1     @C@@[[.          AMDINI=WSIXOR IF PICKED VALUE IS +   FU
)@@G@@@G@@[[.                 (AMCINI+1) - PICKED VAL + WSIXOR IF PICKED VAL IFV
)@@G@@S -   @[@@[[.     @E@@[[.   DROP:  AMCINI= AMCINI - ABS(PICKED VAL) - 1 FW
)@@G@@+ WSIXOR    @B@@[[.          AMDINI=PICKED VAL + WSIXOR IF +@B@@[[.     FX
)@@G@@            1 IF PICKED VAL IS -    @[@@[[.     @#@@[[       INSTRS .   FY
)@@G@@@]@@[[STADR* .    @A@@[[       SX    X8,PMX8ST   . SAVE X8  @C@@[[      FZ
)@@G@@ LA,U  A3,ZMOHFI   . SET-UP FOR DIM STASH @D@@[[       LX,H2 X2,PUTARY,AGA
)@@G@@3 . ADDR OF DIM STASH TRTNE   @D@@[[       LX    X3,(+1,RESDIM) . INITIAGB
)@@G@@L RESULT WRD PTR  @B@@[[       LA    A14,AMNSIG  . LOAD FOR COUNT @C@@[[GC
)@@G@@       LX    X8,(+1,0)   . SET PTR TO TABLE     @D@@[[       LA,U  A7,1 GD
)@@G@@       . INITIALIZE LENGTH COUNTER  @C@@[[ST0100 JNGD  A14,ST0300  . ANYGE
)@@G@@ MORE TO DO ?     @B@@[[       LMJ   X6,0,X6     . GET NEXT VALUE @D@@[[GF
)@@G@@       JNZ   A4,SS0930   . DFLOAT IS TOO BIG.. DOM ERR@[@@[[.     @ @@[[GG
)@@G@@.  CALCULATE AMRANG AND AMCINI@[@@[[.     @C@@[[       LA    A2,AMRANG  GH
)@@G@@ . LAOD NUM OF ELEMENTS @D@@[[       LMA   A4,A5       . PUT MAG OF PICKGI
)@@G@@ED VAL IN A4@B@@[[       TZ    DTTEST      . IS IT DROP?    @A@@[[      GJ
)@@G@@ J     ST0150      . NO, TAKE @G@@[[       TNG   A2,A4       . IF ABS(PIGK
)@@G@@CKED VAL) > OR = NUM OF ELEMENTS    @B@@[[       LA    A4,A2       .    GL
)@@G@@ THEN SET = @D@@[[       ANA   A2,A4       . SUB NU OF ELS TO BE DROPPEDGM
)@@G@@@F@@[[       LNA   A5,A5       . INVERT SIGN SO DROP LOOKS LIKE TAKE    GN
)@@G@@@ @@[[       J     ST0200      .    @F@@[[ST0150 TNG   A2,A4      . IS PGO
)@@G@@ICKED VAL = OR <NUM OF ELEMENTS     @B@@[[       J     SS0930      . NO-GP
)@@G@@ DOMAIN ERR @E@@[[       LA    A2,A4       . USE PICKED VAL AS NUM OF ELGQ
)@@G@@EMENTS@]@@[[ST0200 .    @C@@[[       LMJ   X2,0,X2     . STORE INTO DIM GR
)@@G@@VECTOR@C@@[[       MSI   A7,A2       . MULTIPLY INTO LENGTH @D@@[[      GS
)@@G@@ ANA,U A2,1        . SUBTRACT TO USE FOR COUNT  @C@@[[       SA    A2,AMGT
)@@G@@CINI   . STORE INTO COUNT     @F@@[[       JZ    A5,ST0290   . IF NOTHINGU
)@@G@@G TO FETCH, STEP TO NEXT SBU  @E@@[[       JP    A5,ST0290   . DITTO, IFGV
)@@G@@ FETCH IS AT FAR LEFT   @C@@[[.  NOT STARTING AT LEFT MOST EL, MODIFY AMGW
)@@G@@DINI  @B@@[[       LA    A1,AMRANG   . LENGTH OF DIM  @B@@[[       ANA  GX
)@@G@@ A1,AMCINI   . LESS (COUNT-1) @A@@[[       ANA,U A1,1        . MINUS 1  GY
)@@G@@@D@@[[       JZ    A1,ST0290   . IF NONE, GO TO NEXT COORD  @F@@[[      GZ
)@@G@@ AA,U  A1,1        . PLUS 1=INDEX OF 1ST ELEMENT TO GET     @B@@[[      HA
)@@G@@ SA    A1,AMDINI   . SET INITIAL VAL@A@@[[ST0290 NOP   0,0,*X8     . BUMHB
)@@G@@P X8  @A@@[[       J     ST0100      . REPEAT   @B@@[[ST0300 SA    A7,REHC
)@@G@@SLNT   . NEW LENGTH     @ @@[[       LX    X8,PMX8ST   .    @A@@[[      HD
)@@G@@ J     1,X4        . FINISHED @[@@[[/.    @[@@[[.     @D@@[[.  ERROR RETHE
)@@G@@URNS FOR ALL SELECTION FARBLE ROUTINES    @#@@[[       INSTRS .   @A@@[[HF
)@@G@@SS0900 ERROR YSYSTM,SS0999 . SYSTEM @A@@[[SS0910 ERROR YINDEX,SS0999 . IHG
)@@G@@NDEX  @A@@[[SS0920 ERROR YVALUE,SS0999 . VALUE  @A@@[[SS0930 ERROR YDOMAHH
)@@G@@I,SS0999 . DOMAIN @A@@[[SS0940 ERROR YLENGT,SS0999 . LENGTH @A@@[[SS0950HI
)@@G@@ ERROR YSYNTA,SS0999 . SYNTAX @A@@[[SS0960 ERROR YRANK,SS0999 . RANK    HJ
)@@G@@@[@@[[.     @]@@[[SS0999 .    @ @@[[       LX    X8,PMX8ST   .    @C@@[[HK
)@@G@@       J     0,X4        . GO AWAY, LITTLE GIRL @A@@[[/. SEE ADRMAP FOR HL
)@@G@@AN EXPLANATION OF @A@@[[.  HOW ARRAYS ARE RANDOMLY ACCESSED @[@@[[.     HM
)@@G@@@E@@[[.  NOTE:  STORAGE BELOW MAY BE USED AS SCRATCH BY ROUTINES  @A@@[[HN
)@@G@@.  WHICH DO NOT DO SUBSCRIPTING     @[@@[[.     @#@@[[Z      PROC .     HO
)@@G@@@D@@[[ZERBLK* NAME . GENERATE BLOCKS OF ZEROED LOCATIONS    @#@@[[      HP
)@@G@@ UNLI$T .   @[@@[[* .   @F@@[[ DO Z(1,1)//8 , DO 8 , + 0 . BOUNDARY ALIGHQ
)@@G@@N FOR READABLE DUMPS    @#@@[[       LI$T .     @]@@[[       END .@[@@[[HR
)@@G@@.     @#@@[[       VARCON .   @[@@[[.     @F@@[[.  GENERALLY DESTRUCTABLHS
)@@G@@E STORAGE USED BY LOTS OF OTHER ROUTINES  @[@@[[.     @F@@[[ERSABL RES  HT
)@@G@@ 24          . STAGING AREA FOR NAMES (LEXCAN, SYMBOL)@E@@[[BUFF*  RES  HU
)@@G@@ 300         . I/O BUFFER FOR )SAVE, )LOAD, ETC @E@@[[       RES   ERSABHV
)@@G@@L-$    . RESET TO BEGINNING OF ERASEABLE  @E@@[[WORDPT* . NAME USED BY MHW
)@@G@@ANY ROUTINES FOR TEMPORARY STORAGE  @[@@[[.     @A@@[[.  TABLES USED DURHX
)@@G@@ING SUBSCRIPTING  @[@@[[.     @F@@[[AMCLNK* ZERBLK MAXSUB    . ROUTINES HY
)@@G@@TO CALCULATE NEXT SUBSCR VALUE@A@@[[AMCOUN* ZERBLK MAXSUB    . COUNT    HZ
)@@G@@@C@@[[AMDATA* ZERBLK MAXSUB    . POINTS TO DATA WORD  @F@@[[AMDWD2* ZERBIA
)@@G@@LK MAXSUB    . DATA ADDRESSES-INITIAL AND FOR ERASURE @C@@[[AMPARM* ZERBIB
)@@G@@LK MAXSUB    . SUBSCRIPT WEIGHTS    @D@@[[AMCVAL* ZERBLK MAXSUB    . CURIC
)@@G@@RENT SUBSCRIPT VALUE    @[@@[[.     @A@@[[. USED TO RESERVE SPACE FOR REID
)@@G@@SULT  @[@@[[.     @E@@[[RESBLK* CBLOCK ZTPTMP,0,0,0 0 . DUMMY DESCR BLOKIE
)@@G@@ FOR RESULT @C@@[[RESRNK EQUF  RESBLK,,S3 . RANK OF SUBSCRIPTAND  @C@@[[IF
)@@G@@RESLNT EQUF  RESBLK,,H2 . LENGTH OF SUBSCRIPTAND@G@@[[RESDDB* CBLOCK ZTPIG
)@@G@@DIM,ZMOHFI,ZRANKV,0 0 . DUMMY DESCR FOR DUMMY DIMVECT @E@@[[RESDIM* ZERBIH
)@@G@@LK MAXSUB//2 . AREA TO CREATE DIMVECT OF RESULTS@E@@[[RESDSC* RES  1 . RII
)@@G@@EL ADDR OF DESCRIPTOR FOR SUBSCRPTAND     @[@@[[.     @]@@[[. OTHER VARSIJ
)@@G@@@[@@[[.     @D@@[[AMNSIG* RES  1           . NUM SIGNIFICANT COORDINATESIK
)@@G@@@[@@[[/.    @F@@[[.  X5 IS USED AS AN INDEX TO THE PLACE WHERE THE SUBSCIL
)@@G@@RIPT IS FROM@B@@[[.  X8 IS WHERE THE SUBSCRIPT IS GOING TO  @F@@[[.  THEIM
)@@G@@ TWO MAY DIFFER WHEN A SUBSCRIPT EXPRESSION IS A SCALAR     @F@@[[.  AT IN
)@@G@@THIS TIME, THE SCALAR IS ENTERED INTO THE EXPRESSION (ABASE)@B@@[[.     IO
)@@G@@  AND IS DROPPED FROM THE TABLES    @D@@[[AMWGHT EQUF  AMPARM,X8,H1 . MUIP
)@@G@@LTIPLIER FOR THIS SUBSCR@A@@[[AMRANG EQUF  AMPARM,X8,H2 . MAX VAL @G@@[[IQ
)@@G@@AMDINI EQUF  AMDWD2,X8,H1  . INITIAL VALUE OF  DATA WORD (MODIFIER)     IR
)@@G@@@D@@[[AMDESC EQUF  AMDWD2,X8,H2 . DESCRIPTOR ADDRESS OR ZERO@B@@[[AMLINIIS
)@@G@@ EQUF  AMCLNK,X8,H1  . INITIAL LINK @G@@[[AMCINI EQUF  AMCOUN,X8,H1 . INIT
)@@G@@ITAL COUNT (TOT NO ELTS TO GET LESS 1)    @D@@[[AMDINC EQUF  AMDATA,X8,HIU
)@@G@@1 . INCR FOR DATA WRD PTR     @B@@[[OMCINI EQUF  AMCOUN,X5,H1  . INITIALIV
)@@G@@ COUNT@B@@[[OMLINI EQUF  AMCLNK,X5,H1 . INITIAL LINK  @F@@[[OMWGHT EQUF IW
)@@G@@ AMPARM,X5,H1  . MULTIPLIER(WEIGHT) FOR THIS SUBSCR   @F@@[[OMRANG EQUF IX
)@@G@@ AMPARM,X5,H2 . MAX VAL (0-ORG) FOR THIS SUBSCRITP+1  @B@@[[OMDESC EQUF IY
)@@G@@ AMDWD2,X5,H2 . DESCR ADDR    @]@@[[       END .___TING     @[@@[[.     IZ
)@@G@@@#@@[[Z      PROC .     *[S@@@*SDFF*@F@@@@. GENERAL BIT MAP MANIPULATOR-JA
)@@G@@- MAP ENTRIES ARE 64 BITS/DOUBLEWD. @#@@@@       AXR$  .    @[@@@@.     JB
)@@G@@@A@@@@. SCAN MAP FOR AVAILABLE ATOMS--    @A@@@@.      R1=NO OF DOUBLEWOJC
)@@G@@RDS IN MAP  @^@@@@.      A0=+2,MAPADR     @^@@@@.      A1=REQUEST SIZE  JD
)@@G@@@B@@@@. AT EXIT, A0=INDEX OF AVAILABLE SPACE    @[@@@@.     @G@@@@. THISJE
)@@G@@ ROUTINE GETS THE BEST FIT-- I.E. THE SMALLEST BLOCK WHICH WILL   @G@@@@JF
)@@G@@. SATISFY THE REQUEST.  IF NONE IS FOUND, IT RETURNS THE PARAMETERS     JG
)@@G@@@A@@@@. LARGEST BLOCK WHICH COULD BE FOUND@A@@@@P      PROC  . NOMORE  ZJH
)@@G@@EROES,LDGONE@#@@@@NEXTWD* NAME .    @C@@@@       JGD   R1,$+2      . ANYJI
)@@G@@ MORE WORDS LEFT? @ @@@@       UNLIST            .    @A@@@@       J    JJ
)@@G@@ P(1,1)      . NO, QUIT @D@@@@       DL    A1,0,*X11   . ELSE GET NEXT DJK
)@@G@@OUBLEWORD   @E@@@@       LA,U  A4,64       . SET NO OF BITS NOT YET SCANJL
)@@G@@NED   @F@@@@       LNA,U A3,1        . AND DUMMY SHIFTCOUNT TO START OF JM
)@@G@@FIELD @B@@@@       LDSL  A1,8        . ELSE ALIGN IT  @D@@@@       DJZ  JN
)@@G@@ A1,P(2,1)   . IF ALL ZEROS, SPECIAL EXIT @G@@@@       JN    A1,P(2,2)  JO
)@@G@@ . IF WORD STARTS WITH A 1-BIT, SPECIAL EXIT    @#@@@@       LIST  .    JP
)@@G@@@#@@@@       END   .    @[@@@@.     @[@@@@$(1) .@ @@@@BMSCAN* SX   X11,RJQ
)@@G@@2      .    @E@@@@       LX    X11,A0      . SET UP POINTER INTO MAP ENTJR
)@@G@@RIES  @F@@@@       LA,U  A0,0        . CLEAR STARTADDR AND WIDTH OF FIELJS
)@@G@@D     @C@@@@       SA    A1,BSREQS   . SAVE REQUEST SIZE    @F@@@@      JT
)@@G@@ LA    A1,(-1,0377777)  . INITIAL VAL FOR ROUND ADDR, SIZE  @ @@@@      JU
)@@G@@ SA    A1,BSFPAR   .    @D@@@@       SZ    BSMPAR      . CLEAR SIZE OF LJV
)@@G@@ARGEST BLOCK@E@@@@. CONSIDER THAT WE HAVE BEEN SCANNING A FIELD OF ZEROEJW
)@@G@@S--   @F@@@@BS0010 NEXTWD BS0200 BS0030,BS0120 . FALL THRU IF 1ST BIT ZEJX
)@@G@@RO    @C@@@@. COUNT BITS IN THIS FIELD UNTIL SIGN CHANGES   @ @@@@BS0020JY
)@@G@@ DLSC  A1,A1       .    @D@@@@       NOP               . BE CAREFUL OF TJZ
)@@G@@HE ANOMALY  @G@@@@       TG,U  A4,2,A3     . NO BITS SHIFTED +1 .GTR. NOKA
)@@G@@ LEFT IN WORD?    @E@@@@       J     BS0100      . NO, END OF FIELD WITHKB
)@@G@@IN THE WORD @G@@@@. IF NO OF BITS SHIFTED > OR = NO  LEFT IN WORD, TRAILKC
)@@G@@ING ZEROES OR ONES@G@@@@BS0030 AA    A0,A4       . BUMP FIELD WIDTH BY NKD
)@@G@@O OF BITS LEFT IN WORD  @E@@@@       TE,U  A4,1,A3     . WAS NO OF BITS KE
)@@G@@SHIFTED = NO LEFT?@F@@@@       J     BS0010      . NO, GTR-- CONTINUE SCKF
)@@G@@AN OF ZERO FIELD  @G@@@@. SINCE WORD STARTED AS LJZF, SHIFTCT=NO BITS IMKG
)@@G@@PLIES TRAILING ONES--   @F@@@@BS0040 NEXTWD BS0110 BS0110,BS0020 . IF STKH
)@@G@@ARTBIE=1, KEEP COUNTING @G@@@@       J     BS0110      . ZERO STARTBIT, KI
)@@G@@GO CHECK LENGTH OF 1'S FIELD  @ @@@@. END OF FIELD WITHIN WORD    @E@@@@KJ
)@@G@@BS0100 LDSC  A1,1        . MOVE OUT LAST BIT OF OLD FIELD   @F@@@@      KK
)@@G@@ AA,U  A0,1,A3     . BUMP FIELD WIDTH BY NO BITS SHIFTED    @G@@@@      KL
)@@G@@ ANA,U A4,1,A3     . DECREMENT BITS LEFT TO SCAN IN THIS WORD     @G@@@@KM
)@@G@@       JNB   A2,BS0120   . IF FIELD WE JUST SCANNED WAS ZEROES, DO NEXT KN
)@@G@@@C@@@@. END OF 1'S FIELD DETECTED-- CHECK ITS SIZE    @C@@@@BS0110 LA,U KO
)@@G@@ A5,0,A0     . ISOLATE FIELD WIDTH  @B@@@@       TNE   A5,BSREQS   . EXAKP
)@@G@@CT MATCH?   @A@@@@       J     BS0210      . YES, QUIT@F@@@@       TG,H2KQ
)@@G@@ A5,BSMPAR   . NO, LARGET THAN CURRENT MAX BLOCK?     @E@@@@       SA   KR
)@@G@@ A0,BSMPAR   . YES, SAVE PARAMS FOR MAX BLOCK   @E@@@@       TG    A5,BSKS
)@@G@@REQS   . WILL REQUEST FIT IN THIS BLOCK   @F@@@@       TG,H2 A5,BSFPAR  KT
)@@G@@ . YES, IS THIS THE SMALLEST SUCH BLOCK?  @D@@@@       J     BS0120     KU
)@@G@@ . NOFIT OR NOT THE BEST FIT--@E@@@@       SA    A0,BSFPAR   . BEST FIT KV
)@@G@@SO FAR, SAVE PARAMS     @A@@@@. UPDATA TO START OF NEXT FIELD     @G@@@@KW
)@@G@@BS0120 LSSC  A0,18       . MOVE WIDTH TO INCREMENT, ADDR TO MODIFIER    KX
)@@G@@@F@@@@       NOP   A0,0,*A0    . SO WE CAN BUMP THE INDEX INTO THE MAP  KY
)@@G@@@G@@@@       LSSL  A0,18       . ALIGN START ADDR OF NEW FIELD, CLEAR ITKZ
)@@G@@S WIDT@F@@@@       TNZ   R1          . HAVE WE BEEN SCANNING THE LAST WOLA
)@@G@@RD?   @E@@@@       JZ    A4,BS0200   . YES, IF IT'S EXHAUSTED, GET OUT  LB
)@@G@@@G@@@@       DJZ   A1,BS0030   . IF BS0040 GAVE US A 0-WORD, DO DIRECT CLC
)@@G@@OUNT  @C@@@@       J     BS0020      . ELSE SHIFT AND COUNT @#@@@@. END LD
)@@G@@OF SEARCH---@D@@@@BS0200 LA    A0,BSFPAR   . GET PARAMS OF BEST FIT     LE
)@@G@@@E@@@@BS0210 TP    A0          . WAS A BEST FIT REALLY FOUND?     @E@@@@LF
)@@G@@       LA    A0,BSMPAR   . NO, GET PARAMS FOR MAX BLOCK     @C@@@@      LG
)@@G@@ DSL   A0,18       . LINE UP ADDRESS IN A0@B@@@@       SSL   A1,18      LH
)@@G@@ . AND COUNT IN A1@E@@@@       LDSC  A0,36       . THEN PUT THEM IN THE LI
)@@G@@CORRECT REGS@ @@@@       LX    X11,R2      .    @D@@@@       TG    A0,BSLJ
)@@G@@REQS   . DID WE REALLY GET A FIT?   @C@@@@       J     1,X11       . YESLK
)@@G@@, NORMAL EXIT     @B@@@@       J     0,X11       . NO, NOFIT EXIT @[@@@@LL
)@@G@@$(2) .@D@@@@BSFPAR RES   1           . PARAMS OF BESTFIT BLOCK    @D@@@@LM
)@@G@@BSMPAR RES   1           . PARAMS OF MAX FOUND BLOCK  @B@@@@BSREQS RES  LN
)@@G@@ 1           . REQUEST SIZE   @#@@@@/. MARK BIT MAP-- @F@@@@. SINCE THISLO
)@@G@@ ROUTINE ONLY INVERTS BITS, IT CAN BE USED EITHER TO  @C@@@@. MARK FREE LP
)@@G@@SPACE ALLOCATED, OR VICE-VERSA--    @E@@@@.            A0=NO OF BITS, A1LQ
)@@G@@=STARTBIT INDEX, A2=MAP ADDR  @[@@@@.     @]@@@@$(1)   .    @ @@@@BMMARKLR
)@@G@@* SX   X11,R2      .    @F@@@@       SA    A2,BMAPAD   . SAVE ADDR OF 1SLS
)@@G@@T DOUBLEWORD OF MAP     @C@@@@       SA    A1,BMAPST   . AND INDEX OF STLT
)@@G@@ARTBIT@B@@@@       AA    A0,A1       . GET STARTBIT+1 @B@@@@       LR,U LU
)@@G@@ R1,1        . SET LOOP CT    @C@@@@       SA    A0,BMAPEN   . WHICH WE LV
)@@G@@ALSO NEED   @[@@@@.     @G@@@@BM0010 DSL   A0,6        . DIV BIT INDEX BLW
)@@G@@Y 64, GIVING DOUBLEWORD INDEX @G@@@@       SSL   A1,30       . ALIGN BITLX
)@@G@@ WITHIN WORD FOR USE AS SHIFT INDEX @D@@@@       TZ    R1          . IS LY
)@@G@@THIS THE RIGHTMOST WORD?@G@@@@       JZ    A1,BM0015   . YES, IF ZEROTH LZ
)@@G@@BIT, SKIP TO PREVENT SLOP     @G@@@@                         . WITHOUT TMA
)@@G@@HE ABOVE, TABLES WOULD NEED 2 EXTRA @D@@@@                         . WORMB
)@@G@@DS WHICH WOULD BE UNUSED@G@@@@       LSSL  A0,1        . CONVERT DOUBLEWMC
)@@G@@ORD INDEX TO SINGLEWORD OFFSET@G@@@@       AA    A0,BMAPAD   . NOW A0=ABMD
)@@G@@S ADDR OF 1ST WD OF DESIRED DOUBLEWD@F@@@@       LA    A2,(+040000000000ME
)@@G@@0)   . GET MASK TO INVERT LEFT PART @ @@@@       LA,U  A3,0        .    MF
)@@G@@@E@@@@       TNZ   R1          . ARE WE DOINT THE LAST ENTRY?     @G@@@@MG
)@@G@@       DLN   A2,A2       . NO, 1ST-- CHANGE MASK SO IT FLIPS RIGHT PART MH
)@@G@@@D@@@@       DSA   A2,7,A1     . ALIGN MASK TO INDICATED BIT@D@@@@      MI
)@@G@@ XOR   A3,1,A0     . MASK RIGHT SIDE OF ENTRY   @B@@@@       XOR   A2,0,MJ
)@@G@@A0     . AND LEFT SIDE  @D@@@@       DS    A3,0,A0     . SAVE MASKED DOUMK
)@@G@@BLEWORD     @C@@@@BM0015 LA    A0,BMAPST   . GET INDEX OF STARTBIT@D@@@@ML
)@@G@@       JGD   R1,BM0010   . AND IF WE HAVENT, GO DO IT @E@@@@. 1ST AND LAMM
)@@G@@ST ENTRIES DONE, CHECK FOR INTERMEDIATE WORDS   @E@@@@BM0020 LA    A1,BMMN
)@@G@@APEN   . RECOVER INDEX OF LAST BIT +1     @C@@@@       SSL   A1,6       MO
)@@G@@ . CONVERT TO DOUBLEWORD@E@@@@       SSL   A0,6        . AND LIKEWISE FOMP
)@@G@@R THE 1ST ENTRY   @G@@@@       AA,U  A0,1        . BUMP INDEX OF 1ST ENTMQ
)@@G@@RY TO ENTRY AFTER IT    @E@@@@       ANA   A1,A0       . LAST ENTRY LESSMR
)@@G@@ ENTRY AFTER 1ST  @E@@@@       JZ    A1,BM0050   . IF IDENTICAL, NO WORDMS
)@@G@@S TO INVERT @D@@@@       TP    A1          . IF POS, INTERVENING WORDS  MT
)@@G@@@G@@@@       ANA,U A0,1        . 1ST ENTRY FLIPPED TWICE, GET ITS INDEX MU
)@@G@@BACK  @B@@@@. INVERT REQUIRED NUMBER OF TABLE ENTRIES @C@@@@BM0030 ANA,UMV
)@@G@@ A1,1        . ADJUST LOOPCT FOR JGD@F@@@@       LSSL  A0,1        . CONMW
)@@G@@VERT INDEX OF 1ST TO FLIP TO AN ADDR@C@@@@       AA    A0,BMAPAD   . MAKMX
)@@G@@E ADDR ABSOLUTE   @D@@@@       LXI,U A0,2        . SET INCR TO GO THRU MMY
)@@G@@AP    @D@@@@BM0040 DLN   A3,0,A0     . GET NEXT WORD INVERTED     @B@@@@MZ
)@@G@@       DS    A3,0,*A0    . AND PUT IT BACK@D@@@@       JGD   A1,BM0040  NA
)@@G@@ . CONTINUE TILL ALL ARE DONE @ @@@@BM0050 LX    X11,R2      .    @ @@@@NB
)@@G@@       J     0,X11       .    @]@@@@$(2)   .    @C@@@@BMAPAD EQUF  $,,H1NC
)@@G@@       . ABS ADDR OF THE MAP  @ @@@@       RES   1           .    @C@@@@ND
)@@G@@BMAPST EQUF  $,,H1       . INDEX TO 1ST BIT     @C@@@@BMAPEN EQUF  $,,H2NE
)@@G@@       . INDEX TO LASTBIT+1   @ @@@@       RES   1           .    @#@@@@NF
)@@G@@       END   .    ___,U  R1,1        . SET LOOP CT    @C@@@@       SA   NG
)@@G@@ A0,BMAPEN   . WHICH WE ALSO NEED   @[@@@@.     @G@@@@BM0010 DSL   A0,6 NH
)@@G@@       . DIV BIT INDEX B*[S@@@*SDFF*@G@@@@. ****************************NI
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUNJ
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 NK
)@@G@@                                                    * @G@@@@       AXR$ NL
)@@G@@        .                                                 * @G@@@@      NM
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@NN
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * NO
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               NP
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 NQ
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            NR
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACENS
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL NT
)@@G@@BLOCK TYPES                 * @G@@@@.                                   NU
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  NV
)@@G@@                                        * @G@@@@. **********************NW
)@@G@@*********************************************** @[@@@@.     @A@@@@/. BUFNX
)@@G@@FER MANAGEMENT FOR CONSOLE I/O@#@@@@       VARBLS .   @#@@@@. BUFFER SPANY
)@@G@@CE--  @G@@@@. NOTE: SPACE RESERVED EXCEEDS THE ACTUAL CAPACITY OF A LINENZ
)@@G@@ PRINTER--  @F@@@@.  THE EXTRA WORDS ARE INSURANCE, PARTICULARLY AGAINSTOA
)@@G@@ OVERFLOW   @E@@@@. OF THE BUFFER CAUSED BY THE LAST (END OF LINE) CHARAOB
)@@G@@CTER  @[@@@@.     @G@@@@. ROOM MUST BE ALLOWED FOR CHARS READ AFTER DOINOC
)@@G@@G QUOTE-QUAD OUTPUT     @F@@@@CIOBUF* RES   60         .  ROOM FOR 240 COD
)@@G@@HARS (132+80+SOME EXTRA)@]@@@@       .    @G@@@@       .      STORE ONE OE
)@@G@@CHARACTER FROM A1 INTO OUTPUT LINE IMAGE(OLI)   @G@@@@       .      NOTEOF
)@@G@@ THE HIGH ORDER 3 QUARTERS OF A1 ARE CLEARED TO 0     @C@@@@       .    OG
)@@G@@  BY THE CHARACTER STASH ROUTINE    @ @@@@S      PROC              .    OH
)@@G@@@ @@@@STASH* NAME              .    @ @@@@       LMJ    X2,0,X2    .    OI
)@@G@@@]@@@@       END  @]@@@@       .    @#@@@@C      PROC   .   @ @@@@OCHAR*OJ
)@@G@@ NAME              .    @ @@@@       UNLI$T            .    @ @@@@      OK
)@@G@@ LA,U   A1,C(1,1)  .    @ @@@@       LMJ    X2,0,X2    .    @ @@@@      OL
)@@G@@ LI$T              .    @ @@@@       END               .    @]@@@@      OM
)@@G@@ .    @]@@@@       .    @]@@@@/      .    @B@@@@       .      CHARACTER ON
)@@G@@STASH ROUTINES    @E@@@@       .      STASH A CHARACTER  IN SPECIFIED QWOO
)@@G@@ OF 0,X3    @D@@@@       .      STASHES ONE CHARACTER FROM A1 INTO OLI  OP
)@@G@@@]@@@@       .    @#@@@@N      PROC  .    @#@@@@NPUT*  NAME  .    @ @@@@OQ
)@@G@@       UNLI$T            .    @E@@@@       SA    A1,BFCHAR   . TEMP SAVEOR
)@@G@@ CHAR TO BE STASHED     @C@@@@       LMJ   A1,BFOFLO   . GO CHECK WIDTH,OS
)@@G@@ ETC  @G@@@@       I$ 01,N(1,1),A1-A0,X3,2*(N(1,1)=Q4),CIOBUF . STORE FROT
)@@G@@OM A1 TO BUF@A@@@@       LMJ   X2,0,X2     . RETURN   @#@@@@       LI$T OU
)@@G@@ .    @#@@@@       END   .    @[@@@@.     @G@@@@. BUFFER STASH ROUTINES OV
)@@G@@AT THIS POINT PUT CHARS INTO THE BUF.  IF A     @G@@@@. CHAR WOULD CAUSEOW
)@@G@@ BUF OFLO, THE BUF IS FLUSHED.  THESE ROUTINES NORMAL-@G@@@@. LY USE ONLOX
)@@G@@Y THE FETCH AND STASH REGS.  IF A BUF OFLO OCCURS, HOWEVER, @H@@@@. THE OY
)@@G@@INVOKE THE LINE PRINT ROUTINE, WHICH MAY DESTROY PRACTACALLY EVERY-     OZ
)@@G@@@G@@@@. THING.  HENCE, NOTHING SHOULD BE SAVED IN REGS ACROSS A STASH UNPA
)@@G@@LESS  @D@@@@. THERE IS NO POSSIBILITY THAT THE BUF WILL OVERFLOW  @[@@@@PB
)@@G@@.     @ @@@@       INSTRS            .    @ @@@@BF0010 NPUT  Q1         PC
)@@G@@ .    @ @@@@BF0020 NPUT  Q2          .    @ @@@@BF0030 NPUT  Q3         PD
)@@G@@ .    @ @@@@BF0040 NPUT  Q4          .    @ @@@@       J     BF0010     PE
)@@G@@ .    @[@@@@.     @G@@@@. THIS ROUTINE IS CALLED BY THE ABOVE FOR EVERY PF
)@@G@@CHARACTER, AND IS THE   @D@@@@. PLACE WHERE THE OVERFLOW CHECKS ARE ACTUPG
)@@G@@ALLY MADE   @[@@@@.     @D@@@@BFOFLO SA,H2 A1,BFOSTO   . SAVE ADDR OF QWPH
)@@G@@ STORE INSTR@G@@@@       TG,U  A13,250     . HAS LINE EXCEEDED TOTAL AVAPI
)@@G@@ILABLE SPACE?     @C@@@@       ER    ERR$        . YES, SYSTEM ERROR    PJ
)@@G@@@G@@@@       LA    A1,BFCHAR   . NO, RECOVER CHAR (AND CLEAR A1 UPPER, TPK
)@@G@@OO)   @D@@@@       TE,U   A1,AEOL    . IS THE CHARACTER AN AEOL?  @F@@@@PL
)@@G@@       J      BF0075     . NO , CONTINUE PROCESSING IT NORMALY    @F@@@@PM
)@@G@@       TNZ    BFEOLP     . IS THIS THE FIRST EOL ON THIS LINE?    @F@@@@PN
)@@G@@       SA     A13,BFEOLP . YES, SAVE ITS POSITION AND CONTINUE    @E@@@@PO
)@@G@@BF0075 TNZ   BFOLET      . IS LINE BUF OFLO TO BE CHECKED?  @G@@@@      PP
)@@G@@ TLE   A13,WSWDTH  . YES, IS BUF ALREADY FILLED TO MAX )WIDTH?    @E@@@@PQ
)@@G@@       J     BF0110      . NO, GO COUNT AND STORE THIS CHAR @E@@@@      PR
)@@G@@ TE,U  A1,AEOL     . YES, IS CHAR AN END OF LINE?     @C@@@@       TNE,UPS
)@@G@@ A1,ACRTRN   . OR A CARRIAGE RETURN?@D@@@@       J     BF0110      . IF PT
)@@G@@EITHER, GO STORE ANYWAY @F@@@@. CURRENT CHAR CAUSES BUF OFLO-- CLEAR OLDPU
)@@G@@ BUF, INDENT TO NEW LINE@D@@@@BF0100 LA,U  A1,AEOL     . GET AN END OF LPV
)@@G@@INE FLAG    @E@@@@       EX    *BFOSTO     . STASH IN NEXT CHAR POSN OF PW
)@@G@@BUF   @D@@@@       LMJ   X11,*RCWRIT . PRINT THE TRUNCATED LINE   @G@@@@PX
)@@G@@       LX    X3,(+1,0)   . RESET WORD STASH POINTER TO START OF BUF     PY
)@@G@@@F@@@@       LA    A1,(+ASPACE,ASPACE,ASPACE,ASPACE)    . GET 4 BLANKS  PZ
)@@G@@@E@@@@       SA    A1,CIOBUF,*X3    . PUT INTO BEGINNING OF BUF   @E@@@@QA
)@@G@@       LA,U  A13,4       . POST COUNT OF 4 CHARS NOW IN BUF @D@@@@      QB
)@@G@@ SZ    BFLAST      . CLEAR NON-BLANK INDICATOR  @C@@@@       SZ     BFEOQC
)@@G@@LP     . CLEAR EOL SEEN FLAG  @E@@@@       LA    A1,BFCHAR   . RECOVER TQD
)@@G@@HE INITIALICHARACTER    @G@@@@       J     BF0010      . AND GO BACK TO QE
)@@G@@STASH AS IF WE NEVER CAME HERE@B@@@@. CURRENT CHAR IS OK- COUNT AND STASQF
)@@G@@H IT  @E@@@@BF0110 AA,U  A13,1       . BUMP CT OF NO CHARS IN BUFFER    QG
)@@G@@@C@@@@       TE,U  A1,ASPACE   . IS CHAR A BLANK?     @F@@@@       SA   QH
)@@G@@ A13,BFLAST  . NO, POST COL NO OF LAST NON-BLANK CHAR @G@@@@       J    QI
)@@G@@ *BFOSTO     . GO BACK TO ROUTINE USED FOR ACTUAL STORE     @[@@@@.     QJ
)@@G@@@D@@@@. BACK UP STASH IN BUF TO START AFTER SPECIFIED COLUMN@[@@@@.     QK
)@@G@@@B@@@@. THIS ENTRY TO SURPRESS TRAILING BLANKS  @E@@@@BFTRLB* LA   A0,BFQL
)@@G@@LAST   . GET COL NO OF LAST NON-BLANK COL @D@@@@. THIS ENTRY TO BACK UP QM
)@@G@@TO COL 'N', WHERE N IS IN A0  @E@@@@BFBAKN* TLE,U A0,0       . TRYING TOQN
)@@G@@ GO BACK PAST COL 1?    @E@@@@       ER    ERR$        . YES, HOW ABSURDQO
)@@G@@, BETTER WIPE OUT @G@@@@       LA,U  A13,0,A0    . WE'RE OK, RESET POINTQP
)@@G@@ER TO LAST COLUMN USED  @E@@@@       DSL   A0,2        . DIVIDE COL BY 4QQ
)@@G@@, GIVING WORD NO  @D@@@@       LXM,U X3,0,A0     . PUT WORD CT IN POINTEQR
)@@G@@R REG @E@@@@       SSL   A1,34       . ALIGN CHAR NO IN WORD (REMAINDER)QS
)@@G@@@H@@@@       LXM   X2,BFTBLE,A1    . AND SET UP ADDR OF REQUIRED CHAR STQT
)@@G@@ASH ROUTINE @C@@@@       J     0,X11       . RETURN TO CALLER     @[@@@@QU
)@@G@@.     @F@@@@. TABLE USED BY BACKUP ROUTINE TO LOCATE APPROPRIATE QW STASQV
)@@G@@H     @ @@@@BFTBLE +BF0010           .    @ @@@@       +BF0020          QW
)@@G@@ .    @ @@@@       +BF0030           .    @ @@@@       +BF0040          QX
)@@G@@ .    @]@@@@       .    @ @@@@       VARBLS            .    @G@@@@BFLASTQY
)@@G@@ EQUF  $,,Q1       . COL NO OF LAST NON-BLANK STASHED, IF ANY     @#@@@@QZ
)@@G@@       RES   1 .  @F@@@@BFEOLP* RES   1          . POSITION OF FIRST EOLRA
)@@G@@ IN LINE IMAGE    @]@@@@       .    @ @@@@       VARCON            .    RB
)@@G@@@G@@@@BFOSTO +0,$-$            . **** CAUTION**** INDIRECTION THRU THIS RC
)@@G@@WORD  @F@@@@BFCHAR EQUF  BFOSTO,,Q1  . TEMP STORAGE OF CHAR BEING STASHERD
)@@G@@D     @G@@@@BFOLET* +0               . ON TO ALLOW BUF OFLO (NUMERIC FORRE
)@@G@@MATS ONLY)  @F@@@@/. ROUTINES TO SAVE AND RESTORE BUF POINTERS, PRINT LIRF
)@@G@@NES, ETC.   @[@@@@.     @#@@@@       INSTRS  .  @C@@[[.      FORCE BUFFERG
)@@G@@R TO PRINT (EVEN IF EMPTY)    @H@@[[LINFRS*        JNZ       A13,LINSTR RH
)@@G@@   . IF BUFFER FULL PROCEEDE NORMALLY     @ @@[[       OCHAR   ASPACE   RI
)@@G@@ .    @ @@[[       J       LINSTR    .    @G@@@@. RELOAD BUF POINTERS (ARJ
)@@G@@SSUMING PREVIOUS SUSPEND) AND FLUSH TO PRINTER  @G@@@@LNFLSH* LA   A13,LRK
)@@G@@NCNTR  . RESTORE NO OF CHARS IN LINE (ALL WE NEED)    @C@@@@. PRINT BUF RL
)@@G@@THRU NO OF CHARS SPECIFIED IN A13   @C@@@@LINSTR* SX   X11,LNBACK  . SAVRM
)@@G@@E RETURN ADDR     @F@@@@       JZ    A13,LINITL  . IF LINE IS EMPTY, JUSRN
)@@G@@T RESET POINTERS  @G@@@@       LA    A0,BFLAST   . ELSE GET COL NO OF LARO
)@@G@@ST NON-BLANK STASHED    @D@@@@       TNZ   A0          . WAS ENTIRE LINERP
)@@G@@ BLANK?     @G@@@@       LA,U  A0,1        . YES, BE SURE WE PRINT AT LERQ
)@@G@@AST ONE OF THEM   @G@@@@       TG    A0,A13      . IS NO TO BE PRINTED PRR
)@@G@@AST LAST NON-BLANK?     @G@@@@       LA    A0,A13      . NO, WE'RE TRUNCRS
)@@G@@ATING-- RESET FINAL COLUMN    @G@@@@       LMJ   X11,BFBAKN  . RESET START
)@@G@@SH POINTERS TO STORE AFTER GIVEN COL@D@@@@       LA,U  A1,AEOL     . GETRU
)@@G@@ AN END OF LINE FLAG    @C@@@@       LMJ   X2,0,X2     . STASH IT IN THERV
)@@G@@ LINE @D@@@@       LMJ   X11,*RCWRIT  . AND WRITE THE LINE OUT    @G@@@@RW
)@@G@@       LX    X11,LNBACK  . THEN RESTORE LINK TO CALLER AND FALL THRU    RX
)@@G@@@B@@@@. INITIALIZE POINTERS TO AN EMPTY LINE    @E@@@@LINITL* LX,U X2,BFRY
)@@G@@0010   . SET XFER ADDR TO STASH IN Q1     @F@@@@       LX    X3,(+1,0)  RZ
)@@G@@ . AND SET WORD POINTER TO 1ST WD IN BUF  @D@@@@       LA,U  A13,0      SA
)@@G@@ . CLEAR NO OF CHARS IN LINE  @G@@@@       SZ    BFLAST      . CLEAR COLSB
)@@G@@ NO OF LAST NON-BLANK AND FALL THRU @E@@@@       SZ    BFOLET      . ANDSC
)@@G@@ CLEAR BUF OFLO ALLOW FLAG    @E@@@@       SZ     BFEOLP     . TURN END SD
)@@G@@OF LINE SEEN FLAG OFF   @F@@@@. SAVE BUF POINTERS SO WE CAN SUSPEND STASSE
)@@G@@HING AND LATER RESUME   @D@@@@LINSUS* SX   X2,LNCHAR   . SAVE CHARACTER SF
)@@G@@POINTER REG @B@@@@       SX    X3,LNWORD   . AND WORD REG   @G@@@@      SG
)@@G@@ SA    A13,LNCNTR  . SAVE NO OF CHARS CURRENTLY STORED IN LINE    @E@@@@SH
)@@G@@       J     0,X11       . AND (FINALLY) RETURN TO USER     @E@@@@. RESTSI
)@@G@@ORE BUF POINTERS TO RESUME A PREVIOUSLY SUSPENDED LINE@D@@@@LINRES* LX  SJ
)@@G@@ X2,LNCHAR   . RESET CHARACTER POINTER    @C@@@@       LX    X3,LNWORD  SK
)@@G@@ . AND WORD POINTER     @E@@@@       LA    A13,LNCNTR  . DITTO NO OF CHASL
)@@G@@RS STASHED IN LINE@B@@@@       J     0,X11       . THEN RETURN    @]@@@@SM
)@@G@@       .    @#@@@@LINMRK*       .   @ @@@@       SX     X11,LNBACK .    SN
)@@G@@@ @@@@       LMJ    X11,*RCWRMK .   @ @@@@       LX     X11,LNBACK .    SO
)@@G@@@ @@@@       J      LINITL     .    @]@@@@       .    @ @@@@       VARBLSP
)@@G@@S            .    @B@@@@LNBACK EQUF  $,,H1       . RETURN ADDR    @E@@@@SQ
)@@G@@LNCNTR EQUF  $,,H2       . COUNTER FOR NO CHARS IN LINE     @#@@@@      SR
)@@G@@ RES   1 .  @F@@@@LNCHAR RES   1           . STORAGE OF CHAR POINTER WHISS
)@@G@@LC SUSPENDED@C@@@@LNWORD RES   1           . DITTO WORD POINTER   @A@@@@ST
)@@G@@/      .      FILL INPUT BUFFER     @B@@@@       .      JUST FOR NOW, KLSU
)@@G@@UGE IT UP   @ @@@@       INSTRS            .    @ @@@@BUFILL* J     *RCTSV
)@@G@@REA    .    @]@@@@       END  ___RESTORE NO OF CHARS IN LINE (ALL WE NEESW
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************SX
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APSY
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         SZ
)@@G@@                            * @G@@@@       AXR$         .               TA
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSTB
)@@G@@EMBLY PARAMETERS                        * @G@@@@       APSYMB.     DEFINTC
)@@G@@E APL SYMBOL SET                              * @G@@@@       FDSYMB.    TD
)@@G@@ DEFINE FIELDATA SYMBOLS                            * @G@@@@       WSDEFTE
)@@G@@.      DEFINE WORKSPACE                                   * @G@@@@WORKSPTF
)@@G@@ INFO  2 20.      SET ASIDE THE SPACE                           * @G@@@@TG
)@@G@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                            * TH
)@@G@@@G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE                  TI
)@@G@@    * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES       TJ
)@@G@@          * @G@@@@.                                                     TK
)@@G@@                * @G@@@@. END OF STANDARD PROC BLOCK                    TL
)@@G@@                      * @G@@@@. ****************************************TM
)@@G@@***************************** @[@@@@.     @[@@@@.     @#@@@@       STATETN
)@@G@@V .   @F@@@@       FUZDEF            . DEFINE FUZZ PARAMS FOR USE BY )CLTO
)@@G@@EAR   @]@@@@       IODEF@[@@@@.     @G@@@@. THIS CODE MAY BE USED BY EITTP
)@@G@@HER SEGMENT, HENCE IT HAS ITS OWN ELEMENT @[@@@@.     @G@@@@. COME HERE TQ
)@@G@@TO INITIALIZE ALL POINTERS IN LOWER WS, AND SET PARAMETERS  @D@@@@. IN ATR
)@@G@@LL SUBROUTINES WHICH NEED TO BE INITIALIZED     @[@@@@.     @ @@@@      TS
)@@G@@ INSTRS            .    @G@[@@CLOWER* LA,U A0,WSSIZE   . SET ALLOCATABLETT
)@@G@@ FREE STORAGE TO DEFAULT VAL  @E@[@@       LA,U  A1,WSYSIZ   . DEFAULT STU
)@@G@@IZE OF SYMBLO TABLE     @F@[@@        SZ   ERRITH      . BE SURE ARITH OTV
)@@G@@FLOS ARE TAKEN CARE OF  @F@[@@. ENTER HERE IF SYMBOLS AND/OR FREE SPACE TW
)@@G@@ARE NOT DEFAULT VALUES  @ @[@@CLOWEN* SX   X11,CLLINK  .    @G@@[[. THISTX
)@@G@@ ENTRY (FOR )PACK) LEAVES WSNAME, ORIGIN, SIZE, ETC., UNDISTURBED @G@@[[TY
)@@G@@CLOWEP* LA     A0,WSNSIZ      . SET NOMINAL FREE SIZE TO WHAT IT IS NOW TZ
)@@G@@@G@@[[        LA     A1,WSYMAX      . SET SYMBOLS TO ITS PRESENT VALUE, UA
)@@G@@TOO   @F@@[[                              . FALL THRU TO SET NOCHANGE FLUB
)@@G@@AG    @G@@[[. THIS ENTRY (FOR )SYMBOLX) ASSUMES FREESPACE AND SYMBOLS ALUC
)@@G@@READY IN REG@G@@[[CLOWES* SX     X11,CLNCHG     . RAISE NOCHG FLAG FOR )UD
)@@G@@SYMBOLS AND )PACK @D@@[[        J      CL0100         . AND GO DO THE DEUE
)@@G@@ED    @D@@[[. THIS ENTRY IS FOR NORMAL )CLEAR USING DEFAULT VALUES@G@@[[UF
)@@G@@CLOWER* LA,U   A0,4096        . SET INITIAL ALLOCATION TO THE MINIMUM   UG
)@@G@@@G@@[[        LA,U   A1,WSYSIZ      . DEFAULT SYMBOLS IS AN ASSEMBLY PARUH
)@@G@@AM    @D@@[[        SZ     CLNCHG         . CLEAR NOCHANGE FLAG   @ @@[[UI
)@@G@@. EVERYBODY CONVERGES HERE -- @A@@[[CL0100  SX     X11,CLLINK     .     UJ
)@@G@@@G @@@       LMJ   X11,CLFSET  . SET UP FREE LIST AND SYMBOL TABLE POINTUK
)@@G@@ERS   @D@[@@       TLD   A0,CLWSID   . GET WSNAME OF 'CLEAR WS'   @ @[@@UL
)@@G@@       TSTO  A0,WSID     .    @C]@@@       LMJ   X11,SVCLEA  . CLEAR THEUM
)@@G@@ STATEVECTOR@^@@@@       ER    ERR$ .     @D@@@@       LMJ   X11,SMCLEA UN
)@@G@@ . CLEAR THE SYMBOL TABLE     @E@@@@       LMJ   X11,STCLEA  . SET STACKUO
)@@G@@ TO EMPTY CONDITION     @F@@[[        TZ     CLNCHG         . SHOULD LOWUP
)@@G@@ER WS PARAMS BE CHANGED?@D@@[[        J      CL0200         . NO, BYPASSUQ
)@@G@@ THIS STUFF @D@@[[. SET WS TO DEFAULT VALUES (DIGITS,WIDTH,ORIGINS...)  UR
)@@G@@@D@@[[       TLD   A0,CLWSID   . GET WS NAME OF 'CLEAR WS'  @C@@[[      US
)@@G@@ TSTO A0,WSID      . MAKE THIS CLEAR WS   @D@@@@       SZ    WSDBUG     UT
)@@G@@ . TURN OF F DEBUGGING FLAG   @E@@@@       X$OFF             . AND TURN UU
)@@G@@THE DUMPS OFF, ALSO     @ @@@@       LA,U  A0,1        .    @D@@@@      UV
)@@G@@ SA    A0,WSIXOR   . SET INDEXING ORIGIN TO ONE @ @@@@       LA,U  A0,10UW
)@@G@@       .    @F@@@@       SA    A0,WSDGTS   . SET NO OF SIGNIFICANT DIGITUX
)@@G@@S TO TEN    @F@@@@       LA    A0,RCLSIZ   . GET LINE SIZE FOR THIS TYPEUY
)@@G@@ OF TERMINAL@C@@@@       SA    A0,WSWDTH   . MAKE IT THE WS WIDTH @F@@@@UZ
)@@G@@       LMJ   A0,RANSED   . INITIALIZE RANDOM NUMBER GENERATOR     @B@@@@VA
)@@G@@       DL    A0,CLSFEI   . GET QUAD-COLON @E@@@@       DS    A0,WSSFEI  VB
)@@G@@ . AND SET AS SIG FLAG, EVAL INPUT  @ @@@@       DL    A0,SPACES   .    VC
)@@G@@@C@@@@       DS    A0,WSPASW   . CLEAR CURRENT KEY    @G@@[[        LA  VD
)@@G@@   A0,RCDFWS      . GET MAX EXPANSION ALLOWED FOR DEFAULT WS@B@@[[      VE
)@@G@@  SA     A0,WSMSIZ      . POST IT   @D@@[[       LA,U  A2,FUZIND   . GETVF
)@@G@@ DEFAULT FUZZ INDEX     @C@@[[       SETFUZ            . PUT FUZZ PARM IVG
)@@G@@NTO WS@E@[@@       LA,U  A0,STSUSP   . SUSPENDED STATE (KEYBOARD MODE)  VH
)@@G@@@E@@][CL0200 LA,U  A0,STSUSP   . SUSPENDED STATE (KEYBOARD MODE)  @D[@@@VI
)@@G@@       SA    A0,STVCUR   . MAKE IT THE CURRENT STATE  @E@@@@       LA,U VJ
)@@G@@ A0,PGVERS   . VERSION OF THIS ASSEMBLY OF APL  @B@@@@       SA    A0,WSVK
)@@G@@VERS   . TO WORKSPACE   @B@@@@       LA,U  A0,PGLEVL   . DITTO FOR LEVELVL
)@@G@@@ @@@@       SA    A0,WSLEVL   .    @D@[@@       LA,U  A2,FUZIND   . GETVM
)@@G@@ DEFAULT FUZZ INDEX     @C@[@@       SETFUZ            . POST PARAMS IN VN
)@@G@@THE WS@F]@@@       LMJ   X11,LINITL  . INITIALIZE CONSOLE I/O BUF TO EMPVO
)@@G@@TY    @ @@@@       L     X11,CLLINK  .    @A@@@@       J     0,X11      VP
)@@G@@ . ALL DONE @[@@@@.     @B@@@@. SET POINTERS FOR FREELIST / SYMBOL TABLEVQ
)@@G@@@G@@@@.     ENTER WITH A1=NO ENTRIES IN SYMBOL TBL, A0=NOMINAL WS SIZE (VR
)@@G@@WORDS)@F@[@@WSYREL EQU   WSYTBL**0777777 . REL ADDR OF 1ST WD OF SYMBOL VS
)@@G@@TABLE @[@@[[.     @E@[@@CLFSET* SA    A0,WSNSIZ   . SAVE NOMINAL SIZE OFVT
)@@G@@ THIS WS    @E@@][CLFSET  SA    A0,WSNSIZ   . SAVE NOMINAL SIZE OF THIS VU
)@@G@@WS    @E]@@@       SA    A1,WSYMAX   . AND NO OF SYMBOLS TO BE ALLOWED  VV
)@@G@@@F@[@@       LSC   A0,A0       . COUNT NO LEADING 0'S IN THIS POWER OF 2VW
)@@G@@@G@[@@       AN,U  A1,36-13    . LESS NO LDG BITS IF 4096 =-(NO BITS>409VX
)@@G@@6)    @G@[@@       SN    A1,WSISIZ   . SAVE INDEX FOR THIS WS SIZE (0,1,VY
)@@G@@2=4K,8K,16K)@G@@[[        SSL    A0,12          . DIVIDE NOMINAL SIZE INVZ
)@@G@@ WORDS BY 4096    @D@@[[        SA     A0,WSISIZ      . AND POST SIZE INWA
)@@G@@DEX   @C@@[[. CLEAR OUT UNUSED WORDS IN LOWER WORKSPACE     @A@@[[      WB
)@@G@@  LA,U   A1,WSFLGD+1    .     @A@@[[        LXI,U  A1,1           .     WC
)@@G@@@A@@[[        LR,U   R1,66-1        .     @A@@[[        SZ     0,*A1    WD
)@@G@@      .     @A@@[[        JGD    R1,$-1         .     @A@@[[        LXM,WE
)@@G@@U  A1,WSFPNT+1    .     @A@@[[        LR,U   R1,16-1        .     @A@@[[WF
)@@G@@        SZ     0,*A1          .     @A@@[[        JGD    R1,$-1         WG
)@@G@@.     @F@@[[        SZ     ERRITH         . CLEAR ARITHMTEIC CINTINGENCYWH
)@@G@@ FLAG @F#@@@       LA    A1,WSYMAX   . RECOVER MAX NO OF SLOTS FOR SYMBOWI
)@@G@@LS    @E@@@@       MSI,U A1,3        . GET NO OF WDS FOR SYMBOL TABLE   WJ
)@@G@@@E@[@@       AA,U  A1,WSYREL   . PLUS BASE ADDR OF SYMBOL TABLE   @G@@[[WK
)@@G@@        AA,U   A1,WSYTBL-WSID . PLUS BASE ADDR OF SYMBOL TBL (RELATIVE) WL
)@@G@@@E[@@@       SA    A1,WSFREE   . GIVES ADDR OF 1ST WD ON FREE LIST@C@@@@WM
)@@G@@       ANU,U A1,3        . LESS NO WDS PER ENTRY@G@@@@       SA    A2,WSWN
)@@G@@YEND   . GIVES ADDR OF LAST ENTRY IN SYMBOL TABLE     @G@[@@       LA,U WO
)@@G@@ A2,WSYREL+3*WSYSIZ    . NOMINAL START LOC FOR FREE LIST    @E@@[[      WP
)@@G@@  LA,U   A2,WSWORK-WSID . NOMINAL START OF FREE SPACE @E[@@@       ANA  WQ
)@@G@@ A2,A1       . LESS ACTUAL = NO OF EXTRA WORDS  @G@@@@       AA    A2,WSWR
)@@G@@NSIZ   . PLUS NOMINAL FREE SPACE SIZE=ACTUAL FREE SIZE@D@@@@       LSSL WS
)@@G@@ A2,18       . ALIGN SIZE, CLEAR LINK     @F@@@@       ABSADR A1        WT
)@@G@@ . ACTUAL ADDR OF 1ST WD ON FREE LIST     @F@@@@       SA    A2,0,A1    WU
)@@G@@ . PLUG SIZE INTO 1ST WD OF FREE LIST     @D@@@@       SZ    WSFFWA     WV
)@@G@@ . CLEAR OPEN TEXTBLOK POINTER@E@@@@       SZ    WSYNUM      . CLEAR NO WW
)@@G@@OF TABULATED SYMBOLS    @D@@[[        SZ     WSGARB         . CLEAR GARBWX
)@@G@@AGE POINTER @A@@@@       J     0,X11       . RETURN   @[@@@@.     @#@@@@WY
)@@G@@       CONSTS.    @ @@@@CLWSID APLBCI 'CLEAR WS    '  @A@@@@CLSFEI +AQUAWZ
)@@G@@D,ACOLON,AEOL,AEOL     .@A@@@@       +AEOL,AEOL,AEOL,AEOL   .     @[@@@@XA
)@@G@@.     @ @@@@       VARBLS            .    @[@@@@.     @ @[@@CLLINK +    XB
)@@G@@ 0           .    @E@@[[CLNCHG  EQUF   $,,H1          . NO CHANGE (OF LOXC
)@@G@@WER WS) FLAG@D@@[[CLLINK EQUF  $,,H2       . X11-SAVE  ,RETURN ADDR     XD
)@@G@@@#@@[[       +     0    @#[@@@       END   .    ___SET* SA    A0,WSNSIZ XE
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************XF
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APXG
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         XH
)@@G@@                            * @G@@@@       AXR$         .               XI
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSXJ
)@@G@@EMBLY PARAMETERS                        * @G@@@@       WSDEF.      DEFINXK
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.XL
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTXM
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONXN
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@XO
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * XP
)@@G@@@G@@@@.                                                                 XQ
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                XR
)@@G@@          * @G@@@@. ****************************************************XS
)@@G@@***************** @[@@@@.     @[@@@@.     @D@@@@/.    COMPOUND OPERATORSXT
)@@G@@ - INNER AND OUTER PRODUCT    @[@@@@.     @#@@@@       INSTRS .   @ @@@@XU
)@@G@@OUTPRD* SX   X11,CPLINK  .    @D@@@@       SZ    CPINNR      . TURN OFF XV
)@@G@@INNER PRODUCT FLAG@ @@@@       J     DV0010      .    @ @@@@. INNER PRODXW
)@@G@@UCT ENTRY    .    @ @@@@INPROD* SX   X11,CPLINK  .    @D@@@@       SX   XX
)@@G@@ X11,CPINNR  . TURN ON INNER PROD FLAG    @C@@@@       DS    A0,CPIDRT  XY
)@@G@@ . SAVE RITEOP PARAMS   @E@@@@       DL    A0,A4       . MOVE LEFTOP PARXZ
)@@G@@AMS OVER FOR STORE@B@@@@. EXAMINE L AND R ARGS, CREATE DIMVECT    @D@@@@YA
)@@G@@DV0010 DS    A0,CPIDEN   . SAVE OPCODE TABLE ADDR     @G@@@@       SZ   YB
)@@G@@ CPMODC      . TURN OFF OUTER LOOP MODE CONVERSION FLAG     @C@@@@      YC
)@@G@@ SZ    CGMODC      . AND INNER ONE, TOO   @C@@@@       LMJ   X11,PIKTWO YD
)@@G@@ . DECODE BOTH ARGS     @ @@@@       J     CP0999      .    @C@@@@      YE
)@@G@@ SA,S2 A3,CPDESC   . SAVE MODE OF FETCHING@D@@@@       DL    A0,X4      YF
)@@G@@ . GET INITIAL FETCH PARAMS   @G@@@@       ANA,U A0,1        . IN CASE IYG
)@@G@@NNER, SET UP LEFTARG  R-TO-L PICKUP @D@@@@       TNZ   CPINNR      . IS YH
)@@G@@THIS INNER PRODUCT?     @G@@@@       DL    A0,X6       . NO OUTER, GET RYI
)@@G@@ITEARG REGS FOR RECYCLING     @E@@@@       DS    A0,CPRITF   . TEMP SAVEYJ
)@@G@@ INITIAL PICKUP REGS    @A@@@@. GET RANK, SHAPE, ETC OF RESULT    @C@@@@YK
)@@G@@DV0100 LA    A0,LFTRNK   . RANK OF LEFT ARG     @D@@@@       TNZ   CPINNYL
)@@G@@R      . IS THIS INNER PRODUCT?     @E@@@@       J     DV0105      . NO,YM
)@@G@@ OUTER.  NO ADJUSTMENTS NEEDED@D@@@@       TNZ   LFTRNK      . YES, IS LYN
)@@G@@EFTARG A SCALAR?  @F@@@@       AA,U  A0,1        . YES, TREAT AS IF EXTEYO
)@@G@@NDED TO VECTOR    @D@@@@       TNZ   RITRNK      . SAME THING FOR RIGHT YP
)@@G@@ARG   @ @@@@       AA,U  A0,1        .    @G@@@@       ANA,U A0,2       YQ
)@@G@@ . ADJUST FOR THE DIMS WHICH WILL BE REDUCED OUT@D@@@@DV0105 AA    A0,RIYR
)@@G@@TRNK   . ADD IN RANK OF RIGHTARG    @F@@@@       TLE,U A0,1        . WILYS
)@@G@@L RESULT RANK BE AT LEAST VECTOR?   @E@@@@       SSL   A0,36       . NO-YT
)@@G@@ FORCE TO PLUS ZERO FOR SCALAR@E@@@@       TG,U  A0,MAXSUB+1 . IS RANK OYU
)@@G@@F RESULT WITHIN RANGE?  @C@@@@       J     CP0910      . NO, LENGTH ERROYV
)@@G@@R     @C@@@@       SA,S3 A0,CPDESC   . POST RANK OF RESULT  @D@@@@      YW
)@@G@@ SA,H2 A0,CPDIMD   . SET DIMVECT LENGTH, TOO    @F@@@@. NOW INITIALIZE DYX
)@@G@@IMVECT OF RESULT=CATEN OF DIMS OF L AND R ARGS  @D@@@@DV0110 LX,H2 X2,PUYY
)@@G@@TARY+ZMOHFI . USE LEFTARG STASH RTNE@G@@@@       LX    X3,(+1,RESDIM)   YZ
)@@G@@. AND SAVE IN ERASABLE STORE IN RANDAC    @D@@@@       LA,U  A6,1       ZA
)@@G@@ . INITIALIZE LENGTH OF RESULT@F@@@@       SA    A6,CPINRD   . AND ALSO ZB
)@@G@@SET INNER DIM REDUCE LENGTH   @C@@@@       LX,U  X11,2            . SET ZC
)@@G@@LOOP CT     @D@@@@DV0120 JNGD  X11,DV0150  . IF BOTH ARGS SCANNED, EXIT ZD
)@@G@@@D@@@@       LA    A0,*PNTRNK,X11   . GET RANK OF THIS ARG  @E@@@@      ZE
)@@G@@ JE,U  A0,ZRANKS DV0120 . IF SCALAR, FORGET THE DIMS  @F@@@@       JNE,UZF
)@@G@@ A0,ZRANKV DV0130 . IF NOT VECTOR, GO MOVE DIMVECT    @E@@@@       LA   ZG
)@@G@@ A2,*PNTSIZ,X11   . FOR VECTOR, DIMENSION=SIZE  @B@@@@       TNZ   CPINNZH
)@@G@@R      . INNER PRODUCT? @D@@@@       J     DV0126      . NO, GO SAVE LENZI
)@@G@@GTH (OUTER) @B@@@@       TNZ,U 0,X11       . YES- LEFTARG?  @F@@@@      ZJ
)@@G@@ J     DV0123      . NO, RITEARG-GO CHECK FOR LENGTH MATCH  @F@@@@      ZK
)@@G@@ SA    A2,CPINRD   . LEFTARG; SAVE LENGTH OF INNER DIMENSION@C@@@@      ZL
)@@G@@ J     DV0120      . GO BACK FOR RITEARG  @D@@@@DV0123 TNE   A2,CPINRD  ZM
)@@G@@ . DO INNER DIMENSIONS MATCH? @B@@@@       J     DV0120      . YES, CONTZN
)@@G@@INUE  @C@@@@       TZ    LFTRNK      . IS LEFTARG A SCALAR? @B@@@@      ZO
)@@G@@ J     CP0930      . NO, RANK ERROR @G@@@@       SA    A2,CPINRD   . YESZP
)@@G@@, SAVE THIS VAL AS LENGTH OF INNER DIM    @B@@@@       J     DV0120     ZQ
)@@G@@ . AND CONTINUE   @E@@@@DV0126 MSI   A6,A2       . FOLD THIS DIM INTO TOZR
)@@G@@TAL LENGTH  @C@@@@       LMJ   X2,0,X2          . SAVE LENGTH     @C@@@@ZS
)@@G@@       J     DV0120           . GO FOR OTHER ARG@E@@@@. OPERAND IS ARRAYZT
)@@G@@-COPY ITS DIMVECT (USE RITEARG FETCHREGS) @C@@@@DV0130 LX    X7,*PNTDMD,ZU
)@@G@@X11   . DIM DATA ADDR   @B@@@@       LXI,U X7,1             . STEP=1    ZV
)@@G@@@E@@@@       LX,H2 X6,GRITBL+ZMOHFI . FETCH RTNE ADDR FOR HALFINTS@E@@@@ZW
)@@G@@       LA    A15,*PNTRNK,X11 . SET NO OF COORDS (=RANK)     @D@@@@      ZX
)@@G@@ TNZ   CPINNR      . IS THIS INNER PRODUCT?     @D@@@@       J     DV014ZY
)@@G@@0      . NO, OUTER. GO FOLD IN DIMS @C@@@@       TNZ,U 0,X11       . IS ZZ
)@@G@@THIS LEFT ARG?    @D@@@@       J     DV0136      . NO, RIGHT. GO CHECK 1AA
)@@G@@ST DIM@C@@@@. INNER PRODUCT LEFTARG-- MOVE ALL BUT LAST DIM @F@@@@      AB
)@@G@@ JGD   A15,DV0134  . DECR COUNT TO COMPENSATE FOR LAST DIM  @B@@@@DV0132AC
)@@G@@ LMJ   X6,0,X6     . PICK VALUE     @C@@@@       MSI   A6,A5       . FOLAD
)@@G@@D INTO LENGTH     @B@@@@       DL    A1,A4       . MOVE FOR STOR  @C@@@@AE
)@@G@@       LMJ   X2,0,X2     . STASH IN DIMVECT     @E@@@@DV0134 JGD   A15,DAF
)@@G@@V0132  . GO BACK FOR NEXT DIM, IF ANY     @C@@@@       LMJ   X6,0,X6    AG
)@@G@@ . GET RIGHTMOST VALUE  @D@@@@       SA    A5,CPINRD   . SAVE LENGTH OF AH
)@@G@@INNER DIM   @C@@@@       J     DV0120      . GO BACK FOR RITE ARG @D@@@@AI
)@@G@@. INNER PRODUCT RITEARG- CHECK FOR MATCH ON INNER DIM @A@@@@DV0136 JGD  AJ
)@@G@@ A15,$+1     . COUNT DIM@C@@@@       LMJ   X6,0,X6     . PICK UP LEFTMOSAK
)@@G@@T DIM @F@@@@       TNE   A5,CPINRD   . IS IT EQUAL TO RITEMOST OF LEFTARAL
)@@G@@G?    @D@@@@       J     DV0140      . YES, GO MOVE REMAINING DIMS@C@@@@AM
)@@G@@       TZ    LFTRNK      . IS LEFTARG A SCALAR? @B@@@@       J     CP093AN
)@@G@@0      . NO, RANK ERROR @G@@@@       SA    A5,CPINRD   . YES, SAVE THIS AO
)@@G@@VAL AS LENGTH OF INNER DIM    @^@@@@. MOVE REMAINING DIMS   @G@@@@DV0140AP
)@@G@@ JNGD  A15,DV0120  . IF NO MORE DIMS TO MOVE, GO GET NEXT ARG     @B@@@@AQ
)@@G@@       LMJ   X6,0,X6     . PICK UP DIMVAL @C@@@@       MSI   A6,A5      AR
)@@G@@ . FOLD INTO LENGTH     @A@@@@       DL    A1,A4       . MOVE     @A@@@@AS
)@@G@@       LMJ   X2,0,X2     . STASH    @ @@@@       J     DV0140      .    AT
)@@G@@@F@@@@. NOW THAT DIMVECT HAS BEEN CREATED, CLEAN UP TO STORE RESULT     AU
)@@G@@@D@@@@DV0150 TG,U  A6,0400000  . IS LENGTH WITHIN RANGE?    @C@@@@      AV
)@@G@@ J     CP0910      . NO, LENGTH ERROR     @D@@@@       SA,H2 A6,CPDESC  AW
)@@G@@ . YES, PLUG INTO DESCRIPTOR  @C@@@@       LA,U  A0,RESDIM   . GET ADDR AX
)@@G@@OF DIM DATA @ @@@@       RELADR A0         .    @E@@@@       SA    A0,CPAY
)@@G@@DIMD+1 . TO DATA POINTER OF DIM DESCR     @C@@@@       LA,U  A0,CPDIMD  AZ
)@@G@@ . ADDR OF DIM DESCR    @#@@@@       RELADR A0 .@E@@@@       SA,H1 A0,CPBA
)@@G@@DESC+1 . PLUG INTO DUMMY DESCR OF RESULT  @C@@@@       TZ,H2 CPDESC     BB
)@@G@@ . WILL RESULT BE NULL? @D@@@@       J     DV0160      . NO, GO GET SET BC
)@@G@@TO DO THE OP@D@@@@       LA,U  A6,CPDESC   . YES, GET DUMMY DESCR ADDR  BD
)@@G@@@ @@@@       RELADR A6         .    @B@@@@       LMJ   X11,DUPE    . COPBE
)@@G@@Y THE NULL  @ @@@@       J     CP0999      .    @ @@@@       PUSH  A2   BF
)@@G@@       .    @B@@@@       J     CP0050      . NORMAL EXIT    @D@@@@DV0160BG
)@@G@@ TZ    CPINNR      . IS THIS INNER PRODUCT?     @B@@@@       J     IN010BH
)@@G@@0      . YES, GO DO IT  @E@@@@                         . NO, OUTER -- FABI
)@@G@@LL THRU TO OP0100 @^@@@@/.    OUTER PRODUCT     @C@@@@. PREPARE TO PERFOBJ
)@@G@@RM THE SPECIFIED DYADIC OP    @E@@@@OP0100 DL    A0,CPIDEN   . GET IDENTBK
)@@G@@ITY FLAG AND TABLE ADDR @F@@@@       AA,S2 A1,CPDESC   . TBL ADDR+FETCH BL
)@@G@@MODE=ENTRY FOR THIS OP  @D@@@@       TP    0,A1        . IS OP LEGAL IN BM
)@@G@@THIS MODE?  @C@@@@       J     CP0900      . NO, DOMAIN ERROR     @E@@@@BN
)@@G@@       LA,S1 A0,0,A1     . GET MODE TO BE USED FOR RESULT   @C@@@@      BO
)@@G@@ SA,S2 A0,CPDESC   . INTO DUMMY DESCRIPTOR@C@@@@       LA,H2 A0,0,A1    BP
)@@G@@ . GET ADDR OF CODE RTNE@E@@@@       SA    A0,CPMAJR   . TEMP SAVE POINTBQ
)@@G@@ER TO OP SUBRTNE  @C@@@@       LA,S2 A1,CPDESC   . GET MODE OF STORAGE  BR
)@@G@@@C@@@@       LA,U  A0,CPDESC   . ADDR OF DUMMY DESCR  @E@@@@       LMJ  BS
)@@G@@ X11,PUTANS  . SET UP REGS TO RECIEVE RESULT    @ @@@@       J     CP099BT
)@@G@@9      .    @D@@@@       PUSH  A6          . RESULT DESCRIPTOR TO STACK BU
)@@G@@@B@@@@. NOW INITIALIZE COMPUTATIONAL LOOP AND GO@D@@@@OP0110 LX    X11,CBV
)@@G@@PMAJR  . SET LINK TO OPCODE RTNE    @C@@@@       LA    A14,LFTSIZ  . SETBW
)@@G@@ UP LOOP COUNTERS @E@@@@OP0120 JNGD  A14,CP0050  . IF NO MORE LEFTARGS, BX
)@@G@@END OF OP   @D@@@@       LMJ   X4,0,X4     . YES, PICK UP NEXT LEFTARG  BY
)@@G@@@C@@@@       DS    A1,CPIDEN   . TEMP STORE LEFT VALUE@E@@@@       LX   BZ
)@@G@@ X6,CPRITF   . SET UP TO STEP THRU RIGHT ARG    @ @@@@       LX    X7,CPCA
)@@G@@RITF+1 .    @ @@@@       LA    A15,RITSIZ  .    @E@@@@OP0130 JNGD  A15,OCB
)@@G@@P0120  . IF NO MORE RITEARG, STEP THE LEFT@C@@@@       LMJ   X6,0,X6    CC
)@@G@@ . ELSE GET NEXT RITEVAL@C@@@@       DL    A1,CPIDEN   . CURRENT LEFT VACD
)@@G@@LUE   @B@@@@       LMJ   X11,0,X11   . PERFORM DYAD   @C@@@@       J    CE
)@@G@@ CP0900      . OOPS, DOMAIN ERR     @B@@@@       LMJ   X2,0,X2     . STACF
)@@G@@SH RESULT   @D@@@@       J     OP0130      . GO BACK FOR NEXT RITEARG   CG
)@@G@@@^@@@@/.    INNER PRODUCT     @D@@@@IN0100 TNZ   CPINRD      . IS INNER CH
)@@G@@DIMENSION NULL?   @G@@@@       J     RD0200      . YES, USE REDUCE TO FICI
)@@G@@LL WITH LEFTOP IDENTITY @^@@@@. INITIALIZE INNER LOOP @G@@@@IN0110 LA,S2CJ
)@@G@@ A2,CPDESC   . GET FETCHMODE OF OPERANDS (=MODE OF INNER OP)@G@@@@      CK
)@@G@@ SA    A2,CPINNR   . TEMP SAVE TO DETERMINE FETCHRTNE FOR RITEARG @G@@@@CL
)@@G@@       AU    A2,CPIDRT+1 . MODE +TBL BASE=OPTBL ENTRY ADDR FOR MODE     CM
)@@G@@@E@@@@       TP    0,A3        . IS OP DEFINED FOR THIS MODE?     @B@@@@CN
)@@G@@       J     CP0900      . NO, DOMAIN ERR @G@@@@       LA,H2 A4,0,A3    CO
)@@G@@ . YES, GET ADDR OF SUBRTNE FOR THIS OPCODE     @E@@@@       SA    A4,CPCP
)@@G@@MINR   . MAKE IT INNER LOOP OP SUBRTNE    @C@@@@       LA,U  A0,CGMINR  CQ
)@@G@@ . ADDR OF INNER LOOP   @E@@@@       SA    A0,CPGMAJ   . MAKE IT THE OUTCR
)@@G@@ER LOOP FETCH RTNE@D@@@@       SZ    CGMODC      . TURN MODE CHG FLAG OFCS
)@@G@@F     @D@@@@       LA,S1 A2,0,A3     . OUTPUT MODE OF INNER OPCODE@F@@@@CT
)@@G@@       JNE,U A2,ZMOINT IN0130 . IF NOT LARGE INTEGER, DON'T CHANGE@F@@@@CU
)@@G@@IN0120 LA,U  A2,ZMODFL   . SET MODE OF INNER LOOP RESULT=DFLOAT   @F@@@@CV
)@@G@@       SA    A2,CGMODC   . TURN ON INNER LOOP MODE CHANGE FLAG    @ @@@@CW
)@@G@@. INITIALIZE OUTER LOOP PARAMS@G@@@@IN0130 AU    A2,CPIDEN+1 . DATA MODECX
)@@G@@+OUTER BASE=ADDR OF OUTER OPTABLE   @D@@@@       TP    0,A3        IS OPCY
)@@G@@ ALLOWED IN THIS MODE?  @B@@@@       J     CP0900      . NO, DOMAIN ERR CZ
)@@G@@@D@@@@       LA,S1 A1,0,A3     . GET OPR OUTMODE FROM TABLE @G@@@@      DA
)@@G@@ JE    A1,A2 IN0140     . IF OPR INMODE=OUTMODE, DON'T CHANGE     @D@@@@DB
)@@G@@       JNE,U A2,ZMODFL IN0120 . FORCE DATA MODE DFLOAT@D@@@@       TE,U DC
)@@G@@ A1,ZMODFL   . IS OUTPUT OF OPCODE DFLOAT?@G@@@@       SA    A2,CPMODC  DD
)@@G@@ . NO, FORCE IT BY TURNING ON OUTER LOOP MODECHG@F@@@@IN0140 SA,S2 A2,CPDE
)@@G@@DESC   . OUTER LOOP OUTMODE TO RESULT DESCRIPTOR@D@@@@       LA,H2 A3,0,DF
)@@G@@A3     . GET OPCODE SUBRTNE ADDR    @E@@@@       SA    A3,CPMAJR   . MAKDG
)@@G@@E IT MAJOR (OUTER LOOP) OUCODE@ @@@@. ACQUIRE SPACE FOR RESULT    @ @@@@DH
)@@G@@IN0150 LA,U  A0,CPDESC   .    @E@@@@       LA    A1,A2       . GET RESULDI
)@@G@@T MODE FOR STORE SETUP  @G@@@@       LMJ   X11,PUTANS  . ACQUIRE SPACE, DJ
)@@G@@SET REGS FOR RESULT STORAGE   @ @@@@       J     CP0999      .    @C@@@@DK
)@@G@@       PUSH  A6          . RESULT DESCR TO STACK@F@@@@       ANX,U X2,1 DL
)@@G@@       . SET UP FOR RIGHT TO LEFT STASH OF AN   @C@@@@       SX    X2,CPDM
)@@G@@STAS   . TEMP SAVE STASH REGS @ @@@@       SX    X3,CPSTAS+1 .    @B@@@@DN
)@@G@@. NOW INITIALIZE FOR FETCHING OF OPERANDS @E@@@@IN0200 ANX,U X4,1       DO
)@@G@@ . SET LEFTARG PICK FOR RITE TO LEFT@D@@@@       SX    X4,CPLFTF   . SAVDP
)@@G@@E INITIAL LEFTPIK REGS  @ @@@@       SX    X5,CPLFTF+1 .    @C@@@@      DQ
)@@G@@ TZ    RITRNK      . IS RITEARG  A SCALAR?@E@@@@       J     IN0205     DR
)@@G@@ . NO, GO SET UP RANDAC TO FETCH IT @F@@@@       LA,U  A0,CG0200   . YESDS
)@@G@@, SET INNER FETCH TO LINEAR PICKUP  @C@@@@       J     IN0250      . ANDDT
)@@G@@ GO POST THE ADDR @D@@@@IN0205 LA    A6,RITDSC   . ADDR OF DESCR OF RITEDU
)@@G@@ARG   @C@@@@       PUSH  A6          . STACKIT FOR RANDAC   @F@@@@      DV
)@@G@@ LA,U  A2,2        . SET FLAG FOR SELECTION ON 1ST COORD    @G@@@@      DW
)@@G@@ LMJ   X11,SUBSEL  . PREPARE TO FETCH RANDOMLY, SELECT 1ST COORD  @ @@@@DX
)@@G@@       J     CP0999      .    @E@@@@. SET RANDOM SELECTOR FOR RITE TO LEDY
)@@G@@FT (REVERSE ALL COORDS) @C@@@@IN0210 LA,U  A2,SB0310   . ADDR OF BAKFETCDZ
)@@G@@H RTNE@E@@@@       LXI,U A2,0,A2     . PUT BAKFETCH RTNE ADDR IN H1, TOOEA
)@@G@@@F@@@@       LA    A1,SCRANK   . NO OF COORDS OF RITEARG FROM RANDAC    EB
)@@G@@@C@@@@IN0220 JNGD  A1,IN0230   . COUNT NO OF COORDS   @D@@@@       LA,H1EC
)@@G@@ A0,ELEMCT,A1 . GET LENGTH OF THIS COORD  @C@@@@       TNZ   WSIXOR     ED
)@@G@@ . 1-ORIGIN INDEXING?   @C@@@@       ANA,U A0,1        . NO ZERO; COMPENEE
)@@G@@SATE  @F@@@@       SA    A0,CURVAL,A1  . MAKE LAST EL THE 1ST TO BE FETCEF
)@@G@@HED   @F@@@@       SA    A2,PARTPT,A1 . SET FETCHRTNE ADDR TO BACKWARDS EG
)@@G@@PICKUP@D@@@@       J     IN0220      . GO BACK FOR NEXT COORD     @F@@@@EH
)@@G@@IN0230 LA    A2,SCTYPE+1 . DATA MODE OF RITEARG AS SEEN BY RANDAC @G@@@@EI
)@@G@@       LA    A3,CPINNR   . GET FETCHMODE OF INNER OPERANDS PER PIKTWO   EJ
)@@G@@@C@@@@       TNE   A2,A3       . ARE THEY THE SAME?   @D@@@@       J    EK
)@@G@@ IN0240      . YES, NO MODECHANGES NEEDED @C@@@@       TNE,U A2,ZMOHFI  EL
)@@G@@ . NO, IS ARG HALFINT?  @D@@@@       TE,U  A3,ZMODFL   . YES, AND RESULTEM
)@@G@@ DOUBLE?    @F@@@@       J     CP0990      . IF NOT, ILLEGAL CONVERSION-EN
)@@G@@-SYSERR     @C@@@@       LA,U  A2,ZMOINT   . GET MODECHANGE FLAG  @D@@@@EO
)@@G@@IN0240 LA,H2 A0,RANGET,A2 . ADDR OF RITEARG FETCH RTNE@E@@@@       SA   EP
)@@G@@ A0,SGRGET   . TO FETCH RTNE POINTER IN RANDAC  @F@@@@       LA,U  A0,SEEQ
)@@G@@LGET   . FOR RITEARG FATCH, SET ADDR IN RANDAC  @G@@@@IN0250 SA    A0,CPER
)@@G@@RITF   . GET INITIAL ADDR FOR RITEARG FETCH ROUTINE   @C@@@@       LX   ES
)@@G@@ X2,CPSTAS   . RESTORE STASH REGS   @ @@@@       LX    X3,CPSTAS+1 .    ET
)@@G@@@B@@@@       J     CP0010      . GO DO THE OP   @A@@@@/.    COMPOUND OPEEU
)@@G@@RATORS -*REDUCE*  @#@@@@       INSTRS  .  @ @@@@REDUCE* SX   X11,CPLINK EV
)@@G@@ .    @D@@@@       SZ    CPINNR      . TURN INNER PRODUCT FLAG OFF@E@@@@EW
)@@G@@       DS    A0,CPIDEN   . SAVE IDENTITY FLAG, TABLE ADDR   @F@@@@. NOTEEX
)@@G@@: A2=S3 OF OPCODE (COORD SEL FLG); PASSED THRU TO SUBSEL    @G@@@@      EY
)@@G@@ LMJ   X11,SUBSEL  . INITIALIZE RANDAC TO PICK ON SELECTED COORD  @^@@@@EZ
)@@G@@       J     CP0999     @D@@@@       LA    A0,SCDESC   . GET ADDR OF DESFA
)@@G@@CRIPTOR     @E@@@@       SA    A0,RITDSC   . POST IT FOR GARBAGE COLLECTFB
)@@G@@ION   @ @@@@       ABSADR A0         .    @F@@@@       LA,S3 A4,0,A0    FC
)@@G@@ . GET RIGHTARG RANK FROM ITS DESCRIPTOR  @G@@@@       JNZ   A4,RD0020  FD
)@@G@@ . IF NON-ZERO, REDUCTION SHOULD REALLY BE DONE @G@@@@RD0010 LA    A6,SCFE
)@@G@@DESC   . BUT IF ALREADY A SCALAR GET ORIGINAL DESCR   @D@@@@       J    FF
)@@G@@ RD0310      . AND GO TO DUPE ROUTINE     @F@@@@. ARG IS NON-SCALAR - MAFG
)@@G@@KE SHAPEVECTOR, COMPUTE REDUCED LENGTH    @E@@@@RD0020 SA    A1,RDCORD  FH
)@@G@@ . SAVE INDEX OF SELECTED COORDINATE@C@@@@       ANA,U A4,1        . DECFI
)@@G@@REMENT RANK OF ARG@E@@@@       SA,S3 A4,CPDESC   . SAVE REDUCED RANK IN FJ
)@@G@@DUMMY DESCR @ @@@@. SET UP LOOP ON DIMS OF ARG  @E@@@@RD0030 LMJ   X11,PFK
)@@G@@IKRID  . PREPARE TO SCAN RITEARG DIMS     @D@@@@       LR    R1,A15     FL
)@@G@@ . SET LOOP CT TO NO OF DIMS  @G@@@@       ANA   A15,RDCORD  . SET TEST FM
)@@G@@PARAM SO WE KNOW WHEN SELCORD IS HIT@E@@@@       ANA,U A15,1       . BE FN
)@@G@@SURE TO COMPENSATE FOR JGD    @G@@@@       LX,U  X2,PUTARY+ZMOHFI . USE FO
)@@G@@STANDARD STASH RTNES FOR RESULT     @G@@@@       LX    X3,(+1,RESDIM)   FP
)@@G@@. WHOSE DIMVECT IS BUILT IN RANDAC SCRATCH@F@@@@       LA,U  A6,1       FQ
)@@G@@ . INITIALIZE RUNNING COUNT OF RESULT SIZE@D@@@@RD0040 JNGD  R1,RD0060  FR
)@@G@@ . EXIT IF NO MORE COORDINATES@B@@@@       LMJ   X6,0,X6     . FETCH NEXFS
)@@G@@T DIM @D@@@@       JE    A15,R1 RD0040    . IF SELECTED, SKIP IT  @C@@@@FT
)@@G@@       DL    A1,A4       . ELSE MOVE TO STASHREG@E@@@@       LMJ   X2,0,FU
)@@G@@X2     . AND PUT INTO RESULT DIMENSION    @D@@@@       MSI   A6,A2      FV
)@@G@@ . FOLD INTO TOTAL LENGTH     @D@@@@       J     RD0040      . AND GO LOFW
)@@G@@OK AT NEXT DIM    @D@@@@RD0060 SA,H2 A6,CPDESC   . STASH LENGTH IN DUMMYFX
)@@G@@ DESCR@C@@@@       LA    A3,SCTYPE+1 . GET ORIGINAL ARG MODE@C@@@@      FY
)@@G@@ SA,S2 A3,CPDESC   . PLUG INTO DESCRIPTOR @D@@@@. IF RESULT IS ARRAY, SEFZ
)@@G@@T UP POINTERS TO ITS DIMVECTOR@C@@@@RD0070 LA,S3 A3,CPDESC   . RANK FROMGA
)@@G@@ DUMMY DESCR@F@@@@       JG,U  A3,2 RD0090 . IF RANK .LT. 2, SCALAR OR VGB
)@@G@@ECTOR RESULT@F@@@@RD0080 SA,H2 A3,CPDIMD   . RANK TO LENGTH FIELD OF DUMGC
)@@G@@MY DIMVECT  @D@@@@       LA,U  A3,CPDIMD   . ADDR OF DUMMY DIMV DESCR   GD
)@@G@@@ @@@@       RELADR A3         .    @E@@@@       SA,H1 A3,CPDESC+1 . TO GE
)@@G@@DIM POINTER IN DUMMY DESCR    @C@@@@       LA,U  A3,RESDIM   . DATA AREAGF
)@@G@@ OF DIMVECT @ @@@@       RELADR A3         .    @F@@@@       SA,H2 A3,CPGG
)@@G@@DIMD+1 . TO DATA POINTER IN DIMENSION DESCRIPTOR@[@@@@.     @G@@@@. NOW GH
)@@G@@THAT SHAPE OF RESULT IS KNOWN, DETERMINE HOW TO SET ITS VALUES    @[@@@@GI
)@@G@@.     @D@@@@RD0090 LA,H2 A3,CPDESC   . RECOVER LENGTH OF RESULT   @G@@@@GJ
)@@G@@       JZ    A3,RD0300   . IF IT WILL BE NULL, COPY FROM DUMMY DESCR    GK
)@@G@@@E@@@@       LA    A1,RDCORD   . GET INDEX OF SELECTED COORDINATE @F@@@@GL
)@@G@@       LA,H1 A2,ELEMCT,A1 . GET LENGTH OF SELECTED COORDINATE     @G@@@@GM
)@@G@@       JZ    A2,RD0200   . IF SELECTED COORD NULL, GO FILL WITH IDENTITYGN
)@@G@@@G@@@@       JE,U  A2,1 RD0300 . IF ITS UNITY, GO COPY WITH NEW RANK INFGO
)@@G@@O     @[@@@@.     @F@@@@. THE SPECIFIED DYADIC OPCODE IS TO BE DONE-- INGP
)@@G@@ITIALIZE FOR IT   @[@@@@.     @F@@@@RD0100 LA,U  A0,SELGET   . ADDR OF FGQ
)@@G@@ETCH RTNE TO PICK ALONG COORD @E@@@@       SA    A0,CPGMAJ   . MAKE IT TGR
)@@G@@HE MAJOR FETCH RTNE     @E@@@@       LA,U  A0,SB0310   . BACKWARDS PICKUGS
)@@G@@P RTNE (IN RANDAC)@G@@@@       SA,H1 A0,PARTPT,A1 . TO FETCH RTNE POINTEGT
)@@G@@R FOR SELECTED COORD    @F@@@@       SA,H2 A0,PARTPT,A1 . (BOTH INITIAL GU
)@@G@@AND CURRENT FIELDS)     @F@@@@       LA,H1 A0,ELEMCT,A1     . GET LENGTHGV
)@@G@@ OF SELECTED COORDINATE @C@@@@       TNZ   WSIXOR      . 1-ORIGIN INDEXIGW
)@@G@@NG?   @D@@@@       ANA,U A0,1        . NO ZERO; COMPENSATE FOR IT @G@@@@GX
)@@G@@       SA    A0,CURVAL,A1 . MAKE LAST ELEMENT THE FIRST TO BE FETCHED   GY
)@@G@@@F@@@@RD0105 LA    A2,SCTYPE+1 . GET DATA MODE AS PICKED UP BY RANDAC   GZ
)@@G@@@F@@@@       JE,U  A2,ZMOCHR CP0900 . CHARACTERS IN REDUCTION=DOMAIN ERRHA
)@@G@@@F@@@@RD0107 SZ    CPMODC      . TURN OFF HALF TO DOUBLE CONVERSION FLAGHB
)@@G@@@E@@@@       AU    A2,CPIDEN+1 . COMPUTE OPERATOR TBL ENTRY ADDR  @D@@@@HC
)@@G@@       TP    0,A3        . IS OP LEGAL IN THIS MODE?  @C@@@@       J    HD
)@@G@@ CP0900      . NO, DOMAIN ERROR     @E@@@@       LA,S1 A1,0,A3     . GETHE
)@@G@@ OUTPUT MODE OF OPR FROM TABLE@G@@@@       JE    A1,A2 RD0130 . IF OPR IHF
)@@G@@NMODE=OUT MODE, NO CHANGES NEEDED   @G@@@@       JNE,U A2,ZMOHFI RD0120 HG
)@@G@@. IF DATA MODE NOT HALF, GO CHECK DBLE    @G@@@@. DATA HALFINT, BUT OPR HH
)@@G@@OUTPUT IS NOT HALFINT. CALC MUST BE IN DOUBLE   @G@@@@RD0110 AA,XU A3,ZMHI
)@@G@@ODFL-ZMOHFI . COMPUTE OPTABLE ADDR FOR DOUBLE DATA    @G@@@@       LA,U HJ
)@@G@@ A2,ZMOINT   . ADJUST FETCHMODE INDEX TO FORCE CONVERSION   @G@@@@      HK
)@@G@@ LA,S1 A1,0,A3     . GET NEW OUTPUTMODE OF OPERATOR FROM OPTABLE  @E@@@@HL
)@@G@@RD0120 TE,U  A1,ZMODFL   . IS OUTPUT MODE OF OPR DOUBLE?    @G@@@@      HM
)@@G@@ SX    X11,CPMODC  . NO- SINCE INPUT IS, TURN ON CONVERT FLAG     @G@@@@HN
)@@G@@. AT THIS POINT, A1=OPR OUTPUT MODE, A2=FETCHMODE INDEX, A3=OPTBL ADDR  HO
)@@G@@@F@@@@RD0130 SA,S2 A1,CPDESC   . OPR OUTPUT MODE TO RESULT DESCRIPTOR   HP
)@@G@@@G@@@@       LA,H2 A3,0,A3     . GET OPCODE SUBRTNE ADDR FROM TABLE IN IHQ
)@@G@@NTERP @D@@@@       SA    A3,CPMAJR   . POST MAJOR OPCODE ADDR     @G@@@@HR
)@@G@@       LA,H2 A2,RANGET,A2 . FETCHRTNE ADDR (IN RANDAC) FOR THIS MODE    HS
)@@G@@@A@@@@       SA    A2,SGRGET   . POST IT  @D@@@@       J     RD0400     HT
)@@G@@ . GO ACQUIRE SPACE FOR RESULT@[@@@@.     @D@@@@. LENGTH OF COORD IS ZERHU
)@@G@@O (RESULT WILL BE IDENTITY)   @C@@@@RD0200 DL    A0,CPIDEN   . GET TABLEHV
)@@G@@ POINTERS   @F@@@@       JNE,U A0,3 CP0900 . IF NO IDENTITY EXISTS, DOMAHW
)@@G@@IN ERROR    @F@@@@       DL    A0,0,A1     . GET VAL OF IDENT FROM OPTABHX
)@@G@@LE IN INTERP@C@@@@       DS    A0,CPIDEN   . SAVE FOR LATER FETCH @C@@@@HY
)@@G@@       LA,U  A2,ZMOHFI   . MODE FLAG FOR RESULT @C@@@@       TZ    A0   HZ
)@@G@@       . IS IT REALLY HALFINT?@B@@@@       LA,U  A2,ZMODFL   . NO, RESETIA
)@@G@@ MODE @E@@@@       SA,S2 A2,CPDESC   . PUT RESULT MODE INTO DESCRIPTOR  IB
)@@G@@@D@@@@       LA,U  A0,CGIDEN   . ADDR OF IDENTITY FETCH RTNE@D@@@@      IC
)@@G@@ SA    A0,CPGMAJ   . TO PICKUP ADDRESS POINTUR  @B@@@@       J     RD040ID
)@@G@@0      . GO DO THE OP   @[@@@@.     @G@@@@. LENGTH OF SELECTED COORDINATIE
)@@G@@E IS 1--MAKE A DIRECT COPY OF THE DATUM   @[@@@@.     @C@@@@RD0300 LA   IF
)@@G@@ A3,SCDATA   . RITEARG DATA ADDR    @D@@@@       LA,U  A0,CPDESC+1 . ANDIG
)@@G@@ STORE LOCN IN DESCR    @D@@@@       TZ,S3 CPDESC      . WILL RESULT BE IH
)@@G@@SCALAR?     @F@@@@       J     RD0303      . NO, GO STASH DATA ADDR IN HII
)@@G@@2 OF WORD 2 @G@@@@       ANA,U A0,1        . YES-- ALTER STORE ADDR TO 1IJ
)@@G@@ST WD OF DESCR    @A@@@@       LA,S2 A1,CPDESC   . GET MODE @F@@@@      IK
)@@G@@ JNE,U A1,ZMOHFI RD0303 . IF NOT HALFINT, GO STORE DATA ADDR@F@@@@      IL
)@@G@@ LA,H1 A3,0,A3     . ELSE GET ACTUAL HALFINT VAL FROM ARG   @D@@@@      IM
)@@G@@ J     RD0306      . AND PLUG INTO DUMMY DESCR  @C@@@@RD0303 RELADR A3  IN
)@@G@@       . REL ADDRESS OF DATA  @D@@@@RD0306 SA,H2 A3,0,A0     . SET H2 OFIO
)@@G@@ APPROPRIATE WORD @ @@@@       LA,U  A6,CPDESC   .    @ @@@@       RELADIP
)@@G@@R A6         .    @E@@@@RD0310 LMJ   X11,DUPE    . REPRODUCE OLD DATA WIIQ
)@@G@@TH NEW SHAPE@ @@@@       J     CP0999      .    @B@@@@       PUSH  A2   IR
)@@G@@       . RESULT TO STACK@C@@@@       J     CP0050      . GO CLEAN UP ANDIS
)@@G@@ EXIT @[@@@@.     @A@@@@. SET UP PUTANS TO STASH OUR RESULTS@[@@@@.     IT
)@@G@@@E@@@@RD0400 LA,S2 A1,CPDESC   . GET RESULT MODE FROM DESCRIPTOR  @B@@@@IU
)@@G@@       LA,U  A0,CPDESC   . ABS DESCR ADDR @D@@@@       LMJ   X11,PUTANS IV
)@@G@@ . INITIALIZE TO STORE RESULT @ @@@@       J     CP0999      .    @E@@@@IW
)@@G@@       PUSH  A6          . PUT RESULT DESCRIPTOR INTO STACK @B@@@@      IX
)@@G@@ J     CP0010      . GO DO THE OP   @D@@@@/.    MAIN COMPUTE LOOP FOR REIY
)@@G@@DUCE AND INNER PRODUCT  @[@@@@.     @B@@@@G      PROC    . PICK UP NEXT IZ
)@@G@@DATA VALUE  @E@@@@GETNXT* NAME   .    ENTRY PARAMS ARE: ENDCOORD ENDARRAJA
)@@G@@Y     @#@@@@       UNLI$T  .  @B@@@@       LMJ   X4,*G(1,1)  . TO PICKUPJB
)@@G@@ RTNE @^@@@@       J     CP0999     @E@@@@       SX,H2 X4,G(1,1)   . SAVJC
)@@G@@E NEW LINK TO PICKUP ROUTINE  @F@@@@       JE,U  A0,1 G(2,1) . IF RETURNJD
)@@G@@ CODE=1, END OF COORDINATE    @C@@@@       JE,U  A0,2 G(3,1) . 2 IS END JE
)@@G@@OF ARRAY    @B@@@@       JZ    A0,G$N010   . ZERO FALLS THRU@A@[@@      JF
)@@G@@ ERROR YSYSTM,CP0999    .     @A@@[[       J     0           . SYSERR   JG
)@@G@@@][@@@G$N010 .    @#@@@@       LI$T    .  @#@@@@       END     .  @[@@@@JH
)@@G@@.     @#@@@@O      PROC    .  @#@@@@OPERAT* NAME   .  @#@@@@       UNLI$JI
)@@G@@T  .  @ @@@@       LMJ   X11,*O(1,1) .    @F@@@@       J     CP0900     JJ
)@@G@@ . ERROR IN THE OP IS ALWAYS DOMAIN ERR   @ @@@@       SX,H2 X11,O(1,1) JK
)@@G@@ .    @C@@@@       TZ    ERRITH      . ANY OVERFLOWS, ETC?  @B@@@@      JL
)@@G@@ J     CP0900      . YES, DOMAIN ERR@ @@@@       LI$T              .    JM
)@@G@@@ @@@@       END               .    @[@@@@.     @#@@@@A      PROC    .  JN
)@@G@@@#@@@@ANSPUT* NAME .    @E@@@@       LMJ   X2,0,X2     . STASH RESULTS UJO
)@@G@@SING PUTANS RTNES @ @@@@       END               .    @[@@@@.     @#@@@@JP
)@@G@@I      PROC    .  @#@@@@INPCNV* NAME   .  @#@@@@       UNLI$T  .  @D@@@@JQ
)@@G@@       TNZ   I(1,1)      . IS MODE CHANGE FLAG ON?    @C@@@@       J    JR
)@@G@@ OUT         . NO, DON'T CONVERT    @B@@@@       DFLOAT A0,A1      . YESJS
)@@G@@, CONVERT   @ @@@@OUT .                    .    @ @@@@       LI$T       JT
)@@G@@       .    @ @@@@       END               .    @[@@@@.     @G@@@@CP0010JU
)@@G@@ GETNXT CPGMAJ CP0050 CP0990 .    GET 1ST VAL AS MAJOR OPERAND    @G@@@@JV
)@@G@@       DS    A1,CPOUTV   . IN CASE ONLY 1, SAVE AS OPERATOR'S OUTPUT VALJW
)@@G@@@G@@@@CP0020 DS    A1,CPINPV   . SAVE CURRENT VAL AS INPUT VAL TO OPERATJX
)@@G@@OR    @F@@@@       GETNXT CPGMAJ CP0030 CP0040 . GET LEFT VAL AS MAJOR OJY
)@@G@@PERAND@G@@@@       DL    A4,CPINPV   . CURRENT RESULT (IN OPCODE INPUT MJZ
)@@G@@ODE)=RITEARG@D@@@@       OPERAT CPMAJR          . PERFORM MAJOR OPCODE  KA
)@@G@@@E@@@@       DS    A1,CPOUTV   . STASH IN OUTPUT MODE OF OPERATOR @G@@@@KB
)@@G@@       INPCNV CPMODC     . CONVERT FROM OPR OUTPUT MODE TI ITS IN MODE  KC
)@@G@@@E@@@@       J     CP0020      . SAVE NEXT OPERATOR RITEARG INPUT @^@@@@KD
)@@G@@. END OF COORDINATE     @D@@@@CP0030 DL    A1,CPOUTV   . PICK UP PRESENTKE
)@@G@@ RESULT     @B@@@@       ANSPUT            . PUT IT AWAY    @D@@@@      KF
)@@G@@ J     CP0010      . GO START ON NEXT COORDINATE@#@@@@. END OF ARRAY    KG
)@@G@@@F@@@@CP0040 DL    A1,CPOUTV   .  DETECTED AFTER FETCH OF 1 ELEMENT     KH
)@@G@@@ @@@@       ANSPUT            .    @G@@@@CP0050 LX    X11,CPLINK  . DETKI
)@@G@@ECTED WHEN STEPPING TO NEXT COORDINATE    @ @@@@       J     1,X11      KJ
)@@G@@ .    @F@@@@/.    ROUTINES USED IN MAJOR COMPUTE LOOP TO FETCH NEXT VALUKK
)@@G@@E     @F@@@@.         THE VARIABLE 'CPGMAJ' POINTS TO THE ROUTINE IN USEKL
)@@G@@.     @G@@@@.         IF THIS IS NORMAL REDUCTION (I.E. THE OPERATOR WILKM
)@@G@@L BE DONE), @G@@@@.         THEN IT POINTS TO 'SELGET' IN RANDAC.  IF THKN
)@@G@@IS REDUCTION IS   @G@@@@.         ON A NULL, IT POINTS TO A FETCH OF THEKO
)@@G@@ REDUCTION IDENTITY.    @[@@@@.     @G@@@@.     THE MAJOR COMPUTE LOOP IKP
)@@G@@S ALSO USED IN INNER PRODUCT. IN THAT     @G@@@@.         CASE, THE LEFTKQ
)@@G@@ HAND OPERATOR (E.G. ADDITION FOR MATRIX PROD)  @G@@@@.         IS DONE KR
)@@G@@IN THE MAJOR LOOP,  AND 'GPMAJ' POINTS TO AN INNER    @G@@@@.         LOKS
)@@G@@OP WHICH APPLIES THE RIGHT OPERATOR (E.G. MULTIPLICATION)   @B@@@@.     KT
)@@G@@    TO SUCCESSIVE PAIRS OF OPERANDS.@[@@@@.     @G@@@@CGIDEN LA,H2 A14,CKU
)@@G@@PDESC  . INITIALIZE RESULT COUNT TO LENGTH OF ANSWER  @F@@@@       JNGD KV
)@@G@@ A14,CG0020  . IF NO MORE TO GET, TAKE END ARRAY EXIT @D@@@@CG0010 DL   KW
)@@G@@ A1,CPIDEN   . ELSE PICK UP IDENTITY VALUE@B@@@@       LA,U  A0,0       KX
)@@G@@ . SET RETURN CODE@B@@@@       LMJ   X4,1,X4     . AND GET OUT    @ @@@@KY
)@@G@@       JNGD  A14,CG0020  .    @C@@@@       LA,U  A0,1        . END OF COKZ
)@@G@@ORD EXIT    @ @@@@       LMJ   X4,1,X4     .    @D@@@@       J     CG001LA
)@@G@@0      . GO BACK FOR NEXT DATUM     @ @@@@CG0020 LA,U  A0,2        .    LB
)@@G@@@ @@@@       LMJ   X4,1,X4     .    @ @@@@       J     CG0020      .    LC
)@@G@@@[@@@@.     @G@@@@. INNER PRODUCT MINOR LOOP FETCH.  THIS DOES THE RIGHTLD
)@@G@@OP ON PAIRS OF    @G@@@@.      DATA AND PRESENTS THE RESULT TO THE MAJORLE
)@@G@@ LOOP FOR REDUCTION     @[@@@@.     @C@@@@CGMINR LA,H2 A13,CPDESC  . LENLF
)@@G@@GTH OF RESULT     @F@@@@       MSI   A13,CPINRD  . TIMES REDUCTION LENGTLG
)@@G@@H IS NO OF FETCHES@E@@@@       DL    A0,CPLFTF   . ORIGINAL LEFTARG FETCLH
)@@G@@HPOINTERS   @E@@@@       DS    A0,CPLFTC   . MAKE THEM THE CURRENT POINTLI
)@@G@@ERS   @B@@@@. REENTRY WHEN NORMALLY LOOPING IS HERE-- @A@@@@CG0100 SX   LJ
)@@G@@ X4,CGLINK   . SAVE EXIT@D@@@@       JNGD  A13,CG0150  . IF NO MORE TO DLK
)@@G@@O, QUIT     @G@@@@       GETNXT CPRITF CG0110 CG0120 . USE SELGET TO PICLL
)@@G@@K UP NEXT RITEARG @D@@@@       DL    A4,A1       . PUT RITEARG IN OPERANLM
)@@G@@D REG @E@@@@       LX    X5,CPLFTC+1 . CURRENT LEFTARG FETCHPOINTERS    LN
)@@G@@@D@@@@       LMJ   X4,*CPLFTC  . GO GET LEFTARG TO A1,A2    @D@@@@      LO
)@@G@@ SX    X4,CPLFTC   . STASH LEFTARG POINTERS     @ @@@@       SX    X5,CPLP
)@@G@@LFTC+1 .    @B@@@@       OPERAT CPMINR     . DO MINOR OPCODE@G@@@@      LQ
)@@G@@ INPCNV CGMODC     . CONVERT TO INPUT MODE OF OUTER LOOP OPCODE   @C@@@@LR
)@@G@@       LA,U  A0,0        . SET NORMAL RETURNCODE@ @@@@       J     CG014LS
)@@G@@0      .    @G@@@@. END OF COORD (I.E. COLUMN) ON RITEARG-RESET LEFT TO LT
)@@G@@RE-DO SAME ROW    @D@@@@CG0110 DL    A0,CPLFTF   . BEGIN POINTERS FOR THLU
)@@G@@IS ROW@E@@@@       DS    A0,CPLFTC   . MAKE THEM THE CURRENT POINTERS   LV
)@@G@@@D@@@@       J     CG0130      . TAKE END OF COORD EXIT     @G@@@@. END LW
)@@G@@OF RIGHT ARRAY- RECYCLE IT FROM ORIGINAL STARTING ROW AND COL     @D@@@@LX
)@@G@@CG0120 DL    A0,CPLFTC   . GET CURRENT LEFTARG POINTRS@F@@@@       DS   LY
)@@G@@ A0,CPLFTF   . MAKE THEM BEGIN POINTERS FOR THIS ROW  @C@@@@CG0130 LA,U LZ
)@@G@@ A0,1        . END OF COORD FLAG    @G@@@@       AA,U  A13,1       . WE MA
)@@G@@DIDN'T GET ANYTHING, SO RESTORE THE COUNT @C@@@@CG0140 LX    X4,CGLINK  MB
)@@G@@ . RECOVER RETURN ADDR  @C@@@@       LMJ   X4,1,X4     . RETURN TO OUTERMC
)@@G@@LOOP  @ @@@@       J     CG0100      .    @A@@@@. END OF ENTIRE SOURCE DMD
)@@G@@ATA ARRAYS  @C@@@@CG0150 LA,U  A0,2        . END OF DATA FLAG     @ @@@@ME
)@@G@@       J     CG0140      .    @F@@@@. RITEARG PICKUP FOR SCALAR RITEARGSMF
)@@G@@ (WHICH MUST BE EXTENDED)     @G@@@@CG0200 LA    A14,CPINRD  . LENGTH OFMG
)@@G@@ REDUCED COORD( TO SIMULATE VECTOR) @G@@@@CG0210 JNGD  A14,CG0220  . IF MH
)@@G@@END OF SIMULATED VECTOR, END ARRAY EXIT   @C@@@@       LMJ   X6,0,X6    MI
)@@G@@ . ELSE GET DATA VALUE  @E@@@@       DL    A1,A4       . MOVE TO EXPECTEMJ
)@@G@@D RESULT REGS     @C@@@@       LA,U  A0,0        . NORMAL EXIT FLAG     MK
)@@G@@@B@@@@       LMJ   X4,1,X4     . NORMAL EXIT    @B@@@@       J     CG021ML
)@@G@@0      . GO FOR NEXT EL @ @@@@CG0220 LA,U  A0,2        .    @C@@@@      MM
)@@G@@ LMJ   X4,1,X4     . RETURN TO CALLER     @C@@@@       J     CG0200     MN
)@@G@@ . THEN RESTART ON COORD@[@@@@.     @D@@@@CP0900 SZ    ERRITH      . POSMO
)@@G@@T OVERFLOW SERVICED     @E@@@@       ERROR YDOMAI,CP0999    . TELL USER MP
)@@G@@WHAT HAPPENED     @ @@@@CP0910 ERROR YLENGT,CP0999 .  @ @@@@CP0930 ERRORMQ
)@@G@@ YRANK,CP0999 .   @A@[@@CP0990 ERROR YSYSTM,CP0999    .     @A@@[[CP0990MR
)@@G@@ EQU   0           . SYSERR   @A[@@@CP0999 LX    X11,CPLINK       .     MS
)@@G@@@A@@@@       J     0,X11            .     @#@@@@       VARBLS  .  @A@@@@MT
)@@G@@CPLINK RES   1      . X11 AT ENTRY  @^@@@@CGLINK RES   1      .   @E@@@@MU
)@@G@@CPMODC RES   1      . HALF TO DBLE MODE CONVERSION FLAG     @C@@@@CGMODCMV
)@@G@@ RES   1      . SAME THING FOR INNER LOOP @#@@@@CPSTAS RES   2 .  @E@@@@MW
)@@G@@CPMAJR RES   1      . POINTER TO SUBRTNE FOR MAJOR OPCODE   @C@@@@CPMINRMX
)@@G@@ RES   1      . DITTO FOR MINOR OPCODE    @E@@@@CPOUTV RES   2      . TEMY
)@@G@@MP STORAGE, OUTPUT VAL OF MAJOR OP  @E@@@@CPINPV RES   2      . TEMP STOMZ
)@@G@@RAGE, INPUT VAL OF MAJOR OP   @C@@@@CPGMAJ RES   1      . ADDR OF MAJOR NA
)@@G@@FETCH RTNE  @G@@@@CPRITF RES   3      . RITEARG PICK PARAMS (OUTER PRODUNB
)@@G@@CT),POINTER(INNER)@G@@@@CPLFTF EQU   CPRITF+1 . X4,5: START OF LEFTARG RNC
)@@G@@OW PICK (INNER PROD)    @F@@@@CPLFTC RES   2      . X4,5: CURRENT LEFTARND
)@@G@@G PIKREGS (INNER PROD)  @F@@@@CPIDEN RES   2      . TABLE POINTERS/ IDENNE
)@@G@@TITY VALUE (REDUCTION)  @F@@@@CPIDRT RES   2      . OPCODE PARAMS, RIGHTNF
)@@G@@ OPERATOR (INNER PROD)  @D@@@@CPINNR RES   1           . INNER/OUTER PRONG
)@@G@@DUCT FLAG   @G@@@@CPINRD RES   1           . LENGTH OF DIM BEING COMPRESNH
)@@G@@SED (INNER DIM)   @F@@@@RDCORD RES   1      . INDEX OF SELECTED COORDINANI
)@@G@@TE (REDUCTION)    @^@@@@       VARCON       .   @G@@@@CPDESC CBLOCK  ZTPNJ
)@@G@@TMP,ZMOHFI,ZRANKS,0 0 . DUMMY DESCRIPTOR FOR RESULT   @G@@@@CPDIMD CBLOCNK
)@@G@@K ZTPDIM,ZMOHFI,ZRANKV,0 0 . DUMMY DESCR FOR DIMVECT, IF ANY@[@@@@.     NL
)@@G@@@^@@@@       END          .   ___T ANYTHING, SO RESTORE THE COUNT @C@@@@NM
)@@G@@CG0140 LX    X4,CGLINK   . RECOVER RETURN ADDR  *[S@@@*SDFF*@G@@@@. ****NN
)@@G@@***************************************************************** @G@@@@NO
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * NP
)@@G@@@G@@@@.                                                                 NQ
)@@G@@    * @^@@@@       AXR$         .   @C@@@@       CONFIG  .    DEFINE ASSNR
)@@G@@EMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINE WORKSPACE             NS
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACNT
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BNU
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SENV
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           NW
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 NX
)@@G@@                                                    * @G@@@@. END OF STANY
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****NZ
)@@G@@***************************************************************** @[@@@@OA
)@@G@@.     @[@@@@.     @E@@@@       PSUDOP            . DEFINE OPCODES OF APLOB
)@@G@@ MACHINE    @[@@@@.     @G@@@@/. CODE IS STORED IN THE LARGEST FREE BLOCOC
)@@G@@K IN THE WS, IN FULL WORDS.   @G@@@@.  THE RIGHT HALF IS THE OPCODE, THEOD
)@@G@@ LEFT IS THE SEQUENCE NO (IN THE    @F@@@@.  LEXICAL TEXT) OF THE ITEM WOE
)@@G@@HICH GENERATED THIS WORD (FOR USER  @F@@@@.  DIAGNOSTICS).  SINCE DATA SOF
)@@G@@TORAGE IS ALLOCATED FROM THE LEFT   @G@@@@.  (LOW ADDRESSES) OF FREE BLOOG
)@@G@@X, WE ATTEMPT TO MINIMIZE FRAGMENTATION   @G@@@@.  BY ALLOCATING CODE SPOH
)@@G@@ACE FROM THE RIGHT.  THUS CODE GENERATED BY     @G@@@@.  THE LEFT SIDE OOI
)@@G@@F A STATEMENT APPEARS ON THE RIGHT SIDE OF A CODE     @F@@@@.  BLOK, ANDOJ
)@@G@@ R-TO-L EXECUTION OF A STMNT IS L-TO-R SCANNING OF THE@]@@@@.  C-STRING.OK
)@@G@@@[@@@@.     @#@@@@       INSTRS .   @B@@@@. INITIALIZE-- GET BLOCK, SET OL
)@@G@@REGS, ETC...@ @@@@CODSTO* SX   X11,CSLINK  .    @E@@@@       UNLNKL     OM
)@@G@@       . FIND AND UNLINK LARGEST BLOCK    @D@@@@       LA    A0,WSFLWA  ON
)@@G@@ . RHGHT HAND WORD OF BLOCK   @ @@@@       ABSADR A0         .    @F@@@@OO
)@@G@@       LX,U  X7,0,A0     . MAKE IT 1ST WORD TO BE STORED INTO     @D@@@@OP
)@@G@@       AA,U  A0,1        . BUMP FOR LATER SUBTRACTIONS@E@@@@       SA   OQ
)@@G@@ A0,CSFLWA   . AND SAVE ABS ADDR OF LAST WD + 1 @G@@@@       LXI,U X7,07OR
)@@G@@77776  . SET STEP MINUS 1 FOR LEFT TO RIGHT STORING   @F@@@@       LA   OS
)@@G@@ A0,WSFFWA   . ADDR OF LEFTMOST WD IN POOLED BLOCK    @ @@@@       ABSADOT
)@@G@@R A0         .    @C@@@@       SA    A0,CSFFWA   . SAVE FOR WSFULL TESTSOU
)@@G@@@D@@@@       LX,U  X6,CS0100   . SET POINTER TO STORE RTNE  @ @@@@      OV
)@@G@@ LX    X11,CSLINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    OW
)@@G@@@[@@@@.     @G@@@@. AFTER INITIALIZATION, TEXT IN A0 IS STORED BY LMJ X6OX
)@@G@@,0,X6 TO HERE---  @[@@@@.     @C@@@@CS0100 LA,U  A1,0,X7     . ADDR OF TOY
)@@G@@ARGET WORD  @B@@@@       TLE   A1,CSFFWA   . WITHIN LIMITS? @C@@@@      OZ
)@@G@@ J     CS0110      . NO, TAKE WSFULL EXIT @B@@@@       SA    A0,0,*X7   PA
)@@G@@ . YES, STASH DATA@B@@@@       LMJ   X6,1,X6     . AND RETURN     @ @@@@PB
)@@G@@       J     CS0100      .    @ @@@@CS0110 ERROR YWSFUL      .    @ @@@@PC
)@@G@@       J     0,X6        .    @[@@@@.     @F@@@@. GENERATE HALFWORD ADDRPD
)@@G@@-- USED BY COMPILER FOR HISTORICAL REASONS@[@@@@.     @C@@@@CODHWA* LA,UPE
)@@G@@ A1,0,X7     . ADDR OF NEXT WORD    @A@@@@       TLE   A1,CSFFWA   . IN PF
)@@G@@RANGE?@B@@@@       J     CH0100      . NO, WSFULL.    @ @@@@       RELADPG
)@@G@@R A1         .    @A@@@@       J     1,X11       . AND QUIT @ @@@@CH0100PH
)@@G@@ ERROR YWSFUL      .    @ @@@@       J     0,X11       .    @ @@@@. ABORPI
)@@G@@T STORAGE OF C-STRING   @ @@@@CODABT* SX   X11,CSLINK  .    @D@@@@      PJ
)@@G@@ LA    A1,WSDBUG   . GET DEBUGGING CONTROL FLAG @G@@@@       JOP,U A1,4 PK
)@@G@@CC0005 . IF ERASING IS INHIBITED, JUST CLOSE THE BLOCK@C@@@@       LA   PL
)@@G@@ A0,CSFLWA   . ABSADR OF LAST WORD+1@G@@@@       ANA   A0,CSFFWA   . LESPM
)@@G@@S ABSADR OF 1ST WD GIVES NO OF WDS TO FREE@C@@@@       LA    A1,WSFFWA  PN
)@@G@@ . RELADR OF 1ST WD     @D@@@@       FREE              . PUT BACK ONTO FPO
)@@G@@REE LIST    @C@@@@       J     CC0010      . GO TAKE NORMAL EXIT  @[@@@@PP
)@@G@@.     @F@@@@. CLOSE OUT STORAGE OF C-STRING.  LEAVES RELADR OF BLOK IN APQ
)@@G@@0     @[@@@@.     @ @@@@CODCLO* SX   X11,CSLINK  .    @G@@@@CC0005 LA,U PR
)@@G@@ A0,0,X7     . ADDR OF NEXT WORD (WHERE HEADER WILL GO)     @G@@@@      PS
)@@G@@ ANA   A0,CSFFWA   . LESS ABSADR OF 1ST WD=NO OF UNUSED WORDS     @F@@@@PT
)@@G@@       JG,U  A0,2 CC0100 . WSFULL UNLESS AT LEAST 2 WORDS ARE LEFT@E@@@@PU
)@@G@@       LA    A1,WSFFWA   . PICK UP RELADR OF START OF BLOCK @C@@@@      PV
)@@G@@ FREE              . RELEASE UNUSED SPACE @E@@@@       LA    A0,CSFLWA  PW
)@@G@@ . ABSADR OF LAST WORD IN BLOK +1   @G@@@@       ANA,U A0,0,X7     . LESPX
)@@G@@S ADDR OF 1ST WORD USED=NO OF WDS USED    @F@@@@       AA    A0,(+ZTPCODPY
)@@G@@,0,0,0,0,0) . PLUG IN SKELETON HEADER     @F@@@@       SA    A0,0,X7    PZ
)@@G@@ . PUT HDR WD INTO LEFT MOST WORD OFBLOCK @D@@@@       LA,U  A0,0,X7    QA
)@@G@@ . GET ADDR OF BLOCK HDR WORD @ @@@@       RELADR A0         .    @ @@@@QB
)@@G@@CC0010 LX    X11,CSLINK  .    @C@@@@       SZ    WSFFWA      . CLEAR SPLQC
)@@G@@ITBOLK FLAGS@ @@@@       SZ    WSFLWA      .    @ @@@@       J     1,X11QD
)@@G@@       .    @ @@@@CC0100 ERROR YWSFUL      .    @ @@@@       LX,H2 X11,CQE
)@@G@@SLINK  .    @ @@@@       J     0,X11       .    @D@@@@. ERASE A BLOCK OFQF
)@@G@@ COMPILED CODE (A0=RELADR OF BLOCK) @ @@@@CODERS* SX   X11,CSLINK  .    QG
)@@G@@@D@@@@       LA    A1,WSDBUG   . GET DEBUGGING CONTROL FLAG @E@@@@      QH
)@@G@@ JOP,U A1,4 1,X11  . AND EXIT IF ERASING IS INHIBITED @E@@@@       LA   QI
)@@G@@ A1,A0       . SET UP BLOCK RELADR FOR ERASE    @ @@@@       ABSADR A0  QJ
)@@G@@       .    @B@@@@       LA,S1 A2,0,A0     . GET BLOCKTYPE  @D@@@@      QK
)@@G@@ TE,U  A2,ZTPCOD   . IS IT REALLY A CODE BLOCK? @B@@@@       ER    ERR$ QL
)@@G@@       . NO, CRASH!     @C@@@@       LA,H2 A0,0,A0     . YES, GET ITS LEQM
)@@G@@NGTH  @C@@@@       FREE              . RELEASE THE SPACE    @ @@@@      QN
)@@G@@ LX,H2 X11,CSLINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    QO
)@@G@@@[@@@@.     @ @@@@       VARBLS            .    @ @@@@CSLINK RES   1    QP
)@@G@@       .    @ @@@@CSFFWA RES   1           .    @ @@@@CSFLWA RES   1    QQ
)@@G@@       .    @]@@@@       END .___@@@       J     CH0100      . NO, WSFULQR
)@@G@@L.    @ @@@@       RELADR A1         .    @A@@@@       J     1,X11      QS
)@@G@@ . AND QUIT @ @@@@CH0100 ERROR YWSFUL      .    *[S@@@*SDFF*@G@@@@. ****QT
)@@G@@***************************************************************** @G@@@@QU
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * QV
)@@G@@@G@@@@.                                                                 QW
)@@G@@    * @^@@@@       AXR$         .   @C@@@@       CONFIG  .    DEFINE ASSQX
)@@G@@EMBLY PARAMETERS  @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        QY
)@@G@@                      * @G@@@@       WSDEF.      DEFINE WORKSPACE       QZ
)@@G@@                            * @G@@@@WORKSP INFO  2 20.      SET ASIDE THRA
)@@G@@E SPACE                           * @G@@@@       RUNCTL.     DEFINE RUN RB
)@@G@@CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.      RC
)@@G@@AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCK     RD
)@@G@@       . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.           RE
)@@G@@                                                          * @G@@@@. END RF
)@@G@@OF STANDARD PROC BLOCK                                          * @G@@@@RG
)@@G@@. ********************************************************************* RH
)@@G@@@[@@@@.     @ @@@@. TO WHOM IT MAY CONCERN---   @[@@@@.     @F@@@@.     RI
)@@G@@LOCAL CODE CHANGES TO THIS ROUTINE SHOULD BE MADE WITH THE  @G@@@@. REALRJ
)@@G@@IZATION THAT IT WILL SOON BE COMPLETELY REWRITTEN.  THIS REWRITE  @G@@@@RK
)@@G@@. WILL IMPLEMENT 2 MAJOR DESIGN CHANGES-- (1) THE PROPERTIES OF EACH    RL
)@@G@@@G@@@@. APL OPERATOR WILL BE DETERMINED FROM A TABLE, RATHER THAN BY TESRM
)@@G@@TING  @G@@@@. THE BINARY VALUE OF THE OPERATOR, AND (2) THE POLISH STRINRN
)@@G@@GS WILL     @G@@@@. BECOME A SEMI-PERMANENT PART OF THE WORKSPACE-- I.E.RO
)@@G@@ THE STORED CODE  @G@@@@. FOR A GIVEN APL STATEMENT WILL BE EITHER IN LERP
)@@G@@XICAL FORM (AS NOW),    @G@@@@. OR IN POLISH FORM, BUT ONLY ONE OF THESERQ
)@@G@@ REPRESENTATIONS WILL EXIST   @G@@@@. IN THE WORKSPACE AT ANY ONE TIME. RR
)@@G@@THIS CHANGE WILL MAKE IT UNNECESSARY@G@@@@. TO RE-COMPILE STATEMENTS WHIRS
)@@G@@CH ARE EXECUTED, FOR EXAMPLE, IN A LOOP.  @G@@@@.  WE ARE PRESENTLY DESIRT
)@@G@@GNING A MECHANISM TO ACCOUNT FOR THE FACT THAT  @G@@@@. THE CREATION OF RU
)@@G@@LOCAL VARIABLES MAY CAUSE THE PARSE OF SUCH STATEMENTS@G@@@@. TO CHANGE.RV
)@@G@@  IN THE NEW IMPLEMENTATION, THE POLISH STRINGS WILL BE     @G@@@@. PACKRW
)@@G@@ED 2 TOKENS PER WORD, RATHER THAN ONE AND A LEXICAL POINTER AS    @#@@@@RX
)@@G@@. IT IS DONE NOW. @G@@@@.     THIS CHANGE WILL OBVIOUSLY INCREASE SPEED RY
)@@G@@AND REDUCE WORKSPACE    @G@@@@. REQUIREMENTS.  IN ADDITION, IT WILL BE TRZ
)@@G@@HE FIRST STEP IN AN EFFORT TO @F@@@@. PRODUCE AN APL SYSTEM WHICH WILL GSA
)@@G@@ENERATE ACTUAL 1100 SERIES    @G@@@@. COMPILED MACHINE INSTRUCTIONS, SUISB
)@@G@@TABLE FOR INPUT TO THE COLLECTOR.   @[@@@@.     @F@@[[. THE PROCS BELOW SC
)@@G@@IMPLEMENT PHASE 1 OF THE ABOVE, I.E. TABULATION @[@@[[.     @#@@[[P     SD
)@@G@@  PROC   .  @A@@[[TMONAD* NAME   MONFUN         .     @A@@[[TDYAD*  NAMESE
)@@G@@   DYAFUN         .     @A@@[[TSELED* NAME   DYASEL         .     @A@@[[SF
)@@G@@TSELEM* NAME   MONSEL         .     @A@@[[TREDUC* NAME   REDFUN         SG
)@@G@@.     @#@@[[        UNLI$T .  @G@@[[        LA     A12,OPCHAR,A0  . NOTESH
)@@G@@: EVENTUALLY A12 WILL BE PRE-LOADED @A@@[[        TOP,U  A12,P(0,0)     SI
)@@G@@.     @#@@[[        LI$T   .  @#@@[[        END    .  @[@@[[.     @#@@[[SJ
)@@G@@P       PROC   .  @A@@[[TNDYAD* NAME   DYAFUN         .     @#@@[[      SK
)@@G@@  UNLI$T .  @G@@[[        LA     A12,OPCHAR,A0  . NOTE: EVENTUALLY A12 WSL
)@@G@@ILL BE PRE-LOADED @A@@[[        TEP,U  A12,P(0,0)     .     @#@@[[      SM
)@@G@@  LI$T   .  @#@@[[        END    .  @[@@[[.     @G@@[[OPCHAR  EQUF   OPRSN
)@@G@@PQ2-0200,,Q2     . PROPERTY TABLE IS IN EL TABLES/APL @C@@@@/.  PROX TO SO
)@@G@@MANIPULATE THE HALFWORD PSEUDOCODE  @C@@@@       PSUDOP            . DEFSP
)@@G@@INE PSEUDOCODE    @D@@@@       CBLOCK            . DEFINE CONTROL BLOCK SQ
)@@G@@TYPES @[@@@@.     @E@@@@S      PROC .            . STORE HALF WORD OF PSSR
)@@G@@EUDOCODE    @#@@@@STOCOD* NAME .    @ @@@@       UNLI$T            .    SS
)@@G@@@E@@@@       LXI,U A0,0,A2     . PLUG IN CURRENT LEXICAL INDEX    @ @@@@ST
)@@G@@       LMJ   X6,0,X6     .    @ @@@@       J     CO0930      .    @#@@@@SU
)@@G@@       LI$T  .    @]@@@@       END .@[@@@@.     @E@@@@C      PROC .  GENSV
)@@G@@ERATE HALFWORD ADDR FROM CURRENT X6 AND X7@#@@@@GETADR* NAME .    @ @@@@SW
)@@G@@       UNLI$T            .    @ @@@@       LMJ   X11,CODHWA  .    @ @@@@SX
)@@G@@       J     CO0930      .    @#@@@@       LI$T  .    @]@@@@       END .SY
)@@G@@@C@@@@/. PROX TO DETERMINE WHAT WAS SCANNED, ETC.     @[@@@@.     @]@@@@SZ
)@@G@@N      PROC.@#@@@@LXNEXT* NAME .    @#@@@@       UNLI$T .   @ @@@@      TA
)@@G@@ LMJ   X11,SYNGET  .    @D@@@@       +0,N(1,1)   . OPERAND (LIT OR NAMEDTB
)@@G@@ VARIABLE)  @B@@@@       +0,N(1,2)   . PRIMITIVE OPERATOR   @B@@@@      TC
)@@G@@ +0,N(2,1)         . MONADIC FUNCT  @B@@@@       +0,N(2,2)         . DYATD
)@@G@@DIC FUNCT   @#@@@@       LI$T .     @]@@@@       END .@[@@@@.     @#@@@@TE
)@@G@@B      PROC  .    @#@@@@BACKUP* NAME .    @ @@@@       UNLI$T           TF
)@@G@@ .    @E@@@@       EX    LGBACK      . MOVE LEXICAL SCANNER BACK 1 ITEM TG
)@@G@@@ @@@@       GO    RB$010      .    @B@@@@RESET* NAME  . RESET ARGS AFTETH
)@@G@@R LOOKAHEAD @ @@@@       UNLI$T            .    @#@@@@RB$010* NAME .    TI
)@@G@@@ @@@@       LA    A0,COPCOD   .    @ @@@@       LA    A2,COLNUM   .    TJ
)@@G@@@#@@@@       LI$T  .    @#@@@@       END   .    @[@@@@.     @F@@@@. PEEKTK
)@@G@@ AHEAD AT NEXT LEXICAL ITEM, TRYING TO FIND AN OPERATOR     @[@@@@.     TL
)@@G@@@#@@@@L      PROC  .    @#@@@@LXPEEK* NAME .    @#@@@@       UNLI$T .   TM
)@@G@@@^@@@@CFORM  FORM  9,9,18 .   @ @@@@       LMJ   X11,LXP010  .    @G@@@@TN
)@@G@@       CFORM L(0,1),0,L(1,1) . COMPARISON CHAR (IF ANY) ,, BACKUP EXIT  TO
)@@G@@@G@@@@       LI$T    . ***** CAUTION***** INDIRECT JUMP GOES THRU WORD ATP
)@@G@@BOVE  @]@@@@       END .@[@@@@.     @#@@@@       INSTRS .   @B@@@@LXP010TQ
)@@G@@ SA    A0,COPCOD  . TEMP SAVE OPCODE@D@@@@       SA    A2,COLNUM   . ANDTR
)@@G@@ CURRENT LEXICAL ITEM NO@C@@@@       LMJ   X4,0,X4     . SCAN NEXT ELEMETS
)@@G@@NT    @ @@@@       J     CO0930      .    @G@@@@       JNE,U A1,LEXOPR LTT
)@@G@@XP020 . IF WE DON'T HAVE AN OPERATOR, BACK UP   @G@@@@       TZ,Q1 0,X11TU
)@@G@@       . ARE WE LOOKING FOR SOME OPR IN PARTICULAR?   @C@@@@       TNE,QTV
)@@G@@1 A0,0,X11   . YES, IS THIS IT?     @B@@@@       J     1,X11       . SUCTW
)@@G@@ESS EXIT    @ @@@@. NOT OPR, OR THE WRONG ONE   @G@@@@LXP020 BACKUP     TX
)@@G@@       . STEP LEXICAL TEX T POINTERS BACK ONE ITEM    @B@@@@       J    TY
)@@G@@ *0,X11      . FAILURE EXIT   @[@@@@.     @F@@@@       PROC   .  TEST WHTZ
)@@G@@ETHER AN OPR SELECTS ALONG A COORDINATE   @B@@@@TSTSEL* NAME . THIS ENTRUA
)@@G@@Y FOR DYADS ONLY  @ @@@@       UNLI$T            .    @F@[@@       JE,U UB
)@@G@@ A0,ARAVEL TS0010 . DYADIC CATENATE CAN SELECT A COORD@E@[@@       TSELEUC
)@@G@@C            . IS THIS OPR ALLOWED TO SELECT?   @F@@[[        TSELED    UD
)@@G@@            . CAN THIS FUNC SELECT A COORDINATE?@B]@@@       J     NOSKIUE
)@@G@@P      . NO, GET OUT    @ @@@@       GO    TS$010      .    @F@@@@PEEKSLUF
)@@G@@* NAME .     ENTER HERE IF WE ALREADY KNOW THE OP CAN SELECT@ @@@@      UG
)@@G@@ UNLI$T            .    @#@@@@TS$010* NAME .    @F@@@@TS0010 LXPEEK,ALBRUH
)@@G@@AK NOSKIP   . LOOK FOR A FOLLOWING LEFT BRACKET @D@@@@       RESET . WE UI
)@@G@@GOT ONE-- GET ORIGINAL ARGS BACK    @G@@@@       AA,XU A0,PSUDOF(0,0,PSFUJ
)@@G@@SEL) . TURN ON SELECTOR FLAG IN OPCODE    @C@@@@       J     NOSKIP+1   UK
)@@G@@ . AND TAKE SKIP EXIT   @]@@@@NOSKIP .    @#@@@@       LI$T  .    @]@@@@UL
)@@G@@       END .@G@@@@.                        TEST FOR INNER/OUTER PROD ANDUM
)@@G@@ MODIFY OPCODE    @#@@@@T      PROC  .    @#@@@@MODINR* NAME .    @ @@@@UN
)@@G@@       UNLI$T            .    @C@@@@       SA    A0,COPSEL   . TEMP SAVEUO
)@@G@@ INITIAL OPR@G@@@@       LXPEEK,ADECPT TI0030   . LOOK AFTER 1ST OP FOR UP
)@@G@@A DECIMAL POINT   @F@@@@       LA    A0,COPSEL  . WE GOT ONE-- RECOVER IUQ
)@@G@@NITIALIOPERATOR   @D@@@@       JE,U  A0,AOUTER TI0010 . IF OUTER PRODICTUR
)@@G@@, OK  @D@@@@       TREDUC            . ELSE BE SURE IT CAN REDUCE @C@@@@US
)@@G@@       J     TI0040      . IF NOT, SYNTAX ERROR @E@@@@TI0010 LXPEEK TI00UT
)@@G@@40     . LOOK FOR A DYAD AFTER THE D.P.   @G@@@@TI0020 TREDUC           UU
)@@G@@ . MAKE SURE 2ND OP IS USEABLE IN REDUCTION     @D@@@@       J     TI004UV
)@@G@@0      . OTHERWISE, SYNTAX ERROR    @G@[@@       ANA,U A0,ADYAST   . SHIUW
)@@G@@FT ORIGIN TO BEGIN DYADS SO 7 BITS ARE OK @G@@][       ANA,U A0,ARBIAS  UX
)@@G@@ . SHIFT ORIGIN TO BEGIN DYADS SO 7 BITS ARE OK @D[@@@       DSL   A0,6 UY
)@@G@@       . TEMP SAVE, PACKED TO 6 BITS@G@@@@       JNZ   A0,TI0050   . IF UZ
)@@G@@WON'T FIT IN 6, SOMEONE HAS FOULED SYMDEF @B@@@@       LA    A0,COPSEL  VA
)@@G@@ . RECOVER LEFT OP@B@[@@       ANA,U A0,ADYAST   . REDUCE IT ALSO @B@@][VB
)@@G@@       ANA,U A0,ARBIAS   . REDUCE IT ALSO @F[@@@       TG,U  A0,0100    VC
)@@G@@ . AND BE SURE IT ALSO FITS IN 6 BITS     @G@@@@       J     TI0050  . EVD
)@@G@@LSE INTERNAL CODES (ELEMENT SYMDEF) ARE WRONG   @C@@@@       LDSL  A0,6 VE
)@@G@@       . RECOVER RIGHT OP     @F@@@@       AA    A0,(+PSUDOF(PSOUTR,0,0)VF
)@@G@@-PSUDOF(PSOXQP,PSQDYA,0)) .   @F@@@@       J     OUT         . TAKE SUCCVG
)@@G@@ESS EXIT WITH MODIFIED OPCODE @G@@@@TI0030 JNE,U A0,AOUTER OUT    . BE SVH
)@@G@@URE INITIAL OPR WASN'T OUTERPROD    @G@@@@TI0040 ERROR YSYNTA,CO0930 . IVI
)@@G@@F DECPT NOT FOL BY OP OR NOT OUTER, ERROR @G@[@@TI0050 ERROR YSYSTM,CO09VJ
)@@G@@30 . ERROR DUE TO SOME DUMMY CHANGING SYMDEF    @A@@[[TI0050 EQU   0    VK
)@@G@@       . SYSERR   @[[@@@OUT . @#@@@@       LI$T  .    @]@@@@       END .VL
)@@G@@@^@@@@/.    COMPILATION PROX  @[@@@@.     @G@@@@D      PROC .           VM
)@@G@@           ***** DEFER COMPILATION OF A TERM****@#@@@@DEFER* NAME .     VN
)@@G@@@#@@@@       UNLI$T .   @E@@@@       TZ    CODTRM      . IS THERE ALREADVO
)@@G@@Y A DEFERRED TERM?@B@@@@       J     D(1,1)  . YES, COMPILER BUG  @E@@@@VP
)@@G@@       SA    A0,CODTRM   . SAVE POINTER TO THIS OPERAND     @F@@@@      VQ
)@@G@@ AA,U  A0,PSUDOF(PSOLOD) . GENERATE THE OPCODE WE'LL USE    @E@@@@      VR
)@@G@@ DSL   A0,15       . SEPARATE OUT ITS PRIMARY OPCODE  @E@@@@       JNE,UVS
)@@G@@ A0,PSOLOD OUT . IF NOT OPERAND LOAD, FORGET IT @F@@@@       SSL   A1,21VT
)@@G@@       . BUT IF OPERAND LOAD, ALIGN DESCR ADDR  @ @@@@       ABSADR A1  VU
)@@G@@       .    @D@@@@       LA,S1 A3,0,A1     . AND PICK UP THE BLOCK TYPE VV
)@@G@@@F@@@@       JNE,U A3,ZTPNAM OUT . IF NOT A NAMED VARIABLE, FORGET IT   VW
)@@G@@@G@@@@       LA    A0,CODTRM   . BUT IF IT IS, GET THE OPERAND POINTER BVX
)@@G@@ACK   @E@@@@       AA,U  A0,PSUDOF(PSOLDV)-PSUDOF(PSOLOD) . CHANGE IT...VY
)@@G@@@G@@@@       SA    A0,CODTRM   . AND SAVE TO GENERATE LOAD WITH VALUE CHVZ
)@@G@@ECK   @C@@@@OUT    SA    A2,CODLXN   . SAVE LEXICAL ITEMNO  @#@@@@      WA
)@@G@@ LI$T .     @]@@@@       END .@[@@@@.     @G@@@@O      PROC .           WB
)@@G@@           ***** GEN (DEFERRED) OPERAND LOAD****@#@@@@OPLOAD* NAME .    WC
)@@G@@@ @@@@       UNLI$T            .    @A@@@@       LA    A0,CODTRM   . GETWD
)@@G@@ TERM @D@@@@       LA    A2,CODLXN   . PICK UP LEXICAL ITEMNO     @A@@@@WE
)@@G@@       JZ    A0,O(1,1) . NONE--A BUG@D@@@@       SZ    CODTRM      . CLEWF
)@@G@@AR DEFERRED TERM FLAG   @A@@@@       AA,U  A0,PSUDOF(PSOLOD) .    @#@@@@WG
)@@G@@       STOCOD .   @#@@@@       LI$T  .    @]@@@@       END .@[@@@@.     WH
)@@G@@@G@@@@D      PROC .                      ***** EXECUTE PRIMITIVE DYAD  *WI
)@@G@@****  @#@@@@DYAD*  NAME .     @ @@@@       UNLI$T            .    @B@@@@WJ
)@@G@@       AA,U  A0,PSUDOF(PSOXQP,PSQDYA,0) . @#@@@@       STOCOD .   @#@@@@WK
)@@G@@       OPLOAD .   @#@@@@       LI$T  .    @]@@@@       END. @G@@@@.     WL
)@@G@@                             ***** EXECUTE PRIMITIVE MONAD ****   @#@@@@WM
)@@G@@M      PROC .     @#@@@@MONAD* NAME .     @ @@@@       UNLI$T           WN
)@@G@@ .    @B@@@@       AA,U  A0,PSUDOF(PSOXQP,PSQMON,0) . @#@@@@       STOCOWO
)@@G@@D .   @#@@@@       LI$T  .    @]@@@@       END .@G@@@@N      PROC .     WP
)@@G@@                ***** EXECUTE PRIMITIVE NILAD *****   @#@@@@NILAD* NAME WQ
)@@G@@.     @ @@@@       UNLI$T            .    @B@@@@ADOP   EQU   PSUDOF(PSOXWR
)@@G@@QP,PSQNIL,0) .    @ @@@@ DO N(1)=0 , AA,U A0,ADOP .   @A@@@@ DO N(1)>0 ,WS
)@@G@@ LA,U A0,ADOP+N(1,1) .  @#@@@@       STOCOD .   @#@@@@       LI$T  .    WT
)@@G@@@]@@@@       END .@F@@@@/.     PROX TO MAINTAIN THE CHAIN OF OPEN BRACKEWU
)@@G@@TS AND PARENS     @[@@@@.     @C@@@@L      PROC  . CHAIN LEFTBRACKETS, PWV
)@@G@@ARENS, ETC  @#@@@@LPAREN* NAME 0 .  @#@@@@LBRACK* NAME 1 .  @#@@@@LBLISTWW
)@@G@@* NAME 3 .  @ @@@@       UNLI$T            .    @E@@@@       LMJ   A3,LPWX
)@@G@@ARBR  . SUBROUTINE FOR PARENS AND BRACKETS@ @@@@       GO    LL$010     WY
)@@G@@ .    @ @@@@LBRACE* NAME 2           .    @ @@@@       UNLI$T           WZ
)@@G@@ .    @C@@@@       LMJ   A3,LBRACR  . SUBROUTINE FOR BRACES @#@@@@LL$010XA
)@@G@@* NAME .    @F@@@@       +0,L(0,0)*/16     . BITS WHICH INDICATE OP TO BXB
)@@G@@E CHAINED   @#@@@@       LI$T .     @ @@@@       END               .    XC
)@@G@@@[@@@@.     @A@@@@. SUBROUTINES USED BY ABOVE PROC--  @[@@@@.     @#@@@@XD
)@@G@@       INSTRS .   @E@@@@LPARBR LA,U  A0,PSUDOF(PSOXQP,PSQNIL)+PSNNOP . GXE
)@@G@@ET NO-OP    @G@@@@       STOCOD  . LEAVE SPACE FOR DYAD WHICH WILL FOLLOXF
)@@G@@W RITE PARENS     @D@@@@LBRACR GETADR  . FOR BRACES, NO EXTRA SPACE IS NXG
)@@G@@EEDED @E@@@@       AA    A1,0,A3     . PLUG IN BITS FOR THIS TYPE OF OP XH
)@@G@@@E@@@@       LXI,U A1,0,A2     . GET CURRENT LEX SCANNER POSITION @F@@@@XI
)@@G@@       LA    A0,COPREN   . GET POINTER TO PREVIOUS OPEN PAREN     @D@@@@XJ
)@@G@@       LA,H1 A2,COPREN   . BE SURE TO GET ITS POSITION@E@@@@       SA   XK
)@@G@@ A1,COPREN   . MAKE THE NEW THE MOST RECENT     @D@@@@       STOCOD     XL
)@@G@@       . AND PUSH THE OLD ONE DOWN  @A@@@@       J     1,A3        . RETXM
)@@G@@URN   @[@@@@.     @[@@@@.     @C@@@@. PROCS TO CLOSE RIGHT PARENS/BRACKEXN
)@@G@@TS, ETC     @[@@@@.     @#@@@@R      PROC  .    @#@@@@RCLOSE* NAME 1 .  XO
)@@G@@@ @@@@RCLNOP* NAME 2           .    @#@@@@RBRACE* NAME 2 .  @#@@@@RPLACEXP
)@@G@@* NAME 3 .  @ @@@@       UNLI$T            .    @ @@@@RD(1)  EQU   RP001XQ
)@@G@@0      .    @ @@@@RD(2)  EQU   RP0020      .    @ @@@@RD(3)  EQU   RP003XR
)@@G@@0      .    @A@@@@       LMJ   X11,RD(R(0,0))   .     @A@@@@       CBLOCXS
)@@G@@K 0,R(0,0)<3,0,R(1,1)  .@#@@@@       LI$T  .    @#@@@@       END   .    XT
)@@G@@@[@@@@.     @D@@@@. SUBROUTINE INVOKED BY REFERENCES TO ABOVE PROC ---  XU
)@@G@@@[@@@@.     @#@@@@       INSTRS .   @E@@@@. ENTER HERE FOR ) OR ] WITH TXV
)@@G@@RAINING DYAD (IN A0) -- RCLOSE@C@@@@RP0010 LA    A4,CPRTYP   . GET DELIMXW
)@@G@@ITER TYPE   @G@@@@       AA,U  A0,PSUDOF(PSOXQP,PSQXDY)   .SET OPCODE TOXX
)@@G@@ INDEXED DYAD     @F@@@@       TNE,U A4,1        . IS THE DELIMITER REALXY
)@@G@@LY A BRACKET?     @G@@@@       TE,U  A0,PSUDOF(PSOXQP,PSQXDY)+ASTORE . YXZ
)@@G@@ES, IF OP WAS STORE, OK @G@@@@       ANA,U A0,PSUDOF(0,PSQXDY-PSQDYA) . YA
)@@G@@ELSE CHG OPCODE TO NO INDEX   @E@@@@       J     RP0040      . GO SEE THYB
)@@G@@AT LEFT MATCHES RIGHT   @G@@@@. ENTER HERE TO CLOSE WITH NOP OR CHECK BRYC
)@@G@@ACE CLOSURE (RCLNOP/RBRACE)   @F@@@@RP0020 LA,U  A0,PSUDOF(PSOXQP,PSQNILYD
)@@G@@)+PSNNOP . SET OPCODE TO NO-OP@F@@@@. ENTER HERE TO REPLACE A ( BY A [ AYE
)@@G@@FTER SEEING  (...)[  (RPLACE) @G@@@@RP0030 LA    A4,CPRTYP   . GET DELIMYF
)@@G@@ITER TYPE FOR PAIR TO BE CLOSED     @G@@@@. CHECK THAT WHAT WE'RE CLOSINYG
)@@G@@G MATCHES TOP OF STACK (NOT (] OR [) )    @E@@@@RP0040 LA,H2 A1,COPREN  YH
)@@G@@ . POINTER TO TOP OF PAREN STACK    @E@@@@       JZ    A1,CO0910   . IF YI
)@@G@@NOTHING THERE, SYNTAX ERROR   @F@@@@       SSC   A1,16       . SPLIT TYPYJ
)@@G@@E BITS FROM ADDRESS FIELD     @F@@@@       TE,U  A4,0,A1     . DOES TOP YK
)@@G@@OF STACK MATCH THIS THING?    @C@@@@       J     *0,X11      . NO, TAKE YL
)@@G@@NOMATCH EXIT@G@@@@       TZ,S2 0,X11       . YES, ARE WE SUPPOSED TO CLOYM
)@@G@@SE THE CHAIN ?    @B@@@@       J     RP0060      . YES, GO DO IT  @E@@@@YN
)@@G@@. THIS CALL IS TO REPLACE ( WITH [-- WE HAVE SCANNED (...)[ @C@@@@RP0050YO
)@@G@@ LXM,U A1,1        . GET BRACKET FLAG     @C@@@@       LSSC  A1,16      YP
)@@G@@ . REPACK POINTER WORD  @F@@@@       LXI,U A1,0,A2     . CHANGE LEX INDEYQ
)@@G@@X TO POSITION OF BRACKET@D@@@@       SA    A1,COPREN   . REPLACE TOP OF YR
)@@G@@STACK MARKER@B@@@@       J     1,X11       . AND RETURN     @D@@@@. THISYS
)@@G@@ CALL REQUIRES US TO POP THE PAREN/BRACKET STACK@G@@@@RP0060 SSL   A1,36YT
)@@G@@-16    . LINE UP ADDR OF 2ND THING FROM CURRENT TOP   @ @@@@       ABSADYU
)@@G@@R A1         .    @G@@@@       LA,H1 A5,COPREN   . GET LEX POSITION OF TYV
)@@G@@OP THING I.E.( OR [     @D@@@@       LA    A3,0,A1     . GET 2ND FROM TOYW
)@@G@@P OF STACK  @F@@@@       SA    A3,COPREN   . MAKE IT THE TOP OF THE CURRYX
)@@G@@ENT STACK   @G@@@@       LA,U  A3,PSUDOF(PSOXQP,PSQNIL)+PSNNOP . GET A NYY
)@@G@@OP INSTRUCTION    @E@@@@       LXI   A3,A5       . AND PUT POSN OF LEFT YZ
)@@G@@MARK IN IT  @E@@@@       JE,U  A4,2 RP0080 . IF CLOSING A BRACE, GO STASZA
)@@G@@H NOP @D@@@@       TNE,U A4,3        . IS THIS A LIST CREATE OPN? @G@@@@ZB
)@@G@@       LXM,U A3,PSUDOF(PSOXQP,PSQMON)+ALLIST . YES, GENERATE THE OPCODE ZC
)@@G@@@H@@@@       JNE,U A4,1 RP0070 . IF NOT BRACKET, DON'T GENERATE INDESINGZD
)@@G@@ OPCODE     @G@@@@       TE,U  A0,PSUDOF(PSOXQP,PSQXDY)+ASTORE . IS INDEZE
)@@G@@XING ALREADY SET? @G@@@@       LXM,U A3,PSUDOF(PSOXQP,PSQNIL)+PSNXNO . NZF
)@@G@@O, CHANGE NOP TO INDEX  @E@@@@RP0070 LXI,U A0,0,A2     . POST LEX INDEX ZG
)@@G@@OF CLOSING DYAD   @F@@@@       SA    A0,1,A1     . SAVE DYADIC OP WHICH ZH
)@@G@@CAUSED CLOSURE    @E@@@@RP0080 SA    A3,0,A1     . SAVE INDEX OR NOP, ASZI
)@@G@@ APPROPRIATE@B@@@@       J     1,X11       . NORMAL EXIT    @A@@@@/. COMZJ
)@@G@@PILE AN APL EXECUTABLE STMNT  @E@@@@. ENTER WITH ADDRESS OF LEXICAL TEXTZK
)@@G@@ FOR THIS STMNT IN A2   @[@@@@.     @#@@@@       INSTRS.    @ @@@@COMPILZL
)@@G@@* SX   X11,COLINK  .    @G@@@@       LMJ   X11,LEXGET  . INITIALIZE SCANZM
)@@G@@ OF LEXICALLY STORED TEXT     @ @@@@       J     CO0999      .    @E@@@@ZN
)@@G@@       LMJ   X11,CODSTO  . INITIALIZE CODE STORAGE RTNE     @ @@@@      ZO
)@@G@@ J     CO0999      .    @C@@@@       LA,U  A2,0        . CLEAR LEXICAL IZP
)@@G@@TEM NO@E@@@@       NILAD PSNXTS      . COMPILE 'GO TO NEXT STATEMENT'   ZQ
)@@G@@@[@@@@.     @A@@@@. ***** STATE 1, BEGIN STMNT *****  @[@@@@.     @]@@@@ZR
)@@G@@STATE1.     @D@@@@CP0100 SZ    CODTRM      . CLEAR DEFERRED TERM FLAG   ZS
)@@G@@@C@@@@       SZ    COPREN      . NO PARENS ARE OPEN   @E@@@@       LXNEXZT
)@@G@@T CP0150,CP0110 CP0236,CP0190 . SCAN 1ST TERM   @G@@@@. GOT PRIMITIVE OPZU
)@@G@@R AFTER BEGIN-- ONLY END STMNT OR '(' ARE ALLOWED     @C@@@@CP0110 TE,U ZV
)@@G@@ A0,AEOL     . IS THIS END OF STMNT?@C@@@@       TNE,U A0,ALAMP    . OR ZW
)@@G@@START OF COMMENTS?@D@@@@       J     CO0300      . YES, GO CLOSE THE STAZX
)@@G@@TEMENT@G@@@@       JNE,U A0,AGOTO CP0230 . IF NOT RIGHT ARROW, GO CHECK ZY
)@@G@@FOR MONAD   @E@@@@       LXPEEK CP0236     . IF NOT FOL BY OPR, TREAT ASZZ
)@@G@@ MONAD@E@@@@CP0120 TE,U  A0,AEOL     . DOES END OF LINE FOLLOW ARROW?   AA
)@@G@@@D@@@@       TNE,U A0,ALAMP    . NO, HOW ABOUT COMMENTS?    @F@@@@      AB
)@@G@@ J     CP0140      . IF EITHER, COMPILE STATEVECTOR CLEAR   @E@@@@      AC
)@@G@@ BACKUP            . ELSE RESTORE ORIGINAL PICKUP     @C@@@@       J    AD
)@@G@@ CP0236      . AND GO PROCESS MANAD @F@@@@CP0140 NILAD PSNESC      . SOLAE
)@@G@@ITARY RIGHT ARROW-- CLEAR STATEVECT @B@@@@       J     CO0300      . ANDAF
)@@G@@ GET OUT    @C@@@@. 1ST TERM IS OPERAND, CHECK FOR POSSIBLE LABEL @G@@@@AG
)@@G@@CP0150 LXPEEK,ACOLON CP0220   . IF NOT FOLLOWED BY COLON, NORMAL OP     AH
)@@G@@@E@@@@       J     CP0100      . OTHERWISE A LABEL, IGNORE IT     @[@@@@AI
)@@G@@.     @G@@@@CP0190 ERROR YSYNTA,CO0930    . STMNTS CANNOT START WITH DYAAJ
)@@G@@DIC FUNCS-  @[@@@@/.    @C@@@@. ****** STATE 2 --- AFTER AN OPERATOR ***AK
)@@G@@**    @[@@@@.     @]@@@@STATE2 .    @C@@@@CP0200 LXNEXT CP0220,CP0230 CPAL
)@@G@@0236,CP0295 .     @[@@@@.     @B@@@@. ***** STATE 2A- AFTER A SEMICOLON AM
)@@G@@***** @[@@@@.     @]@@@@STAT2A .    @C@@@@CP0210 LXNEXT CP0220,CP0213 CPAN
)@@G@@0236,CP0295 .     @G@@@@CP0213 JNE,U A0,ASEMIC CP0215 . IF NOT SEMICOLONAO
)@@G@@, GO CHECK RITE BRACKET @E@@@@       NILAD PSNELX      . GENERATE ELIDEDAP
)@@G@@ INDEX MARKSTACK  @C@@@@       J     STAT2A      . CONTINUE THE MARCH   AQ
)@@G@@@F@@@@CP0215 JNE,U A0,ARBRAK CP0230 . IF NOT RITE BRACKET, NORMAL MONAD AR
)@@G@@@E@@@@       NILAD PSNELX      . YES, GENERATE SEMICOLON MARKSTACK@E@@@@AS
)@@G@@       J     CP0520      . AND GO PROCESS AFTER THE BRACKET @[@@@@.     AT
)@@G@@@B@@@@. BOTH OF THE ABOVE STATES CONVERGE HERE--@[@@@@.     @^@@@@. PICKAU
)@@G@@UP OF OPERAND     @G@@@@CP0220 DEFER             . DON'T GENERATE UNTIL AV
)@@G@@WE KNOW WHAT FOLLOWS    @ @@@@       J     STATE3      .    @G@@@@. GOT AW
)@@G@@PRIMITIVE-- IN THIS CONTEXT IT MAY BE A REDUCER OR NORMAL MONAD   @E@@@@AX
)@@G@@CP0230 TREDUC            . IS THIS AN OP WHICH CAN REDUCE?  @E@@@@      AY
)@@G@@ J     CP0234      . NO, FOLLOW NORMAL PROCEDURES     @G@@@@       LXPEEAZ
)@@G@@K CP0234     . YES, LOOK AHEAD FOR REDUCE FLAGS (1ST/LAST)  @G@@@@CP0231BA
)@@G@@ JNE,U A0,ARDFIR CP0232 . IF NOT RED ON 1ST, GO TRY NORMAL REDUCE @F@@@@BB
)@@G@@       RESET             . RED ON 1ST COORD, GET ORIGINAL PARAMS  @G@@@@BC
)@@G@@       AA,U  A0,PSUDOF(0,PSQRED-PSQMON,PSFSLF)    . ADD REDUCE FLAG BITSBD
)@@G@@@D@@@@       J     CP0236      . AND GO GENERATE MONADIC OP @G@@@@CP0232BE
)@@G@@ JNE,U A0,AREDUC CP0233 . IF NOT NORMAL RED EITHER, BAKUP LOOKAHEA@F@@@@BF
)@@G@@       RESET             . NORMAL REDUCTION, GET ORIGINAL PARAMS  @G@@@@BG
)@@G@@       AA,U  A0,PSUDOF(0,PSQRED-PSQMON,0)    . ADD REDUCTION FLAGS TO OPBH
)@@G@@@F@@@@       J     CP0235      . AND GO LOOK FOR COORDINATE SELECTION   BI
)@@G@@@F@@@@CP0233 BACKUP            . RESET LEX SCANNER AND ORIGINAL PARAMS  BJ
)@@G@@@B@@@@. END OF TESTS FOR POSSIBLE REDUCTION--   @C@@@@CP0234 TMONAD     BK
)@@G@@       . IS THIS OP A MONAD?  @D@@@@       J     CP0240      . NO, GO CHBL
)@@G@@ECK FOR PAREN     @G@[@@       TSELEC            . YES, IS IT ALLOWED TOBM
)@@G@@ SELECT ON A COORD?     @G@@[[        TSELEM                . YES, IS ITBN
)@@G@@ ALLOWED TO SELECT A COORD?   @F[@@@       J     CP0236      . NO, GENERBO
)@@G@@ATE NORMAL MONADIC EXECUTE    @G@@@@CP0235 PEEKSL            . PEEK TO SBP
)@@G@@EE IF OP DOES IN FACT SELECT A COORD@F@@@@       J     CP0236      . IF BQ
)@@G@@DOESN'T, GO GENERATE NORMAL MONAD   @E@@@@       MONAD             . IT BR
)@@G@@DOES, GENERATE MONADIC EXECUTE@G@@@@       LBRACE            . AND CHAINBS
)@@G@@ THE OPENING LEFT BRACE OF SELECTION@E@@@@       J     STATE2      . THEBT
)@@G@@N CONTINUE AFTER THIS OPR     @E@@@@CP0236 MONAD             . GENERATE BU
)@@G@@NORMAL MONADIC EXECUTE  @D@@@@       J     STATE2      . CONTINUE AFTER BV
)@@G@@OPERATOR    @G@@@@CP0240 JNE,U A0,ALPAR CP0250  . IF NOT LEFT PAREN, TRYBW
)@@G@@ LEFT LIST MARKER @#@@@@       LPAREN .   @ @@@@       J     STATE2     BX
)@@G@@ .    @G@@@@CP0250 JNE,U A0,ALLIST CO0910 . IF NOT LEFT LIST MARKER, SYNBY
)@@G@@TAX ERR     @D@@@@       LBLIST            . ADD MARKER TO PAREN CHAIN  BZ
)@@G@@@ @@@@       J     STATE2      .    @[@@@@.     @F@@@@CP0295 ERROR YSYNTCA
)@@G@@A,CO0930    . DYADS MAY NOT FOLLOW OPERATORS    @[@@@@/.    @[@@@@.     CB
)@@G@@@A@@@@. STATE 3 --- AFTER AN OPERAND *****@[@@@@.     @]@@@@STATE3 .    CC
)@@G@@@C@@@@CP0300 LXNEXT CP0310,CP0320 CO0910,CP0327 .     @#@@@@. PICKED UP CD
)@@G@@A TERM@B@@@@CP0310 J     CO0910      . SYNTAX ERROR   @A@@@@. PICKED UP CE
)@@G@@A PRIMITIVE OPERATOR ---@G@@@@CP0320 JNE,U A0,ASTORE CP0323 . IF OP IS NCF
)@@G@@OT STORE, GO CHECK FOR DYAD   @F@@@@       LA    A0,CODTRM   . IF STORE,CG
)@@G@@ GET THE DEFERRED OPERAND     @E@@@@       AA,U  A0,PSUDOF(PSOLOD) . MAKCH
)@@G@@E AN OPERATION OUT OF IT@D@@@@       DSL   A0,15       . ISOLATE THE PRICI
)@@G@@MARY OPCODE @G@@@@       JE,U  A0,PSOFUN CO0910      . STORING INTO A FUCJ
)@@G@@NCT IS SYNTAX ERR @G@@@@       JNE,U A0,PSOLDV CP0322 . IF NOT LOAD AND CK
)@@G@@VERIFY, GO GENERATE CODE@F@@@@       SSL   A1,36-15    . IF LOAD WITH CHCL
)@@G@@ECK, GET RID OF CHECK   @E@@@@       SA    A1,CODTRM   . AND SAVE AS IF CM
)@@G@@A NORMAL OPERAND  @E@@@@CP0322 LA,U  A0,ASTORE   . REGENERATE THE ORIGINCN
)@@G@@AL STORE OP @C@@@@       J     CP0327      . AND GO GENERATE CODE @B@@@@CO
)@@G@@CP0323 TDYAD             . IS THIS A DYAD?@G@@@@       J     CP0330     CP
)@@G@@ . NO, GO LOOK FOR PARENS, SE7ICOLONS, ETC.     @G@@@@       TSTSEL     CQ
)@@G@@       . DOES THIS OPR SELECT ALONG A COORDINATE+     @D@@@@       J    CR
)@@G@@ CP0325      . NO, GENERATE NORMAL EXECUTE@E@@@@       DYAD             CS
)@@G@@ . YES, GENERATE REDUCING OPCODE    @C@@@@       LBRACE            . CHACT
)@@G@@IN THE LEFT BRACE @D@@@@       J     STATE2      . CONTINUE AFTER AN OPECU
)@@G@@RATOR @F@@@@CP0325 MODINR            . IF PART OF INNER PRODUCT, MODIFY CV
)@@G@@OPCODE@E@@@@CP0327 DYAD              . THEN GENERATE DYADIC EXECUTE     CW
)@@G@@@D@@@@       J     STATE2      . CONTINUE AFTER AN OPERATOR @E@@@@CP0330CX
)@@G@@ JE,U  A0,ACOLON CP0390      . IF COLON, LABEL ERROR  @D@@@@CP0340 JE,U CY
)@@G@@ A0,ALBRAK CP0345 . IS THIS LEFT BRACKET+ @C@@@@       SA    A0,COPGOT  CZ
)@@G@@ . SAVE THE OPERATOR    @E@@@@       OPLOAD            . NO, GENERATE LODA
)@@G@@AD OF THIS OPERAND@D@@@@       J     CO0200      . CHECK FOR PARENS, ETCDB
)@@G@@ .    @C@@@@CP0345 LBRACK            . CHAIN LEFT BRACKET   @F@@@@      DC
)@@G@@ OPLOAD            . LOAD DESCRIPTOR OF INDEXED VARIABLE    @E@@@@      DD
)@@G@@ J     STAT2A      . CONTINUE AS IF AFTER A SEMICOLON @ @@@@CP0390 ERRORDE
)@@G@@ YLABEL,CO0930 .  @[@@@@/.    @D@@@@. PROCESS RIGHT SIDE OF EXPR DELIMITDF
)@@G@@ER (E.G. ] OR ;  )@[@@@@.     @]@@@@CO0200 .    @D@@@@CP0500 LA    A0,CODG
)@@G@@PGOT   . PICK UP THE CHAR WE SCANNED@F@@@@       JE,U  A0,ASEMIC STAT2A DH
)@@G@@. IF SEMICOLON, GO SCAN AFTER IT    @G@@@@       JE,U  A0,ARBRAK CP0510 DI
)@@G@@. IF RIGHT BRACKET, GO TEST FOR BRACE     @C@@@@       TE,U  A0,ARPAR   DJ
)@@G@@ . IS IT RIGHT PAREN?   @E@@@@       TNE,U A0,ARLIST   . NO, HOW ABOUT RDK
)@@G@@IGHT SIDE OF LIST?@C@@@@       J     CP0530      . IF EITHER, GO PROCESSDL
)@@G@@@F@@@@       TE,U  A0,AEOL     . IF NONE OF ABOVE, MUST BE END OF LINE  DM
)@@G@@@D@@@@       TNE,U A0,ALAMP    . OR BEGINING OF COMMENTS    @E@@@@      DN
)@@G@@ J     CO0300      . IF EITHER, GO CLOSE STATEMENT    @C@@@@       J    DO
)@@G@@ CO0910      . ELSE SYNTAX ERROR    @C@@@@. CHECK WHETHER RIGHT BRACKET DP
)@@G@@MATCHES BRACE     @G@@@@CP0510 LA,U  A1,2        . TENTATIVELY, GET TYPEDQ
)@@G@@ INDICATOR FOR BRACE    @E@@@@       SA    A1,CPRTYP   . AND SAVE AS TYPDR
)@@G@@E OF THIS OPERATOR@G@@@@       RBRACE CP0520     . IF REALLY BRACE, CLOSDS
)@@G@@E CHAIN, ELSE BRACKET   @G@@@@       NILAD PSNRBR      . IT DOES, GENERADT
)@@G@@TE RIGHT BRACKET MARKSTACK    @D@@@@       J     STATE2      . AND GO SCDU
)@@G@@AN AFTER OPERATOR @E@@@@CP0520 LA,U  A0,1        . SET MARKER TYPE 1 (RIDV
)@@G@@GHT BRACKET)@C@@@@       J     CP0540      . AND GO SCAN AFTER IT @B@@@@DW
)@@G@@. COME HERE FOR PAREN OR RIGHT LIST MARKER@E@@@@CP0530 SZ    CPRTYP     DX
)@@G@@ . SET DELIMITER TYPE ZERO (=PAREN) @G@@@@       JE,U  A0,ARPAR CP0600  DY
)@@G@@. AND IF IT REALLY WAS PAREN, SCAN AFTER  @E@@@@       LA,U  A0,3       DZ
)@@G@@ . OTHERWISE LIST MARK, SET TYPE 3  @E@@@@CP0540 SA    A0,CPRTYP   . SAVEA
)@@G@@E DELIMITERTYPE (1 OR 3 )     @F@@@@       NILAD PSNRBR      . AND SINCEEB
)@@G@@ NOT PAREN, GENERATE MARKSTACK@G@@@@. NOW SCAN AFTER THE DELIMITER FOR AEC
)@@G@@ DYAD OR NAOTHER END OF EXPR MARKER @E@@@@CP0600 LXNEXT CO0910,CP0610 COED
)@@G@@0910,CP0650 . DO LEXICAL SCAN @B@@@@. DELIMITER IS FOLLOWED BY A PRIMITIEE
)@@G@@VE--- @C@@@@CP0610 SA    A0,COPGOT   . SAVE THE PRM FOR LAET@G@[@@      EF
)@@G@@ JDYAD CP0630      . IF ITS A DYAD, CHECK FOR SELECTOR/INPROD     @C@@[[EG
)@@G@@        TNDYAD                . IS THIS A DYAD? @F@@[[        J      CP0EH
)@@G@@630         . YES, GO CHECK FOR SELECTOR/INPROD @G[@@@       TNZ   CPRTYEI
)@@G@@P      . NOT A DYAD, ARE WE CLOSING A PAREN PAIR?     @F@@@@       TE,U EJ
)@@G@@ A0,ALBRAK   . YES, IS THE PRIMITIVE A LEFT BRACKET?  @F@@@@       J    EK
)@@G@@ CP0620      . IF NEITHER, THEN GO CLOSE WITH NOP     @G@@@@       RPLACEL
)@@G@@E CO0910     . BUT IF BOTH, THEN (...)[ ; REPLACE ( WITH [  @E@@@@      EM
)@@G@@ J     STAT2A      . AND CONTINUE SCAN AFTER SEMICOLON@E@@@@CP0620 RCLNOEN
)@@G@@P CO0910     . CLOSE DELIMITER PAIR WITH A NOP  @G@@@@       J     CP050EO
)@@G@@0      . AND GO MAKE SURE TRAILER OP IS ALSO A DELIM  @G@@@@. TRAILER ISEP
)@@G@@ PRIMITIVE DYAD-- TEST FOR COORD SELECTION OR INNER PROD    @F@@@@CP0630EQ
)@@G@@ TSTSEL            . DOES THIS OP SELECT ON A COORDINATE?   @E@@@@      ER
)@@G@@ J     CP0640      . NO, GO DO INNER PRODUCT TEST     @C@@@@       RCLOSES
)@@G@@E CO0910     . YES, CLOSE DELIM PAIR@G@@@@       LBRACE            . ANDET
)@@G@@ ESTABLISH OPENING LEFT BRACE ON CHAIN    @E@@@@       J     STATE2     EU
)@@G@@ . AND THEN SCAN AFTER OPERATOR     @G@@@@CP0640 MODINR            . IF EV
)@@G@@INNER PROD, MODIFY THE OPCODE ACCORDINGLY @E@@@@CP0650 RCLOSE CO0910    EW
)@@G@@ . CLOSE THE CURRENT DELIM PAIR     @D@@@@       J     STATE2      . ANDEX
)@@G@@ SCAN AFTER OPERATOR    @[@@@@/.    @#@@@@. END OF STATEMENT@[@@@@.     EY
)@@G@@@E@@@@CO0300 TZ,H2 COPREN      . ANY DANGLING PARENS OR BRACKETS? @B@@@@EZ
)@@G@@       J     CO0910      . YES, SYNTAX ERR@E@@@@       NILAD PSNBOS     FA
)@@G@@ . NO, COMPILE BEGIN STMNT MARKSTACK@D@@@@       LMJ   X11,CODCLO  . CLOFB
)@@G@@SE CODE STORAGE ROUTINE @ @@@@       J     CO0999      .    @ @@@@      FC
)@@G@@ LX    X11,COLINK  .    @B@@@@       J     1,X11        . NORMAL EXIT   FD
)@@G@@@[@@@@.     @ @@@@CO0900 ERROR YWSFUL,CO0930 .  @ @@@@CO0910 ERROR YSYNTFE
)@@G@@A,CO0930 .  @A@[@@CO0920 ERROR YSYSTM,CO0930    .     @A@@[[CO0920 EQU  FF
)@@G@@ 0           . SYSERR   @E[@@@. ERASE ANYTHING WHICH WAS GENERATED BY THFG
)@@G@@IS COMPILE PASS-  @[@@@@.     @C@@@@CO0930 SA    A0,COERRC   . TEMP SAVEFH
)@@G@@ ERROR CODE @C@@@@       LMJ   X11,CODABT  . ABORT CODE STORAGE   @ @@@@FI
)@@G@@       J     CO0999      .    @C@@@@       LA      A0,COERRC . RECOVER EFJ
)@@G@@RROR CODE   @C@@@@CO0999                   . NOW RETURN TO CALLER @ @@@@FK
)@@G@@       LX    X11,COLINK .     @B@@@@       J     0,X11        . ERROR REFL
)@@G@@TURN  @#@@@@       VARBLS.    @#@@@@COLINK  RES  1    @F@@@@COPCOD RES  FM
)@@G@@ 1           . TEMP STORAGE OF OPCODE DURING LOOKAHEAD@D@@@@COLNUM RES  FN
)@@G@@ 1           . DITTO FOR LEX ITEM COUNT   @D@@@@COPREN RES   1          FO
)@@G@@ . OPEN PARAN CHAIN POINTER   @ @@@@COPSEL RES   1           .    @D@@@@FP
)@@G@@CPRTYP EQUF  $,,S1       . DELIMITER TYPE INDICATOR   @E@@@@COPGOT EQUF FQ
)@@G@@ $,,H2       . TEMP STORAGE OF SCANNED OPERATORS@ @@@@       RES   1    FR
)@@G@@       .    @^@@@@COERRC EQU   COPGOT     @E@@@@CODTRM RES   1          FS
)@@G@@ . DEFERRED TERM TEMPORARY STORAGE  @D@@@@CODLXN RES   1           . DEFFT
)@@G@@ERRED LEXICAL ITEMNO    @#@@@@       VARCON .   @F@@@@CODESC NOP   0,0,WFU
)@@G@@STAG   . DESC ADDR OF MOST RECENTLY SCANNED TERM@F@@@@/.  SUBROUTINE TO FV
)@@G@@PICK UP LEXICAL ITEMS AND DETERMINE THEIR TYPE  @[@@@@.     @F@@@@. AT EFW
)@@G@@XIT FROM THIS RTNE, A0 IS SET TO THE OPERAND PORTION OF THE @G@@@@. APL FX
)@@G@@MACHINE OPCODE-- I.E. ADDING THE APL OPCODE TO A0 GIVES A MACHINE @G@@@@FY
)@@G@@. INSTRUCTION.  FOR PRIMITIVES OR DATA, THIS IS THE OPERATOR OR THE     FZ
)@@G@@@F@@@@. DESCRIPTOR POINTER.  FOR OBJECTS WHICH MASQUERADE AS SUCH (E.G. GA
)@@G@@@G@@@@. NILADIC FUNCTS WHICH LOOK LIKE DATA, OR THE OUTPUT OPERATOR, WHIGB
)@@G@@CH    @F@@@@. LOOKS LIKE A MONAD) THE VALUE IS SET SUCH THAT ADDITION OFGC
)@@G@@ THE  @G@@@@. NORMAL OPCODE WILL ACTUALLY GENERATE THE REQUIRED FUNCTIONGD
)@@G@@ OPCODE.    @F@@@@. A1 IS UNDEFINED, AND A2 IS LEXICAL SEQUENCE NO OF ITGE
)@@G@@EM PICKED UP@[@@@@.     @#@@@@       INSTRS .   @C@@@@SYNGET LMJ   X4,0,GF
)@@G@@X4     . GET NEXT LEXICAL ITEM@B@@@@       J     CO0930      . OOPS, ERRGG
)@@G@@OR    @B@@@@       SX    X11,SNLINK  . TEMP SAVE LINK @F@@@@       JE,U GH
)@@G@@ A1,LEXOPR SN0300 . IF PRIMITIVE, GO TEST FOR QUADS   @F@@@@       JE,U GI
)@@G@@ A1,LEXSTP SN0200 . GO PROCESS STOPVECTOR REFERENCES  @E@@@@       JE,U GJ
)@@G@@ A1,LEXTRC SN0210 . OR TRACEVECTOR REFERENCE    @G@@@@       SA,H2 A0,COGK
)@@G@@DESC   . NOT PRIMITIVE--SET POINTER TO DESCR BLOK     @D@@@@       JE,U GL
)@@G@@ A1,LEXLIT *0,X11 . IF LITERAL CONST, EXIT@D@@@@       LA,S1 A3,*CODESC GM
)@@G@@ . GET TYPE FROM DESCRIPTOR   @G@@@@. SINCE LEXTOR SAVES ONLY REFERENCESGN
)@@G@@ TO NAME BLOX, WE MUST SEE WHAT KIND@F@@@@SN0025 JNE,U A3,ZTPNAM SN0900 GO
)@@G@@. IF NOT NAMEBLOK, THEN SYS ERR     @D@@@@       ABSADR A0              GP
)@@G@@. GET NAMEBLOK ADDR     @D@@@@       LA,H2  A0,1,A0         . GET DESCRIGQ
)@@G@@PTOR LINK   @F@@@@       JZ    A0,SN0030        . IF NONE, ASSUME GLOBALGR
)@@G@@ NAMED DATUM@D@@@@       ABSADR A0              . ELSE GET DESCR ADDR   GS
)@@G@@@C@@@@       LA,S1 A3,0,A0          . GET DESCR TYPE  @E@@@@       JE,U GT
)@@G@@ A3,ZTPFUN SN0100 . IF FUNC, GO SEE WHAT KIND   @F@@@@       JNE,U A3,ZTGU
)@@G@@PVAR SN0900 . IF NOT NAMED VARIABLE, SYSERR     @D@@@@SN0030 LA,H2 A0,COGV
)@@G@@DESC   . RECOVER ADDR OF NAMEBLOK   @D@@@@       J     *0,X11      . ANDGW
)@@G@@ TAKE EXIT FOR OPERANDS @^@@@@. DECODE A FUNCTION     @F@@@@SN0100 JNE,UGX
)@@G@@ A1,LEXNAM SN0900 . IF NOT FUNCNAME, THEN SYSTEM ERROR@F@@@@       LA,S3GY
)@@G@@ A3,0,A0     . FUNC-- GET NO OF ARGS FROM NAMEBLOK    @C@@@@       LA,H2GZ
)@@G@@  A0,CODESC  . RECOVER NAMEBLOK ADDR@E@@@@       AA,U  A0,PSUDOF(PSOFUN,HA
)@@G@@PSQXFN)   . SET FUNCXQT OPCODE@E@@@@       JZ    A3,SN0420   . IF NILADIHB
)@@G@@C, TAKE OPERAND EXIT    @F@@@@       JE,U  A3,1  SN0410     . IF MONADICHC
)@@G@@, TAKE MONADIC FUNC EXIT@C@@@@SN0130 JNE,U A3,2 SN0900 . IF NOT DYADIC, HD
)@@G@@SYSERR@D@@@@       ANA,U A0,PSUDOF(PSOXQP,PSQDYA,0) . BIAS OPCODE @D@@@@HE
)@@G@@       J     *3,X11      . TAKE DYADIC FUNCT EXIT     @D@@@@. ADJUST OPCHF
)@@G@@ODES FOR TRACE AND STOPVECTOR REFERENCES  @G@@@@SN0200 AA,U  A0,PSUDOF(PHG
)@@G@@SOFUN,PSQVSV) . GUESS THAT OP IS VAL OF STOPVECT@F@@@@       J     SN022HH
)@@G@@0      . AND GO LOOK FOR A FOLLOWING LEFT ARROW @G@@@@SN0210 AA,U  A0,PSHI
)@@G@@UDOF(PSOFUN,PSQVTV) . SET OP TO GET TRACEVECT VAL     @G@@@@SN0220 LA,U HJ
)@@G@@ A1,PSUDOF(PSOFUN,PSQSSV)-PSUDOF(PSOFUN,PSQVSV) . SET BIAS  @G@@@@      HK
)@@G@@ J     SN0400      . AND GO OOK FOR A TRAILING STORE OPERATION    @A@@@@HL
)@@G@@. CHECK PRIMITIVES FOR I/O VARIABLES@E@@@@SN0300 JNE,U A0,AQUAD SN0310  HM
)@@G@@. IF NOT QUAD, CHECK QUOTEQUAD@G@@@@       LA,U  A0,PSUDOF(PSOXQP,PSQNILHN
)@@G@@)+PSNEVI . SET OPCODE FOR EVAL INPUT@E@@@@       J     SN0320      . ANDHO
)@@G@@ GO LOOK FOR TRAINLG STORE    @G@@@@SN0310 JNE,U A0,AQQUAD *1,X11 . IF NHP
)@@G@@OT QUOTEQUAD EITHER, PRIMITIVE EXIT @G@@@@       LA,U  A0,PSUDOF(PSOXQP,HQ
)@@G@@PSQNIL)+PSNCHI . SET OP FOR CHAR INPUT    @F@@@@SN0320 LA,U  A1,PSNEVO-PHR
)@@G@@SNEVI . AMT TO BUMP OPCODE IF FOL BY STORE@C@@@@. CHECK TRACE/STOP/QUAD HS
)@@G@@FOR TRAILING STORE OP   @D@@@@SN0400 SA    A1,SNBUMP   . SAVE INCREMENT HT
)@@G@@TO OPCODE   @E@@@@       LXPEEK,ASTORE SN0420   . LOOK FOR A FOLLOWING SHU
)@@G@@TORE  @C@@@@       RESET             . RECOVER ORIGINAL OP  @F@@@@      HV
)@@G@@ AA    A0,SNBUMP   . ADJUST AS REQUIRED FOR TRAILING STORES @F@@@@SN0410HW
)@@G@@ ANA,U A0,PSUDOF(PSOXQP,PSQMON)   . BIAS FOR MONADIC OP     @B@@@@      HX
)@@G@@ LX,H2 X11,SNLINK  . RESTORE LINK   @D@@@@       J     *2,X11      . ANDHY
)@@G@@ TAKE MONADIC FUNC EXIT @G@@@@SN0420 ANA,U  A0,PSUDOF(PSOLOD)    . NOT FHZ
)@@G@@OLLOWED BY STORE, SET OPLOAD  @B@@@@       LX,H2 X11,SNLINK  . RESTORE LIA
)@@G@@INK   @C@@@@       J     *0,X11      . AND TAKE OPERAND EXIT@[@@@@.     IB
)@@G@@@A@[@@SN0900 ERROR YSYSTM,CO0930    .     @A@@[[SN0900 EQU   0          IC
)@@G@@ . SYSERR   @ [@@@       VARBLS            .    @ @@@@SNBUMP RES   1    ID
)@@G@@       .    @#@@@@SNLINK RES   1 .  @]@@@@       END  ___   . GET DESCR IE
)@@G@@TYPE  @E@@@@       JE,U  A3,ZTPFUN SN0100 . IF FUNC, GO SEE WHAT KIND   IF
)@@G@@@F@@@@       JNE,U A3,ZTPVAR SN0900 . IF NOT NAM*[S@@@*SDFF*@[@@@@.     IG
)@@G@@@G@@@@. COMMUNICATIONS SUPERVISOR-- TALKS TO OPERATOR AND (SOMEDAY) OTHEIH
)@@G@@R RUNS@[@@@@.     @G@@@@. **********************************************II
)@@G@@*********************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCIJ
)@@G@@PKG/APL IN SOURCE DECKS     * @G@@@@.                                   IK
)@@G@@                                  * @G@@@@       AXR$         .         IL
)@@G@@                                        * @G@@@@       CONFIG  .    DEFIIM
)@@G@@NE ASSEMBLY PARAMETERS                        * @G@@@@       APSYMB.    IN
)@@G@@ DEFINE APL SYMBOL SET                              * @G@@@@       FDSYMIO
)@@G@@B.     DEFINE FIELDATA SYMBOLS                            * @G@@@@      IP
)@@G@@ WSDEF.      DEFINE WORKSPACE                                   * @G@@@@IQ
)@@G@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                           * IR
)@@G@@@G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                        IS
)@@G@@    * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE            IT
)@@G@@          * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES IU
)@@G@@                * @G@@@@.                                               IV
)@@G@@                      * @G@@@@. END OF STANDARD PROC BLOCK              IW
)@@G@@                            * @G@@@@. **********************************IX
)@@G@@*********************************** @[@@@@.     @B@@@@/. CHECK FOR AND SIY
)@@G@@ERVICE COMMO INTERRUPTS @B@@@@.  CALLED BETWEEN STATEMENTS BY XQTSUP    IZ
)@@G@@@[@@@@.     @ @@@@       INSTRS            .    @ @@@@CINSRV* SX   X11,CJA
)@@G@@ILINK  .    @B@@@@       LA    A0,COBFLG   . GET BUFFER FLAG@G@@@@      JB
)@@G@@ JNE,U A0,2 CI0100 . IF NO MSG WAITING, GO SEE IF AN II IS WAITING@E@@@@JC
)@@G@@       ANX,U X11,1       . DECR SO WE WILL TAKE SUSPEND EXIT@A@@@@      JD
)@@G@@ SX    X11,CILINK  . RESTORE  @E@@@@       LMJ   X11,CDPLAY  . DISPLAY RJE
)@@G@@EPLY ON USER'S TERMINAL @C@@@@       ER    ERR$        . WE CAN NEVER GEJF
)@@G@@T HERE@C@@@@CI0100 LA    A0,CONSII   . GET II-WAITING FLAG  @D@@@@      JG
)@@G@@ JZ    A0,CI0200   . IF NONE PENDING, GET OUT   @C@@@@       LMJ   X11,CJH
)@@G@@OMIIK  . ELSE INITIATE IT     @ @@@@       ER    ERR$        .    @C@@@@JI
)@@G@@       SZ    CONSII      . MARK II SERVICED     @ @@@@CI0200 LX    X11,CJJ
)@@G@@ILINK  .    @ @@@@       J     1,X11       .    @ @@@@       VARBLS     JK
)@@G@@       .    @ @@@@CILINK EQUF  $,,H2       .    @ @@@@       RES   1    JL
)@@G@@       .    @ @@@@/. SEND OUTGOING MESSAGES     @[@@@@.     @G@@@@. ENTRJM
)@@G@@IES FROM SYSCMD FOR )OPR AND )OPRN.  LEXCAN PICKUP REGS (X2,X3)   @G@@@@JN
)@@G@@. ARE POINTING TO 1ST CHAR AFTER COMMAND NAME (I.E. 1ST CHAR TO BE SENT)JO
)@@G@@@[@@@@.     @ @@@@       INSTRS            .    @F@@@@COMOPN* LA,U A0,0 JP
)@@G@@       . SET ENTRY TYPE )OPRN (NO REPLY NEEDED) @C@@@@       J     CO001JQ
)@@G@@0      . AND GO INITIALIZE    @F@@@@COMOPR* LA,U A0,1        . SET ENTRYJR
)@@G@@ TYPE )OPR  (REPLY REQUESTED) @[@@@@.     @C@@@@. SET UP LINKAGE SO FIELJS
)@@G@@DATA RTNE CAN CONVERT   @[@@@@.     @C@@@@CO0010 SX    X11,COLINK  . SAVJT
)@@G@@E RETURN ADDR     @C@@@@       SA    A0,COMTYP   . AND ALSO COMMAND TYPEJU
)@@G@@@E@@@@       LX,U  A1,COQGET   . POST ADDR OF QW FETCH ROUTINE    @G@@@@JV
)@@G@@       OUTCNB,U 132 -1,BUFF   . CONVERT TO FD IN RANDAC SCRATCH AREA    JW
)@@G@@@E@@@@       MSI,U A0,6        . CONVERT WDS TO CHARS FOR COM$    @C@@@@JX
)@@G@@       TG,U  A0,51       . MORE THAN 50 CHARS?  @E@@@@       LA,U  A0,50JY
)@@G@@       . YES, SET TO MAX ALLOWED BY COM$  @G@@@@       DSL   A0,18      JZ
)@@G@@ . MOVE NCHARS TO H1 OF A1 FOR USE IN ACCESS WD @G@@@@       LXM,U A1,BUKA
)@@G@@FF     . SET ADDR PART OF ACCESS WD TO FIELDATA BUFFER@B@@@@       J    KB
)@@G@@ CO0100      . AND GO SEND    @C@@@@. KLUDGE QW FETCH LINKAGE TO LEXCAN KC
)@@G@@ROUTINES    @H@@@@COQGET SA    A0,COQTMP   . SAVE WORD POINTER, WHICH LEKD
)@@G@@XANL FETCH DESTROYS     @D@@@@       LMJ   X2,0,X2     . LEXANL USES X2,KE
)@@G@@X3, AND A0  @E@@@@       LA    A3,A0       . BUT FDINOU EXPECTS RESULTS KF
)@@G@@IN A3 @C@@@@       LA    A0,COQTMP   . RESTORE WORD REGISTER@C@@@@      KG
)@@G@@ LMJ   A1,0,A1     . AND LINKS USING A1   @ @@@@       J     COQGET     KH
)@@G@@ .    @[@@@@.     @B@@@@. THIS ENTRY IS FOR RESPONSE TO II-KEYINS @[@@@@KI
)@@G@@.     @ @@@@COMIIK* SX   X11,COLINK  .    @C@@@@       LA,U  A0,2       KJ
)@@G@@ . GET COMMAND TYPE     @A@@@@       SA    A0,COMTYP   . POST IT  @F@@@@KK
)@@G@@       LA    A1,COIACW   . GET ACCESS WORD FOR CANNED II MESSAGE  @[@@@@KL
)@@G@@.     @ @@@@. GET SET AND TRANSMIT---     @[@@@@.     @B@@@@CO0100 TZ   KM
)@@G@@ COMTYP      . IS THIS )OPRN? @G@@@@       J     CO0200      . NO, A REPKN
)@@G@@LY IS NEEDED.  GO FORK TO REPLY RTNE@G@@@@       SA    A1,COPKTN+1 . YESKO
)@@G@@, PUT OUTPUT ACCESS WD IN COM$ PACKET     @D@@@@       SZ    COPKTN     KP
)@@G@@ . CLEAR STATUS WD IN PACKET  @ @@@@       LA,U  A0,COPKTN   .    @C@@@@KQ
)@@G@@       ER    COM$        . SEND THE MESSAGE     @C@@@@       SEND  'SENTKR
)@@G@@'      . TELL USER WE'RE DONE @B@@@@       J     CO0400      . AND GET OKS
)@@G@@UT    @[@@@@.     @C@@@@. SEPARATE ACTIVITY USED TO ACCEPT REPLIES---   KT
)@@G@@@[@@@@.     @E@@@@CO0200 TNZ   COBFLG      . IS INPUT COM$ BUFFER ACTIVEKU
)@@G@@?     @C@@@@       J     CO0300      . NO, WE CAN USE IT    @D@@@@      KV
)@@G@@ LA    A0,COMTYP   . YES-- GET COMMAND TYPE     @F@@@@       JNE,U A0,2 KW
)@@G@@CO0220 . IF NOT II, GO TELL USER 'NOT SENT'     @F@@@@       LA    A1,COKX
)@@G@@RTAW   . ELSE GET CTL WD TO TELL OPR TO RETRY   @A@@@@. XMIT MSG TELLINGKY
)@@G@@ OPR WE'RE BUSY   @B@@@@CO0210 SA    A1,COPKTN+1 . POST ACCESS WD @C@@@@KZ
)@@G@@       SZ    COPKTN      . CLEAR STATUS WORD    @ @@@@       LA,U  A0,COLA
)@@G@@PKTN   .    @E@@@@       ER    COM$        . DISPLAY MSG ON OPERATOR CONLB
)@@G@@SOLE  @C@@@@       J     CO0400      . AND RETURN TO USER   @F@@@@. AN ULC
)@@G@@NSERVICED OLD MSG IS IN BUF-- TELL USER THIS ONE 'NOT SENT' @C@@@@CO0220LD
)@@G@@ SEND  'NOT SENT'  . DISPLAY THE MESSAGE  @B@@@@       J     CO0400     LE
)@@G@@ . AND RETURN     @[@@@@.     @F@@@@. THIS IS THE PLACE WHERE WE ACTUALLLF
)@@G@@Y START THE INPUT ACTIVITY--- @[@@@@.     @D@@@@CO0300 SA    A1,COPKTR+1LG
)@@G@@ . PUT OUTPUT ACCESS WD IN PKT@C@@@@       LA,U  A0,1        . BUFFER FILH
)@@G@@LLING FLAG  @A@@@@       SA    A0,COBFLG   . POST IT  @F@@@@       LA   LI
)@@G@@ A0,COFORK   . GET NAME OF CONSOLE INPUT ACTIVITY     @B@@@@       ER   LJ
)@@G@@ ACT$        . AND WAKE HIM UP@B@@@@       LA    A0,COMTYP   . GET ENTRYLK
)@@G@@ TYPE @F@@@@       JE,U  A0,2 CO0400 . IF II, DON'T SAY ANYTHING TO USERLL
)@@G@@ YET  @[@@@@.     @E@@@@. FOR )OPR, WAIT FOR REPLY OR UNTIL USER GETS IMLM
)@@G@@PATIENT     @[@@@@.     @D@@@@CO0310 SEND  'SENT'      . TELL HIM WE'VE LN
)@@G@@DONE IT     @D@@@@       SZ    CONSBR      . TURN OFF BREAK KEY FLAG    LO
)@@G@@@D@@@@CO0320 LA    A0,COBFLG   . CURRENT INPUT BUFFER STATUS@F@@@@      LP
)@@G@@ JNE,U A0,1 CO0330 . IF BUF NOT FILLING, GO DISPLAY TO USER @E@@@@      LQ
)@@G@@ TZ    CONSBR      . HAS USER GOTTEN TIRED OF WAITING?@G@@@@       J    LR
)@@G@@ CO0340      . YES, QUIT AND PICK UP REPLY ON NEXT POLL     @F@@@@      LS
)@@G@@ LA,U  A1,666      . 2/3 SEC WILL TURN ON LONG WAIT BIT     @C@@@@      LT
)@@G@@ TNZ   RCDMND      . IS THIS A DEMAND RUN?@G@@@@       LA,U  A1,10000   LU
)@@G@@ . NO BATCH. GIVE OPR A LONGER TIME (10 SECONDS)@E@@@@       ER    TWAITLV
)@@G@@$      . GIVE THE 1108 OPR TIME TO WAKE UP@F@@@@       J     CO0320     LW
)@@G@@ . AND THEN LOOK AGAIN TO SEE IF HE'S DONE@B@@@@. MSG REC'D-- DISPLAY ITLX
)@@G@@ ON USER TERMINAL @D@@@@CO0330 LX    X11,COLINK  . RECOVER LINK BACK TU LY
)@@G@@CALLER@G@@@@       J     CDPLAY      . DISPLAY REPLY; DISPLAY RTNE RETURLZ
)@@G@@NS TO CALLER@D@@@@CO0340 SZ    CONSBR      . MARK BREAK KEY SERVICED    MA
)@@G@@@[@@@@.     @B@@@@. MAIN ACTIVITY EXITS TO USER PROGRAM     @[@@@@.     MB
)@@G@@@ @@@@CO0400 LX    X11,COLINK  .    @A@@@@       J     1,X11       . EXIMC
)@@G@@T     @[@@@@.     @[@@@@.     @A@@@@. STORAGE USED BY MAINLINE ACTIVITY MD
)@@G@@@[@@@@.     @#@@@@       VARBLS .   @ @@@@COLINK EQUF  $,,H1       .    ME
)@@G@@@ @@@@COMTYP EQUF  $,,S4       .    @#@@@@       RES   1 .  @F@@@@COQTMPMF
)@@G@@ RES   1 . TEMP STORE OF LINK SO QW FETCH CAN BE KLUDGED    @D@@@@. COM$MG
)@@G@@ PKT USED FOR )OPRN AND/OR CANNED 'BUSY' MESSAGE@B@@@@COPKTN +0         MH
)@@G@@       . +STATUS,NCHARS @C@@@@       +0,0              . OUTPUT ACCESS WMI
)@@G@@ORD   @E@@@@       +0                . INPUT ACCESS WORD (ALWAYS ZERO)  MJ
)@@G@@@ @@@@       CONSTS            .    @A@@@@CORTRY 'II BUSY, TRY AGAIN'   MK
)@@G@@.     @A@@@@CORTAW +6*($-CORTRY),CORTRY   .     @C@@@@/. DISPLAY RECIEVEML
)@@G@@D MESSAGE ON USER'S TERMINAL  @#@@@@       INSTRS  .  @ @@@@CDPLAY SX   MM
)@@G@@ X11,CDLINK  .    @E@@@@       INCNV,H2 FDBUFR,COINBF,COPKTR CD0010 . IGMN
)@@G@@NORE ILCHARS@F@@@@CD0010 LNA   A4,R2       . GET NO OF FIELDATA CHARS COMO
)@@G@@NVERTED     @E@@@@       AA,U  A4,4        . PLUS 4 FOR CANNED PREFIX 'OMP
)@@G@@PR:'  @B@@@@       LA,U  A3,COIPFX   . ADDR OF PREFIX @B@@@@       LMJ  MQ
)@@G@@ X11,PRSEND  . PRINT THE REPLY@D@@@@       SZ    COBFLG      . CLEAR BUFMR
)@@G@@FER ACTIVE FLAG   @D@@@@       SZ    CONSBR      . MARK BREAK KEY SERVICMS
)@@G@@ED    @ @@@@       LX    X11,CDLINK  .    @B@@@@       J     1,X11      MT
)@@G@@ . AND RETURN     @#@@@@       VARBLS  .  @ @@@@CDLINK EQUF  $,,H1      MU
)@@G@@ .    @#@@@@       RES   1 .  @G@@@@/. TO FORESTALL THE POSSIBILITY OF FMV
)@@G@@ORKING IN A REP AND HAVING ONE OF   @F@@@@. ACTIVITIES LOAD A DIFFERENT MW
)@@G@@I-BANK, THIS ACTIVITY IS ESTABLISHED@F@@@@. BEFORE THE PROGRAM BECOMES LMX
)@@G@@INKED, AND EXECUTES FROM THE D-BANK @F@@@@. NOTE: THIS ACTIVITY HAS BEENMY
)@@G@@ ESTABLISHED BEFORE THE RLINK$, AND @F@@@@. THUS CANNOT REFER TO I-BANK MZ
)@@G@@(AS ITS SLR SAYS IT HASN'T ANY)     @[@@@@.     @[@@@@.     @]@@@@$(8)  NA
)@@G@@ .    @ @@@@OPFORK INFO  2 8         .    @G@@@@COFORK* +1,CO0500       NB
)@@G@@ . FORK$ CTL WD, LATER BECOMES ACTIVITY NAME    @[@@@@.     @ @@@@CO0500NC
)@@G@@ LA,U  A0,'COM'    .    @B@@@@       ER    NAME$       . GIMMEA A NAME  ND
)@@G@@@A@@@@       SA    A0,COFORK   . SAVE IT  @F@@@@CO0505 ER    DACT$      NE
)@@G@@ . AND GO TO SLEEP UNTIL WE'RE NEEDED     @F@@@@       TNZ   COFORK     NF
)@@G@@ . WE'RE AWAKE, IS OUR NAME STILL THERE?  @C@@@@       ER    EXIT$      NG
)@@G@@ . NO, TIME TO GO AWAY  @C@@@@CO0510 SZ    COPKTR      . CLEAR STATUS WONH
)@@G@@RD    @ @@@@       LA,U  A0,COPKTR   .    @ @@@@       ER    COM$       NI
)@@G@@ .    @D@@@@       LA,U  A0,2        . GET MESSAGE WAITING FLAG   @E@@@@NJ
)@@G@@       TNZ,H2 COPKTR     . DID OPR ACTUALLY SAY ANYTHING?   @C@@@@      NK
)@@G@@ LA,U  A0,0        . NO, CHANGE STATUS    @C@@@@       SA    A0,COBFLG  NL
)@@G@@ . SET BUF STATUS FLAG  @C@@@@       J     CO0505      . AND GO BACK TO NM
)@@G@@SLEEP @[@@@@.     @A@@@@. STORAGE USED BY FORKED ACTIVITY   @[@@@@.     NN
)@@G@@@C@@@@COIANS '*APL* ENTER RETURN OR 50 CHARS, PLEASE.'@E@@@@COIACW +6*($NO
)@@G@@-COIANS),COIANS   . ACCESS WD FOR ABOVE MESSAGE @ @@@@       VARCON     NP
)@@G@@       .    @C@@@@COBFLG +0                . BUFFER ACTIVITY FLAG @C@@@@NQ
)@@G@@COPKTR  +0               . STATUS WD OF PACKET  @E@@@@        +0        NR
)@@G@@       . OUTPUT ACESS WORD (SET BY PROG)  @D@@@@       +50,FDBUFR       NS
)@@G@@ . INPUT ACCESS WD (FIXED)    @E@@@@COIPFX APLBCI 'OPR:'     . PREFIX FONT
)@@G@@R MESSAGES FROM OPR     @C@@@@COINBF RES   7           . INTERNAL CODE MNU
)@@G@@SG BUF@F@@@@FDBUFR RES   9           . 9 WDS (50 CHARS) MAX INPUT FROM CNV
)@@G@@ONSOLE@#@@@@       END   .    ___@@@CORTAW +6*($-CORTRY),CORTRY   .     NW
)@@G@@@C@@@@/. DISPLAY RECIEVED MESSAGE ON USER'S TERM*[S@@@*SDFF*@G@@@@. ****NX
)@@G@@***************************************************************** @G@@@@NY
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * NZ
)@@G@@@G@@@@.                                                                 OA
)@@G@@    * @^@@@@       AXR$         .   @C@@@@       CONFIG  .    DEFINE ASSOB
)@@G@@EMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINE WORKSPACE             OC
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACOD
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BOE
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEOF
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           OG
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 OH
)@@G@@                                                    * @G@@@@. END OF STAOI
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****OJ
)@@G@@***************************************************************** @[@@@@OK
)@@G@@.     @[@@@@.     @^@@@@/. CONTINGENCY HANDLER  @ @@@@       INSTRS     OL
)@@G@@       .    @E@@@@COIALL* SZ   CONSII      . CLEAR CONSOLE II INTERRUPT OM
)@@G@@FLAG, @D@@@@       SZ    CONSBR      . CONSOLE BREAK KEY INTERRUPT@D@@@@ON
)@@G@@       SZ    ERRITH      . AND ARITH ERROR FLAG, TOO  @F@@@@       LA   OO
)@@G@@ A0,COMASK   . MASK FOR ALL CONTINGS EXCEPT CONSOLE   @G@@@@       ER   OP
)@@G@@ IALL$       . REGISTER FOR THIS (MAINLINE) ACTIVITY ONLY   @C@@@@      OQ
)@@G@@ LA    A0,CIMASK   . MASK FOR II/BREAK    @F@@@@       ER    IALL$      OR
)@@G@@ . REGISTER AS PROGRAM WIDE CONTINGENCY   @ @@@@       J     0,X11      OS
)@@G@@ .    @ @@@@. DEFINE CONDITION MASK WORD  @B@@@@IOPR   EQU   01         OT
)@@G@@ . ILLEGAL OPCODE @B@@@@IGDM   EQU   02          . GUARD MODE     @C@@@@OU
)@@G@@IFOF   EQU   03          . FLOATING PT OFLO     @C@@@@IFUF   EQU   04   OV
)@@G@@       . FLOATING UNDERFLOW   @B@@@@IDOF   EQU   05          . DIVIDE OFOW
)@@G@@LO    @B@@@@IABT   EQU   07          . ABORT MODE     @E@@@@IINT   EQU  OX
)@@G@@010          . CONSOLE (II-KEYIN OR TTY BREAK)  @B@@@@IERR$  EQU  012   OY
)@@G@@       . 'ERR MODE'     @[@@@@.     @#@@@@BIT*   FUNC .     @^@@@@N     OZ
)@@G@@ EQU   BIT(1)-1 . @ @@@@       END   1*/N        .    @^@@@@MASK   FORM PA
)@@G@@ 12,6,18 .  @E@@@@BITSUM EQU BIT(IOPR)++BIT(IGDM)++BIT(IFOF)++BIT(IDOF)+PB
)@@G@@+;    @A@@@@           BIT(IABT)++BIT(IERR$)  . @#@@@@       CONSTS .   PC
)@@G@@@ @@@@COMASK MASK  BITSUM,1,COPAKT  @G@@@@/. SPECIAL ROUTINE FOR II/BREAPD
)@@G@@K BECAUSE THE INTERRUPTED ACTIVITY IS     @G@@@@. UNPREDICTABLE.  NOTE TPE
)@@G@@HAT THE  ER  II$  CANNOT BE USED BECAUSE NIFTY  @F@@@@. ST PAUL DESIGN DPF
)@@G@@OES NOT DISTINGUISH BETWEEN II AND REMOTE BREAKS@[@@@@.     @G@@@@      PG
)@@G@@ VARCON  . NOTE THAT THIS IS ALL D-BANK SINCE IT MIGHT OCCUR IN   @H@@@@PH
)@@G@@. AN ACTIVITY (SUCH AS THE OPERATOR COM$) WHICH IS NOT LINKED TO AN IBANPI
)@@G@@K     @[@@@@.     @A@@@@CIMASK MASK  BIT(IINT),0,CIPAKT     @^@@@@CIPAKTPJ
)@@G@@ RES   2 . PACKET @ @@@@       DS    A0,CIREGS   .    @F@@@@       LA,S1PK
)@@G@@ A0,CIPAKT   . GET ERR TYPE (1=II,2=REMOTE BREAK)     @D@@@@       EX   PL
)@@G@@ CIFSET,A0   . TURN ON APPROPRIATE FLAG   @E@@@@       LA,H2 A0,CIPAKT  PM
)@@G@@ . GET ADDR OF LAST INSTR EXECUTED  @B@@@@       LA,U  A1,EXEC8    . ANDPN
)@@G@@ EXEC LEVEL @C@@@@       TLE,U A1,24       . BEFORE LEVEL 24?     @G@@@@PO
)@@G@@       ANA,U A0,1        . YES, PKT USED TO CONTAIN REENTRY ADDR, FIX   PP
)@@G@@@E@@@@       LA    A1,0,A0     . GET LAST INSTR BEFORE DIVERSION  @E@@@@PQ
)@@G@@       TE    A1,CIWAIT   . WERE WE JUST HANGING AROUND?     @E@@@@      PR
)@@G@@ LA,U  A0,1,A0     . NO, COMPUTE REAL REENTRY ADDR    @A@@@@       SA   PS
)@@G@@ A0,CIEXIT   . POST IT  @G@@@@. LEVEL 27 DOES NOT DO CEND$ RIGHT IN MULTPT
)@@G@@I-ACTIVITY PROGRAMS, SO....   @D@@@@       LA    A0,CIMASK   . GET OUR OPU
)@@G@@RIGINAL MASK BACK @F@@@@       ER    IALL$       . AND SMASH THE SOB WITPV
)@@G@@H A SLEDGEHAMMER  @G@@@@       DL    A0,CIREGS   . GET REGS; PRAY WE'RE PW
)@@G@@NOT HIT BY AN INTERRUPT @G@@@@       J     *CIEXIT     . AND SNEAK THRU PX
)@@G@@UNIVAC'S WINDOW BACK TO PROG  @B@@@@CIREGS RES   2 . TEMP STORAGE OF A0,PY
)@@G@@A1    @#@@@@CIFSET EQU   $-1 .@ @@@@       SA    A0,CONSII   .    @ @@@@PZ
)@@G@@       SA    A0,CONSBR   .    @ @@@@CIWAIT ER    DACT$       .    @E@@@@QA
)@@G@@CIEXIT +0,$-$  . RETURN LOCN, ******* INDIRECTED THRU ***** @A@@@@CONSIIQB
)@@G@@* +0     . II-PENDING FLAG    @B@@@@CONSBR* +0     . REMOTE BREAK PENDINQC
)@@G@@G FLAG@A@@@@/. TRAP TIME ROUTINES ARE HERE--    @#@@@@       VARCON .   QD
)@@G@@@B@@@@COPAKT RES   2 .         INTERRUPT PACKET @ @@@@       J     CO010QE
)@@G@@0      .    @ @@@@       INSTRS            .    @B@@@@CO0100 DS    A0,COQF
)@@G@@REGS   . TEMP SAVE REGS @F@@@@. NOTE: THIS FOOLING AROUND IS TO PREVENT QG
)@@G@@LOOPS IF THIS RTNE IS   @B@@@@. INTERRUPTED AFTER IT DOES ITS CEND$ .   QH
)@@G@@@C@@@@       LA,H2 A0,COPAKT   . GET INTERRUPT ADDRESS@D@@@@       LA,U QI
)@@G@@ A1,1,A0     . COMPUTE ACTUAL RETURN ADDR @E@@@@       TG,U  A0,CO0100  QJ
)@@G@@ . DOES IT PRECEDE THIS ROUTINE?    @E@@@@       TG,U  A0,CO9999   . NO-QK
)@@G@@ DOES IT FOLLOW THIS ROUTINE? @E@@@@       SA,H2 A1,COEXIT   . YES- IT IQL
)@@G@@S LEGITIMATE-- SAVE IT  @C@@@@       LA,S3 A1,COPAKT   . GET CONTINGENCYQM
)@@G@@ TYPE @F@@@@       COMJMP A1,CO9900 IOPR,CO9500 IGDM,CO9500 IFOF,CO0200 QN
)@@G@@;     @B@@@@             IDOF,CO0200 IERR$,CO1000 .   @^@@@@. ARITHMETICQO
)@@G@@ ERROR--    @B@@@@CO0200 SA,H1 A0,ERRITH   . POST ERROR  LOC@D@@@@      QP
)@@G@@ SA,H2 A1,ERRITH   . DITTO CONTINGENCY TYPE     @A@@@@       J     CO900QQ
)@@G@@0      . AND QUIT @C@@@@/.  SPECIAL TREATMENT FOR 'ERR MODE' ENTRIES--  QR
)@@G@@@[@@@@.     @G@@@@. ERROR TYPES FOR 'ERR MODE' CONTINGENCIES-  ONLY THOSQS
)@@G@@E WHICH COULD     @G@@@@.     VALIDLY OCCUR ARE TABULATED- OTHERS (SUCH QT
)@@G@@AS COMMUNICATIONS OR    @G@@@@.     REP ERRORS) INDICATE A RUN SO FARBLEQU
)@@G@@D THAT THE WHOLE RUN DIES.    @ @@@@IOERR  EQU   1 .  I/0 ERROR   @A@@@@QV
)@@G@@SYMB   EQU   2 .  SYMBIONT ERROR    @ @@@@ERRDOL EQU   3 .  ER ERR$     QW
)@@G@@@G@@@@ER     EQU   4 .  BAD EXEC REQUEST (USUALLY CSF$ SYNTAX IN FILE I/QX
)@@G@@O PKG)@D@@@@CONS   EQU   5 .  CONSOLE CALL ERROR (BAD COM$ PACKET)@[@@@@QY
)@@G@@.     @#@@@@       INSTRS .   @D@@@@CO1000 LA,S1 A0,COPAKT   . GET ERRORQZ
)@@G@@ TYPE FROM PACKET @C@@@@       LA,S2 A1,COPAKT   . GET ERROR CODE, TOO  RA
)@@G@@@F@@@@       COMJMP A0,CO9900 IOERR,CO1100 SYMB,CO2000  ERRDOL,CO9500 ; RB
)@@G@@@C@@@@                         ER,CO3000 CONS,CO9500 .@[@@@@.     @#@@@@RC
)@@G@@. I/0 ERRORS-     @[@@@@.     @G@@@@. NOTE: AS OF THIS WRITING (24 JAN 7RD
)@@G@@1) NOBODY LOOKS AT THE I/O ERROR    @G@@@@.     FLAG LOCN.  THE ROUTINESRE
)@@G@@ WHICH DO I/O LOOK DIRECTLY AT THEIR OWN  @G@@@@.     PACKETS INSTEAD. TRF
)@@G@@HIS IS HERE IN CASE WE NEED IT IN THE FUTURE    @[@@@@.     @F@@@@CO1100RG
)@@G@@ SA,H1 A1,IOERRF   . PUT ERROR CODE INTO I/O ERROFLAG WORD  @G@@@@      RH
)@@G@@ LA,H2 A0,COPAKT+1 . ADDR OF I/O PACKET FROM CONTINGENCY PACKET   @E@@@@RI
)@@G@@       SA,H2 A0,IOERRF   . PUT IT INTO THE FLAG WORD, TOO   @F@@@@      RJ
)@@G@@ J     CO9000      . TAKE NORMAL EXIT (RESUME USER PROG)    @[@@@@.     RK
)@@G@@@#@@@@. SYMBIONT ERRORS @[@@@@.     @E@@@@CO2000 JG,U  A1,010 CO9600    RL
)@@G@@. IF ERROR IN READ$, GO BOUNCE@G@@@@       JG,U  A1,030 CO9900 . IF ALT RM
)@@G@@FILE ERROR, PANIC (WE DON'T USE ANY)@E@@@@       JNE,U A1,041 CO9600  . RN
)@@G@@IF NOT MAX PAGES, BOUNCE HIM  @F@@@@. MAX PAGES MAY HAVE BEEN CAUSED BY RO
)@@G@@A BRKPT'D DUMP- CHECK IT OUT  @A@@@@       TZ    RCDMND  . DEMAND RUN?  RP
)@@G@@@F@@@@       TNZ,H2 SNAPKT+1  . YES, HAS A SYSERR CAUSED SNAP DUMPING?  RQ
)@@G@@@E@@@@       J     CO9600  . IF NOT DEMAND OR NO DUMP, BOUNCE HIM @D@@@@RR
)@@G@@       LA,U  A1,EXEC8  . GET LEVEL WE'RE RUNNING UNDER@D@@@@       TLE,URS
)@@G@@ A1,27        . IS IT AT LEAST LEVEL 27?  @E@@@@       J     CO9600     RT
)@@G@@  . NO-WE DIDN'T BRKPT, SO FORGET IT@C@@@@       SZ,H2 SNAPKT+1     . YERU
)@@G@@S, CLEAR DUMP FLAG@F@@@@       J     CO9000       . AND IGNORE MAX PGS CRV
)@@G@@AUSED BY SYSERRS  @[@@@@.     @^@@@@. EXEC REQUEST ERRORS   @[@@@@.     RW
)@@G@@@F@@@@CO3000 JE,U  A1,07 CO9600  . IF MAX TIME, GIVE USER A )BOUNCE     RX
)@@G@@@G@@@@. SYN TAX ERRORS IN CSF$ MAY ARISE IN THE FILE I/O PACKAGE, AS WE RY
)@@G@@EXPECT@G@@@@. THE USER TO GIVE US A SYNTACTICALLY VALID FILE NAME AND RERZ
)@@G@@LY ON CSI   @ @@@@. TO SYNTAX CHECK IT FOR US   @G@@@@       LA    A0,ERSA
)@@G@@RCSF   . GET FLAG WHICH ALLOWS SYNTAX ERRS IN CSF$    @C@@@@       SZ   SB
)@@G@@ ERRCSF      . AND BE SURE ITS CLEAR@E@[@@       TNE,U A1,040      . WASSC
)@@G@@ THIS SYNTAX ERR IN CSF$?     @F@@[[        JNE,U  A1,040 CO3100  . IF NSD
)@@G@@OT CSF$ ERROR, GO CHECK MCORE$@E[@@@       JNZ   A0,CO9000   . YES, IF ASE
)@@G@@LLOWED, RETURN TO USER  @B@@@@       J     CO9500      . IF NOT, SYSERR SF
)@@G@@@E@@[[CO3100  JNE,U  A1,055 CO9500  . IF NOT MCORE$ FAILURE, DIE  @F@@[[SG
)@@G@@        SA     A1,ERRCOR      . ELSE RAISE MCORE$ FAILURE FLAG    @E@@[[SH
)@@G@@                              . AND FALL THRU TO NORMAL EXIT@A@@@@/.  EXSI
)@@G@@ITS-- NORMAL AND OTHERWISE    @^@@@@. NOW RESUME USER'S PROG@ @@@@CO9000SJ
)@@G@@ DL    A0,COREGS   .    @C@@@@       ER    CEND$       . LEAVE CONTING MSK
)@@G@@ODE   @B@@@@       J     *COEXIT     . AND RETURN     @E@@@@. ERRORS WHISL
)@@G@@CH CAN BE BYPASSED BY 'SYSERR' AND REGISTER DUMP@E@@@@.                 SM
)@@G@@  NOTE: IGDM AND IOPR COME HERE DIRECTLY  @D@@@@CO9500 LA    A0,COPAKT  SN
)@@G@@ . GET CONTINGENCY PACKET     @D@@@@       SA    A0,A15+2    . STASH FORSO
)@@G@@ DUMP DISPLAY     @E@@@@       LA    A0,ERRCNT   . CURRENT CT OF ERRORS SP
)@@G@@OF THIS TYPE@E@@@@       JNGD  A0,CO9900   . DECREMENT, IF TOO MANY, PANSQ
)@@G@@IC    @D@@@@       SA    A0,ERRCNT   . OTHERWISE, SAVE NEW COUNT  @ @@@@SR
)@@G@@       DL    A0,COREGS   .    @ @@@@       ER    CEND$       .    @G@@@@SS
)@@G@@       ERROR YSYSTM,CO9900   . SYSERR SHOULD GO TO )CLEAR, NOT RETURN   ST
)@@G@@@[@@@@.     @E@@@@.     ERRORS WHICH CAN AT LEAST BE )BOUNCED BEFORE SIGSU
)@@G@@NOFF  @C@@@@.     (E.G. OVERTIME, MAX CARDS/PAGES, ETC.)    @F@@@@CO9600SV
)@@G@@ LXI,U X11,SYSREP  . BE SURE SYSTEM COMMAND I-BANK IS LOADED@B@@@@      SW
)@@G@@ LIJ   X11,BOUNCE  . AND GO BYE-BYE @F@[@@.     GENUINELY UNRECOVERABLE SX
)@@G@@ERRORS COME HERE AND KILL THE RUN   @G@[@@.     NOTICE THAT ACCOUNT FILESY
)@@G@@ IS NOT CLOSED IF WE GET OUT THRU HERE,   @C@[@@.     SO IT HAD BETTER BSZ
)@@G@@E A COMPLETE CATASTROPHE@G@[@@CATASTROPHE* DS A0,COREGS . IF ANYBODY ELSTA
)@@G@@E WANTS TO DIE-- COME HERE    @F@[@@CO9900 LA,U  A0,0    . RESET CONTINGTB
)@@G@@ENCIES TO STANDARD EXEC ACTION@^@[@@       ER    IALL$  .   @F@[@@      TC
)@@G@@ LA    A0,(+1,0)   . BE SURE TO CLEAR THIS ACTIVITY, TOO    @ @[@@      TD
)@@G@@ ER    IALL$       .    @ @[@@       DL    A0,COREGS   .    @A@[@@      TE
)@@G@@ ER    ERR$   . AND DIE--     @A@@[[CO9900  LXI,U  X11,SYSREP     .     TF
)@@G@@@A@@[[        LIJ    X11,ERROFF     .     @BE@@@CO9999 . MARK END OF PGMTG
)@@G@@ TO PREVENT LOOPS @#@@@@       VARBLS .   @#@@@@COREGS RES   2 .  @[@@@@TH
)@@G@@.     @F@@@@. THE FOLLOWING LOCATIONS ARE SET NON-ZERO BY THE OCCURENCE TI
)@@G@@OF A  @F@@@@. CONTINGENCY, AND CLEARED WHEN THE REQUIRED ACTION HAS BEENTJ
)@@G@@ TAKEN@#@@@@       VARCON .   @G@@@@ERRITH* +0   . ARITHMETIC ERROR (OFLTK
)@@G@@O,UFLO,DIVCHK, OR LIBRARY ERROR)    @G@@@@NCDOF$* EQU  ERRITH      . MATTL
)@@G@@H ROUTINES LIKE FORTRAN'S NAME FOR THIS   @^@@@@IOERRF* +0   . I/O ERRORTM
)@@G@@@D@@@@ERRCSF* +0   . ALLOW FLAG FOR SYNTAX ERRORS IN CSF$   @E@@[[ERRCORTN
)@@G@@* +      0              . FLAG SET ON MORECORE FAILURE@[@@@@ .    @G@@@@TO
)@@G@@. THE FOLLOWING LOCN IS USED TO SET A MAX ON THE NO OF SYSERRS ALLOWED  TP
)@@G@@@G@@@@. BEFORE APL WIPES OUT.  THIS IS TO PREVENT LOOPS IN THE CONTINGENTQ
)@@G@@CY    @E@@@@. ROUTINE.  MXCNTG IS DEFINED IN THE ELEMENT CONFIG/APL     TR
)@@G@@@[@@@@.     @#@@@@ERRCNT +MXCNTG .  @F@@@@COEXIT +0,$-$  . EXIT ADDRESS TS
)@@G@@STORED HERE, AND INDIRECTED THROUGH @]@@@@       END .___ND FALL THRU TOTT
)@@G@@ NORMAL EXIT@A@@@@/.  EXITS-- NORMAL AND OTHERWISE    @^@@@@. NOW RESUMETU
)@@G@@ USER'S PROG@ @@@@CO9000 DL    A0,COREGS   .    *[S@@@*SDFF*@G@@@@. ****TV
)@@G@@***************************************************************** @G@@@@TW
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * TX
)@@G@@@G@@@@.                                                                 TY
)@@G@@    * @G@@@@       AXR$         .                                       TZ
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        UA
)@@G@@                * @G@@@@       WSDEF.      DEFINE WORKSPACE             UB
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACUC
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BUD
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEUE
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           UF
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 UG
)@@G@@                                                    * @G@@@@. END OF STAUH
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****UI
)@@G@@***************************************************************** @[@@@@UJ
)@@G@@.     @#@@@@       STATEV  .  @E@@@@ZTPGRP EQU   077         . GROUPS HAUK
)@@G@@VE NOT YET BEEN DEFINED @[@[@@.     @C@[@@. PROCS TO SET BASEREG TO COPYUL
)@@G@@ OR ACTIVE WS     @[@[@@.     @D@[@@B      PROC         . SET BASEREG FOUM
)@@G@@R COPY/ACTIVE WS  @^@[@@BASCPY* NAME  0     .   @^@[@@BASACT* NAME  1   UN
)@@G@@  .   @D@[@@       LX    WSTAG,RCCFWA+B(0,0)*(RCAFWA-RCCFWA)  .   @^@[@@UO
)@@G@@       END          .   @ @[@@R      PROC  *1          .    @ @[@@ABSCPYUP
)@@G@@* NAME 0           .    @ @[@@ABSACT* NAME 1           .    @D@[@@      UQ
)@@G@@ A     R(1,1),RCCFWA+R(0,0)*(RCAFWA-RCCFWA)  .  @#@[@@       END   .    UR
)@@G@@@ @[@@R      PROC  *1          .    @ @[@@RELCPY* NAME 0           .    US
)@@G@@@ @[@@RELACT* NAME 1           .    @D@[@@       AN    R(1,1),RCCFWA+R(0UT
)@@G@@,0)*(RCAFWA-RCCFWA)  .  @#@[@@       END   .    @[@[@@.     @EN@@@/. DRIUU
)@@G@@VER TO COPY AN ENTIRE WS BY SCANNING ITS SYMBOL TABLE @[@@@@.     @ @@@@UV
)@@G@@       INSTRS            .    @ @@@@CPYALL* SX   X11,CALINK  .    @ @@@@UW
)@@G@@       BASCPY            .    @D@@@@. PREPARE SEQUENTIAL SEARCH OF NETIRUX
)@@G@@E SYMBOL TABLE    @E@@@@       LA,U  A0,ZTPNAM   . FLAG VALUE FOR PRIMARUY
)@@G@@Y BLOCKS    @F@@@@       LX,U  A1,WSYTBL-3 . SET START ADDR TO BEGINNINGUZ
)@@G@@ OF TABLE   @E@@@@       LXI,U A1,3        . TABLE ENTRIES ARE 3 WORDS LVA
)@@G@@ONG   @D@@@@       LR    R1,WSYMAX   . NO ENTRIES IN SYMBOL TABLE @D@@@@VB
)@@G@@CA0100 SE,S1 A0,3,*A1    . FIND NEXT PRIMARY ENTRY    @F@@@@       J    VC
)@@G@@ CA0200      . NORMAL EXIT AT COMPLETION OF SEARCH    @E@@@@       DS   VD
)@@G@@ A0,CASRCH   . TEMP SAVE CURRENT SEARCH PARAMS  @ @@@@       SR    R1,CAVE
)@@G@@SRCH+2 .    @C@@@@       LA,U  A1,0,A1     . GET RID OF INCREMENT @D@@@@VF
)@@G@@       RELCPY A1         . ADJUST ADDR OF FOUND NAME  @A@@@@       LMJ  VG
)@@G@@ X11,CPYNAM  . COPY IT  @B@@@@       J     CA0999      . OOPS, ERROR    VH
)@@G@@@D@@@@CA0120 BASCPY            . RESET BASE ADDR TO COPY WS @D@@@@      VI
)@@G@@ DL    A0,CASRCH   . RESTORE SEARCH PARAMETERS  @ @@@@       LR    R1,CAVJ
)@@G@@SRCH+2 .    @C@@@@       J     CA0100      . AND KEEP LOOKING     @D@@@@VK
)@@G@@. NORMAL EXIT AFTER SCANNING TH E ENTIRE SYMBOL TABLE @D@@@@CA0200 BASACVL
)@@G@@T            . SET BASEREG TO ACTIVE WS   @ @@@@       LX,H2 X11,CALINK VM
)@@G@@ .    @ @@@@       J     1,X11       .    @]@@@@. ERROR EXIT@ @@@@CA0999VN
)@@G@@ BASACT            .    @ @@@@       LX,H2 X11,CALINK  .    @ @@@@      VO
)@@G@@ J     0,X11       .    @ @@@@       VARBLS            .    @ @@@@CALINKVP
)@@G@@ RES   1           .    @ @@@@CASRCH RES   3           .    @G@@@@/. COPVQ
)@@G@@Y SINGLE ITEM WHOSE NAME HAS BEEN SCANNED (BUT NOT TABULATED)     @#@@@@VR
)@@G@@       INSTRS .   @ @@@@CPYONE* SX   X11,COLINK  .    @#@@@@       BASCPVS
)@@G@@Y  .  @F@@@@       LMJ   X11,SYMBOL  . FIND NAME IN COPY WS (COMES BACK VT
)@@G@@IN A1)@ @@@@       J     CO0900      .    @C@@[[       ABSADR A1        VU
)@@G@@ . GET ABSOLUTE ADDR    @C@@[[       TZ,H2 1,A1        . IS THERE A VALUVV
)@@G@@E?    @ @@[[       J     CO0700      . YES@E@@[[       LA,U  A0,ZTPNFD  VW
)@@G@@ . BLOC TYPE FOR NOT FOUND OBJECTS  @C@@[[       SA,S1 A0,0,A1     . STOVX
)@@G@@RE BLOCK TYPE     @D@@[[       LN,U A1,1         . SIGNAL OBJECT NOT FOUVY
)@@G@@ND    @A@@[[       J     CO0800      . EXIT     @D@@[[CO0700 RELCPY A1  VZ
)@@G@@       . MAKE ADDR REL TO COPY WS   @ @@@@       LMJ   X11,CPYNAM  .    WA
)@@G@@@ @@@@       J     CO0900      .    @ @[@@       LX,H2 X11,COLINK  .    WB
)@@G@@@ @@][CO0800 LX,H2 X11,COLINK  .    @ [@@@       J     1,X11       .    WC
)@@G@@@ @@@@CO0900 LX,H2 X11,COLINK  .    @ @@@@       J     0,X11       .    WD
)@@G@@@#@@@@       VARBLS .   @#@@@@COLINK RES   1 .  @D@@@@/.    COPY NAMED EWE
)@@G@@NTITY FROM COPY WS TO ACTIVE WS     @D@@@@.     ENTER WITH A1=ADDR (IN CWF
)@@G@@OPY WS) OF NAMED OBJECT @G@[@@.     EXIT WITH A1=ADDR (IN ACTIVE WS) OF WG
)@@G@@THE COPY, OR -1 IF NOT COPIED @[@@[[.     @[@@[[.     @G@@[[.        PROWH
)@@G@@C TO CHAIN FROM THE PRIMARY NAME BLOCK ENTRY TO THE LAST    @F@@[[.  DESWI
)@@G@@CRIPTOR AND TEST IF LAST ENTRY IS LOCAL OR GLOBAL IT TAKES  @D@@[[.  ALTWJ
)@@G@@ERNATE EXIT IF LINK FROM NAME BLOCK IS ZERO.    @[@@[[.     @C@@[[.     WK
)@@G@@   ENTRY- A1= ABSADR OF PRIMARY NAME BLOCK@D@@[[.        EXIT- A1= ABSADWL
)@@G@@R OF LAST DESCRIPTOR FOUND    @#@@[[.        CALLED:  @[@@[[.     @A@@[[WM
)@@G@@.      CHAIN  ADDR1,ADDR2,ADDR3     @[@@[[.     @#@@[[.        WHERE:   WN
)@@G@@@G@@[[.       ADDR1=EXIT IF PRIM NAME BLOC HAS NO FORWARD LINK TO FIRST WO
)@@G@@DESCR @C@@[[.       ADDR2= EXIT IF LAST DESCR IS GLOBAL     @B@@[[.     WP
)@@G@@  ADDR3= EXIT IF LAST DESCR IS LOCAL@[@@[[.     @[@@[[.     @ @@[[M     WQ
)@@G@@  PROC             .    @]@@[[CHAIN*  NAME@ @@[[       ANA,U A1,1       WR
)@@G@@ .    @ @@[[       UNLIST            .    @F@@[[       TNZ,H2 2,A1      WS
)@@G@@ . IS THERE A LINK FROM PRIM NAME BLOCK?  @E@@[[       J     M(1,1)     WT
)@@G@@ . NO LINK FROM PRIM NAMEBLOC,  EXIT@C@@[[LLL    SA    A1,A2       . SAVWU
)@@G@@E PREVIOUS LINK   @C@@[[       LA,H2 A1,2,A1     . GET LINK FROM DESCR  WV
)@@G@@@C@@[[       ABSADR A1         . MAKE IT ABSOLUTE     @F@@[[       TZ,H2WW
)@@G@@ 2,A1        . IS THERE A FORWARD LINK TO NEXT DESCR? @F@@[[       J    WX
)@@G@@ LLL         . THERE IS A FORWARD LINK SO GO GET IT   @F@@[[       TNZ,HWY
)@@G@@1 2,A1       . NO MORE FORWARD LINKS,  TEST IF GLOBAL @C@@[[       J    WZ
)@@G@@ M(1,2)      . YES - GLOBAL  ,EXIT  @B@@[[       J     M(1,3)      . NO XA
)@@G@@- LOCAL     @ @@[[       LIST              .    @ @@[[       END        XB
)@@G@@       .    @[@@[[.     @[[@@@.     @^@@@@       INSTRS       .   @ @@@@XC
)@@G@@CPYNAM* SX   X11,CNLINK  .    @F@@@@       SA    A1,CNFNAM   . SAVE RELAXD
)@@G@@DR IN COPY WS OF 'FROM' THING @E@@[[       SZ    CNRLNK      . INITIALIZXE
)@@G@@E FLAG FOR RELINK TEST  @B@@@@. BE SURE OBJECT TO BE COPIED IS GLOBAL   XF
)@@G@@@ @@@@CN0010 BASCPY            .    @C@@@@       ABSADR A1         . POIXG
)@@G@@NTER TO NAMEBLOK  @C@[@@       LA,H2 A1,1,A1     . LINK FROM NAMEBLOK   XH
)@@G@@@G@[@@       JZ    A1,CN0410   . IF NO LINK (I.E. LOCAL NAME ) GO AWAY QXI
)@@G@@UIETLY@B@[@@       ABSADR A1         . ADDR OF DESCR  @B@[@@       TZ,H1XJ
)@@G@@ 2,A1        . IS IT GLOBAL?  @B@[@@       J     CN0890      . NO, FORGEXK
)@@G@@T IT  @D@[@@. LOCATE NAME IN ACTIVE WS AND BE SURE IT'S GLOBAL    @F@@[[XL
)@@G@@       SA    A1,CNFNAA   . SAVE ABSOLUTE ADDR OF PRIM NAME BLOCK  @E@@[[XM
)@@G@@       CHAIN CN0410,CN0015,CN0410 . CHAIN THROUGH DESCRS    @H@@[[. GLOBXN
)@@G@@AL OBJECT EXISTS IN COPY WS -SO CHAIN IT DIRECTLY TO PRIM NAME BLOC     XO
)@@G@@@F@@[[CN0015 RELCPY A1         . MAKE ADDR OF GLOBAL DESCR REL TO CPY WSXP
)@@G@@@E@@[[       LA    A0,CNFNAA  . GET ABSADR OF PRIM NAME BLOCK     @H@@[[XQ
)@@G@@       SA,H2 A1,1,A0     . STORE GLOBAL DESCRIPTOR ADDR IN PRIM NAME BLOXR
)@@G@@CK    @ @@[[. LOCATE NAME IN ACTIVE WS    @BA@@@CN0020 LA,U  A0,WSID    XS
)@@G@@ . BASE OF COPY WS@C@@@@       LA    A1,CNFNAM   . POINTER TO NAMEBLOK  XT
)@@G@@@ @@@@       BASACT            .    @D@@@@       LMJ   X11,SYCOPY  . TABXU
)@@G@@ULATE NAME IN ACTIVE WS @ @@@@       J     CN0999      .    @E@@@@      XV
)@@G@@ SA    A1,CNTNAM   . SAVE POINTER TO NAME IN ACTIVE WS@ @@@@       ABSADXW
)@@G@@R A1         .    @E@@[[       SA    A1,CNTNAA   . STORE ABS ADDR OF NAMXX
)@@G@@E BLOCK     @E@[@@       LA,H2 A1,1,A1     . GET DESCR POINTER FROM NAMEXY
)@@G@@BLOK  @C@[@@       JZ    A1,CN0050   . IF NONE' WERE OK     @C@[@@      XZ
)@@G@@ TZ    COPROF      .  IS THIS A )PCOPY?   @C@[@@       J     CN0800     YA
)@@G@@ . YES, SAY 'NOT COPIED'@ @[@@       ABSADR A1         .    @E@[@@      YB
)@@G@@ TZ,H1 2,A1        . LOOK AT LEVEL- IS DESCR GLOBAL?  @C@[@@       J    YC
)@@G@@ CN0800      . NO-- SAY 'NOT COPIED'@E@@[[       CHAIN CN0060,CN0026,CN0YD
)@@G@@023  . CHAIN THROUGH DESCRS   @H@@[[. LAST OBJECT IS LOCAL - IN ACT. WS,YE
)@@G@@ SO WE MUST ADD COPIED OBJ TO IT'S END    @G@@[[. SO... REMOVE CHAIN OF YF
)@@G@@LOCALS SO WE CAN FAKE A GLOBAL TO GLOBAL COPY   @E@@[[CN0023 LA    A0,CNYG
)@@G@@TNAA   . GET POINTER TO PRIM NAME BLOCK   @F@@[[       LA,H2 A2,1,A0    YH
)@@G@@ . GET POINTER FROM NAMEBLOC TO 1ST DESCR @E@@[[       SA    A2,CN1DSC  YI
)@@G@@ . SAVE POINTER TO 1ST DESCRIPTOR   @E@@[[       SA    A1,CN2DSC   . SAVYJ
)@@G@@E POINTER TO LAST DESCRIPTOR  @D@@[[       SZ,H2 1,A0        . MAKE FORWYK
)@@G@@ARD LINK ZERO     @E@@[[       SX    X11,CNRLNK  . SET RELINK NEEDED ON YL
)@@G@@EXIT FLAG   @ @@[[       J     CN0060      .    @A@@[[. LAST DESCR IS GLYM
)@@G@@OBAL IN ACTIVE WS @C@@[[CN0026 TZ    COPROF      . IS THIS A )PCOPY?    YN
)@@G@@@C@@[[       J     CN0800      . YES - SAY NOT COPIED @E@@[[       LA   YO
)@@G@@ A0,CNTNAA   . GET POINTER TO PRIMARY NAME BLOCK@F@@[[       LA,H2 A0,1,YP
)@@G@@A0     . GET POINTER FROM NAMEBLOC TO 1ST DESCR @D@@[[       RELACT A1  YQ
)@@G@@       . MAKE THIS A RELITIVE ADDR  @G@@[[       TNE   A0,A1       . DOEYR
)@@G@@S LAST DESC FOUND = 1ST DESC FROM NAMBLOC @C@@[[       J     CN0030     YS
)@@G@@ . NO FARBLE NECESSARY  @F@@[[. REMOVE CHAIN OF LOCALS SO WE CAN FAKE A YT
)@@G@@GLOBAL TO GLOBAL COPY   @E@@[[       SA    A2,CN2DSC   . SAVE NEXT TO LAYU
)@@G@@ST DESCR ADDR     @D@@[[       SA    A0,CN1DSC   . SAVE LINK TO FIRST DEYV
)@@G@@SCR   @D@@[[       LA    A0,CNTNAA   . GET ABS ADDR OF NAMEBLOC   @G@@[[YW
)@@G@@       SA,H2 A1,1,A0     . STORE POINTER  TO GLOBAL IN PRIM NAME BLOC   YX
)@@G@@@E@@[[       SX    X11,CNRLNK  . SET RELINK NEEDED ON EXIT FLAG   @A@[@@YY
)@@G@@CN0030 LA,S1 A0,0,A1     . GET TYPE @G@@[[CN0030 ABSADR A1         . MAKYZ
)@@G@@E ADDR OF DESCR ABSOLUTE FOR NEXT TEST    @A@@[[       LA,S1 A0,0,A1    ZA
)@@G@@ . GET TYPE @DC@@@       JNE,U A0,ZTPFUN CN0050 . IF NOT FUNC, WE'RE OK ZB
)@@G@@@G@@@@. OBJECT IN ACTIVE WS IS A FUNC--BE SURE RE-OPENING IT WON'T CAUSEZC
)@@G@@ SI DM@#@@@@CN0040 BASACT  .  @F@@@@       LA,U  A5,STFUNX   . STATEVECTZD
)@@G@@OR BLOCK TYPE FOR COMPARISON  @ @@@@       LA    A4,CNTNAM   .    @D@@@@ZE
)@@G@@       LA,U  A0,WSTATE   . ADDR OF CURRENT STATEVECT  @D@@@@CN0045 LA,H2ZF
)@@G@@ A0,0,A0     . POINTER TO NEXT STATEVECT  @C@@@@       JZ    A0,CN0050  ZG
)@@G@@ . IF NONE, WE'RE DONE  @ @@@@       ABSADR A0         .    @F@@@@      ZH
)@@G@@ JNE,Q1 A5,0,A0 CN0045 . IF NOT FUNC STATE, KEEP SEARCHING  @E@@@@      ZI
)@@G@@ JNE,H1 A4,3,A0 CN0045 . IF NOT THIS FUNC, KEEP GOING @G@@@@       J    ZJ
)@@G@@ CN0800      . BUT DON'T COPY IF THIS FUNC IS IN STATEVECT  @F@@@@. NAMEZK
)@@G@@ GLOBAL IN BOTH WS'S-- ERASE OLD VAL, THEN SET UP TO COPY   @B@@@@CN0050ZL
)@@G@@ LA    A6,CNTNAM   . ADDR IN 'TO' WS@B@@@@       LMJ   X11,ERASEV  . GETZM
)@@G@@ RID OF IT  @ @@@@       J     CN0999      .    @B@[@@       BASCPY     ZN
)@@G@@       . BASE OF COPY WS@B@@][CN0060 BASCPY            . BASE OF COPY WSZO
)@@G@@@E[@@@       LA    A6,CNFNAM   . ADDR IN 'FROM' WS OF NAMEBLOK    @G@@@@ZP
)@@G@@       VERIFW CN0900,CN0800   . DECODE- IF NO VALUE, TAKE NOT COPIED XFTZQ
)@@G@@@G@@@@       COMJMP  A2,CN0900 ZTPVAR,CN0100  ZTPFUN,CN0200 ZTPGRP,CN030ZR
)@@G@@0     @C@@@@. SET UP DUMMY DESCR TO COPY NAMED VARIABLE     @E@@@@CN0100ZS
)@@G@@ RELACT A0         . MAKE DATA ADDR REL TO ACTIVE WS  @C@@@@       SA,H2ZT
)@@G@@ A0,CNDATA+1 . PUT IN DUMMY DESCR   @E@@@@       RELACT A1         . LIKZU
)@@G@@EWISE FOR DIM DATA (IF ANY)   @ @@@@       SA,H2 A1,CNDIMV+1 .    @A@@@@ZV
)@@G@@       SA,S2 A3,CNDATA   . SET MODE @A@@@@       SA,S3 A4,CNDATA   . ANDZW
)@@G@@ RANK @E@@@@       SA,H2 A4,CNDIMV   . (WHICH IS ALSO DIMVECTOR LENGTH) ZX
)@@G@@@F@@@@       LA,U  A1,CNDIMV   . ABS ADDR OF DUMMY DIMVECT DESCRIPTOR   ZY
)@@G@@@C@@@@       RELACT A1         . RELATIVE TO ACTIVE WS@F@@@@       SA,H1ZZ
)@@G@@ A1,CNDATA+1 . TO DIMV POINTER FIELD OF DUMMY DESCR   @F@@@@       JNE,UAA
)@@G@@ A4,ZRANKS CN0110 . IF NON-SCALAR, GO POST DATA LENGTH@G@@@@       LA   AB
)@@G@@ A5,A0       . IN CASE DFLOAT SCALAR, SET REL DATA ADDR     @G@@@@      AC
)@@G@@ JNE,U A3,ZMOHFI CN0110 . IF CHAR OR DFL, PUT DATA ADDR IN DESCR  @E@@@@AD
)@@G@@       ABSACT A0         . NOT DFLOAT- RECOVER ABS DATA ADDR@E@@@@      AE
)@@G@@ LA,H2 A5,0,A0     . AND GET DATA VALUE IMMEDIATELY   @G@@@@CN0110 SA,H2AF
)@@G@@ A5,CNDATA   . POST DATAVAL/ADDR/LENGTH  IN DUMMY DESCR     @D@@@@      AG
)@@G@@ BASACT            . RESET BASE TO ACTIVE WS    @C@@@@       LA,U  A6,CNAH
)@@G@@DATA   . ADDR OF DUMMY DESCR  @ @@@@       RELADR A6         .    @F@@@@AI
)@@G@@       LMJ   X11,DUPE    . FORCE INTO A TEMPORARY IN THE ACTIVE WS@^@@@@AJ
)@@G@@       J     CN0999 .   @D@@@@       PUSH  A2          . STACK THE COPIEAK
)@@G@@D TEMPORARY @B@@@@       LA    A6,CNTNAM   . NAME BLOCK ADDR@D@@@@      AL
)@@G@@ PUSH  A6          . STACK AS LEFTARG OF STORE  @G@@@@       LMJ   X11,SAM
)@@G@@TOREC  . USE SPECIAL STORE ENTRY WHICH PRESERVES LEVEL@G@@@@       J    AN
)@@G@@ CN0999      . OOPS, WSFULL.  CLEANUP AND SIGNAL NOT CPY'D  @C@@@@      AO
)@@G@@ J     CN0400      . TAKE NORMAL EXIT     @ @@@@. PREPARE TO COPY A FUNCAP
)@@G@@TION  @D@@@@CN0200 LA    A0,A6       . GET RELADDR OF FUNC DESCR  @E@@@@AQ
)@@G@@       ABSCPY A0         . MAKE ABSOLUTE W/R/T/ COPY WS     @A@@@@      AR
)@@G@@ DL    A1,0,A0     . GET DESCR@E@@@@       DS    A1,FUDUMY   . POST IN DAS
)@@G@@UMMY LOCN USED BY FUNDEF@E@@@@       BASACT            . BE SURE ACTIVE AT
)@@G@@WS IS USED AS BASE@E@@@@       LA    A1,CNTNAM   . ADDR (IN ACTIVE WS) OAU
)@@G@@F NAMEBLOK  @G@@@@       SA    A1,STVFNN   . PUT IN STATEVECT FOR USE BYAV
)@@G@@ FUNC ROUTINES    @C@@@@       LA    A1,RCCFWA   . ABS ADDR OF COPY WS  AW
)@@G@@@C@@[[       SZ    FUPEND      . CLEAR PEND FUNC FLAG @D@[@@       SZ   AX
)@@G@@ FUPEND      . TEMP KLUDGE *************  @C[@@@       LMJ   X11,FLOPEN AY
)@@G@@ . OPEN THE FUNCTABLE   @ @@@@       J     CN0800      .    @E@@@@      AZ
)@@G@@ LMJ   X11,FCLOSE  . CLOSE THE TABLE IN ACTIVE WS     @ @@@@       J    BA
)@@G@@ CN0800      .    @B@@@@       J     CN0400      . GO GET OUT     @A@@@@BB
)@@G@@. PREPARE TO COPY A GROUP--   .     @A@@@@CN0300 ERROR YUNIMP,CN0999    BC
)@@G@@.     @#@@@@. NORMAL EXIT     @E@[@@CN0400 BASACT            . BE SURE BBD
)@@G@@ASE ADDR IS PROPERLY SET@F@@[[CN0400 LMJ   X11,CEBULD  . ROUTINE TO RECHBE
)@@G@@AIN LOCALS IF NECESSARY @ @@[[       BASACT            .    @C[@@@      BF
)@@G@@ LA    A0,CNTNAM   . ADDR OF NAMEBLOK     @G@@@@       LMJ   X11,SYMERS BG
)@@G@@ . ERASE REF CAUSED BY SCAN OF COMMAND LINE     @B@@@@CN0410 LA,U  A1,0 BH
)@@G@@       . SIGNAL COPIED  @A@[@@       LX,H2 X11,CNLINK       .     @A@@][BI
)@@G@@       LX    X11,CNLINK       .     @B[@@@       J     1,X11       . NORBJ
)@@G@@MAL EXIT    @[@@@@.     @E@@@@. EXITS FOR NOT COPIED, WITH VARIOUS AND SBK
)@@G@@UNDRY CLEANUPS    @[@@@@.     @ @@@@CN0800 BASACT            .    @G@@@@BL
)@@G@@       LA    A0,CNTNAM   . NAME ALREADY TABULATED IN ACTIVE WS- GET IT  BM
)@@G@@@C@@@@       LMJ   X11,SYMERS  . AND GET RID OF REF CT@A@@@@. NOW TAKE 'BN
)@@G@@NOT COPIED' NORMAL EXIT @D@@@@CN0890 LA    A3,CNFNAM   . RELADR OF NAME BO
)@@G@@IN COPY WS  @C@@@@       LA    A4,RCCFWA   . BASE ADDR OF COPY WS @C@@@@BP
)@@G@@       LMJ   X11,NLNAME  . SIGNAL 'NOT COPIED'  @ @@@@       J     CN099BQ
)@@G@@9      .    @E@@@@       BASACT            . BE SURE BASE IS SET TO ACTIBR
)@@G@@VE WS @F@@[[       LMJ   X11,CEBULD  . ROUTINE TO RECHAIN LOCALS IF NECEBS
)@@G@@SSARY @B@@@@       LA,U  A1,1        . FLAG NOT COPIED@ @[@@       LX,H2BT
)@@G@@ X11,CNLINK  .    @ @@][       LX    X11,CNLINK  .    @ [@@@       J    BU
)@@G@@ 1,X11       .    @[@@@@.     @ @[@@CN0900 BASACT            .    @A@[@@BV
)@@G@@       ERROR YSYSTM,CN0999    .     @A@@[[CN0900 EQU   0           . SYSBW
)@@G@@ERR   @[]@@@.     @F@@@@CN0999 BASACT                 . BE SURE WSORG BABX
)@@G@@SEREG IS CORRECT  @F@@[[       LMJ   X11,CEBULD  . ROUTINE TO RECHAIN LOBY
)@@G@@CALS IF NECESSARY @A@[@@       LX,H2 X11,CNLINK       .     @A@@][      BZ
)@@G@@ LX    X11,CNLINK       .     @A[@@@       J     0,X11            .     CA
)@@G@@@[@@@@.     @[@@[[.     @[@@[[.     @[@@[[.     @F@@[[. SUBROUTINE TO TECB
)@@G@@ST IF DESCRS NEED TO BE RECHAINED AND IF SO     @^@@[[. DOES THE RECHAINCC
)@@G@@ING   @[@@[[.     @D@@[[CEBULD TNZ   CNRLNK      . IS RECHAINING NECESSACD
)@@G@@RY?   @B@@[[       J     0,X11       . NO - RETURN    @E@@[[       LA   CE
)@@G@@ A0,CNTNAA   . GET ABSADR OF PRIMARY NAME BLOCK @C@@[[       LA,H2 A1,1,CF
)@@G@@A0     . GET LINK TO GLOBAL   @D@@[[       LA    A2,CN2DSC   . GET OLD NCG
)@@G@@EXT TO LAST LINK  @E@@[[       SA,H2 A1,2,A2     . LINK GLOBAL DESCR TO CH
)@@G@@END OF CHAIN@D@@[[       LA    A1,CN1DSC   . GET LINK TO OLD FIRST DESCRCI
)@@G@@@F@@[[       SA,H2 A1,1,A0     . LINK UP NAME BLOCK TO CORRECT DESCR    CJ
)@@G@@@A@@[[       J     0,X11       . RETURN   @^@@@@       VARBLS       .   CK
)@@G@@@E@@[[CN1DSC EQUF $,,H1        . TEMP SAVE FOR RECHAINING POINTERS@E@@[[CL
)@@G@@CN2DSC EQUF $,,H2        . TEMP SAVE FOR RECHAINING POINTERS@ @@[[      CM
)@@G@@ RES   1           .    @G@@[[CNRLNK EQUF  $,,H1       . FLAG TO SIGNAL CN
)@@G@@THAT LOCALS MUST BE RECHAINED @A@@[[CNLINK EQUF  $,,H2       . X11 SAVE CO
)@@G@@@ @@[[       RES   1           .    @F@@[[CNFNAM EQUF  $,,H1       . RELCP
)@@G@@ ADDR OF PRIM NAME BLOCK IN COPY WS @F@@[[CNFNAA EQUF $,,H2        . ABSCQ
)@@G@@ ADDR OF PRIM NAME BLOCK IN COPY WS @ @@[[       RES   1           .    CR
)@@G@@@G@@[[CNTNAM EQUF $,,H1        . REL ADDR OF PRIM NAME BLOCK IN ACTIVE WCS
)@@G@@S     @G@@[[CNTNAA EQUF $,,H2        . ABS ADDR OF PRIM NAME BLOCK IN ACCT
)@@G@@TIVE WS     @^@[@@CNLINK RES   1      .   @^@@][       RES   1      .   CU
)@@G@@@^@[@@CNFNAM RES   1      .   @^@[@@CNTNAM RES   1      .   @^#@@@      CV
)@@G@@ VARCON       .   @A@@@@CNDATA CBLOCK  ZTPTMP,0,0,0  0     .@C@@@@CNDIMVCW
)@@G@@ CBLOCK  ZTPDIM,ZMOHFI,ZRANKV,0  0     .  @#@@@@       END     .  ___ATECX
)@@G@@D IN ACTIVE WS- GET IT  @C@@@@       LMJ   X11,SYMERS  . AND GET RID OF CY
)@@G@@REF CT@A@@@@. NOW TAKE 'NOT COPIED' NORMAL EXIT *[S@@@*SDFF*@B@@@@.   FOCZ
)@@G@@RTRAN V LIBRARY UNDER 1108 EXEC.    @G@@@@.                   DACOS - DODA
)@@G@@UBLE PRECISION ARCSIN FUNCTION OF A DOUBLE@B@@@@.                   PRECDB
)@@G@@ISION ARGUMENT.   @D@@@@.                   THE FOLLOWING FORMULA IS USEDC
)@@G@@D:    @F@@@@.                             DACOS(X)=DATAN(DSQRT(1.0+X*X)/DD
)@@G@@X)    @H@@@@.                   ERROR TERMINATION OCCURS IF THE ABSOLUTEDE
)@@G@@ VALUE OF THE     @H@@@@.                   ARGUMENT EXCEEDS 1.0  OR IF DF
)@@G@@THE ARGUMENT IS UNNORMALIZED. @H@@@@.                   THE FUNCTION RANDG
)@@G@@GE IS BETWEEN AND INCLUDING 0.0 AND PI .  @H@@@@.                   DOUBDH
)@@G@@LE PRECISION FUNCTION ROUTINES DSQRT AND DATAN2 ARE   @A@@@@.           DI
)@@G@@        REFERENCED.     @[@@@@.     @B@@@@.                   FUNCTION RDJ
)@@G@@EFERENCE:   @D@@@@.                   A         LMJ       X11,DACOS     DK
)@@G@@@H@@@@.                   A+1       +         LOC(X11)      . ADDRESS OFDL
)@@G@@ ARGUMENT X @G@@@@.                   A+2       +         SEQNUM,PRGNAM DM
)@@G@@. WALK BACK WD.   @G@@@@.                   A+3                         DN
)@@G@@      . NORMAL RETURN   @C@@@@.                   NUMBER OF INSTRUCTIONSDO
)@@G@@: 22  @C@@@@.                   SIZE OF DATA AREA:       6  @C@@@@.     DP
)@@G@@              TOTAL CORE REQUIREMENT: 28  @I@@@@.                   AVERDQ
)@@G@@AGE TIME REQUIRED BY ELEMENT DACOS$:  19.675  MICRO SEC.    @I@@@@.     DR
)@@G@@              AVERAGE TIME INCLUDING DSQRT AND DATAN2: 237.461  MICRO SEDS
)@@G@@C.    @#@@@@          AXR$    @#@@@@       CONFIG  .  @#@@@@       WSDEFDT
)@@G@@ .    @ @@@@WORKSP INFO  2 20        .    @#@@@@$(2)      LIT     @[@@@@DU
)@@G@@$(1)  @ @@@@          NOP       0,NAME    @C@@@@DASIN* SX    X11,SINFLG DV
)@@G@@ . TURN ON SINE FLAG    @ @@@@       J     $+2         .    @ @@@@DACOS*DW
)@@G@@ SZ    SINFLG      .    @ @@@@       SX,H2 X11,NAME+1  .    @^@@@@      DX
)@@G@@    SZ        A3  @D@@@@          L,U       A2,*0,X11           . ADDRESDY
)@@G@@S     @ @@@@          L,U       A1,020014 @C@@@@          LDSL      A0,5DZ
)@@G@@7              . 1.0    @G@@@@          DLM       A4,0,A2            . AEA
)@@G@@BSOLUTE VALUE OF ARGUMENT X   @D@[@@       TG    A0,A4       . IS ABSVALEB
)@@G@@ OF ARG .GT. ONE? @D@@][       DTG   A0,A4       . IS ABSVAL OF ARG .GT.EC
)@@G@@ ONE? @D[@@@       J     DC0010      . NO, CONTINUE THE MARCH     @D@@@@ED
)@@G@@       FUZDIF A0,A4      . YES, IS IT ALMOST ONE?     @C@@@@       JNZ  EE
)@@G@@ A0,NERR$    . IF NOT, DOMAIN ERROR @C@@@@       DL    A0,(+1.0D)  . YESEF
)@@G@@, RECOVER OUR ONE @E@@@@       DL    A4,A0       . AND USE IT AS THE FOREG
)@@G@@CED ARGUMENT@E@@@@DC0010 TP    0,A2        . WAS ORIGINAL ARGUMENT POSITEH
)@@G@@IVE?  @C@@@@       DLN   A4,A4       . NO, NEGATE THE ABSVAL@D@@@@      EI
)@@G@@ TZ    SINFLG      . ARE WE DOING THE ARCSINE?  @D@@@@       DLN   A4,A4EJ
)@@G@@       . IF SO, NEGATE THE ARG AGAIN@E@@@@       DS    A4,ARG      . SAVEK
)@@G@@E FORCED VALUE OF ARGUMENT    @A@@@@       DFM   A4,A4       . SQUARE ITEL
)@@G@@@C@@@@          DFAN      A0,A4              . 1.0-X*X@ @@@@          DSEM
)@@G@@        A0,ROOT   @ @@@@          LMJ       X11,DSQRT @^@@@@          + EN
)@@G@@        ROOT@D@@@@          +         $-DACOS-1,NAME     . WALK BACK WD.EO
)@@G@@@E@@@@          DS        A0,ROOT            . DSQRT(1.0-X*X)     @ @@@@EP
)@@G@@          LMJ       X11,DATAN2@^@@@@          +         ROOT@ @@@@      EQ
)@@G@@ +     ARG         .    @D@@@@          +         $-DACOS-2,NAME     . WER
)@@G@@ALK BACK WD.@H@@@@          LX,H2     X11,NAME+1         . DACOS(X)=DATAES
)@@G@@N2(DSQRT(1.0-X*X),X)    @D@@@@       TZ    SINFLG      . ARE WE DOING THET
)@@G@@E ARCSINE?  @F@@@@       DFAN  A0,(+1.57079632679489662D) . YES, SUBTRACEU
)@@G@@T PI OVER 2 @ @@@@          J         2,X11     @[@@@@$(2)  @^@@@@ROOT  EV
)@@G@@    RES       2   @ @@@@ARG    RES   2           .    @ @@@@SINFLG RES  EW
)@@G@@ 1           .    @E@@@@NAME      +         'DACOS '           . WALK BAEX
)@@G@@CK PACKET   @ @@@@          +         2,$-$     @#@@@@          END     EY
)@@G@@___                           . NORMAL RETURN   @C@@@@.                 EZ
)@@G@@  NUMBER OF INSTRUCTIONS: 22  @C@@@@.                   SIZE OF DATA AREFA
)@@G@@A:       6  @C@@@@.     *[S@@@*SDFF*@G@@@@.                   U OF MD  DFB
)@@G@@OUBLE PRECISION HYPERBOLIC ARCSIN/ARCCOS  @B@@@@.                   CALLFC
)@@G@@ING SEQUENCE:     @C@@@@.                   A    LMJ   X11,DASINH/DACOSHFD
)@@G@@@G@@@@.                   A+1  +     ARG                . LOCATION OF ARFE
)@@G@@G     @F@@@@.                   A+2  +     SEQNUM,PROGNAME    . WALKBACKFF
)@@G@@ WORD @F@@@@.                   A+3                           . NORMAL RFG
)@@G@@ETURN @A@@@@.                   FORMULAE USED:  @G@@@@.                 FH
)@@G@@       DASINH(X)=DLOG(DABS(X)+DSQRT(X*X+1))    X>=0   @C@@@@.           FI
)@@G@@             DASINH(-X)=-DASINH(X)  @G@@@@.                        DACOSFJ
)@@G@@H(X)=DLOG(DABS(X)+DSQRT(X*X-1))    X>=1   @G@@@@.                       FK
)@@G@@ DACOSH(-X)=DACOSH(X)                    X<=-1  @G@@@@.                 FL
)@@G@@  THIS ROUTINE IS RE-ENTRANT, AND COMPATABLE WITH     @G@@@@.           FM
)@@G@@        THE UNIVAC-DISTRIBUTED FORTRAN LIBRARY.  IT IS ALSO @F@@@@.     FN
)@@G@@              COMPATABLE WITH THE 'ADDR=IND' OPTION OF THE  @A@@@@.     FO
)@@G@@              @FOR COMPILER   @F@@@@.                   CODED BY J. ROUNFP
)@@G@@TREE, MODIFIED BY P.E. HAGERTY@E@@@@.                   COLLEGE PARK, MAFQ
)@@G@@RYLAND, JAN 26, 1971    @^@@@@       AXR$         .   @ @@[[       CONFIFR
)@@G@@G            .    @F@@[[       WSDEF             . NEEDED TO DEFINE FUZZFS
)@@G@@ING PARAMETERS    @ @@[[WORKSP INFO  2 20        .    @]@@@@$(2)   LIT  FT
)@@G@@@^@@@@NAME   '$$$$$$'     .   @^@@@@       +0,$-$       .   @^@@@@ARG   FU
)@@G@@ RES   2      .   @^@@@@ROOT   RES   2      .   @^@@@@UNITY  +1.0D      FV
)@@G@@  .   @[@@@@$(1)  @A@@@@       NOP   0,NAME           .     @A@@@@DASINHFW
)@@G@@* LA   A3,('DASINH')    .     @A@@@@       DL    A0,UNITY         .     FX
)@@G@@@#@@@@       J     START@^@@@@       NOP   0,NAME .   @A@@@@DACOSH* LA  FY
)@@G@@ A3,('DACOSH')    .     @A@@@@       DLN   A0,UNITY         .     @D@@@@FZ
)@@G@@START  SA    A3,NAME          . SET UP WALKBACK PACKET@A@@@@       SX,H2GA
)@@G@@ X11,NAME+1       .     @E@@@@       SZ    A3               . CLEAR INDIGB
)@@G@@RECT CHAIN WD     @C@@@@       LA,U  A3,*0,X11        . ADDR OF ARG     GC
)@@G@@@B@@@@       DL    A2,0,A3          . GET ARG   @C@@@@       DS    A2,ARGD
)@@G@@G           . TEMP SAVE IT    @B@@@@       DFM   A2,A2            . SQUAGE
)@@G@@RE IT @C@@@@       DFA   A0,A2            . FORM  X*X(+-)1.0@E@[@@      GF
)@@G@@ DJZ   A0,DOLOG         . IF ZERO, GO GET THE LOG     @E@[@@       JN   GG
)@@G@@ A0,NERR$         . IF NEG, ARCOSH OUT OF RANGE @F@@[[       JP    A0,ZCGH
)@@G@@HK     . IF .GE. ZERO, ITSOK. GO GET THE SQRT   @G@@[[       DLN   A0,A0GI
)@@G@@       . NEGATIVE, FORCE POSITIVE FOR FUZZING CHECK   @F@@[[       TG   GJ
)@@G@@ A0,WSFUZZ   . DOES FUZZ EXCEED THE VALUE WE'VE GOT?  @F@@[[       J    GK
)@@G@@ NERR$       . NO, ARCCOSH OUT OF RENGE. DOMAIN ERROR @E@@[[       LDSL GL
)@@G@@ A0,72       . YES, FORCE ARG FOR SQRT TO ZERO  @F@@[[ZCHK   DJZ   A0,DOGM
)@@G@@LOG    . IF SQRT IS ZERO, GO GET THE LOG TERM   @A]@@@       DS    A0,ROGN
)@@G@@OT          .     @A@@@@       LMJ   X11,DSQRT        .     @A@@@@      GO
)@@G@@ +     ROOT             .     @A@@@@       +     $-DASINH-2,NAME  .     GP
)@@G@@@A@@@@DOLOG  DLM   A2,ARG      . ABS(ARG) @A@@@@       DFA   A2,A0      GQ
)@@G@@ . PLUS SQRT@A@@@@       DS    A2,ROOT     . TEMP SAVE@ @@@@       LMJ  GR
)@@G@@ X11,DLOG    .    @ @@@@       +     ROOT        .    @A@@@@       +    GS
)@@G@@ $-DASINH-2,NAME  .     @B@@@@       LX,H2 X11,NAME+1  . GET RETURN LINKGT
)@@G@@@C@@@@       TN    ARG         . WAS ARG NEGATIVE     @B@@@@       J    GU
)@@G@@ 2,X11       . NO, WE'RE DONE @C@@@@       LA,H2 A2,NAME     . YES, GET GV
)@@G@@ENTRY FLAG  @C@@@@       TE,U  A2,'OSH'    . WAS IT COSH ENTRY?   @E@@@@GW
)@@G@@       DLN   A0,A0       . NO, SINH-- REVERSE SIGN OF ANS   @B@@@@      GX
)@@G@@ J     2,X11       . AND GO HOME    @ @@@@       END               .    GY
)@@G@@___ IS ALSO @F@@@@.                   COMPATABLE WITH THE 'ADDR=IND' OPTGZ
)@@G@@ION OF THE  @A@@@@.                   @FOR COMPI*[S@@@*SDFF*@B@@@@.  FORHA
)@@G@@TRAN V LIBRARY UNDER 1108 EXEC.     @[@@@@.     @H@@@@.                 HB
)@@G@@  DATAN  -  DOUBLE PRECISION ARC TANGENT FUNCTION OF ONE    @C@@@@.     HC
)@@G@@              DOUBLE PRECISION ARGUMENT.  @[@@@@.     @H@@@@.           HD
)@@G@@        THE RELATION ARCTAN(X)=PI/2-ARCTAN(1/X) IS USED FOR ARGU- @H@@@@HE
)@@G@@.                   MENTS OF ABSOLUTE VALUE OF 4.0 OR LARGER. IN ALL OTHHF
)@@G@@ER    @H@@@@.                   CASES THE ABSOLUTE ARGUMENT IS CONSIDEREHG
)@@G@@D TO BE OF THE    @H@@@@.                   FORM TAN(X+Y). TAN(Y) IS COMHH
)@@G@@PUTED IN SUCH A WAY AS TO KEEP@H@@@@.                   THE ABSOLUTE VALHI
)@@G@@UE OF TAN(X) LESS THAN 1/4. ANGLE X IS    @H@@@@.                   COMPHJ
)@@G@@UTED USING A RATIONAL EXPRESSION WHOSE COEFFICIENTS   @H@@@@.           HK
)@@G@@        ARE THE RESULT OF A REDUCTION FROM THE GAUSSIAN CONTINUED @H@@@@HL
)@@G@@.                   FRACTION. ALL 10 COEFFICIENTS ARE INTEGRAL VALUES. AHM
)@@G@@NGLE Y@D@@@@.                   IS TAKEN FROM A TABLE OF 9 ITEMS. @I@@@@HN
)@@G@@.                   THERE IS ERROR TERMINATION IF THE ARGUMENT IS UNNORMHO
)@@G@@ALIZED.     @H@@@@.                   THE RANGE OF THE ARGUMENT IS OTHERHP
)@@G@@WISE NOT RESTRICTED. THE@H@@@@.                   FUNCTION RANGE IS BETWHQ
)@@G@@EEN AND INCLUDING PI/2  AND -PI/2 . @B@@@@.                   FUNCTION RHR
)@@G@@EFERENCE:   @D@@@@.                   A         LMJ       X11,DATAN     HS
)@@G@@@H@@@@.                   A+1       +         LOC(X)         . ADDRESS OHT
)@@G@@F ARGUMENT  @G@@@@.                   A+2       +         SEQNUM,PRGNAM HU
)@@G@@ . WALK BACK WD.  @G@@@@.                   A+3                         HV
)@@G@@       . NORMAL RETURN  @[@@@@.     @H@@@@.                   DATAN2  - HW
)@@G@@ DOUBLE PRECISION ARC TANGENT FUNCTION OF TWO   @C@@@@.                 HX
)@@G@@  DOUBLE PRECISION ARGUMENTS. @[@@@@.     @H@@@@.                   THERHY
)@@G@@E IS ERROR TERMINATION IF ANY ARGUMENT IS UNNORMALIZED@H@@@@.           HZ
)@@G@@        OR IF BOTH ARGUMENTS ARE EQUAL TO ZERO. THE RANGES OF THE @F@@@@IA
)@@G@@.                   TWO ARGUMENTS ARE OTHERWISE UNRESTRICTED.     @H@@@@IB
)@@G@@.                   IF THE SECOND ARGUMENT EQUALS ZERO THE ABSOLUTE FUNCIC
)@@G@@TION  @I@@@@.                   VALUE IS EQUAL PI/2 AND THE SIGN OF THE ID
)@@G@@FIRST ARGUMENT Y IS     @H@@@@.                   ATTACHED. IF THE 2ND AIE
)@@G@@RGUMENT Z IS POSITIVE THE FUNCTION  @G@@@@.                   VALUE IS EIF
)@@G@@QUAL TO  DATAN(Y/Z).  IF Z IS NEGATIVE THE@H@@@@.                   ABSOIG
)@@G@@LUTE FUNCTION VALUE IS EQUAL TO  PI-DATAN(ABS(Y/Z))   @G@@@@.           IH
)@@G@@        AND THE SIGN OF THE FIRST ARGUMENT Y IS ATTACHED.   @H@@@@.     II
)@@G@@              CHARACTERISTIC AND DIVIDE OVERFLOW IS TESTED. THE PREVIOUSIJ
)@@G@@@G@@@@.                   VALUES OF NCDOF$ ARE RESTORED ON NORMAL RETURNIK
)@@G@@.     @B@@@@.                   FUNCTION REFERENCE:   @D@@@@.           IL
)@@G@@        B         LMJ       X11,DATAN2    @I@@@@.                   B+1 IM
)@@G@@      +         LOC(Y)         . ADDRESS OF 1ST ARGUMENT    @I@@@@.     IN
)@@G@@              B+2       +         LOC(Z)         . ADDRESS OF 2ND ARGUMEIO
)@@G@@NT    @G@@@@.                   B+3       +         SEQNUM,PRGNAM  . WALIP
)@@G@@K BACK WD.  @G@@@@.                   B+4                               IQ
)@@G@@ . NORMAL RETURN  @C@@@@.                   NUMBER OF INSTRUCTIONS:  87 IR
)@@G@@@C@@@@.                   SIZE OF DATA AREA:       51 @C@@@@.           IS
)@@G@@        TOTAL CORE REQUIREMENT: 138 @E@@@@.                   AVERAGE TIIT
)@@G@@ME REQUIRED FOR DATAN(X),     @H@@@@.                   IF ABS(X) IS LESIU
)@@G@@S THAN 0.25:        121.875 MICRO SEC.    @H@@@@.                   IF AIV
)@@G@@BS(X) IS BETWEEN 0.25 AND 4.0.: 154.5   MICRO SEC.    @H@@@@.           IW
)@@G@@        IF ABS(X) IS LARGER THAN 4.0:       150.125 MICRO SEC.    @G@@@@IX
)@@G@@.                   ADD AN AVERAGE OF 26.875 MICRO SEC. FOR DATAN(Y,Z) .IY
)@@G@@@H@@@@.                   THE AVERAGE TIME FOR ANY ARGUMENT IS  148.661 IZ
)@@G@@ MICRO SEC. @H@@@@.                   IF AN EVEN DISTRIBUTION OF FUNCTIOJA
)@@G@@N VALUES IS ASSUMED.    @H@@@@.                   ADD AN AVERAGE OF 25.3JB
)@@G@@75 MICRO SEC. FOR DATAN2(Y,Z) .     @H@@@@.                   ACCURACY OJC
)@@G@@F DATAN OVER 8000 EQUIDISTANT ARGUMENTS IN THE  @D@@@@.                 JD
)@@G@@  INTERVAL BETWEEN -0.5 AND 0.5 :   @G@@@@.                   28.1 PERCEJE
)@@G@@NT OF ALL FUNCTION VALUES WERE CORRECT.   @H@@@@.                   49.2JF
)@@G@@ PERCENT OF ALL VALUES HAD AN ERROR IN THE 60-TH BIT. @H@@@@.           JG
)@@G@@        22.2 PERCENT OF ALL VALUES HAD AN ERROR IN THE 59-TH BIT. @H@@@@JH
)@@G@@.                    0.5 PERCENT OF ALL VALUES HAD AN ERROR IN THE 58-THJI
)@@G@@ BIT. @[@@@@.     @^@@@@          AXR$      .   @#@@@@$(2)      LIT     JJ
)@@G@@@[@@@@$(1)  @ @@@@          NOP       0,NAME2   @ @@@@DATAN2*   LR      JK
)@@G@@  R3,NCDOF$ @^@@@@          SZ        A3  @ @@@@          L,U        A0,JL
)@@G@@*0,X11@ @@@@          L,U        A1,*1,X11@ @@@@          SZ        NCDOJM
)@@G@@F$    @C@@@@          DL        A4,0,A1            . 2ND ARG@ @@@@      JN
)@@G@@    LMJ       A2,ARGTST @ @@@@          DS        A4,R1     @E@@@@      JO
)@@G@@    S         A4,TEMP2           . SIGN OF 2ND ARG    @C@@@@          DLJP
)@@G@@        A4,0,A0            . 1ST ARG@ @@@@          LMJ       A2,ARGTST JQ
)@@G@@@ @@@@          DFD       A4,R1     @ @@@@          L         A3,NCDOF$ JR
)@@G@@@F@@@@          SR        R3,NCDOF$          . RESTORE OVERFLOW FLAGS   JS
)@@G@@@F@@@@          TNZ       A4                 . IS QUOTIENT EQUAL TO ZEROJT
)@@G@@@I@@@@          DLN       A4,A4              . YES, NEG. SIGN FOR QUADRAJU
)@@G@@NT PROJECTION     @D@@@@          JZ        A3,COMP            . NO OVERJV
)@@G@@FLOW  @G@@@@          JZ        A4,NERR$           . BOTH ARGUMENTS ARE JW
)@@G@@EQUAL ZERO  @F@@@@          DL        A0,PIOV2           . OVERFLOW, LOAJX
)@@G@@D  PI/2     @ @@@@          DS        A3,TEMP2  @^@@@@          J       JY
)@@G@@  FIN @ @@@@          NOP       0,NAME    @E@@@@DATAN*    SZ        TEMPJZ
)@@G@@2              . SET ENTRY FLAG     @C@@@@          L         A0,0,X11  KA
)@@G@@         . ADDRESS@C@@@@          DL        A4,0,A0            . ARG    KB
)@@G@@@ @@@@          LMJ       A2,ARGTST @H@@@@COMP      S         A4,TEMP1  KC
)@@G@@         . SIGN IF RESULT BETWEEN -PI/2 AND PI/2@H@@@@          SZ,H2   KD
)@@G@@  TEMP1              . PRESUME ABS(ARG) IS SMALLER THAN 4.0 @E@@@@      KE
)@@G@@    DLM       A4,A4              . ABS(ARG)=TAN(X+Y)  @ @@@@          DFKF
)@@G@@U       A1,A4     @H@@@@          TG,U      A1,02003           . IS ABS(KG
)@@G@@ARG) EQUAL OR LARGER THAN 4.0 @C@@@@          J         LARGE           KH
)@@G@@   . YES    @G@@@@          TLE,U     A1,01777           . IS ABS(ARG) LKI
)@@G@@ESS THAN 0.25     @C@@@@          J         SMALL              . YES    KJ
)@@G@@@A@@@@          LDSL      A2,0176001,A1   @ @@@@          DSL       A2,5KK
)@@G@@9     @ @@@@          JNB       A3,$+2    @F@@@@          A,U       A3,1KL
)@@G@@               . MAKE TABLE INDEX EVEN    @ @@@@          L,U       A0,0KM
)@@G@@2072  @C@@@@          DFP       A0,A2              . TAN(Y) @ @@@@      KN
)@@G@@    DS        A1,R1     @ @@@@          DFM       A1,A4     @ @@@@      KO
)@@G@@    DFA       A1,ONE    @E@@@@          DFAN      A4,R1              . TKP
)@@G@@AN(X+Y)-TAN(Y)    @I@@@@          DFD       A4,A1              . TAN(X) KQ
)@@G@@, ABS(TAN(X)) IS LESS THAN 0.25     @ @@@@BACK      DS        A4,TANX   KR
)@@G@@@ @@@@          DFM       A4,A4     @ @@@@          DS        A4,R1     KS
)@@G@@@ @@@@          L         A2,(-4,12)@D@@@@          LR,U      R3,3      KT
)@@G@@         . 4 ITERATIONS @C@@@@          DL        A4,COEFF+6,A2      . BKU
)@@G@@10    @C@@@@          DL        A0,COEFF+4,A2      . A9     @ @@@@LOOP  KV
)@@G@@    DFM       A4,R1     @H@@@@          DFA       A4,COEFF+2,A2      . AKW
)@@G@@DD COEFFICIENT B OF DENOMINATOR     @ @@@@          DFM       A0,R1     KX
)@@G@@@G@@@@          DFA       A0,COEFF,*A2       . ADD COEFFICIENT A OF NOMIKY
)@@G@@NATOR @ @@@@          JGD       R3,LOOP   @ @@@@          DFM       A4,RKZ
)@@G@@1     @D@@@@          DFA       A4,COEFF           . ADD B0 (=A1) @ @@@@LA
)@@G@@          DFD       A0,A4     @C@@@@          DFM       A0,TANX         LB
)@@G@@   . ANGLE X@D@@@@          DFA       A0,TABLE,A3        . ADD ANGLE Y  LC
)@@G@@@G@@@@          TNZ,H2    TEMP1              . IS ABS(ARG) LOWER THAN 4.LD
)@@G@@0     @C@@@@          J         FIN                . YES    @ @@@@      LE
)@@G@@    DLN       A0,A0     @ @@@@          DFA       A0,PIOV2  @D@@@@FIN   LF
)@@G@@    TP        TEMP1              . IS SIGN NEG  @C@@@@          DLN     LG
)@@G@@  A0,A0              . YES    @F@@@@          TNZ       TEMP2           LH
)@@G@@   . IS THERE ONE ARG ONLY    @C@@@@          J         2,X11           LI
)@@G@@   . YES    @E@@@@          TN        TEMP2              . IS 2ND ARG NELJ
)@@G@@G     @C@@@@          J         3,X11              . NO     @G@@@@      LK
)@@G@@    DLM       A0,A0              . RESULT IN 2ND OR 3RD QUADRANT  @D@@@@LL
)@@G@@          DFAN      A0,PI              . ABS(X+Y)-PI  @F@@@@          TPLM
)@@G@@        TEMP1              . IS RESULT IN 2ND QUADRANT@C@@@@          DLLN
)@@G@@N       A0,A0              . NO     @ @@@@          J         3,X11     LO
)@@G@@@D@@@@ARGTST    TEP       A4,(0400040,0)     . TEST ARG     @G@@@@      LP
)@@G@@    J         0,A2               . ARG UNEQUAL ZERO AND NORMALIZED@ @@@@LQ
)@@G@@          DLM       A4,A4     @F@@@@          DJZ       A4,0,A2         LR
)@@G@@   . RETURN IF LEGAL ZERO     @E@@@@          J         NERR$           LS
)@@G@@   . ARG IS UNNORMALIZED@F@@@@LARGE     SX,H2     X11,TEMP1          . ALT
)@@G@@BS(ARG) IS 4.0 OR LARGER@ @@@@          DS        A4,R1     @ @@@@      LU
)@@G@@    DL        A4,ONE    @D@@@@          DFD       A4,R1              . 1LV
)@@G@@.0/ABS(ARG) @D@@@@SMALL     SZ        A3                 . TAN(Y)=0.0   LW
)@@G@@@^@@@@          J         BACK@[@@@@$(2)  @H@@@@TEMP2     +         0   LX
)@@G@@               . TEMP2 MUST IMMEDIATELY PRECEDE TEMP1 @^@@@@TEMP1     + LY
)@@G@@        0   @^@@@@TANX      RES       2   @ @@@@ONE       +         0200LZ
)@@G@@140,0 @^@@@@          +         0   @A@@@@PIOV2     +         0200162207MA
)@@G@@732   @A@@@@          +         0504205506043   @A@@@@PI        +       MB
)@@G@@  0200262207732   @A@@@@          +         0504205506043   @C@@@@COEFF MC
)@@G@@    +         0203647014575      . A1     @A@@@@          +         0630MD
)@@G@@000000000   @C@@@@          +         0203756155321      . B2     @A@@@@ME
)@@G@@          +         0464000000000   @C@@@@          +         0203747553MF
)@@G@@221      . A3     @A@@@@          +         0760000000000   @C@@@@      MG
)@@G@@    +         0203746035673      . B4     @A@@@@          +         0530MH
)@@G@@000000000   @C@@@@          +         0203665071467      . A5     @A@@@@MI
)@@G@@          +         0760000000000   @C@@@@          +         0203562575MJ
)@@G@@117      . B6     @A@@@@          +         0440000000000   @C@@@@      MK
)@@G@@    +         0203463510537      . A7     @A@@@@          +         0200ML
)@@G@@000000000   @C@@@@          +         0203256656465      . B8     @A@@@@MM
)@@G@@          +         0600000000000   @C@@@@          +         0203064657MN
)@@G@@637      . A9     @A@@@@          +         0000000000000   @C@@@@      MO
)@@G@@    +         0202466403020      . B10    @^@@@@TABLE     +         0   MP
)@@G@@@^@@@@          +         0   @A@@@@          +         0177773261470   MQ
)@@G@@@A@@@@          +         0126067323665   @A@@@@          +         0200MR
)@@G@@062207732   @A@@@@          +         0504205506043   @A@@@@          + MS
)@@G@@        0200076714136   @A@@@@          +         0450076646617   @A@@@@MT
)@@G@@          +         0200143333414   @A@@@@          +         0456567621MU
)@@G@@066   @A@@@@          +         0200146055553   @A@@@@          +       MV
)@@G@@  0626511552054   @A@@@@          +         0200147760273   @A@@@@      MW
)@@G@@    +         0267520527777   @A@@@@          +         0200151270207   MX
)@@G@@@A@@@@          +         0706261151131   @A@@@@          +         0200MY
)@@G@@152332144   @A@@@@          +         0521723477115   @ @@@@NAME      + MZ
)@@G@@        'DATAN '  @ @@@@NAME2     +         'DATAN2'  @#@@@@          ENNA
)@@G@@D     ___   @G@@@@          J         0,A2               . ARG UNEQUAL ZNB
)@@G@@ERO AND NORMALIZED@ @@@@          DLM       A4,A4     @F@@@@          DJNC
)@@G@@Z       A4,0,A2         *[S@@@*SDFF*@F@@@@.                   U OF MD DOND
)@@G@@UBLE PRECISION HYPERBOLIC ARCTAN    @B@@@@.                   CALLING SENE
)@@G@@QUENCE:     @B@@@@.                   A    LMJ   X11,DATANH @G@@@@.     NF
)@@G@@              A+1  +     ARG                . LOCATION OF ARG     @F@@@@NG
)@@G@@.                   A+2  +     SEQNUM,PROGNAME    . WALKBACK WORD @F@@@@NH
)@@G@@.                   A+3                           . NORMAL RETURN @A@@@@NI
)@@G@@.                   FORMULA USED:   @F@@@@.                        DATANNJ
)@@G@@H(X)=0.5*DLOG((1-X)/(1+X))    0<=X<1@F@@@@.                        DATANNK
)@@G@@H(-X)=-DATANH(X)              -1<X<0@G@@@@.                   THIS ROUTINL
)@@G@@NE IS RE-ENTRANT, AND COMPATABLE WITH     @G@@@@.                   THE NM
)@@G@@UNIVAC-DISTRIBUTED FORTRAN LIBRARY.  IT IS ALSO @F@@@@.                 NN
)@@G@@  COMPATABLE WITH THE 'ADDR=IND' OPTION OF THE  @A@@@@.                 NO
)@@G@@  @FOR COMPILER   @F@@@@.                   CODED BY J. ROUNTREE, MODIFINP
)@@G@@ED BY P.E. HAGERTY@E@@@@.                   COLLEGE PARK, MARYLAND, JAN NQ
)@@G@@26, 1971    @#@@@@       AXR$  .    @ @@@@$(2)   LIT               .    NR
)@@G@@@ @@@@NAME   'DATANH'          .    @ @@@@        +0,$-$           .    NS
)@@G@@@ @@@@SIGN    RES    1         .    @ @@@@TEMP    RES    2         .    NT
)@@G@@@[@@@@$(1)  @ @@@@       NOP   0,NAME      .    @ @@@@DATANH* SX,H2 X11,NU
)@@G@@NAME+1 .    @C@@@@       SZ    A3          . CLEAR INDIRECT CHAIN @B@@@@NV
)@@G@@       LA,U  A3,*0,X11   . GET ARG ADDR   @C@@@@       DL    A3,0,A3    NW
)@@G@@ . AND THEN ARG ITSELF  @C@@@@       SA    A3,SIGN     . TEMP SAVE SIGN NX
)@@G@@TEST  @B@@@@       DLM   A3,A3       . FORCE POSITIVE @ @@@@       DL   NY
)@@G@@ A0,(+1.0D)  .    @D@@@@       DFAN  A0,A3       . 1.0D-ABS(X) =DENOMINANZ
)@@G@@TOR   @E@@@@       DJZ   A0,NERR$    . IF ZERO, ARG WAS ONE- NO GOOD    OA
)@@G@@@E@@@@       JN    A0,NERR$    . CAN'T BE GRTR THAN ONE, EITHER   @D@@@@OB
)@@G@@       DFA   A3,(+1.0D)  . 1.0D+ABS(X)= NUMERATOR     @C@@@@       DFD  OC
)@@G@@ A3,A0       . GET  (1+X)/(1-X)     @ @@@@       DS    A3,TEMP     .    OD
)@@G@@@ @@@@       LMJ   X11,DLOG    .    @#@@@@       +     TEMP @A@@@@      OE
)@@G@@ +     $-DATANH-2,NAME  .     @B@@@@       LX,H2 X11,NAME+1  . RESTORE LOF
)@@G@@INK   @D@@@@       TP    SIGN        . WAS ARG ORIGINALLY POS?    @C@@@@OG
)@@G@@       DLN   A0,A0       . NO, INVERT RESULT    @A@@@@       DFM   A0,(+OH
)@@G@@0.5D)  . HALVE IT @B@@@@       J     2,X11       . AND GO BYE-BYE @]@@@@OI
)@@G@@       END .___     0000000000000   @C@@@@          +         0202466403OJ
)@@G@@*[S@@@*SDFF*@B@@@@.   FORTRAN V LIBRARY UNDER 1108 EXEC.    @[@@@@.     OK
)@@G@@@#@@@@        AXR$.     @F@@@@.       FORTRAN LIBRARY SUBROUTINE TO COMPOL
)@@G@@UTE DOUBLE PRECISION    @C@@@@.       FLOATING POINT HYPERBOLIC COSINE OOM
)@@G@@F A   @C@@@@.       DOUBLE PRECISION FLOATING POINT ARGUMENT@[@@@@.     ON
)@@G@@@C@@@@.       CALLING SEQUENCE     A    LMJ  X11,DCOSH@C@@@@.           OO
)@@G@@                 A+1  +    LOC(ARG) @C@@@@.                            AOP
)@@G@@+2       (W.B.)   @C@@@@.                            A+3  NORMAL RETURN OQ
)@@G@@@[@@@@.     @[@@@@.     @C@@@@.       SUBROUTINE DEXP IS USED BY THIS PROR
)@@G@@OGRAM @[@@@@.     @[@@@@.     @]@@@@$(2)    LIT @^@@@@NAME    +      'DCOS
)@@G@@OSH ' @^@@@@        +       2,$-$   @B@@@@ARGADR    +         0         OT
)@@G@@        .   @[@@@@$(1). @^@@@@        NOP     0,NAME  @ @@@@DCOSH*  SX,HOU
)@@G@@2   X11,NAME+1    @#@@@@        SZ      A3@ @@@@        L,U     A0,*0,X1OV
)@@G@@1     @ @@@@       SA,H2        A0,ARGADR @^@@@@        LMJ     X11,DEXPOW
)@@G@@@B@@@@          I$        0,0,0,A3,1,ARGADR .   @ @@@@        +       $-OX
)@@G@@DCOSH-1,NAME@ @@@@        LX,H2   X11,NAME+1    @A@@@@          TLE     OY
)@@G@@  A0,(0140,1)     @F@@@@          J         NERR$              . ARGUMENOZ
)@@G@@T IS TOO SMALL    @ @@@@          L,U       A3,020004 @ @@@@          LDPA
)@@G@@SL      A2,57     @ @@@@          DFD       A2,A0     @D@@@@          ANPB
)@@G@@        A0,(0100,0)        . DIVIDE BY 2.0@ @@@@          DFA       A0,APC
)@@G@@2     @ @@@@          J         2,X11     @]@@@@        END ___ ITSELF  PD
)@@G@@@C@@@@       SA    A3,SIGN     . TEMP SAVE SIGN TEST  @B@@@@       DLM  PE
)@@G@@*[S@@@*SDFF*@E@@@@      .             DOUBLE PRECISION EXPONENTIAL ROUTIPF
)@@G@@NE    @B@@@@      .             FORTRAN V LIBRARY     @]@@@@      .     PG
)@@G@@@C@@@@      .             EXP(X)=2**I*2**(N/8)*EXP(Y) @]@@@@      .     PH
)@@G@@@H@@@@      .             WHERE I IS THE INTEGRAL PART OF X*LOG2(E) AND PI
)@@G@@N (=INDEX)  @H@@@@      .             IS EQUAL TO 1,3,5 OR 7  DEPENDING PJ
)@@G@@ON THE FRACTIONAL PART  @H@@@@      .             OF X*LOG(E). THE ABSOLPK
)@@G@@UTE VALUE OF Y IS LESS OR EQUAL TO  @H@@@@      .             LOG(2)/8 .PL
)@@G@@ EXP(Y) IS COMPUTED BY A RATIONAL EXPRESSION OF @I@@@@      .           PM
)@@G@@  7-TH  ORDER. THE COEFFICIENTS (INTEGRAL NUMBERS RERRESENTING    @I@@@@PN
)@@G@@      .             EXACT VALUES) WERE TAKEN FROM THE DIAGONAL OF PADE'SPO
)@@G@@ TABLE.     @]@@@@      .     @B@@@@      .             FUNCTION REFERENPP
)@@G@@CE:   @C@@@@      .             A         LMJ       X11,DEXP@H@@@@      PQ
)@@G@@.             A+1       +         LOC(X)              . ADDR OF ARG     PR
)@@G@@@G@@@@      .             A+2       +         SEQNUM,PRGNAM       . W.B.PS
)@@G@@WORD  @H@@@@      .             A+3                                     PT
)@@G@@. NORMAL RETURN   @]@@@@      .     @I@@@@      .             CONTROL GOPU
)@@G@@ES TO NERR$ IF THE ARGUMENT IS UNNORMALIZED OR IF     @H@@@@      .     PV
)@@G@@        ITS VALUE EXCEEDS THE APPROXIMATE VALUE OF 709.089 . THE  @H@@@@PW
)@@G@@      .             FUNCTION VALUE IS EQUAL TO ZERO FOR ARGUMENTS LESS TPX
)@@G@@HAN   @ @@@@      .             -709.089 .@]@@@@      .     @I@@@@      PY
)@@G@@.             THE CHARACTERISTIC OF AN ARGUMENT EQUAL TO ZERO MUST CONSIPZ
)@@G@@ST    @A@@@@      .             OF SIGN BITS.   @]@@@@      .     @C@@@@QA
)@@G@@      .             NUMBER OF  INSTRUCTIONS:  55@C@@@@      .           QB
)@@G@@  SIZE OF DATA AREA:        34@C@@@@      .             TOTAL CORE REQUIQC
)@@G@@REMENT:   89@]@@@@      .     @G@@@@      .             TIME REQUIRED FOQD
)@@G@@R COMPUTATION: 121.075 MICRO SEC    @]@@@@      .     @[@@@@.     @#@@@@QE
)@@G@@$(2)      LIT     @[@@@@.     @#@@@@$(1)      AXR$.   @ @@@@          NOQF
)@@G@@P       0,NAME    @^@@@@DEXP*     SZ        A3  @ @@@@          L,U     QG
)@@G@@  A0,*0,X11 @D@@@@          LR        R3,0,A0            . SIGN OF ARG  QH
)@@G@@@D@@@@          DLM       A4,0,A0            . ABS(ARG)     @A@@@@      QI
)@@G@@    TOP       A4,(0400040,0)  @ @@@@          J         CHECK     @B@@@@QJ
)@@G@@          TG        A4,(0201254242673)    @H@@@@          J         RANGQK
)@@G@@E              . ABS(ARG) IS TOO BIG FOR COMPUTATION  @E@@@@          DFQL
)@@G@@M       A4,RLOG2           . DIVIDE BY LOG(2.0) @ @@@@          DFU     QM
)@@G@@  A1,A4     @ @@@@          DSA       A2,24     @ @@@@          TG,U    QN
)@@G@@  A1,01776  @A@@@@          LDSC      A2,0176003,A1   @^@@@@          ORQO
)@@G@@,U      A2,1@ @@@@          L,U       A0,02071  @^@@@@          SZ      QP
)@@G@@  A2  @ @@@@          DFP       A0,A2     @ @@@@          DFAN      A4,AQQ
)@@G@@1     @G@@@@          DFM       A4,LOG2            .  -LOG(2)/8 .LE. Y .QR
)@@G@@LT. LOG(2)/8@^@@@@          DS        A4,Y@ @@@@          DFM       A4,AQS
)@@G@@4     @ @@@@          L         A2,ORDER  @D@@@@          DS        A4,RQT
)@@G@@1              . STORE Y**2   @A@@@@          DLN       A4,COEFF+2,A2   QU
)@@G@@@A@@@@          DL        A0,COEFF,*A2    @ @@@@LOOP      DFM       A4,RQV
)@@G@@1     @D@@@@          DFAN      A4,COEFF+2,A2      . ODD EXPONENTS@ @@@@QW
)@@G@@          DFM       A0,R1     @E@@@@          DFA       A0,COEFF,A2     QX
)@@G@@   . EVEN EXPONENTS     @ @@@@          JMGI      A2,LOOP   @^@@@@      QY
)@@G@@    DFM       A4,Y@ @@@@          DS        A4,R1     @C@@@@          DFQZ
)@@G@@A       A4,A0              . BOTTOM @C@@@@          DFAN      A0,R1     RA
)@@G@@         . TOP    @ @@@@          LDSL      A2,33     @C@@@@          SSRB
)@@G@@L       A3,33              . INDEX  @D@@@@          LSSL      A2,24     RC
)@@G@@         . INTEGRAL PART@D@@@@          DFM       A0,TABLE-1,A3      . 2RD
)@@G@@**(N/8)     @E@@@@          TP        R3                 . TEST SIGN OF RE
)@@G@@ARG   @ @@@@          J         NEGARG    @C@@@@          DFD       A0,ARF
)@@G@@4              . POS ARG@E@@@@          A         A0,A2              . MRG
)@@G@@ULTIPLY BY  2**I  @ @@@@          J         2,X11     @ @@@@NEGARG    DFRH
)@@G@@D       A4,A0     @ @@@@          DL        A0,A4     @E@@@@          ANRI
)@@G@@        A0,A2              . DIVIDE BY 2**I     @ @@@@          J       RJ
)@@G@@  2,X11     @ @@@@RANGE     DSL       A0,72     @^@@@@          TP      RK
)@@G@@  R3  @F@@@@          J         2,X11              . ARG IS LESS THAN -7RL
)@@G@@09.089@F@@@@          J         NERR$              . ARGUMENT IS OUT OF RM
)@@G@@RANGE @ @@@@CHECK     L,U       A1,020014 @ @@@@          LDSL      A0,5RN
)@@G@@7     @ @@@@          DJZ       A4,2,X11  @E@@@@          J         NERRRO
)@@G@@$              . ARG UNNORMALIZED   @[@@@@$(2)  @^@@@@Y         RES     RP
)@@G@@  2   @A@@@@LOG2      +         0200054271027   @A@@@@          +       RQ
)@@G@@  0757507173631   @A@@@@RLOG2     +         0200156125073   @A@@@@      RR
)@@G@@    +         0122560277415   @ @@@@ORDER     +         -4,12     @C@@@@RS
)@@G@@COEFF     +         0204256312146      . P0     @^@@@@          +       RT
)@@G@@  0   @C@@@@          +         0204156312146      . P1     @^@@@@      RU
)@@G@@    +         0   @C@@@@          +         0203752646750      . P2     RV
)@@G@@@^@@@@          +         0   @C@@@@          +         0203457453220   RW
)@@G@@   . P3     @^@@@@          +         0   @C@@@@          +         0203RX
)@@G@@142466600      . P4     @^@@@@          +         0   @C@@@@          + RY
)@@G@@        0202541162000      . P5     @^@@@@          +         0   @C@@@@RZ
)@@G@@          +         0202047300000      . P6     @^@@@@          +       SA
)@@G@@  0   @C@@@@          +         0201255000000      . P7     @^@@@@      SB
)@@G@@    +         0   @A@@@@TABLE     +         0200142712701   @A@@@@      SC
)@@G@@    +         0707652136557   @A@@@@          +         0200151377326   SD
)@@G@@@A@@@@          +         0523305211616   @A@@@@          +         0200SE
)@@G@@161263452   @A@@@@          +         0042524066655   @A@@@@          + SF
)@@G@@        0200172540306   @A@@@@          +         0717564441623   @ @@@@SG
)@@G@@NAME      +         'DEXP  '  @#@@@@          END     ___4,COEFF+2,A2   SH
)@@G@@   . ODD EXPONENTS@ @@@@          DFM       A0,R*[S@@@*SDFF*@D@@@@.     SI
)@@G@@    U OF MD  DOUBLE PRECISION GAMMA ROUTINE     @F@@@@.         ALGORITHSJ
)@@G@@M IS FROM COLLECTED ALGORITHMS FROM CACM # 309  @G@@@@.         VARIABLESK
)@@G@@S ARE NAMED AS IN REFERENCE ABOVE EXCEPT W WHICH IS V @C@@@@.         ARSL
)@@G@@GUEMENT RANGE:   -170 <= ARG <= 170 @F@@@@.         OUT OF RANGE AND NEGSM
)@@G@@ATIVE INTEGERS CAUSE ERROR RETURN   @ @@@@.         CALLING SEQUENCE:   SN
)@@G@@@B@@@@.         A     LMJ   X11,DGAMMA      .   @E@@@@.         A+1   + SO
)@@G@@    ARG             . LOCATION OF ARG     @E@@@@.         A+2   +     RESP
)@@G@@SULT          . LOCATION OF RESULT  @D@@@@.         A+3   J             SQ
)@@G@@        . ERROR RETURN  @D@@@@.         A+4   +     SEQNUM,PROGNAM  . WASR
)@@G@@LKBACK WORD @D@@@@.         A+5                         . NORMAL RETURN SS
)@@G@@@C@@@@.         CODED BY J. ROUNTREE, FEBRUARY 1, 1971@[@@@@.     @#@@@@ST
)@@G@@          AXR$ .  @[@@@@$(1). @B@@@@          NOP       0,WBCK$         SU
)@@G@@  .   @C@@@@DGAMMA*   SX        X11,WBCK$+1       . SAVE X11@E@@@@      SV
)@@G@@    LA        A3,NCDOF$         . SAVE ERROR FLAG     @B@@@@          SASW
)@@G@@        A3,TRAP$          .   @B@@@@          SZ        NCDOF$          SX
)@@G@@  .   @B@@@@          SZ        A3                .   @D@@@@          DLSY
)@@G@@        A0,*0,X11         . PICK UP ARG   @C@@@@          DS        A0,ZSZ
)@@G@@              . Z = ARG @D@@@@          DL        A4,A0             . TETA
)@@G@@MP SAVE Z   @F@@@@          DLM       A2,A4             . TEST -170 <= ZTB
)@@G@@ <= 170     @B@@@@          DFAN      A2,(+170.0D)      .   @B@@@@      TC
)@@G@@    TZ        A2                .   @B@@@@          JP        A2,P$0095 TD
)@@G@@        .   @G@@@@          DFAN      A0,(+23.0D)       . TEST Z < 23 FOTE
)@@G@@R ITERATIVE MULTIP@B@@@@          TZ        A0                .   @B@@@@TF
)@@G@@          JP        A0,P$0055         .   @E@@@@          DL        A0,ATG
)@@G@@4             . TEST Z FOR INTEGER  @G@@@@          DFA       A0,NORMZ  TH
)@@G@@        . GET INTEGER PART BY NORMALIZED 0@B@@@@          DFAN      A0,ATI
)@@G@@4             .   @B@@@@          JNZ       A0,P$0040         .   @G@@@@TJ
)@@G@@          TLE,U     A4,1              . TEST INTEGER Z FOR POSITIVE     TK
)@@G@@@B@@@@          J         P$0095            .   @B@@@@          DL      TL
)@@G@@  A0,(+1.0D)        .   @E@@@@P$0030    DL        A2,A4             . Z TM
)@@G@@POSITIVE INTEGER  @E@@@@          DFAN      A2,(+2.0D)        . TEST FORTN
)@@G@@ END OF LOOP@B@@@@          TLE,U     A2,1              .   @B@@@@      TO
)@@G@@    J         P$0090            .   @D@@@@          DFAN      A4,(+1.0D)TP
)@@G@@        . DECREMENT     @F@@@@          DFM       A0,A4             . MUTQ
)@@G@@LTIPLY CUMULATIVELY     @B@@@@          J         P$0030            .   TR
)@@G@@@D@@@@P$0040    JP        A4,P$0055         . TEST REAL Z   @E@@@@      TS
)@@G@@    DL        A0,A4             . Z NEGATIVE REAL     @G@@@@          DFTT
)@@G@@A       A0,NORMZ          . GET INTEGER PART BY NORMALIZED 0@B@@@@      TU
)@@G@@    DLN       A0,A0             .   @B@@@@          DFA       A0,A4     TV
)@@G@@        .   @B@@@@          DLM       A0,A0             .   @B@@@@      TW
)@@G@@    DFM       A0,PI             .   @B@@@@          DS        A0,DELTA  TX
)@@G@@        .   @B@@@@          DL        A0,(+1.0D)        .   @B@@@@      TY
)@@G@@    DFAN      A0,A4             .   @B@@@@          DS        A0,TM$    TZ
)@@G@@        .   @G@@@@          LMJ       X11,LOGGAM        . GAM(Z)=PI/(DSIUA
)@@G@@N(PI*Z)*GAM(1-Z)) @B@@@@          +         TM$               .   @B@@@@UB
)@@G@@          +         $,WBCK$           .   @B@@@@          DS        A0,TUC
)@@G@@M$            .   @B@@@@          LMJ       X11,DSIN          .   @B@@@@UD
)@@G@@          +         DELTA             .   @B@@@@          +         $,WBUE
)@@G@@CK$           .   @B@@@@          DL        A2,PI             .   @B@@@@UF
)@@G@@          DFD       A2,A0             .   @B@@@@          DS        A2,TUG
)@@G@@M$+2          .   @B@@@@          LMJ       X11,DLOG          .   @B@@@@UH
)@@G@@          +         TM$+2             .   @B@@@@          +         $,WBUI
)@@G@@CK$           .   @B@@@@          DFAN      A0,TM$            .   @B@@@@UJ
)@@G@@          DS        A0,EX             .   @B@@@@          LMJ       X11,UK
)@@G@@DEXP          .   @B@@@@          +         EX                .   @B@@@@UL
)@@G@@          +         $,WBCK$           .   @G@@@@          DL        A2,ZUM
)@@G@@              . COMPUTE PARITY(Z) TO GET SIGN   @E@@@@          DFA     UN
)@@G@@  A2,NORMZ          . GET INTEGER PART    @B@@@@          DL        A4,AUO
)@@G@@2             .   @B@@@@          DFD       A4,(+2.0D)        .   @E@@@@UP
)@@G@@          DFA       A4,NORMZ          . GET INTEGER PART    @B@@@@      UQ
)@@G@@    DFM       A4,(+2.0D)        .   @B@@@@          DFAN      A4,A2     UR
)@@G@@        .   @B@@@@          DFAN      A4,(1.0D)         .   @B@@@@      US
)@@G@@    JZ        A4,P$0090         .   @F@@@@          DLN       A0,A0     UT
)@@G@@        . GAM(EVEN Z)=-DEXP(EX)     @B@@@@          J         P$0090    UU
)@@G@@        .   @E@@@@P$0055    LMJ       X11,LOGGAM        . Z POSITIVE REAUV
)@@G@@L     @F@@@@          +         Z                 . GAM(Z)=DEXP(LOGGAM(ZUW
)@@G@@))    @B@@@@          +         $,WBCK$           .   @B@@@@          DSUX
)@@G@@        A0,TM$            .   @B@@@@          LMJ       X11,DEXP        UY
)@@G@@  .   @B@@@@          +         TM$               .   @B@@@@          + UZ
)@@G@@        $,WBCK$           .   @D@@@@P$0090    LX        X11,WBCK$+1     VA
)@@G@@  . RESTORE X11   @F@@@@          DS        A0,*1,X11         . PUT RESUVB
)@@G@@LT IN CALL SEQ    @D@@@@          J         4,X11             . NORMAL RVC
)@@G@@ETURN @D@@@@P$0095    LX        X11,WBCK$+1       . RESTORE X11   @D@@@@VD
)@@G@@          LA        A3,NCDOF$         . GET ERROR FLAG@C@@@@          JNVE
)@@G@@Z       A3,NERR$          . TEST IT @D@@@@          LA        A3,TRAP$  VF
)@@G@@        . RESTORE IT    @B@@@@          SA        A3,NCDOF$         .   VG
)@@G@@@D@@@@          J         2,X11             . ERROR RETURN  @[@@@@$(2). VH
)@@G@@@B@@@@WBCK$     +         'DGAMMA'          .   @B@@@@          +       VI
)@@G@@  0                 .   @B@@@@PI        +         0200262207732     .   VJ
)@@G@@@B@@@@          +         0504205506043     .   @B@@@@NORMZ     +       VK
)@@G@@  0207400000000     .   @B@@@@          +         0000000000000     .   VL
)@@G@@@B@@@@Z         RES       2                 .   @B@@@@DELTA     RES     VM
)@@G@@  2                 .   @B@@@@EX        RES       2                 .   VN
)@@G@@@B@@@@TM$       RES       4                 .   @B@@@@TRAP$     RES     VO
)@@G@@  1                 .   @F@@@@/.        LOGGAM COMPUTES LOG OF GAMMA FUNVP
)@@G@@CTION OF POSITIVE ARG T @E@@@@.         IF T < TMIN THEN T IS INCREASED VQ
)@@G@@BY INTEGER VALUE  @[@@@@.     @[@@@@$(1). @B@@@@          NOP       0,WBVR
)@@G@@CK$A          .   @C@@@@LOGGAM    SX        X11,WBCK$A+1      . SAVE X11VS
)@@G@@@E@@@@          LA        A3,NCDOF$         . SAVE ERROR FLAG     @B@@@@VT
)@@G@@          SA        A3,TRAP$A         .   @B@@@@          SZ        NCDOVU
)@@G@@F$            .   @B@@@@          SZ        A3                .   @D@@@@VV
)@@G@@          DL        A0,*0,X11         . PICK UP ARG   @C@@@@          DSVW
)@@G@@        A0,T              . T = ARG @D@@@@          DL        A4,A0     VX
)@@G@@        . TEST FOR MIN T@B@@@@          DFAN      A4,TMIN           .   VY
)@@G@@@B@@@@          TLE,U     A4,1              .   @B@@@@          J       VZ
)@@G@@  Q$0020            .   @D@@@@          LMJ       X11,LGM           . T WA
)@@G@@IN RANGE    @B@@@@          +         T                 .   @B@@@@      WB
)@@G@@    +         $,WBCK$A          .   @D@@@@          J         Q$0060    WC
)@@G@@        . GO TO RETURN  @B@@@@Q$0020    DS        A0,F              .   WD
)@@G@@@B@@@@Q$0030    DL        A0,T              .   @F@@@@          DFA     WE
)@@G@@  A0,(+1.0D)        . LN(GAM(T))=LN(GAM(T+K))   @G@@@@          DS      WF
)@@G@@  A0,T              .            -LN(*(T+I) I=0,K-1)  @F@@@@          DFWG
)@@G@@AN      A0,TMIN           . NOTE: *(T+I) MEANS PRODUCT@B@@@@          JPWH
)@@G@@        A0,Q$0050         .   @B@@@@          JZ        A0,Q$0050       WI
)@@G@@  .   @B@@@@          DL        A0,F              .   @B@@@@          DFWJ
)@@G@@M       A0,T              .   @B@@@@          DS        A0,F            WK
)@@G@@  .   @B@@@@          J         Q$0030            .   @E@@@@Q$0050    LMWL
)@@G@@J       X11,DLOG          . LN(*(T+I) I=0,K-1)  @B@@@@          +       WM
)@@G@@  F                 .   @B@@@@          +         $,WBCK$A          .   WN
)@@G@@@B@@@@          DS        A0,TM$            .   @D@@@@          LMJ     WO
)@@G@@  X11,LGM           . LN(GAM(T+K))  @B@@@@          +         T         WP
)@@G@@        .   @B@@@@          +         $,WBCK$A          .   @B@@@@      WQ
)@@G@@    DFAN      A0,TM$            .   @D@@@@Q$0060    LX        X11,WBCK$AWR
)@@G@@+1      . RESTORE X11   @D@@@@          LA        A3,NCDOF$         . GEWS
)@@G@@T ERROR FLAG@C@@@@          JNZ       A3,NERR$          . TEST IT @D@@@@WT
)@@G@@          LA        A3,TRAP$A         . RESTORE IT    @B@@@@          SAWU
)@@G@@        A3,NCDOF$         .   @C@@@@          J         2,X11           WV
)@@G@@  . RETURN  @[@@@@$(2). @B@@@@WBCK$A    +         'LOGGAM'          .   WW
)@@G@@@B@@@@          +         0                 .   @B@@@@TMIN      +       WX
)@@G@@  0200440000000     .   @B@@@@          +         0000000000000     .   WY
)@@G@@@B@@@@T         RES       2                 .   @B@@@@F         RES     WZ
)@@G@@  2                 .   @B@@@@TRAP$A    RES       1                 .   XA
)@@G@@@C@@@@/.        LGM EVALUATES LOG OF GAMMA FUNCTION   @D@@@@.         ACXB
)@@G@@CORDING TO STIRLING ASYMPTOTIC SERIES     @[@@@@.     @[@@@@$(1). @B@@@@XC
)@@G@@          NOP       0,WBCK$B          .   @C@@@@LGM       SX        X11,XD
)@@G@@WBCK$B+1      . SAVE X11@E@@@@          LA        A3,NCDOF$         . SAXE
)@@G@@VE ERROR FLAG     @B@@@@          SA        A3,TRAP$B         .   @B@@@@XF
)@@G@@          SZ        NCDOF$            .   @B@@@@          SZ        A3  XG
)@@G@@              .   @D@@@@          DL        A2,*0,X11         . PICK UP XH
)@@G@@ARG   @F@@@@          DS        A2,V              . V = ARG; W IN REFEREXI
)@@G@@NCE   @F@@@@          DS        A2,DEN            . LN(GAM(V))=(V-1/2)*LXJ
)@@G@@N(V)-V@F@@@@          DFM       A2,V              .            +LN(SQRT(XK
)@@G@@2*PI))@G@@@@          DS        A2,W2             .            + STIRLINXL
)@@G@@G ASYMPT SER@B@@@@          LMJ       X11,DLOG          .   @B@@@@      XM
)@@G@@    +         V                 .   @B@@@@          +         $,WBCK$B  XN
)@@G@@        .   @B@@@@          DL        A2,V              .   @B@@@@      XO
)@@G@@    DFAN      A2,(+0.5D)        .   @D@@@@          DFM       A2,A0     XP
)@@G@@        . TIMES LN(V)   @B@@@@          DFAN      A2,V              .   XQ
)@@G@@@E@@@@          DFA       A2,CONST          . ADD LN(SQRT(2*PI))  @B@@@@XR
)@@G@@          DS        A2,PRESUM         .   @B@@@@          LXI,U     A2,2XS
)@@G@@              .   @B@@@@          LXM,U     A2,0              .   @B@@@@XT
)@@G@@          LA,U      A3,19             .   @F@@@@F$0024    DL        A0,CXU
)@@G@@,*A2          . STIRLING ASYMPTOTIC SERIES@B@@@@          DFD       A0,DXV
)@@G@@EN            .   @B@@@@          DFA       A0,PRESUM         .   @B@@@@XW
)@@G@@          DS        A0,SUM            .   @G@@@@          DFAN      A0,PXX
)@@G@@RESUM         . TEST FOR INSIGNIFICANT SER TERMS@B@@@@          JZ      XY
)@@G@@  A0,N$0030         .   @B@@@@          DL        A0,DEN            .   XZ
)@@G@@@B@@@@          DFM       A0,W2             .   @B@@@@          DS      YA
)@@G@@  A0,DEN            .   @B@@@@          DL        A0,SUM            .   YB
)@@G@@@B@@@@          DS        A0,PRESUM         .   @B@@@@          JGD     YC
)@@G@@  A3,F$0024         .   @B@@@@N$0030    DL        A0,SUM            .   YD
)@@G@@@D@@@@          LX        X11,WBCK$B+1      . RESTORE X11   @D@@@@      YE
)@@G@@    LA        A3,NCDOF$         . GET ERROR FLAG@C@@@@          JNZ     YF
)@@G@@  A3,NERR$          . TEST IT @D@@@@          LA        A3,TRAP$B       YG
)@@G@@  . RESTORE IT    @B@@@@          SA        A3,NCDOF$         .   @C@@@@YH
)@@G@@          J         2,X11             . RETURN  @[@@@@$(2). @B@@@@WBCK$BYI
)@@G@@    +         'LGM   '          .   @B@@@@          +         0         YJ
)@@G@@        .   @E@@@@C         +         0177552525252     . BERNOULLI NUMBYK
)@@G@@ERS   @B@@@@          +         0525252525252     .   @B@@@@          + YL
)@@G@@        0600722372237     .   @B@@@@          +         0223722372237   YM
)@@G@@  .   @B@@@@          +         0176664006400     .   @B@@@@          + YN
)@@G@@        0640064006400     .   @B@@@@          +         0601130773077   YO
)@@G@@  .   @B@@@@          +         0307730773077     .   @B@@@@          + YP
)@@G@@        0176667124361     .   @B@@@@          +         0261437710653   YQ
)@@G@@  .   @B@@@@          +         0601001125171     .   @B@@@@          + YR
)@@G@@        0146330340677     .   @B@@@@          +         0177164406440   YS
)@@G@@  .   @B@@@@          +         0644064406440     .   @B@@@@          + YT
)@@G@@        0600403365711     .   @B@@@@          +         0517025432021   YU
)@@G@@  .   @B@@@@          +         0177655772261     .   @B@@@@          + YV
)@@G@@        0601700637775     .   @B@@@@          +         0577623342307   YW
)@@G@@  .   @B@@@@          +         0756374061411     .   @B@@@@          + YX
)@@G@@        0200465471041     .   @B@@@@          +         0442634001323   YY
)@@G@@  .   @B@@@@          +         0576730623326     .   @B@@@@          + YZ
)@@G@@        0643146371252     .   @B@@@@          +         0201442210647   ZA
)@@G@@  .   @B@@@@          +         0201551640332     .   @B@@@@          + ZB
)@@G@@        0575734571472     .   @B@@@@          +         0436166522012   ZC
)@@G@@  .   @B@@@@          +         0202452150404     .   @B@@@@          + ZD
)@@G@@        0232334106434     .   @B@@@@          +         0574705675662   ZE
)@@G@@  .   @B@@@@          +         0353645452103     .   @B@@@@          + ZF
)@@G@@        0203555512320     .   @B@@@@          +         0366206355714   ZG
)@@G@@  .   @B@@@@          +         0573527353563     .   @B@@@@          + ZH
)@@G@@        0046067144225     .   @B@@@@          +         0204750335715   ZI
)@@G@@  .   @B@@@@          +         0711650011163     .   @B@@@@          + ZJ
)@@G@@        0572322777644     .   @B@@@@          +         0103760534675   ZK
)@@G@@  .   @B@@@@CONST     +         0200072637616     .   @B@@@@          + ZL
)@@G@@        0206227655121     .   @B@@@@V         RES       2               ZM
)@@G@@  .   @B@@@@DEN       RES       2                 .   @B@@@@W2        REZN
)@@G@@S       2                 .   @B@@@@PRESUM    RES       2               ZO
)@@G@@  .   @B@@@@TRAP$B    RES       1                 .   @B@@@@SUM       REZP
)@@G@@S       2                 .   @#@@@@          END     ___ GET ERROR FLAGZQ
)@@G@@@C@@@@          JNZ       A3,NERR$          . TEST IT @D@@@@          LAZR
)@@G@@*[S@@@*SDFF*@B@@@@.   FORTRAN V LIBRARY UNDER 1108 EXEC.    @[@@@@.     ZS
)@@G@@@F@@@@.                   DOUBLE PRECISION NATURAL LOGARITHM OF DOUBLE  ZT
)@@G@@@B@@@@.                   PRECISION ARGUMENT.   @[@@@@.     @F@@@@.     ZU
)@@G@@              LOG(ARG)=LOG(2**B*F)=B*LOG(2)+LOG(A)-LOG(A/F) @E@@@@.     ZV
)@@G@@              WHERE  A.GE. 1/2.  AND  A.LE. 31/32.    @[@@@@.     @B@@@@ZW
)@@G@@.                   FUNCTION REFERENCE:   @C@@@@.                    A  ZX
)@@G@@      LMJ       X11,DLOG@C@@@@.                    A+1      +         LOZY
)@@G@@C(ARG)@B@@@@.                    A+2      ( W.B.)     @C@@@@.           ZZ
)@@G@@         A+3      NORMAL RETURN     @[@@@@.     @G@@@@.                 AA
)@@G@@  CONTROL GOES TO NERR$ IF THE ARG IS ZERO, NEGATIVE  @A@@@@.           AB
)@@G@@        OR UNNORMALIZED @[@@@@.     @D@@@@.                   NUMBER OF AC
)@@G@@INSTRUCTIONS:       33  @D@@@@.                   NUMBER OF DATA LOCATIOAD
)@@G@@NS:     52  @D@@@@.                   TOTAL INSTRUCTIONS PLUS DATA: 85  AE
)@@G@@@F@@@@.                   TIME REQR'D FOR COMPUTATION:  99.905 MICRO SECAF
)@@G@@@#@@@@          AXR$.   @#@@@@$(2)      LIT     @[@@@@$(1)  @ @@@@      AG
)@@G@@    NOP       0,NAME    @^@@@@DLOG*      SZ        A3 @ @@@@           LAH
)@@G@@A,U      A0,*0,X11@ @@@@          LA        A4,(076,0)@ @@@@          DFAI
)@@G@@U       A0,0,A0   @A@@@@          TLE       A1,(040000000)  @ @@@@      AJ
)@@G@@    J         NERR$     @ @@@@          AND       A4,A1     @ @@@@      AK
)@@G@@    DL        A3,A1     @ @@@@          A         A1,A5     @ @@@@      AL
)@@G@@    ANA       A3,A5     @ @@@@          ANA,U     A0,1024   @^@@@@      AM
)@@G@@    S         A0,B@F@@@@          L,U       A0,155             . AVOID OAN
)@@G@@VER- OR UNDERFLOW @ @@@@          DFP       A0,A1     @D@@@@          DSAO
)@@G@@        A1,R1              . STORE DIVISOR@ @@@@          DFP       A0,AAP
)@@G@@3     @D@@@@          DFD       A1,R1              . Z=(F-A)/(F+A)@C@@@@AQ
)@@G@@          DS        A1,R1              . STORE Z@^@@@@          LR,U    AR
)@@G@@  R3,4@ @@@@          S         A5,INDEX  @ @@@@          LX        A3,OAS
)@@G@@RDER  @C@@@@          DFM       A1,A1              . Z*Z    @A@@@@      AT
)@@G@@    DL        A4,COEFF,*A3    @ @@@@LOOP      DFM       A4,A1     @A@@@@AU
)@@G@@          DFA       A4,COEFF,*A3    @ @@@@          JGD       R3,LOOP   AV
)@@G@@@ @@@@          DFM       A4,R1     @^@@@@          LCF       A0,B@F@@@@AW
)@@G@@          FEL       A0,A1              . ARG'S EXPONENT OF 2 IN DP@D@@@@AX
)@@G@@          DFM       A0,TABLE           . B*LOG(2)     @ @@@@          L,AY
)@@G@@H1      A2,INDEX  @E@@@@          DFAN      A0,A4              . SUBTRACAZ
)@@G@@T LOG(A/F)  @D@@@@          DFAN      A0,TABLE-32,A2     . ADD LOG(A)   BA
)@@G@@@ @@@@          J         2,X11     @[@@@@$(2)  @^@@@@B         +       BB
)@@G@@  0   @^@@@@INDEX     +         0   @ @@@@ORDER     +         -2,10     BC
)@@G@@@A@@@@COEFF     +        0577537777777    @A@@@@          +        07777BD
)@@G@@77777777    @A@@@@          +        0577725252525    @A@@@@          + BE
)@@G@@       0252525252525    @A@@@@          +        0600014631463    @A@@@@BF
)@@G@@          +        0146314631463    @A@@@@          +        06000333333BG
)@@G@@33    @A@@@@          +        0333333333333    @A@@@@          +       BH
)@@G@@ 0600107070707    @A@@@@          +        0070707070707    @A@@@@      BI
)@@G@@    +        0600121350564    @A@@@@          +        0272135056427    BJ
)@@G@@@A@@@@TABLE     +        0200054271027    @A@@@@          +        07575BK
)@@G@@07173631    @A@@@@          +        0200050366377    @A@@@@          + BL
)@@G@@       0457444361146    @A@@@@          +        0200044645420    @A@@@@BM
)@@G@@          +        0423233344473    @A@@@@          +        02000412716BN
)@@G@@67    @A@@@@          +        0055012476440    @A@@@@          +       BO
)@@G@@ 0177774122120    @A@@@@          +        0642344663310    @A@@@@      BP
)@@G@@    +        0177765724512    @A@@@@          +        0444431564062    BQ
)@@G@@@A@@@@          +        0177757753721    @A@@@@          +        06754BR
)@@G@@02506765    @A@@@@          +        0177752212560    @A@@@@          + BS
)@@G@@       0163424365746    @A@@@@          +        0177744645420    @A@@@@BT
)@@G@@          +        0423233344472    @A@@@@          +        01776771443BU
)@@G@@43    @A@@@@          +        0313166336275    @A@@@@          +       BV
)@@G@@ 0177665117551    @A@@@@          +        0710533170666    @A@@@@      BW
)@@G@@    +        0177653375003    @A@@@@          +        0265207554374    BX
)@@G@@@A@@@@          +        0177642136164    @A@@@@          +        00423BY
)@@G@@74436756    @A@@@@          +        0177562315362    @A@@@@          + BZ
)@@G@@       0725451142125    @A@@@@          +        0177541026305    @A@@@@CA
)@@G@@          +        0531707201503    @A@@@@          +        01774404053CB
)@@G@@54    @A@@@@          +        0236350421067    @ @@@@NAME      +       CC
)@@G@@ 'DLOG  '   @#@@@@          END     ___       S         A5,INDEX  @ @@@@CD
)@@G@@          LX        A3,ORDER  @C@@@@          DFM       A1,A1           CE
)@@G@@   . Z*Z    @A@@@@      *[S@@@*SDFF*@B@@@@.  FORTRAN V LIBRARY UNDER 110CF
)@@G@@8 EXEC.     @[@@@@.     @H@@@@.                   DOUBLE PRECISION SINE CG
)@@G@@AND COSINE FUNCTION OF A DOUBLE     @B@@@@.                   PRECISION CH
)@@G@@ARGUMENT.   @[@@@@.     @H@@@@.                   THE FUNCTION CODE, SIGCI
)@@G@@N AND MAGNITUDE OF THE ARGUMENT     @I@@@@.                   DETERMINE CJ
)@@G@@IF A SINE OR A COSINE POLYNOMIAL OF AN INDEPENDENT    @H@@@@.           CK
)@@G@@        VARIABLE Z IS COMPUTED. Z IS THE RESULT OF AN ARGUMENT    @I@@@@CL
)@@G@@.                   REDUCTION. ITS ABSOLUTE VALUE IS LESS THAN OR EQUAL CM
)@@G@@TO 1.0 .    @H@@@@.                   THE SINE POLYNOMIAL IS OF 15-TH ANCN
)@@G@@D THE COSINE POLYNOMIAL @A@@@@.                   OF 14-TH DEGREE.@C@@@@CO
)@@G@@.                   FUNCTION REFERENCE FOR DSIN:@C@@@@.                 CP
)@@G@@  A         LMJ       X11,DSIN@H@@@@.                   A+1       +     CQ
)@@G@@    LOC(X)         . ADDRESS OF ARGUMENT X@G@@@@.                   A+2 CR
)@@G@@      +         SEQNUM,PRGNAM  . WALK BACK WD.  @G@@@@.                 CS
)@@G@@  A+3                                . NORMAL RETURN  @C@@@@.           CT
)@@G@@        FUNCTION REFERENCE FOR DCOS:@C@@@@.                   B         CU
)@@G@@LMJ       X11,DCOS@H@@@@.                   B+1       +         LOC(Y)  CV
)@@G@@       . ADDRESS OF ARGUMENT Y@G@@@@.                   B+2       +     CW
)@@G@@    SEQNUM,PRGNAM  . WALK BACK WD.  @G@@@@.                   B+3       CX
)@@G@@                         . NORMAL RETURN  @[@@@@.     @I@@@@.           CY
)@@G@@        THERE IS ERROR TERMINATION IF THE ARGUMENT IS UNNORMALIZED.     CZ
)@@G@@@I@@@@.                   CONTROL GOES TO NERR$ IF THE ARSOLUTE VALUE OFDA
)@@G@@ THE ARGUMENT     @D@@@@.                   EQUALS OR EXCEEDS PI*2.0**55DB
)@@G@@ .    @[@@@@.     @C@@@@.                   NUMBER OF INSTRUCTIONS: 53  DC
)@@G@@@C@@@@.                   SIZE OF DATA AREA     : 41  @C@@@@.           DD
)@@G@@        TOTAL CORE REQUIREMENT: 94  @I@@@@.                   AVERAGE TIDE
)@@G@@ME REQUIRED FOR DSIN IF ABS(X)<PI/4: 79.50 MICRO S    @I@@@@.           DF
)@@G@@        AVERAGE TIME REQUIRED FOR DSIN IF ABS(X)>PI/4: 83.69 MICRO S    DG
)@@G@@@I@@@@.                   AVERAGE TIME REQUIRED FOR DCOS IF ABS(Y)<PI/4:DH
)@@G@@ 75.25 MICRO S    @I@@@@.                   AVERAGE TIME REQUIRED FOR DCDI
)@@G@@OS IF ABS(Y)<PI/4: 79.44 MICRO S    @^@@@@          AXR$      .   @#@@@@DJ
)@@G@@$(2)      LIT     @[@@@@$(1)  @A@@@@          NOP       0,('DCOS  ')    DK
)@@G@@@E@@@@DCOS*     L,U       A0,2               . SET FUNCTION CODE  @^@@@@DL
)@@G@@           SZ       A3  @C@@@@          L,U       A1,*0,X11      .  ADDRDM
)@@G@@ESS   @F@@@@          SZ        R1                 . POS SIGN FOR ARG OFDN
)@@G@@ DCOS @B@@@@          J         GETMAG            .   @A@@@@          NODO
)@@G@@P       0,('DSIN  ')    @^@@@@DSIN*     SZ        A0  @^@@@@          SZDP
)@@G@@        A3  @ @@@@          L,U       A1,*0,X11 @ @@@@          LR      DQ
)@@G@@  R1,0,A1   @B@@@@GETMAG    DLM       A4,0,A1           .   @A@@@@      DR
)@@G@@    TEP       A4,(0400040,0)  @^@@@@          J         $+3 @ @@@@      DS
)@@G@@    DJZ       A4,$+2    @E@@@@          J         NERR$              . ADT
)@@G@@RG IS UNNORMALIZED@E@@@@          DFM       A4,F4OVPI          . DIVIDE DU
)@@G@@BY PI/4     @ @@@@          DFU       A3,A4     @E@@@@          TLE,U   DV
)@@G@@  A3,02001           . IS Y LESS THAN PI/4@G@@@@          J         SMALDW
)@@G@@L              . YES, GO TO SMALL ANGLE TEST    @ @@@@          TG,U    DX
)@@G@@  A3,02072  @H@@@@          J         NERR$              . ABS(ARG) GREADY
)@@G@@TER OR EQUAL PI*2**55   @H@@@@          LDSL      A4,0176011,A3      . EDZ
)@@G@@LIMINATE INTEGRAL PART OF ARG/(2*PI)@ @@@@          L         A1,A4     EA
)@@G@@@^@@@@          LDSL      A4,3@A@@@@          DSL       A4,0176014,A3   EB
)@@G@@@G@@@@BACK      DFP       A3,A4              . NON-NEGATIVE AND LESS THAEC
)@@G@@N 1.0 @D@@@@          SSL       A1,33              . K=0,1,....,7 @D@@@@ED
)@@G@@          JNB       A1,$+2             . IS K ODD     @E@@@@          DFEE
)@@G@@AN      A4,ONE             . YES, SUBTRACT 1.0  @E@@@@          AU,XU   EF
)@@G@@  A1,1,A0            . K+1+(FUNCTION CODE)@^@@@@          SSC       A2,3EG
)@@G@@@I@@@@          XOR       A2,R1              . SIGN TO BE APPLIED TO VALEH
)@@G@@UE OF POLYNOM.    @^@@@@          A,U       A1,1@^@@@@          AND,U   EI
)@@G@@  A1,2@G@@@@          XOR       A0,A2              . 0 IF SI,  2 IF CO PEJ
)@@G@@OLYNOMIAL   @G@@@@          AU        A1,(-4,22)         . SET FOR INDEXEK
)@@G@@ MODIFICATION     @^@@@@          LR,U      R3,6@D@@@@          DS      EL
)@@G@@  A4,R1              . ABS(Z).LE.1.0@ @@@@          DFM       A4,A4     EM
)@@G@@@E@@@@          DL        A0,COEFF+6,A2      . GET S15 OR C14     @ @@@@EN
)@@G@@LOOP      DFM       A0,A4     @E@@@@          DFA       A0,COEFF+2,*A2  EO
)@@G@@   . ADD COEFFICIENT    @ @@@@          JGD       R3,LOOP   @H@@@@      EP
)@@G@@    J         $+7,A2             . GO TO $+1 IF SI,  GO TO $+3 IF CO    EQ
)@@G@@@E@@@@          DFM       A0,R1              . SI, MULTIPLY BY Z  @G@@@@ER
)@@G@@          JP        A3,2,X11           . EXIT IF SI AND SIGN IS POS.    ES
)@@G@@@G@@@@          JP        A3,2,X11           . EXIT IF CO AND SIGN IS POET
)@@G@@S     @G@@@@          DLN       A0,A0              . CHANGE SIGN OF POLYEU
)@@G@@NOM.VALUE   @ @@@@          J         2,X11     @G@@@@SMALL     TG,U    EV
)@@G@@  A3,01741           . IS ABS(ARG) LESS THAN PI*2**-35@E@@@@          J EW
)@@G@@        BACK               . NO GO BACK WITH K=0@E@@@@          JZ      EX
)@@G@@  A0,BACK            . GO BACK IF DSIN    @F@@@@          DL        A0,OEY
)@@G@@NE             . DCOS, FUNCTION VALUE =1.0@ @@@@          J         2,X1EZ
)@@G@@1     @[@@@@$(2)  @C@@@@F4OVPI    +         0200150574603      . 4/PI   FA
)@@G@@@A@@@@          +         0334471040522   @ @@@@ONE       +         0200FB
)@@G@@140,0 @^@@@@          +         0   @C@@@@COEFF     +         0200062207FC
)@@G@@732      . S1     @A@@@@          +         0504205506043   @C@@@@      FD
)@@G@@    +         0200077777777      . C0     @A@@@@          +         0777FE
)@@G@@777777777   @C@@@@          +         0600226521030      . S3     @A@@@@FF
)@@G@@          +         0635510153246   @C@@@@          +         0600030413FG
)@@G@@031      . C2     @A@@@@          +         0544067210334   @C@@@@      FH
)@@G@@    +         0177050632743      . S5     @A@@@@          +         0167FI
)@@G@@265263656   @C@@@@          +         0177340360370      . C4     @A@@@@FJ
)@@G@@          +         0201553253032   @C@@@@          +         0601531513FK
)@@G@@231      . S7     @A@@@@          +         0431653737666   @C@@@@      FL
)@@G@@    +         0601225213034      . C6     @A@@@@          +         0034FM
)@@G@@155701277   @C@@@@          +         0175352036032      . S9     @A@@@@FN
)@@G@@          +         0204720636777   @C@@@@          +         0175674175FO
)@@G@@203      . C8     @A@@@@          +         0203254167125   @C@@@@      FP
)@@G@@    +         0603403476132      . S11    @A@@@@          +         0731FQ
)@@G@@605034726   @C@@@@          +         0603013113411      . C10    @A@@@@FR
)@@G@@          +         0606631702662   @C@@@@          +         0173375073FS
)@@G@@405      . S13    @A@@@@          +         0272503740004   @C@@@@      FT
)@@G@@    +         0173777163040      . C12    @A@@@@          +         0464FU
)@@G@@216207110   @C@@@@          +         0605422366261      . S15    @A@@@@FV
)@@G@@          +         0521204227213   @C@@@@          +         0605011546FW
)@@G@@636      . C14    @A@@@@          +         0277427523426   @#@@@@      FX
)@@G@@    END     ___4,A4     @E@@@@          DL        A0,COEFF+6,A2      . GFY
)@@G@@ET S15 OR C14     @ @@@@*[S@@@*SDFF*@B@@@@.   FORTRAN V LIBRARY UNDER 11FZ
)@@G@@08 EXEC.    @[@@@@.     @#@@@@        AXR$.     @F@@@@.       FORTRAN LIGA
)@@G@@BRARY SUBROUTINE TO COMPUTE DOUBLE PRECISION    @C@@@@.       FLOATING PGB
)@@G@@OINT HYPERBOLIC SINE OF A     @C@@@@.       DOUBLE PRECISION FLOATING POGC
)@@G@@INT ARGUMENT@[@@@@.     @C@@@@.       CALLING SEQUENCE     A    LMJ  X11GD
)@@G@@,DSINH@D@@@@.                            A+1  +    LOC(M.S.P. ARG)@C@@@@GE
)@@G@@.                            A+2       (W.B.)   @C@@@@.                 GF
)@@G@@           A+3  NORMAL RETURN @[@@@@.     @[@@@@.     @C@@@@.       SUBRGG
)@@G@@OUTINE DEXP IS USED BY THIS PROGRAM @[@@@@.     @[@@@@.     @]@@@@$(2)  GH
)@@G@@  LIT @[@@@@$(1)  @^@@@@        NOP     0,NAME  @ @@@@DSINH*  SX,H2   X1GI
)@@G@@1,STORE     @^@@@@       SZ        A3     @ @@@@         LA,U   A0,*0,X1GJ
)@@G@@1     @B@@@@          SA        A0,ARGADR         .   @^@@@@        LMJ GK
)@@G@@    X11,DEXP@B@@@@          I$        0,0,0,A3,1,ARGADR .   @ @@@@      GL
)@@G@@  +       $-DSINH-1,NAME@ @@@@        LX,H2   X11,STORE     @A@@@@      GM
)@@G@@    TLE       A0,(0140,1)     @F@@@@          J         NERR$           GN
)@@G@@   . ARGUMENT IS TOO SMALL    @ @@@@          L,U       A3,020004 @ @@@@GO
)@@G@@          LDSL      A2,57     @ @@@@          DFD       A2,A0     @D@@@@GP
)@@G@@          AN        A0,(0100,0)        . DIVIDE BY 2.0@ @@@@          DFGQ
)@@G@@AN      A0,A2     @ @@@@          J         2,X11     @[@@@@$(2)  @^@@@@GR
)@@G@@NAME    +      'DSINH ' @^@@@@STORE   +       2,$-$   @B@@@@ARGADR    + GS
)@@G@@        0                 .   @]@@@@        END ___227213   @C@@@@      GT
)@@G@@    +         0605011546*[S@@@*SDFF*@B@@@@.  FORTRAN V LIBRARY UNDER 110GU
)@@G@@8 EXEC.     @F@@@@.                   DSQRT  -  DOUBLE PRECISION SQUARE GV
)@@G@@ROOT OF A   @C@@@@.                   DOUBLE PRECISION ARGUMENT.  @[@@@@GW
)@@G@@.     @H@@@@.                   THERE IS ERROR TERMINATION IF THE ARGUMEGX
)@@G@@NT IS UNNORMALIZED@G@@@@.                   OR LESS THAN ZERO. THE ARGUMGY
)@@G@@ENT RANGE IS THAT OF ALL@E@@@@.                   NON-NEGATIVE DOUBLE PRGZ
)@@G@@ECISION NUMBERS.  @H@@@@.                   A THIRD ORDER POLYNOMIAL IS HA
)@@G@@USED TO COMPUTE THE INITIAL   @H@@@@.                   APPROXIMATION INHB
)@@G@@ SCALED ARITHMETIC. THIS IS FOLLOWED BY   @H@@@@.                   TWO HC
)@@G@@NEWTON-RAPHSON APPROXIMATIONS IN SCALED ARITHMETIC.   @H@@@@.           HD
)@@G@@        THE FINAL APPROXIMATION IS DONE IN D.P.FLOATING POINT     @H@@@@HE
)@@G@@.                   ARITHMETIC. NO OVERFLOW CAN OCCUR DURING COMPUTATIONHF
)@@G@@.     @D@@@@.                   NO OTHER FUNCTIONS ARE REFERENCED.@B@@@@HG
)@@G@@.                   FUNCTION REFERENCE:   @D@@@@.                   A   HH
)@@G@@      LMJ       X11,DSQRT     @H@@@@.                   A+1       +     HI
)@@G@@    LOC(X)         . ADDRESS OF ARGUMENT  @G@@@@.                   A+2 HJ
)@@G@@      +         SEQNUM,PRGNAM  . WALK BACK WD.  @G@@@@.                 HK
)@@G@@  A+3                                . NORMAL RETURN  @[@@@@.     @C@@@@HL
)@@G@@.                   NUMBER OF INSTRUCTIONS: 35  @C@@@@.                 HM
)@@G@@  SIZE OF DATA AREA:       3  @C@@@@.                   TOTAL CORE REQUIHN
)@@G@@REMENT: 38  @[@@@@.     @I@@@@.                   TIME REQUIRED FOR DSQRHO
)@@G@@T IF ARGUMENT IS POS.: 69.13 MICRO SEC    @I@@@@.                   TIMEHP
)@@G@@ REQUIRED FOR DSQRT IF ARG. EQUALS ZERO:  8.63 MICRO SEC    @[@@@@.     HQ
)@@G@@@G@@@@.                   ACCURACY OF DSQRT OVER 10000 EQUIDISTANT ARGUMHR
)@@G@@ENTS  @E@@@@.                   IN THE INTERVAL BETWEEN 0.5 AND 2.0 :   HS
)@@G@@@G@@@@.                   99.79 PERCENT OF ALL FUNCTION VALUES WERE CORRHT
)@@G@@ECT.  @H@@@@.                    0.21 PERCENT OF ALL FUNCTION VALUES HADHU
)@@G@@ AN ERROR IN THE  @B@@@@.                   LAST (60-TH) BIT.     @E@@@@HV
)@@G@@.                   THE ROOT MEAN SQUARE WAS 0.638*10**-19  @^@@@@      HW
)@@G@@    AXR$      .   @#@@@@$(2)      LIT     @[@@@@$(1)  @A@@@@          NOHX
)@@G@@P       0,('DSQRT ')    @^@@@@DSQRT*     SZ       A3  @D@@@@          L,HY
)@@G@@U       A0,*0,X11          . ADDR OF ARG  @ @@@@          DFU       A3,0HZ
)@@G@@,A0   @G@@@@          TLE       A4,(040,0)         . IS ARG POSITIVE ANDIA
)@@G@@ NORMALIZED @C@@@@          J         ZERO               . NO     @F@@@@IB
)@@G@@          JNB       A3,$+2             . IS CHARACTERISTIC ODD    @C@@@@IC
)@@G@@          DSL       A4,1               . YES    @ @@@@          DSL     ID
)@@G@@  A4,26     @I@@@@          L,U       A0,017760          . C3=0.2495 , SIE
)@@G@@TART INITIAL APPROXIMATION    @ @@@@          MF        A0,A5     @D@@@@IF
)@@G@@          AN,U      A0,030030          . C2=-0.75147  @ @@@@          MFIG
)@@G@@        A0,A5     @D@@@@          A,U       A0,024344          . C1=1.27IH
)@@G@@78    @ @@@@          MF        A0,A5     @I@@@@          A,U       A0,0II
)@@G@@1632           . C0=0.2250 , RESULT OF INITIAL APPROXIM.    @F@@@@      IJ
)@@G@@    DL        A1,A4              . START FIRST ITERATION    @ @@@@      IK
)@@G@@    DI        A1,A0     @ @@@@          LSSL      A0,10     @G@@@@      IL
)@@G@@    A         A1,A0              . RESULT OF SECOND APPROXIMATION @ @@@@IM
)@@G@@          LDSL      A4,32     @ @@@@          DSL       A1,26     @ @@@@IN
)@@G@@          DI        A4,A2     @E@@@@          L,H2      A0,0,X11        IO
)@@G@@   . ADDRESS OF ARG     @G@@@@          A         A4,A2              . RIP
)@@G@@ESULT OF THIRD APPROXIMATION  @C@@@@          DL        A0,0,A0         IQ
)@@G@@   . ARG    @A@@@@          L,U       A2,01755,A3     @^@@@@          SSIR
)@@G@@L       A2,1@H@@@@          DFP       A2,A4              . THIRD APPROXIIS
)@@G@@MATION IN FLOATING D.P. @ @@@@          DFD       A0,A3     @ @@@@      IT
)@@G@@    DFA       A0,A3     @D@@@@          AN        A0,(0100,0)        . DIU
)@@G@@IVIDE BY 2  @ @@@@          J         2,X11     @D@@@@ZERO      DLM     IV
)@@G@@  A0,0,A0            . ABS(ARG)     @E@@@@          DJZ       A0,2,X11  IW
)@@G@@         . ARG EQUAL TO ZERO  @H@@@@          J         NERR$           IX
)@@G@@   . UNNORMALIZED OR NEGATIVE ARGUMENT    @#@@@@          END     ___   IY
)@@G@@        TOTAL CORE REQUIREMENT: 38  @[@@@@.     @I@@@@.                 IZ
)@@G@@  TIME REQUIRED FOR DSQRT IF ARGUMENT IS POS.: 6*[S@@@*SDFF*@B@@@@.   FOJA
)@@G@@RTRAN V LIBRARY UNDER 1108 EXEC.    @[@@@@.     @#@@@@        AXR$.     JB
)@@G@@@E@@@@.               TANGENT OF A DOUBLE PRECISION REAL ARGUMENT @[@@@@JC
)@@G@@.     @B@@@@.               THE CALLING SEQUENCE IS   @[@@@@.     @B@@@@JD
)@@G@@.                    A     LMJ   X11,DTAN @C@@@@.                    A+1JE
)@@G@@    +    LOC(M.S.H. ARG)@B@@@@.                    A+2         (W.B.)   JF
)@@G@@@B@@@@.                    A+3    NORMAL RETURN @[@@@@.     @C@@@@.     JG
)@@G@@          TAN(X) IS LEFT IN A0 AND A1     @[@@@@.     @ @@@@.           JH
)@@G@@    /X/<2PI*2**50 @]@@@@$(2)    LIT @[@@@@$(1)  @^@@@@DTAN*   SX,H2   X1JI
)@@G@@1,SAVE@#@@@@        SZ      A3@ @@@@        LA,U    A1,*0,X11     @B@@@@JJ
)@@G@@          SA,H2     A1,ARGADR         .   @^@@@@        LMJ     X11,DCOSJK
)@@G@@@B@@@@          I$        0,0,0,A3,1,ARGADR .   @ @@@@        +       $-JL
)@@G@@DTAN-2,NAME @A@@@@        TOP     A0,(0400040000000)  @A@@@@        LA  JM
)@@G@@    A0,(0170173017112)  @ @@@@        DS      A0,SAVE+1     @^@@@@      JN
)@@G@@  LMJ     X11,DSIN@B@@@@          I$        0,0,0,A3,1,ARGADR .   @ @@@@JO
)@@G@@        +       $-DTAN-2,NAME @^@@@@        LX,H2   X11,SAVE@ @@@@      JP
)@@G@@  DFD     A0,SAVE+1     @^@@@@        J       2,X11   @[@@@@$(2)  @^@@@@JQ
)@@G@@NAME    +      'DTAN  ' @^@@@@SAVE    +       2,$-$   @#@@@@        RES JR
)@@G@@    2 @B@@@@ARGADR    +         0                 .   @]@@@@        END JS
)@@G@@___. UNNORMALIZED OR NEG*[S@@@*SDFF*@B@@@@.   FORTRAN V LIBRARY UNDER 11JT
)@@G@@08 EXEC.    @[@@@@.     @#@@@@        AXR$.     @F@@@@.       FORTRAN LIJU
)@@G@@BRARY SUBROUTINE TO COMPUTE DOUBLE PRECISION    @C@@@@.       FLOATING PJV
)@@G@@OINT HYPERBOLIC TANGENT OF A  @C@@@@.       DOUBLE PRECISION FLOATING POJW
)@@G@@INT ARGUMENT@[@@@@.     @C@@@@.       CALLING SEQUENCE     A    LMJ  X11JX
)@@G@@,DTANH@D@@@@.                            A+1  +    LOC(M.S.P. ARG)@C@@@@JY
)@@G@@.                            A+2       (W.B.)   @C@@@@.                 JZ
)@@G@@           A+3  NORMAL RETURN @[@@@@.     @F@@@@.               THE RANGKA
)@@G@@E OF THE ARGUMENT IS THAT OF THE REAL     @F@@@@.               VALUES. KB
)@@G@@ ERROR TERMINATION OCCURS IN FUNCTION     @F@@@@.               ROUTINE KC
)@@G@@DEXP,IF THE ARGUMENT IS UNNORMALIZED.     @[@@@@.     @C@@@@.       SUBRKD
)@@G@@OUTINE DEXP IS USED BY THIS PROGRAM @[@@@@.     @[@@@@.     @#@@@@$(2)  KE
)@@G@@    LIT.    @^@@@@TEMP      RES       2   @ @@@@NAME      +         'DTAKF
)@@G@@NH '  @ @@@@          +         2,$-$     @[@@@@$(1)  @ @@@@DTANH*    SXKG
)@@G@@,H2     X11,NAME+1@^@@@@          SZ         A3 @ @@@@          LA,U    KH
)@@G@@  A3,*0,X11 @D@@@@          DLM       A0,0,A3            . ABS. OF ARG. KI
)@@G@@@ @@@@          DJZ       A0,2,X11  @C@@@@          AA        A0,(000010KJ
)@@G@@0,0)     . ABS. 2X@^@@@@          JNO       $+2 @A@@@@          AN      KK
)@@G@@  A0,(0000100,0)  @ @@@@          SN        A0,TEMP   @ @@@@          SNKL
)@@G@@        A1,TEMP+1 @ @@@@          LMJ       X11,DEXP  @B@@@@          + KM
)@@G@@        TEMP              .   @A@@@@          +         $-DTANH-2,NAME  KN
)@@G@@@ @@@@          LX,H2     X11,NAME+1@C@@@@          DL        A4,(1.0D) KO
)@@G@@         . TANH = @F@@@@          DFA       A4,A0              . (EXP(2XKP
)@@G@@)-1)/(EXP(2X)+1)  @E@@@@          LA        A2,0,X11           . IF X NEKQ
)@@G@@G.   OR     @ @@@@          DFAN      A0,(1.0D) @F@@@@          TN      KR
)@@G@@  0,A2               . (1-EXP(-2X))/(1+EXP(-2X))@D@@@@          DLN     KS
)@@G@@  A0,A0              . IF X POSITIVE@ @@@@          DFD       A0,A4     KT
)@@G@@@ @@@@          J         2,X11     @#@@@@          END     ___   @E@@@@KU
)@@G@@.                   THE *[S@@@*SDFF*@G@@@@. ****************************KV
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUKW
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 KX
)@@G@@                                                    * @G@@@@       AXR$ KY
)@@G@@        .                                                 * @G@@@@      KZ
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@LA
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * LB
)@@G@@@G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLS                        LC
)@@G@@    * @G@@@@       WSDEF.      DEFINE WORKSPACE                         LD
)@@G@@          * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE           LE
)@@G@@                * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)      LF
)@@G@@                      * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS LG
)@@G@@ SPACE                      * @G@@@@       CBLOCK            . DEFINE COLH
)@@G@@NTROL BLOCK TYPES                 * @G@@@@.                             LI
)@@G@@                                        * @G@@@@. END OF STANDARD PROC BLJ
)@@G@@LOCK                                          * @G@@@@. ****************LK
)@@G@@***************************************************** @[@@@@.     @#@@[[LL
)@@G@@        STATEV  . @[@@[[.     @E@@[[EDORIG  EQU    1              . EDITLM
)@@G@@OR LINE NUMBERING ORIGIN@G@@@@/. THIS ROUTINE HANDLES LINKING TO THE EDILN
)@@G@@TOR.  AT PRESENT, (FEB '73)   @G@@@@. IT IS USED ONLY BY THE )EDIT COMMALO
)@@G@@ND, BUT MAY BE USED IN THE FUTURE   @G@@@@. TO REESTABLISH EDITING IF A LP
)@@G@@SYNTAX ERROR DURING ASSIMILATION OF AN    @B@@@@. EDITED FUNCTION OR FUNLQ
)@@G@@CTIONS IS DETECTED@G@@@@.       IT ASSUMES THAT THE FILE  APL$ALT$EDF$ ELR
)@@G@@XISTS, AND THAT SOMEBODY@F@@@@. HAS ALREADY WRITTEN WHATEVER IS TO BE EDLS
)@@G@@ITED INTO THAT FILE.    @#@@@@. RETURNS ARE:    @F@[@@.       0,X11   NOLT
)@@G@@RMAL. THIS ROUTINE WILL ALSO HAVE DONE THE @ADD @B@[@@.       1,X11   . LU
)@@G@@ERROR EXIT FROM @ED     @F@[@@.       2,X11   . USER EXITED @ED WITH MASLV
)@@G@@TER SPACE CONTROL CARD  @D@[@@.       3,X11   USER EXITED @ED WITH ABORTLW
)@@G@@ COMMAND    @D@@[[.       0,X11       USER TERMINATED @ED WITH HARD EOF LX
)@@G@@@ @@[[.       1,X11       NORMAL    @[^@@@.     @#@@@@        INSTRS  . LY
)@@G@@@A@@@@EDLEAP* SX      X11,EDLINK    .     @F@@[[        SA     A0,EDUFLGLZ
)@@G@@      . SAVE I/U OPTION FLAG (0=INPUT)    @G@@@@. ADJUST )WIDTH SO IMAGEMA
)@@G@@S WON'T BE TRUNCATED WHEN WE @ADD THEM BACK     @A@@@@ED0100  LA      A0MB
)@@G@@,WSWDTH     .     @A@@@@        SA      A0,EDWDTH     .     @^@@@@      MC
)@@G@@  LA,U    A0,72   @A@@@@        SA      A0,WSWDTH     .     @C@@@@. CLEAMD
)@@G@@R OUT CONTING RTNE AS @ED HAS ITS OWN     @G@@@@ED0150 LA,U  A0,0       ME
)@@G@@ . GLOBAL CONTINGENCIES (I.E. II AND BREAK)     @A@@@@       ER    IALL$MF
)@@G@@       . POOF!!   @F@@@@       LA    A0,(+1,0)   . CONTINGENCIES FOR THIMG
)@@G@@S ACTIVITY ONLY   @A@@@@       ER    IALL$       . BYE-BYE  @F@@@@      MH
)@@G@@                   . NOTE: FORKED ACTIVITY FOR OPR IS STILL @F@@@@      MI
)@@G@@                   . LURKING IN D-BANK, BUT WILL NOT WAKE UP@F@@@@      MJ
)@@G@@                   . AS IT IS ONLY ACTIVATED BY PROCESSING A@E@@@@      MK
)@@G@@                   . BREAK, WHICH WE CAN'T DO ANYMORE.@D@@@@. NOW SET UPML
)@@G@@ EDITOR PACKETS AND PASS CONTROL TO KERN--@E@@@@ED0200 LA    A0,RCLASD  MM
)@@G@@ . OUR CURRENT LAST D-BANK LOCN     @A@@@@       SA    A0,EDLASD   . TO MN
)@@G@@PACKET@G@@@@       ANA,U A0,FRSTD$-1 . LESS START OF D-BANK LESS 1 GIVESMO
)@@G@@ DBANK SIZE @F@@@@       SA    A0,EDDSIZ   . SIZE TO PACKET FOR D-BANK AMP
)@@G@@CCESS WORD  @E@[@@       LA    A0,EDOFLD   . GET OPTIONS FOR FIELDATA @EMQ
)@@G@@D     @D@[@@       LA    A1,RCOPTW   . AND CURRENT APL OPTIONS    @F@[@@MR
)@@G@@       TEP,U A1,+1*/('Z'-'Q') . IS APL IN IVERSON KEYBOARD MODE?  @F@[@@MS
)@@G@@       LA    A0,EDOASC   . YES, GET ASCII OPTIONS WORD FOR @ED    @E@@[[MT
)@@G@@        LA     A0,RCOPTW      . GET PROCESSOR OPTIONS WORD  @G@@[[      MU
)@@G@@  AND,U  A0,+1*/('Z'-'Q')+1*/('Z'-'R')+1*/('Z'-'S') . ASCII OPTS  @F@@[[MV
)@@G@@        LA     A0,EDOFLD      . GET STANDARD OPTIONS FOR EDITOR   @D@@[[MW
)@@G@@        TZ     A1             . ANY ASCII OPTIONS ON? @F@@[[        LA  MX
)@@G@@   A0,EDOASC      . YES, GET ASCII EDITOR OPTIONS     @G@[@@       SA   MY
)@@G@@ A0,EDOPTW   . SET OPTIONS WORD IN INFOR PACKET FOR @ED     @E@@[[      MZ
)@@G@@  LA,U   A1,+1*/('Z'-'U')    . GET OPTION FOR UPDATE  @F@@[[        TNZ NA
)@@G@@   EDUFLG         . IS UPDATE WHAT WE SHOULD BE DOING?@G@@[[        LSSLNB
)@@G@@   A1,'U'-'I'     . NO, MOVE BIT OVER TO 'I' OPTION POSITION@E@@[[      NC
)@@G@@  OR     A0,A1          . ADD I/U TO OTHER OPTIONS    @F@@[[        SA  ND
)@@G@@   A1,EDOPTW      . AND SAVE OPTIONS @ED WILL USE     @F @@@        SAVENE
)@@G@@R   X1,BUFF,10 A2,BUFF+10,14 R1,BUFF+24,15 . SAVE REGS@E@@[[        SZ  NF
)@@G@@   EDIOWD    . CLEAR PACKET WORD USED BI @ED    @E@@@@       LA    A1,(+NG
)@@G@@12,EDPAKT)  . POINTER TO PACKET FOR @ED   @D@[@@       LA    A0,EDINAM  NH
)@@G@@ . GET EDITOR'S I-BANK NAME   @E@@][       LA    A0,('ED$   ')   . GET ENI
)@@G@@DITOR'S I-BANK NAME     @C[@@@       ER    LINK$       . LEAP TO THE EDINJ
)@@G@@TOR   @D@[@@. CHECK RETURN STATUS FROM @ED, DO @ADD IF ITS OK     @F@[@@NK
)@@G@@ED0300  JNZ     A1,ED0310     . IF NOT NORMAL EXIT, FORGET IT     @B@[@@NL
)@@G@@        LA,U    A0,EDFADD     . ELSE DO IT@A@[@@        ER      CSF$    NM
)@@G@@      .     @F@[@@ED0310  AA      A1,EDLINK     . CALCULATE ULTIMATE RETNN
)@@G@@URN ADDR    @C@[@@        SA      A1,EDLINK     . AND SAVE IT     @A@[@@NO
)@@G@@. RESTORE ALL PARAMS AND GET OUT    @A@@[[. REESTABLISH PARAMATERS FOR ANP
)@@G@@PL--  @D@@[[ED0300  SA     A1,EDRETC    . SAVE EDITOR RETURN CODE @F@@[[NQ
)@@G@@        QWDON                 . BE SURE WE'RE IN QUARTER-WORD MODE@E@@[[NR
)@@G@@        LOADR   X1,BUFF,10 A2,BUFF+10,14 R1,BUFF+24,15 .    @EB@@@      NS
)@@G@@  LMJ     X11,COIALL    . TURN CONTINGENCIES BACK ON  @B@@@@       LA   NT
)@@G@@ A0,EDWDTH   . GET OLD WIDTH  @B@@@@       SA    A0,WSWDTH   . AND RESTUNU
)@@G@@RE IT @G@[@@        LOADR   X1,BUFF,10 A2,BUFF+10,14 R1,BUFF+24,15 . RESNV
)@@G@@TORE REGS   @A@[@@        LX      X11,EDLINK    .     @A@[@@        J   NW
)@@G@@    0,X11         .     @C@@[[. DECIDE WHAT EDITOR DID AND REACT ACCORDINX
)@@G@@NGLY  @E@@[[ED0400  LA     A0,EDRETC      . RECOVER EDITORS RETURN CODE NY
)@@G@@@D@@[[        J      $+1,A0         . DECIDE WHAT IT WAS    @F@@[[      NZ
)@@G@@  J      ED0410         . NORMAL, GO ASSIMILATE THE FUNCTION@G@@[[      OA
)@@G@@  J      ED0500         . ERROR IN @ED, TAKE NORMAL EXIT TO APL   @F@@[[OB
)@@G@@        J      ED0510         . USER EXIT FROM @ED WITH HARD EOF  @G@@[[OC
)@@G@@        J      ED0500         . AB COMMAND EXIT FROM ED, IGNORE EDITING OD
)@@G@@@E@@[[. NORMAL EXIT FROM @ED, ASSIMILATE THE DEFINED FUNCTION     @D@@[[OE
)@@G@@ED0410  LA,U   A0,EDFADD      . GET POINTER TO @ADD   @F@@[[        ER  OF
)@@G@@   CSF$           . AND GOBBLE UP THE EDITORS OUTPUT  @F@@[[        LMJ OG
)@@G@@   X11,FUNDED     . LET FUNC DEFN RTNE DO ITS STUFF   @D@@[[        J   OH
)@@G@@   ED0420         . ERROR ACCEPTING INPUT @G@@[[        J      ED0500   OI
)@@G@@      . NORMAL TERMINATION, RETURN TO MAINLINE  @D@@[[. ERROR IN TEXT OFOJ
)@@G@@ FUNC-- RECALL EDITOR FOR FIXUP     @E@@[[ED0420  DS     A0,A3          OK
)@@G@@. MOVE LINE NUM FOR CONVERSION@B@@[[        DFU    A0,A3          . UNPAOL
)@@G@@CK IT @C@@[[        LNA    A0,A0          . GET NEG EXPONENT@G@@[[      OM
)@@G@@  DSA    A1,02043+36-11,A0   . ALIGN INTEGER IN A2, ZERO IN A1    @G@@[[ON
)@@G@@ DO EDORIG , AA,U A2,1 . FUDGE LINE IF EDITOR STARTS NUMBERING AT LINE 1OO
)@@G@@@C@@[[        LR,U   R1,5           . CONVERT 6 DIGITS@E@@[[ED0430  DI,UOP
)@@G@@   A1,10          . NEXT DECIMAL DIGIT TO A2    @D@@[[        AA,U   A2,OQ
)@@G@@'0'         . CONVERT IT TO FIELDATA@D@@[[        DSL    A2,6           OR
)@@G@@. MOVE DIGIT INTO A3    @F@@[[        DSL    A1,36          . PREPARE TOOS
)@@G@@ DIVIDE OUT NEXT DIGIT  @E@@[[        JGD    R1,ED0430      . LOOP UNTILOT
)@@G@@ ALL ARE DONE     @F@@[[        SA     A3,EDGOTO      . POST LINE NUMB IOU
)@@G@@N EDIT COMMAND    @F@@[[        LA,U   A0,EDASGI      . IMAGE TO GET A FOV
)@@G@@ILE TO WRITE INTO @B@@[[        ER     CSF$           . GET IT    @G@@[[OW
)@@G@@        LA,U   A0,IOCPKT      . GET PACKET TO WRITE INITIALI COMMAND    OX
)@@G@@@F@@[[        ER     IOW$           . WRITE CANNED SECTOR 0 OF ADD FILE OY
)@@G@@@F@@[[        LA,U   A0,EDADDI      . ADD IMAGE TO PROCESS THE COMMAND  OZ
)@@G@@@B@@[[        ER     CSF$           . ADD IT IN @E@@[[        SX     X11PA
)@@G@@,EDUFLG     . FORCE UPDATE MODE FLAG ON   @F@@[[        J      ED0100   PB
)@@G@@      . LEAP BACK AND RECALL THE EDITOR   @#@@[[. NORMAL EXIT     @F@@[[PC
)@@G@@ED0500  LA,U   A0,STSUSP      . GET SI MARKER FOR SUSPENDED STATE @G@@[[PD
)@@G@@        SA     A0,STVCUR      . AND RESTORE CHANGE WHICH FUNDEF MADE    PE
)@@G@@@C@@[[        LX     X11,EDLINK     . GET RETURN ADDR @C@@[[        J   PF
)@@G@@   1,X11          . NORMAL EXIT     @ @@[[. EXIT FROM @ED VIA HARD EOF--PG
)@@G@@@A@@[[ED0510  LA,U   A0,STSUSP      .     @A@@[[        SA     A0,STVCURPH
)@@G@@      .     @A@@[[        LX     X11,EDLINK     .     @C@@[[        J   PI
)@@G@@   0,X11          . WIPEOUT EXIT    @[#@@@.     @A@@@@. WORKING STORAGE PJ
)@@G@@FOR LEAP TO EDITOR@[@@@@.     @ @@@@       VARBLS            .    @#@@@@PK
)@@G@@. PACKET AREA     @E@[@@EDNORM EQU   024400000000+1*/('Z'-'P')+1*/('Z'-'PL
)@@G@@U')     .   @C@@][EDNORM EQU   024400000000+1*/('Z'-'U')     .    @ [@@@PM
)@@G@@EDOFLD +EDNORM           .    @E@@@@EDOASC +EDNORM+1*/('Z'-'G')+1*/('Z'-PN
)@@G@@'Q')     . ASCII OPTIONS@F@@[[. INFOR PACKET FOR @ED-- POINTED TO BY 1STPO
)@@G@@ WORD OF LINK PACKET    @G@@@@EDOPTW RES   1           . ONE OF THE ABOVPP
)@@G@@E OPTION WORDS IS CRAMMED HERE@F@@@@       +000106000201     . CONTROL IPQ
)@@G@@MAGE FOR PROCESSOR NAME DATA  @C@[@@       'ED    '          . NAME OF PPR
)@@G@@ROCESSOR    @E@@[[        +       UOMED         . NAME OF EDITOR'S D-BANPS
)@@G@@K     @D[@@@       +010102000602     . CONTROL FOR SPEC1=FILE NAME@B@@@@PT
)@@G@@       'APL$ALT$EDF$'    . ED FILE NAME   @B@@[[. PRIMARY CONTROL PACKETPU
)@@G@@ TO CALL EDITOR   @F@@@@EDPAKT +$-EDOPTW,EDOPTW  . 1ST WORD OF LINK PKT=PV
)@@G@@INFOR ACCESS WORD @E@@@@EDLASD RES   1           . LAST D-BANK ADDR PLUGPW
)@@G@@GED IN HERE @]@[@@ DO 8 , +0 .@ @[@@EDDSIZ EQUF  $,,H1       .    @D@[@@PX
)@@G@@       +$-$,FRSTD$       . ACCESS WORD FOR D-BANK SAVE@E@[@@       +0   PY
)@@G@@             . THE END OF 12-WD LINKAGE PACKET  @D@@[[        +3     . CPZ
)@@G@@TL BITS, NO CSF$, NO SIGNON LINE    @B@@[[ DO 6 , +0     . SCRATCH SPACEQA
)@@G@@ USED BY @ED@F@@[[EDIOWD  RES    1         . IO$ PACKET STATUS WORD, MUSQB
)@@G@@T BE CLEARED@E@@[[EDDSIZ  EQUF   $,,H1     . SIZE OF APL D-BANK (IN WORDQC
)@@G@@S)    @F@@[[        +$-$,FRSTD$      . ACCESS WORD TO PRESERVE D-BANK OFQD
)@@G@@ APL  @E@@[[        +0               . USED BY @ED FOR DRUM ADDRESS     QE
)@@G@@@^^@@@. REG SAVE AREAS --     @ @@@@EDWDTH EQUF  $,,H1       .    @A@@@@QF
)@@G@@EDLINK  EQUF    $,,H2         .     @A@@@@        RES     1             QG
)@@G@@.     @E@@[[EDRETC  EQUF    $,,S1         . RETURN CODE SET BY EDITOR   QH
)@@G@@@D@@[[EDUFLG  EQUF   $,,H2          . EDITOR I/U OPTION FLAG@A@@[[      QI
)@@G@@  RES    1              .     @#@[@@        CONSTS  . @[@@[[.     @F@@[[QJ
)@@G@@. PACKET AND I/O AREA USED TO WRITE COMMAND USED TO RECALL EDITOR @[@@[[QK
)@@G@@.     @D@@[[EDSECT  +05001,0,0            . CTL IMAGE FOR FILE    @A@@[[QL
)@@G@@        '*SDFF*'              .     @E@@[[        +EDCSIZ,0,0           QM
)@@G@@. CTL WD FOR COMMAND IMAGE    @B@@[[EDCMND  'GO    '              . COMMQN
)@@G@@AND   @D@@[[EDGOTO  'XXXXXX'              . TARGET LINE NUMBER    @E@@[[QO
)@@G@@EDCSIZ  EQU    $-EDCMND       . LENGTH OF THE COMMAND IMGE  @C@@[[      QP
)@@G@@  +07777,0,0            . SDF END OF FILE @F@@[[EDOUTS  EQU    $-EDSECT QQ
)@@G@@      . SIZE OF OUTPUT RECORD TO WRITE    @E@@[[. I/O PACKET TO WRITE ABQR
)@@G@@OVE CANNED SECTOR INTO ADD FILE     @B@@[[IOCPKT  'APL$EDT$CMD$'        QS
)@@G@@. FILE NAME @C@@[[        +0                    . USED BY EXEC    @D@@[[QT
)@@G@@        +0,W$,0,0,0,0         . FUNCTION/STATUS WORD  @F@@[[        +EDOQU
)@@G@@UTS,EDSECT        . ACCESS WORD FOR CANNED COMMANDS   @B@@[[        +0  QV
)@@G@@   . DRUM ADDR IS SECTOR ZERO @F@@[[. IMAGES TO ACQUIRE AND ADD FILE CONQW
)@@G@@TAINING INITIAL EDITOR COMMAND@A@@[[EDASGI  '@ASG,T APL$EDT$CMD$. .'    QX
)@@G@@@ @@[[EDADDI  '@ADD APL$EDT$CMD$. .'@E@@[[. @ADD IMAGE TO SUCK EDITOR REQY
)@@G@@SULTS BACK INTO APL WORKSPACE @ @[@@EDFADD '@ADD APL$ALT$EDF$. . '@A@@][QZ
)@@G@@EDFADD '@ADD,E APL$ALT$EDF$. . '    @#]@@@        END     . ___S   1    RA
)@@G@@       . ONE OF THE ABOVE OPTION WORDS IS CRAMMED HERE@F@@@@       +0001RB
)@@G@@06000201     . CONTROL IMAGE FOR PROCESSOR NAME *[S@@@*SDFF*@G@@@@. ****RC
)@@G@@***************************************************************** @G@@@@RD
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * RE
)@@G@@@G@@@@.                                                                 RF
)@@G@@    * @G@@@@       AXR$         .                                       RG
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        RH
)@@G@@                * @G@@@@       WSDEF.      DEFINE WORKSPACE             RI
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACRJ
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BRK
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SERL
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           RM
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 RN
)@@G@@                                                    * @G@@@@. END OF STARO
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****RP
)@@G@@***************************************************************** @[@@@@RQ
)@@G@@.     @[@@@@.     @C@@@@       STATEV  . DEFINE STATEVECTOR PARAMETERS  RR
)@@G@@@[@@@@.     @E@[@@/.    RTNE TO REMOVE UNWANTED OPERANDS FROM THE WORKSPRS
)@@G@@ACE   @F@[@@.         AT ENTRY, DESCRIPTOR (OR NAMEBLOK) POINTER IS IN ART
)@@G@@6     @[@[@@.     @#@[@@       INSTRS .   @[@[@@.     @G@@[[/. DRIVER TORU
)@@G@@ ERASE LEFT AND RIGHT ARGUMENTS AT THE END OF AN OPERATION  @[@@[[.     RV
)@@G@@@#@@[[        INSTRS .  @D @@@ERASEA* . ERASE ARGS PICK THEM UP FROM LINRW
)@@G@@EARS CACHE  @B@@@@       SX    X11,ERALNK  . SAVE RETURN    @D@@@@      RX
)@@G@@ LA    A6,LFTDSC   . GET LEFT ARG DESCRIPTOR    @ @@@@       JZ    A6,ERRY
)@@G@@0030   .    @D@@@@       LMJ   X11,ERASET  . IF NON ZERO CALL ERASET    RZ
)@@G@@@B@@@@       J     ER0060      .   SYSTEM ERROR @B@@@@       SZ    LFTDSSA
)@@G@@C      .  CLEAR FLAG    @D@@@@ER0030 LA    A6,RITDSC   . GET RIGHT ARG DSB
)@@G@@ESCRIPTOR   @ @@@@       JZ    A6,ER0050   .    @D@@@@       LMJ   X11,ESC
)@@G@@RASET  . IF NON ZERO CALL ERASET    @B@@@@       J     ER0060      .   SSD
)@@G@@YSTEM ERROR @B@@@@       SZ    RITDSC      .  CLEAR FLAG    @ @@@@ER0050SE
)@@G@@ LX    X11,ERALNK  .    @B@@@@       J     1,X11       . NORMAL EXIT    SF
)@@G@@@ @[@@ER0060 ER    ERR$        .    @E@@[[ER0060  EQU    0              SG
)@@G@@. SYSERRS BECOME JUMP TO IGDM @G@@[[/. THE ERASE RTNES BELOW GET RID OF SH
)@@G@@SPECIFIC OBJECTS. THEY MAY BE CALLED@H@@[[. FROM THE ABOVE DRIVER, BY )ESI
)@@G@@RASE  OR IN VARIOUS AND SUNDRY OTHER PLACES     @[@@[[.     @[[@@@.     SJ
)@@G@@@B@@@@. ERASE LOCAL VARIABLE-- USED AT FUNC EXIT@[@@@@.     @ @@@@ERASELSK
)@@G@@* SX,H2 X11,ERLINK .    @E@@@@       SA    A6,ERNAMB   . TEMP SAVE RELADSL
)@@G@@R OF NAMEBLOK     @E@@@@       VERIFW ER0990,ER0500 . IF NO DESCR, NOTHISM
)@@G@@NG TO ERASE @E@@@@ER0100 JNE,U A2,ZTPVAR ER0990 . IF NOT NAMED VBLE, SYSSN
)@@G@@ERR   @A@@@@. UNLINK THIS DESCR FROM ITS CHAIN  @G@@@@ER0110 DS    A0,ERSO
)@@G@@DTPK   . TEMP SAVE POINTERS TO DATA AND DIMENSIONS    @ @@@@       LA   SP
)@@G@@ A0,A6       .    @B@@@@       ABSADR A0         . DESCR ADDR     @D@@@@SQ
)@@G@@       LA    A1,ERNAMB   . RECOVER NAMEBLOK RELADR    @ @@@@       ABSADSR
)@@G@@R A1        .     @B@@@@       LA,S1 A2,0,A1     . GET BLOK TYPE  @F@@@@SS
)@@G@@       JNE,U A2,ZTPNAM ER0990 . IF NOT REALLY A NAMEBLOK, SYSERR  @G@@@@ST
)@@G@@       JNE,H2 A6,1,A1 ER0990 . GACK IF NAMEBLOK DOESN' T POINT HERE     SU
)@@G@@@G@@@@. THE FOLLOWING ALLOWS RESCAN OF FUNC HDRS WHEN WSFULL CAUSED THE SV
)@@G@@ENTRY @E@@@@. TO A FUNC TO ABORT WITH ONLY SOME OF THE LOCALS CREATED   SW
)@@G@@@G@@@@       LA,H1 A2,2,A0     . GET NEST DEPTH AT WHICH DESCR WAS DEFINSX
)@@G@@ED    @E@@@@       TLE   A2,STVDPT   . IS CUR DEPTH .LE. VAR TO ERASE?  SY
)@@G@@@G@@@@       J     ER0500      . NO, VAR BELONGS TO ANOTHER FUNC, LEAVE SZ
)@@G@@ALONE @C@@@@       TE    A2,STVDPT   . YES, IS IT EQUAL?    @G@@@@      TA
)@@G@@ ER    ERR$        . VAR LEV>CURRENT LEV; SOMONE DIDN'T ERASE IT  @F@@@@TB
)@@G@@       LR,H2 R1,2,A0     . GET FWD LINK FIELD FROM CURRENT DESCR  @G@@@@TC
)@@G@@       SR,H2 R1,1,A1     . STUFF INTO NAMEBLOK, POPPING THE OLD DEFN UP TD
)@@G@@@G@@@@       LA,U  A2,ZTPVAR   . RESTORE TYPE TO PROPERLY ERASE DESCRIPTTE
)@@G@@OR    @D@@@@       DL    A0,ERDTPK   . RECOVER POINTERS TO VALUES @E@[@@TF
)@@G@@       J     ER0210      . GO GET RID OF PRIMARY AND DESCR  @G@@[[      TG
)@@G@@  LMJ    X11,ERPRIM     . BUILD PACKETS, FREE DIMVECT, IF ANY     @D@@[[TH
)@@G@@        J      ER0350         . GO PURGE EVERYTHING   @[[@@@.     @E@@@@TI
)@@G@@. TEMPORARY ERASE (AFTER A STACKED TEMPORARY HAS BEEN USED) @[@@@@.     TJ
)@@G@@@ @@@@ERASET* SX   X11,ERLINK  .    @G@@@@       VERIFW ER0990,ER0200  .TK
)@@G@@ DECODE-- UNINITIALIZED VLBES ARE ALLOWED @E@[@@ER0200 JNE,U A2,ZTPTMP ETL
)@@G@@R0500 . IF NOT TEMPORARY, IGNORE    @D@[@@       LA    A15,WSDBUG      .TM
)@@G@@ ELSE GET DEBUGGING FLAG@C@[@@       TEP,U A15,2       . IS ERASURE ALLOTN
)@@G@@WED?  @C@[@@       J     ER0500      . NO, IMMEDIATE EXIT   @D@[@@      TO
)@@G@@ SZ    ERNAMB      . TURN OFF NAMBLOK ERASE FLAG@D@[@@ER0210 LMJ   X11,ETP
)@@G@@RPRIM  . GO ERASE PRIMARY DATUM     @E@[@@       DL    A0,ERDSPK   . GETTQ
)@@G@@ ERASE PACKET FOR DESCRIPTOR  @D@[@@       FREE              . AND GET RTR
)@@G@@ID OF DESCR, ALSO @C@[@@       J     ER0500      . TAKE NORMAL EXIT     TS
)@@G@@@D@@[[ER0200  LA     A15,WSDBUG     . GET DEBUGGING FLAG    @D@@[[      TT
)@@G@@  TOP,U  A15,2          . IS ERASE INHIBIT ON?  @F@@[[        TE,U   A2,TU
)@@G@@ZTPTMP      . NO, IS THIS REALLY A TEMPORARY?   @E@@[[        J      ER0TV
)@@G@@500         . IF EITHER, QUIT IMMEDIATELY @D@@[[        LMJ    X11,ERPRITW
)@@G@@M     . CREATE ERASE PACKETS  @E@@[[        J      ER0350         . THENTX
)@@G@@ GO ERASE THE OWRLD     @[D@@@.     @G@@@@.     VALUE ERASE-- USED BY )ETY
)@@G@@RASE, AND TO FREE OLD SPACE BEFORE STORING@[@@@@.     @ @@@@ERASEV* SX  TZ
)@@G@@ X11,ERLINK  .    @D@@@@     SA      A6,ERNAMB   . TEMP SAVAE NAMEBLOK AUA
)@@G@@DDR   @F@@@@       VERIFW ER0990,ER0500 . DECODE-- IF NO DESCR, GET RIGHUB
)@@G@@T OUT @F@@@@       COMJMP A2,ER0990 ZTPFUN,ER0400 ZTPVAR,ER0300 . TEST TUC
)@@G@@YPE   @G@[@@ER0300 DJZ   A4,ER0310   . IF ZERO RANK AND LENGTH, UNINITIAUD
)@@G@@LIZED DESCR @E@[@@       LMJ   X11,ERPRIM  . ELSE ERASE PRIMARY DATA AREUE
)@@G@@AS    @F@[@@ER0305                   . RETURN TO THIS LABEL. WE NEED TO UF
)@@G@@KNOW. @D@[@@       LA    A6,ERDSPK+1 . RECOVER REL DESCR ADDR     @B@[@@UG
)@@G@@ER0310 LA    A1,A6       . DUPE DESCR ADDR@D@[@@       ABSADR A1        UH
)@@G@@ . AND SET UP TO REFERENCE IT @D@[@@       TNZ,H1 2,A1       . IS THIS AUI
)@@G@@ GLOBAL VARIABLE  @C@[@@       J     ER0315      . YES, FREE DESCRIPTOR UJ
)@@G@@@D@[@@       LA,U  A0,,X11     . NO, HAVE WE BEEN TO ERPRIM.@A@[@@      UK
)@@G@@ TE,U  A0,ER0305   . FIND OUT.@F@[@@       J     ER0320      . NO. WE MUUL
)@@G@@ST PRESERVE THE DESCRIPTOR    @C@[@@       DL    A0,ERDTPK   . DATA RELEUM
)@@G@@ASE PACKET  @D@[@@       JZ    A0,ER0318   . NO DATA, LEAVE DESCR ALONE UN
)@@G@@@C@[@@       ANU   A1,A6       . DATADDR- DESCR ADDR. @E@[@@       TNE,UUO
)@@G@@ A2,3        . ARE THEY NEXT TO EACH OTHER.     @G@[@@       FREE       UP
)@@G@@       . YES, SO WE FREE DATA, CAUSE ERPRIM DIDN'T    @D@[@@       J    UQ
)@@G@@ ER0318      . NO, SO ERPRIM FREEDATA.    @E@[@@ER0315 LA    A1,A6      UR
)@@G@@ . RECOVER REL DESCR ADDRR TO FREE  @C@[@@       LA,U  A0,3        . NAMUS
)@@G@@ED ARE LENGTH 3   @C@[@@       LA,U  A2,,X11     . IF WE WENT TO ERPRIM,UT
)@@G@@@C@[@@       TNE,U A2,ER0305   . WE CAN FREE BOTH     @A@[@@       DL   UU
)@@G@@ A0,ERDSPK   . LIKE THIS@C@[@@       FREE              . RELEASE DESCR SUV
)@@G@@PACE  @D@[@@       LA    A1,ERNAMB   . RECOVER RELADR OF NAMEBLOK @ @[@@UW
)@@G@@       ABSADR A1         .    @D@[@@       SZ,H2 1,A1        . CLEAR NAMUX
)@@G@@EBLOK DATA POINTER@B@[@@       J     ER0500      . AND GO HOME    @E@[@@UY
)@@G@@. VBLE IS LOCAL, SET DESCR UNINITIALIZED, BUT PRESERVE LEVEL@B@[@@ER0318UZ
)@@G@@ LA    A1,A6       . RESTORE A1     @A@[@@       ABSADR A1         . LIKVA
)@@G@@E THIS@E@[@@ER0320 DL    A2,ERUNIN   . SKELETON FOR UNINITIALIZED DESCR VB
)@@G@@@C@[@@       DS    A2,0,A1     . STUFF IT INTO THE WS @A@[@@       J    VC
)@@G@@ ER0500      . AND LEAVE@G@@[[ER0300  LMJ    X11,ERPRIM     . BUILD ERASVD
)@@G@@E PACKETS FOR DATA AND DESCR  @D@@[[        LA     A1,A6          . GET VE
)@@G@@REL DESCR ADDR    @D@@[[        ABSADR A1             . PREPARE TO EXAMIVF
)@@G@@NE IT @E@@[[        TNZ,H1 2,A1           . IS THIS A LOCAL VARIABLE?   VG
)@@G@@@F@@[[        J      ER0330         . NO GLOBAL-- GO CLEAR NAMEBLOK     VH
)@@G@@@G@@[[. FOR LOCALS, MARK DESCR UNINITIALIZED, THEN GO FREE DATA (NOT DESVI
)@@G@@CR)   @G@@[[ER0320  DL     A2,ERUNIN      . GET SKELETON DESCR FOR UNINIVJ
)@@G@@TIALIZED VAR@D@@[[        DS     A2,0,A1        . CRAM IT INTO THE WS   VK
)@@G@@@E@@[[        J      ER0370         . THEN GO FREE DATA AREA ONLY @E@@[[VL
)@@G@@. FOR GLOBALS, MARK NAMEBLOK UNVALUED, THEN ERASE EVERYTHING@E@@[[ER0330VM
)@@G@@  LA     A1,ERNAMB      . RECOVER POINTER TO NAMEBLOK @E@@[[        ABSAVN
)@@G@@DR A1             . WHICH WAS SAVED AS RELATIVE @F@@[[        SZ,H2  1,AVO
)@@G@@1           . MARK NAMEBLOK WITHOUT A VALUE     @G@@[[. FOR GLOBALS, TEMVP
)@@G@@PORARIES AND FUNC EXIT, GET RID OF BOTH DATA AND DESCR@D@@[[ER0350  DL  VQ
)@@G@@   A0,ERDPKT      . GET DESCR ERASE PKT   @E@@[[        AU     A1,A0    VR
)@@G@@      . COMPUTE ADDR OF WD AFTER    @F@@[[        JNE    A2,ERVPKT+1 ER0VS
)@@G@@360  . IF NOT CONTIGUOUS, DO 2 FREES@G@@[[        AA     A0,ERVPKT      VT
)@@G@@. ELSE BOOST DESC R SIZE BY DATA SIZE     @F@@[[        J      ER0380   VU
)@@G@@      . AND GO GET RID OF ALL IN ONE SHOT @D@@[[ER0360  FREE            VV
)@@G@@      . RELEASE DESCRIPTOR    @C@@[[. FOR DATA AREA FREE ONLY, COME DIREVW
)@@G@@CTLY HERE   @C@@[[ER0370  DL     A0,ERVPKT      . GET VALUE PACKET@G@@[[VX
)@@G@@        JZ     A0,ER0500      . IF NONE (I.E. SCALAR HALFINT), EXIT     VY
)@@G@@@B@@[[. LEAP HERE FOR MERGED MONSTER SINGLE FREE@A@@[[ER0380  FREE      VZ
)@@G@@            .     @A@@[[        J      ER0500         . EXIT@[-@@@.     WA
)@@G@@@B@@@@. ERASE FUNCTION (DESCRIPTOR ADDR IN A6)  @[@@@@.     @D@@@@ER0400WB
)@@G@@ LA,U  A0,WSTATE   . CURRENT STATEVECTOR ADDR   @A@@@@ER0402 LA,Q1 A1,0,WC
)@@G@@A0     . GET STATE@F@@@@       JE,U  A1,STFUNC ER0406 . IF FUNC DEFN, CHWD
)@@G@@ECKS ARE ELSEWHERE@G@@@@       JNE,U A1,STFUNX ER0404 . IF NOT FUNC XQT,WE
)@@G@@ GO LOOK AT NEXT STATE  @G@@@@       JE,H2 A6,3,A0 ER0992 . IF DESCR IS WF
)@@G@@THIS FUNC, SIGNAL SI DAMAGE   @E@@@@ER0404 LA,H2 A0,0,A0     . GET FWD LWG
)@@G@@INK TO NEXT STATEBLOK   @F@@@@       JZ    A0,ER0406   . IF NO STATEVECTWH
)@@G@@ UNDER THIS, GET OUT    @E@@@@       ABSADR A0         . ELSE PREPARE TOWI
)@@G@@ EXAMINE THIS ONE @B@@@@       J     ER0402      . AND GO DO IT   @D@@@@WJ
)@@G@@ER0406 LA    A0,A6       . DUPE ADDR OF DESCRIPTOR    @C@@@@       ABSADWK
)@@G@@R A0         . MAKE IT ABSOLUTE     @D@@@@       LA,H2 A1,1,A0     . GETWL
)@@G@@ FUNCTBL ADDR FROM DESCR@D@@@@       ABSADR A1         . GET ABS ADDR OFWM
)@@G@@ FUNCTBL    @F@@@@       DS    A0,ERDSPK   . TEMP SAVE ABS ADDR OF DESCRWN
)@@G@@, FUNCTBL   @D@@@@       LXI,U A1,1        . SET STEP THRU FUNCTABLE    WO
)@@G@@@G@@@@       LA,H2 A2,0,A0     . NO LINES (INCLUDING LINE 0) FROM DESCRIWP
)@@G@@PTOR  @#@@@@. ERASE NEXT LINE @D@@@@ER0410 JNGD  A2,ER0420   . COUNT LINWQ
)@@G@@ES TO BE ERASED   @E@@@@       LA,H2 A0,1,*A1    . ADDR OF NEXT TEXT LINWR
)@@G@@E FROM TABLE@G@@@@       DS    A1,ERDTPK   . TEMP SAVE NEXT LINE POINTERWS
)@@G@@, AND COUNTER     @C@@@@       LMJ   X11,TEXERS  . GET RID OF THIS LINE WT
)@@G@@@ @@@@       J     ER0999      .    @ @@@@       DL    A1,ERDTPK   .    WU
)@@G@@@C@@@@       J     ER0410      . GO BACK FOR NEXT LINE@A@@@@. ALL TEXT EWV
)@@G@@RASED-- GET RID OF TABLE@E@@@@ER0420 DL    A0,ERDSPK   . RECOVER ADDR OFWW
)@@G@@ DESCR, TABLE     @C@@@@       LA,H2 A0,0,A0     . NO OF LINES IN TABLE WX
)@@G@@@E@@@@       LA,U  A0,1,A0     . BUMP TO COUNT BLOCK HEADER WORD  @ @@@@WY
)@@G@@       RELADR A1         .    @D@@@@       FREE              . MAKE FUNCWZ
)@@G@@TABLE DISAPPEAR   @B@@@@. GET RID OF DESCRIPTOR AND NAMEBLOK LINKS@C@@@@XA
)@@G@@ER0430 LA    A1,ERDSPK   . GET ABS ADDR OF DESCR@ @@@@       RELADR A1  XB
)@@G@@       .    @F@@@@       LA,U  A0,3        . FUNC DESCRS ALWAYS ARE LENGXC
)@@G@@TH THREE    @C@@@@       FREE              . GET RID OF DESCR     @C@@@@XD
)@@G@@       LA    A1,ERNAMB   . ADDR OF NAMEBLOK     @ @@@@       ABSADR A1  XE
)@@G@@       .    @F@@@@       SZ,H2 1,A1        . CLEAR POINTER IN NAMEBLOK TXF
)@@G@@O DESCR     @[@@@@.     @]@@@@ER0500 .    @ @@@@ER0510 LX    X11,ERLINK XG
)@@G@@ .    @B@@@@       J     1,X11       . NORMAL EXIT    @[@@@@.     @G@@@@XH
)@@G@@ER0990 EQU   0           . SYSERRS MANIFEST THEMSELVES AS J TO IGDM     XI
)@@G@@@F@@@@ER0992 ERROR YSIDAM,ER0999    . TRYING TO ERASE PENDANT FUNCTION  XJ
)@@G@@@ @@@@ER0999 LX    X11,ERLINK  .    @ @@@@       J     0,X11       .    XK
)@@G@@@[@@@@.     @#@@@@       VARCON .   @#@@@@ERALNK +0,$-$ .   @#@@@@ERLINKXL
)@@G@@ +0,$-$ .   @#@@@@       VARBLS .   @D@[@@ERDSPK RES   2 .  PACKET TO ERXM
)@@G@@ASE PRIMARY DESCRIPTOR  @C@[@@ERDSSZ EQU   ERDSPK . SIZE (IN WDS) OF DESXN
)@@G@@CR    @C@[@@ERDSAD EQU   ERDSPK+1    . ADDR OF DESCRIPTOR   @B@[@@ERDTPKXO
)@@G@@ RES   2 . PACKET TO ERASE DATA AREA@D@[@@ERDTSZ EQU   ERDTPK      . SIZXP
)@@G@@E OF DATA STORAGE AREA  @B@[@@ERDTAD EQU   ERDTPK+1    . DATA ADDRESS   XQ
)@@G@@@DA@@@ERNAMB RES   1           . ADDR OF NAMEBLOK, IF ANY   @#@@@@      XR
)@@G@@ VARCON .   @F@[@@ERDVPK  +2     . DIM DESCR PKT- LENGTH OF DIM DESCR ISXS
)@@G@@ ALWAYS 2   @A@[@@ERDDAD RES   1 . DIM DESCR ADDR     @G]@@@ERUNIN CBLOCXT
)@@G@@K ZTPVAR,ZMOUNK,0,0 0 . SKEL DESCR FUR UNINITIALIZED STUFF  @[@@@@.     XU
)@@G@@@F@[@@/. ERASE PRIMARY DATA AREA; CREATE PACKET TO ERASE DESCRIPTOR     XV
)@@G@@@C@[@@.     ENTER WITH REGS SET AS VERIFY LEAVES THEM @[@[@@.     @#@[@@XW
)@@G@@       INSTRS  .  @ @[@@ERPRIM SX,H2 X11,EPLINK  .    @C@[@@       SA   XX
)@@G@@ A6,ERDSAD   . SAVE REL DESCR ADDR  @C@[@@       RELADR A0         . RELXY
)@@G@@ATIVE DATA ADDR   @A@[@@       SA    A0,ERDTAD   . SAVE IT  @E@[@@      XZ
)@@G@@ SZ    ERDTSZ      . INITIALIZE DATA LENGTH TO NONE   @F@[@@       JNE  YA
)@@G@@ A0,A6 EP0120  . IF DATA NOT IN DESCR, GO GET SIZE    @G@[@@. DATA AND DYB
)@@G@@ESCR ADDRS ARE EQUAL-MUST BE HALFINT SCALAR (NO DATA STORAG)@B@[@@EP0110YC
)@@G@@ LA,U  A0,1        . SET LENGTH 1   @D@[@@       TNE,U A2,ZTPVAR   . IS YD
)@@G@@THIS A NAMED VARIABLE?  @C@[@@       LA,U  A0,3        . YES, 3 WDS ARE YE
)@@G@@USED  @C@[@@       SA    A0,ERDSSZ   . SAVE DESCRIPTOR SIZE @D@[@@      YF
)@@G@@ J     EP0210      . GO RELEASE DESCR AND EXIT  @E@[@@. DATA CHAINED OFFYG
)@@G@@ DESCR- SET DESCR LENGTH, GET DATA LENGTH @D@[@@EP0120 LA,U  A0,2       YH
)@@G@@ . NORMAL DESCRS ARE LENGTH 2 @D@[@@       TNE,U A4,ZRANKS   . UNLESS THYI
)@@G@@EY'RE SCALARS     @D@[@@       LA,U  A0,1        . IN WHICH CASE LENGTH YJ
)@@G@@IS 1  @E@[@@       TNE,U A2,ZTPVAR   . CHECK IF THIS IS A NAMED VARIABLEYK
)@@G@@@D@[@@       LA,U  A0,3        . IF SO, DESCR IS BIGGER     @D@[@@      YL
)@@G@@ SA    A0,ERDSSZ   . POST SIZE OF DESCRIPTOR    @E@[@@EP0130 JZ    A5,EPYM
)@@G@@0150   . IF DATUM IS NULL, DON'T BOTHER   @C@[@@       LSSL  A5,1       YN
)@@G@@ . DOUBLE THE ELEMCT    @F@[@@       JE,U  A3,ZMODFL EP0140 . IF DOUBLE YO
)@@G@@PRECISION, WE'RE OUT    @B@[@@       AA,U  A5,2        . ELSE ROUND     YP
)@@G@@@B@[@@       SSL   A5,2        . AND GET HALFWDS@D@[@@       JE,U  A3,ZMYQ
)@@G@@OHFI EP0140 . IF HALFINT, WE'RE DONE@B@[@@       AA,U  A5,1        . ROUYR
)@@G@@ND AGAIN    @E@[@@       SSL   A5,1        . AND GET QUARTERWORD PACKINGYS
)@@G@@ VAL  @E@[@@       JNE,U A3,ZMOCHR ER0990 . IF NOT CHAR, BIG TROUBLE    YT
)@@G@@@B@[@@EP0140 SA    A5,ERDTSZ   . SAVE DATA SIZE @D@[@@. NOW FARBLE AROUNYU
)@@G@@D WITH DIMENSION VECTOR, IF ANY     @C@[@@EP0150 TLE,U A4,ZRANKV+1 . IS YV
)@@G@@THIS AN ARRAY?    @F@[@@       J     EP0200      . NO, NO DIMVECT, GO REYW
)@@G@@LEASE DATA AREA   @D@[@@       SA    A7,ERDDAD   . YES, SAVE DIMV DESCRAYX
)@@G@@DDR   @B@[@@       AA,U  A4,1        . ROUND RANK     @D@[@@       SSL  YY
)@@G@@ A4,1        . CONVERT TO HALFWORD COUNT  @D@[@@       LA    A0,A4      YZ
)@@G@@ . SET WORDCT TO BE FREED     @D@[@@       RELADR A1         . ADDR OF DZA
)@@G@@IMENSION DATA     @D@[@@.   SEE IF WE CAN FREE DATANDESCRIPTOR AT SAME TZB
)@@G@@IME.  @D@[@@       LA    A2,ERDVPK+1 . ADDR OF DIM DESCRIPTOR     @B@[@@ZC
)@@G@@       TE,U  A1,2,A2     . NEXT TO DATA?  @D@[@@       J     EP0160     ZD
)@@G@@ . NO, DO IT THE HARD WAY     @D@[@@       AA,U  A0,2        . YES, TWO ZE
)@@G@@MORE WORDS TO FREE@A@[@@       J     EP0170      . DO IT.   @D@[@@EP0160ZF
)@@G@@ FREE              . RELEASE DATAREA OF DIMVECT @F@[@@       LA,U  A0,2 ZG
)@@G@@       . DIMVECT DESCRS ARE ALWAYS LENGTH TWO.  @D@[@@EP0170 LA    A1,ERZH
)@@G@@DVPK+1 . GET ADDR OF DIM DESCRIPTOR @D@[@@       FREE              . ANDZI
)@@G@@ GET RID OF IT, ALSO    @^@[@@. ERASE PRIMARY DATUM   @E@[@@EP0200 DL   ZJ
)@@G@@ A0,ERDTPK   . PACKET FOR RELEASE OF DATA AREA  @G@[@@       JZ    A0,EPZK
)@@G@@0210   . IF NONE (I.E.NULL ) GO RELEASE DESCRIPTOR    @D@[@@.   SEE IF WZL
)@@G@@E CAN FREE DATANDESCRIPTOR AT SAME TIME   @B@[@@       LA    A2,ERDSSZ  ZM
)@@G@@ . DESCR COUNT    @A@[@@       AA    A2,ERDSAD   . + ADDR   @E@[@@      ZN
)@@G@@ TE    A1,A2       . ARE DATANDESCRIPTORIGHTOGETHER?  @D@[@@       J    ZO
)@@G@@ EP0205      . NO, SO FREE EACH SEPERATELY@F@[@@       AA    A0,ERDSSZ  ZP
)@@G@@ . OLD COUNT PLUS LENGTH OF DESCRIPTOR    @D@[@@       SA    A0,ERDSSZ  ZQ
)@@G@@ . RETURN TO FREE EVERYTHING  @ @[@@       J     EP0210      .    @A@[@@ZR
)@@G@@EP0205 FREE              . FREE DATA@ @[@@EP0210 LX,H2 X11,EPLINK  .    ZS
)@@G@@@C@[@@       J     0,X11       . RETURN TO CALLER     @#@[@@       VARCOZT
)@@G@@N  .  @#@[@@EPLINK +0,$-$  .  @G@@[[/. BUILD PACKETS FOR ERASURE OF PRIMZU
)@@G@@ARY DESCR AND DATA.  IF MTX OR MORE,@G@@[[. MERGE DIMVECT DATA WITH DATAZV
)@@G@@ ERASE PACKET, IF POSSIBLE, ELSE RELEASE  @E@@[[. DIM DESCR AND DATA OUTZW
)@@G@@RIGHT.  ASSUME A0-A7 AS PER VERIFY  @[@@[[.     @#@@[[        INSTRS .  ZX
)@@G@@@F@@[[ERPRIM  SX,H2  X11,EPLINK     . POST RETURN ADDR IN INDIRECT LOCN ZY
)@@G@@@F@@[[        SA     A6,EPADSC      . REL DESCR ADDR TO DESCR ERS PKT   ZZ
)@@G@@@D@@[[        SA     A7,EPADIM      . DIDDO FOR DIM DESCR   @E@@[[      AA
)@@G@@  RELADR A0             . MAKE DATA ADDR RELATIVE     @D@@[[        SA  AB
)@@G@@   A0,EPAVAL      . TO VALUE ERAS E PACKET@E@@[[        RELADR A1       AC
)@@G@@      . SAME THING FOR DIM DATA ADDR@C@@[[        SA     A1,EPADMV      AD
)@@G@@. TO ITS PACKET   @G@@[[        LMJ    X11,COMSPC     . COMPUTE SPACE USAE
)@@G@@ED FOR DATA STORAGE     @E@@[[        SA     A0,EPLVAL      . STASH DATAAF
)@@G@@ LENGTH IN PACKET @E@@[[        SA     A1,EPLDMV      . DITTO NO WDS USEAG
)@@G@@D FOR DIMS  @A@@[[. COMPUTE LENGTH OF PRIMARY DESCR   @D@@[[EP0100  LA,UAH
)@@G@@   A0,1           . ASSUME ITS SCALAR     @B@@[[        TE,U   A4,ZRANKSAI
)@@G@@      . IS IT?    @G@@[[        LA,U   A0,2           . NO, BAD GUESS. LAJ
)@@G@@ENGTH SHOULD HAVE BEEN 2@C@@[[        TNE,U  A2,ZTPVAR      . NAMED VARIAK
)@@G@@ABLE? @E@@[[        LA,U   A0,3           . YES, DESC R IS 3 REGARDLESS AL
)@@G@@@F@@[[        SA     A0,EPLDSC      . SAVE LENGTH OF DESCR IN ITS PKT   AM
)@@G@@@D@@[[        TLE,U  A4,2           . AT LEAST A MATRIX?    @C@@[[      AN
)@@G@@  J      *EPLINK        . NO, WE'RE DONE  @G@@[[. FOR MTX AND MORE, SEE AO
)@@G@@IF DATA AND DIMS ARE CONTIGUOUS; NEW RESERV RTNE@C@@[[. LAYS THEM OUT ASAP
)@@G@@   DESCR,DIMDSC, DATA, DIMVALS@F@@[[EP0110  DL     A0,EPLDIM      . GET AQ
)@@G@@DIM DESCR LENGTH AND RELAD    @F@@[[        AU     A1,A0          . GET AR
)@@G@@ADDR OF WD AFTER DIM DESCR    @F@@[[        JNE    A2,EPAVAL EP0120    .AS
)@@G@@ IF NOT NEXT TO DATA, SKIP IT @D@@[[        AA     A2,EPLVAL      . FOLDAT
)@@G@@ IN DATA LENGTH   @G@@[[        JNE    A2,EPADMV EP0130    . IF NOT AT DAU
)@@G@@IM VALES, DO 2 FREES    @G@@[[        SA     A1,EPAVAL      . CHANGE DATAV
)@@G@@A ERS PKT TO START AT DIMDESC @F@@[[        ANA    A2,A1          . STARAW
)@@G@@T DIMS LESS START DSC=#WDS +2 @E@@[[        AA     A2,EPLDMV      . PLUSAX
)@@G@@ WDS USED FOR DIM VALS  @G@@[[        SA     A2,EPLVAL      . SAVE MERGEAY
)@@G@@D SIZE FOR DATA AREA RELEASE  @C@@[[        J      *EPLINK        . AND AZ
)@@G@@GET OUT     @F@@[[. IF MTX NOT ALL CONTIGUOUS, CHECK FPR PARTIALLY (OLD BA
)@@G@@VERSION)    @G@@[[EP0120  JNE    A2,EPADMV EP0130    . IF NOT NEXT TO EABB
)@@G@@CH OTHER, FREE 2X @F@@[[        AA     A0,EPLDMV      . ELSE BOOST WDCNTBC
)@@G@@ BY SIZE OF DATA  @D@@[[        J      EP0140         . AND GO DO SINGL BD
)@@G@@E FREE@D@@[[EP0130  FREE                  . GET RID OF DIM DESCR  @D@@[[BE
)@@G@@        DL     A0,EPLDMV      . GET DIM VALS PACKET   @A@@[[EP0140  FREEBF
)@@G@@   . GET RID OF STUFF   @C@@[[        J      *EPLINK        . NORMAL EXIBG
)@@G@@T     @[@@[[.     @ @@[[. PACKETS AND ALL THAT JAZZ   @[@@[[.     @#@@[[BH
)@@G@@        VARBLS .  @F@@[[ERDPKT  RES    2              . THIS PACKET CAN BI
)@@G@@BEE SEEN BY CALLER@E@@[[EPLDSC  EQU    ERDPKT         . LENGTH OF (PRIMABJ
)@@G@@RY) DESCR   @E@@[[EPADSC  EQU    ERDPKT+1       . ADDRO OF (PRIMARY) DESBK
)@@G@@CR    @F@@[[ERVPKT  RES    2              . THIS IS ALSO EXTERNALLY VISIBL
)@@G@@BLE   @E@@[[EPLVAL  EQU    ERVPKT         . SIZE OF DATA VALUE AREA     BM
)@@G@@@D@@[[EPAVAL  EQU    ERVPKT+1       . ADDR OF DATA VAL AREA @[@@[[.     BN
)@@G@@@G@@[[. THE TAGS BELOW ARE USED BY OLD CODE, WHICH USES THESE CELLS AS TBO
)@@G@@EMPORY@A@@[[ERDSPK  EQU    ERDPKT         .     @A@@[[ERDTPK  EQU    ERVBP
)@@G@@PKT         .     @[@@[[.     @D@@[[EPLDIM  +2                    . LENGBQ
)@@G@@TH OF DIM DESCR   @D@@[[EPADIM  RES    1              . ADDR OF DIM DESCBR
)@@G@@R     @D@@[[EPLDMV  RES    1              . LENGTH OF DIM VALUES  @D@@[[BS
)@@G@@EPADMV  RES    1              . ADDR OF DIM VALUES    @[@@[[.     @G@@[[BT
)@@G@@EPLINK  +0,$-$                . WATCH OUT!! INDIRECTION THRU HERE!!!    BU
)@@G@@@]_@@@       END  ___. LENGTH SHOULD HAVE BEEN 2@C@@[[        TNE,U  A2,BV
)@@G@@ZTPVAR      . NAMED VARIABLE? @E@@[[        LA,U*[S@@@*SDFF*@G@@@@. ****BW
)@@G@@***************************************************************** @G@@@@BX
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * BY
)@@G@@@G@@@@.                                                                 BZ
)@@G@@    * @G@@@@       AXR$         .                                       CA
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        CB
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        CC
)@@G@@                      * @G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLSCD
)@@G@@                            * @G@@@@       WSDEF.      DEFINE WORKSPACE CE
)@@G@@                                  * @G@@@@WORKSP INFO  2 20.      SET ASCF
)@@G@@IDE THE SPACE                           * @G@@@@       RUNCTL.     DEFINCG
)@@G@@E RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.CH
)@@G@@      AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCCI
)@@G@@K            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.     CJ
)@@G@@                                                                * @G@@@@CK
)@@G@@. END OF STANDARD PROC BLOCK                                          * CL
)@@G@@@G@@@@. ****************************************************************CM
)@@G@@***** @[@@@@.     @[@@@@.     @[@@@@.     @E@@@@M      PROC  . DEFINE ERCN
)@@G@@ROR CODES AND CORRESPONDING MESSAGES@#@@@@MSGDEF* NAME .    @#@@@@      CO
)@@G@@ UNLI$T .   @E@@@@       CONSTS . PUT THE TEXT OF THE MESSAGES IN THE I-CP
)@@G@@BANK  @[@@@@MSG.  @A@@@@K DO M(1) , APLBCI M(1,K)          .@[@@@@EMSG .CQ
)@@G@@@]@@@@$(ERTABL) . @A@@@@*      EQU   $-MTABLE              .@ @@@@      CR
)@@G@@ +     EMSG-MSG,MSG    .@#@@@@       LI$T .     @]@@@@       END .@[@@@@CS
)@@G@@.     @F@@@@/. DEFINE ERROR MESSAGES AND CREATE TABLE OF POINTERS TO TEXCT
)@@G@@TS    @[@@@@.     @[@@@@.     @E@@@@ERTABL EQU  11 . SPECIAL LOCN COUNTECU
)@@G@@R FOR TABLE OF POINTERS @E@@@@$(ERTABL),MTABLE . DEFINE ORIGIN OF MESSAGCV
)@@G@@E POINTER TABLE   @]@@@@MTABLE.     @A@@@@YNONCE* MSGDEF 'NONCE ERROR ' CW
)@@G@@     .@A@@@@YDOMAI* MSGDEF 'DOMAIN ERROR'      .@A@@@@YDEFN*  MSGDEF 'DECX
)@@G@@FN ERROR  '      .@A@@@@YINDEX* MSGDEF 'INDEX ERROR '      .@A@@@@YLABELCY
)@@G@@* MSGDEF 'LABEL ERROR '      .@A@@@@YLENGT* MSGDEF 'LENGTH ERROR'      .CZ
)@@G@@@A@@@@YRANK*  MSGDEF 'RANK ERROR  '      .@A@@@@YSYSTM* MSGDEF 'SYSTEM EDA
)@@G@@RROR'      .@A@@@@YVALUE* MSGDEF 'VALUE ERROR '      .@A@@@@YWSFUL* MSGDDB
)@@G@@EF 'WS FULL '          .@A@@@@YLEXIC* MSGDEF 'LEXICAL ERR '      .@C@@@@DC
)@@G@@YUNIMP* MSGDEF 'UNIMPLIMENTE','D FEATURE   '.   @A@@@@YSYNTA* MSGDEF 'SYDD
)@@G@@NTAX ERROR'      .@B@@@@YINCOR* MSGDEF 'INCORRECT CO','MMAND   '. @B@@@@DE
)@@G@@YUNKNO* MSGDEF 'UNKNOWN COMM','AND '    . @ @@@@YIOERR* MSGDEF 'I/O ERRODF
)@@G@@R   '.@A@@@@YWSNOT* MSGDEF 'WS NOT FOUND'      .@A@@@@YWSLOC* MSGDEF 'WSDG
)@@G@@ LOCKED   '      .@B@@[[YNOTWS* MSGDEF 'NOT A WORKSP','ACE '    . @A@@[[DH
)@@G@@YWSTOO* MSGDEF 'WS TOO LARGE' .     @D@@@@YIMPRO* MSGDEF 'IMPROPER LIB',DI
)@@G@@'RARY REFEREN','CE  '.  @A@@@@YDEPTH* MSGDEF 'DEPTH ERROR ' .     @B@@@@DJ
)@@G@@YLIBRA* MSGDEF 'LIBRARY TABL','E FULL  '  @ @@@@YKEYIL* MSGDEF 'KEY ILLEDK
)@@G@@GAL ' @C@@@@YSYFUL* MSGDEF 'SYMBOL TABLE',' FULL       '.   @D@@@@YUSED*DL
)@@G@@  MSGDEF 'NOT SAVED, W','S QUOTA USED',' UP '   @C@@@@YTERM*  MSGDEF 'TEDM
)@@G@@RMINATION ','ERROR   '  .     @C@@@@YNOTWI* MSGDEF 'NOT WITH OPE','N DEFDN
)@@G@@INITION'    @ @@@@YSIDAM* MSGDEF 'SI DAMAGE   ' @A@@[[YSINOC* MSGDEF 'SIDO
)@@G@@ NOT CLEAR' .     @B@@[[YNOTQM* MSGDEF 'NOT WITH Q-O','PTION   ' .@C@@@@DP
)@@G@@. ERROR MESSAGES GENERATED BY USER FILE PACKAGE @B@@@@YFIPER* MSGDEF 'FIDQ
)@@G@@LE PERMISS','ION ERR '  @B@@@@YFIFUN* MSGDEF 'INVALID FILE',' FUNCT  '  DR
)@@G@@@ @@@@YFIFUL* MSGDEF 'FILE FULL   ' @A@@@@YFIASG* MSGDEF 'FILE ASSIGN ',DS
)@@G@@'ERR '@A@@@@YFIROL* MSGDEF 'FILE ROLLED ','OUT '@C@@@@YFIXUS* MSGDEF 'FIDT
)@@G@@LE USE/XUS','E CONFLICT  '    @A@@@@MAXERR EQU   $-MTABLE              .DU
)@@G@@@[@@@@.     @[@@@@/.    @ @@@@       VARCON            .    @E@@@@ERPRNTDV
)@@G@@* +0,$-$           . WE SLUDGE HERE FROM ERROR PROC   @ @@@@       J    DW
)@@G@@ IBANK       .    @ @@@@       INSTRS            .    @C@@@@IBANK  SA   DX
)@@G@@ A0,SNAPA0   . TEMP SAVE WORK REG   @D@@@@       SZ    RCPTIF      . LOWDY
)@@G@@ER PAPER TAPE INPUT FLAG@F@@@@       LA,H1 A0,*ERPRNT  . GET ERROR NUMBEDZ
)@@G@@R FROM NEW-STYLE PACKET @C@@@@     LXI,H2  A0,ERPRNT   . AND ADDRESS OF EA
)@@G@@CALL  @E@@@@       SA    A0,A15+1    . TEMP SAVE SO IT SHOWS ON REG DUMPEB
)@@G@@@C@@@@       LA,H1 A0,*ERPRNT  . GET ERROR NUMBRE BACK@E@[@@       JNE,UEC
)@@G@@ A0,YSYSTM ER0100 . IF NOT SYSERR, NO SNAP DUMP @C@@[[        TNE,U  A0,ED
)@@G@@YSYSTM      . SYSTEM ERROR?   @F@@[[        TNZ,U  DUMPON         . YES,EE
)@@G@@ DOES SITE WANT TO SEE DUMPS? @D@@[[        J      ER0100         . NO, EF
)@@G@@BYPASS THE DUMP   @F@@[[        SZ      RCOUTI        . BE SURE PRINT$'SEG
)@@G@@ ARE NOT INHIBITED@F@@[[        SZ      RCALTF        . AND FORGET ABOUTEH
)@@G@@ ALT PRINT FILES  @[[@@@.     @^@@@@. APL SYSTEM ERROR--    @[@@@@.     EI
)@@G@@@B@@@@ER0010 TNZ   RCDMND      . DEMAND RUN?    @E@@@@       J     ER003EJ
)@@G@@0      . NO, BATCH-GO WRITE HEADING DATA  @C@@@@       LA,U  A0,EXEC8   EK
)@@G@@ . YES, GET EXEC LEVEL  @G@@@@       TG,U  A0,27       . DOES THIS EXEC EL
)@@G@@HAVE DMND BRKPT(27 OR LATER)  @C@@@@       J     ER0020      . YES, GO SEM
)@@G@@ET UP FOR IT@E@@@@       LA    A0,(+7*/33) . NO, GET PACKET FOR REG DUMPEN
)@@G@@ ONLY @ @@@@       SA    A0,SNAPKT+1 .    @ @@@@       LA,U  A0,SNAPKT  EO
)@@G@@ .    @D@@@@       ER    SNAP$       . SNAP THE REGISTERS ONLY    @E@@@@EP
)@@G@@       J     ER0110      . GO DISPLAY THE ERROR MESSAGE     @E@@@@. LEVEEQ
)@@G@@L 27 DEMAND RUNS-- SET UP TO BREAKPOINT THE OUTPUT    @D@@@@ER0020 LA,U ER
)@@G@@ A0,ERASGI   . CARD IMAGE FOR BRKPT FILE  @A@@@@       ER    CSF$       ES
)@@G@@ . ASSIGN IT@D@@@@       JNZ   A0,ER0110   . IF NOT AVAILABLE, FORGET ITET
)@@G@@@F@@@@       LA    A0,(+0101,WIDGET) . PRINT$ CONTROL FOR NULL IMAGE    EU
)@@G@@@G@@@@       ER    PRINT$      . AND USE IT TO KEEP OUTPUT SYMBIONT ALIVEV
)@@G@@E     @B@@@@       LA,U  A0,ERBRKI   . 1ST BRKPT CARD @E@@@@       ER   EW
)@@G@@ CSF$        . SET UP TO WRITE IN THAT FILE     @A@@@@. PUT HEADING DATAEX
)@@G@@ ON THE OUTPUT    @C@@@@ER0030 LA    A0,ERHDG1   . CTL WORD FOR HEADING EY
)@@G@@@B@@@@       ER    PRTCN$      . ESTABLISH IT   @B@@@@       LA    A0,EREZ
)@@G@@EJCC   . EJECT CONTROL  @D@@@@       ER    PRTCN$      . START DUMP ON AFA
)@@G@@ FRESH PAGE @D@@@@. DUMP IN 2 PIECES  APL LOCAL STORAGE, THEN THE WS    FB
)@@G@@@D@@@@ER0040 LNA,U A0,FRSTD$   . LOCN OF 1ST WD TO DUMP     @E@@@@      FC
)@@G@@ SNA   A0,SNAPKT+1   . TO ACCESS WORD FOR SNAP DUMP   @F@@@@       AA,U FD
)@@G@@ A0,WSID     . PLUS 1ST WORD OF WS=NO OF LOCS BELOW WS@C@@@@       AA,U FE
)@@G@@ A0,0700000  . TURN REG DUMP BITS ON@G@@@@       SA,H1 A0,SNAPKT+1  . COFF
)@@G@@MPLETE CONSTRUCTION OF SNAP$ ACCESS WD    @ @@@@       LA,U  A0,SNAPKT  FG
)@@G@@  .   @F@@@@       ER    SNAP$        . AND DUMP ALL STORAGE AHEAD OF THFH
)@@G@@E WS  @F@@@@. NOW DUMP WS SEPERATELY, SO RELATIVE ADDRS ARE DISPLAYED ONFI
)@@G@@ DUMP @C@@@@ER0050 LNA,U A0,WSID      . FWA OF WORKSPACE    @B@@@@      FJ
)@@G@@ SNA   A0,SNAPKT+1  . TO PACKET     @F@@@@       AA    A0,RCLASD    . PLFK
)@@G@@US CURRENT LAST D-BANK=NO OF WDS    @C@@@@       SA,H1 A0,SNAPKT+1  . WOFL
)@@G@@RD CT TO PACKET   @ @@@@       LA,U  A0,SNAPKT    .   @C@@@@       ER   FM
)@@G@@ SNAP$        . DUMP THE WORKSPACE  @C@@@@. DUMPS COMPLETE- PUT USER BACFN
)@@G@@K IN BUSINESS     @D@@@@ER0060 LA    A0,ERHDG2   . CTL WD TO TURN OFF HEFO
)@@G@@ADING @A@@@@       ER    PRTCN$      . DO IT    @D@@@@       LA    A0,ERFP
)@@G@@EJCC   . CTL WORD FOR PAGE EJECT    @B@@@@       ER    PRTCN$      . DO FQ
)@@G@@THAT, ALSO  @D@@@@ER0070 TNZ   RCDMND       . IS THIS A DEMAND RUN?     FR
)@@G@@@G@@@@       J     ER0110      . NO, WE'RE DONE.  GO DISPLAY THE ERROR MFS
)@@G@@ESSAGE@F@@@@       LA,U  A0,ERBRKJ    . BREAKPOINT BACK TO NORMAL PRINTFFT
)@@G@@ILE   @ @@@@       ER    CSF$         .   @D@@@@       LA,U  A0,ERFREI  FU
)@@G@@  . FREE THE BREAKPOINT FILE  @ @@@@       ER    CSF$         .   @D@@@@FV
)@@G@@       LA,U  A0,ERSYMI    . SYM IT TO A BATCH PRINTER @ @@@@       ER   FW
)@@G@@ CSF$         .   @D@@@@       J     ER0110      . GO TELL USER WHAT HAPFX
)@@G@@PENED @[@@@@.     @#@[@@       CONSTS .   @G@@[[. PUT CSF$ IMAGES IN D-BFY
)@@G@@ANK SO 1106/1108 WRITE PROTECT FOR REPS WORKS   @#@@[[        VARCON .  FZ
)@@G@@@E[@@@WIDGET +0770000000000    . PRINT$ IMAGE FOR DEMAND LINE SKIP@ @[@@GA
)@@G@@ERASGI '@ASG,C APL$BRKPT . '  @ @@][ERASGI '@ASG,CP APL$BRKPT . ' @A[@@@GB
)@@G@@ERBRKI '@BRKPT PRINT$/APL$BRKPT . ' @#@@@@ERHDGI 'H,P,1,'   @G@@@@ '*** GC
)@@G@@APL SYSTEM ERROR - PLEASE GIVE DUMP TO SYSTEM PROGRAMMER ***.'    @ @@@@GD
)@@G@@ERHDG1 +$-ERHDGI,ERHDGI   .   @#@@@@EREJCI 'L,01.'    @ @@@@EREJCC +$-ERGE
)@@G@@EJCI,EREJCI   .   @ @@@@ERBRKJ '@BRKPT PRINT$ . '     @ @@@@ERFREI '@FREGF
)@@G@@E APL$BRKPT . '   @ @@@@ERSYMI '@SYM APL$BRKPT . '    @#@@@@ERHDGJ 'H,N.GG
)@@G@@'     @^@@@@ERHDG2 +$-ERHDGJ,ERHDGJ @ @@@@/. HANDLE NON-SYSTEM ERRORS   GH
)@@G@@@#@@@@       INSTRS .   @C@@@@ER0100 LA    A0,WSDBUG   . GET DEBUGGING FGI
)@@G@@LAGS  @C@@@@       TOP,U A0,010      . STOP ON ANY ERROR?   @E@@@@      GJ
)@@G@@ J     ER0105      . NO, GO CHECK FOR REENTRANT MAP   @B@@@@       LA   GK
)@@G@@ A0,SNAPA0   . GET ORIGINAL A0@B@@@@       WSDUMP            . DUMP STUFGL
)@@G@@F     @ @@@@       J     ER9000      .    @C@@@@ER0105 TZ,U  REPMAP     GM
)@@G@@ . REENTRANTLY MAPPED?  @E@@@@       J     ER0110      . YES, NO DUMPS OGN
)@@G@@N PRODUCTION RUNS @C@@@@       LA    A0,SNAPA0   . NO, GET SET TO DUMP  GO
)@@G@@@F@@@@       WSDUMP            . AND BLITHER ALL OVER THIS GUY'S OUTPUT GP
)@@G@@@B@@@@. NOW DISPLAY MESSAGE ON USER'S TERMINLA  @F@@@@ER0110 SX    X11,EGQ
)@@G@@RLINK  . TEMP SAVE LINK BEFORE PRINTING MESSAGE @C@@@@       LA,H1 A0,*EGR
)@@G@@RPRNT  . RECOVER ERROR NUMBER @C@@@@       TG,U  A0,MAXERR       . IS ERGS
)@@G@@ROR VALID?  @F@@@@       LA,U  A0,YNONCE       . NO, SET ERROR TYPE TO NGT
)@@G@@ONSENSE     @B@@@@       L,H1  A4,MTABLE,A0    . WORD COUNT @C@@@@      GU
)@@G@@ LSSL  A4,2            . TIMES 4 = CHARS  @B@@@@       L,H2  A3,MTABLE,AGV
)@@G@@0    . ADD OF TEXT@D@@@@       LMJ   X11,PRSEND  . PRINT MESSAGE ON OUTPGW
)@@G@@UT    @E@@[[        LA     A0,RCOPTW      . GET PROCESSOR OPTIONS WORD  GX
)@@G@@@D@@[[        TEP,U  A0,+1*/('Z'-'X')    . IS X-OPTION ON?  @G@@[[      GY
)@@G@@  SX     X11,EABFLG     . RAISE EABT$ FLAG (POLLED BY XQTSUP)     @ @@@@GZ
)@@G@@       LX    X11,ERLINK  .    @D@@@@       LA,H1 A1,*ERPRNT  . AGAIN, GEHA
)@@G@@T THE ERROR NUMBER@F@@@@       JE,U  A1,YSYSTM ER0120 . IF SYSERR, TAKE HB
)@@G@@SPECIAL ACTION    @F@@@@       JE,U  A1,YTERM ER9000  . IF TERMINATION EHC
)@@G@@RROR, GET OUT     @C@@@@       LA    A1,ERPRNT   . GET ADDR OF CALL     HD
)@@G@@@D@@@@       TNZ,H2 0,A1       . WAS A SPECIAL EXIT GIVEN?  @C@@@@      HE
)@@G@@ J     1,A1        . NO, TAKE NORMAL XIT  @E@@@@       LA,H2 A1,0,A1    HF
)@@G@@ . ELSE GET EXIT ADDR FROM PACKET   @B@@@@       J     0,A1        . ANDHG
)@@G@@ GO THERE   @E@[@@ERRMSG* J    0,X11       . FOR HISTORICAL REASONS ONLYHH
)@@G@@......@ [@@@. CLEANUP FOR SYSTEM ERRORS   @E@@@@ER0120 TNZ,U REPMAP     HI
)@@G@@ . IS THIS A PRODUCTION VERSION?    @D@@@@       J     ER9000      . NO,HJ
)@@G@@ DEBUGGING- GET OUT     @E@@@@       DL    A0,CLEAR    . YES, GET DUMMY HK
)@@G@@CLEAR WS CMND     @D@@@@       DS    A0,CIOBUF   . TO USER CONSOLE I/O BHL
)@@G@@UFFER @ @@@@       LXI,U X11,XQTREP  .    @B@[@@       LIJ   X11,XQTR   HM
)@@G@@ . GO REINITIALIZE@B@@][       LIJ   X11,XQT     . GO REINITIALIZE@[[@@@HN
)@@G@@.     @G@@@@. TRY TO TERMINATE GRACEFULLY BY CALLING SYSCMD MODULE TO FRHO
)@@G@@EE LIBE FILE@[@@@@.     @A@@@@ER9000 CALREP,SYSREP X11,ERROFF    .@#@@@@HP
)@@G@@       VARCON .   @F@@[[EABFLG* +0                    . SET NON-ZERO TO HQ
)@@G@@ABORT THE RUN     @#@@@@SNAPKT* 'SYSERR' .@#@@@@       +$-$,$-$  .@C@@@@HR
)@@G@@SNAPA0 RES   1 . TEMP STORAGE OF A0 AT DUMP TIME@#@@@@       VARBLS .   HS
)@@G@@@#@@@@ERLINK RES   1 .  @#@@@@ERRLOC* RES   1 . @#@@@@       CONSTS .   HT
)@@G@@@ @@@@CLEAR  APLBCI  ')CLE'    .    @ @@@@       +AA,AR,ASPACE,AEOL  .  HU
)@@G@@@]@@@@       END .___    J     ER0105      . NO, GO CHECK FOR REENTRANT HV
)@@G@@MAP   @B@@@@       LA    A0,SNAPA0   . GET ORIGINAL A0@B@@@@       WSDUMHW
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************HX
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APHY
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         HZ
)@@G@@                            * @^@@@@       AXR$         .   @C@@@@      IA
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@       APSYMB.     DEFINIB
)@@G@@E APL SYMBOL SET                              * @G@@@@       FDSYMB.    IC
)@@G@@ DEFINE FIELDATA SYMBOLS                            * @G@@@@       WSDEFID
)@@G@@.      DEFINE WORKSPACE                                   * @G@@@@WORKSPIE
)@@G@@ INFO  2 20.      SET ASIDE THE SPACE                           * @G@@@@IF
)@@G@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                            * IG
)@@G@@@G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE                  IH
)@@G@@    * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES       II
)@@G@@          * @G@@@@.                                                     IJ
)@@G@@                * @G@@@@. END OF STANDARD PROC BLOCK                    IK
)@@G@@                      * @G@@@@. ****************************************IL
)@@G@@***************************** @[@@@@.     @ @@@@P      PROC             IM
)@@G@@ .    @G@@@@ECHOLN* NAME             . ECHO THE LINE AS IT WOULD APPEAR IN
)@@G@@ON A TTY    @ @@@@       UNLI$T            .    @E@[@@       LMJ   X11,RIO
)@@G@@E0110  . BUILD A LINE IMAGE IN THE BUFFER @E@[@@       SA,S3 A0,REPPKT  IP
)@@G@@ . SAVE A WORD COUNT INTO THE PACKET@B@[@@       LA    A0,REPPKT   . GETIQ
)@@G@@ THE PACKET @B@[@@       ER    PRINT$      . PRINT THE LINE @B@@[[      IR
)@@G@@ TZ    RCDMND      . BATCH JOB?     @G@@[[       TZ    RCALTF      . NO,IS
)@@G@@ DEMAND. IS ALT PRINT FILE TO BE USED?    @E@@[[       J     EL0010     IT
)@@G@@ . IF BATCH OR ALT, GO CONVERT IMAGE@B@@[[       J     EL0020      . ELSIU
)@@G@@E GET OUT   @E@@[[EL0010 LMJ   X11,RE0110  . CONVERT INTERNAL TO EXTERNAIV
)@@G@@L     @D@@[[       SA,S3 A0,REPPKT   . SAVE IMAGE LENGTH IN PACKET@B@@[[IW
)@@G@@       LA    A0,REPPKT   . GET ACCESS WORD@D@@[[       SA    A0,RCALTP  IX
)@@G@@ . POST IN ALT PRINT$ PACKET  @A@@[[       TNZ   RCDMND      . BATCH?   IY
)@@G@@@A@@[[       ER    PRINT$      . YES, ECHO@D@@[[       LA,U  A0,RCALTP  IZ
)@@G@@ . GET PTR TO ALT PRINT PACKET@C@@[[       TZ    RCALTF      . USE ALT PJA
)@@G@@RINT FILE?  @C@@[[       ER    PRNTA$      . YES, IMAGE TO FILE   @#@@[[JB
)@@G@@EL0020 . EXIT HERE@ ^@@@       LI$T              .    @ @@@@       END  JC
)@@G@@             .    @ @@@@/      INSTRS            .    @#@[@@TREAFD*     JD
)@@G@@ .    @B@[@@       SX    X11,RELINK  . SAVE RETURN    @F@@[[. THIS ENTRYJE
)@@G@@ FROM ASINOU IF IT HAS SEEN FIELDATA IN AN @ADD FILE  @C@@[[TREAFA* SZ  JF
)@@G@@ READDF      . TURN READ$ FLAG OFF  @B@@[[       SA    A0,REASAV   . SAVJG
)@@G@@E A0 STATUS @ @@[[       J     RE0005      .    @#@@[[. NORMAL ENTRY    JH
)@@G@@@C@@[[TREAFD* SX   X11,READDF  . TURN ON READ$ FLAG   @[@@[[.     @ @@[[JI
)@@G@@RE0005 SX    X11,RELINK  .    @G]@@@       OUTCNV RCLSIZ CIOBUF,REOBUF .JJ
)@@G@@ CONVERT CHARS IN BUF TO FIELDATA   @B@@@@       SA    A4,REOCNT   . SAVJK
)@@G@@E CHAR COUNT@F@@@@       SA,S3 A0,RETPKT   . SAVE NUMBER OF WORDS IN TREJL
)@@G@@AD$ PACKET  @C@@@@       LA    A0,BFEOLP   . GET BUFFER POINTER   @F@@@@JM
)@@G@@       SA    A0,REBPOS   . SAVE IT SO WE CAN RECOVER IF ERROR     @H@@@@JN
)@@G@@       SA    A0,REBSAV   . SAVE FOR RASCII SO IT CAN RESTORE FOR LN DELEJO
)@@G@@TE    @C@@@@RE0010 LMJ   X11,BFBAKN  . GET BUFFER PNTRS     @C@@@@      JP
)@@G@@ SZ    BFEOLP      . TURN OF EOL SEEN LINE@E@@@@       SX    X11,BFOLET JQ
)@@G@@ . TURN ON BUFFER ONERFLOW ALLOWED  @H@@@@       LA    A0,READDF   . GETJR
)@@G@@ FLAG TELLING IF READ$/TREAD$ HAS BEEN DONE     @H@@@@       JZ    A0,REJS
)@@G@@0035   . SKIP THE READ CODE IF IT'S BEEN DONE IN ASINOU     @C@@@@      JT
)@@G@@ TIMEON            . TURN KEYING TIMER ON @B@@@@       TZ    RCDMND     JU
)@@G@@ . ARE WE DEMAND? @B@@@@       J     RE0020      . YES, GO TREAD  @A@@@@JV
)@@G@@       LA    A0,RERPKT   . BATCH    @C@@@@       ER    READ$       . DO JW
)@@G@@A SIMPLE READ     @ @@@@       J     RE0030      .    @A@@@@RE0020 LA,U JX
)@@G@@ A0,RETPKT   . DEMAND   @B@@@@       ER    TREAD$      . DO A TREAD     JY
)@@G@@@C@@@@RE0030 SA    A0,REASAV   . SAVE NO WORDS READ   @F@@@@       TIMOFJZ
)@@G@@F            . TURN OFF TIMER AND UPDATE KEYING TIME  @ @@@@       LA,S1KA
)@@G@@ A0,RECARD   .    @C@@@@       JNE,U A0,REAFLG RE0035 . WAS INPUT ASCII?KB
)@@G@@@G@@@@       LMJ   X11,RASCII  . ASCII INPUT-- GO SIMULATE FIELDATA READKC
)@@G@@$     @B@@@@       J     RE0010      . REREAD RETURN  @D@@@@RE0035 LA,H2KD
)@@G@@ A0,REASAV   . GET NUMBER OF WORDS READ   @G@@@@       MSI,U A0,6       KE
)@@G@@ . MULTIPLY BY SIX GIVING NO OF CHARS TO CNVRT  @B@@@@       SA    A0,REKF
)@@G@@RCNT   . SAVE CHAR COUNT@C@@@@       JZ    A0,RE0050   . BLANK CARD INPUKG
)@@G@@T     @E@@@@       SA    A0,R1       . AND PUT IT INTO R1 FOR CNVERT    KH
)@@G@@@D@@@@       LA    A0,(+1,+RECARD) . SET UP WORD POINTER    @H@@@@      KI
)@@G@@ TNZ   READDF      . SKIP READ CODE ON , IF SO GET INPUT FROM ASBUFR    KJ
)@@G@@@ @@@@       LA    A0,(+1,ASBUFR)   @C@@@@       LMJ   X11,INEDFD  . EDIKK
)@@G@@T CARD TO INTERNAL@F@@@@       J     RE0040      . ILLEGAL CHARS, BOUNCEKL
)@@G@@ BACK TO USER     @B@@@@       J     RE0060      . NORMAL EXIT    @ @@@@KM
)@@G@@.      ILLEGAL CHARACTERS     @D@@@@RE0040 SA    A1,REIPOS   . SAVE BAD KN
)@@G@@CHARACTER POSITION@D@@@@       SZ    RCPTIF      . CLEAR PAPER TAPE INPUKO
)@@G@@T FLAG@ @[@@       TNZ   READDF      .    @ @[@@       J     RE0042     KP
)@@G@@ .    @B@[@@       TZ    RCDMND      . ARE WE DEMAND? @F@[@@       J    KQ
)@@G@@ RE0045      . YES, THEN WE DONT NEED TO ECHO THE LINE@B@[@@RE0042 ECHOLKR
)@@G@@N            . ECHO THE LINE  @D@@[[       ECHOLN            . ECHO THE KS
)@@G@@LINE, IF NECESSARY@C @@@RE0045 LR,U  R1,22       . GET LENGTH OF BUFFER KT
)@@G@@@E@@@@       LA,U  A0,('      ') . GET ADDREWW OF A WORD OF BLANKS@E@@@@KU
)@@G@@       LA,U  A1,RELIMG   . PUT ADDRESS OF BUFFER INTO XREG  @E@@@@      KV
)@@G@@ LXI,U A1,1        . SET INCREMENT FOR BLOCK TRANSFER @A@@@@       BT   KW
)@@G@@ A1,,*A0     . CLEAR IT @C@@@@       LA    A0,REIPOS   . GET BAD CHAR POKX
)@@G@@SITION@E@@@@       AA    A0,REOCNT   . ADD NUMBER OF CHARS WE OUTPUT    KY
)@@G@@@C@@@@       TG,U  A0,130      . TEST FOR OVERFLOW    @E@@@@       LA,U KZ
)@@G@@ A0,130      . PUT MARK AT END IF OVER 130 CHARS@A@@@@       DSA   A0,36LA
)@@G@@       . ALIGN IT @F@@@@       DI,U  A0,6        . DIVIDE, GIVING WORD ALB
)@@G@@ND CHAR POSITION  @ @@@@       LA,U  A2,RELIMG,A0 .   @B@@@@       LA,U LC
)@@G@@ A4,'^'      . LOAD A MARK    @B@@@@       EX    RESSXS,A1   . STORE MARLD
)@@G@@K     @C@@@@       LA    A0,REPPK2   . GET THE PRINT PACKET @C@@@@      LE
)@@G@@ ER    PRINT$      . PRINT THE LINE IMAGE @C@@@@       LA    A0,REIMSG  LF
)@@G@@ . GET CHAR ERR PACKET  @B@@@@       ER    PRINT$      . PRINT MESSAGE  LG
)@@G@@@C@@@@       LA    A0,REBPOS   . RESET BUFFER POINTERS@H@@@@       TZ   LH
)@@G@@ READDF      . IF FLAG=0 DON'T RE-PROMPT,RETURN WITH NULL LINE    @A@@@@LI
)@@G@@       J     RE0010      . TRY AGAIN@#@@@@       LA,U  A0,0 @ @@@@      LJ
)@@G@@ LMJ   X11,BFBAKN  .    @#@@@@.      NULL  LINE @A@@@@RE0050 LA,U  A1,AELK
)@@G@@OL     . GET A EOL@C@@@@       LMJ   X2,0,X2     . STASH INTO THE LINE  LL
)@@G@@@C@@@@       SZ    QESCAP      . TURN OFF ESCAPE FLAG @F@@@@RE0060 SZ   LM
)@@G@@ BFOLET      . TURN OFF BUFFER OVERFLOW ALLOWED FLAG  @B@[@@       TZ   LN
)@@G@@ RCDMND      . IS RUN DEMAND? @C@[@@       J     RE0070      . YES, DONTLO
)@@G@@ ECHO LINE  @ @[@@       ECHOLN            .    @G@@[[       ECHOLN     LP
)@@G@@       . ECHO THE LINE IF BATCH OR IN )SITE,)CSITE MOD@@@@[[@ #@@@RE0070LQ
)@@G@@ LX    X11,RELINK  .    @ @@@@       J     1,X11       .    @ @@@@.     LR
)@@G@@ BUILD A NEW LINE IMAGE @[@@@@.     @G@@@@RE0110 SZ    A5          . SETLS
)@@G@@ FLAG INDICATING 1ST PASS THROUGH LOOP    @E@@@@       LA    A3,('      LT
)@@G@@') . BLANK OUT THE BUFFER FIRST     @A@@@@       SA    A3,RELIMG   . DUMLU
)@@G@@MEY   @A@@@@       LA    A3,(1,0)    . GET INDEX@D@@@@       LA    A2,(1LV
)@@G@@,RELIMG) . AND WORD POINTER FOR SAVE@A@@@@       LA    A1,(1,0)    . GETLW
)@@G@@ INDEX@D@@@@       LA    A0,(1,REOBUF) . AND WORD POINTER FOR GET @F@@@@LX
)@@G@@       LR    R1,REOCNT   . GET NUMBER OF CHARACTERS IN REOBUF     @ @@@@LY
)@@G@@RE0120 JNGD  R1,RE0150   .    @D@@@@RE0130 EX    RELSXS,*A1  . PICK UP TLZ
)@@G@@HE NEXT CHARACTER @E@@@@RE0140 EX    RESSXS,*A3  . STORE IT INTO THE LINMA
)@@G@@E IMAGE     @ @@@@       J     RE0120      .    @ @@@@RE0150 JNZ   A5,REMB
)@@G@@0160   .    @ @@@@       LR    R1,RERCNT   .    @ @@@@       LXM,U A0,REMC
)@@G@@CARD   .    @ @@@@       TNZ   READDF      .    @ @@@@       LXM,U A0,ASMD
)@@G@@BUFR   .    @ @@@@       LXM,U A1,0        .    @ @@@@       LA    A5,X1ME
)@@G@@1      .    @ @@@@       J     RE0120      .    @F@@@@RE0160 ANA   A2,(1MF
)@@G@@,RELIMG) . COMPUTE LENGTH OF IMAGE IN WORDS     @D@@@@       LA,U  A0,1,MG
)@@G@@A2     . ADD ONE TO GET WORD COUNT  @C@@@@       J     0,X11       . RETMH
)@@G@@URN TO CALLER     @]@@@@       .    @]@@@@       .    @ @@@@RELSXS LA,S1MI
)@@G@@ A4,,A0      .    @ @@@@       LA,S2 A4,,A0      .    @ @@@@       LA,S3MJ
)@@G@@ A4,,A0      .    @ @@@@       LA,S4 A4,,A0      .    @ @@@@       LA,S5MK
)@@G@@ A4,,A0      .    @ @@@@       LA,S6 A4,,*A0     .    @ @@@@       J    ML
)@@G@@ $+1         .    @ @@@@       LXM,U A1,0        .    @ @@@@       J    MM
)@@G@@ RE0130      .    @]@@@@       .    @]@@@@       .    @ @@@@RESSXS SA,S1MN
)@@G@@ A4,,A2      .    @ @@@@       SA,S2 A4,,A2      .    @ @@@@       SA,S3MO
)@@G@@ A4,,A2      .    @ @@@@       SA,S4 A4,,A2      .    @ @@@@       SA,S5MP
)@@G@@ A4,,A2      .    @ @@@@       SA,S6 A4,,A2      .    @ @@@@       J    MQ
)@@G@@ $+1         .    @ @@@@       LA    A3,('      ') .  @ @@@@       SA   MR
)@@G@@ A3,1,*A2    .    @ @@@@       LA    A3,(1,0)    .    @ @@@@       J    MS
)@@G@@ RE0140      .    @]@@@@. EOF EXIT  @^@@@@RE0100 LX X11,RELINK    @A@@@@MT
)@@G@@       J     0,X11     . ERROR EXIT @ @@@@       VARBLS            .    MU
)@@G@@@ @@@@RECARD RES   34          .    @#@@@@REBSAV RES   1    @B@@@@REAFLGMV
)@@G@@ EQU   077         . ASCII FLAG CR  @ @[@@ASCFDI EQUF  ASCIFD,,H1  .    MW
)@@G@@@F@@[[ASCFDI  EQUF   FDASS4,,S4     . TABLE TO GET FIELDATA FROM ASCII  MX
)@@G@@@ [@@@RELIMG RES   22          .    @ @@@@REOBUF RES   22          .    MY
)@@G@@@ @@@@REKSAV RES   2           .    @ @[@@REASAV* RES   1           .   MZ
)@@G@@@ @@][REASAV RES   1           .    @G@[@@READDF* +    1           . FLANA
)@@G@@G SET TO ZERO TO SKIP READ$/TREAD$ CODE   @[]@@@.     @ @@@@REOCNT EQUF NB
)@@G@@ $,,Q1       .    @ @@@@RERCNT EQUF  $,,Q2       .    @#@@@@RELINK EQUF NC
)@@G@@ $,,H2@ @@@@       RES   1           .    @[@@@@.     @ @@@@REIPOS EQUF ND
)@@G@@ $,,Q1       .    @ @@@@REBPOS EQUF  $,,Q2       .    @G@@[[READDF EQUF NE
)@@G@@ $,,H2       . READ$ FLAG- ON IF THIS RTNE MUST DO READ$    @ @@@@      NF
)@@G@@ RES   1           .    @[@@@@.     @ @@@@P      FORM  12,6,18     .    NG
)@@G@@@ @@@@       CONSTS            .    @ @@@@REPPK2 P     1,22,RELIMG .    NH
)@@G@@@ @@@@REIMSG P     1,3,$+1     .    @ @@@@       'CHARACTER ERROR   '   NI
)@@G@@@ @@@@RERPKT +     RE0100,RECARD .  @ @@@@       VARCON            .    NJ
)@@G@@@ @@@@RETPKT P     1,0,REOBUF  .    @ @@@@       +     RE0100,RECARD   .NK
)@@G@@@ @@@@REPPKT P     1,0,RELIMG  .    @B@@@@/ . ROUTINE TO SIMULATE FIELDANL
)@@G@@TA READ$ .  @[@@@@.     @[@@@@.     @ @@@@       INSTRS            .    NM
)@@G@@@B@@@@RASCII LA,H2 A0,REASAV   . LOAD WORD COUNT@D@@@@       LSSL  A0,2 NN
)@@G@@       . MULT BY 4 TO GET CHAR COUNT@C@@@@       ANA,U A0,1        . MAKNO
)@@G@@E COUNT CORRECT   @D@@@@       LX,U  X4,GLFTBL+ZMOCHR . INITIALIZE Q.W. NP
)@@G@@FETCH @ @@@@       LXI,U X5,1        .    @ @@@@       LXM,U X5,RECARD  NQ
)@@G@@ .    @D@@@@       LXI,U A2,1        . INITIALIZE STORE ROUTINE   @ @@@@NR
)@@G@@       LXM,U A2,RECARD   .    @ @@@@       SA    A2,RATEST   .    @D@@@@NS
)@@G@@       LA,U  A4,0        . INITIALIZE STORE COUNT     @ @@@@       LXI,UNT
)@@G@@ A3,1        .    @ @@@@       LXM,U A3,REASTB   .    @E@@@@RA0010 LMJ  NU
)@@G@@ X4,0,X4     . MOVE OVER ASCII FLAG IN BUFFER   @[@@@@.     @[@@@@.     NV
)@@G@@@[@@@@.     @ @@@@RA0025 JNGD  A0,RA0050   .    @B@@@@       LMJ   X4,0,NW
)@@G@@X4     . GET CHARACTER  @F@@@@       JE,U  A1,CHDELT RA0075 . WAS CHAR ANX
)@@G@@ CHAR DELETE CHARACTER ?@G@@@@       JE,U  A1,LNDELT RA0150 . WAS CHAR ANY
)@@G@@  LINE DELETE CHARACTER ?     @C@@@@       TE,U  A1,RACRRT   . WAS CHAR NZ
)@@G@@A CAR RET ? @B@@@@       TNE,U A1,RACISI  . WAS CHAR A SI?  @B@@@@      OA
)@@G@@ J     RA0175      . GO FINISH UP   @C@@@@       TE,U  A1,RALNFD   . WASOB
)@@G@@ CHAR A LINE FEED?@C@@@@       TNE,U A1,RAVTAB   . WAS CHAR A VERT TAB  OC
)@@G@@@C@@@@       J     RA0025      . MAKE CHAR TRANSPARENT@ @@@@       LA   OD
)@@G@@ A1,ASCFDI,A1 .   @D@@@@       AA,U  A4,1        . INCREASE CHAR COUNT BOE
)@@G@@Y ONE @C@@@@       EX    0,*A3       . STORE THE CHARACTER  @C@@@@      OF
)@@G@@ TNE,U A4,132      . MAX CHAR COUNT OF 132@D@@@@       J     RA0175     OG
)@@G@@ . GO FINISH UP AND GET OUT   @C@@@@       J     RA0025 . GO GET NEXT CHOH
)@@G@@ARACTER     @[@@@@.     @[@@@@.     @D@@@@. CODE TO DO ANOTHER READ$ (NOOI
)@@G@@ CR RET OR SI FOUND)    @[@@@@.     @C@@@@RA0050 LA,H2 A0,RETPKT+1 . MAKOJ
)@@G@@E UP READ PACKET  @B@@@@       TNE,U A0,RECARD+20 . FOURTH READ$ ?@E@@@@OK
)@@G@@       J     RA0175      . NOT PERMITTED GO AND GET OUT     @D@@@@      OL
)@@G@@ AA,U  A0,10       . MOVE READ PKT OVER 10 WORDS@C@@@@       SA,H2 A0,REOM
)@@G@@TPKT+1 . REMBER FOR NEXT TIME @ @@@@       SA,H2 A0,RATEST   .    @E@@@@ON
)@@G@@       LXI,U A0,RE0100   . END OF FILE RET FOR READ PKT     @ @@@@      OO
)@@G@@ ER    READ$       .    @ @@@@       LXI,U A0,0        .    @E@@@@      OP
)@@G@@ LSSL  A0,2        . MULTIPLY BY 4 TO GET CHAR COUNT  @D@@@@       LX,U OQ
)@@G@@ X4,GLFTBL+ZMOCHR  . INITIALIZE Q.W. FETCH@ @@@@       LX    X5,RATEST  OR
)@@G@@ .    @ @@@@       J     RA0010      .    @[@@@@.     @[@@@@.     @A@@@@OS
)@@G@@. CHARACTER DELETE HANDLED HERE     @[@@@@.     @F@@@@RA0075 JNE   A3,(1OT
)@@G@@,REASTB) RA0100 . STORE TABLE POINTING TO S1?   @E@@@@       JE    A2,(1OU
)@@G@@,RECARD) RA0025 . STORE INTO FIRST WORD?  @E@@@@       ANA,U A2,1       OV
)@@G@@ . MOVE WORD POINTER BACK ONE WORD  @C@@@@       LXM,U A3,REASTB+5 . SETOW
)@@G@@ UP STORE IN S6   @ @@@@       J     RA0125      .    @B@@@@RA0100 ANA,UOX
)@@G@@ A3,1        . BACK UP 1 CHAR @E@@@@RA0125 ANA,U A4,1        . SUBTRACT OY
)@@G@@ONE FROM CHAR COUNT     @C@@@@       J     RA0025      . GO GET NEXT CHAOZ
)@@G@@R     @[@@@@.     @ @@@@. LINE DELETE HANDLED HERE    @[@@@@.     @E@@@@PA
)@@G@@RA0150 LA    A0,REBSAV   . FOR  MAIN ROUTINE INITIALIZATION @B@@@@      PB
)@@G@@ J     0,X11       . GO REDO READ   @[@@@@.     @[@@@@.     @^@@@@.  FINPC
)@@G@@ISH UP AND GET OUT@[@@@@.     @B@@@@RA0175 LA,U  A1,RABLNK   . LOAD BLANPD
)@@G@@K     @C@@@@  DO  5  , EX  0,*A3     . PAD BLANKS IN BUFFER @C@@@@      PE
)@@G@@ DSA   A4,36       . PREPARE TO DIVIDE    @C@@@@       DI,U  A4,6       PF
)@@G@@ . COMPUTE WORD COUNT   @B@@@@       JZ    A5,$+2      . REMAINDER?     PG
)@@G@@@B@@@@       AA,U  A4,1        . ADD ONE TO WORD@C@@@@       SA    A4,REPH
)@@G@@ASAV   . STORE WORD COUNT     @ @@@@       LA,U  A0,RECARD   .    @C@@@@PI
)@@G@@       SA,H2 A0,RETPKT+1 . RESTORE READ$ PACKET @A@@@@       J     1,X11PJ
)@@G@@       . RETURN   @[@@@@.     @[@@@@.     @[@@@@.     @D@@@@.  EXECUTE TPK
)@@G@@ABLE FOR ASCII TO FIELDATA CONVERSION     @ @@@@       SA,S6 A1,0,*A2   PL
)@@G@@ .    @ @@@@       LMJ   A3,0,A3     .    @ @@@@REASTB SA,S1 A1,0,A2    PM
)@@G@@ .    @ @@@@       SA,S2 A1,0,A2     .    @ @@@@       SA,S3 A1,0,A2    PN
)@@G@@ .    @ @@@@       SA,S4 A1,0,A2     .    @ @@@@       SA,S5 A1,0,A2    PO
)@@G@@ .    @^@@@@       LMJ   A3,REASTB-2@[@@@@.     @[@@@@.     @[@@@@.     PP
)@@G@@@ @@@@       VARBLS            .    @A@@@@RACRRT EQU   015         . CARPQ
)@@G@@ RET  @A@@@@RABLNK EQU   05          . BLANK    @A@@@@RACISI EQU   017  PR
)@@G@@       . SHIFT OUT@A@@@@RALNFD EQU   012         . LINE FEED@A@@@@RAVTABPS
)@@G@@ EQU   013         . VERT TAB @#@@@@RATEST RES   1 .  @[@@@@.     @B@@@@PT
)@@G@@/. INPUT EDITING RTNE FOR FIELDATA INPUT  @H@[@@. ***** CAUTION ***** THPU
)@@G@@IS ROUTINE MAY BE EXECUTED BY MULTIPLE ACTIVITIES     @G@[@@. (FOR )OPR,PV
)@@G@@ )MSG, AND NORMAL I/O)  . ITS LOCAL STORAGE IS PROTECTED BY @G@[@@. A TSPW
)@@G@@, AND TO PREVENT TS LOCKUPS, THIS ROUTINE SHOULD NOT CALL ANY     @^@[@@PX
)@@G@@. OTHER SUBROUTINES.    @G@@[[. NOTE: PREVIOUS ASYNCHRONOUS ENTRIES TO TPY
)@@G@@HIS ROUTINE NO LONGER OCCUR   @[^@@@.     @G@@@@.     THIS ROUTINE SCANSPZ
)@@G@@ AN ENTIRE FIELDATA LINE AND CONVERTS IT TO     @G@@@@.     INTERNAL CODQA
)@@G@@E.  ALTHOUGH IT WOULD BE FASTER TO DO IT ON THE FLY   @F@@@@.     DURINGQB
)@@G@@ SYNTAX SCAN, WE INSTEAD SUFFER 2 SCANS OF THE CARD   @#@@@@.     SO THAQC
)@@G@@T:    @G@@@@.        (1) THE SYNTAX SCANNER IS GUARANTEED ONLY LEGITIMATQD
)@@G@@E CHARS     @G@@@@.        (2) WE HAVE A FIRM HANDLE ON THE LOCATION OF QE
)@@G@@ILLEGAL CHARS AT  @G@@@@.            A LEVEL CLOSE TO THE TERMINAL USER.QF
)@@G@@ THIS MAKES IMMEDIATE   @G@@@@.            DIAGNOSTICS POSSIBLE, WITHOUTQG
)@@G@@ HAVING TO UNDO ANYTHING THE  @G@@@@.            SYNTAX SCANNER MAY HAVEQH
)@@G@@ DONE PRIOR TO DETECTING THE ERROR  @F@@@@.     WHEN WE HAVE A SPECIAL AQI
)@@G@@PL SYMBIONT, THIS ILLIGAL CHARACTER @G@@@@.     DETECTION WILL BE DONE AQJ
)@@G@@T THE SYMBIONT LEVEL, ELIMINATING THE     @A@@@@.     UNDESIREABILITY OFQK
)@@G@@ THIS METHOD@F@@@@.     THE EDITED INPUT IMAGE WILL BE MOVED TO THE USERQL
)@@G@@'S WORKSPACE@F@@@@.     INPUT BUFFER. THE SOURCE IMAGE WILL BE BLANKED, QM
)@@G@@EXCEPT THAT @F@@@@.     FIELDATA DOLLAR SIGNS WILL APPEAR IN POSITIONS WQN
)@@G@@HERE ILLEGAL@G@@@@.     CHARACTERS WERE FOUND. IN THIS MANNER, THE OLD IQO
)@@G@@NPUT LINE MAY     @G@@@@.     BE IMMEDIATELY BOUNCED BACK TO THE USER SOQP
)@@G@@ HE CAN SEE WHERE THE   @#@@@@.     ERRORS ARE. @[@@@@.     @G@@@@.     QQ
)@@G@@CALLING SEQUENCE-  LA  A0,(+1,FWA)  . POINTER TO FIELDATA IMAGE   @F@@@@QR
)@@G@@.                        LR,U R1,NCHARS   . NO OF CHARS IN IMAGE  @B@@@@QS
)@@G@@.                        LMJ  X11,INEDFD  @A@@@@.                       QT
)@@G@@ J    ERROR @C@@@@.         THIS ROUTINE USES X11,A0-A3  AND R1   @F@@@@QU
)@@G@@. IN ADDITION, R2=COMPLEMENT OF NO OF NON-BLANK APL CHARS STORED  @G@@@@QV
)@@G@@. **********************************************************************QW
)@@G@@@G@@@@. *  AND ITS USED, GEORGE.  WHY THE HELL DID YOU BLOW THE PROGRAM QX
)@@G@@TO   *@G@@@@. * TO SMITHEREENS BY DELETING IT AFTER I HAD TAKEN SUCH CARQY
)@@G@@E TO       *@G@@@@. * DOCUMENT IT IN THE ABOVE COMMENT??                QZ
)@@G@@                 *@G@@@@. **********************************************RA
)@@G@@************************@[@@@@.     @ @@@@       INSTRS            .    RB
)@@G@@@E@@@@. THIS ENTRY FROM FDINOU (ABOVE) FOR INPUT FROM RUNSTREAM   @C@@@@RC
)@@G@@INEDFD LA    A1,QESCAP   . GET GLOBAL O-U-T FLAG@H@[@@       TS    INLOCRD
)@@G@@K      . MAKE SURE ONLY ONE ACTIVITY AT A TIME THRU HERE    @D[@@@      RE
)@@G@@ SA    A1,INQFLG   . POST ESCAPE FLAG, IF ANY   @G@@@@       SX    X11,IRF
)@@G@@NQTST  . AND SET FLAG INDICATING IT SHOULD BE USED    @G@@@@       SX   RG
)@@G@@  X11,INSTRP . USING BUFFER STASH ROUTINES BACKUP ALLOWED   @F@@@@      RH
)@@G@@ LA,U  A1,1        . SET FLAG TO ALLOW PADDING WITH EOL     @E@@@@      RI
)@@G@@ J     IN0005      . AND PROCEED TO XLATE THE LINE    @E@@@@. THIS ENTRYRJ
)@@G@@ USED TO XLATE MESSATES  O-U-T IS NEVER ALLOWED @F@@@@TRANFD* LA,U A1,1 RK
)@@G@@       . SET FLAG TO ALLOW PADDING WITH EOL     @ @@@@       J     IN000RL
)@@G@@3      .    @F@@@@TRANFN* LA,U A1,0        . SET FLAG TO INHIBIT PADDINGRM
)@@G@@ WITH EOL   @G@[@@IN0003 TS    INLOCK      . BE SURE ONLY 1 ACTIVITY AT RN
)@@G@@A TIME IS IN HERE @F@[@@       SZ    INQTST      . INHIBIT RESET OF GLOBRO
)@@G@@AL VAR AT EXIT    @F@@[[IN0003  SZ      INQTST        . INHIBIT RESET OFRP
)@@G@@ QFLAG AT EXIT    @D]@@@       LX,U  X2,INTPUT   . SET UP STASH ROUTINE RQ
)@@G@@ADDR. @G@@@@       SZ     INSTRP     . NOT USING BUFFER STASH ROUTINES,NRR
)@@G@@O BACKUP    @[@@@@.     @ @@@@IN0005 SX    X11,INLINK  .    @C@@@@      RS
)@@G@@ SA    A1,INPADF   . POST PADDING FLAG    @D@@@@       SZ    INONBL     RT
)@@G@@ . CLEAR NO OF NONBLANK CHARS @D@@@@       LR,U  R2,0        . AND INITIRU
)@@G@@ALIZE THE COUNTER @E@@@@       LX,U  X11,FDGET   .  LOAD ADDRESS OF PICKRV
)@@G@@ ROUTINE    @F@@@@       SR    R1,INSTRC   . SAVE NUMBER OF CHARACTERS TRW
)@@G@@O TRANSLATE @E@@@@       LA,U  A4,0        . SET OFFSET TO ZERO FIRST,DURX
)@@G@@MMY   @C@@@@       SZ    INEFLG      . CLEAR ERROR FLAG     @[@@@@.     RY
)@@G@@@[@@@@.     @F@@@@IN0010 JNGD  R1,IN0100   . ARE THERE ANY MORE CHARACTERZ
)@@G@@RS TO DO?   @D@@@@IN0013 LMJ   X11,,X11    . FETCH THE  NEXT CHARACTER  SA
)@@G@@@D@@[[        TNE,U   A1,077        . IS IT A PRINTSTOP?    @C@@[[      SB
)@@G@@  J       IN0010        . YES, IGNORE IT  @D@@@@       JNZ   A4,IN0040  SC
)@@G@@ . WAS LAST CHARACTER A FLAG? @F@@@@       LA,Q2 A4,FDTABL,A1. NO, GET BSD
)@@G@@ASE OFFSET (IF THIS IS A FLAG)@F@@@@       JZ    A4,IN0040   . IF NOT A SE
)@@G@@FLAG CHAR, GO TO TRANSLATE IT @F@@@@       TZ    INPADF      . IT IS A FSF
)@@G@@LAG, IS NO TRANSLATE MODE ON? @D@@@@       J     IN0010      . NO, GO GESG
)@@G@@T NEXT CHARACTER  @E@@@@       LA,U  A4,ADOLAR   . YES, GET INTERNAL CODSH
)@@G@@E FOR '$'   @B@@@@       TE,U  A1,'$'      . IS IT A '$'?   @G@@@@      SI
)@@G@@ LA,U  A4,AAT      . NO, IT MUST BE AN '@', GET INTERNAL CODE     @F@@@@SJ
)@@G@@       LA    A1,A4       . PUT INTERNAL CODE INTO A1 FOR OUTPUT   @F@@@@SK
)@@G@@       SZ    A4          . MAKE SURE FLAG SEEN REG IS CLEARED     @F@@@@SL
)@@G@@       J     IN0050      . PUT CHAR INTO OUTPUT LINE AND CONTINUE @D@@@@SM
)@@G@@IN0040 AA    A1,A4       . ADD BASE OFFSET TO CHAR    @D@@@@       SZ   SN
)@@G@@ A4          . RESET BASE OFFSET TO ZERO  @E@@@@       LA,Q1 A1,FDTABL,ASO
)@@G@@1 . GET INTERNAL CODE FOR CHARACTER @C@@@@       JZ    A1,IN0110   . IF SP
)@@G@@ZERO ILLEGAL CODE @F@@@@       TNE,U A1,AESCAP   . IS THIS ESCAPE FROM QSQ
)@@G@@UOTE-QUAD INPUT?  @C@@@@       J     IN0060      . GO SEE IF ITS ALLOWEDSR
)@@G@@@E@@@@IN0050 JGD   R2,$+1      . COUNT THIS APL CHAR, DAMMIT!!    @B@@@@SS
)@@G@@       TE,U  A1,ASPACE   . IS IT BLANK?   @F@@@@       SR    R2,INONBL  ST
)@@G@@ . NO, REMEMBER SO COMMO RTNES DON'T BREAK@E@@@@       LMJ   X2,,X2     SU
)@@G@@ . PUT CHARACTER INTO OBJECT LINE   @C@@@@       JGD   R1,IN0013   . GO SV
)@@G@@TO DO THE NEXT ONE@[@@@@.     @D@@@@IN0100 JNZ   A4,IN0110   . DANGLING SW
)@@G@@FLAG IS AN ERROR  @B@@@@       TZ    INSTRP      . CAN WE BACKUP? @B@@@@SX
)@@G@@       LMJ   X11,BFTRLB  . YUP, DO IT     @E@@@@       LA,U  A1,AEOL    SY
)@@G@@ . GET AN END OF LINE CHARACTER     @C@@@@       TZ    INPADF      . IS SZ
)@@G@@PADDING TURNED ON?@C@@@@       LMJ   X2,0,X2     . PUT IT INTO THE LINE TA
)@@G@@@C@@@@       LX,U  X11,1       . SET NORMAL EXIT FLAG @E@@@@       SZ   TB
)@@G@@ INQFLG      . QQ ESCAPE NOT SEEN TURN FLAG OFF @D@@@@       LA    A1,INTC
)@@G@@EFLG   .  GET ILLEGAL CHAR FLAG     @B@@@@       JZ    A1,IN0190   . IF TD
)@@G@@NONE EXIT   @D@@@@       SZ    X11         . OTHERWISE ERROR RETURN     TE
)@@G@@@B@@@@       J     IN0190      . JUMP TO EXIT   @[@@@@.     @#@@@@.  ESCTF
)@@G@@APE DETECTED@D@@@@IN0060 TZ    INQFLG      . IS  THE ESCAPE ALLOWED     TG
)@@G@@@D@@@@       J     IN0120      . YES, TAKE SPECIAL EXIT     @A@@@@. ILLETH
)@@G@@GAL CHARACTER ENCOUNTERED     @F@@@@IN0110 SZ    A4          . MAKE SURETI
)@@G@@ ANY DANGLING FLAG IS CLEARED @E@@@@       LA    A1,INSTRC   . GET NUMBETJ
)@@G@@R OF CHARS IN THE LINE  @F@@@@       ANA   A1,R1       . SUBTRACT NUMBERTK
)@@G@@ WE HAVE LEFT TO DO     @A@@@@       ANA,U A1,1        . FUDGE    @D@@@@TL
)@@G@@       SA    A1,INEFLG   . SAVE LOC OF ILLEGAL CHAR   @E@@@@       LA,U TM
)@@G@@ A1,AINVAL   . PUT ILLEGAL CHAR INTO THE LINE   @C@@@@       J     IN005TN
)@@G@@0      . KEEP ON TRANSLATING  @[@@@@.     @#@@@@. QUOTE QUAD EXIT @F@@@@TO
)@@G@@IN0120 LX,U  X11,1       . LEAVE QQ MODE ON, TAKE NORMAL EXIT     @C@@@@TP
)@@G@@IN0190 AX    X11,INLINK  . GET RETURN ADDRESS   @D@@@@IN0200 LA    A0,INTQ
)@@G@@QFLG   . GET LOCAL VARIABLE FOR QQ'S@C@@@@       TZ    INQTST      . SHOTR
)@@G@@ULD FLAG BE RESET?@B@@@@       SA    A0,QESCAP   . YES, DO SO     @A@[@@TS
)@@G@@       SZ,S1 INLOCK      . CLEAR TS @G[@@@       LR    R2,INONBL   . RECTT
)@@G@@OVER NON-BLANKS COUNTER FOR CALLER*****   @B@@@@       J     0,X11      TU
)@@G@@ . AND RETURN     @[@@@@.     @G@@@@       CONSTS.      ESTABLISH LOCATITV
)@@G@@ON COUNTER FOR PROGRAM CONSTANTS    @D@@@@INEDOK EQU   ' '         . FLATW
)@@G@@G TO MARK SOURCE LINK OK@G@@@@INEDNG EQU   '^'         . FLAG TO MARK ILTX
)@@G@@LEGAL CHAR IN SOURCE LINE     @G@@@@       VARBLS.      ESTABLISH LOCATITY
)@@G@@ON COUNTER FOR PROGRAM VARIABLES    @B@@@@. THIS STORAGE IS PROTECTED BYTZ
)@@G@@ THE TS     @#@[@@INLOCK EQU   $ .  @ [@@@INLINK EQUF  $,,H2       .    UA
)@@G@@@G@@@@       +0                . BE SURE TS LOCN IS INITIALIZED, DUM-DUMUB
)@@G@@!     @ @@@@INSTRC EQUF  $,,Q1       .    @ @@@@ININDX EQUF  $,,Q2      UC
)@@G@@ .    @G@@@@INONBL EQUF  $,,XH2      . SIGN EXTENSION MANDATORY, LOADED UD
)@@G@@BACK TO R2  @#@@@@       RES   1 .  @E@@@@INQTST EQUF  $,,H1       . NONUE
)@@G@@-0 IF QQ FLAG IS TO BE SET    @D@@@@INQFLG EQUF  $,,H2       . SETTING OUF
)@@G@@F QQ FLAG, IF USED@ @@@@       RES   1          .     @ @@@@INSTRP EQUF UG
)@@G@@  $,,H2      .    @ @@@@INEFLG EQUF  $,,Q1       .    @ @@@@INPADF EQUF UH
)@@G@@ $,,Q2       .    @ @@@@       RES    1          .    @#@@@@       VARCOUI
)@@G@@N  .  @G@@@@QESCAP* +0     . NE 0 IFF O-U-T ALLOWED, CLEARED UNLESS O-U-UJ
)@@G@@T DETECTED  @[@@@@/.    @]@@@@TABLE* PROC @G@@@@. PROC TO GENERATE  SORTUK
)@@G@@ED CORRESPONDENCE TBL FOR FD/INTERNAL CONVERT   @F@@@@. THE SYMBOLS FDFLUL
)@@G@@AN,FDFLAG,APSYMF,FLDATA AND THE FUNC FDSGMT ARE @F@@@@. PREVIOUSLY DEFINUM
)@@G@@ED BY USE OF THE 'FDSYMB' PROC, AND THE ACTUAL  @B@@@@. CORRESPONDENCE IUN
)@@G@@S SET THERE, NOT HERE.  @[@@@@.     @^@@@@. USE OF THIS TABLE---  @D@@@@UO
)@@G@@.     FIELDATA TO INTERNAL (FIELDATA IS TABLE INDEX)  @A@@@@.           UP
)@@G@@IF Q2=0, Q1=INTERNAL    @G@@@@.           IF Q2>0, THEN CHAR IS A FLAG, UQ
)@@G@@AND THE NEXT CHAR AFTER THE   @G@@@@.           FLAG SHOULD BE CONVERTEDUR
)@@G@@ WITH Q1 OF THE WORD IN THE Q2'TH   @A@@@@.           SEGMENT OF THE TABUS
)@@G@@LE    @D@@@@.     INTERNAL TO FIELDATA (INTERNAL IS TABLE INDEX)  @A@@@@UT
)@@G@@.           IF S4=0, S6=FIELDATA    @G@@@@.           IF S4>0, TWO FIELDUU
)@@G@@ATA CHARS IN S5 AND S6 ARE TO BE USED     @#@@@@T FORM 9,9,18     @C@@@@UV
)@@G@@K DO FDFLAN ,Z(K) EQU 0100*FDFLAG(K)+010000     @C@@@@L DO FDFLAN ,Q(FDFUW
)@@G@@LAG(L)+1) EQU FDSGMT(Z(L))    @ @@@@  T APSYMF(1),Q(1),FLDATA(1)  @]@@@@UX
)@@G@@      UNLIST@C@@@@K DO 255 , T APSYMF(K+1),Q(K+1),FLDATA(K+1)     @]@@@@UY
)@@G@@      LIST  @]@@@@      END   @[@@@@.     @E@@@@       VARBLS           UZ
)@@G@@ . THESE CONSTANTS GO INTO D-BANK   @]@@@@FDTABL*.    @]@@@@      TABLE VA
)@@G@@@[@@@@.     @C@@@@.   GET AND PUT RTNES FOR FD TO INTERNAL EDITING@D@@@@VB
)@@G@@       INSTRS.      ESTABLISH LOCATION CTR FOR I-BANK @[@@@@.     @F@@@@VC
)@@G@@.     FIELDATA PICKUP ROUTINE   INITIALIZATION--LX,U X11,FDGET    @E@@@@VD
)@@G@@.        X11=CHAR POINTER, A0=WORD POINTER, A3=DATA REG     @]@@@@GET*  VE
)@@G@@PROC  @#@@@@       UNLIST.    @C@@@@      DO  GET(1,1)>S6 ,  LA,GET(1,1)VF
)@@G@@ A1,0,A0    @C@@@@      DO  GET(1,1)=S6 ,  LA,GET(1,1) A1,0,*A0   @ @@@@VG
)@@G@@       LIST              .    @ @@@@       LMJ   X11,,X11    .    @]@@@@VH
)@@G@@       END  @[@@@@FDGET.@E@@@@K DO 6 , GET S1-K+1           . PICKUP 1STVI
)@@G@@ 6 CHARS IN WD    @#@@@@      J  FDGET    @[@@@@.     @E@@@@.     INTERNVJ
)@@G@@AL CODE STASH     - INITIALIZE BY LX,U A1,INTPUT@E@@@@.         A1=CHAR VK
)@@G@@POINTER, A2=WORD POINTER, A3=DATA REG     @]@@@@PUT*  PROC  @E@@@@ DO (PVL
)@@G@@UT(1,1)>Q4)--(PUT(1,1)<Q4)  , SA,PUT(1,1) A1,0,X3     @A@@@@ DO PUT(1,1)VM
)@@G@@=Q4 , SA,Q4 A1,0,*X3    @#@@@@       UNLIST.    @ @@@@       LMJ    X2,0VN
)@@G@@,X2    .    @]@@@@       LIST.@]@@@@      END   @]@@@@INTPUT.     @]@@@@VO
)@@G@@      PUT Q1@]@@@@      PUT Q2@]@@@@      PUT Q3@]@@@@      PUT Q4@^@@@@VP
)@@G@@       J     INTPUT     @D@@@@/. WRITFD - WRITE A LINE VIA PRINT$ IN FIEVQ
)@@G@@LDATA FORMAT@F@@@@.     LINE IS OBTAINED FROM WSOBUF, AND ITS LAST CHAR VR
)@@G@@SHOULD BE   @B@@@@.     INTERNAL CODE END OF LINE (AEOL)    @[@@@@.     VS
)@@G@@@G@@@@.     NOTICE THAT THIS ROUTINE MAY HAVE TO SPLIT AN IMAGE - THIS IVT
)@@G@@S     @G@@@@.            BECAUSE 'WIDTH'  IS A PROPERTY OF THE WORKSPACEVU
)@@G@@, NOT THE   @ @@@@.            TERMINAL DEVICE  @B@@@@.               TOVV
)@@G@@ CALL: LMJ  X11 ,WRITFD @[@@@@.     @#@@@@P      PROC    .  @#@[@@FDFILLVW
)@@G@@* NAME 0 .  @#@@][FDFILL* NAME 1 .  @#[@@@       UNLI$T .   @F@@@@      VX
)@@G@@ LA    A3,WEFILC   . GET FILL CHAR (BLANK OR PRINTSTOP)     @F@@[[      VY
)@@G@@ SX    X11,WRCHAR  . SAVE CHAR LINK IN CASE OF AL T PRT     @C@@[[      VZ
)@@G@@ SX    A0,WRWORD   . AND WORD POINTER, TOO@A@@[[ GO FF$010   . NO GO DO WA
)@@G@@THE FILLING @G@@[[REFILL* NAME 0           . ZAP PRINTSTOPS FROM ALT FILWB
)@@G@@E PRINT IMAGE     @ @@[[       UNLI$T            .    @C@@[[       LX   WC
)@@G@@ X11,WRCHAR  . RESTORE CHAR POINTER @C@@[[       LX    A0,WRWORD   . ANDWD
)@@G@@ WORD POINTER     @F@@[[       LA,U  A3,' '      . FILL CHAR IS ALWAYS BWE
)@@G@@LANK FOR ALT FILES@#@@[[FF$010* NAME .    @E@@@@ DO 5 , LMJ X11,0,X11   WF
)@@G@@ . FILL OVER NEAREST WORD BOUNDARY  @F@[@@       TNZ   WENONB      . WERWG
)@@G@@E ALL FULLWORDS COMPLETELY BLANK?   @G@@[[. NOTE: THIS KLUDGE TO PREVENTWH
)@@G@@ SYMBIONT FROM STRIPPING TRAILING BLANKS  @F@@[[. FROM TREAD$ PROMPTS.  WI
)@@G@@NOTE: ALT FILES ALWAYS GET AN EXTRA CHAR. @E@@[[ DO P(0,0) , TE,U A3,077WJ
)@@G@@      . PADDING WITH PRINTSTOPS?    @G@@[[ DO P(0,0) , TNZ  WENONB      WK
)@@G@@. NO; WERE ANY NON-BLANK WORDS DETECTED?  @G[@@@       LMJ   X11,0,X11  WL
)@@G@@ . YES, PAD PAST FINAL BNDRY TO INSURE 1 NON-BL @#@@@@       LI$T .     WM
)@@G@@@#@@@@       END   .    @[@@@@.     @D@@@@       INSTRS.      ESTABLISH WN
)@@G@@LOCATION CTR FOR I-BANK @^@@@@WRITFD* SX   X11,WRLINK @C@@@@       SZ   WO
)@@G@@ WRMKFL      . TURN OFF MARK FLAG   @ @@@@       J     WR0005      .    WP
)@@G@@@ @@@@WRMKFD* SX   X11,WRLINK  .    @C@@@@       SX    X11,WRMKFL  . TURWQ
)@@G@@N ON MARK FLAG    @D@@@@       LR    R2,A0       . POST CHAR NO TO BE MAWR
)@@G@@RKED  @ @@@@       SA    A0,WRMLOC   .    @E@@@@. INITIALIZE EDITING ROUWS
)@@G@@TINE TO START AT BEGIN OF WSOBUF    @D@@@@WR0005 DL    A1,WRFCTL   . SETWT
)@@G@@ FETCHPOINTER LINKAGE   @F@@@@       LXM,U A2,CIOBUF   . AND FETCH ADDR WU
)@@G@@(WORKSPACE OUTPUT BUF)  @F@@@@WR0007 OUTCNV,U 132  -1,WROBUF     . MOVE WV
)@@G@@CONVERTED TO OUTPUT BUF @ @@@@. NOW PRINT CONVERTED LINE--- @D@@@@WR0010WW
)@@G@@ JZ    A0,WR0030   . IF NO WDS CONVERTED, EXIT  @ @@@@       JN    A0,WRWX
)@@G@@0999   .    @C@@@@       TG,U  A0,23       . IS NO OF WRODS OK?   @B@[@@WY
)@@G@@       J     WR0999      . NO, SYSERR     @G@@[[       LA,U  A0,22      WZ
)@@G@@ . TRUNCATE EXTRA WORD CAUSED BY BLANK FILL     @D[@@@       LSSL  A0,18XA
)@@G@@.           ALIGN WORD COUNT TO S3  @D@@@@       AA    A0,WRPPKT.       XB
)@@G@@FORM A PRINT$ PACKET    @C@[@@        ER    PRINT$          . WRITE THE XC
)@@G@@LINE  @F@@[[       SA    A0,RCALTP   . POST ACCESS WD IN ALT PRINT PACKEXD
)@@G@@T     @C@@[[       TNZ   RCOUTI      . IS OUTPUT INHIBITED? @C@@[[      XE
)@@G@@ ER    PRINT$      . OUTPUT THIS IMAGE    @D@@[[       TNZ   RCALTF     XF
)@@G@@ . IS THERE AN ALT PRINT FILE?@A@@[[       J     WR0020      . NO, QUIT XG
)@@G@@@G@@[[       REFILL            . YES, CHANGE TRAILING PRINTSTOPS TO BLANXH
)@@G@@KS    @B@@[[       LA,U  A0,RCALTP   . GET PACKET ADDR@C@@[[       ER   XI
)@@G@@ PRNTA$      . AND DUMP THIS IMAGE  @A[@@@. TEST FOR SPLIT IMAGE, OR REPXJ
)@@G@@EAT --@G@@@@WR0020 TNZ   WEHANG      . DID CONVERTED FIELDATA EXCEED LINXK
)@@G@@E WIDTH?    @B@@@@       J     WR0030      . NO, NORMAL EXIT@G@@@@      XL
)@@G@@ SA    A1,WESUSP   . YES, SAVE ADDR TO RESUME IN SOURCE APL LINE  @F@@@@XM
)@@G@@       LA,U  A1,WEINDT   . CHANGE LINK TO FETCH INDENTATION STUFF @F@@@@XN
)@@G@@       LA,U  A3,132      . GET #OF CHARS WE STARTED TO CONVERT    @H@@@@XO
)@@G@@       ANA   A3,R1       . SUBTRACT  # OF CHARS LEFT TO DO GIVING # CONVXP
)@@G@@ERTED @G@@@@       ANA   A3,WRMLOC   .SUBTRACT POSITION OF MARK CHAR FROXQ
)@@G@@M CHAR COUNT@G@@@@       TZ    A3          . IF WE HAVE CONVERTED EXACTLXR
)@@G@@Y NUMBER,FUDGE    @G@@@@       JP    A3,WR0025   . MARK IS ALREADY PRINTXS
)@@G@@ED SO PRINT REST OF TEXT@F@@@@       ANA,U A3,7        . COMPENSATE FOR XT
)@@G@@BLANKS ADDED TO THE LINE@H@@@@       SN    A3,R2       . PUT POSINTION OXU
)@@G@@F APL CHARACTER TO BE MARKED IN R2  @ @@@@       J     WR0007      .    XV
)@@G@@@ @@@@WR0025 SR    R2,WRMLOC   .    @ @@@@       J     WR0007      .    XW
)@@G@@@E@@@@WR0030 TNZ   WRMKFL      . WAS THIS A TYPE AND MARK OPN?    @B@@@@XX
)@@G@@       J     WR0040      . NO, GET OUT    @G@@@@       LX,U  X11,FDPUT  XY
)@@G@@ . YES- INITIALIZE BLANK STASH IN FIELDATA LINE @ @@@@       LA,U  A0,WRXZ
)@@G@@OBUF   .    @F@@@@       LXI,U A0,1        . SET STEP IN OUTPUT BUF (FIEYA
)@@G@@LDATA BUF)  @E@@@@       LA    A3,WEMARK   . COL NO IN WHICH MARK SHOULDYB
)@@G@@ GO   @ @@@@       TNZ   A3          .    @ @@@@       LA    A3,WRMLOC  YC
)@@G@@ .    @F@@@@       ANA,U A3,1        . LESS 1=NO OF LEADING BLANKS NEEDEYD
)@@G@@D     @D@@@@       TG,U  A3,133      . IS NO OF BLANKS REASONABLE?@B@@@@YE
)@@G@@       J     WR0999      . NO, SYSERR     @D@@@@       LR,U  R2,1,A3    YF
)@@G@@ . YES, INITIALIZE COUNTER    @C@@@@       LA,U  A3,' '      . GET A BLAYG
)@@G@@NK TO STORE @F@@@@WR0035 JNGD  R2,WR0037   . WHEN BLANKS ARE DONE, GO PUYH
)@@G@@T IN MARK   @B@@@@       LMJ   X11,0,X11   . STASH BLANK    @B@@@@      YI
)@@G@@ J     WR0035      . GO DO NEXT ONE @C@@@@WR0037 LA,U  A3,INEDNG   . GE YJ
)@@G@@T MARK CHARACTER  @B@@@@       LMJ   X11,0,X11   . PUT IT AWAY    @D@@@@YK
)@@G@@       FDFILL            . PAD TO A WORD BOUNDARY     @F@@@@       ANA  YL
)@@G@@ A0,(+1,WROBUF)   . COMPUTE TOT NO OF WDS CONVERTED   @D@@@@       SZ   YM
)@@G@@ WRMKFL           . TURN MARK FLAG OFF    @E@@@@       J     WR0010     YN
)@@G@@      . AND GO PRINT MARKER LINE    @A@@@@WR0040 LX    X11,WRLINK       YO
)@@G@@.     @B@@@@        J     0,X11             . RETURN  @ @[@@WR0999 ERRORYP
)@@G@@ YSYSTM      .    @ @[@@       ER    ERR$        .    @A@@[[WR0999 EQU  YQ
)@@G@@ 0           . SYSERR   @G]@@@       CONSTS.      ESTABLISH LOCATION COUYR
)@@G@@NTER FOR PROGRAM CONSTANTS    @D@@@@WRPPKT  +000100,WROBUF        . CTL YS
)@@G@@WD FOR PRINT$     @G@@@@WRFCTL* +    INTGET.          SKELETON FOR CONTRYT
)@@G@@OL OF INTERNAL FETCH    @#@@@@       +     1,0  @G@@@@       VARBLS.    YU
)@@G@@  ESTABLISH LOCATION COUNTER FOR PROGRAM VARIABLES    @#@@@@WRLINK  RES YV
)@@G@@1     @F@@@@WRNCHR  EQUF WRLINK,,H1.        . MAX NO CHARS PER INDENTED YW
)@@G@@LINE  @ @@[[WRCHAR RES   2           .    @ @@[[WRWORD EQU   WRCHAR+1   YX
)@@G@@ .    @#@@@@WROBUF  RES 25    @F@@@@/. WREDIT - EDIT PRINT LINE (IN WSOBYY
)@@G@@UF) FROM INTERNAL TO FIELDATA @[@@@@.     @F@@@@                        YZ
)@@G@@ . R1=NO OF APL CHARS TO BE CONVERTED     @E@@@@.                   R2=CZA
)@@G@@OLUMN NO IN APL LINE OF MARK, IF ANY@C@@@@.                     A0 =WD  ZB
)@@G@@PTR, SIXTH WD     @F@@@@.                     A1,A2  CHAR, WD PTRS FOR QZC
)@@G@@UARTER WD (FETCH) @A@@@@.     CALL BY         LMJ X11,WREDIT@C@@@@.  AT ZD
)@@G@@RETURN, WEHANG NON-0 MEANS SPLIT IMAGE    @G@@@@. R2 WILL BE SET TO COL ZE
)@@G@@NO IN FIELDATA IMAGE CORRESPONDING TO ORIGINALR2@E@@@@. A0 MUST ALSO BE ZF
)@@G@@LEFT POINTING TO LAST WD WITH DATA +1     @[@@@@.     @#@@@@       INSTRZG
)@@G@@S.    @[@@@@.     @D@@@@WREDIT* LA,U A4,077      . GET FILL CHAR FOR DEMZH
)@@G@@AND   @B@@@@        TNZ  RCDMND      . IS IT DEMAND?  @F@@@@WREDIB* LA,UZI
)@@G@@ A4,' '      . NOT DMD OR EXTERNAL FORCE OF BLANK FILL@B@@@@        SA  ZJ
)@@G@@ A4,WEFILC   . POST FILL CHAR @ @@@@        SX   X11,WELINK  .    @D@@@@ZK
)@@G@@       SZ    WENONB      . INITIALIZE NON-BLANK FLAG  @D@@@@       LA   ZL
)@@G@@ A4,R1       . NO OF CHARS TO BE CNVERTED @F@@@@       ANA   A4,R2      ZM
)@@G@@ . LESS COL IN WHICH MARK SHOULD APPEAR   @G@@@@       SA    A4,WEMLFT  ZN
)@@G@@ . GIVES NO APL CHARS WHICH FOLLOW THE MARK     @C@@@@       SZ    WEMARZO
)@@G@@K      . CLEAR LOCN OF MARK   @G@@@@       LR,U  R2,0        . INITIALIZZP
)@@G@@E COUNT OF NO OF FIELDATA CHARS STOR@G@@@@       LX,U  X11,FDPUT.       ZQ
)@@G@@SET CHARACTER POINTER OF TARGET TO S1     @[@@@@.     @E@@@@WE0010 LA   ZR
)@@G@@ A3,R1       . NO OF APL CHARS LEFT TO PROCESS  @D@@@@       LMA   A4,R2ZS
)@@G@@       . AND CURRENT FIELDATA COL NO@G@@@@       TNE   A3,WEMLFT   . IS ZT
)@@G@@THIS APL COL WHERE THE MARK SHOULD GO?    @F@@@@       SA    A4,WEMARK  ZU
)@@G@@ . YES, SAVE CORRESPONDING FIELDATA COL   @F@@@@       JNGD  R1,WE0040  ZV
)@@G@@ . IF NO MORE APL CHARS LEFT, GO CLEAN UP @D@@@@       LMJ   A1,0,A1    ZW
)@@G@@ . ELSE FETCH NEXT APL CHAR   @F@@@@. PROCESS CHAR JUST SCANNED (OR LEFTZX
)@@G@@ HANGING FROM LAST ENTRY)     @E@@@@WE0015 JE,U  A3,AEOL WE0040   . IF IZY
)@@G@@T'S AN EOL, WE'RE DONE  @C@@@@       TNZ,S4 FDTABL,A3  . IS IT A DIGRAPHZZ
)@@G@@?     @E@@@@       J     WE0030      . NO, GO STASH THE SINGLE CHAR     AA
)@@G@@@F@@@@. PRINT 1ST CHAR OF DIGRAPH ONLY IF BOTH WILL FIT ON THE LINE     AB
)@@G@@@C@@@@WE0020 JGD   R2,$+1      . COUNT THE 1ST CHAR   @G@@@@       LMA  AC
)@@G@@ A4,R2       . GET NO CHARS IN LINE INCL FLAG JUST COUNTED  @G@[@@      AD
)@@G@@ TG    A4,RCLSIZ   . IS TERMINAL LINE SIZE GTR NCHAR INCL FLAG?   @G@@][AE
)@@G@@       TG,U  A4,132      . IS TERMINAL LINE SIZE GTR NCHAR INCL FLAG?   AF
)@@G@@@G[@@@       J     WE0050      . NO, BOTH CHARS WON'T FIT, TAKE SPLIT LIAG
)@@G@@NE EXI@D@@@@       SA    A3,WEINDX   . YES, TEMP SAVE TABLE INDEX @E@@@@AH
)@@G@@       LA,S5 A3,FDTABL,A3     . GET 1ST CHAR FROM TABLE     @D@@@@      AI
)@@G@@ LMJ   X11,0,X11   . STASH IT IN OUTPUT IMAGE   @E@@@@       LA    A3,WEAJ
)@@G@@INDX   . RECOVER TABLE INDEX FOR THIS CHAR@A@@@@. NOW PRINT THE 2ND (OR AK
)@@G@@ONLY) CHAR  @D@@@@WE0030 LMA   A4,R2       . NO OF CHARS STASHED SO FAR AL
)@@G@@@F@[@@       TG    A4,RCLSIZ   . IS TERMINAL WIDTH GTR NO CHARS IN LINE?AM
)@@G@@@F@@][       TG,U  A4,132      . IS TERMINAL WIDTH GTR NO CHARS IN LINE?AN
)@@G@@@G[@@@       J     WE0050      . NO, THIS CHAR WON'T FIT, TAKE SPLIT LINAO
)@@G@@E EXIT@C@@@@       JGD   R2,$+1      . YES, COUNT THIS CHAR @F@@@@      AP
)@@G@@ LA,S6 A3,FDTABL,A3     . GET TRANSLATED CHAR FROM TABLE    @C@@@@      AQ
)@@G@@ LMJ   X11,0,X11   . PLUG INTO OUTPUT LINE@E@@@@       J     WE0010     AR
)@@G@@ . GO BACK FOR NEXT FIELDATA CHAR   @#@@@@. NORMAL EXIT     @E@@@@WE0040AS
)@@G@@ LA,U  A3,0        . SET FLAG FOR NO HANGING CHARACTER@G@@@@. SPLIT LINEAT
)@@G@@ EXIT BYPASSES CLEAR OF HANGING CHAR FLAG AND COMES HERE    @E@@@@WE0050AU
)@@G@@ SA    A3,WEHANG   . USE APL CHAR AS FLAG AND SAVE IT @G@@@@. PAD CURRENAV
)@@G@@T LINE IM TO WRD BNDRY SO NO WDS CAN BE COMPUTED EASILY     @G@@@@WE0060AW
)@@G@@ LMA   A4,R2       . GET NO SIGNIFICANT FIELDATA CHARS (PRE-PAD)  @E@@@@AX
)@@G@@       FDFILL            . NOW PAD WITH BLANKS OR PRINTSTOPS@G@@@@      AY
)@@G@@ LR    R2,WEMARK   . PLASC FD COL NO OF MARKED COL IN ARG REG     @ @@@@AZ
)@@G@@       LX    X11,WELINK  .    @C@@@@       J     0,X11       . AND TAKE BA
)@@G@@NORMAL EXIT @[@@@@.     @G@@@@       VARBLS.      ESTABLISH LOCATION COUBB
)@@G@@NTER FOR PROGRAM VARIABLES    @#@@@@WELINK  RES 1     @F@@@@WEHANG* EQUFBC
)@@G@@ $,,Q1       . NOTE: ASTERISK FOR HISTORICAL PURPOSES @ @@@@WESUSP EQUF BD
)@@G@@ $,,H2       .    @F@@@@       +0,$-$            . CAUTION, INDIRECTION BE
)@@G@@THRU THIS WORD    @ @@@@WEMARK EQUF  $,,H1       .    @ @@@@WENONB EQUF BF
)@@G@@ $,,H2       .    @#@@@@       RES   1 .  @E@@@@WEFILC EQUF  $,,S1      BG
)@@G@@ . FILL CHAR (BLANK OR PRINTSTOP)   @ @@@@       RES   1           .    BH
)@@G@@@ @@@@WEMLFT EQUF  $,,H1       .    @ @@@@WEINDX EQUF  $,,H2       .    BI
)@@G@@@ @@@@       RES   1           .    @ @@@@WRMKFL EQUF  $,,H1       .    BJ
)@@G@@@ @@@@WRMLOC EQUF  $,,H2       .    @#@@@@       RES   1 .  @C@@@@/.  GEBK
)@@G@@T AND PUT FOR WRITING OUTPUT IN FIELDATA  @[@@@@.     @ @@@@. GET INTERNBL
)@@G@@AL CHARACTERS     @E@@@@.         A1=CHAR POINTER, A2=WORD POINTER, A3=DBM
)@@G@@ATA REG     @]@@@@GETQ*  PROC.@#@@@@Q EQU GETQ(1,1)   @A@@@@ DO (Q<Q4)--BN
)@@G@@(Q>Q4) ,  LA,Q A3,0,A2  @ @@@@ DO  Q=Q4  , LA,Q A3,0,*A2    @#@@@@      BO
)@@G@@ UNLIST     @#@@@@ LMJ  A1,0,A1     @]@@@@       LIST @[@@@@ END  @[@@@@BP
)@@G@@.     @#@@@@       INSTRS.    @#@@@@INTGET GETQ  Q1   @#@@@@      GETQ QBQ
)@@G@@2     @#@@@@      GETQ Q3     @#@@@@      GETQ Q4     @^@@@@       J    BR
)@@G@@ INTGET     @[@@@@.     @[@@@@.     @ @@@@P      PROC              .    BS
)@@G@@@#@@@@PUT6*  NAME   .   @A@@@@       SA,P(0,1) A3,0,A0      .     @ @@@@BT
)@@G@@       LMJ   X11,0,X11   .    @#@@@@       END     .  @[@@@@.     @ @@@@BU
)@@G@@FDPUT  PUT6,S1           .    @ @@@@       PUT6,S2           .    @ @@@@BV
)@@G@@       PUT6,S3           .    @ @@@@       PUT6,S4           .    @ @@@@BW
)@@G@@       PUT6,S5           .    @B@@@@       SA,S6 A3,0,A0     . STORE LASBX
)@@G@@T CHAR@C@@@@       LA    A3,0,*A0    . GET THE FULL WORD    @D@@@@      BY
)@@G@@ TE    A3,('      ')    . IS IT TOTALLY BLANK?  @D@@@@       SA    A3,WEBZ
)@@G@@NONB   . NO, TURN ON NON-BLANK FLAG @ @@@@       LMJ   X11,0,X11   .    CA
)@@G@@@ @@@@       J     FDPUT       .    @[@@@@.     @G@@@@. SPECIAL FETCH RTCB
)@@G@@NE USED TO INDENT IF A LINE SPILLS OVER THE LINE WIDTH@[@@@@.     @#@@@@CC
)@@G@@G      PROC  .    @#@@@@GETASP* NAME 0 .  @#@@@@       UNLI$T .   @ @@@@CD
)@@G@@       LA,U  A3,ASPACE   .    @ @@@@       LMJ   A1,0,A1     .    @#@@@@CE
)@@G@@       LI$T  .    @]@@@@       END .@[@@@@.     @]@@@@WEINDT .    @D@@@@CF
)@@G@@ DO 6 , GETASP           . FETCH 6 HARD-WIRED SPACES  @G@@@@       LA   CG
)@@G@@ A3,WEHANG   . PICK UP THE CHAR LEFT OVER FROM LAST TIME    @ @@@@      CH
)@@G@@ LMJ   A1,0,A1     .    @F@@@@       J     *WESUSP     . RESUME FETCHINGCI
)@@G@@ AT POINT OF SUSPENSION @[@@@@.     @]@@@@        END ___D WITH BLANKS OCJ
)@@G@@R PRINTSTOPS@G@@@@       LR    R2,WEMARK   . PLASC FD COL NO OF MARKED CCK
)@@G@@OL IN ARG REG     @ @@@@*[S@@@*SDFF*@G@@@@. ****************************CL
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUCM
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 CN
)@@G@@                                                    * @G@@@@       AXR$ CO
)@@G@@        .                                                 * @G@@@@      CP
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@CQ
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * CR
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               CS
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 CT
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            CU
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACECV
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL CW
)@@G@@BLOCK TYPES                 * @G@@@@.                                   CX
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  CY
)@@G@@                                        * @G@@@@. **********************CZ
)@@G@@*********************************************** @[@@@@.     @[@@@@.     DA
)@@G@@@[@@@@.     @C@@@@N      PROC  . SCAN FOR NEXT LEXICAL PRIMITIVE  @#@@@@DB
)@@G@@NXTSYM* NAME .    @ @@@@       UNLI$T            .    @B@@@@       TNZ  DC
)@@G@@ FHPEEK      . ANY LOOKAHEAD? @E@@@@       J     NX0010      . NO, GO CADD
)@@G@@LL REGULAR SUBROUTINE   @B@@@@       DL    A0,FHAHED   . YES, GET IT    DE
)@@G@@@B@@@@       SZ    FHPEEK      . TURN FLAG OFF  @ @@@@       J     NX002DF
)@@G@@0      .    @C@@@@NX0010 LMJ   X11,LEXANH  . SCAN FOR NEXT ITEM   @ @@@@DG
)@@G@@       J     N(2,1)      .    @D@@@@NX0020 COMJMP A1,NX0030 0,N(1,1) 1,NDH
)@@G@@(1,2) 2,N(1,3) .  @A@[@@NX0030 ERROR YSYSTM,N(2,1)    .     @A@@[[NX0030DI
)@@G@@ EQU   0           . SYSERR   @#[@@@       LI$T  .    @#@@@@       END  DJ
)@@G@@ .    @[@@@@.     @#@@@@       PROC  .    @B@@@@HIDE*  NAME  . BURY LEXIDK
)@@G@@CAL LOOKAHEAD     @ @@@@       UNLI$T            .    @ @@@@       DS   DL
)@@G@@ A0,FHAHED   .    @ @@@@       SX    X11,FHPEEK  .    @#@@@@       LI$T DM
)@@G@@ .    @#@@@@       END   .    @[@@@@.     @A@@@@T      PROC  . STASH IN DN
)@@G@@T-STRING    @#@@@@TSTASH* NAME .    @ @@@@       UNLI$T            .    DO
)@@G@@@ @@@@       LMJ   X6,0,X6     .    @ @@@@       J     T(1,1)      .    DP
)@@G@@@#@@@@       LI$T  .    @#@@@@       END   .    @[@@@@.     @E@@@@S     DQ
)@@G@@ PROC  . STASH NAME AND ITS FUNCTIONAL DESIGNATOR     @#@@@@STONAM* NAMEDR
)@@G@@ .    @ @@@@       UNLI$T            .    @F@@@@ DO 1-(S(1,2)=A0) , LA ADS
)@@G@@0,S(1,2)   . IF NEEDED, GET NAME TO A0    @C@@@@       AA,U  A0,LEXNAM*/DT
)@@G@@15    . FOLD IN FLAGBITS@C@@@@       TSTASH S(2,1)     . PUT INTO T-STRIDU
)@@G@@NG    @E@@@@ DO 1-(S(1,2)=A0) , SX,H1 X6,S(1,2) . FLAG IT AS STASHED    DV
)@@G@@@B@@@@       LA,U  A0,S(1,1)   . GET OPCODE     @C@@@@       TSTASH S(2,DW
)@@G@@1)     . STUFF INTO T-STRING  @#@@@@       LI$T  .    @#@@@@       END  DX
)@@G@@ .    @B@@@@/. PARSE AND STORE HEADER LINE OF FUNCT-- @[@@@@.     @E@@@@DY
)@@G@@. EXITS:     A0=TERMINATING CHAR (FUNC,LOCK,EOL,) OR [)     @D@@@@.     DZ
)@@G@@       A1=RELADR OF STORED HEADER TEXT (IF ANY) @D@@@@.            A2=REEA
)@@G@@LADR OF FUNC NAME BLOK (IF ANY)     @D@@@@.            A3=NO OF ARGS (0=EB
)@@G@@NILAD, 1=MONAD, 2=DYAD) @E@@@@.            A4=RELADR OF NAMEBLOK FOR FUNEC
)@@G@@C RESULT, IF ANY  @[@@@@.     @ @@@@       INSTRS            .    @ @@@@ED
)@@G@@FHANAL* SX,H2 X11,FHLINK .    @B@@@@       DSL   A0,72       . GET SOME EE
)@@G@@ZEROES@D@@@@       DS    A0,FHNARG   . CLEAR NO ARGS, RESULT NAME @E@@@@EF
)@@G@@       DS    A0,FHNAM1   . CLEAR 1ST AND 2ND NAME FIELDS    @D@@@@      EG
)@@G@@ DS    A0,FHNAMF   . CLEAR FUNCNAME, LOOKAHEAD  @[@@@@.     @A@@@@.    *EH
)@@G@@**** SCAN AT BEGINNING OF LINE@[@@@@.     @C@@@@FH0010 NXTSYM FH0020,FH0EI
)@@G@@030,FH0040 FH0710 .     @E@@@@FH0020 ERROR YDEFN,FH0710     . NON-TERMINEJ
)@@G@@ATING CHAR IS ERR @D@@@@FH0030 SA    A0,FHNAM1   . SAVE NAME AS THE FIRSEK
)@@G@@T     @C@@@@       J     FH0100      . AND GO SCAN AFTER IT @C@@@@FH0040EL
)@@G@@ DSL   A1,72       . CLEAR TEXT POINTERS  @B@@@@       J     FH0510     EM
)@@G@@ . NORMAL EXIT    @[@@@@.     @ @@@@.    ***** SCAN AFTER 1ST NAME@[@@@@EN
)@@G@@.     @C@@@@FH0100 NXTSYM FH0110,FH0130,FH0120 FH0710 .     @F@@@@FH0110EO
)@@G@@ JNE,U A0,ASTORE FH0120 . IF NO T STORE, GO CLOSE NILAD     @D@@@@      EP
)@@G@@ TZ    FHNAM0      . ANSWER ALREADY SCANNED?    @A@@@@       J     FH070EQ
)@@G@@0      . YES, ERR @C@@@@       LA    A0,FHNAM1   . NO, GET 1ST NAME     ER
)@@G@@@C@@@@       SA    A0,FHNAM0   . MAKE IT RESULT NAME  @C@@@@       SZ   ES
)@@G@@ FHNAM1      . CLEAR OLD POINTER    @F@@@@       NXTSYM FH0700,FH0030,FHET
)@@G@@0700 FH0710 . SCAN AFTER THE ARROW  @C@@@@. 1ST NAME FOLLOWED BY OPR, THEU
)@@G@@IS IS A NILAD     @B@@@@FH0120 LA,U  A2,0        . SET NO OF ARGS @E@@@@EV
)@@G@@       J     FH0220      . GO HIDE LOOKAHEAD AND STORE TEXT @E@@@@FH0130EW
)@@G@@ SA    A0,FHNAM2   . SAVE 2ND NAME (MONAD OR DYAD)    @[@@@@.     @ @@@@EX
)@@G@@.    ***** SCAN AFTER 2ND NAME@[@@@@.     @C@@@@FH0200 NXTSYM FH0210,FH0EY
)@@G@@230,FH0210 FH0710 .     @C@@@@. 2ND NAME FOLLOWED BY OPR-- THIS IS A MONEZ
)@@G@@AD    @B@@@@FH0210 LA,U  A2,1        . SET NO OF ARGS @C@@@@. NILAD OR MFA
)@@G@@ONAD-- CLEAN UP BEFORE STASHING     @B@@@@FH0220 SA    A2,FHNARG   . POSFB
)@@G@@T NO OF ARGS@ @@@@       HIDE  . BURY LLOOKAHEAD@C@@@@       LA    A2,FHFC
)@@G@@NAM1   . 1ST NAME PICKED UP   @C@@@@       SA    A2,FHNAMF   . IT IS THEFD
)@@G@@ FUNCNAME   @C@@@@       SZ    FHNAM1      . CNA CLEAR OLD POINTER@C@@@@FE
)@@G@@       J     FH0300      . GO CREATE T-STRING   @A@@@@. 3RD NAME PICKED-FF
)@@G@@- THIS IS A DYAD  @B@@@@FH0230 LA    A2,FHNAM2   . GET 2ND NAME   @C@@@@FG
)@@G@@       SA    A2,FHNAMF   . IT IS THE FUNCNAME   @D@@@@       SA    A0,FHFH
)@@G@@NAM2   . AND THIS IS THE RITEARG    @B@@@@       LA,U  A0,2        . GETFI
)@@G@@ NO OF ARGS @A@@@@       SA    A0,FHNARG   . AND POST @[@@@@.     @F@@@@FJ
)@@G@@.    ***** NOW CREATE T-STRING, AND SCAN FOR LOCAL NAMES, IF ANY  @[@@@@FK
)@@G@@.     @E@@@@FH0300 LMJ   X11,TEXSTO  . OPEN UP TEXT STORAGE ROUTINE     FL
)@@G@@@ @@@@       J     FH0710      .    @D@@@@       TNZ   FHNAM0      . DOEFM
)@@G@@S FUNC HAVE A RESULT?   @B@@@@       J     FH0310      . NO, SKIP THIS  FN
)@@G@@@F@@@@       STONAM AFNANS,FHNAM0 FH0601 . STIRE IT IN THE T-STRING     FO
)@@G@@@B@@@@FH0310 LA    A3,FHNARG   . GET NO OF ARGS @E@@@@       JNE,U A3,2 FP
)@@G@@FH0320 . IF NOT DYAD, GO POST FUNCNAME    @F@@@@       STONAM AFNARG,FHNFQ
)@@G@@AM1 FH0601 . DYAD, STASH LEFTARG NAME     @E@@@@FH0320 STONAM AFNNAM,FHNFR
)@@G@@AMF FH0601 . FUNCNAME TO T-STRING   @D@@@@       JZ    A3,FH0400   . FORFS
)@@G@@ NILADS, WE'RE DONE     @G@@@@       STONAM AFNARG,FHNAM2 FH0601 . MONADFT
)@@G@@/DYAD: RITEARG TO T-STRING    @[@@@@.     @D@@@@.    ***** NOW SCAN FOR FU
)@@G@@PSSIBLE LOCAL VARIABLE NAMES--@[@@@@.     @G@@@@FH0400 NXTSYM FH0410,FH0FV
)@@G@@430,FH0500 FH0610    . OPR EXPECTED AFTER NAME  @F@@@@FH0410 JNE,U A0,ASFW
)@@G@@EMIC FH0600 . NON-TERMINAL OPR MUST BE SEMICOLON@G@@@@       NXTSYM FH06FX
)@@G@@00,FH0420,FH0600 FH0610 . SEMICOLON NEEDS NAME AFTER  @E@@@@FH0420 STONAFY
)@@G@@M AFNLCL,A0 FH0700 . SAVE LOCAL VARIABLE NAME   @D@@@@       J     FH040FZ
)@@G@@0      . GO BACK FOR NEXT LOCAL NAME@ @@@@. UNEXPECTED NAME-- ERASE IT  GA
)@@G@@@ @@@@FH0430 LMJ   X11,SYMERS  .    @ @[@@       J     FH0610      .    GB
)@@G@@@B[@@@       J     FH0600      . SIGNAL DEFN ERR@[@@@@.     @B@@@@.    *GC
)@@G@@**** TERMINATING OPR DETECTED--     @[@@@@.     @B@@@@FH0500 SA    A0,FHGD
)@@G@@AHED   . TEMP SAVE IT   @ @@@@       LA,U  A0,AEOL     .    @D@@@@      GE
)@@G@@ TSTASH FH0740     . STASH EOL INTO T-STRING    @D@@@@       LMJ   X11,TGF
)@@G@@EXCLO  . CLOSE UP TH E T-STRING     @ @@@@       J     FH0740      .    GG
)@@G@@@C@@@@       LA    A1,A0       . POST ADDR OF TEXT    @D@@@@       LA   GH
)@@G@@ A0,FHAHED   . RECOVER TERMINATING CHAR   @D@@@@       LA,H2 A2,FHNAMF  GI
)@@G@@ . GET FUNC NAMEBLOK ADDR     @B@@@@       LA    A3,FHNARG   . NO OF ARGGJ
)@@G@@S   . @D@@@@       LA,H2 A4,FHNAM0   . POINTER TO RESULT NAME     @ @@@@GK
)@@G@@FH0510 LX    X11,FHLINK  .    @B@@@@       J     1,X11       . NORMAL EXGL
)@@G@@IT    @[@@@@.     @D@@@@.      ERRORS DETECTED DURING STORAGE OT T-STRINGM
)@@G@@G--   @[@@@@.     @A@@@@FH0600 ERROR YDEFN,FH0610     .     @A@@@@FH0601GN
)@@G@@ ERROR YWSFUL,FH0610    .     @[@@@@.     @C@@@@FH0610 SA    A0,FHERRC  GO
)@@G@@ . TEMP SAVE ERROR CODE @B@@@@       LA,U  A0,AEOL     . GET END OF LINEGP
)@@G@@@C@@@@       TSTASH FH0740     . PUT INTO T-STRING    @C@@@@       LMJ  GQ
)@@G@@ X11,TEXCLO  . CLOSE THE STRING     @ @@@@       J     FH0710      .    GR
)@@G@@@F@@@@       LMJ   X11,TEXERS  . NOW ERASE IT (TO GET RID OF NAMES)     GS
)@@G@@@ @@@@       J     FH0710      .    @E@@@@       J     FH0720      . GO GT
)@@G@@ERASE ANY UNSTASHED NAMES     @[@@@@.     @B@@@@. ERASE NAMES NOT YET STGU
)@@G@@ASHED IN T-STRING @[@@@@.     @A@@@@FH0700 ERROR YDEFN,FH0710     .     GV
)@@G@@@[@@@@.     @ @@@@FH0710 SA    A0,FHERRC   .    @D@@@@FH0720 LX,U  X6,FHGW
)@@G@@NUMN   . NO OF NAME LOCS TO CLEAR   @B@@@@FH0730 JNGD  X6,FH0750   . WHEGX
)@@G@@N DONE, EXIT@D@@@@       LA    A0,FHNAMZ,X6     . GET NEXT NAME POINTER GY
)@@G@@@F@@[[       JZ    A0,FH0730   . IF NAME NEVER SET, DON'T TRY TO ERS    GZ
)@@G@@@E@@@@       TE,U  A0,0,A0     . WAS IT STASHED IN T-STRING  .    @E@@@@HA
)@@G@@       J     FH0730      . YE\, IT WAS ERASED BY TEXERS     @C@@@@      HB
)@@G@@ LMJ   X11,SYMERS  . NO, GET RD OF IT     @B@@@@FH0740 J     *FHLINK    HC
)@@G@@ . ERROR EXIT     @D@@@@       J     FH0730      . GO BACK FOR NEXT NAMEHD
)@@G@@  .   @C@@@@FH0750 LA    A0,FHERRC   . RECOVER ERROR CODE   @B@@@@      HE
)@@G@@ J     *FHLINK     . ERROR EXIT     @ @@@@       VARCON            .    HF
)@@G@@@ @@@@FHLINK +0,$-$            .    @ @@@@       VARBLS            .    HG
)@@G@@@B@@@@FHNARG RES   1           . NO OF ARGS     @C@@@@FHNAMZ EQU   $    HH
)@@G@@       . START OF NAMES TABLE @B@@@@FHNAM0 RES   1           . RESULT NAHI
)@@G@@ME    @G@@@@FHNAM1 RES   1           . 1ST SCANNED NAME (FUNCNAME OR DYAHJ
)@@G@@DIC LEFTARG)@D@@@@FHNAM2 RES   1           . 2ND NAME (RIGHTARG, IF ANY)HK
)@@G@@@A@@@@FHNAMF RES   1           . FUNCNAME @D@@@@FHNUMN EQU   $-FHNAMZ   HL
)@@G@@ . NO OF LOCS USED FOR NAMES  @B@@@@FHPEEK RES   1           . LOOKAHEADHM
)@@G@@ FLAG @B@@@@FHAHED RES   2           . LOOKAHEAD LOCNS@G@@@@FHERRC RES  HN
)@@G@@ 1           . TEMP STORAGE OF ERROR CODES DURING ERASING   @[@@@@.     HO
)@@G@@@]@@@@       END  ___,FHAHED   . TEMP SAVE IT   @ @@@@       LA,U  A0,AEHP
)@@G@@OL     .    @D@@@@       TSTASH FH0740     . STA*[S@@@*SDFF*@G@@@@. ****HQ
)@@G@@***************************************************************** @G@@@@HR
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * HS
)@@G@@@G@@@@.                                                                 HT
)@@G@@    * @G@@@@       AXR$         .                                       HU
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        HV
)@@G@@                * @G@@@@       WSDEF.      DEFINE WORKSPACE             HW
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACHX
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BHY
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEHZ
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           IA
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 IB
)@@G@@                                                    * @G@@@@. END OF STAIC
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****ID
)@@G@@***************************************************************** @[@@@@IE
)@@G@@.     @ @@@@       FILDEF            .    @D@@@@/. ESTABLISH USE, DO ASSIF
)@@G@@IGNMENT, AND CHECK FACILITIES @E@@@@. ENTER WITH A0=OPTIONS, A1=LGL UNITIG
)@@G@@, A2=INIT RESERVE (OR 0)@A@@@@. EXITS: 0,X11=ERR, 1,X11=NORMAL    @[@@@@IH
)@@G@@.     @ @@@@       INSTRS            .    @A@@@@FUSE*  SX    X11,FULINK II
)@@G@@ . SAVE LINK@C@@@@       SA    A0,ASGOPT   . AND ASSIGN OPTIONS   @B@@@@IJ
)@@G@@. CONVERT TRAK EST FOR USE ON @ASG CARD   @E@@@@FU0001 JZ    A2,FU0010  IK
)@@G@@ . IF TRAKEST NOT GIVEN, FORGET IT  @C@@@@       LR,U  R1,5        . DO IL
)@@G@@6 DECIMAL DIGITS  @ @@@@       LA    A0,A2       .    @ @@@@FU0002 DSL  IM
)@@G@@ A0,36       .    @D@@@@       DI,U  A0,10       . NEXT LO-ORDER DIGIT TIN
)@@G@@O A1  @B@@@@       DSL   A1,6        . PACK IT INTO A2@D@@@@       JGD  IO
)@@G@@ R1,FU0002   . CONTINUE THRU 6 DIGITS     @E@@@@       OR    A2,('000000IP
)@@G@@')    . FOLD ZONES IN, RESULT IN A3 @G@@@@       LA    A4,(' .    ')    IQ
)@@G@@. GET FLAG TO TERMINATE CSF$ SCANNING     @C@@@@       LA,U  A0,'0'     IR
)@@G@@ . GET COMPARISON VALUE @F@@@@FU0003 DS    A3,ASGRSV   . STASH INITIAL RIS
)@@G@@ESERVE IN @ASG IMAGE    @F@@@@       JNE,S1 A0,ASGRSV FU0010 . IF 1ST CHIT
)@@G@@AR NON-ZERO, WE'RE DONE @E@@@@       LDSL  A3,6        . ELSE SHIFT AWAYIU
)@@G@@ THE LEADING ZERO @C@@@@       J     FU0003      . AND GO TRY AGAIN     IV
)@@G@@@D@@@@FU0010 LA    A1,LGLNUM   . GET LOGICAL UNIT FROM FCT  @A@@@@. CREAIW
)@@G@@TE @USE NAME FOR THIS FILE--  @ @@@@FU0020 DSL   A1,3        .    @ @@@@IX
)@@G@@       SSL   A2,3        .    @ @@@@       DSL   A1,3        .    @ @@@@IY
)@@G@@       SSL   A2,3        .    @ @@@@       LDSL  A1,12       .    @E@@@@IZ
)@@G@@       OR    A1,('TA0000')    . BUILD 2ND WD OF THE NAME    @C@@@@      JA
)@@G@@ LA    A1,('APL$DA')    . GET THE 1ST     @B@@@@       DS    A1,SZUNAM  JB
)@@G@@ . TO SECTOR ZERO @D@@@@       DS    A1,USUNAM   . PUT IN @USE CARD IMAGJC
)@@G@@E     @B@@@@       DS    A1,ASGFNM   . ALSO @ASG CARD @E@@@@       DS   JD
)@@G@@ A1,TOPAKT   . AND PACKET AREA FOR THE FACIL$   @A@@@@. NOW BUILD THE @UJE
)@@G@@SE CARD IMAGE     @C@@@@FU0100 LA    A0,LFTSIZ   . GET SIZE OF FILENAME JF
)@@G@@@F@@@@       JZ    A0,FU0200   . IF NULL, TEMP FILE, SO SKIP THE @USE   JG
)@@G@@@F@@@@       JLE,U A0,53 FU0800     . UNREASONABLY LONG NAME IS LEX ERR JH
)@@G@@@F@@@@       OUTCNB LFTSIZ *LFTDAD,USFNAM     . YES, MAKE IT FIELDATA   JI
)@@G@@@C@@@@       LA    A1,CSFSTP   . GET STOPFLAG FOR CSF$@F@@@@       SA   JJ
)@@G@@ A1,USFNAM,A0     . PUT AFTER CONVERTED FILE NAME     @#@@@@. NOW DO THEJK
)@@G@@ USE--@B@@@@FU0120 LA,U  A0,USIMAG   . ADDR OF IMAGE  @E@@@@       SA   JL
)@@G@@ A0,ERRCSF   . MAKE CSF$ ALLOW SYNTAX ERRORS    @A@@@@       ER    CSF$ JM
)@@G@@       . AND DO IT@E@@@@       LA    A1,ERRCSF   . PICK UP SYNTAX ERR INJN
)@@G@@ CSF$ FLAG  @F@@@@       SZ    ERRCSF      . AND BE SURE ITS OFF FOR THEJO
)@@G@@ FUTURE     @F@@@@       JZ    A1,FU0800   . IF CONTING RTNE CLEARED FLAJP
)@@G@@G, LEX ERR  @E@@@@       JN    A0,FU0810   . IF @USE FAILED, ASSIGN ERROJQ
)@@G@@R     @ @@@@. NOW TRY TO ASSIGN THE FILE  @C@@@@FU0200 LA,S1 A3,ASGOPT  JR
)@@G@@ . GET 1ST OPTION LETTER@ @@@@       LA,U  A0,ASGIMG   .    @D@@@@      JS
)@@G@@ TNE,U A3,'A'      . DO WE EXPECT FILE TO EXIST?@E@@@@       LXI,U A0,4 JT
)@@G@@       . YES, DON'T SCAN PAST FILENAME    @C@@@@       ER    CSF$       JU
)@@G@@ . TRY TO GET THE FILE  @E@@@@       JP    A0,FU0400   . IF OK, GO GET FJV
)@@G@@ACIL$ PERMISSIONS @F@@@@       AND   A0,(+0100000000000)   . ISOLATE ALRJW
)@@G@@EADY ASG'D FLAG   @D@@@@       JNZ   A1,FU0400   . AND IF SO, GO CHECK IJX
)@@G@@T OUT @G@@@@       JE,U  A3,'A' FU0300    . IF IT SHOULD HAVE EXISTED, GJY
)@@G@@O SEE WHY   @B@@@@. FAILURE OF ASG,T OR CP -- RETRY AS AX   @E@@@@FU0210JZ
)@@G@@ AND   A0,(+0040000000000)   . ISOLATE 'ALREADY CAT'D @G@@@@       JNZ  KA
)@@G@@ A1,FU0300        . IF THAT'S NOT IT, GO LOOK TO SEE WHY    @F@@@@      KB
)@@G@@ LA    A0,('AX    ')    . ELSE TRY @ASG,AX FOR GOOD LUCK    @A@@@@      KC
)@@G@@ SA    A0,ASGOPT        .     @^@@@@       J     FU0200     @ @@@@. FAILKD
)@@G@@URE TO ASSIGN FILE -    @E@@@@FU0300 AND   A0,(+000002000000)    . CHECKKE
)@@G@@ ROLLOUT BIT FIRST@A@@@@       JNZ   A1,FU0820   . SIGNAL IT@D@@@@      KF
)@@G@@ AND   A0,(+020000000000)    . FIELD ERROR?     @C@@@@       JNZ   A1,FUKG
)@@G@@0800   . YES, SAY ITS LEXICAL @D@@@@       AND   A0,(+000000300000)    .KH
)@@G@@ CONFLICT BITS    @E@@@@       JNZ   A1,FU0830   .         . ALSO GET SPKI
)@@G@@ECIAL MSG   @E@@@@       J     FU0810      . ALL ELSE GETS GENERIC MESSAKJ
)@@G@@GE    @D@@@@. SUCCESSFUL ASSIGNMENT OF THE FILE, CHECK FACILITIES @E@@@@KK
)@@G@@FU0400 LA,U  A0,TOPAKT   . SET UP ADDR OF FACIL$ PACKET     @A@@@@      KL
)@@G@@ ER    FACIL$      . DO IT    @B@@@@       LA,S1 A0,TOPAKT+6 . GET EQUIPKM
)@@G@@ TYPE @B@@@@       TG,U  A0,030      . TAPE OR WAD?   @G@@@@       TG,U KN
)@@G@@ A0,040      . NO, UNIT REC, CTMC OR OTHER FUNNY STUFF?     @ @@@@      KO
)@@G@@ J     FU0700      .    @C@@@@       DL    A0,TOPAKT+2 . GET EXTERNAL FIKP
)@@G@@LENAME@B@@@@       DS    A0,LGFNAM   . POST IN FCT    @B@@@@       DL   KQ
)@@G@@ A0,TOPAKT+4 . ALSO QUALIFIER @ @@@@       DS    A0,LGQUAL   .    @A@@@@KR
)@@G@@. SET EXCLUSIVE USE INDICATOR ---   @C@@@@FU0410 LA,U  A3,0        . CLEKS
)@@G@@AR XUSE INDICATOR @C@@@@       LA    A0,TOPAKT+7 . GET @ASG OPTIONS     KT
)@@G@@@F@@@@       AND   A0,(+(1*/('Z'-'C'))+(1*/('Z'-'T'))+(1*/('Z'-'U'))) . KU
)@@G@@@D@@@@       TZ    A1          . C, U, OR T OPTIONS ON?     @D@@@@      KV
)@@G@@ LA,U  A3,1        . YES, TURN ON XUSE FLAG     @C@@@@       LA,S2 A0,TOKW
)@@G@@PAKT+6 . GET INHIBIT FLAGS    @B@@@@       TEP,U A0,040      . XUSE BIT KX
)@@G@@ON?   @C@@@@       LA,U  A3,1        . YES, SET XUSE FLAG   @E@@@@      KY
)@@G@@ JEP,U A0,04 FU0420     . IF WRITE OK, NOT R-OPT FILE @E@@@@       TOP,UKZ
)@@G@@ A0,010      . WRITE INHIB; IS KEY MISSING?     @F@@@@       LA,U  A3,1 LA
)@@G@@       . NO, READ ONLY FILE IS EQUIV TO XUSE    @E@@@@FU0420 SA    A3,LGLB
)@@G@@LXUS   . SAVE EXCLUSIVE USE INDICATOR     @F@@@@. BUILD PERMISSION INDICLC
)@@G@@ATOR TO BE ANDED WITH ACCESS MTX, IF ANY  @F@@@@FU0430 LA,U  A1,FIPDEL+FLD
)@@G@@IPXUS . ASSUME DELETE AND XUSE ARE ALLOWED@C@@@@       TOP,U A0,02      LE
)@@G@@ . IS READING INHIBITED?@F@@@@       AA,U  A1,FIPREA+FIPRCO+FIPLOK    . LF
)@@G@@NO, ALLOW ALL READ OPS  @C@@@@       TOP,U A0,04       . IS WRITE INHIBILG
)@@G@@TED?  @E@@@@       AA,U  A1,FIPRWR+FIPCAT . NO, ALLOW ALL WRITE OPS     LH
)@@G@@@C@@@@       TOP,U A0,010      . IS WRITE KEY MISSING?@D@@@@       TEP,ULI
)@@G@@ A0,020      . NO, IS READ KEY MISSING?   @G@@@@       ANA,U A1,FIPDEL  LJ
)@@G@@ . IF EITHER MISSING, CLEAR DELETE PERMISSION   @H@@@@       TNE,U A1,FILK
)@@G@@PXUS+FIPREA+FIPRCO+FIPLOK+FIPRWR+FIPCAT+FIPDEL   . ALL OK?  @D@@@@      LL
)@@G@@ AA,U  A1,FIPALL   . YES, TURN ALL BIT ON, TOO  @D@@@@       SA    A1,LGLM
)@@G@@PERM   . INITIALIZE PERMISSIONS     @#@@@@. NORMAL EXIT---  @ @@@@FU0500LN
)@@G@@ LX    X11,FULINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    LO
)@@G@@@[@@@@.     @D@@@@. ERROR AFTER ASSIGN- FREE THE FILE AND THE FCT BOTH  LP
)@@G@@@[@@@@.     @A@@@@FU0700 ERROR YFIASG,FU0790    .     @C@@@@. THIS ENTRYLQ
)@@G@@ POINT TO ABORT AN ASSIGNMENT--     @[@@@@.     @ @@@@FUABRT* SX   X11,FLR
)@@G@@ULINK  .    @B@@@@FU0790 LA,S1 A0,ASGOPT   . ASSIGN OPTIONS @E@@@@      LS
)@@G@@ LA,U  A1,'B'      . NORMALLY WE FREE THE @USENAME    @D@@@@       TNE,ULT
)@@G@@ A0,'C'      . UNLESS THIS WAS @ASG,C     @F@@@@       LA,U  A1,'I'     LU
)@@G@@ . IN WHICH CASE WE INHIBIT CATALOGGING   @D@@@@       LMJ   X11,FIFREE LV
)@@G@@ . GET RID OF FILE AND FCT    @ @@@@       NOP               .    @E@@@@LW
)@@G@@       NOP               . TERMINATION ERRORS ARE IGNORED   @D@@@@      LX
)@@G@@ J     FU0999      . BECAUSE WE'RE DYING ANYWAY @[@@@@.     @F@@@@. ERROLY
)@@G@@RS WHICH OCCUR BEFORE ASSIGNMENT; ONLY THE FCT IS FREED     @[@@@@.     LZ
)@@G@@@D@@@@FU0800 ERROR YLEXIC,FU0890    . MISPELLED FILE NAME   @D@@@@FU0810MA
)@@G@@ ERROR YFIASG,FU0890    . MISC ASSIGN FAILURE   @C@@@@FU0820 ERROR YFIROMB
)@@G@@L,FU0890    . FILE ROLLED OUT @D@@@@FU0830 ERROR YFIXUS,FU0890    . USE/MC
)@@G@@XUSE CONFLICT     @[@@@@.     @ @@@@FU0890 LA,U  A0,0,X8     .    @ @@@@MD
)@@G@@       LMJ   X11,COFFCT  .    @ @@@@       ER    ERR$        .    @ @@@@ME
)@@G@@       J     FU0999      .    @[@@@@.     @C@@@@. ERRORS BEFORE FCT ALLOMF
)@@G@@CATION, JUST GO AWAY--- @[@@@@.     @A@@@@. (THERE AREN'T ANY ANYMORE, FMG
)@@G@@OLKS) @[@@@@.     @ @@@@FU0999 LX    X11,FULINK  .    @ @@@@       J    MH
)@@G@@ 0,X11       .    @ @@@@       VARBLS            .    @ @@@@FULINK EQUF MI
)@@G@@ $,,H1       .    @E@@@@FULNUM EQUF  $,,XH2      . TEMP SAVE OF LOGICAL MJ
)@@G@@UNIT NO     @#@@@@       RES   1 .  @ @@@@       VARCON            .    MK
)@@G@@@C@@@@CSFSTP '. .   '          . STOP FLAG FOR CSF$   @ @@@@USIMAG '@USEML
)@@G@@  '          .    @C@@@@USUNAM RES   2           . @USE NAME GOES HERE  MM
)@@G@@@ @@@@       '.,    '          .    @E@@@@USFNAM RES   12          . FILMN
)@@G@@E NAME CONVERTED INTO HERE    @B@@@@       '. .   '          . FOR GOOD MO
)@@G@@LUCK  @ @@@@       VARCON            .    @ @@@@ASGIMG '@ASG, '         MP
)@@G@@ .    @E@@@@ASGOPT RES   1           . OPTIONS (T, CP, AX OR A) GO HERE MQ
)@@G@@@D@@@@ASGFNM RES   2           . FILE (I.E. @USE) NAME HERE @ @@@@      MR
)@@G@@ '., ///'          .    @F@@@@ASGRSV RES   1           . MAX RESERVE (6 MS
)@@G@@CHARS, LEADING ZEROS)   @ @@@@       '  .   '          .    @C@@@@/. CLEMT
)@@G@@ANUP RTNES-- FREE WITH OPT GIVEN IN A0--- @ @@@@. EXIT 2,X11=OK,  0,X11=MU
)@@G@@ERROR @[@@@@.     @ @@@@       INSTRS            .    @D@@@@FIFREB* LA,UMV
)@@G@@ A0,'B'      . NORMAL FREE OF USENAME ONLY@ @@@@       J     FIFREE     MW
)@@G@@ .    @A@@@@FIFRED* LA,U A0,'D'      . DELETE   @[@@@@.     @C@@@@. ENTEMX
)@@G@@R HERE WITH OPTION ALREADY SET IN A0 ---  @[@@@@.     @ @@@@FIFREE* SX  MY
)@@G@@ X11,FFLINK  .    @D@@@@       JNE,U A0,'D' FF0010    . IF NOT D-OPT, GOMZ
)@@G@@ DO IT@D@@@@       LA    A1,LGPERM   . D-OPT, GET PERMISSIONS     @E@@@@NA
)@@G@@       TOP,U A1,FIPDEL   . IF HE CAN DELETE, THE D-OPT IS OK@D@@@@      NB
)@@G@@ LA,U  A0,'B'      . ELSE ONLY FREE THE USENAME @D@@@@FF0010 SA    A0,FRNC
)@@G@@OPTL   . PUT OPTION LETTER AWAY     @B@@@@       DL    A1,SZUNAM   . GETND
)@@G@@ FILE NAME  @E@@@@       DS    A1,FRBNAM   . AND PUT IN IMAGE OF FREE CANE
)@@G@@RD    @E@@@@       JNE,U A0,'X' FF0020    . IF NOT MERELY XUSE, GO CLOSENF
)@@G@@@C@@@@       LA,U  A0,FREIMG   . ELSE GET IMAGE ADDR  @B@@@@       ER   NG
)@@G@@ CSF$        . GET RID OF XUSE@B@@@@       J     FF0070      . NORMAL EXNH
)@@G@@IT    @C@@@@FF0020 LA    A0,LGDCLF   .  GET DECLARATION     @G@@@@      NI
)@@G@@ JB    A0,FF0030   . IF SDF FILE, GO FLUSH BUFFERS, IF REQUIRED   @E@@@@NJ
)@@G@@       LA    A0,LGLXUS   . NOT SDF, GET LOCKSECTOR XUSE FLAG@F@@@@      NK
)@@G@@ JEP,U A0,02 FF0040     . IF LOCKSECTOR CLEAR, GO DO IT     @E@@@@      NL
)@@G@@ DOIO  UNL$,LKPAKT FF0900 . ELSE RELEASE LOCKSECTOR   @B@@@@       J    NM
)@@G@@ FF0040      . THEN DO IT     @ @@@@. FLUSH BUFS FOR SDF FILE--   @D@@@@NN
)@@G@@FF0030 LA    A0,SZFUNC   . GET FUNC/FILE MODE FLAG    @G@@@@       JNE,UNO
)@@G@@ A0,W$ FF0040     . IF FILE NOT IN WRITE MODE, FORGET IT    @E@@[[      NP
)@@G@@  LA,U    A0,SZBUFR     . GET CURRENT BURRER ADDR     @C@@[[        SA  NQ
)@@G@@    A0,SZBADR     . JAM INTO PACKET @E@@@@       DOIO  W$,SZPAKT FF0900 NR
)@@G@@  . ELSE DUMP LAST BUFFERLOAD @B@@@@FF0040 LA,U  A0,FREIMG   . IMAGE OF NS
)@@G@@@FREE @C@@@@       ER    CSF$        . BYE-BYE, FILE...     @C@@@@      NT
)@@G@@ LA    A0,FROPTL   . GET OPTION LETTER    @D@@@@       JNE,U A0,'D' FF00NU
)@@G@@50    . IF NOT D, WERE DONE   @F@@@@       LA,U  A0,'I'      . IF D, DO NV
)@@G@@'I' ALSO TO BE SURE ITS GONE  @ @@@@       SA    A0,FROPTL   .    @ @@@@NW
)@@G@@       J     FF0040      .    @B@@@@FF0050 LA,U  A0,0,X8     . GET ADDR NX
)@@G@@OF FCT@E@@@@       LMJ   X11,COFFCT  . AND GET RID OF THE BUFFER, TOO   NY
)@@G@@@ @@@@       J     FF0999      .    @ @@@@FF0070 LX    X11,FFLINK  .    NZ
)@@G@@@ @@@@       J     1,X11       .    @[@@@@.     @A@@@@FF0900 ERROR YIOEROA
)@@G@@R,FF0999    .     @ @@@@FF0999 LX    X11,FFLINK  .    @ @@@@       J    OB
)@@G@@ 0,X11       .    @[@@@@.     @ @@@@       VARBLS            .    @ @@@@OC
)@@G@@FFLINK EQUF  $,,H1       .    @ @@@@       RES   1           .    @ @@@@OD
)@@G@@       VARCON            .    @A@@@@FREIMG '@FREE,0     '         .     OE
)@@G@@@A@@@@FROPTL EQUF  FREIMG+1,,S1     .     @ @@@@FRBNAM RES   2          OF
)@@G@@ .    @D@@@@       ' .   '           . FLAG TO STOP CSF$ SCAN     @ @@@@OG
)@@G@@       END               .    ___    . NORMAL FREE OF USENAME ONLY@ @@@@OH
)@@G@@       J     FIFREE      .    @A@@@@FIFRED* LA,U A0,'D'      . DELETE   OI
)@@G@@@[@@@@.     @C@@@@. ENTER HERE WITH OPTION ALREA*[S@@@*SDFF*@G@@@@. ****OJ
)@@G@@***************************************************************** @G@@@@OK
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * OL
)@@G@@@G@@@@.                                                                 OM
)@@G@@    * @G@@@@       AXR$         .                                       ON
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        OO
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        OP
)@@G@@                      * @G@@@@       WSDEF.      DEFINE WORKSPACE       OQ
)@@G@@                            * @G@@@@WORKSP INFO  2 20.      SET ASIDE THOR
)@@G@@E SPACE                           * @G@@@@       RUNCTL.     DEFINE RUN OS
)@@G@@CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.      OT
)@@G@@AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCK     OU
)@@G@@       . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.           OV
)@@G@@                                                          * @G@@@@. END OW
)@@G@@OF STANDARD PROC BLOCK                                          * @G@@@@OX
)@@G@@. ********************************************************************* OY
)@@G@@@[@@@@.     @[@@@@.     @#@@@@       FILDEF  .  @^@@@@/.  READ APL FILE-OZ
)@@G@@--    @[@@@@.     @A@@@@. NORMAL READ, ELEMENT NUMBER IN A2 @[@@@@.     PA
)@@G@@@#@@@@       INSTRS .   @ @@@@FIREAD* SX    X11,FRLINK  .   @E@@@@      PB
)@@G@@ JNOPER A0,FIPREA FR0910     . DIE IF NOT PERMITTED   @D@@@@       LX,U PC
)@@G@@ X11,TOCREA  . SET ADDR OF TOC RTNE ENTRY @F@@@@       LA    A5,LFTSIZ  PD
)@@G@@ . GET CONTROL VECT LENGTH FOR LATER CHECK@ @@@@       J     FR0003     PE
)@@G@@ .    @[@@@@.     @D@@@@. READ ACCESS MATRIX (THE ZEROTH DATA EL IN THE PF
)@@G@@FILE) @[@@@@.     @ @@@@FIRPER* SX   X11,FRLINK  .    @B@@@@       LA   PG
)@@G@@ A0,LGDCLF   . GET DECLARATION@F@@@@       JB    A0,FR0950   . ACCESS MTPH
)@@G@@X READ IS ILFUNC ON SDF FILES @G@@@@       LX,U  X11,TOCACR  . SPECIAL API
)@@G@@CCESS ENTRY BYPASSES INDEX CHECK    @D@@@@       LA,U  A5,2        . FAKPJ
)@@G@@E CONTROL VECT LENGTH   @D@@@@       DL    A0,RCLIBN   . GET THIS USER'SPK
)@@G@@ NUMBER     @E@@@@       DTE   A0,SZLIBN   . IS HE THE OWNER OF THIS FILPL
)@@G@@E?    @E@@@@       TZ    RCMASF      . NO, IS HE THE MASTER CONSOLE?    PM
)@@G@@@C@@@@       J     $+2         . IF EITHER, CONTINUE  @D@@@@       J    PN
)@@G@@ FR0910      . ELSE PERMISSION VIOLATION  @[@@@@.     @B@@@@FR0003 LA   PO
)@@G@@ A0,LGDCLF   . GET DECLARATION@E@@@@       JB    A0,FR0300   . IF SDF, GPP
)@@G@@O TO SPECIAL ROUTINE    @D@@@@       TG,U  A5,2        . IS CTL VECT .LTPQ
)@@G@@. 2 LONG?   @C@@@@       TG,U  A5,4        . NO, IS IT 2 OR 3?    @D@@@@PR
)@@G@@       J     FR0900      . LENGTH ERR IF NOT 2 OR 3   @D@@@@       LA   PS
)@@G@@ A0,LGLXUS   . GET EXCLUSIVE USE FLAG     @F@@@@       JB    A0,FR0005  PT
)@@G@@ . IF @ASG,X OR EQUIV, NO NEED TO LOCK    @I@@@@       DOIO  RDL$,SZPAKTPU
)@@G@@ FR0920 . ELSE PREVENT REWRITE AND SUBSEQUENT RE-USE OF     @E@@@@      PV
)@@G@@                   . FREED DATA SPACE TILL WE'RE DONE @C@@@@FR0005 LMJ  PW
)@@G@@ A0,0,X11    . GO GET THE TOC ENTRY @ @@@@       J     FR0899      .    PX
)@@G@@@B@@@@. GET A PLACE IN THE WS FOR THIS DATUM    @F@@@@FR0010 TNZ   TCDSCPY
)@@G@@R      . VOID DATUM (CAUSED BY SYSTEM CRASH)?   @D@@@@       J     FR084PZ
)@@G@@0      . YES, GO SIGNAL VALUE ERROR @E@@@@       LA    A4,TCRANK   . ELSQA
)@@G@@E GAT RANK OF THIS ELEMENT    @D@@@@       LA,U  A0,1        . SCALARS GQB
)@@G@@ET 1-WD DESCRS    @A@@@@       TNE,U A4,ZRANKV   . VECTOR?  @B@@@@      QC
)@@G@@ LA,U  A0,2        . YES, 2 WD DESCR@C@@@@       TG,U  A4,2        . MATQD
)@@G@@RIX OR ARRAY?     @E@@@@       LA,U  A0,4        . YES, NEED SPACE FOR DQE
)@@G@@IM DESCR    @E@@@@       SA    A0,FRDWDS   . SAVE NO WDS NEEDED FOR DESCQF
)@@G@@RS    @C@@@@       AA    A0,TCNWDS   . PLUS NO WDS FOR DATUM@D@@@@      QG
)@@G@@ SX    X11,FRDSAD  . TEMP SAVE PTR TO TOC ENTRY @B@@@@       ALLOCT FR08QH
)@@G@@30     . GET THE SPACE  @F@@@@       LX    X11,FRDSAD  . RECOVER POINTERQI
)@@G@@ TO CURRENT TOC ENTRY   @C@@@@       SA    A1,FRDSAD   . SAVE DESCR RELAQJ
)@@G@@DR    @B@@@@       TNZ   TCNWDS      . ANY DATA WORDS?@C@@@@       J    QK
)@@G@@ FR0100      . NO, NOTHING TO READ  @G@@@@       AA    A1,FRDWDS   . YESQL
)@@G@@, BUMP ADDR PAST WORDS NEEDED FOR DESCR(S)@E@@@@       SA    A1,FRDTAD  QM
)@@G@@ . AND SAVE REL ADDR OF DATA IN WS  @C@@@@       ABSADR A1         . MAKQN
)@@G@@E DATA ADDR ABS   @D@@@@       LXI   A1,TCNWDS   . MAKE ACCESS WD FOR DAQO
)@@G@@TA    @C@@@@       SA    A1,DAPACW   . POST DATA ACCESS WORD@C@@@@      QP
)@@G@@ LA    A0,TCDPTR   . GET DATA SECT ADDR   @E@@@@       SA    A0,DADADR  QQ
)@@G@@ . MAKE IT DRUM ADDR TO READ FROM   @C@@@@       DOIO  R$,DAPAKT FR0820 QR
)@@G@@  . READ THE DATA @A@@@@. BUILD APPROPRIATE DESCR, IN THE WS@D@@@@FR0100QS
)@@G@@ LA    A0,LGLXUS   . GET EXCLUSIVE USE FLAG     @G@@@@       JB    A0,FRQT
)@@G@@0105   . IF WE HAVE IT, THEN CTL SECTOR IS NOT LOCKED @H@@@@       DOIO QU
)@@G@@ UNL$,SZPAKT FR0920 . OTHERWISE, LET OTHER PEOPLE GET AT THE FILE @B@@@@QV
)@@G@@FR0105 LA    A0,FRDSAD   . GET DESCR RELAD@C@@@@       PUSH  A0         QW
)@@G@@ . AND STACK AS RESULT  @ @@@@       ABSADR A0         .    @C@@@@      QX
)@@G@@ LA    A1,TCDSCR   . GET DESCR FROM TOC   @B@@@@       SA    A1,0,A0    QY
)@@G@@ . PUT INTO WS    @ @@@@       LA,U  A1,ZTPTMP   .    @E@@@@       SA,S1QZ
)@@G@@ A1,0,A0     . AND BE SURE ITS TYPED PROPERLY   @C@@@@       LA    A3,FRRA
)@@G@@DTAD   . GET REL DATA ADDR    @D@@@@       LA    A4,TCRANK   . GET RANK RB
)@@G@@FROM TOC ENTRY    @E@@@@       JNZ   A4,FR0120   . IF NON-SCALAR, GO DO RC
)@@G@@VECT/ARRAY  @ @@@@. SET POINTERS FOR SCALARS    @D@@@@FR0110 TZ    TCNWDRD
)@@G@@S      . ANY SPACE USED FOR DATA?   @E@@@@       SA,H2 A3,0,A0     . YESRE
)@@G@@, POST DATA ADDR IN DESCR     @A@@@@       J     FR0200      . AND QUIT RF
)@@G@@@ @@@@. SET POINTERS FOR NON-SCALARS@F@@@@FR0120 SA    A3,1,A0     . PLURG
)@@G@@G RELAD OF DATA INTO DATA DESCR     @D@@@@       JE,U  A4,ZRANKV FR0200 RH
)@@G@@. IF VECTOR, WE'RE DONE @E@@@@       LA,U  A1,2,A0     . ELSE GET ABS ADRI
)@@G@@DR OF DIM DESCR   @ @@@@       RELADR A1         .    @E@@@@       SA,H1RJ
)@@G@@ A1,1,A0     . PLUG INTO PRIMARY (DATA) DESCR   @D@@@@       LA    A3,FRRK
)@@G@@DDMY   . GET SKELETON DESCR FOR DIMS@E@@@@       LXM   A3,TCRANK   . RANRL
)@@G@@K OF DATUM=LENGTH OF DIMVECT  @C@@@@       SA    A3,2,A0     . POST DIMVRM
)@@G@@ECT DESCR   @C@@@@       LA,U  A3,1,A3     . ROUND UP THE RANK    @F@@@@RN
)@@G@@       SSL   A3,1        . TO COMPUTE NO OF WORDS USED BY DIM DATA@D@@@@RO
)@@G@@       LA    A1,FRDTAD   . REL ADDR OF DATA AND DIMS  @C@@@@       AA   RP
)@@G@@ A1,TCNWDS   . PLUS TOT NO WDS=LWA+1@F@@@@       ANA   A1,A3       . LESRQ
)@@G@@S NO WDS OF DIMS=FWA OF DIM DATA    @D@@@@       SA    A1,3,A0     . POSRR
)@@G@@T POINTER TO DIM DATA   @[@@@@.     @ @@@@FR0200 LX    X11,FRLINK  .    RS
)@@G@@@B@@@@       J     1,X11       . NORMAL EXIT    @[@@@@.     @#@@@@. READRT
)@@G@@ SDF FILE-- @[@@@@.     @E@@@@FR0300 JNE,U A5,1 FR0900 . CTL VECT CAN ONRU
)@@G@@LY BE LENGTH 1    @C@@@@       LMJ   X11,SDGETI  . INIT SDF RECORD FETCHRV
)@@G@@@ @@@@       J     FR0999      .    @D@@@@       JP    A0,FR0310   . IF RW
)@@G@@NOT EOF, GO MOVE DATA   @F@@@@       LA,U  A6,FRDEOF   . ADDR OF DUMMY DRX
)@@G@@ESCR FOR EOF INDICATOR  @ @@@@       RELADR A6         .    @ @@@@      RY
)@@G@@ LMJ   X11,DUPE   .     @ @@@@       J     FR0999      .    @ @@@@      RZ
)@@G@@ PUSH  A2          .    @ @@@@       J     FR0340      .    @B@@@@. PREPSA
)@@G@@ARE TO READ RECORD AS CHAR VARIABLE @C@@@@FR0310 SA    A0,FRSNCH   . NO SB
)@@G@@CHARS TO DESCR    @D@@@@       LA,U  A0,FRSDSC   . ADDR OF SDF VECTOR DESC
)@@G@@SCR   @B@@@@       LA,U  A1,ZMOCHR   . SET RESULT MODE@C@@@@       LMJ  SD
)@@G@@ X11,PUTANS  . SET UP STASHREGS     @ @@@@       J     FR0999      .    SE
)@@G@@@C@@@@       PUSH  A6          . STACK THE RESULT     @G@@@@. NOTE: CHARSF
)@@G@@ XLATION IS DONE SO AS TO PRESERVE THE MAX AMOUNT OF INFOR- @G@@@@. MATISG
)@@G@@ON-- THUS AT SIGNS AND DOLLAR SIGNS TRANSLATE INTO THEMSELVES,    @G@@@@SH
)@@G@@. AND ARE NOT TREATED AS THE 1ST CHAR OF A DIGRAPH.  A SOURCE LANGUAGE  SI
)@@G@@@F@@@@. FUNCTION SHOULD BE USED TO CREATE THE DIGRAPHS IF THE FILE BEINGSJ
)@@G@@@B@@@@. READ IS KNOWN TO BE CODED USING THEM.   @E@@@@FR0320 JNGD  A13,FSK
)@@G@@R0330  . EXIT WHEN TARGET ARRAY IS FULL   @D@@@@       LMJ   X4,0,X4    SL
)@@G@@ . GET NEXT SOURCE CHAR TO A2 @E@@@@       J     FR0999      . I/O ERRORSM
)@@G@@ ATTEMPTING TO READ     @B@@@@       LA,Q1 A1,FDTABL,A2     . CONVERT ITSN
)@@G@@@A@@@@       TNE,U A2,'@'      . AT SIGN? @ @@@@       LA,U  A1,AAT     SO
)@@G@@ .    @B@@@@       TNE,U A2,'$'      . DOLLAR SIGN?   @C@@@@       LA,U SP
)@@G@@ A1,ADOLAR   . YES, SPECIAL CASE    @E@@@@       LMJ   X2,0,X2     . STASQ
)@@G@@SH THIS CHAR IN THE RESULT    @E@@@@       J     FR0320      . AND GO BASR
)@@G@@CK FOR THE NEXT CHAR    @ @@@@. ALL FIELDATA CHARS PICKED - @B@@@@FR0330SS
)@@G@@ LMJ   X4,1,X4     . CLOSE SDF IMAGE@D@@@@       ER    ERR$        . SHOST
)@@G@@ULD NEVER GET HERE---   @ @@@@FR0340 LX    X11,FRLINK  .    @B@@@@      SU
)@@G@@ J     1,X11       . NORMAL EXIT    @[@@@@.     @B@@@@. ERRORS WHILE SECSV
)@@G@@TOR ZERO IS LOCKED--    @[@@@@.     @A@@@@FR0820 ERROR YIOERR,FR0899    SW
)@@G@@.     @A@@@@FR0830 ERROR YWSFUL,FR0899    .     @A@@@@FR0840 ERROR YVALUSX
)@@G@@E,FR0899    .     @C@@@@FR0899 DOIO  UNL$,SZPAKT FR0999    . UNLOCK IT  SY
)@@G@@@A@@@@       J     FR0999      . AND QUIT @[@@@@.     @]@@@@. ERRORS-   SZ
)@@G@@@[@@@@.     @A@@@@FR0900 ERROR YLENGT,FR0999    .     @A@@@@FR0910 ERRORTA
)@@G@@ YFIPER,FR0999    .     @A@@@@FR0920 ERROR YIOERR,FR0999    .     @A@@@@TB
)@@G@@FR0930 ERROR YWSFUL,FR0999    .     @A@@@@FR0940 ERROR YVALUE,FR0999    TC
)@@G@@.     @A@@@@FR0950 ERROR YFIFUN,FR0999    .     @ @@@@FR0999 LX    X11,FTD
)@@G@@RLINK  .    @ @@@@       J     0,X11       .    @ @@@@       VARBLS     TE
)@@G@@       .    @ @@@@FRLINK EQUF  $,,H1       .    @E@@@@FRDWDS EQUF  $,,S4TF
)@@G@@       . NO WDS USED FOR DESCRS (1 TO 4)  @ @@@@       RES   1          TG
)@@G@@ .    @B@@@@FRDSAD EQUF  $,,H1       . RELADR OF DESCR@B@@@@FRDTAD EQUF TH
)@@G@@ $,,H2       . RELADR OF DATA @ @@@@       RES   1           .    @ @@@@TI
)@@G@@       VARCON            .    @G@@@@FRDEOF CBLOCK ZTPTMP,ZMOHFI,ZRANKS,-TJ
)@@G@@1 . RESULT FOR DSF ENDFILE READ     @F@@@@FRSDSC CBLOCK ZTPTMP,ZMOCHR,ZRTK
)@@G@@ANKV,$-$  . DUMMY DESCR FOR SDFI    @C@@@@FRSNCH EQUF  FRSDSC,,H2  . INPTL
)@@G@@UT CHAR COUNT     @ @@@@       CONSTS            .    @B@@@@FRDDMY CBLOCTM
)@@G@@K ZTPDIM,ZMOHFI,ZRANKV,0    . @D@@@@/. READ COMPONENT INFORMATION (ELEMETN
)@@G@@NT NUM IN A2)     @[@@@@.     @ @@@@       INSTRS            .    @ @@@@TO
)@@G@@FIRCOM* SX   X11,FRLINK  .    @D@@@@       LA    A0,LGDCLF   . YES, GET TP
)@@G@@ITS DECLARATION   @C@@@@       JB    A0,FR0950   . IF SDF, ILLEGAL OP   TQ
)@@G@@@D@@@@       JNOPER A0,FIPRCO FR0910     . CHECK PERMISSION @D@@@@      TR
)@@G@@ LMJ   A0,TOCREA  . READ TOC FOR THIS ELEMENT   @ @@@@       J     FR099TS
)@@G@@9      .    @C@@@@       LA    A1,TCNWDS   . NO WDS USED BY DATUM @C@@@@TT
)@@G@@       LSSL  A1,2        . TIMES 4= NO OF BYTES @D@@@@       AA,U  A1,4 TU
)@@G@@       . PLUS 1 FOR PIRMARY DESCR   @A@@@@       LA    A2,TCRANK   . GETTV
)@@G@@ RANK @A@@@@       TNE,U A2,ZRANKV   . VECTOR?  @E@@@@       AA,U  A1,4 TW
)@@G@@       . YES, BUMP FOR 2ND DESCR WORD     @A@@@@       TG,U  A2,ZRANKV+1TX
)@@G@@ . ARRAY?   @E@@@@       AA,U  A1,3*4      . YES, ADD 2ND DESCR WD + DIMTY
)@@G@@ DESCR@D@@@@       DSL   A1,36       . LINE UP SPACE USED IN BYTES@B@@@@TZ
)@@G@@       DFLOAT A0,A1      . CONVERT IT     @G@@@@       DS    A1,FCDATA+4UA
)@@G@@ . SPACE IN BYTES TO 3D COMPONENT OF RESULT     @D@@@@       DL    A1,TCUB
)@@G@@LIBN   . GET LIB NO OF LAST SAVER   @E@@@@       DS    A1,FCDATA+2 . MAKUC
)@@G@@E IT 2ND COMPONENT OF RESULT  @D@@@@       LA    A1,TCTDAT   . GET TDATEUD
)@@G@@$ OF LAST WRITE   @ @@@@       DSL   A1,36       .    @B@@@@       DFLOAUE
)@@G@@T A0,A1      . CONVERT IT     @E@@@@       DS    A1,FCDATA   . POST 2ND UF
)@@G@@COMPONENT OF RESULT     @A@@@@       LA,U  A0,FCDATA   . DATA ADDR@ @@@@UG
)@@G@@       RELADR A0         .    @B@@@@       SA    A0,FCDSCR+1 . TO DUMMY UH
)@@G@@DESCR @ @@@@       LA,U  A6,FCDSCR   .    @ @@@@       RELADR A6        UI
)@@G@@ .    @D@@@@       LMJ   X11,DUPE    . PUT RESULT INTO THE WS     @ @@@@UJ
)@@G@@       J     FR0999      .    @ @@@@       PUSH  A2          .    @ @@@@UK
)@@G@@       LX    X11,FRLINK  .    @B@@@@       J     1,X11       . NORMAL EXUL
)@@G@@IT    @ @@@@       VARBLS            .    @E@@@@FCDATA RES   2*3        UM
)@@G@@   . DATA AREA TO BUILD RESULT IN   @ @@@@       VARCON            .    UN
)@@G@@@G@@@@FCDSCR CBLOCK ZTPTMP,ZMODFL,ZRANKV,3 0  . DUMMY DESCR FOR COMP DATUO
)@@G@@A     @^@@@@/. WRITE ACCESS MATRIX  @[@@@@.     @G@@@@.     ACCESS CONTRUP
)@@G@@OL IS OF 2 TYPES-- BY LIBRARY NUMBER AND PASS NUMBER. @G@@@@. IN EITHER UQ
)@@G@@CASE, THE ACCESS MATRIX IS AN  N BY 2 DFLOAT MATRIX, WHERE  @G@@@@. N RUUR
)@@G@@NS OVER LIBNOS OR PASSNOS.  EACH ENTRY IN THE MATRIX (LIBNO OR    @G@@@@US
)@@G@@. PASSNO ) HAS ASSICIATED WITH IT A BIT MASK WHICH DEFINES THE PER-     UT
)@@G@@@G@@@@. ISSIONS ALLOWED FOR THAT NUMBER, AND THIS IS CHECKED AT EACH ACCUU
)@@G@@ESS   @G@@@@. TO THE FILE.  PASSNOS AND LIBNOS ARE DISTINGUISHED FROM ONUV
)@@G@@E ANOTHER IN@G@@@@. THE MATRIX BECAUSE PASSNUMBERS ARE STORED AS NEGATIVUW
)@@G@@E VALUES.  THE    @B@@@@. VALUE ZERO MEANS 'ALL OTHER USERS'.     @G@@@@UX
)@@G@@.      THE OWNER (BY LIBNO) OF A FILE HAS ALL PERMISSIONS.  HE IS THE   UY
)@@G@@@G@@@@. ONLY ONE WHO CAN READ/WRITE THE ACCESS MATRIX, AND/OR DELETE THEUZ
)@@G@@ FILE.@B@@@@.      PERMISSIONS BITS FOR OTHERS ARE--- @G@@@@.           VA
)@@G@@ 2*0         ALLOW ALL (EXCEPT R/W ACCESS MTX AND DELETE)   @G@@@@.     VB
)@@G@@       2*1         EXCLUSIVE USE - ALLOWA ASG,X (ELSE ONLY @ASG)  @F@@@@VC
)@@G@@.            2*2         TEMPORARY EXCLUSIVE USE (VIA LOCKSECTOR) @A@@@@VD
)@@G@@.            2*3         CATENETE   @A@@@@.            2*4         REWRIVE
)@@G@@TE    @D@@@@.            2*5         READ DATA AND TOC POINTERS   @D@@@@VF
)@@G@@.            2*6         READ COMPONENT INFORMATION   @A@@@@.           VG
)@@G@@ 2*7 AND 2*8   SPARES   @[@@@@.     @ @@@@       INSTRS            .    VH
)@@G@@@ @@@@FIWPER* SX   X11,FWLINK  .    @E@@@@. CHECK THAT DATUM AT LEAST LOVI
)@@G@@OKS LIKE AN ACCESS MATRIX     @A@@@@       LA    A0,LGDCLF   . FILE TYPEVJ
)@@G@@@D@@@@       JB    A0,WR0910   . IF SDF, INVALID FUNCTION   @D@@@@      VK
)@@G@@ DL    A0,RCLIBN   . GET THIS USER'S NUMBER     @E@@@@       DTE   A0,SZVL
)@@G@@LIBN   . IS HE THE OWNER OF THIS FILE?    @E@@@@       TZ    RCMASF     VM
)@@G@@ . NO, IS HE THE MASTER CONSOLE?    @C@@@@       J     $+2         . IF VN
)@@G@@EITHER, LET IT GO @D@@@@       J     WR0900      . ELSE PERMISSION VIOLAVO
)@@G@@TION  @D@@@@       DL    A3,LFTMOD   . . MODE AND RANK OF ARG     @E@@@@VP
)@@G@@       JNE,U A3,ZMODFL WS0910 . NOT DFLOAT IS DOMAIN ERR    @D@@@@      VQ
)@@G@@ JNE,U A4,2 WS0900 . NOT MARTIX IS RANK ERROR   @C@@@@       LA    A1,LFVR
)@@G@@TDMD   . ABS ADDR OF DIM DATA @E@@@@       JNE,H2 A4,0,A1 WS0920  . NOT VS
)@@G@@N BY 2 IS LENGTH ERROR  @C@@@@. SET UP PARAMS NEEDED BY NORMAL REWRITE RVT
)@@G@@OUTINE@D@@@@WA0020 LA    A0,LGLXUS   . GET EXCLUSIVE USE FLAG     @D@@@@VU
)@@G@@       JZ    A0,WR0910   . ERROR IF WE DON'T HAVE ANY @F@@@@       JB   VV
)@@G@@ A0,WA0030   . IF ITS @ASG,X DONT RE-READ SECTOR ZERO @C@@@@       DOIO VW
)@@G@@ RDL$,SZPAKT WR0920    . ELSE GET IT@C@@@@WA0030 LA,U  A3,UNL$     . GETVX
)@@G@@ REWRITE FLAG     @E@@@@       LA,U  A0,TOWACM   . SET SPECIAL ENTRY TO VY
)@@G@@TOC RTNE    @F@@@@       J     WR0030      . AND CONTINUE AS FOR NORMAL VZ
)@@G@@REWRITE     @^@@@@/. WRITE AND REWRITE -- @[@@@@.     @#@@@@       INSTRWA
)@@G@@S     @ @@@@. WRITE (I.E. APPEND) ENTRY   @#@@@@. CATENATE ENTRY  @ @@@@WB
)@@G@@FICATN* SX   X11,FWLINK  .    @E@@@@       JNOPER A0,FIPCAT WR0900     .WC
)@@G@@ BE SURE CAT IS ALLOWED @B@@@@       LA    A3,LGDCLF   . GET FILE TYPE  WD
)@@G@@@F@@@@       JB    A3,WS0010   . IF SDF, GO DIRECTLY TO DO SDF WRITE    WE
)@@G@@@D@@@@       LA,U  A3,W$       . ELSE SET FUNC/FLAG FOR CAT @B@@@@      WF
)@@G@@ J     WR0010      . AND GO DO IT   @#@@@@. REWRITE ENTRY --@ @@@@FIREWRWG
)@@G@@* SX   X11,FWLINK  .    @G@@@@       JNOPER A0,FIPRWR WR0900     . WIPE WH
)@@G@@OUT IF REWRITES NOT PERMITTED @B@@@@       LA    A3,LGDCLF   . GET FILE WI
)@@G@@TYPE  @G@@@@       JB    A3,WR0910   . AND DIE IF TRYING TO REWRITE AN SWJ
)@@G@@DF FILE     @F@@@@       TNZ   LGLXUS      . DO WE HAVE ANY KIND OF EXCLWK
)@@G@@USIVE USE?  @D@@@@       J     WR0910      . IF NOT, REWRITE IS INVLAID WL
)@@G@@@E@@@@       LA,U  A3,UNL$     . YES, GET FUNC/FLAG FOR REWRITE   @B@@@@WM
)@@G@@                         . AND FALL THRU  @[@@@@.     @D@@@@. COMMON RANWN
)@@G@@DOM WRITE RTNE FOR BOTH REWRITE AND APPEND@[@@@@.     @C@@@@WR0010 LA   WO
)@@G@@ A0,LGLXUS   . GET EXCL USE FLAG    @G@@@@       JB    A0,WR0020   . IF WP
)@@G@@WE HAVE IT, DON'T BOTHER TO RE-READ SECT 0@F@@@@       DOIO  RDL$,SZPAKTWQ
)@@G@@ WR0920 . READ AND LOCK THE CONTROL SECTOR@D@@@@WR0020 LA,U  A0,TOCAPP  WR
)@@G@@ . ASSUME WE'RE APPENDING     @A@@@@       TE,U  A3,W$       . ARE WE?  WS
)@@G@@@G@@@@       LA,U  A0,TOCREW   . NO, CHANGE TOC RTNE ENTRY PT TO REWRITEWT
)@@G@@ ENTRY@D@@@@. NOTE-- ACCESS MATRIX WRITE ROUTINE XFERS TO HERE--- @D@@@@WU
)@@G@@WR0030 SA    A3,SZFUNC   . SAVE REWRITE / APPEND FLAG @F@@@@       LMJ  WV
)@@G@@ A0,0,A0     . GO GET TOC ENTRY (EL NUM IS IN A2)     @B@@@@       J    WW
)@@G@@ WR0999      . ERR READING TOC@E@@@@. NOW SET UP DESCR AND ACCESS WDS FOWX
)@@G@@R DATUM TO BE WRITTEN   @G@@@@WR0100 LA    A0,TCNWDS   . GET SIZE OF PREWY
)@@G@@VIOUS DATA VALUE IN WORDS     @C@@@@       LA    A1,TCDPTR   . AND ITS DWZ
)@@G@@RUM ADDR    @F@@@@       DS    A0,FWFPAR   . SAVE FOR LATER RELEASE OF FXA
)@@G@@REED SPACE  @G@@@@       LA    A0,LFTDSC   . GET REL DESCR ADDR OF DATUMXB
)@@G@@ TO BE WRITTEN    @ @@@@       ABSADR A0         .    @A@@@@       LA   XC
)@@G@@ A1,0,A0     . GET DESCR@C@@@@       SA    A1,TCDSCR   . POST IN TOC ENTXD
)@@G@@RY    @ @@@@       ER    TDATE$      .    @D@@@@       SA    A0,TCTDAT  XE
)@@G@@ . POST CURRENT TIME AND DATE @ @@@@       DL    A0,RCLIBN   .    @A@@@@XF
)@@G@@       DS    A0,TCLIBN   . AND LIBNO@D@@@@       LOADR A3,LFTMOD,3 . GETXG
)@@G@@ DATA ADDR, MODE, ETC.  @D@[@@       DSL   A0,72       . CLEAR DATA AND XH
)@@G@@DIM WORDCTS @D@[@@       JNZ   A4,WR0120   . IF NOT SCALAR, GO DO ARRAYSXI
)@@G@@@B@[@@. ADJUST WORDCT AND ADDRESSES FOR SCALARS @B@[@@WR0110 TNE,U A3,ZMXJ
)@@G@@ODFL   . IS IT DFLOAT.  @C@[@@       LA,U  A1,2        . YES, 2 WDS FOR XK
)@@G@@DATUM @B@[@@       TNE,U A3,ZMOCHR   . CHARACTER?     @B@[@@       LA,U XL
)@@G@@ A1,1        . YES, 1 WORD    @C@[@@       J     WR0140      . GO MAKE AXM
)@@G@@CCESS WORD  @A@[@@. SET WORDCT FOR ARRAYS AND VECTORS @E@[@@WR0120 JE,U XN
)@@G@@ A4,ZRANKV WR0130 . IF VECTOR, FORGET ABOUT DIMS@C@[@@       LA    A0,A4XO
)@@G@@       . ELSE RANK=NO OF DIMS @A@[@@       AA,U  A0,1        . ROUND UP XP
)@@G@@@F@[@@       SSL   A0,1        . DIV BY 2, SINCE DIMS ARE IN HALFWORDS  XQ
)@@G@@@C@[@@. COMPUTE NO OF WDS OCCUPIED BY DATA VALUES     @B@[@@WR0130 LA   XR
)@@G@@ A1,A5       . GET NO OF ELS  @A@[@@       TE,U  A3,ZMOCHR   . CHAR?    XS
)@@G@@@E@[@@       LSSL  A1,1        . NO-ALIGN FOR HALFINT ROUNDING    @A@[@@XT
)@@G@@       TNE,U A3,ZMODFL   . DFLOAT?  @F@[@@       LSSL  A1,2        . YESXU
)@@G@@, MORE ALIGNMENT SO ROUND IS VACUOUS@C@[@@       AA,U  A1,3        . ROUXV
)@@G@@ND AS IF ZMOCHR   @E@[@@       SSL   A1,2        . NOW A1=NO OF WDS USEDXW
)@@G@@ FOR DATA EL@F@@[[        LMJ    X11,COMSPC     . COMPUTE SPACE OCCUPIEDXX
)@@G@@ BY DATA    @E@@[[        LX     X11,TOEADR     . RESTORE POINTER TO TOCXY
)@@G@@ ENTRY@BP@@@. NOW CREATE ACCESS WDS FOR DIMS AND DATA @C@@@@WR0140 AU   XZ
)@@G@@ A1,A0       . TOT NO WDS TO A2     @A@@@@       SA    A2,TCNWDS   . POSYA
)@@G@@T IT  @F@@@@       JZ    A2,WR0200   . IF NONE, GO REWRITE UPDATED TOC EYB
)@@G@@NTRY  @G@[@@       LDSC  A0,36+18    . MOVE COUNTS TO INCR, DATADR TO A0YC
)@@G@@, DIMS TO A1@G@@[[        LDSL   A0,18          . MOVE COUNTS OVER TO INYD
)@@G@@CR PART OF REGS   @A[@@@       TZ    A0          . ANY DATA?@D@@@@      YE
)@@G@@ LXM   A0,LFTDAD   . YES, DATA ADDR TO ACCESS WD@A@@@@       TZ    A1   YF
)@@G@@       . ANY DIMS?@E@@@@       LXM   A1,LFTDMD   . YES, DIM DATA ADDR TOYG
)@@G@@ ACCESS WD  @A@@@@       TNZ   A0          . ANY DATA?@E@@@@       LDSL YH
)@@G@@ A0,36       . NO, MAKE DIMS THE 1ST ACESS WORD @F@@@@       DS    A0,DAYI
)@@G@@SGAW   . POST ACCESS WDS IN CASE OF GATHER WRITE@C@@@@       LA,U  A2,W$YJ
)@@G@@       . GET NORMAL WRITE FUNC@F@@@@       JZ    A1,WR0150   . IF NORMALYK
)@@G@@ WRITE, GO POST ACCESS WD     @C@@@@       LA,U  A2,GW$      . ELSE CHANYL
)@@G@@GE FUNC CODE@F@@@@       LA,U  A0,DASGAW   .  AND BUILD ACCESS WD FOR GAYM
)@@G@@THER TABLE  @D@@@@       LXI,U A0,2        . WHICH CONTAINS 2 ENTRIES   YN
)@@G@@@A@@@@. FINISH POSTING AND WRITE DATA     @C@@@@WR0150 SA    A0,DAPACW  YO
)@@G@@ . POST PRIMARY ACESS WD@C@@@@       SA    A2,DAFUNC   . AND FUNCTION COYP
)@@G@@DE    @[@@@@.     @D@@@@. NOW ACQUIRE THE NEEDED SPACE AND WRITE THE DATYQ
)@@G@@UN    @[@@@@.     @D@@@@WR0200 LA    A0,TCNWDS   . GET NO OF WORDS NEEDEYR
)@@G@@D     @E@@@@       JZ    A0,WR0210   . IF NONE, GO UPDATE SECTOR ZERO   YS
)@@G@@@D@@@@       LA    A1,SZFUNC   . GET REWRITE/APPEND FLAG    @D@@@@      YT
)@@G@@ LX,U  X11,FILSPA  . ASSUME WE'RE APPENDING     @A@@@@       TE,U  A1,W$YU
)@@G@@       . ARE WE?  @B@@@@       LX,U  X11,FILSPR  . NO, REWRITING  @F@@@@YV
)@@G@@       LMJ   X11,0,X11   . GO FIND A PLACE TO PUT THIS ELEMENT    @B@@@@YW
)@@G@@       J     WR0999      . FILE FILLED UP @E@@@@       TNE,U A1,W$      YX
)@@G@@ . DID WE CHANGE THE CONTROL SECTOR?@F@@@@       SA    A1,SZFUNC   . YESYY
)@@G@@, REMEMBER THAT WE MUST UPDATE IT   @E@@@@       SA    A0,DADADR   . POSYZ
)@@G@@T DRUM ADDR IN DATA PACKET    @E@@@@       LX    X11,TOEADR  . RECOVER PZA
)@@G@@OINTER TO TOC ENTRY     @E@@@@       SA    A0,TCDPTR   . AND POST DATA AZB
)@@G@@DDR IN TOC, TOO   @ @@@@       LA,U  A0,DAPAKT   .    @B@@@@       ER   ZC
)@@G@@ IOW$        . WRITE THE DATUM@ @@@@       TZ    DASTAT      . OK?@D@@@@ZD
)@@G@@       J     WR0920      . NO-- GO SIGNAL I/O ERROR   @E@@@@. MAKE SURE ZE
)@@G@@CTL SECT REFLECTS LATEST STATE OF THE FILE--    @D@@@@WR0210 LA    A1,SZZF
)@@G@@FUNC   . GET CHANGE/NOCHANGE FLAG   @F@@@@       JE,U  A1,W$ WR0220     ZG
)@@G@@. IF IT'S BEEN CHANGED, GO WRITE IT @D@@@@       LA    A0,LGLXUS   . NO ZH
)@@G@@CHANGE, GET XUSE FLAG   @E@@@@       JB    A0,WR0230   . IF @ASG,X-- NO ZI
)@@G@@NEED TO UNLCOK IT @ @@@@WR0220 LA,U  A0,SZPAKT   .    @D@@@@       ER   ZJ
)@@G@@ IOW$        . WRITE/UNLCOK CONTROL SECTOR@ @@@@       TZ    SZSTAT     ZK
)@@G@@ . OK?@ @@@@       J     WR0920      .    @^@@@@. NOW UPDATE THE TOC    ZL
)@@G@@@A@@@@WR0230 DOIO  W$,TOPAKT WR0920   .   @D@@@@. AND FINALLY UPDATE THEZM
)@@G@@ BITMAP TO REFLECT FREED SPACE@B@@@@WR0240 DL    A0,FWFPAR   . GET FREE ZN
)@@G@@PARAMS@E@@@@       JZ    A0,WR0300   . IF NOTHING WAS FREED, GET OUT    ZO
)@@G@@@D@@@@       LMJ   X11,FILSPF  . ELSE GO MARK THE BITMAP    @ @@@@      ZP
)@@G@@ J     WR0999      .    @#@@@@. NORMAL EXIT     @E@@@@. NOTE -- EXITS BEZQ
)@@G@@LOW ARE ALSO JUMPED TO BY SDF CODE, BELOW @D@@@@WR0300 LA,U  A2,0       ZR
)@@G@@ . STATUS CODE FOR SUCCESS    @ @@@@       LX    X11, FWLINK .    @D@@@@ZS
)@@G@@       J     1,X11       . TAKE STATUS POSTING EXIT   @]@@@@. ERRORS ---ZT
)@@G@@@C@@@@WR0900 ERROR YFIPER,WR0999    . PERMISSION ERROR@C@@@@WR0910 ERRORZU
)@@G@@ YFIFUN,WR0999    . INVALID FUNCTION@A@@@@WR0920 ERROR YIOERR,WR0999    ZV
)@@G@@.     @ @@@@WR0999 LX    X11,FWLINK  .    @ @@@@       J     0,X11      ZW
)@@G@@ .    @ @@@@/. SEQUENTIAL (SDF) WRITE     @[@@@@.     @C@@@@WS0010 LOADRZX
)@@G@@ A3,LFTMOD,3 . GET MODE RANK SIZE   @D@@@@       JE,U  A5,1 WS0020 . IF ZY
)@@G@@LENGTH=1, GO CHECKMODE  @G@@@@       JNE,U A4,ZRANKV WS0900 . ELSE IF NOZZ
)@@G@@T VECTOR, THEN RANK ERROR     @D@@@@       JZ    A5,WS0030   . IF NULL, AA
)@@G@@SKIP MODE CHECK   @D@@@@WS0020 JNE,U A3,ZMOCHR WS0910 . NOT CHAR IS DOMAAB
)@@G@@IN ERR@B@@@@. COMPUTE NO OF WORDS RESULT WILL USE--   @C@@@@WS0030 LX   AC
)@@G@@ X4,GLFTBL+ZMOCHR . SET FETCH ADDR  @B@@@@       LX    X5,LFTDAD   . SETAD
)@@G@@ DATA ADDR  @ @@@@       LXI,U X5,1        .    @ @@@@       LA    A14,AAE
)@@G@@5      .    @G@@@@       LA,U  A0,5        . INIT FIELDATA CHAR CT TO ACAF
)@@G@@COUNT FOR ROUNDING@F@@@@WS0040 JNGD  A5,WS0050   . OUT WHEN SOURCE STRINAG
)@@G@@G IS EXHAUSED     @D@@@@       LMJ   X4,0,X4     . GET NEXT SOURCE CHAR AH
)@@G@@TO A1 @B@@@@       AA,U  A0,1        . BUMP CHAR CT   @D@@@@       TZ,S4AI
)@@G@@ FDTABL,A1   . IS THIS A COMPOUND CHAR?   @F@@@@       AA,U  A0,1       AJ
)@@G@@ . YES, COUNT THE SECOND FIELDATA CHAR    @ @@@@       J     WS0040     AK
)@@G@@ .    @E@@@@WS0050 DSL   A0,36       . LINE UP NO OF FIELDATA CHARS +5  AL
)@@G@@@B@@@@       DI,U  A0,6        . CONVERT TO WRDS@E@@@@       LMJ   X11,SAM
)@@G@@DPUTI  . INITIALIZE STASH, SET CTL WRD    @ @@@@       J     WR0999     AN
)@@G@@ .    @F@@@@       LX    X4,GLFTBL+ZMOCHR . RESET ADDR OF FETCH SUBROUTIAO
)@@G@@NE    @C@@@@       LXM   X5,LFTDAD   . AND SOURCE DATA ADDR @C@@@@. NOW AP
)@@G@@CONVERT AND STASH THE IMAGE IN THE BUFFER @G@@@@WS0100 JNGD  A14,WS0120 AQ
)@@G@@ . EXIT WHEN ALL QUARTERWORDS HAVE BEEN SCANNED @B@@@@       LMJ   X4,0,AR
)@@G@@X4     . GET APL CHAR   @C@@@@       TNZ,S4 FDTABL,A1  . IS IT A DIGRAPHAS
)@@G@@?     @C@@@@       J     WS0110      . NO, GO STORE THE FLAG@C@@@@      AT
)@@G@@ LA,S5 A2,FDTABL,A1     . GET THE FLAG    @A@@@@       LMJ   X2,1,X2    AU
)@@G@@ . STASH IT @ @@@@       J     WR0999      .    @D@@@@WS0110 LA,S6 A2,FDAV
)@@G@@TABL,A1     . GET 2ND (ONLY) CHAR   @B@@@@       LMJ   X2,1,X2     . PLUAW
)@@G@@G INTO IMAGE@ @@@@       J     WR0999      .    @D@@@@       J     WS010AX
)@@G@@0      . GO BACK FOR NEXT APL CHAR  @C@@@@. PAD WITH 5 BLANKS SO WE'RE BAY
)@@G@@OUNDARY ALIGNED   @[@@@@.     @#@@@@P      PROC  .    @#@@@@BLPAD* NAME AZ
)@@G@@ .    @ @@@@       UNLI$T            .    @C@@@@       LA,U  A2,' '     BA
)@@G@@ . GET A SINGL E BLANK  @A@@@@       LMJ   X2,1,X2     . STASH IT @ @@@@BB
)@@G@@       J     WR0999      .    @#@@@@       LI$T  .    @#@@@@       END  BC
)@@G@@ .    @[@@@@.     @]@@@@WS0120 .    @ @@@@ DO 5 , BLPAD            .    BD
)@@G@@@D@@@@       LMJ   X2,0,X2     . CLOSE THE CURRENT IMAGE    @A@@@@      BE
)@@G@@ J     WR0999      . ERROR    @D@@@@       J     WR0300      . GO TO NORBF
)@@G@@MAL EXIT, ABOVE   @[@@@@.     @A@@@@WS0900 ERROR YRANK,WR0999     .     BG
)@@G@@@A@@@@WS0910 ERROR YDOMAI,WR0999    .     @A@@@@WS0920 ERROR YLENGT,WR09BH
)@@G@@99    .     @#@@@@       VARBLS  .  @ @@@@FWLINK EQUF  $,,H1       .    BI
)@@G@@@#@@@@       RES   1 .  @E@@@@FWFPAR RES   2           . PARAMS TO FREE BJ
)@@G@@SPACE IN FILE     @B@@[[/. @ADD AN APL-ASSIGNED SEQUENTIAL FILE   @[@@[[BK
)@@G@@.     @ @@[[       INSTRS            .    @[@@[[.     @ @@[[FIADD* SX   BL
)@@G@@ X11,FALINK  .    @G@@[[       JNOPER A0,FIPREA FA0900     . WIPE OUT IFBM
)@@G@@ NO READ PERMISSION     @E@@[[       LA    A0,LGDCLF   . GET DECLARATIONBN
)@@G@@ FOR THIS FILE    @F@@[[       JNB   A0,FA0910   . IF NOT SEQUENTIAL, FIBO
)@@G@@LE FUNC ERROR     @C@@[[. IF WE'VE BEEN WRITING, FLUSH THE OUTPUT BUFFERBP
)@@G@@@D@@[[FA0100 LA    A0,SZFUNC   . GET FUNC/FILEMODE FLAG     @G@@[[      BQ
)@@G@@ JNE,U A0,W$ FA0200     . IF NOT IN WRITE MODE, NOTHING TO DO     @F@@[[BR
)@@G@@        LA,U    A0,SZBUFR     . ELSE GET CURRENT ADDR OF BUFFER   @E@@[[BS
)@@G@@        SA      A0,SZBADR     . JAM IT INTO THE I/O PACKET  @F@@[[      BT
)@@G@@  DOIO    W$,SZPAKT FA0920   . AND SPLAT OUT THE LAST BUFFER@^@@[[. NOW BU
)@@G@@DO THE DEED---    @E@@[[FA0200 DL    A0,SZUNAM   . GET @USE NAME FROM CTBV
)@@G@@L SECTOR    @D@@[[       DS    A0,FIAUNM   . JAM INTO THE @ADD IMAGE    BW
)@@G@@@A@@[[       LA,U  A0,FIAIMG   . SET IT UP@A@@[[       ER    CSF$       BX
)@@G@@ . SPLAT!!! @G@@[[       JN    A0,0        . BECAUSE WE CHECKED ABOVE, FBY
)@@G@@AILURE IS SYSERR  @ @@[[       LX    X11,FALINK  .    @ @@[[       J    BZ
)@@G@@ 1,X11       .    @A@@[[FA0900 ERROR YFIPER,FA0990    .     @A@@[[FA0910CA
)@@G@@ ERROR YFIFUN,FA0990    .     @ @@[[FA0920 ERROR YIOERR      .    @ @@[[CB
)@@G@@FA0990 LX    X11,FALINK  .    @ @@[[       J     0,X11       .    @ @@[[CC
)@@G@@       VARBLS            .    @ @@[[FALINK EQUF  $,,H1       .    @ @@[[CD
)@@G@@       RES   1           .    @ @@[[       VARCON            .    @ @@[[CE
)@@G@@FIAIMG '@ADD  '          .    @E@@[[FIAUNM RES   2           . @USE NAMECF
)@@G@@ IS CRAMMED INTO HERE   @F@@[[       '. .   '          . FOR GOOD LUCK (CG
)@@G@@TO STOP SCAN BY CSI)    @^@@@@/. TOC READ RTNE --     @G@@@@.     FOR RECH
)@@G@@AD ENTRY, THE TOC IS NOT RE-READ IF A COPY OF IT IS IN THE  @G@@@@. BUFFCI
)@@G@@ER. THIS MIGHT RESULT IN THE READ OF AN OLD COPY OF A RECENTLY    @G@@@@CJ
)@@G@@. UPDATED ELEMENT,  BUT SINCE THIS COULD HAVE HAPPENED IF THE UPDATER   CK
)@@G@@@F@@@@. HAD MERELY SIGNED ON A FEW MINUTES LATER ANYWAY, WE DON'T CARE. CL
)@@G@@@G@@@@.     ON WRITE ENTRIES,  IT MIGHT BE POSSIBLE FOR ANOTHER USER TO CM
)@@G@@HAVE  @G@@@@. CHANGED THE TOC ENTRY FOR SOME DATUM IN THE SAME SECTOR SICN
)@@G@@NCE THE TIME@G@@@@. WE LAST READ IT.  SINCE A WRITE MEANS THE TOC WILL BCO
)@@G@@E WRITTEN,  WE    @G@@@@. MUST ALWAYS FORCE A READ OF THE TOC SECTOR, UNCP
)@@G@@LESS THE FILE HAS A     @G@@@@. GLOBAL LOCK SET ON IT.  SINCE NEXT WRITECQ
)@@G@@ ADDR (SECTOR 0) IS WRITTEN   @G@@@@. BEFORE TOC IS UPDATED (TO PROTECT CR
)@@G@@AGAINST SYSTEM CRASHES), THE TOC    @F@@@@. SECTOR IS READ WITH AN RDL$ CS
)@@G@@WHEN THE OP IS REWRITE OR APPEND.   @[@@@@.     @F@@@@. CALL SEQ IS LMJ CT
)@@G@@XXX,A0; IF ELNO IS REQ'D (READ OR REWRITE) THE  @^@@@@. ELNO SHOULD BE ICU
)@@G@@N A2  @[@@@@.     @ @@@@. ENTRY FOR READ OPERATIONS   @[@@@@.     @#@@@@CV
)@@G@@       INSTRS .   @D@@@@TOCREA LA,U  A1,R$       . READ DOES NOT LOCK THCW
)@@G@@E TOC @D@@@@       J     TO0010      . GO CHECK THE ELEMENT NO    @A@@@@CX
)@@G@@. ENTRY TO READ ACCESS MATRIX--     @ @@@@TOCACR LA,U  A1,R$       .    CY
)@@G@@@E@@@@       LA,U  A2,0        . ACCESS MTRX IS ZERO'TH COMPONENT @F@@@@CZ
)@@G@@       J     TO0100      . GO READ IT WITHOUT ELEMENT NO CHECK    @ @@@@DA
)@@G@@. ACCESS MATRIX WRITE ENTRY---@E@@@@TOWACM* LA,U  A1,RDL$     . WRITE OPDB
)@@G@@S ALWAYS LOCK THE TOC   @E@@@@       LA,U  A2,0        . ACCESS MATRIX IDC
)@@G@@S ZERO'TH ELEMENT @B@@@@       J     TO0100      . GO GETTUM TOC  @[@@@@DD
)@@G@@.     @#@@@@. CATENATE ENTRY  @[@@@@.     @C@@@@TOCAPP SX    A0,TOWFLG  DE
)@@G@@ . TURN ON WRITE FLAG   @F@@@@       SX    A0,TOLINK   . SAVE LINKAGE INDF
)@@G@@ CASE THERE'S AN ERROR  @E@@@@       LA    A2,SZTCUR   . GET CURRENT NO DG
)@@G@@OF TOC ENTRIES    @D@@@@       TG    A2,SZTMAX   . WILL ANOTHER EL CAUSEDH
)@@G@@ OFLO?@D@@@@       J     TO0900      . YES, GO SIGNAL FILE FULL   @B@@@@DI
)@@G@@       AA,U  A2,1        . BUMP NO OF ELS @E@@@@       SA    A2,SZTCUR  DJ
)@@G@@ . POST UPDATED COUNT OF ELEMENTS   @D@@@@       LA,U  A3,0,A2     . SETDK
)@@G@@ UP TO CHECK SECTOR OFLO@F@@@@       DSL   A3,2        . DIV NEW ELNO BYDL
)@@G@@ 4, GIVING SECTOR, INDEX@C@@@@       SSL   A4,36-2     . ALIGN EL WITHINDM
)@@G@@ SECT @D@@@@       JNZ   A4,TO0005   . IF NOT NEW SECTOR, CONTINUE@G@@@@DN
)@@G@@. INIT NEW TOC SECTOR TO ALL 0'S (I.E. VOID DATA).  THIS INSURES THAT-- DO
)@@G@@@F@@@@.      (1) NEW TRAX ARE ALLOCATED BEFORE BEING READ (NO I/O 5'S)  DP
)@@G@@@G@@@@.      (2) CRASHES BETWEEN CTL SECT AND TOC UPDATES WILL NOT CAUSEDQ
)@@G@@ BAD  @C@@@@.          DATA POINTERS TO BE LEFT IN THE FILE @G@@@@.     DR
)@@G@@ (3) THE WORDCOUNT OF SPACE TO BE FREED WILL BE 0 FOR APPENDS     @[@@@@DS
)@@G@@.     @C@@@@       AA    A3,SZTADR   . SECTOR PLUS TOC BASE @E@@@@      DT
)@@G@@ SA    A3,TODADR   . POST DRUM ADDR OF THIS TOC SECT  @ @@@@       LR,U DU
)@@G@@ R1,27       .    @ @@@@       LX,U  A3,TOBUFR   .    @ @@@@       LXI,UDV
)@@G@@ A3,1        .    @D@@@@       SZ    0,*A3       . CLEAR ENTIRE BUF TO ZDW
)@@G@@ERO   @ @@@@       JGD   R1,$-1      .    @E@@@@       DOIO  W$,TOPAKT TDX
)@@G@@O0920 . WRITE OUT CLEARED SECTOR    @C@@@@       LA    A0,TOWFLG   . RECDY
)@@G@@OVER ENTRY LINKAGE@B@@@@       TNZ   WSIXOR      . ZERO ORIGIN?   @F@@@@DZ
)@@G@@       ANA,U A2,1        . YES, ADJUST INDEX TO FAKE IT FOR BELOW @B@@@@EA
)@@G@@TO0005                   . AND FALL THRU  @[@@@@.     @#@@@@. REWRITE ENEB
)@@G@@TRY   @[@@@@.     @E@@@@TOCREW LA,U  A1,RDL$     . WRITE OPS ALWAYS LOCKEC
)@@G@@ THE TOC    @[@@@@.     @B@@@@. CHECK FOR VALID ELEMENT NO, SAVE PARAMS ED
)@@G@@@G@@@@.      ELEMENT NUMBER ZERO OF THE FILE IS THE ACCESS MATRIS, HENCEEE
)@@G@@ THE  @C@@@@. LOWEST INDEX A USER PROG CAN ASK FOR IS 1     @[@@@@.     EF
)@@G@@@E@@@@TO0010 TNZ   WSIXOR      . IS USER PROG RUNNING IN 0-ORIGIN @E@@@@EG
)@@G@@       AA,U  A2,1        . YES, BOOST SO 1ST EL IS INDEX=1  @F@@@@      EH
)@@G@@ ANU,U A2,1        . DECREMENT INDEX TO MAKE TESTS EASIER   @E@@@@      EI
)@@G@@ SX    A0,TOLINK   . IN CASE OF ERR, SAVE LINKAGE     @E@@@@       TLE  EJ
)@@G@@ A3,SZTCUR   . WITHIN PRESENT EXTENT OF FILE?   @D@@@@       TLE,U A3,0 EK
)@@G@@       . AND OK AT THE BOTTOIN?     @D@@@@       J     TO0910      . NO,EL
)@@G@@ GO SIGNAL INDEX ERROR  @[@@@@.     @E@@@@TO0100 SA    A2,DASNUM   . POSEM
)@@G@@T CURRENT DATUM SEQUENCE NO   @D@@@@       SA    A1,TOFUNC   . SAVE OPCOEN
)@@G@@DE TO BE USED     @G@@@@       SA    A0,TOLINK   . SAVE (POSSIBLY FOR THEO
)@@G@@E 2ND TIME) THE LINKAGE @G@@@@       DSL   A2,2        . DIV ELNO BY 4 EEP
)@@G@@NTRIES/SECTOR=SECT NO IN TOC  @D@@@@       SSL   A3,34       . LINE UP EEQ
)@@G@@NTRY IN SECTOR    @F@@@@       MSI,U A3,7        . 7 WORDS/ENTRY GIVES OER
)@@G@@FFSET INTO SECTOR @C@@@@       AA,U  A3,TOBUFR   . PLUS BUF BASE ADDR   ES
)@@G@@@E@@@@       SA    A3,TOEADR   . SAVE BUF ADDR OF THIS TOC ENTRY  @F@@@@ET
)@@G@@       JNE   A2,TOSNUM TO0110 . IF TOC SEG NOT IN BUF, GO READ IT @G@[@@EU
)@@G@@       TNZ   TOWFLG      . SECTOR ALREADY READ-IS THIS A WRITE OPN?     EV
)@@G@@@F@[@@       J     TO0200      . NO READ-CURRENT COPY CAN STILL BE USED EW
)@@G@@@C]@@@       LA    A0,LGLXUS   . GET EXUSE/LOCK FLAG  @E@@@@       JB   EX
)@@G@@ A0,TO0200   . IF @ASG,X WE NEEDEN'T RE-READ IT @B@@@@. READ THE REQUIREEY
)@@G@@D SECTOR OF THE TOC     @E@@@@TO0110 SA    A2,TOSNUM   . MAKE IT THE 'CUEZ
)@@G@@RRENT' SECTOR     @F@@@@       AA    A2,SZTADR   . PLUS BASE OF TOC GIVEFA
)@@G@@S SECTOR ADDR     @E@@@@       SA    A2,TODADR   . POST DRUM ADDR OF SECFB
)@@G@@TOR TO READ @ @@@@       LA,U  A0,TOPAKT   .    @C@@@@       ER    IOW$ FC
)@@G@@       . READ THE TOC SECTOR  @A@@@@       TZ    TOSTAT      . OP OK?   FD
)@@G@@@D@@@@       J     TO0920      . NO, GO SIGNAL I/O ERROR    @#@@@@. NORMFE
)@@G@@AL EXIT     @D@@@@TO0200 LX    X11,TOEADR  . SET PTR TO THIS TOC ENTRY  FF
)@@G@@@ @@@@       LA    A0,TOLINK   .    @B@@@@       J     1,A0        . NORFG
)@@G@@MAL EXIT    @#@@@@. ERROR EXITS     @B@@@@TO0900 ERROR YFIFUL,TO0999    FH
)@@G@@. FILE FULL @G@@@@TO0910 ERROR YINDEX,TO0999    . ILLEGAL ELEMENT NUMBERFI
)@@G@@ IS INDEX ERR     @C@@@@TO0920 ERROR YIOERR,TO0999    . HARDWARE ERR    FJ
)@@G@@@ @@@@TO0999 LX    A0,TOLINK   .    @ @@@@       J     0,A0        .    FK
)@@G@@@#@@@@       VARBLS  .  @ @@@@TOWFLG EQUF  $,,H1       .    @ @@@@TOLINKFL
)@@G@@ EQUF  $,,H2       .    @#@@@@       RES   1 .  @A@@@@/. SPACE ALLOCATIOFM
)@@G@@N ROUTINES------- @[@@@@.     @F@@@@. MARK SPACE FREE IN BITMAP (NWORDS FN
)@@G@@IN A0, 1ST SECT ADR IN A1)    @[@@@@.     @ @@@@       INSTRS           FO
)@@G@@ .    @ @@@@FILSPF SX    X11,FSLINK  .    @D@@@@       LA    A5,LGLXUS  FP
)@@G@@ . GET FLAG FOR LATER TESTS   @F@@@@       DSL   A1,36       . MOVE DATAFQ
)@@G@@ ADDR OVER SO WE HAVE ROOM    @B@@@@       DSL   A0,36       . LINE UP WFR
)@@G@@ORDC  @A@@@@       AA,U  A1,27       . ROUND    @D@@@@       DI,U  A0,28FS
)@@G@@       . CONVERT WORDS TO SECTORS   @B@@@@. GET DRUM ADDRESSES FOR MAPSEFT
)@@G@@CT, ETC.    @G@@@@FP0010 ANA   A2,SZFWRA   . ABS DATA LESS START DATA=REFU
)@@G@@L DATA SECTOR     @G@@@@       LA,U  A1,0        . CLEAR TO COMPUTE WHERFV
)@@G@@E THIS FALLS IN THE MAP @F@@@@       DI,U  A1,64*14    . GET REL MAP SECFW
)@@G@@T AND OFFSET INTO IT    @C@@@@       LA    A3,A1       . DUPE REL MAP SEFX
)@@G@@CTOR  @E@@@@       MSI,U A3,64*14    . GET REL DATA CORRESP TO THIS MAP FY
)@@G@@@F@@@@       AA    A3,SZFWRA   . NOW HAVE ABS DATA ADDR FOR THIS MAP    FZ
)@@G@@@^@@@@. READ MAP IF NECESSARY @D@@@@FP0020 TNE   A3,BMDTAD   . IS THIS MGA
)@@G@@APSECT IN THE BUF?@E@@@@       JB    A5,FP0030   . YES, IF @ASG,X DON'T GB
)@@G@@REREAD IT   @C@@@@       SA    A3,BMDTAD   . ELSE POST DATA ADDR  @D@@@@GC
)@@G@@       AA    A1,SZMADR   . GET ABS MAP SECTOR ADDR    @A@@@@       SA   GD
)@@G@@ A1,BMDADR   . POST IT  @D@@@@       SA    A0,R1       . TEMP SAVE SECTOGE
)@@G@@R COUNT     @D@@@@       DOIO  RDL$,BMPAKT FP0900    . READ THE MAP     GF
)@@G@@@C@@@@       LA    A0,R1       . RESTORE SECTOR COUNT @D@@@@. NOW MAP ISGG
)@@G@@ IN, AND A0=NO OF BITS, A2=STARTBIT INDEX @E@@@@FP0030 LA,U  A3,64*14   GH
)@@G@@ . INDEX OF 1ST BIT IN NEXT MAP     @G@@@@       ANA   A3,A2       . LESGI
)@@G@@S STARTBIT=NO BITS TILL END OF THIS MAP   @E@@@@       ANU   A0,A3      GJ
)@@G@@ . TOT NO BITS LESS NO IN THIS MAP  @F@@@@       SA    A1,FPOFLO   . SAVGK
)@@G@@E NO OF BITS OF OVERFLOW, IF ANY    @C@@@@       TG,U  A1,1        . IS GL
)@@G@@THERE AN OVERFLOW?@G@@@@       LA    A0,A3       . YES, FORCE NBITS TO FGM
)@@G@@REE=NO LEFT IN THIS MAP @ @@@@. NOW MARK THE CURRENT BITMAP @C@@@@FP0040GN
)@@G@@ LA    A1,A2       . SET STARTBIT INDEX UP@F@@@@       LA,U  A2,BMBUFR  GO
)@@G@@ . ADDR OF BUF CONTAINING CURRENT MAP     @B@@@@       LMJ   X11,BMMARK GP
)@@G@@ . MARK THE MAP   @E@@@@       DOIO  W$,BMPAKT FP0900 . WRITE OUT UPDATEGQ
)@@G@@D MAPSECT   @G@@@@       LA    A0,FPOFLO   . GET NO OF OVERFLOW BITS (I.GR
)@@G@@E. DATA SECTS)    @C@@@@       TLE,U A0,1        . ARE THERE ANY LEFT?  GS
)@@G@@@B@@@@       J     FP0050      . NO, WE'RE DONE @F@@@@       LA    A2,BMGT
)@@G@@DTAD   . GET DATA ADR OF LAST MAPSECT WE MARKED @C@@@@       AA,U  A2,64GU
)@@G@@*14    . BUMP TO NEXT MAPSECT @F@@@@       J     FP0010      . AND GO BAGV
)@@G@@CK AND FREE THE LEFTOVERS     @[@@@@.     @ @@@@FP0050 LX    X11,FSLINK GW
)@@G@@ .    @A@@@@       J     1,X11       . BYE---   @[@@@@.     @A@@@@. ALLOGX
)@@G@@CATE SPACE-- A0=NO WDS NEEDED @F@@@@. APPEND TRIES ADDING AT THE END 1STGY
)@@G@@, REWRITE TRIES BITMAP 1ST    @G@@@@. EXIT CONDITIONS: A0=ADDR OF ALLOCAGZ
)@@G@@TED SECTOR, A1=W$/UNL$ IF CTL SECT  @D@@@@. HAS BEEN MODIFIED (I.E. NEXTHA
)@@G@@ WRITE ADDR CHANGED)    @[@@@@.     @F@@@@FILSPA LA    A3,(+BMSRCH,DASRCHB
)@@G@@H)   . APPEND ENTRY, ADD TO END 1ST @ @@@@       J     FS0010      .    HC
)@@G@@@G@@@@FILSPR LA    A3,(+DASRCH,BMSRCH)   . REWRITE-- TRY BITMAP SPACE FIHD
)@@G@@RST   @[@@@@.     @F@@@@FS0010 LA,U  A1,UNL$     . GET FLAG MARKING SECTHE
)@@G@@ 0 NOT YET CHANGED@E@@@@       JZ    A0,1,X11    . IF VBLE NEEDS NO SPACHF
)@@G@@E, EXIT     @C@@@@       SX    X11,FSLINK  . ELSE SAVE RETURN ADDR@ @@@@HG
)@@G@@       TLE,U A0,0        .    @ @@@@       ER    ERR$        .    @D@@@@HH
)@@G@@       SA    A1,FSCFUN   . SAVE SECTOR 0 CONTROL FUNC @B@@@@       AA,U HI
)@@G@@ A0,27       . ROUND WORDCT   @ @@@@       DSL   A0,36       .    @D@@@@HJ
)@@G@@       DI,U  A0,28       . CONVERT WORDS TO SECTORS   @D@@@@       SA   HK
)@@G@@ A0,FSNSEX   . SAVE NO SECTORS NEEDED     @A@@@@. LOOP OVER 2 TRIES TO GHL
)@@G@@ET THE SPACE@E@@@@FS0100 JZ    A3,FS0900   . IF NO SUCCESS, GO SIGNAL FAHM
)@@G@@ILURE @E@@@@       LA,U  A0,0,A3     . ELSE GET CURRENT TARGET ADDR     HN
)@@G@@@B@@@@       SSL   A3,18       . UPDATE LOOPCTL @F@@@@       SA    A3,FSHO
)@@G@@LOOP   . AND SAVE ADDR FOR NEXT TIME THRU LOOP  @D@@@@       LMJ   X11,0HP
)@@G@@,A0    . CALL THE ALLOCATION RTNE   @B@@@@       J     FS0999      . OOPHQ
)@@G@@S, ERROR    @C@@@@       JP    A0,FS0200   . IF SUCCESS, GO HOME  @C@@@@HR
)@@G@@. NO FINE, TRY ALTERNALTE ALLOCATION METHOD     @ @@@@FS0110 LA    A3,FSHS
)@@G@@LOOP   .    @ @@@@       J     FS0100      .    @#@@@@. SUCCESS GET OUT HT
)@@G@@@D@@@@FS0200 LA    A1,FSCFUN   . GET SECTOR ZERO WRITE FLAG @ @@@@      HU
)@@G@@ LX    X11,FSLINK  .    @ @@@@       J     1,X11       .    @#@@@@. ERROHV
)@@G@@R EXITS --  @A@@@@FP0900 ERROR YIOERR,FS0999    .     @A@@@@FS0900 ERRORHW
)@@G@@ YFIFUL,FS0999    .     @ @@@@FS0999 LX    X11,FSLINK  .    @ @@@@      HX
)@@G@@ J     0,X11       .    @ @@@@       VARBLS            .    @ @@@@FSLINKHY
)@@G@@ EQUF  $,,H1       .    @ @@@@FSCFUN EQUF  $,,H2       .    @ @@@@      HZ
)@@G@@ RES   1           .    @ @@@@FSNSEX EQUF  $,,H1       .    @ @@@@FSLOOPIA
)@@G@@ EQUF  $,,H2       .    @ @@@@FPOFLO EQUF  $           .    @ @@@@      IB
)@@G@@ RES   1           .    @A@@@@/. FILE SPACE MANAGEMENT UTILITIES--@[@@@@IC
)@@G@@.     @F@@@@. APPEND CHECK ROUTINE-- CHECKS TO SEE IF REQUIRED SPACE CANID
)@@G@@ BE   @A@@@@. ALLOCATED AT NEXT WRITE ADDR---   @[@@@@.     @ @@@@      IE
)@@G@@ INSTRS            .    @E@@@@DASRCH LA    A0,SZNWRA   . NEXT WRITE ADDRIF
)@@G@@ FROM CTL SECT    @C@@@@       AU    A0,FSNSEX   . PLUS NO SCTS NEEDED  IG
)@@G@@@G@@@@       TG    A1,SZMADR   . DOES MAP FOLLOW WHERE NEXT WRITE WOULD IH
)@@G@@BE?   @C@@@@       TNE   A1,SZMADR   . NO, ARE THEY EQUAL?  @D@@@@      II
)@@G@@ J     $+2         . YES, THIS ALLOCATION IS OK @C@@@@       J     DS001IJ
)@@G@@0      . NO, TAKE FAILURE EXIT@F@@@@       SA    A1,SZNWRA   . UPDATE NEIK
)@@G@@XT WRITE ADDR IN CTL SECT     @F@@@@       LA,U  A1,W$       . GET FLAG IL
)@@G@@INDICATING WE CHANGED SECTOR 0@B@@@@       SA    A1,FSCFUN   . AND POST IM
)@@G@@IT    @C@@@@       J     1,X11       . TAKE SUCCESS EXIT    @A@@@@DS0010IN
)@@G@@ LNA,U A0,1        . SET FLAG @C@@@@       J     1,X11       . SAY NOTHIIO
)@@G@@NG DOING    @[@@@@.     @G@@@@. BITMAP SEARCH UTILITY-- USED FROM ABOVE IP
)@@G@@TO FIND FREE SPACE IN FILE    @[@@@@.     @ @@@@BMSRCH SX    X11,BSLINK IQ
)@@G@@ .    @F@@@@       SZ    BMFUNC      . CLEAR FUNC CD TO USE AS XUSE/READIR
)@@G@@ FLAG @D@@@@       LA    A2,LGLXUS   . GET EXCLUSIVE USE FLAG     @G@@@@IS
)@@G@@       TZ    BMDTAD      . IS ANY PART OF THE MAP CURRENTLY IN CORE?    IT
)@@G@@@F@@@@       JB    A2,BS0105   . YES- IF WE HAVE @ASG,X GO TRY IT FIRST IU
)@@G@@@E@@@@                         . ELSE FALL THRU AND READ ALL SECTS@A@@@@IV
)@@G@@. SET UP LOOP OVER BITMAP SECTORS   @D@@@@BS0010 LR    R1,SZMSIZ   . SIZIW
)@@G@@E OF MAP IN SECTORS     @D@@@@       LA    A0,SZMADR   . ADDR OF 1ST SECIX
)@@G@@T OF MAP    @F@@@@       ANU   A0,SZDSIZ   . LESS SECTORS OF DATA=1ST DAIY
)@@G@@TA ADDR     @A@@@@. READ NEXT MAP SECTOR AND SCAN IT  @ @@@@BS0100 JNGD IZ
)@@G@@ R1,BS0200   .    @G@@@@       SA    A1,BMDTAD   . SAVE DATA SECT ADDR CJA
)@@G@@ORRESP TO THIS MAPSECT  @C@@@@       SR    R1,BSLOOP   . AND CURRENT LOOJB
)@@G@@P CTR @D@@@@       SA    A0,BMDADR   . PUT DRUM ADDR INTO PACKET  @E@@@@JC
)@@G@@       DOIO  RDL$,BMPAKT BS0900 . GET NEXT SECTOR OF MAP    @E@@@@BS0105JD
)@@G@@ LR,U  R1,14       . EACH MAP SECTOR IS 14 DOUBLEWORDS@ @@@@       LA,U JE
)@@G@@ A0,BMBUFR   .    @ @@@@       LXI,U A0,2        .    @D@@@@       LA   JF
)@@G@@ A1,FSNSEX   . REQUESTED NO OF SECTORS    @F@@@@       LMJ   X11,BMSCAN JG
)@@G@@ . SCAN THE MAP FOR THE NEEDEED SECTORS   @D@@@@       J     BS0120     JH
)@@G@@ . NOFIND, GO TO NEXT SECT    @ @@@@. REQUESTED SPACE FOUND---    @F@@@@JI
)@@G@@BS0110 SA    A1,BSFOUN   . SAVE INDEX IN TABLE OF FOUND SPACE     @C@@@@JJ
)@@G@@       LA    A0,FSNSEX   . GET REQUEST SIZE     @B@@@@       LA,U  A2,BMJK
)@@G@@BUFR   . ADDR OF TABLE  @D@@@@       LMJ   X11,BMMARK  . MARK THE SPACE JL
)@@G@@AS ALLOCATED@G@@@@       DOIO  W$,BMPAKT BS0900   . WRITE UPDATED MAP SEJM
)@@G@@CTOR BACK TO DRUM @F@@@@       LA    A0,BSFOUN   . GET RELAD IN THIS MAPJN
)@@G@@ OF FOUND SECTOR  @G@@@@       AA    A0,BMDTAD   . PLUS DATA SECT AT TABJO
)@@G@@LE BASE=SECTOR TO USE   @B@@@@       J     BS0210      . TAKE FIND EXIT JP
)@@G@@@G@@@@. NOFIND, GO TO NEXT SECTOR.  NOTICE THAT WE DO NOT ATTEMPT TO FINJQ
)@@G@@D     @F@@@@. SPACE SPLIT ACROSS MAP SECTOR BOUNDARIES.  SINCE EACH MAP JR
)@@G@@SECTOR@G@@@@. COVERS ABOUT 22K WORDS, AND SINCE THE NORMAL MAX RECORE WOJS
)@@G@@ULD BE MUCH @G@@@@. SMALLER, WE DO NOT FEEL IT IS WORTH THE EFFORE, AS IJT
)@@G@@F THERE IS NOT    @G@@@@. ENOUGH SPACE WITHIN A MAP SECTOR, THERE PROBABJU
)@@G@@LY ISN'T MUCH CHNACE    @C@@@@. CHANCE THAT THE SPACE CAN BE FOUND ANYWHJV
)@@G@@ERE   @F@@@@BS0120 TNZ   BMFUNC      . DID WE ACTUALLY READ THE LAST SECJW
)@@G@@TOR?  @G@@@@       J     BS0010      . NO, IT WAS IN THE BUF.  GO START JX
)@@G@@SCANNING    @C@@@@       DOIO  UNL$,BMPAKT BS0900 . YES, UNLOCK IT@E@@@@JY
)@@G@@       LA    A0,BMDADR   . DRUM ADDR OF LAST SECT PROCESSED @A@@@@      JZ
)@@G@@ AA,U  A0,1        . BUMP IT  @G@@@@       LA    A1,BMDTAD   . GET DATA KA
)@@G@@SECT ADDR CORRESP TO LAST MAP SECT  @F@@@@       AA,U  A1,64*14    . BUMKB
)@@G@@P BY NO DATA SECTORS PER MAP SECTOR @B@@@@       LR    R1,BSLOOP   . RESKC
)@@G@@TORE LOOPCT @D@@@@       J     BS0100      . AND GO SCAN NEXT MAPSECT   KD
)@@G@@@]@@@@. NOFIND--  @B@@@@BS0200 LNA,U A0,1        . SET NOFIND FLAG@#@@@@KE
)@@G@@. NORMAL EXIT     @ @@@@BS0210 LX    X11,BSLINK  .    @ @@@@       J    KF
)@@G@@ 1,X11       .    @]@@@@. ERRORS ---@A@@@@BS0900 ERROR YIOERR,BS0999    KG
)@@G@@.     @ @@@@BS0999 LX    X11,BSLINK  .    @ @@@@       J     0,X11      KH
)@@G@@ .    @ @@@@       VARBLS            .    @ @@@@BSLINK EQUF  $,,H1      KI
)@@G@@ .    @ @@@@BSLOOP EQUF  $,,H2       .    @ @@@@       RES   1          KJ
)@@G@@ .    @ @@@@BSFOUN EQUF  $,,H1       .    @ @@@@       RES   1          KK
)@@G@@ .    @A@@@@/. FIELDATA CHAR FETCH FROM SDF FILE@[@@@@.     @^@@@@      KL
)@@G@@ INSTRS       .   @^@@@@. INITIALIZATION ENTRY  @[@@@@.     @ @@@@SDGETIKM
)@@G@@ SX    X11,SDLINK  .    @D@@@@       LA    A0,SDNCWD   . ADDR IN BUF OF KN
)@@G@@NEXT CTL WD @E@[@@       JNE   A0,SDBEND SG0010      . IF IN BUF CONTINUKO
)@@G@@E     @B@[@@       LMJ   X5,SDFILL   . ELSE FILL BUF  @ @[@@       J    KP
)@@G@@ SG0999      .    @D@[@@       LA,U  A0,SZBUFR   . CTL WD IS 1ST IN THE KQ
)@@G@@BUFFER@D@[@@       SA    A0,SDNCWD   . REMEMBER WHERE WE STARTED  @ @[@@KR
)@@G@@. CHECK FOR TYPE OF CTL WD    @C@[@@SG0010 TN    0,A0        . IS IT AN KS
)@@G@@IMAGE WORD? @C@[@@       J     SG0030      . YES, GO PROCESS IT   @B@[@@KT
)@@G@@       LA,S1 A1,0,A0     . NO, GET FLAG   @E@[@@       JNE,U A1,077 SG00KU
)@@G@@20    . IF NOT EOF, GO SEE WHAT     @C@[@@       LNA,U A0,1        . ELSKV
)@@G@@E SET EOF FLAG    @B@[@@       J     SG0040      . NORMAL EXIT    @A@[@@KW
)@@G@@. CTL WORD NOT SDF END OF FILE --   @C@[@@SG0020 ER    ERR$        . CANKX
)@@G@@'T HANDLE THIS YET@G@@[[SG0005  JG      A0,SDBEND SG0010   . IF CTL WD IKY
)@@G@@N BUF, GO EXAMINE IT    @D@@[[        LMJ     X5,SDFILL     . ELSE REFILKZ
)@@G@@L BUFFER    @A@@[[        J       SG0999        . OOPS@F@@[[        LA  LA
)@@G@@    A0,SDNCWD     . RECOVER ORIGINAL POINTER TO BCW   @G@@[[        ANA LB
)@@G@@    A0,SDBEND     . LESS END =>OFFSET INTO NEW BUF OF CTL WD@F@@[[      LC
)@@G@@  AA,U    A0,SZBUFR-FCTABL   . MAKE RELATIVE TO FCT BUFFER  @E@@[[      LD
)@@G@@  SA      A0,SDNCWD     . POST AS NEW CTL WD POINTER  @F@@[[        J   LE
)@@G@@    SG0005        . AND GO BE SURE THIS ONE IS IN     @ @@[[. CHECK FOR LF
)@@G@@TYPE OF CTL WORD  @F@@[[SG0010  AA,U    A0,FCTABL     . GET ABSOLUTE ADDLG
)@@G@@R OF CTL WORD     @E@@[[        TN      0,A0          . IS THIS A DATA ILH
)@@G@@MAGE CTL WD?@D@@[[        J       SG0030        . YES, GO GOBBLE UP DATALI
)@@G@@@D@@[[        LA,S1   A1,0,A0       . NO, GET IMAGE TYPE    @C@@[[      LJ
)@@G@@  TE,U    A1,077        . REGULAR EOF?    @C@@[[        TNE,U   A1,076  LK
)@@G@@      . NO, FUNNY EOF?  @E@@[[        LNA,U   A0,1          . IF EITHER,LL
)@@G@@ SET EOF FLAG ON  @G@@[[        JN      A0,SG0040     . IF NEITHER, FALLLM
)@@G@@ THRU, ELSE GO GET OUT  @F@@[[. IMAGE CTL WORD IS NOT AN EOF-- FOR THE TLN
)@@G@@IME BEING, IGNORE IT    @G@@[[SG0020  AA,S2   A0,0,A0       . BUMP THIS LO
)@@G@@CTL IMAGE ADDR BY ITS LENGTH  @G@@[[        ANA,U   A0,FCTABL     . MAKELP
)@@G@@ ADDR OF NEXT CTL WORD REL TO FCT   @D@@[[        SA      A0,SDNCWD     LQ
)@@G@@. POST ITS LOCATION     @G@@[[        J       SG0005        . AND GO SEELR
)@@G@@ IF ITS IN OUR CURRENT BUF    @BI@@@. IMAGE CTL WD- SET UP TO FETCH IMAGLS
)@@G@@E     @B@@@@SG0030 LX,U  X5,0,A0     . SET POINTER    @A@@@@       LXI,ULT
)@@G@@ X5,1        . AND INCR @C@@@@       LX,U  X4,SG0100   . AND FETCH LINKALU
)@@G@@GE    @E@@@@       LA,S2 A0,0,*X5    . GET WORDCT FROM INAGE CTL WORD   LV
)@@G@@@B@@@@       MSI,U A0,6        . GET NO CHARS   @#@@@@. NORMAL EXIT     LW
)@@G@@@ @@@@SG0040 LX    X11,SDLINK  .    @ @@@@       J     1,X11       .    LX
)@@G@@@]@@@@. ERROR EXIT@ @@@@SG0999 LX    X11,SDLINK  .    @ @@@@       J    LY
)@@G@@ 0,X11       .    @[@@@@.     @^@@@@. SIXTH WORD FETCHING --@]@@@@P     LZ
)@@G@@ PROC @#@@@@SDGET* NAME    .  @]@@@@       PROC @#@@@@Q*     NAME    .  MA
)@@G@@@B@@@@ DO 1-(P(1,K)=S6) , LA,P(1,K) A2,0,X5   . @B@@@@ DO    P(1,K)=S6  MB
)@@G@@, LA,S6     A2,0,*X5  . @ @@@@       LMJ   X4,1,X4     .    @#@@@@      MC
)@@G@@ END     .  @#@@@@       UNLI$T  .  @#@@@@K DO P(1) , Q  .  @#@@@@      MD
)@@G@@ LI$T    .  @#@@@@       END     .  @[@@@@.     @D@@@@SG0100 LA,U  A0,0,ME
)@@G@@X5     . ADDR OF WD TO FETCH FROM   @E@@[[        ANA,U   A0,FCTABL     MF
)@@G@@. RELATIVE TO START OF FCT    @E@@@@       JNE   A0,SDBEND SG0110 . IF NMG
)@@G@@OT OUT OF BUF GO DO IT  @B@@@@       LMJ   X5,SDFILL   . GO FILL BUF    MH
)@@G@@@C@@@@       J     0,X4        .OOPS, CAN'T READ IT   @A@@@@       LXM,UMI
)@@G@@ X5,SZBUFR   . SET FWA  @E@@@@SG0110 SDGET S1,S2,S3,S4,S5,S6     . GENERMJ
)@@G@@ATE FETCHTABLE    @^@@@@       J     SG0100     @F@@@@. AFTER FETCHING LMK
)@@G@@AST SIXTH OF LAST WORD, LMJ X4,1,X4 CLEANS UP-- @D@[@@SG0200 SX    X5,SDML
)@@G@@NCWD   . POST ADDR OF NEXT CTL WD   @G@@[[SG0020  ANX,U   X5,FCTABL     MM
)@@G@@. MAKE SURE CTL WD ADDR IS RELATIVE TO FCT@C@@[[        SX      X5,SDNCWMN
)@@G@@D     . AND POST IT     @A[@@@       J     1,X4        . RETURN   @[@@@@MO
)@@G@@.     @ @@@@. RTNE TO FILL SDF BUFFER     @[@@@@.     @C@@@@SDFILL LA   MP
)@@G@@ A0,SZDADR   . CURRENT DRUM ADDR    @D@@@@       AA    A0,SDSIZS   . PLUMQ
)@@G@@S BUF SIZE IN SECTORS   @C@@@@       SA    A0,SZDADR   . POST NEW DRUM AMR
)@@G@@DDR   @E@@[[        LA,U    A0,SZBUFR     . GET CURRENT BUFFER ADDR     MS
)@@G@@@E@@[[        SA      A0,SZBADR     . TO ACCESS WORD IN PACKET    @B@@@@MT
)@@G@@       DOIO  R$,SZPAKT SG0900 . READ IT   @B@@@@       J     1,X5       MU
)@@G@@ . NORMAL EXIT    @ @@@@SG0900 SAVER X4,SPSAVX,2 .    @B@@@@       ERRORMV
)@@G@@ YIOERR      . SIGNAL ERROR   @ @@@@       LOADR X4,SPSAVX,2 .    @A@@@@MW
)@@G@@       J     0,X5        . GO BACK  @[@@@@.     @#@@@@       VARBLS  .  MX
)@@G@@@A@@@@SDLINK EQUF  $,,H1            .     @ @@@@SPNWDS EQUF  $,,H2      MY
)@@G@@ .    @ @@@@       RES   1           .    @G@@@@SPSAVX RES   2          MZ
)@@G@@ . TEMP SAVE LINKAGES IF I/O ERR DURING CHAR PUT@A@@@@/. FIELDATA WRITE NA
)@@G@@INTO SDF FILE     @[@@@@.     @ @@@@       INSTRS            .    @D@@@@NB
)@@G@@SDPUTI SX    X11,SDLINK  . (NO CHARS OR -1 IN A0)     @E@@@@       SA   NC
)@@G@@ A0,SPNWDS   . TEMP SAVE INAGE LENGTH IN WORDS  @G@@@@       LA,U  A0,W$ND
)@@G@@       . GET FUNC  INDICATING FILE IS IN OUTPUT MODE  @G@@@@       SA   NE
)@@G@@ A0,SZFUNC   . SAVE SO WE KNOW WHAT TO DO AT @FREE TIME     @C@@@@      NF
)@@G@@ LA    A0,SDNCWD   . ADDR OF NEXT CTL WD  @E@@@@       TE    A0,SDBEND  NG
)@@G@@ . IS IT OUT OF THE CURRENT BUF?    @B@@@@       J     SP0010      . NO,NH
)@@G@@ USE IT     @C@@@@       LMJ   X3,SDDUMP   . YES, DUMP THE BUF    @ @@@@NI
)@@G@@       J     SP0050      .    @C@[@@       LA,U  A0,SZBUFR   . SET UP ADNJ
)@@G@@DR OF CTL WD@B@[@@SP0010 LX,U  X3,0,A0     . SET CTL WD PTR @G@@[[      NK
)@@G@@  LA,U    A0,SZBUFR-FCTABL   . CTL WD WILL BE IN 1ST WD OF NEW BUF@E@@[[NL
)@@G@@SP0010  AA,U    A0,FCTABL     . MAKE ADDR OF CTL WD ABSOLUTE@F@@[[      NM
)@@G@@  LX,U    X3,0,A0       . AND INITIALIZE STASH WORD POINTER @ ]@@@      NN
)@@G@@ LXI,U X3,1        .    @C@@@@       LA    A0,SPNWDS   . RECOVER WORDCOUNO
)@@G@@NT    @D@@@@       LSSL  A0,24       . LINE COUNT UP IN T1/S2     @B@@@@NP
)@@G@@       SA    A0,0,*X3    . POST SDF CTL WD@D@@@@       LX,U  X2,SP0115-1NQ
)@@G@@   . SET STASH RTNE POINTER   @ @@@@SP0030 LX    X11,SDLINK  .    @ @@@@NR
)@@G@@       J     1,X11       .    @ @@@@SP0050 LX    X11,SDLINK  .    @ @@@@NS
)@@G@@       J     0,X11       .    @E@@@@. FIELDATA STASH-- LMJ X2,1,X2 TO STNT
)@@G@@ASH,   0,X2 TO CLOSE    @#@@@@P      PROC    .  @#@@@@SDPUT* NAME    .  NU
)@@G@@@#@@@@       PROC    .  @#@@@@Q*     NAME    .  @B@@@@ DO 1-(P(1,K)=S6) NV
)@@G@@, SA,P(1,K) A2,0,X3   . @B@@@@ DO    P(1,K)=S6  , SA,S6     A2,0,*X3  . NW
)@@G@@@A@@@@       LMJ   X2,1,X2          .     @A@@@@       J     P(2,1) . CLNX
)@@G@@OSE ENTRY   @]@@@@       END  @#@@@@       UNLI$T  .  @#@@@@K DO P(1) , NY
)@@G@@Q  .  @#@@@@       LI$T    .  @#@@@@       END     .  @[@@@@.     @B@@@@NZ
)@@G@@SP0100 LA,U  A0,0,X3     . STASH ADDR     @E@@[[        ANA,U   A0,FCTABOA
)@@G@@L     . RELATIVE TO START OF FCT    @D@@@@       JNE   A0,SDBEND SP0110 OB
)@@G@@. IF IN BUFF, CONTINUE  @C@@@@       LMJ   X3,SDDUMP   . ELSE DUMP CURREOC
)@@G@@NT BUF@A@@@@       J     0,X2        . OOPS     @C@@@@       LXM,U X3,SZOD
)@@G@@BUFR   . RESET STASH POINTER  @B@@@@SP0110 SDPUT S1,S2,S3,S4,S5,S6 SP012OE
)@@G@@0     @C@@@@SP0115 J     SP0100      . GO CHECK STASH OF S1 @D@@@@. CLOSOF
)@@G@@E IMAGE (ASSUME CALLER HAS PADDED WITH BLANKS   @B@@@@SP0120 LA,U  A0,0,OG
)@@G@@X3     . NEXT WD ADDR   @E@@[[        ANA,U   A0,FCTABL     . RELATIVE TOH
)@@G@@O START OF FCT    @F@@@@       JNE   A0,SDBEND SP0130 . IF NOT IN NEXT BOI
)@@G@@UF, GO POST IT    @D@@@@       LMJ   X3,SDDUMP   . ELSE DUMP CURRENT BUFOJ
)@@G@@FER   @ @@@@       J     0,X2        .    @C@[@@       LA,U  A0,SZBUFR  OK
)@@G@@ . GET BUFFER BASE ADDR @F@@[[        LA,U    A0,SZBUFR-FCTABL   . GET COL
)@@G@@URRENT BUF START LOCN   @D[@@@SP0130 SA    A0,SDNCWD   . SAVE NEXT CTL WOM
)@@G@@ORD ADDR    @E@@[[        AA,U    A0,FCTABL     . MAKE ABSOLUTE FOR STASON
)@@G@@HING  @D@@@@       LA    A1,(+0770000000000)   . SDF END OF FILE  @A@@@@OO
)@@G@@       SA    A1,0,A0     . STASH IT @B@@@@       J     1,X2        . NOROP
)@@G@@MAL EXIT    @A@@@@. DUMP CURRENT SDF BUFFER CONTENTS  @C@[@@SDDUMP DOIO OQ
)@@G@@ W$,SZPAKT SP0900 . WRITE THE BUFF  @E@@[[SDDUMP  LA,U    A0,SZBUFR     OR
)@@G@@. GET CURRENT CORE ADDR OF BUF@C@@[[        SA      A0,SZBADR     . JAM OS
)@@G@@INTO PACKET @D@@[[        DOIO    W$,SZPAKT SP0900   . AND WRITE IT OUT OT
)@@G@@@C[@@@       LA    A0,SZDADR   . ADDR WHERE WE PUT IT @D@@@@       AA   OU
)@@G@@ A0,SDSIZS   . PLUS BUF SIZE IN SECOTRS   @E@@@@       SA    A0,SZDADR  OV
)@@G@@ . GIVES ADDR OF NEXT BUFFERLOAD    @ @@@@       J     1,X3        .    OW
)@@G@@@ @@@@. I/O ERR WHILE WRITING BUF-- @ @@@@SP0900 SAVER X2,SPSAVX,2 .    OX
)@@G@@@ @@@@       ERROR YIOERR      .    @ @@@@       LOADR X2,SPSAVX,2 .    OY
)@@G@@@ @@@@       J     0,X3        .    @#@@@@       END  .     ___    A0,SPOZ
)@@G@@NWDS   . RECOVER WORDCOUNT    @D@@@@       LSSL *[S@@@*SDFF*@ @@@@. SUPEPA
)@@G@@RVISOR FOR USER FILE I/O@C@@@@. THIS ROUTINE IS CALLED FROM THE IBEAMS RPB
)@@G@@OUTINE@[@@@@.     @G@@@@. **********************************************PC
)@@G@@*********************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPD
)@@G@@PKG/APL IN SOURCE DECKS     * @G@@@@.                                   PE
)@@G@@                                  * @G@@@@       AXR$         .         PF
)@@G@@                                        * @G@@@@       CONFIG  .    DEFIPG
)@@G@@NE ASSEMBLY PARAMETERS                        * @G@@@@       WSDEF.     PH
)@@G@@ DEFINE WORKSPACE                                   * @G@@@@WORKSP INFO PI
)@@G@@ 2 20.      SET ASIDE THE SPACE                           * @G@@@@      PJ
)@@G@@ RUNCTL.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@PK
)@@G@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE                      * PL
)@@G@@@G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES             PM
)@@G@@    * @G@@@@.                                                           PN
)@@G@@          * @G@@@@. END OF STANDARD PROC BLOCK                          PO
)@@G@@                * @G@@@@. **********************************************PP
)@@G@@*********************** @[@@@@.     @E@@@@       FILDEF            . DEFPQ
)@@G@@INE TAGS USED BY FILE SYSTEM  @[@@@@.     @[@@@@.     @[@@@@.     @^@@@@PR
)@@G@@. SYNTAX OF THE I-BEAMS @G@@@@.     N=UNIT, I=RECORD INDEX, (,P)=OPTIONAPS
)@@G@@L PASSNUM, (,R)=RECORD EST    @E@@@@.                                   PT
)@@G@@               TYPE     @D@@@@.     CREATE   10 1  N (,R) $Y 'NAME'     PU
)@@G@@          1 @D@@@@.     ASSIGN   10 2  N (,P) $Y 'NAME'               1 PV
)@@G@@@D@@@@.     ASSIGNX  10 3  N (,P) $Y 'NAME'               1 @[@@@@.     PW
)@@G@@@D@@@@.     FREE     10 4  $Y <N-VECTOR>                  2 @D@@@@.     PX
)@@G@@FREEDEL  10 5  $Y <N-VECTOR>                  2 @D@@@@.     LOCK     10 PY
)@@G@@6  $Y <N-VECTOR>                  2 @[@@@@.     @#@@@@.     WRITE :     PZ
)@@G@@@D@@@@.         CATENATE       10 7 N (,K) $Y<DATA>       3 @D@@@@.     QA
)@@G@@    REWRITE        10 8 N  I (,K) $Y<DATA>    3 @D@@@@.         PERMISSIQB
)@@G@@ONS    10 9 N (,K) $Y <DATA>      3 @[@@@@.     @]@@@@.     READ: @D@@@@QC
)@@G@@.         DATA           10 10 $Y N (,I (,K))       4 @D@@@@.         COQD
)@@G@@MPON DATA    10 11 $Y N I (,K)          4 @D@@@@.         TOC SIZES     QE
)@@G@@ 10 12 $Y N (,K)            4 @D@@@@.         P-MATRIX       10 13 $Y N QF
)@@G@@(,K)            4 @D@@[[.         ADD (CSF$)     10 15 $Y N (,K)        QG
)@@G@@    4 @[@@@@.     @#@@@@.     STATUS:     @D@@@@.         NUMS          QH
)@@G@@ 10 14 $Y 0                 5 @D@@@@.         NAMES          10 14 $Y 1 QI
)@@G@@                5 @[@@@@.     @G@@@@. THE 'TYPES' ARE USED FOR ARGUMENT QJ
)@@G@@CHECKING BY THE DRIVER,  RESULT     @A@@@@. POSTING ETC.  REQUIREMENTS AQK
)@@G@@RE    @[@@@@.     @G@@@@.     TYPE  CTLVECT              ARG            QL
)@@G@@  RESULT        FCT     @[@@@@.     @G@@@@.      1    3 OR 4 EL, V[3]   QM
)@@G@@ALWAYS CHAR         UNVALUED    FORBIDDEN @A@@@@.           IS UNIT NUMBQN
)@@G@@ER    VECTOR@G@@@@.      2    2 EL ONLY         VECTOR OF UNITS     UNVAQO
)@@G@@LUED      N/A     @B@@@@.                             TO LOOP OVER@G@@@@QP
)@@G@@.      3    3 THRU 5 EL       ANY                 UNVALUED    REQUIRED  QQ
)@@G@@@ @@@@.           VECTOR, V[3] IS   @^@@@@.           UNIT NUMBER @G@@@@QR
)@@G@@.      4    2 EL ALWAYS       1 THRU 3 EL         COMPUTED    REQUIRED  QS
)@@G@@@E@@@@.                             NUMERIC VECT, V[1]  BY FUNCT  @B@@@@QT
)@@G@@.                             IS UNIT NUM @[@@@@.     @G@@@@.      5    QU
)@@G@@2 EL ALWAYS       1 EL NUMERIC        COMPUTED      N/A     @E@@@@.     QV
)@@G@@                                            BY FUNCT  @[@@@@.     @G@@@@QW
)@@G@@. TEMPORARY FILES ARE DENOTED BY A NULLVECTOR FOR THE FILE NAME.  THEY  QX
)@@G@@@G@@@@. ARE INTERNALLY REFERRED TO BY THEIR LOGICAL UNIT NOS.  NAMED FILQY
)@@G@@ES ARE@G@@@@. ALWAYS CATALOGGED 'CP', BUT THIS CAN BE OVERRIDEN BY @ASG QZ
)@@G@@CARDS IN THE@G@@@@. RUNSTREAM BEFORE @APL IS CALLED.  FCYCLES AND READ/WRA
)@@G@@RITE KEYS MAY BE  @G@@@@. SPECIFIED IN THE FILENAME - PERMISSIONS FOR A RB
)@@G@@FILE ARE OBTAINED BY    @G@@@@. 'AND'ING THE EXEC8 LEVEL PERMISSIONS WITRC
)@@G@@H THE SPECIFICATIONS IN THE   @G@@@@. PERMISSION MATRIX.  SDF FILES MUSTRD
)@@G@@ ALWAYS BE EXCLUSIVELY ASSIGNED -   @G@@@@. SINCE THE PROCESSOR WILL NOTRE
)@@G@@ WAIT, @ASG CARDS IN THE RUNSTREAM SHOULD @E@@@@. BE USED FOR BATCH RUNSRF
)@@G@@ AT SITES USING @SECURE ROLOUT/ROLIN@[@@@@.     @^@@@@. ERROR MESSAGES ARG
)@@G@@RE-   @[@@@@.     @C@@@@. I/O ERROR    HARDWARE ERR OR EXPIRED LOCK     RH
)@@G@@@E@@@@. ASSIGN ERR   INCORRECT TYPE, EXISTS (DOES NOT EXIST) ETC  @]@@@@RI
)@@G@@. ROLLED OUT@F@@@@. USE/XUSE CONFLICT CANNOT GET USE/XUSE BECAUSE OF OTHRJ
)@@G@@ER USERS    @C@@@@. FUNCTION ERR      RANDOM FUNC ON SDF FILE -   @B@@@@RK
)@@G@@. PERMISSION VIOLATION   BAD KEYS, ETC    @A@@@@. SPACE EXHAUSTED   THE RL
)@@G@@OBVIOUS     @E@@@@. INDEX ERR   REQUESTED EL TO READ/REWRITE DOES NOT EXRM
)@@G@@IST   @[@@@@.     @ @@@@. FOR SEQUENTIAL (SDF) FILES- @G@@@@.     READ RRN
)@@G@@ESULTS IN A CHAR VECT EXCEPT THAT EOF IS THE SCALAR &1. AT  @F@@@@. EOF,RO
)@@G@@ THE FILE IS ALWAYS LOGICALLY BACKSPASED OVER THE EOF, HENCE@G@@@@. (A) RP
)@@G@@READ PAST EOF IS IMPOSSIBLE, AND (B) A WRITE AFTER AN EOF IS READ @G@@@@RQ
)@@G@@. WILL WRITE OVER THE EOF.  WRITE AFTER READ IS ALLOWED, BUT EACH RECORDRR
)@@G@@@G@@@@. WRITTEN IS FOLLOWED BY A SOFTWARE EOF WHICH IS THEN BACKSPACED ORS
)@@G@@VER.  @G@@@@. HENCE READ AFTER WRITE IS PERMITTED, BUT ALWAYS RESULTS INRT
)@@G@@ AN EOF.    @G@@@@. NO EXPLICIT EOF OPERATION EXISTS- AN EOF (SOFTWARE) RU
)@@G@@IS AUTOMATICALLY  @G@@@@. WRITTEN WHEN THE FILE IS CLOSED.   REWINDS ARERV
)@@G@@ EFFECTED BY CLOSING    @G@@@@. (I.E. FREEING) AND RE-OPENING (I.E. ASSIRW
)@@G@@GNING) THE FILE.  OBVIOUSLY,  @F@@@@. ONLY FASTRAND-FORMAT SDF FILES ON RX
)@@G@@MASS STORAGE CAN BE HANDLED.  @[@@@@.     @G@@@@/. DEFINE TABLES USED TORY
)@@G@@ DRIVE THIS ROUTINE.  THE I-BEAM LEFTARG HAS    @G@@@@. BEEN SET UP IN TRZ
)@@G@@HE RITEARG PICKREGS, AND IS REFERRED TO BELOW AS THE  @G@@@@. 'CONTROL VSA
)@@G@@ECTOR'.  THE OTHER ARG (USES LEFTARG REGS) IS THE 'ARG'     @G@@@@.     SB
)@@G@@ INITIALIZATION IS DONE DEPENDING UPON THE CLASS THE FUNC IS IN,  @G@@@@SC
)@@G@@. WHERE CLASS IS DEFINED AS THE TYPE OF ARGUMENTS REQUIRED.  AS MUCH    SD
)@@G@@@F@@@@. CHECKING AND SETUP IS DONE IN THE DRIVER AS IS POSSIBLE, BEFORE SE
)@@G@@@G@@@@. INVOKING SPECIFIC ROUTINES FOR EACH I-BEAM SUBFUNCTION AT LABEL SF
)@@G@@FI06XX@[@@@@.     @A@@@@P      PROC  . DEFINE SUBFUNCTION   @B@@@@FSDEFNSG
)@@G@@* NAME . INDEX, CLASS, LFLAG, ADDR  @B@@@@N      EQU   P(1,1)      . SUBSH
)@@G@@FUNC NUMBER @A@@@@ DO N>FS$MAX(1) ,FS$MAX*(1) EQU N . @ @@@@C      FORM SI
)@@G@@ 6,6,6,18    .    @D@@@@       C     077**P(1,2),P(1,3),P(1,4),P(1,5)   SJ
)@@G@@  .   @#@@@@       END   .    @[@@@@.     @B@@@@. FIELDS - S1=FCT(-1=FORSK
)@@G@@B,0=N/A,1=REQD)   @#@@@@.          S2=TYPE@ @@@@.          S3=VAL/NOVAL SL
)@@G@@FLAG  @ @@@@.          H2=TARGET RTNE ADDR@[@@@@.     @[@@@@.     @ @@@@SM
)@@G@@       CONSTS            .    @C@@@@FS$MAX(1) EQU 0 . INITIAL VALUE OF MSN
)@@G@@AX SUBFUNC  @ @@@@FITABL EQU   $-1         .    @A@@@@ FSDEFN  1,-1,1,0,SO
)@@G@@FIASGC      .     @A@@@@ FSDEFN  2,-1,1,0,FIASG       .     @A@@@@ FSDEFSP
)@@G@@N  3,-1,1,0,FIASGX      .     @A@@@@ FSDEFN  4, 0,2,0,FIFREB      .     SQ
)@@G@@@A@@@@ FSDEFN  5, 0,2,0,FIFRED      .     @A@@@@ FSDEFN  6, 0,2,0,FILOCKSR
)@@G@@      .     @A@@@@ FSDEFN  7, 1,3,0,FICATN      .     @A@@@@ FSDEFN  8, SS
)@@G@@1,3,0,FIREWR      .     @A@@@@ FSDEFN  9, 1,3,0,FIWPER      .     @A@@@@ST
)@@G@@ FSDEFN 10, 1,4,1,FIREAD      .     @A@@@@ FSDEFN 11, 1,4,1,FIRCOM      SU
)@@G@@.     @A@@@@ FSDEFN 12, 1,4,1,FIRTOC      .     @A@@@@ FSDEFN 13, 1,4,1,SV
)@@G@@FIRPER      .     @A@@@@ FSDEFN 14, 0,5,1,FISTAT      .     @ @@[[ FSDEFSW
)@@G@@N 15, 1,4,0,FIADD  .    @[@@@@.     @[@@@@.     @[@@@@.     @B@@@@P     SX
)@@G@@ PROC  . GET NUM IN HALFINT TO A2   @B@@@@GHFINT* NAME . PARAM I LINKREGSY
)@@G@@ (X4 OR X6) @ @@@@       UNLI$T            .    @D@@@@ALEFT  EQU   A1+3*SZ
)@@G@@(P(1,1)=X6) . RESULT REG IS A1 OR A4@A@@@@       LMJ   P(1,1),0,P(1,1)  TA
)@@G@@.     @D@@@@       JZ    ALEFT,DUN   . IF HALFINT, WE'RE DONE     @#@@@@TB
)@@G@@. DFLOAT RESULT   @ @@@@ DO P(1,1)=X4 , DL A4,A1 .    @ @@@@       FUZZDTC
)@@G@@N            .    @C@@@@       JNZ   A1,P(2,1)   . IF CAN'T FIX, DIE    TD
)@@G@@@ @@@@ DO P(1,1)=X6 , J OUT    .    @]@@@@DUN    .    @ @@@@ DO P(1,1)=XTE
)@@G@@6 , DL A1,A4 .    @]@@@@OUT    .    @C@@@@ DO P(1)>1 , SA A2,P(1,2) . POTF
)@@G@@ST THE PARAM VALUE@#@@@@       LI$T  .    @#@@@@       END   .    @[@@@@TG
)@@G@@.     @C@@@@. PICK UP KEY FIELD (ALWAYS CONVERTED TO DFLOAT)@[@@@@.     TH
)@@G@@@#@@@@P      PROC .     @#@@@@GETKEY* NAME .    @#@@@@       UNLI$T  .  TI
)@@G@@@D@@@@ALEFT  EQU   A1+3*(P(1,1)=X6) . RESULT REG IS A1 OR A4@C@@@@      TJ
)@@G@@ LMJ   P(1,1),0,P(1,1)  . PICK UP VALUE   @F@@@@       JNZ   ALEFT,POSTITK
)@@G@@T     . IF ALREADY FLOATING, GO SAVE IT   @C@@@@       DFLOAT ALEFT-1,ALTL
)@@G@@EFT   . ELSE CONVERT IT @A@@@@POSTIT DS    ALEFT,FOUKEY     .     @#@@@@TM
)@@G@@       LI$T  .    @]@@@@       END .@F@@@@/. AND NOW FOLKS, WE FINALLY GTN
)@@G@@ET TO WRITE SOME CODE WHICH ACTUALLY@G@@@@. DOES SOMETHING.  THIS IS AS TO
)@@G@@BAD AS WRITING COBOL DATA DIVISIONS--     @[@@@@.     @ @@@@       INSTRTP
)@@G@@S            .    @ @@@@FILEIO* SX   X11,FILINK  .    @ @@@@       SX   TQ
)@@G@@ X8,FIXSAV   .    @A@@@@. GET SUBFUNC- 2ND EL OF CTL VECTOR @E@@@@FI0010TR
)@@G@@ GHFINT X6,FISFUN FI0920  . DOMAIN ERR IF NOT HALFINT @B@@@@       TG,U TS
)@@G@@ A2,1        . AT LEAST 1?    @C@@@@       TG,U  A2,FS$MAX(1)+1   . AND TT
)@@G@@TABULATED?  @C@@@@       J     FI0920      . IF NOT, DOMAIN ERR   @C@@@@TU
)@@G@@       LA,H2 A0,FITABL,A2     . GET TARGET ADDR @A@@@@       SA    A0,FITV
)@@G@@JUMP   . SAVE IT  @C@@@@       DL    A3,RCLIBN   . GET USER'S LIB NUM   TW
)@@G@@@F@@@@       DS    A3,FOUKEY   . USE AS KEY IF HE DOESN'T SUPPLY ONE    TX
)@@G@@@E@@@@       LOADR A3,LFTMOD,3 . GET MODE, RANK, LENGTH OF ARG    @C@@@@TY
)@@G@@       LA,S2 A2,FITABL,A2     . GET OPCODE CLASS@F@@@@       COMJMP A2 1TZ
)@@G@@,FI0100 2,FI0200 3,FI0300 4,FI0400 5,FI0500     @[@@@@.     @D@@@@. CLASUA
)@@G@@S 1 OPCODE  -ASSIGN OPS- NO FCT SHOULD BE FOUND @[@@@@.     @G@@@@FI0100UB
)@@G@@ JMRTST ZRANKV,FI0940 ZMOCHR,FI0920    . CHECK FOR CHAR VECT ARG  @C@@@@UC
)@@G@@       LA    A2,RITSIZ   . GET CTL VECT LENGTH  @E@@@@       JG,U  A2,3 UD
)@@G@@FI0930 . IF NOT AT LEAST 3, LENGTH ERR    @E@@@@       GHFINT X6,FILUNI UE
)@@G@@FI0920     . GET LOGICAL UNIT NUM   @D@@@@       LA    A2,RITSIZ   . RECUF
)@@G@@OVER CTLVECT LENGTH     @B@@@@       JE,U  A2,3 FI0110 . IF 3, QUIT     UG
)@@G@@@C@@@@       JNE,U A2,4 FI0930 . ELSE BE SURE ITS 4   @E@@@@       GETKEUH
)@@G@@Y X6         . GET FIELD 4 IN DFLAT, SAVE AS KEY@F@@@@FI0110 LMJ   X11,FUI
)@@G@@CTGET  . SEE IF THERE'S AN FCT FOR THIS UNIT    @ @@@@       J     FI099UJ
)@@G@@9      .    @C@@@@       JP    A0,FI0900   . IF YES, ASG ERROR    @E@@@@UK
)@@G@@       LMJ   X11,COGFCT  . ALLOCATE AN FCT FOR THIS FILE    @ @@@@      UL
)@@G@@ J     FI0999      .    @B@@@@       LX,U  X8,0,A0     . SET POINTER    UM
)@@G@@@A@@@@       LMA   A0,FILUNI   . GET UNIT @A@@@@       SA    A0,LGLNUM  UN
)@@G@@ . POST IT  @F@@@@       SZ    LGDCLF      . MARK ITS TYPE (RAND/SDF) UNUO
)@@G@@DECLARED    @C@@@@       J     FI0610      . AND GO DO THE OP     @[@@@@UP
)@@G@@.     @D@@@@. CLASS 2 OPCODE - ARG=VECT OF UNITS TO BE LOOPED OVER@[@@@@UQ
)@@G@@.     @G@@@@FI0200 JMRTST ZRANKV,FI0940 ZMOHFI,ZMODFL,FI0920  . CHECK NUUR
)@@G@@MERIC VECT  @B@@@@       LA    A14,A5      . INIT LOOP CTR  @B@@@@      US
)@@G@@ LA    A0,RITSIZ   . CTL VECT LENGTH@C@@@@       JNE,U A0,2 FI0930 . IF UT
)@@G@@NOT, LENGTH ERR   @B@@@@FI0210 LA    A0,FISFUN   . RECOVER SUBFUNC@C@@@@UU
)@@G@@       JNE,U A0,6 FI0220 . IF NOT LOCK, GO LOOP @E@@@@       LMJ   X11,FUV
)@@G@@UNLOK  . ELSE CLEAR PRESENTLY SET LOCKS   @ @@@@       J     FI0999     UW
)@@G@@ .    @C@@@@FI0220 JNGD  A14,FI0700  . NORMAL EXIT WHEN DONE@D@@@@      UX
)@@G@@ GHFINT X4,FILUNI FI0270  . GET NEXT UNIT NUM   @ @@@@       LMJ   X11,FUY
)@@G@@CTGET  .    @ @@@@       J     FI0290      .    @C@@@@       JN    A0,FIUZ
)@@G@@0280   . NOFIND IS AN ERROR   @B@@@@       LMJ   X11,*FIJUMP . CALL THE VA
)@@G@@RTNE  @ @@@@       J     FI0999      .    @C@@@@       J     FI0220     VB
)@@G@@ . GO BACK FOR THE NEXT @ @@@@. ERRORS DURING CLASS 2 OPS   @D@@@@FI0270VC
)@@G@@ ERROR YDOMAI,FI0290    . UNIT NO OUT OF RANGE  @C@@@@FI0280 ERROR YFIASVD
)@@G@@G,FI0290    . CANNOT FIND FCT @C@@@@. IN CASE THIS WAS LOCK, BE SURE TO VE
)@@G@@CLEAR LOCKS @ @@@@FI0290 LA,U  A0,FISFUN   .    @E@@@@       JNE,U A0,6 VF
)@@G@@FI0999 . IF NOT LOCK, NORMAL ERROR EXIT   @C@@@@       LMJ   X11,FUNLOK VG
)@@G@@ . ELSE CLEAR ALL LOCKS @A@@@@       J     FI0999      . AND QUIT @[@@@@VH
)@@G@@.     @ @@@@. CLASS 3 OPCODE (WRITE OPN)  @[@@@@.     @B@@@@FI0300 LA   VI
)@@G@@ A0,FISFUN   . RECOVER SUBFUNC@E@@@@       JNE,U A0,9 FI0310 . IF NOT WRVJ
)@@G@@ITE PERM, SKIP ARGCHK   @F@@@@       JMRTST 2,FI0940 ZMODFL,FI0920    . VK
)@@G@@BE SURE ITS DFLOAT MTX  @C@@@@       JZ    A5,FI0930   . BE SURE ITS NOTVL
)@@G@@ NULL @B@@@@FI0310 LA    A0,RITSIZ   . CTL VECT LENGTH@E@@@@       JG,U VM
)@@G@@ A0,3 FI0930 . NOT AT LEAST 3 IS LENGTH ERR     @E@@@@       GHFINT X6,FVN
)@@G@@ILUNI FI0920     . GET LOGICAL UNIT NUM   @D@@@@       LA    A0,RITSIZ  VO
)@@G@@ . RECOVER RITCARG LENGTH     @C@@@@       LA    A1,FISFUN   . AND GET SVP
)@@G@@UBFUNC, TOO @D@@@@       JNE,U A1,8 FI0330 . IF NOT REWRITE, GO GET KEY VQ
)@@G@@@F@@@@FI0320 GHFINT X6,FICMPN FI0920     . GET REWRITE COMPONENT NUMBER VR
)@@G@@@D@@@@       LA    A0,RITSIZ   . GET CTL VECT LENGTH BACK   @G@@@@      VS
)@@G@@ ANA,U A0,1        . DECREMENT IT TO ACCOUNT FOR WHAT WE PICKED UP@C@@@@VT
)@@G@@FI0330 JLE,U A0,5 FI0930 . BE SURE LENGTH .LT. 5@D@@@@       JE,U  A0,3 VU
)@@G@@FI0600 . IF LENGTH = 3, WE'RE DONE  @F@@@@       GETKEY X6         . ELSVV
)@@G@@E GET USER-SUPPLIED VALUE FOR KEY   @C@@@@       J     FI0600      . THEVW
)@@G@@N GO DO THE OP    @[@@@@.     @ @@@@. OPCODE CLASS=4  (READ OPS)  @[@@@@VX
)@@G@@.     @G@@@@FI0400 JMRTST ZRANKV,FI0940 ZMOHFI,ZMODFL,FI0920  . CHECK ARVY
)@@G@@G=NUM VECT  @B@@@@       LA    A0,RITSIZ   . CTL VECT LENGTH@C@@@@      VZ
)@@G@@ JNE,U A0,2 FI0930 . MUST BE LENGTH 2     @E@@@@       JG,U  A5,1 FI0930WA
)@@G@@ . ARG MUST BE AT LEAST LENGTH 1    @C@@@@       GHFINT X4,FILUNI FI0920WB
)@@G@@     . GET UNIT   @C@@@@       LA    A5,LFTSIZ   . GET ARG LENGTH BACK  WC
)@@G@@@C@@@@       JE,U  A5,1 FI0600 . IF 1, WE'RE DONE     @A@@@@       LA   WD
)@@G@@ A0,FISFUN   . SUBFUNC  @D@@@@       TE,U  A0,13       . READ PERMISSIONWE
)@@G@@ MATRIX?    @A@@@@       TNE,U A0,12       . OR TOC?  @F@@@@       J    WF
)@@G@@ FI0410      . IF EITHER, GO GET USER'S KEY, IF ANY   @D@@@@       GHFINWG
)@@G@@T X4,FICMPN FI0920     . GET RECORD INDEX @C@@@@       LA    A5,LFTSIZ  WH
)@@G@@ . RECOVER ARG LENGTH   @E@@@@       ANA,U A5,1        . COMPENSATE FOR WI
)@@G@@INDEX JUST PICKED @E@@@@FI0410 JLE,U A5,3 FI0930 . BE SURE ARG IS ONLY LWJ
)@@G@@ENGTH 1 OR 2@E@@@@       JE,U  A5,1 FI0600 . IF NO USER KEY, GO DO THE OWK
)@@G@@P     @E@@@@       GETKEY X4    . ELSE GET USER-SUPPLIED VAL FOR KEY    WL
)@@G@@@C@@@@       J     FI0600      . THEN GO DO THE OP    @[@@@@.     @ @@@@WM
)@@G@@. CLASS 5 OPCODES (RUN STATUS)@[@@@@.     @D@@@@FI0500 JNE,U A5,1 FI0930WN
)@@G@@ . ARG MUST BE OF UNIT LENGTH @ @@@@       LA    A0,RITSIZ   .    @C@@@@WO
)@@G@@       JNE,U A0,2 FI0930 . AND CTL VECT=LENGTH 2@G@@@@       GHFINT X4,FWP
)@@G@@ILUNI FI0920     . GET SUBFUNC, SAVE AS IF UNIT NUMB  @D@@@@       J    WQ
)@@G@@ FI0610      . GO DO WITHOUT FINDING FCT  @[@@@@.     @B@@@@. LOCATE FCTWR
)@@G@@ (FOR OPS WHICH REQUIRE ONE)  @[@@@@.     @ @@@@FI0600 LMJ   X11,FCTGET WS
)@@G@@ .    @ @@@@       J     FI0999      .    @C@@@@       JN    A0,FI0900  WT
)@@G@@ . NOFIND IS ASG ERROR  @E@@@@       DL    A1,FOUKEY   . GET USER-SUPPLIWU
)@@G@@ED KEY, OR LIBNO  @B@@@@       DTE   A1,LGUKEY   . IS IT CORRECT? @C@@@@WV
)@@G@@       J     FI0910      . NO, PERMISSION ERROR @F@@@@       LA    A2,FIWW
)@@G@@CMPN   . RESTORE COMPONENT NUMBER, FOR GOOD LUCK@[@@@@.     @ @@@@. CALLWX
)@@G@@ THE PROCESSING ROUTINE @[@@@@.     @ @@@@FI0610 LMJ   X11,*FIJUMP .    WY
)@@G@@@ @@@@       J     FI0999      .    @B@@@@. NORMAL EXIT - CHECK FOR POSSWZ
)@@G@@IBLE RESULT @ @@@@FI0700 LA    A0,FISFUN   .    @E@@@@       TZ,S3 FITABXA
)@@G@@L,A0   . DID RTNE COMPUTE ITS OWN RESULT? @A@@@@       J     FI0710     XB
)@@G@@ . YES,QUIT @D@@@@       LA,U  A6,FIDNIL   . NO, DESCR ADDR FOR NIL     XC
)@@G@@@ @@@@       RELADR A6         .    @B@@@@       LMJ   X11,DUPE    . CREXD
)@@G@@ATE ONE     @ @@@@       J     FI0999      .    @C@@@@       PUSH  A2   XE
)@@G@@       . STACK NIL RESULT     @[@@@@.     @ @@@@FI0710 LX    X11,FILINK XF
)@@G@@ .    @ @@@@       LX    X8,FIXSAV   .    @ @@@@       J     1,X11      XG
)@@G@@ .    @[@@@@.     @A@@@@FI0900 ERROR YFIASG,FI0999    .     @ @@@@FI0910XH
)@@G@@ ERROR YFIPER,FI0999    @A@@@@FI0920 ERROR YDOMAI,FI0999    .     @A@@@@XI
)@@G@@FI0930 ERROR YLENGT,FI0999    .     @A@@@@FI0940 ERROR YRANK,FI0999     XJ
)@@G@@.     @[@@@@.     @ @@@@FI0999 LX    X11,FILINK  .    @ @@@@       LX   XK
)@@G@@ X8,FIXSAV   .    @ @@@@       J     0,X11       .    @ @@@@       VARBLXL
)@@G@@S             .   @G@@@@FIXSAV RES   1           . TEMP SAVE OF X8 ( NEEXM
)@@G@@DED TO BE FCT POINTER)  @ @@@@FILINK EQUF  $,,H1       .    @C@@@@FISFUNXN
)@@G@@ EQUF  $,,H2       . SUBFUNCTION INDEX    @#@@@@       RES   1 .  @F@@@@XO
)@@G@@FILUNI RES   1           . LOGICAL UNIT-- CAUTION, SIGN IS TESTED @C@@@@XP
)@@G@@FICMPN EQUF  $,,H2       . COMPONENT NUMBER     @ @@@@       RES   1    XQ
)@@G@@       .    @ @@@@       VARCON            .    @D@@@@FIJUMP +0,$-$     XR
)@@G@@       . *** INDIRECT WORD !!! ***  @G@@@@. THE DUMMY VALUE BELOW IS REQXS
)@@G@@UIRED BECAUSE ALL PRIMITIVES MUST RETURN  @G@@@@. A VALUE.  THIS IS NOT XT
)@@G@@A LANGUAGE REQUIREMENT, BUT IS FORCED BY OUR    @G@@@@. IMPLEMENTATION SXU
)@@G@@O THAT WE CAN DEBUG IT MORE EASILY.  THIS CONVENTION  @G@@@@. ALLOWS US XV
)@@G@@TO GIVE SYSTEM ERRORS FOR UNEXPECTED STACK EMPTY CONDITIONS @B@@@@FIDNILXW
)@@G@@ CBLOCK ZTPTMP,ZMOHFI,ZRANKS,0    . @F@@@@/. CREATE NEW FILE - THIS DOESXX
)@@G@@ @ASG'S AND INITIALIZES SECTOR ZERO @[@@@@.     @#@@@@       INSTRS     XY
)@@G@@@ @@@@FIASGC SX    X11,FCLINK  .    @[@@@@.     @A@@@@. ESTIMATE AND POSXZ
)@@G@@T FILE PARAMETERS @[@@@@.     @E@@@@FC0100 LA,U  A2,2        . GET DECLAYA
)@@G@@RATION FOR RANDOM FILE  @B@@@@       TP    FILUNI      . REALLY RANDOM? YB
)@@G@@@F@@@@       LA,U  A2,1        . NO, CHANGE DECLARATION TO SEQUENTIAL   YC
)@@G@@@C@@@@       SA    A2,LGDCLF   . SAVE DECLARATION     @[@@@@.     @F@@@@YD
)@@G@@FC0110 LA,U  A0,3500     . GET DEFAULT SIZE AS IF FILE WERE RANDOM@C@@@@YE
)@@G@@       TEP,U A2,1        . REALLY A RANDOM FILE?@F@@@@       LA,U  A0,3*YF
)@@G@@64*128 . NO, GET DEFAULT REC EST FOR SEQNL FILE @C@@@@       LA    A1,RIYG
)@@G@@TSIZ   . LENGTH OF CTL VECT   @C@@@@       JE,U  A1,3 FC0115 . IF 3, USEYH
)@@G@@ THE DEFAULT@C@@@@       DL    A4,FOUKEY   . ELSE GET USER'S VALUE@B@@@@YI
)@@G@@       FUZZDN            . NAKE IT INTGER @F@@@@       JNZ   A1,FC0910  YJ
)@@G@@ . DOMAIN ERR IF TOO BIG (MAX=128KRECORDS)@B@@@@       JG,U  A2,1 FC0910YK
)@@G@@ . OR IF TOO SMALL@D@@@@       LA,U  A0,0,A2     . ESTIMATED SIZE TO ARGYL
)@@G@@ REG  @F@@@@       LA    A2,LGDCLF   . RECOVER RANDOM/SEQNL DECLARATION YM
)@@G@@FLAG  @G@@@@FC0115 JB    A2,FC0150   . AND IF SEQNL, GO ELSEWHERE TO INIYN
)@@G@@TIALIZE     @D@@@@. RANDOM FILE - SET UP ALL REQUIRED ADDRESSES, ETC.   YO
)@@G@@@D@@@@FC0120 SZ    SZDADR      . SECTOR ZERO OBVIOUSLY IS   @ @@@@      YP
)@@G@@ LA,U  A1,1        .    @D@@@@       SA    A1,SZLADR   . LOCKSECTOR IS SYQ
)@@G@@ECTOR 1     @ @@@@       LA,U  A1,2        .    @D@@@@       SA    A1,SZYR
)@@G@@TADR   . TOC STARTS IN SECTOR 2     @G@@@@       AA,U  A0,3+((2+63)*/2) YS
)@@G@@. ROUND REC EST TO SECTS, SECTS TO TRAX   @E@@@@       SSL   A0,2+6     YT
)@@G@@ . GET NO OF TRAX FOR TOC+CTRL INFO @E@@@@       SA    A0,A3       . TEMYU
)@@G@@P SAVE NO TRAX OF OVERHEAD    @D@@@@       LSSL  A0,6        . CONVERT TYV
)@@G@@RAX TO SECTORS    @E@@@@       SA    A0,SZFWRA   . POST 1ST WRITE ADDR FYW
)@@G@@OR DATA     @F@@@@       SA    A0,SZNWRA   . AND (FOR NOW) USE IT AS NEXYX
)@@G@@T WRITE, TOO@F@@@@       ANA,U A0,2        . LESS CTL AND LOK SECTS =NO YY
)@@G@@USED BY TOC @D@@@@       LSSL  A0,2        . TIMES 4 = NO TOC ENTRIES   YZ
)@@G@@@D@@@@       SA    A0,SZTMAX   . POST MAX NO ELS IN TOC     @C@@@@      ZA
)@@G@@ SZ    SZTCUR      . AND CLEAR CURRENT NO @A@@@@. COMPUTE DATA AREA SIZEZB
)@@G@@,  MAP LOCN @E@@@@FC0130 LSSL  A0,1        . ALLOW 2 DATASECTS PER ELEMEZC
)@@G@@NT    @A@@@@       AA,U  A0,63       . ROUND UP @E@@@@       SSL   A0,6 ZD
)@@G@@       . DIV BY 64 =NO OF TRAX FOR DATA   @G@@@@       AU    A0,A3      ZE
)@@G@@ . PLUS OVERHEAD=TOT NO TRAX FOR ENTIRE FILE    @E@@@@       SA    A1,A3ZF
)@@G@@       . SAVE TOT FILE SIZE FOR LATER @ASG@F@@@@       DSL   A0,36      ZG
)@@G@@ . NO TRACKS=NO DOUBLEWORDS OF MAP NEEDED @A@@@@       AA,U  A1,13      ZH
)@@G@@ . ROUND UP @F@@@@       DI,U  A0,14       . 14 DOUBLEWORDS/SECT =NO SECZI
)@@G@@TS OF BITMAP@D@@@@       SA    A0,SZMSIZ   . SAVE MAP SIZE IN SECTORS   ZJ
)@@G@@@D@@@@       LA    A1,A3       . RECOVER FILE SIZE IN TRACKS@E@@@@      ZK
)@@G@@ LSSL  A1,6        . TIMES 64=LAST SECTOR ADDR +1     @D@@@@       ANA  ZL
)@@G@@ A1,A0       . LAST +1 LESS NO OF MAPSECTS@E@@@@       SA    A1,SZMADR  ZM
)@@G@@ . POST ADDR OF 1ST BITMAP SECTOR   @C@@@@       ANA   A1,SZFWRA   . LESZN
)@@G@@S FIRST WRITE ADDR@E@@@@       SA    A1,SZDSIZ   . GIVES DATA AREA SIZE ZO
)@@G@@IN SECTORS  @B@@@@. CLEAN UP INITIALIZATION OF SECTOR ZERO  @B@@@@FC0140ZP
)@@G@@ DL    A0,RCLIBN   . LIBNO OF OWNER @ @@@@       DS    A0,SZLIBN   .    ZQ
)@@G@@@ @@@@       ER    TDATE$      .    @B@@@@       SA    A0,SZTDAT   . CREZR
)@@G@@ATION TIME  @B@@@@       SA    A0,SZTLST   . LAST REF TIME  @C@@@@      ZS
)@@G@@ LA    A0,('**RA**')    . GET LABEL IMAGE @E@@@@       J     FC0200     ZT
)@@G@@ . AND GO INIT AND ASG THE FILE     @[@@@@.     @ @@@@. SDF FILE INITIALZU
)@@G@@IZATION     @[@@@@.     @C@@@@FC0150 DSL   A0,36       . LINE UP RECORD ZV
)@@G@@EST   @F@@@@       AA,U  A1,3*64-1   . ROUND - ESTIMATE 3 RECORDS PER SEZW
)@@G@@CTOR  @C@@@@       DI,U  A0,3*64     . CONVERT TO TRACK EST @D@@@@      ZX
)@@G@@ SA    A0,A3       . PUT IN ARG REG FOR @ASG    @D@@@@       LA    A0,(+ZY
)@@G@@0770000000000)   . SDF END OF FILE  @D@@@@       SA    A0,SZBUFR+2 . PUTZZ
)@@G@@ INTO IMAGE OF SECTOR 0 @C@@@@       LA    A0,('*SDFF*')    . GET LABEL AA
)@@G@@IMAGE @[@@@@.     @C@@@@. FINISH SECT 0 INITIALIZATION AND @ASG THE FILEAB
)@@G@@@[@@@@.     @B@@@@FC0200 SA    A0,SZLABL   . STASH LABEL    @D@@@@      AC
)@@G@@ LA    A0,(+050,1,0,0,0,0)   . LABEL CTL WD     @A@@@@       SA    A0,SZAD
)@@G@@LCTL   . POST IT  @^@@@@. NOW ASSIGN THE FILE   @D@[@@FC0240 LA    A0,('AE
)@@G@@CP    ')    . GET NORMAL OPTIONS    @D@@][FC0240 LA    A0,FCOPTC        AF
)@@G@@. GET NORMAL OPTIONS    @E[@@@       TNZ   LFTSIZ      . WAS AN EXPLICITAG
)@@G@@ FILENAME GIVEN?  @E@[@@       LA    A0,('T     ')    . NO, ASSUME TEMPOAH
)@@G@@RARY FILE   @E@@][       LA    A0,FCOPTT        . NO, ASSUME TEMPORARY FAI
)@@G@@ILE   @C[@@@       LMA   A1,FILUNI   . GET LOGICAL UNIT     @D@@@@      AJ
)@@G@@ LA    A2,A3       . SET UP INITIAL RESERVE     @G@@@@       LMJ   X11,FAK
)@@G@@USE    . DO THE USE AND ASSIGN, CHECK THE FACILITIES  @A@@@@       J    AL
)@@G@@ FC0999      . OOPS     @B@@@@       LA    A0,LGPERM   . GET PERMISSIONSAM
)@@G@@@G@@@@       JNB   A0,FC0700   . IF NOT ALL, CAN'T INITIALIZE. @FREE ANDAN
)@@G@@ DIE  @D@@@@       LA    A0,LGLXUS   . GET EXCLUSIVE USE FLAG     @C@@@@AO
)@@G@@       JNB   A0,FC0700   . IF NOGOT, SAME STORY.@C@@@@       DL    A0,RCAP
)@@G@@LIBN   . GET CREATOR'S LIBNUM @D@@@@       DS    A0,LGUKEY   . AND USE IAQ
)@@G@@T FOR HIS KEY     @[@@@@.     @G@@@@. TRY READING SECTOR ZERO. SINCE THIAR
)@@G@@S FILE SHOULD BE UNINITIALIZED, WE  @B@@@@. EXPECT (NAY, REQUIRE) AN I/OAS
)@@G@@ 5 TO OCCUR @[@@@@.     @F@@@@FC0300 LMJ   X11,SZREAD  . READ SECTOR ZERAT
)@@G@@O, GET STATUS TO A0     @G@@@@       JNE,U A0,5 FC0700 . IF GRANULES AREAU
)@@G@@ ASSIGNED, ASSIGNMENT ERROR   @F@@@@. THIS IS A VIRGIN FILE, QUICK WRITEAV
)@@G@@ SECTOR 0 AND INITIALIZE IT   @D@@@@FC0310 DOIO  W$,SZPAKT FC0710 . WRITAW
)@@G@@E SECTOR ZERO     @D@@@@       LA    A0,LGDCLF   . YES, RECOVER FILE TYPAX
)@@G@@E     @F@@@@       JB    A0,FC0340   . IF SDF FILE, GO SET CTL WD POINTEAY
)@@G@@RS    @D@@@@. RANDOM FILE-- INITIALIZE PACKETS, LOCKSECTOR, BITMAP@F@@@@AZ
)@@G@@FC0320 LMJ   X11,INPKTS  . GO INITIALIZE PACKETS, CLEAR BUFFERS   @D@@@@BA
)@@G@@       DOIO  W$,LKPAKT FC0710 . INITIALIZE LOCKSECT   @G@@@@       DOIO BB
)@@G@@ W$,TOPAKT FC0710 . INIT TOC, CLEAR PERMISSIONS (ELEMENT 0) @D@@@@      BC
)@@G@@ LR    R1,SZMSIZ   . NO OF SECTORS OF BITMAP    @ @@@@FC0325 JNGD  R1,FCBD
)@@G@@0328   .    @D@@@@       LA    A0,SZMADR   . ADDR OF 1ST MAP SECTOR     BE
)@@G@@@C@@@@       AA    A0,R1       . PLUS CORRENT INDEX   @F@@@@       SA   BF
)@@G@@ A0,BMDADR   . GIVES DRUM ADDR OF CURRENT MAPSECT     @F@@@@       DOIO BG
)@@G@@ W$,BMPAKT FC0710 . CLEAR IT (ZEROES=ALL ALLOCATED)   @D@@@@       J    BH
)@@G@@ FC0325      . GO BACK FOR NEXT MAPSECT   @D@@@@FC0328 LOADR A0,LFTDAD,8BI
)@@G@@ . GET PARAMS OF ACTUAL ARG   @F@@@@       SAVER A0,BUFF,8   . TEMP SAVEBJ
)@@G@@ THEM IN RANDAC SCRATCH AREA  @D@@@@       LOADR A0,FCPINT,7 . GET DUMMYBK
)@@G@@ PARAMS INSTEAD   @D@@@@       RELADR A6         . MAKE DESCR ADDR RELATBL
)@@G@@IVE   @F@@@@       SAVER A0,LFTDAD,7 . POST POINTERS AS IF WE JUST POPPEBM
)@@G@@D THIS@E@@@@       LMJ   X11,FIWPER  . GO WRITE INTO ACCESS MATRIX .    BN
)@@G@@@E@@@@       J     FC0330      . OOPS, GO RESTORE REGS AND QUIT   @#@@@@BO
)@@G@@       NOP   .    @E@@@@       LOADR A0,BUFF,8   . RECOVER PARAMS OF ORIBP
)@@G@@GINAL ARG   @F@@@@       SAVER A0,LFTDAD,8 . PUT THEM BACK FOR THE GARBABQ
)@@G@@GE COLLECTOR@B@@@@       LA,U  A2,0        . SET STATUS=OK  @B@@@@      BR
)@@G@@ J     FC0400      . AND THEN QUIT  @E@@@@. ACCESS MTX WRITE ERR, BE SURBS
)@@G@@E GARBAGE COLLECTOR IS HAPPY  @D@@@@FC0330 LOADR A0,BUFF,8   . PICK UP OBT
)@@G@@RIGINAL PARAMS    @B@@@@       SAVER A0,LFTDAD,8 . REPLACE THEM   @F@@@@BU
)@@G@@       J     FC0790      . GO FREE FILE, FCT, THEN TAKE ERROR EXIT@[@@@@BV
)@@G@@.     @C@@@@. SDF FILE-- SET POINTERS TO SDF CTL WDS, ETC   @[@@@@.     BW
)@@G@@@E@[@@FC0340 LA,U  A0,SZBUFR+2 . 1ST CTL WD (EOF) IN 3RD WD OF BUF@G@@[[BX
)@@G@@FC0340  LA,U    A0,SZBUFR+2-FCTABL . 1ST CTL WD (EOF) IS 3RD WD OF BUF  BY
)@@G@@@E[@@@       LXI,U A0,4        . BUF SIZE IS CURRENTLY 4 SCTORS   @B@@@@BZ
)@@G@@       SA    A0,SZDADR+1 . TO BUF CTL WD  @C@@@@       LA,U  A0,4*28    CA
)@@G@@ . NO OF WDS IN BUF     @D@@@@       SA    A0,SZWDCT   . TO WORDCT OF ACCB
)@@G@@CESS WORD   @D@[@@       AA,U  A0,SZBUFR   . ADD FWA OF BUF TO ITS SIZE CC
)@@G@@@D@@[[        AA,U    A0,SZBUFR-FCTABL   . PLUS BUF START   @H[@@@      CD
)@@G@@ SA    A0,SDBEND   . AND SAVE LWA+1 OF SDF BUFFER FOR OFLO CHECKING     CE
)@@G@@@E@@@@       LA,U  A2,0        . SET FLAG INDICATING STATUS OK    @[@@@@CF
)@@G@@.     @^@@@@. CLEAN UP AND GET OUT  @[@@@@.     @ @@@@FC0400 LX    X11,FCG
)@@G@@CLINK  .    @D@@@@       J     1,X11       . EXIT TO GIVE STATUS TO USERCH
)@@G@@@[@@@@.     @C@@@@. ERRORS AFTER ASSIGNMENT; FREE FILE AND ITS FCT@[@@@@CI
)@@G@@.     @A@@@@FC0700 ERROR YFIASG,FC0790    .     @A@@@@FC0710 ERROR YIOERCJ
)@@G@@R,FC0790    .     @[@@@@.     @F@@@@FC0790 LMJ   X11,FUABRT  . USE ABORTCK
)@@G@@ RTN IN USE/ASG/FREE ELEMENT  @B@@@@       NOP               . WHAT ERROCL
)@@G@@R?    @ @@@@       J     FC0999      .    @[@@@@.     @C@@@@. ERRORS BEFCM
)@@G@@ORE ASSIGNMENT OR FCT ALLOCATION    @[@@@@.     @A@@@@FC0900 ERROR YFIASCN
)@@G@@G,FC0999    .     @[@@@@.     @ @@@@FC0999 LX    X11,FCLINK  .    @ @@@@CO
)@@G@@       J     0,X11       .    @ @@@@       VARBLS            .    @ @@@@CP
)@@G@@FCLINK EQUF  $,,H1       .    @ @@@@       RES   1           .    @ @@@@CQ
)@@G@@       CONSTS            .    @ @@[[. OPTIONS FOR FILE ASSIGNMENT @D@@[[CR
)@@G@@FCOPTC +'C','P',UOMEOP,' ',' ',' '      . CP OR CPE   @D@@[[FCOPTT +'T',CS
)@@G@@UOMEOP,' ',' ',' ',' '      . T OR TE     @E@@@@. DUMMY PARAMETERS FOR ICT
)@@G@@NITIAL ACCESS MATRIX (PRIVATE FILE) @A@@@@FCPINT +FCDATA           . DATCU
)@@G@@A ADDR@B@@@@       +FCDIMD           . DIM DATA ADDR  @ @@@@       +ZTPTCV
)@@G@@MP           .    @ @@@@       +ZMODFL           .    @B@@@@       +2   CW
)@@G@@             . RANK=MATRIX    @A@@@@       +2                . LENGTH=2 CX
)@@G@@@E@@@@       +FCDSCR           . DSCR POINTER IS RELATIVIZED ABOVE@F@@@@CY
)@@G@@FCDATA +0.0D             . 1ST DATA ENTRY = 'ALL OTHER USERS'     @E@@@@CZ
)@@G@@       +0.0D             . ALL BITS OFF= NOTHING IS ALLOWED @D@@@@FCDIMDDA
)@@G@@ +1,2              . DIMS OF MATRIX ARE 1 BY 2  @C@@@@FCDSCR CBLOCK ZTPTDB
)@@G@@MP,ZMODFL,2,2    . DUMMY DESCR@A@@@@/. OPEN PREVIOUSLY CREATED FILE     DC
)@@G@@@[@@@@.     @#@@@@       INSTRS     @D@[@@FIASG  LA    A0,('A     ')    DD
)@@G@@. GET NORMAL ASG OPTIONS@D@@][FIASG  LA    A0,FOOPTA        . GET NORMALDE
)@@G@@ ASG OPTIONS@C[@@@       J     FO0010      . AND GO STASH THEM    @D@[@@DF
)@@G@@FIASGX LA    A0,('AX    ')    . GET ESCLUSIVE OPTIONS @D@@][FIASGX LA   DG
)@@G@@ A0,FOOPTX        . GET ESCLUSIVE OPTIONS @[[@@@.     @B@@@@FO0010 SX   DH
)@@G@@ X11,FOLINK  . SAVE LINKAGE   @C@@@@       LA    A1,FILUNI   . GET LOGICDI
)@@G@@AL UNIT     @D@@@@       LA,U  A2,0        . CLEAR INITIAL RESERVE FIELDDJ
)@@G@@@D@@@@       LMJ   X11,FUSE    . AND TRY GO ASSIGN THE FILE @ @@@@      DK
)@@G@@ J     FO0999      .    @E@@@@       JNOPER A0,FIPREA  FO0720    . BREAKDL
)@@G@@ IF WE CAN'T READ @E@@@@       DL    A0,RCLIBN   . GET THIS USER'S LIBRADM
)@@G@@RY NUMBER   @D@@@@       DS    A0,LGUKEY   . AND USE AS DEFAULT KEY     DN
)@@G@@@[@@@@.     @G@@@@. NOW WE ARE ALL ASSIGNED AND CHECKED OUT- GET SECT 0,DO
)@@G@@ CHECK LABELS     @[@@@@.     @B@@@@FO0300 LMJ   X11,SZREAD  . GET SECTODP
)@@G@@R ZERO@E@@@@       JE,U  A0,5 FO0700 . I/O 5 SAYS FILE DOES NOT EXIST   DQ
)@@G@@@C@@@@       JNZ   A0,FO0710   . ALL ELSE IS I/O ERR  @C@[@@       LA   DR
)@@G@@ A0,SZBUFR+1 . GET LABEL WD OF FILE @C@[@@       LA,U  A1,0        . CLEDS
)@@G@@AR FILE TYPE FLAG @C@[@@       TNE   A0,('**RA**')    . APL RANDOM?     DT
)@@G@@@C@[@@       LA,U  A1,2        . YES, GET DECLARATION @B@[@@       TNE  DU
)@@G@@ A0,('*SDFF*')    . SDF FILE? @B@[@@       LA,U  A1,1        . YES, DECLDV
)@@G@@ARE IT@F@[@@       JZ    A1,FO0700   . IF UNKNOWN FILE TYPE, SIGNAL ASG DW
)@@G@@ERROR @C@[@@       SA    A1,LGDCLF   . ELSE POST DECLARATION@E@[@@      DX
)@@G@@ JB    A1,FO0400   . IF SDF, GO TO ITS OWN ROUTINE    @D@@[[        LA,SDY
)@@G@@1   A0,SZBUFR     . GET CTL WD FOR LABEL  @F@@[[        JNE,U   A0,050 FDZ
)@@G@@O0700 . IF UNLABELED, SIGNAL ASSIGN ERROR @G@@[[        LA,S2   A0,SZBUFEA
)@@G@@R     . ELSE GET LENGTH OF LABEL FROM CTL WD    @F@@[[        LA      A1EB
)@@G@@,SZBUFR+1   . AND 1ST WD OF THE LABEL ITSELF    @D@@[[        TNE,U   A0EC
)@@G@@,1          . IS LABEL 1 WORD LONG? @F@@[[        TE      A1,('**RA**') ED
)@@G@@     . YES, IS IT APL RANDOM ACCESS?@F@@[[        J       FO0400        EE
)@@G@@. NO, GO CHECK VARIATIONS OF SDF    @E@@[[        LA,U    A0,2          EF
)@@G@@. YES, GET DECLARATION FLAG   @C@@[[        SA      A0,LGDCLF     . AND EG
)@@G@@POST IN FCT @[D@@@.     @B@@@@. RANDOM FILE-- CHECK THE PERMISSIONS     EH
)@@G@@@[@@@@.     @H@@@@FO0310 LMJ   X11,INPKTS  . INITIALIZE THE PACKETS     EI
)@@G@@                        @C@@@@       LA    A0,RITSIZ   . SIZE OF CTL VECEJ
)@@G@@TOR   @F@@@@       JE,U  A0,4 FO0315 . IF USER HAS SUPPLIED A KEY, USE IEK
)@@G@@T     @E@@@@       DL    A1,LGUKEY   . GET DEFAULT KEY (I.E. LIBNUM)    EL
)@@G@@@D@@@@       DTE   A1,SZLIBN   . IS HE THE FILE'S OWNER?    @E@@@@      EM
)@@G@@ TZ    RCMASF      . NO-- THE INSTALLATION MANAGER?   @F@@@@       J    EN
)@@G@@ FO0500      . IF EITHER, DON'T BOTHER WITH PERMMATRIX@F@@@@       J    EO
)@@G@@ FO0320      . IF NEITHER, GO CHECK PERMISSION MATRIX @G@@@@FO0315 DLN  EP
)@@G@@ A1,FOUKEY   . NEGATE USER'S KEY FOR ACCESS MATRIX CHECK    @E@@@@      EQ
)@@G@@ JP    A1,FO0720   . IF HE GAVE A NEG KEY, PERM ERROR @E@@@@       JNZ  ER
)@@G@@ A1,FO0320   . IF ALREADY FLOATING, USE IT AS IS@B@@@@       DSL   A1,36ES
)@@G@@       . LINE IT UP     @ @@@@       DFLOAT A0,A1      .    @B@@@@. SEARET
)@@G@@CH DRUM FOR MATCH ON THIS KEY/LIBNO @E@@@@FO0320 DS    A1,LGUKEY   . USEEU
)@@G@@R'S LIBNO OR OWN KEY TO FCT   @ @@@@       SZ    FOTHRS      .    @D@@@@EV
)@@G@@       LMJ   A0,TOWACM  . SET UP TOC TO GET ACCESS MTX@ @@@@       J    EW
)@@G@@ FO0790      .    @E@@@@       LA    A0,TCDPTR   . GET DATA ADDR OF MTX EX
)@@G@@ON DRUM     @C@@@@       SA    A0,DADADR   . TO DATA READ PACKET  @F@@@@EY
)@@G@@       LA,U  A0,BUFF     . READ DATA INTO BUFFER IN RANDAC SCRATEH@D@@@@EZ
)@@G@@       LXI,U A0,28       . ALWAYS READ A FULL SECTOR  @E@@@@       SA   FA
)@@G@@ A0,DAPACW   . SET ACCESS WORD FOR DATA READ    @E@@@@       LA    A0,TCFB
)@@G@@NWDS   . GET NO OF WDS OF DATA TO PROCESS @G@@@@       SSL   A0,2       FC
)@@G@@ . DIV BY 4=NO OF ENTRIES, 2 DOUBLEWORDS PER ENT@E@@@@FO0330 TLE,U A0,1 FD
)@@G@@       . ANYTHING TO SCAN IN NEXT SECTOR? @B@@@@       J     FO0370     FE
)@@G@@ . NO, WE'RE DONE @E@@@@       ANU,U A0,7        . TOT NO ENTRIES LESS NFF
)@@G@@O PER SECTOR@F@@@@       SA    A1,FONLFT   . SAVE NO ENTRIES LEFT AFTER FG
)@@G@@THIS SECT   @E@@@@       TG,U  A1,1        . WILL THERE REALLY BE ANOVERFH
)@@G@@FLOW? @F@@@@       LA,U  A0,7        . YES, FORCE NO TO SCAN=MAX PER SECFI
)@@G@@TOR   @E@@@@       LR    R1,A0       . SET LOOP CT OVER DATA ENTRIES    FJ
)@@G@@@C@@@@       DOIO  R$,DAPAKT FO0710   . GIMME DATA    @D@@@@       LA,U FK
)@@G@@ A0,BUFF-4   . SET UP TO LOOP THRU IT     @ @@@@       LXI,U A0,4       FL
)@@G@@ .    @G@@@@FO0340 JNGD  R1,FO0360   . IF NOTHING LEFT IN THIS SECT, GO FM
)@@G@@TO NEXT     @C@@@@       DL    A1,4,*A0    . ELSE GET CURRENT KEY @E@@@@FN
)@@G@@       DJZ   A1,FO0350   . IF 'ALL OTHER USERS', GO POST IT @D@@@@      FO
)@@G@@ DTE   A1,LGUKEY   . IS THIS AN EXACT MATCH?    @E@@@@       J     FO034FP
)@@G@@0      . NO, KEEP LOOKING IN THIS SECTOR  @#@@@@. EXACT MATCH---  @D@@@@FQ
)@@G@@       DL    A4,2,A0     . GET PERMISSION BIT ENTRY   @ @@@@       FUZZDFR
)@@G@@N            .    @E@@@@       AND   A2,LGPERM   . CMBINE WITH EXEC'S PEFS
)@@G@@RMISSIONS   @B@@@@       SA    A3,LGPERM   . STASH RESULTS  @B@@@@      FT
)@@G@@ J     FO0375      . GO CLEAN UP    @^@@@@. PROCESS 'ALL OTHERS'  @D@@@@FU
)@@G@@FO0350 DL    A4,2,A0     . GET PERM BITS FROM MTX     @E@@@@       SA   FV
)@@G@@ A0,A6       . TEMP SAVE CURRENT POINTER TO MTX @C@@@@       FUZZDN     FW
)@@G@@       . CONVERT TO HALFINT   @A@@@@       SA    A2,FOTHRS   . SAVE     FX
)@@G@@@E@@@@       LA    A0,A6       . RECOVER PTR TO DATA AREA OF MTX  @F@@@@FY
)@@G@@       J     FO0340      . AND CONTINUE LOOKING FOR AN EXACT MATCH@C@@@@FZ
)@@G@@. END OF SECTOR-- SET UP TO SCAN THE NEXT ONE-- @C@@@@FO0360 LA    A0,DAGA
)@@G@@DADR   . DRUM ADDR OF LAST ONE@A@@@@       AA,U  A0,1        . BUMP IT  GB
)@@G@@@A@@@@       SA    A0,DADADR   . PUT BACK @D@@@@       LA    A0,FONLFT  GC
)@@G@@ . GET REMAINING ENTRY COUNT  @D@@@@       J     FO0330      . AND GO PRGD
)@@G@@OCESS NEXT SECT   @A@@@@. END SCAN WITHOUT AN EXACT MATCH-- @B@@@@FO0370GE
)@@G@@ LA    A0,FOTHRS   . GET 'ALL OHERS'@E@@@@       AND   A0,LGPERM   . FOLGF
)@@G@@D IN EXEC8 LEVEL PERMISSIONS  @B@@@@       SA    A1,LGPERM   . POST RESUGG
)@@G@@LT    @ @@@@. TERMINATE ACCESS MATRIX SCAN@D@@@@FO0375 DOIO  UNL$,TOPAKTGH
)@@G@@ FO0710    . RELEASE THE TOC  @G@@@@       DLM   A1,LGUKEY   . IN CASE UGI
)@@G@@SER EPECIFIED THE KEY, FORCE POS    @F@@@@       DS    A1,LGUKEY   . STAGJ
)@@G@@SH POSITIVE KEY FOR LATER TESTS     @E@@@@       TNZ   LGPERM      . CANGK
)@@G@@ THIS FILE BE ASSIGNED AT ALL?@D@@@@       J     FO0720      . NO, GO SEGL
)@@G@@ND ERROR MESSAGE  @C@@@@       LA    A0,LGLXUS   . YES, GET XUSE FLAG   GM
)@@G@@@C@@@@       JNB   A0,FO0500   . IF NO GOT, WE'RE OK  @C@@@@       LA   GN
)@@G@@ A0,LGPERM   . ELSE GET PERMISSIONS @E@@@@       JB    A0,FO0500   . . IGO
)@@G@@F EVERYTHING IS ALLOWED, OK   @D@@@@       TEP,U A0,FIPXUS   . CAN THIS GP
)@@G@@USER HAVE @ASG,X? @B@@@@       J     FO0500      . YES, CONTINUE  @A@@@@GQ
)@@G@@. UNAUTHORIZED XUSE, GET RID OF IT  @ @@@@FO0380 LA,U  A0,'X'      .    GR
)@@G@@@ @@@@       LMJ   X11,FIFREE  .    @ @@@@       J     FO0999      .    GS
)@@G@@@C@@@@       J     FO0500      . TAKE NORMAL EXIT     @[@@@@.     @[@@@@GT
)@@G@@.     @E@@@@. FOR SDF FILE, READ 1ST BLOK (INCL REREAD OF SECTOR 0)     GU
)@@G@@@G@@@@. FOR THE TIME BEING, SDF FILES ARE NOT BUFFERED.  WE ENVISION THAGV
)@@G@@T MOST@G@@@@. FILE USAGE WILL BE OF APL RANDOM FILES, WHICH CANNOT BE BUGW
)@@G@@FFERED ANY- @G@@@@. WAY.  SINCE THE FCT SPACE PER FILE IS THE SAME REGARGX
)@@G@@DLESS OF FILE TYPE@G@@@@. WE CONSIDER IT BEST TO MINIMIZE CORE SPENT ON GY
)@@G@@BUFFERS WHICH WILL NOT  @G@@@@. BE USED BY RANDOM FILES.  IF SDF FILE USGZ
)@@G@@AGE IS HIGH ENOUGH TO WARRANT @G@@@@. BUFFERING, THE EXTRA BUF SPACE SHOHA
)@@G@@ULD BE ACQUIRED BY PICKING UP A     @G@@@@. SECOND FCT FOR THE FILE AND HB
)@@G@@CHAINING IT TO THE FIRST, RATHER THAN BY  @A@@@@. EXPANDING THE SIZE OF HC
)@@G@@AN FCT.     @[@@@@.     @D@[@@FO0400 TNZ   LGLXUS      . DO WE HAVE EXCLHD
)@@G@@USIVE USE?  @F@[@@       J     FO0730      . NO, ITS REQUIRED FOR SDF FIHE
)@@G@@LES; BREAK  @D@[@@       JNE   A0,('*SDFF*') FO0700  . BAD LABEL ERR    HF
)@@G@@@B@@[[. CHECK LABEL FOR MYRIAD VARIATIONS ON SDF@D@@[[FO0400  TNE,U   A0HG
)@@G@@,1          . IS LABEL 1 WORD LONG? @G@@[[        TE      A1,('*SDFF*') HH
)@@G@@. YES IS LABEL FROM @DATA OR @APL ITSELF? @C@@[[        J       $+2     HI
)@@G@@      . NO, KEEP LOOKING@D@@[[        J       FO0410        . YES, GO SEHJ
)@@G@@T UP BYPASS @G@@[[        LA,S3   A1,SZBUFR     . GET FILETYPE FLAG FROMHK
)@@G@@ LABEL CTL WD     @D@@[[        TE,U    A1,'P'        . SYMBIONT PRINT FHL
)@@G@@ILE?  @D@@[[        TNE,U   A1,'F'        . NO-- @FORTRAN FILE?   @D@@[[HM
)@@G@@        J       FO0410        . IF EHTIER, WE'RE OK   @D@@[[        TE,UHN
)@@G@@    A1,'C'        . SYMBIONT CARD FILE?   @G@@[[        TNE,U   A1,'I'  HO
)@@G@@      . LAST GASP. DID @FILE DO IT (FAT CHANCE)?@D@@[[        J       FOHP
)@@G@@0410        . HURRAY, WE'VE GOT IT  @G@@[[        J       FO0700        HQ
)@@G@@. UNRECOGNIZABLE LABEL IS ASSIGN ERROR    @E@@[[FO0410  AA,U    A0,SZBUFHR
)@@G@@R+1-FCTABL . SKIP OVER THE LABEL    @F@@[[        SA      A0,SDNCWD     HS
)@@G@@. AND POST ADDR OF NEXT CONTROL WORD@E@@[[        LA,U    A0,1          HT
)@@G@@. GET SDF DECLARATION FLAG    @C@@[[        SA      A0,LGDCLF     . AND HU
)@@G@@POST IN FCT @G@@[[. DO NOT ALLOW WRITING INTO SDF FILE UNLESS IT IS EXCLHV
)@@G@@USIVELY ASSIGNED  @C@@[[       LA    A0,LGPERM   . GET PERMISSION BITS  HW
)@@G@@@G@@[[       AND,U A0,FIPXUS+FIPLOK+FIPREA+FIPDEL  . TURN OFF WRITE PERMHX
)@@G@@ISSION@D@@[[       TNZ   LGLXUS      . DO WE HAVE EXCLUSIVE USE?  @F@@[[HY
)@@G@@       SA    A1,LGPERM   . POST PERMISSIONS WITH WRITE TURNED OFF @D#@@@HZ
)@@G@@       LA,U  A0,4        . SIZE OF BUF (IN SECTORS)   @A@@@@       SA   IA
)@@G@@ A0,SDSIZS   . POST IT  @B@[@@       LA,U  A0,SZBUFR   . GET BUF ADDR   IB
)@@G@@@A@[@@       LXI,U A0,4*28     . AND SIZE @B@[@@       SA    A0,SZACES  IC
)@@G@@ . POST ACESS WORD@D@[@@       NOP   A0,0,*A0    . GET ADDR OF END OF BUID
)@@G@@F     @E@[@@       SA    A0,SDBEND   . POST LWA+1 OF SDF FOR OFLO CHK   IE
)@@G@@@E@[@@       LA,U  A0,SZBUFR+2 . SKIP PAST LABEL TO 1ST CTL WD    @F@[@@IF
)@@G@@       SA    A0,SDNCWD   . POST ADDR OF NEXT SDF CONTROL WORD     @E@@[[IG
)@@G@@        LA,U    A0,28*4       . 4 SECTORS OF 28 WORDS EACH  @G@@[[      IH
)@@G@@  SA      A0,SZWDCT     . TO WORDCOUNT PORTION OF ACCESS WORD     @E@@[[II
)@@G@@        AA,U    A0,SZBUFR-FCTABL   . PLUS START ADDR OF BUFF@F@@[[      IJ
)@@G@@  SA      A0,SDBEND     . GIVES (RELATIVE) LWA+1 OF BUFFER  @D@@[[      IK
)@@G@@  LA,U    A0,SZBUFR     . ABSOLUTE BUF ADDR     @C@@[[        SA      A0IL
)@@G@@,SZBADR     . TO ACCESS WORD  @EB@@@       DOIO  R$,SZPAKT FO0710   . GEIM
)@@G@@T 1ST 4 SECTS OF FILE   @[@@@@.     @A@@@@. NORMAL EXIT- POST ALL PARAMSIN
)@@G@@, ETC.@[@@@@.     @ @@@@FO0500 LX    X11,FOLINK  .    @ @@@@       J    IO
)@@G@@ 1,X11       .    @[@@@@.     @D@@@@. ERRORS AFTER @ASG-- FREE THE FILE IP
)@@G@@AND THE FCT--     @[@@@@.     @A@@@@FO0700 ERROR YFIASG,FO0790    .     IQ
)@@G@@@A@@@@FO0710 ERROR YIOERR,FO0790    .     @A@@@@FO0720 ERROR YFIPER,FO07IR
)@@G@@90    .     @A@@@@FO0730 ERROR YFIFUN,FO0790    .     @[@@@@.     @A@@@@IS
)@@G@@. ABORT THE ASSIGN AND FREE THE FCT @[@@@@.     @ @@@@FO0790 LMJ   X11,FIT
)@@G@@UABRT  .    @ @@@@       NOP               .    @ @@@@       J     FO099IU
)@@G@@9      .    @[@@@@.     @A@@@@. ERROR WITH FILE NOT ASSIGNED--    @[@@@@IV
)@@G@@.     @A@@@@FO0900 ERROR YFIASG,FO0999     .    @A@@@@FC0910 ERROR YDOMAIW
)@@G@@I,FC0999    .     @[@@@@.     @ @@@@FO0999 LX    X11,FOLINK  .    @ @@@@IX
)@@G@@       J     0,X11       .    @[@@@@.     @ @@@@       VARBLS           IY
)@@G@@ .    @ @@@@FOLINK EQUF  $,,H1       .    @ @@@@FOTHRS EQUF  $,,H2      IZ
)@@G@@ .    @ @@@@       RES   1           .    @F@@@@FOUKEY RES   2          JA
)@@G@@ . TEMP STORAGE OF USER-SUPPLIED FILE KEY @ @@@@FONLFT EQUF  $,,XH2     JB
)@@G@@ .    @ @@@@       RES   1           .    @#@@[[       CONSTS    .@B@@[[JC
)@@G@@. OPTIONS FOR ASSIGNMENT OF EXISTING FILES@D@@[[FOOPTA +'A',UOMEOP,' ','JD
)@@G@@ ',' ',' '      . 'Z' OR 'AE' @E@@[[FOOPTX +'A','X',UOMEOP,' ',' ',' '  JE
)@@G@@    . 'AX' OR 'AXE'     @D@@@@/. MISCELLANEOUS SUPPORT ROUTINES FOR CREAJF
)@@G@@TE AND OPEN @[@@@@.     @ @@@@       INSTRS            .    @[@@@@.     JG
)@@G@@@^@@@@. SECTOR ZERO READ--    @[@@@@.     @C@@@@SZREAD SZ    SZTSWD     JH
)@@G@@ . CLEAR TS WD IN PACKET@ @@@@       LA,U  A0,R$       .    @ @@@@      JI
)@@G@@ SA    A0,SZFUNC   .    @ @@@@       LA,U  A0,SZSIZE   .    @ @@@@      JJ
)@@G@@ SA    A0,SZWDCT   .    @A@@@@       LA,U  A0,SZBUFR   . BUF ADDR @A@@@@JK
)@@G@@       SA    A0,SZBADR   . TO PACKET@D@@@@       SZ    SZDADR      . DRUJL
)@@G@@N READ ADDR IS ZERO     @ @@@@       LA,U  A0,SZPAKT   .    @A@@@@      JM
)@@G@@ ER    IOW$        . GIMME    @B@@@@       LA    A0,SZSTAT   . GET STATUJN
)@@G@@S     @ @@@@       J     0,X11       .    @[@@@@.     @B@@@@. INITIALIZEJO
)@@G@@ I/O PACKETS FOR RANDOM FILES @[@@@@.     @[@@@@.     @ @@@@       INSTRJP
)@@G@@S            .    @ @@@@INPKTS LA,U  A0,TOPAKT   .    @ @@@@       LXI,UJQ
)@@G@@ A0,1        .    @C@@@@       LR,U  R1,RATSIZ-1-(0177777**TOPAKT)     .JR
)@@G@@@C@@@@       SZ    0,*A0       . CLEAR PACKET AREAS   @ @@@@       JGD  JS
)@@G@@ R1,$-1      .    @B@@@@       DL    A0,SZUNAM   . GET @USE NAME  @C@@@@JT
)@@G@@       DS    A0,TOUNAM   . PUT INTO ALL PACKETS @ @@@@       DS    A0,LKJU
)@@G@@UNAM   .    @ @@@@       DS    A0,BMUNAM   .    @ @@@@       DS    A0,DAJV
)@@G@@UNAM   .    @ @@@@. SET POINTERS FOR TOC I/O    @A@@@@IP0010 LA,U  A0,TOJW
)@@G@@BUFR   . BUF ADDR @E@@@@       SA    A0,TOEADR   . POST 1ST AS CURRENT TJX
)@@G@@OC ENTRY    @ @@@@       LXI,U A0,28       .    @E@@@@       SA    A0,TOJY
)@@G@@PAKT+4 . POST ACCESS WD FOR TOC SECTOR    @ @[@@       LA,U  A0,1       JZ
)@@G@@ .    @E@[@@       SA    A0,TOSNUM   . CURRENT TOC SECTOR IS THE 1ST    KA
)@@G@@@C@@[[       LNA,U A0,1        . GET TOC EMPTY FLAG   @F@@[[       SA   KB
)@@G@@ A0,TOSNUM   . AND BE SURE TOC SECTOR IS MARKED EMPTY @D]@@@       LA   KC
)@@G@@ A0,SZTADR   . TOC ADDR FROM SECTOR 0     @A@@@@       SA    A0,TODADR  KD
)@@G@@ . TO PACKET@ @@@@. SET POINTERS FOR LOCKSECTOR @C@@@@IP0020 LA,U  A0,LKKE
)@@G@@SLOP   . ADDR OF SLOP BUFFER  @ @@@@       LXI,U A0,1        .    @C@@@@KF
)@@G@@       SA    A0,LKPAKT+4 . POST ACCESS WORD     @C@@@@       LA    A0,SZKG
)@@G@@LADR   . ADDR OF LOCK ESCTOR  @A@@@@       SA    A0,LKDADR   . TO PACKETKH
)@@G@@@ @@@@. SET UP BITMAP POINTERS--    @ @@@@IP0030 LA,U  A0,BMBUFR   .    KI
)@@G@@@ @@@@       LXI,U A0,28       .    @ @@@@       SA    A0,BMPACW   .    KJ
)@@G@@@B@@@@       LA    A0,SZMADR   . ADDR OF MAP    @A@@@@       SA    A0,BMKK
)@@G@@DADR   . TO PACKET@A@@@@       J     0,X11       . RETURN   @[@@@@.     KL
)@@G@@@^@@@@. SEARCH FOR AN FCT--   @[@@@@.     @C@@@@FCTGET LMA   A2,FILUNI  KM
)@@G@@ . GET LGL UNIT NUM     @C@@@@       TG,U  A2,0        . IS IT AT LEAST KN
)@@G@@0?    @C@@@@       TG,U  A2,256      . AND LS THAN 256?     @C@@@@      KO
)@@G@@ J     FG0900      . IF NOT, DOMAIN ERR   @E@@@@       LR    R1,RCNFIL  KP
)@@G@@ . GET NO OF FCT'S ALREADY ALLOCATED@B@@@@       LX    A0,RCFFWA   . ADDKQ
)@@G@@R OF 1ST FCT@B@@@@       LXI   A0,RCFSIZ   . NO OF WDS/FCT  @D@@@@      KR
)@@G@@ SE,Q4 A2,0,*A0    . LOOK IN FCT'S FOR THIS UNIT@B@@@@       LA,U  A0,0 KS
)@@G@@       . SET NOFIND FLAG@E@@@@       ANA   A0,RCFSIZ   . GOT IT, ADJUST KT
)@@G@@TO POINT TO IT    @C@@@@       LX,U  X8,0,A0     . SET POINTER TO FCT   KU
)@@G@@@C@@@@       J     1,X11       . TAKE NORMAL EXIT     @ @@@@FG0900 SX   KV
)@@G@@ X11,FGLINK  .    @D@@@@       ERROR YDOMAI      . INVALID UNIT IS DOMAIKW
)@@G@@N ERR @ @@@@       LX    X11,FGLINK  .    @B@@@@       J     0,X11      KX
)@@G@@ . ERROR EXIT     @ @@@@       VARBLS            .    @ @@@@FGLINK EQUF KY
)@@G@@ $,,H1       .    @ @@@@       RES   1           .    @G@@@@/. FLOCK-- SKZ
)@@G@@ET TEMPORARY XUSE ON A LIST OF FILES USING THE LOCKSECTOR-- @[@@@@.     LA
)@@G@@@ @@@@       INSTRS            .    @ @@@@FILOCK SX    X11,FLLINK  .    LB
)@@G@@@C@@@@. NORMAL ENTRY TO LOCK FILE POINTED TO BY X8--  @B@@@@FL0010 LA   LC
)@@G@@ A0,LGDCLF   . GET DECLARATION@D@@@@       JB    A0,FL0920   . IF SDF, LLD
)@@G@@OCKING IS ILFUNC  @B@@@@       LA    A0,LGLXUS   . GET XUSE FLAG  @E@@@@LE
)@@G@@       JB    A0,FL0020   . IF EXEC8 XUSE, NO NEED TO LOCK   @D@@@@      LF
)@@G@@ OR,U  A0,02       . ELSE TURN ON LOCKSECTOR BIT@F@@@@       JNOPER A0,FLG
)@@G@@IPLOK FL0910     . DIE IF LOCKING NOT ALLOWED   @E@@@@       SA    A1,LGLH
)@@G@@LXUS   . ELSE UPDATE EXCLUSIVE USE FLAG   @A@@@@       DOIO  RDL$,LKPAKTLI
)@@G@@ FL0900 .   @ @@@@FL0020 LX    X11,FLLINK  .    @ @@@@       J     1,X11LJ
)@@G@@       .    @C@@@@. ERRORS WHICH REQUIRE LOCKS TO BE CLEARED--    @A@@@@LK
)@@G@@FL0900 ERROR YIOERR,FL0990    .     @A@@@@FL0910 ERROR YFIPER,FL0990    LL
)@@G@@.     @A@@@@FL0920 ERROR YFIFUN,FL0990    .     @B@@@@FL0990 LMJ   X11,FLM
)@@G@@UNLOK  . CLEAR ANY LOCKS@E@@@@       NOP               . IGNORE ERRORS, LN
)@@G@@WE'RE DYING ANYWAY@ @@@@FL0999 LX    X11,FLLINK  .    @ @@@@       J    LO
)@@G@@ 0,X11       .    @[@@@@.     @F@@@@. ROUTINE TO CLEAR ALL CURRENT LOCKSLP
)@@G@@-- USED AT INITIALIZATION, AND@^@@@@. IF AN ERROR OCCURS    @[@@@@.     LQ
)@@G@@@ @@@@FUNLOK SX    X11,FKLINK  .    @C@@@@       LR    R1,RCNFIL   . NO LR
)@@G@@OF DEFINED FCT'S  @ @@@@       LX    X8,RCFFWA   .    @D@@@@       LXI  LS
)@@G@@ X8,RCFSIZ   . SET INCR = SIZE OF AN FCT  @C@@@@       JNGD  R1,FK0030  LT
)@@G@@ . IF NO MORE, GET OUT  @E@@@@FK0010 LA    A0,LGDCLF   . GET DECLARATIONLU
)@@G@@ OF FILE TYPE     @D@@@@       JB    A0,FK0020   . IF SDF, GO TO NEXT FILV
)@@G@@LE    @B@@@@       LA    A0,LGLXUS   . GET XUSE FLAG  @E@@@@       JEP,ULW
)@@G@@ A0,2 FK0020 . IF LOCAL LOCK NOT SET, GO TO NEXT@D@@@@       AND,U A0,07LX
)@@G@@5      . ELSE TURN FLAG BIT OFF     @B@@@@       SA    A1,LGLXUS   . INDLY
)@@G@@ICATE IT    @E@@@@       DOIO  UNL$,LKPAKT FK0020 . IGNORE UNLOCKING ERRLZ
)@@G@@ORS   @C@@@@FK0020 NOP   A0,0,*X8    . BUMP TO NEXT FCT     @C@@@@      MA
)@@G@@ JGD   R1,FK0010   . DO NEXT FILE, IF ANY @ @@@@FK0030 LX    X11,FKLINK MB
)@@G@@ .    @B@@@@       J     1,X11       . NORMAL EXIT    @ @@@@       VARBLMC
)@@G@@S            .    @ @@@@FLLINK EQUF  $,,H1       .    @ @@@@FKLINK EQUF MD
)@@G@@ $,,H2       .    @ @@@@       RES   1           .    @A@@@@/. RUN STATUME
)@@G@@S ROUTINES (NAMES, NUMS)@[@@@@.     @^@@@@       INSTRS       .   @ @@@@MF
)@@G@@FISTAT SX    X11,FSLINK  .    @C@@@@       LX    X8,RCFFWA   . STARTING MG
)@@G@@FROM 1ST FCT@C@@@@       LXI   X8,RCFSIZ   . AND STEPPING THRU ALL@D@@@@MH
)@@G@@       LA    A14,RCNFIL  . SET LOOP CT TO NO OF FCT'S @E@@@@       LA   MI
)@@G@@ A0,FILUNI   . DRIVER THOUGHT ARG WAS A UNIT NO @E@@@@       JZ    A0,FSMJ
)@@G@@0200   . ACTUALLY 0=SUBFUNC FOR FNAMES    @D@@@@       JNE,U A0,1 FS0900MK
)@@G@@ . AND 1=SUBFUNC FOR FNUMS    @[@@@@.     @C@@@@. FNUMS- GET VECT OF UNIML
)@@G@@TS, NEGATIVE IF NOT OPEN@[@@@@.     @E@@@@FS0100 SA,H2 A14,FNDUMY  . NO MM
)@@G@@OF FILES=LENGTH OF VECTOR     @ @@@@       LA,U  A0,FNDUMY   .    @ @@@@MN
)@@G@@       LA,U  A1,ZMOHFI   .    @C@@@@       LMJ   X11,PUTANS  . INITIALIZMO
)@@G@@E STASH     @ @@@@       J     FS0999      .    @ @@@@       PUSH  A6   MP
)@@G@@       .    @C@@@@. LOOP OVER FCT'S, STORE UNIT NOS IN RESULT     @B@@@@MQ
)@@G@@FS0110 JNGD  A14,FS0300  . EXIT IF NO MORE@D@@@@       LA    A2,LGLNUM  MR
)@@G@@ . GET UNIT FROM CURRENT FCT  @B@@@@       LA    A0,LGDCLF   . GET DECLAMS
)@@G@@RATION@B@@@@       TE,U  A0,2        . RANDOM FILE?   @C@@@@       LNA  MT
)@@G@@ A2,A2       . NO, SET UNIT NO NEG  @B@@@@       LMJ   X2,0,X2     . STAMU
)@@G@@SH IN RESULT@B@@@@       NOP   A0,0,*X8    . GO TO NEXT FCT @B@@@@      MV
)@@G@@ J     FS0110      . AND CONTINUE   @[@@@@.     @E@@@@. FNAMES- CREATE AMW
)@@G@@RRAY OF EXTERNAL QUALIFIERS AND NAMES     @[@@@@.     @E@@@@FS0200 SA,H1MX
)@@G@@ A14,FMDIMV  . NO OF UNITS IS 1ST DIMENSION     @ @@@@       LA    A0,A1MY
)@@G@@4      .    @F@@@@       MSI,U A0,24       . TIMES 12 CHARS EACH FOR QUAMZ
)@@G@@L, FILNAME  @D@@@@       SA,H2 A0,FMDUMY   . GIVES TOTAL ELS IN ARRAY   NA
)@@G@@@C@@@@       LA,U  A0,FMDIMD   . ADDR OF DIM DESCR    @ @@@@       RELADNB
)@@G@@R A0         .    @C@@@@       SA,H1 A0,FMDUMY+1 . TO PRIMARY DESCR     NC
)@@G@@@C@@@@       LA,U  A0,FMDIMV   . ADDR OF DIM DATA     @ @@@@       RELADND
)@@G@@R A0         .    @B@@@@       SA    A0,FMDIMD+1 . TO DIM DESCR   @ @@@@NE
)@@G@@       LA,U  A0,FMDUMY   .    @ @@@@       LA,U  A1,ZMOCHR   .    @C@@@@NF
)@@G@@       LMJ   X11,PUTANS  . INITIALIZE STASH     @ @@@@       J     FS099NG
)@@G@@9      .    @ @@@@       PUSH  A6          .    @#@@@@. LOOP OVER FCT'S NH
)@@G@@@E@@@@FS0210 JNGD  A14,FS0300  . NORMAL EXIT WHEN ALL FCT'S DONE  @F@@@@NI
)@@G@@       LA,U  A0,LGQUAL   . GET ADDR OF QUAL WHERE FACIL$ LEFT IT  @D@@@@NJ
)@@G@@       LXI,U A0,1        . SET INCR FOR SOURCE SCAN   @E@@@@       LR,U NK
)@@G@@ R1,24       . QUAL + FILE IS 24 CHARS TOTAL    @C@@@@       LMJ   X11,TNL
)@@G@@RANFN  . XLATE WITHOUT PADDING@A@@@@       J     FS0999      . OOPS     NM
)@@G@@@D@@@@       NOP   A0,0,*X8    . STEP POINTER TO NEXT FCT   @E@@@@      NN
)@@G@@ J     FS0210      . AND GO CHECK EXIT CONDITIONS     @#@@@@. NORMAL EXINO
)@@G@@T     @ @@@@FS0300 LX    X11,FSLINK  .    @#@@@@       J     1,X11@[@@@@NP
)@@G@@.     @C@@@@FS0900 ERROR YDOMAI,FS0999    . BAD SUBFUNC     @B@@@@FS0999NQ
)@@G@@ LX    X11,FSLINK  .                @ @@@@       J     0,X11       .    NR
)@@G@@@ @@@@       VARBLS            .    @ @@@@FSLINK EQUF  $,,H1       .    NS
)@@G@@@#@@@@       RES   1 .  @ @@@@FMTOAD EQUF  $,,H1       .    @ @@@@FMFRADNT
)@@G@@ EQUF  $,,H2       .    @ @@@@       RES   1           .    @ @@@@      NU
)@@G@@ VARCON            .    @F@@@@FNDUMY CBLOCK ZTPTMP,ZMOHFI,ZRANKV,$-$  . NV
)@@G@@DUMMY DESCR FOR FNUMS   @F@@@@FMDUMY CBLOCK ZTPTMP,ZMOCHR,3,$-$   0   . NW
)@@G@@DUMMY DESCR FOR FNAMES  @F@@@@FMDIMD CBLOCK ZTPDIM,ZMOHFI,ZRANKV,3  0 . NX
)@@G@@DIM DESCR FOR FNAMES    @D@@@@FMDIMV +$-$,2            . VALUES OF DIMS NY
)@@G@@FOR FNAMES  @ @@@@       +12,0             .    @^@@@@/. GET SIZE OF FILNZ
)@@G@@E---  @[@@@@.     @C@@@@. THIS ENTRY RETURNS TOCSIZES AS  CURRENT,MAX   OA
)@@G@@@[@@@@.     @ @@@@       INSTRS            .    @ @@@@FIRTOC SX    X11,FOB
)@@G@@TLINK  .    @B@@@@       LA    A0,LGDCLF   . GET DECLARATION@E@@@@      OC
)@@G@@ JB    A0,FT0920   . THIS OP IS ILFUNC ON SDF FILE    @E@@@@       JNOPEOD
)@@G@@R A0,FIPREA FT0900     . READ PERMISSION CHECK--@D@@@@       LA    A0,LGOE
)@@G@@LXUS   . GET EXCLUSIVE USE FLAG     @G@@@@       JB    A0,FT0010   . IF OF
)@@G@@WE HAVE IT, DON'T RE-READ SECTOR ZERO     @G@@@@       DOIO  R$,SZPAKT FOG
)@@G@@T0910 . ELSE BE SURE WE HAVE THE LATEST INFO    @D@@@@FT0010 LXI   A1,SZOH
)@@G@@TCUR   . CURRENT NO OF ELS IN TOC   @C@@@@       LXM   A1,SZTMAX   . MAXOI
)@@G@@ NO TOC CAN HOLD  @B@@@@       SA    A1,FTDATA   . POST DATA VAL  @A@@@@OJ
)@@G@@       LA,U  A0,FTDATA   . DATA ADDR@ @@@@       RELADR A0         .    OK
)@@G@@@B@@@@       SA    A0,FTDUMY+1 . TO DUMMY DESCR @ @@@@       LA,U  A6,FTOL
)@@G@@DUMY   .    @ @@@@       RELADR A6         .    @C@@@@       LMJ   X11,DOM
)@@G@@UPE    . MOVE RESULT TO WS    @ @@@@       J     FT0999      .    @B@@@@ON
)@@G@@       PUSH  A2          . STACK RESULT   @ @@@@       LX    X11,FTLINK OO
)@@G@@ .    @B@@@@       J     1,X11       . NORMAL RETURN  @[@@@@.     @A@@@@OP
)@@G@@FT0900 ERROR YFIPER,FT0999    .     @A@@@@FT0910 ERROR YIOERR,FT0999    OQ
)@@G@@.     @A@@@@FT0920 ERROR YFIFUN,FT0999    .     @ @@@@FT0999 LX    X11,FOR
)@@G@@TLINK  .    @ @@@@       J     0,X11       .    @ @@@@       VARBLS     OS
)@@G@@       .    @ @@@@FTLINK EQUF  $,,H1       .    @ @@@@       RES   1    OT
)@@G@@       .    @ @@@@FTDATA RES   1           .    @ @@@@       VARCON     OU
)@@G@@       .    @B@@@@FTDUMY CBLOCK ZTPTMP,ZMOHFI,ZRANKV,2 0  . @G@@[[/. CLOOV
)@@G@@SE AND FREE ALL FILES ASSIGNED BY APL.  THIS IS CALLED AT SIGNOFF @C@@[[OW
)@@G@@. TIME FROM THE OTHER (I.E. SYSTEM COMMAND) BANK@[@@[[.     @#@@[[      OX
)@@G@@  INSTRS .  @D@@[[FREALL* SX     X11,FALINK     . SAVE BANK AND LOCN    OY
)@@G@@@E@@[[        SX     X8,FAX8TM      . TEMP SAVE FCT POINTER REG   @D@@[[OZ
)@@G@@        LA     A0,RCNFIL      . GET NO OF OPEN FILES  @D@@[[FA0100  JZ  PA
)@@G@@   A0,FA0110      . IF NO MORE FILES, EXIT@G@@[[        SA     A0,FANFILPB
)@@G@@      . ELSE TEMP SAVE CTR TO PRECLUDE LOOPING  @F@@[[        LX     X8,PC
)@@G@@RCFFWA      . GET START ADDR OF 1ST FCT BUFFER  @E@@[[        LMJ    X11PD
)@@G@@,FIFREB     . FREE FILE WITH 'B' OPTION   @F@@[[        NOP             PE
)@@G@@      . IGNORE ERRORS, ITS SIGNOFF TIME   @G@@[[        LA     A0,FANFILPF
)@@G@@      . RECOVER OUR OWN COPY OF THE NO OF FILES @E@@[[        ANA,U  A0,PG
)@@G@@1           . COUNT THE FILE WE JUST FREED@E@@[[        TE     A0,RCNFILPH
)@@G@@      . IS COUNT OF FILES LEFT OK?  @A@@[[        ER     ERR$           PI
)@@G@@. NO  @E@@[[        J      FA0100         . YES, GO PURGE THE NEXT ONE  PJ
)@@G@@@A@@[[FA0110  LX     X8,FAX8TM      .     @A@@[[        LX     X11,FALINPK
)@@G@@K     .     @D@@[[        LIJ    X11,0,X11      . RETURN TO CALLING BANKPL
)@@G@@@[@@[[.     @#@@[[        VARBLS .  @A@@[[FALINK  RES    1              PM
)@@G@@.     @A@@[[FAX8TM  RES    1              .     @A@@[[FANFIL  EQUF   $,,PN
)@@G@@H1          .     @A@@[[        RES    1              .     @ @@@@      PO
)@@G@@ END               .    ___0,FIPREA FT0900     . READ PERMISSION CHECK--PP
)@@G@@@D@@@@       LA    A0,LGLXUS   . GET EXCLUSIVE USE FLAG     @G@@@@      PQ
)@@G@@ JB    A0,FT0010   . IF WE HAVE IT, DON'T RE-REA*[S@@@*SDFF*@G@@@@. ****PR
)@@G@@***************************************************************** @G@@@@PS
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * PT
)@@G@@@G@@@@.                                                                 PU
)@@G@@    * @G@@@@       AXR$         .                                       PV
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        PW
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        PX
)@@G@@                      * @G@@@@       WSDEF.      DEFINE WORKSPACE       PY
)@@G@@                            * @G@@@@WORKSP INFO  2 20.      SET ASIDE THPZ
)@@G@@E SPACE                           * @G@@@@       RUNCTL.     DEFINE RUN QA
)@@G@@CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.      QB
)@@G@@AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCK     QC
)@@G@@       . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.           QD
)@@G@@                                                          * @G@@@@. END QE
)@@G@@OF STANDARD PROC BLOCK                                          * @G@@@@QF
)@@G@@. ********************************************************************* QG
)@@G@@@[@@@@.     @D@@@@/. ROUTINE TO PRINT THE HEADER LINE OF A FUNCTION     QH
)@@G@@@F@@@@.  ENTER WITH HEADER TEXT RELADR IN A2 AND OPENING CHAR IN A6     QI
)@@G@@@E@@@@. THIS ROUTINE (FORMERLY PART OF LINEKO) HAS BEEN SPLIT OUT @E@@@@QJ
)@@G@@. BECAUSE IT IS ONLY USED BY FUNC DEF MODE, AND THUS CAN BE @C@@@@. LOADQK
)@@G@@ED ONLY IN THE  CMND/FUNC SEGMENT (REP).  @[@@@@.     @G@@@@. **** NOTE QL
)@@G@@**** THIS ROUTINE IS DEPENDENT UPON THE FOLLOWING OPERATORS @B@@@@. HAVIQM
)@@G@@NG THE FOLLOWING SEQUENCE -------   @]@@@@. AFNNAM = X@#@@@@. AFNANS = XQN
)@@G@@+1    @#@@@@. AFNARG = X+2    @#@@@@. AFNLCL = X+3    @[@@@@.     @F@@@@QO
)@@G@@        STATEV  . DEFINE STATEVECTOR SO WE CAN FIND FUNC NAME BLOK@[@@@@QP
)@@G@@.     @ @@@@       INSTRS            .    @G@@@@. THIS ENTRY FOR TWO-LINQQ
)@@G@@E HDRS FOR )EDIT-- I.E. $F<NAME> AND [0] <TEXT> @C@@@@HDEDIT* SX      X1QR
)@@G@@1,HDLINK    . SAVE RETURN ADDR@D@@@@        SA      A2,HDTEXT     . AND QS
)@@G@@ADDR OF <TEXT>    @E@@@@        LA      A0,HDSPFX     . GET PREFIX OF 3 QT
)@@G@@SPACES, NULL@E@@@@        OR      A0,A6         . FOLD IN OPENING $F OR QU
)@@G@@$K    @F@@@@        LMJ     X11,HPRPFX    . AND PUT PREFIX INTO OUTPUT BQV
)@@G@@UFFER @G@@@@        LA      A6,STVFNN     . GET FUNCNAME POINTER FROM STQW
)@@G@@ATEVECT     @E@@@@        LMJ     X11,PRTNAM    . AND EDIT IT INTO OUR BQX
)@@G@@UFFER @A@@@@        J       HD0900        .     @D@@@@        LMJ     X1QY
)@@G@@1,LINSTR    . FLUSH OUT THE 1ST LINE@F@@@@        LA      A1,HDNPFX     QZ
)@@G@@. GET PREFIX FOR 2ND LINE :  [0]    @C@@@@        J       HD0020        RA
)@@G@@. AND GO STASH IT @C@@@@. THIS ENTRY FOR HEADER OF THE FORM  $F<TEXT>   RB
)@@G@@@E@@@@HDRPRT* LA      A0,HDSPFX     . GET PREFIX OF SPACES, NULL  @G@@@@RC
)@@G@@        OR      A0,A6         . AND FOLD IN OPENING $F OR $K FROM A6    RD
)@@G@@@A@@@@        J       HD0010        .     @C@@@@. THIS ENTRY FOR HEADER RE
)@@G@@OF THE FORM [0]<TEXT>   @D@@@@HDNPRT* LA      A1,HDNPFX     . GET NUMERIRF
)@@G@@C PREFIX    @A@@@@HD0010  SX      X11,HDLINK    .     @A@@@@        SA  RG
)@@G@@    A2,HDTEXT     .     @C@@@@HD0020  LMJ     X11,HPRPFX    . PRINT THE RH
)@@G@@PREFIX@F@@@@        LA      A2,HDTEXT     . RECOVER POINTER TO TEXT BLOCRI
)@@G@@K     @D@@@@       LMJ   X11,LEXGET  . AND LEXICAL ITEM GETTER    @ @@@@RJ
)@@G@@       J     HD0900      .    @E@@@@HD0100 LMJ   X4,0,X4     . GET THE FRK
)@@G@@IRST ITEM OF THE PAIR   @ @@@@       J     HD0900      .    @A@@@@      RL
)@@G@@ COMJMP A1 0,HD0200 2,HD0300 .@C@@@@HD0200 TE,U  A0,AEOL     . IS THE OPRM
)@@G@@ AN EOL ?   @D@@@@       J     HD0900      . NO, SYSERRCAT THIS POINT   RN
)@@G@@@A@@@@       LA    A1,A0       . YES, SO  @B@@@@       LMJ   X2,0,X2    RO
)@@G@@ . STASH IT, AND  @C@@@@       J     HD0500      . AND GO PRINT THE LINERP
)@@G@@@D@@@@HD0300 SA    A0,HDNADR   . ITS A NAME, SO SAVE IT     @F@@@@      RQ
)@@G@@ LMJ   X4,0,X4     . AND GET THE SECOND ITEM OF THE PAIR    @C@@@@      RR
)@@G@@ JNZ   A1,HD0900   . IF NOT OP, SYSERR    @G@@@@       ANA,U A0,AFNNAM  RS
)@@G@@ . ONLY AFNNAM,...,AFNLCL ALLOWED AT ANY TIME   @ @@@@       JN    A0,HDRT
)@@G@@0900   .    @ @@@@       TG,U  A0,4        .    @ @@@@       J     HD090RU
)@@G@@0      .    @D@@@@       LA    A0,HDPTBL,A0 . GET GRAPHIC TO BE USED    RV
)@@G@@@G@@@@       JE,U  A0,ASEMIC HD0400 . IF LOCAL VARBL, PRINT SEMICOLON FIRW
)@@G@@RST   @C@@@@       SA    A0,HDSYMB   . ELSE PRINT NAME FIRST@D@@@@      RX
)@@G@@ LA    A6,HDNADR   . GET NAMES DESCR REL ADR    @C@@@@       LMJ   X11,PRY
)@@G@@RTNAM  . AND STASH THE NAME   @ @@@@       J     HD0900      .    @E@@@@RZ
)@@G@@       LA    A1,HDSYMB   . RECOVER THE SYMBOL TO FOLLOW     @C@@@@      SA
)@@G@@ LMJ   X2,0,X2     . AND STASH IT TOO.    @D@@@@       J     HD0100     SB
)@@G@@ . AND GO GET THE NEXT PAIR.  @D@@@@HD0400 LA    A1,A0       . WE HAVE ASC
)@@G@@ LOCAL VARBL, SO  @D@@@@       LMJ   X2,0,X2     . STASH SEMI-COLON FIRSSD
)@@G@@T     @C@@@@       LA    A6,HDNADR   . AND THEN THE NAME    @ @@@@      SE
)@@G@@ LMJ   X11,PRTNAM  .    @ @@@@       J     HD0900      .    @D@@@@      SF
)@@G@@ J     HD0100      . AND GO GET THE NEXT PAIR   @E@@@@HD0500 LMJ   X11,LSG
)@@G@@INSTR  . WRITE THE LINE WE JUST BUILT     @A@@@@       LX    X11,HDLINK SH
)@@G@@ . AND EXIT @ @@@@       J     1,X11       .    @G@@@@HD0900  EQU     0 SI
)@@G@@            . NOTE-- SYSERR IS FORCED BY JUMP TO IGDM @[@@@@.     @E@@@@SJ
)@@G@@. PREFIX PRINT ROUTINE-- ENTER WITH 4-CHAR PREFIX IN A1     @[@@@@.     SK
)@@G@@@A@@@@HPRPFX  SX      X11,HPLINK    .     @D@@@@        SA      A1,HDLPFSL
)@@G@@X     . TEMP SAVE LINE PREFIX @G@@@@        LMJ     X11,LNFLSH    . WHILSM
)@@G@@E WE FLUSH ANYTHING LEFT IN OUTBUF  @G@@@@        DL      A1,HDLPFX     SN
)@@G@@. GET ORIGINAL PREFIX + A TRAILING BLANK  @D@@@@        DSL     A1,3*9  SO
)@@G@@      . ALIGN 1ST CHARACTER   @B@@@@        LMJ     X2,0,X2       . STASSP
)@@G@@H IT  @C@@@@        LA,U    A4,3          . 4 MORE TO GO... @C@@@@HP0010SQ
)@@G@@  LA,U    A1,0          . CLEAR LAST CHAR @E@@@@        LDSL    A1,9    SR
)@@G@@      . MOVE NEXT ONE INTO PLACE    @B@@@@        LMJ     X2,0,X2       SS
)@@G@@. STASH IT  @G@@@@        JGD     A4,HP0010     . AND CONTINUE UNTIL 1STST
)@@G@@ 5 CHARS ARE ODNE @D@@@@        LX      X11,HPLINK    . THEN GET RETURN SU
)@@G@@ADDR  @C@@@@        J       0,X11         . AND GO HOME     @ @@@@      SV
)@@G@@ VARBLS            .    @B@@@@HDLINK EQUF  $,,H1       . RETURN LINK    SW
)@@G@@@C@@@@HDNADR EQUF  $,,H2       . A NAMES DESCR ADDR   @A@@@@        RES SX
)@@G@@    1             .     @C@@@@HDCHAR EQUF  $,,Q1     . OPENING CHAR OF FSY
)@@G@@UNC   @E@@@@HDSYMB EQUF  $,,Q2     . SYMBOL TO SEPERATE THINGS IN HEADERSZ
)@@G@@@C@@@@HDTEXT EQUF  $,,H2     . HEADER TEXT RELADR     @A@@@@        RES TA
)@@G@@    1             .     @^@@@@. STORAGE FOR PREFIXER  @A@@@@HPLINK  EQUFTB
)@@G@@    $,,H1         .     @A@@@@        RES     1             .     @#@@@@TC
)@@G@@        VARCON  . @F@@@@HDLPFX  +       $-$           . TEMP STORE OF ACTD
)@@G@@TUAL PREFIX TO USE@F@@@@HDSPFX  +ASPACE,ASPACE,ASPACE,0    . SPACES MUSTTE
)@@G@@ FOLLOW THE ABOVE @B@@@@HDNPFX  +ALBRAK,AZERO,ARBRAK,ASPACE     . @ @@@@TF
)@@G@@       CONSTS            .    @ @@@@HDPTBL +     ASPACE      .    @ @@@@TG
)@@G@@       +     ASTORE      .    @ @@@@       +     ASPACE      .    @ @@@@TH
)@@G@@       +     ASEMIC      .    @]@@@@       END. ___,HDSYMB   . ELSE PRINTI
)@@G@@T NAME FIRST@D@@@@      *[S@@@*SDFF*@G@@@@. ****************************TJ
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUTK
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 TL
)@@G@@                                                    * @G@@@@       AXR$ TM
)@@G@@        .                                                 * @G@@@@      TN
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@TO
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * TP
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               TQ
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 TR
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            TS
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACETT
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL TU
)@@G@@BLOCK TYPES                 * @G@@@@.                                   TV
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  TW
)@@G@@                                        * @G@@@@. **********************TX
)@@G@@*********************************************** @[@@@@.     @[@@@@.     TY
)@@G@@@#@@@@G      PROC   .   @F@@@@GETNXT* NAME  .  PICK UP NEXT LEXICAL ITEMTZ
)@@G@@; EXITS ARE  ERR,END    @#@@@@       UNLI$T .   @E@@@@       LMJ   X4,0,UA
)@@G@@X4     . GO TO PICK UP ROUTINE IN LEXTOR  @E@@@@       J     G(1,1)     UB
)@@G@@ . ERR IN LEXCAN SHOULD NEVER HAPPEN@E@@@@       TNE,U A1,G(0,1)   . DIDUC
)@@G@@ WE GET WHAT WE SHOULD HAVE?  @A@@@@       J     GN0010      . YES, EXITUD
)@@G@@@E@@@@ DO G(0,1)=LEXOPR , GO GN$010 . IF LOOKING FOR OPR, EXIT    @C@@@@UE
)@@G@@. LOOKING FOR NAME, BUT END OF TEXT WILL DO...  @D@@@@       JNE,U A1,LEUF
)@@G@@XOPR G(1,1) . IF NOT OPR, ERROR     @F@@@@       TE,U  A0,AEOL     . IS UG
)@@G@@THE OPERATOR WE GOT END OF LINE?    @E@@@@       TNE,U A0,ALAMP    . NO,UH
)@@G@@ IS IT BEGINNING OF COMMENTS? @E@@@@       J     G(1,2)      . IF EITHERUI
)@@G@@, END OF STATEMENT EXIT @#@@@@GN$010* NAME .    @D@@@@       J     G(1,1UJ
)@@G@@)      . IF NEITHER, SYSTEM ERROR   @]@@@@GN0010 .    @#@@@@       LI$T UK
)@@G@@.     @#@@@@       END  .     @C@@@@/. FUNC HEADER LINE ANALYSIS AND PROUL
)@@G@@CESSING     @C@@@@.     ENTER WITH ADDR OF LEXICAL TEXT IN A2     @C@@@@UM
)@@G@@       STATEV  .         . DEFINE STATEVECTOR   @#@@@@       INSTRS  .  UN
)@@G@@@D@@@@FUNCST* SX   X11,FXLINK  . ENTRY FOR START OF A FUNC  @H@@@@. TO IUO
)@@G@@NSURE THAT LOCAL NAMES DO NOT MASK ARGS, FORCE ARG POINTERS TO DATA     UP
)@@G@@@D@@@@       SA    A2,FXLEXT   . SAVE HDR LINE TEXT ADDR    @ @@@@      UQ
)@@G@@ LA    A0,STVFND   .    @D@@@@       ABSADR A0         . ADDRESS OF DESCUR
)@@G@@R OF FUNC   @C@@@@       LA,S3 A0,0,A0     . NO OF ARGS FROM DESCR@D@@@@US
)@@G@@       JZ    A0,FX0006   . IF NILADIC, NO PROBLEM     @C@@@@       POP  UT
)@@G@@ A6          . ELSE LOOK AT TOP ARG @F@@@@       JE,U  A0,1 FX0003 . IF UU
)@@G@@ONLY ONE ARG, GO MAKE IT TEMPORARY  @F@@@@       SA    A6,FXLARG   . FORUV
)@@G@@ DYADS, SAVE POINTER TO LEFTARG     @G@@@@       VERIFY FX0007,,FX0008 .UW
)@@G@@ DECODE-- SYSERR IF STAKMARK OR UNDEFINED @G@@@@       PUSH  A6         UX
)@@G@@ . BE SURE STACK POINTS TO VALUE DESCR, NOT NAME@C@@@@       LA    A6,FXUY
)@@G@@LARG   . RECOVE R LEFTARG     @C@@@@FX0003 VERIFZ FX0007,,FX0008 . DECLDUZ
)@@G@@E OTHER ARG @E@@@@       PUSH  A6          . FORCE STACK TO POINT TO VALVA
)@@G@@UE    @E@@@@       LA    A2,FXLEXT   . RECOVER ADDR OF LEXICAL TEXT     VB
)@@G@@@D@@@@FX0006 LA,U  A0,FX0100   . SET ADDR OF EXECUTE TABLE  @ @@@@      VC
)@@G@@ J     FX0010      .    @G@@@@. AN ARG IS BAD- OCCURS IF A FUNC WHICH SHVD
)@@G@@OULD HAVE CREATED IT DIDN'T   @E@@@@FX0007 PUSH  A6          . FOR STAKMVE
)@@G@@ARKS, PUT THEM BACK     @C@@@@       ERROR YVALUE      . AND SIGNAL THE VF
)@@G@@ERROR @G@@@@FX0008 J     FX0999      . IF UNITIALIZED, ERR WAS SIGNALLEDVG
)@@G@@ BY VERIFY  @[@@@@.     @D@@@@. THIS ENTRY POINT TO ERASE LOCALS AT EXITVH
)@@G@@ FROM FUNC  @[@@@@.     @ @@@@FUNCEX* SX   X11,FXLINK  .    @G@@@@      VI
)@@G@@ SZ    FXANSR      . CLEAR DESCRIPTOR POINTER FOR RESULT OF FUNC  @C@@@@VJ
)@@G@@       LA,U  A0,FX0200   . ACTION TABLE ADDR    @ @@@@       J     FX001VK
)@@G@@0      .    @[@@@@.     @E@@@@. THIS ENTRY TO ERASE LOCALS DURING A STATVL
)@@G@@EVECTOR CLEAR ($G)@[@@@@.     @ @@@@FUNCLR* SX   X11,FXLINK  .    @ @@@@VM
)@@G@@       LA,U  A0,FX0210   .    @[@@@@.     @D@@@@FX0010 SA    A0,FXACTN  VN
)@@G@@ . SAVE ADDR OF ACTION RTNE   @D@@@@       LMJ   X11,LEXGET  . INITIALIZVO
)@@G@@E TO FETCH TEXT   @ @@@@       J     FX0999      .    @F@@@@. HDR LINE TVP
)@@G@@EXT IS STORED IN PAIRS AS (OPERAND,OPERATOR)- GET PAIR@G@@@@FX0020 GETNXVQ
)@@G@@T,LEXNAM FX0900,FX0300 . GET OPERAND (EXITS ARE ERR,END )   @D@@@@      VR
)@@G@@ SA    A0,FXNAMB   . TEMP SAVE NAMEBLOK ADDR    @G@@@@       GETNXT,LEXOVS
)@@G@@PR FX0900,FX0900 . GET OPR WHICH SHOULD FOLLOW NAME   @D@@@@       LA   VT
)@@G@@ A6,FXNAMB   . RECOVER ADDR OF NAMEBLOK   @E@@@@       J     *FXACTN    VU
)@@G@@ . GO TO ACTION RTNE (FX0100 OR 200)@A@@@@. ACTION RTNE FOR ENTRY TO FUNVV
)@@G@@C ... @C@@@@FX0100 COMJMP A0 AFNNAM,FX0020 AFNANS,FX0110 ;  @D@@@@      VW
)@@G@@                  AFNARG,FX0120 AFNLCL,FX0110 . @C@@@@. LOCAL VARIABLE OVX
)@@G@@R RESULT, CREATE UNINITIALIZED@ @@@@FX0110 LMJ   X11,CREATE  .    @ @@@@VY
)@@G@@       J     FX0999      .    @C@@@@       J     FX0020      . GO BACK FVZ
)@@G@@OR NEXT OPR @C@@@@. ARGUMENT (LEFT OR RIGHT) CREATE INITIALIZED   @ @@@@WA
)@@G@@FX0120 LMJ   X11,CRINIT  .    @ @@@@       J     FX0999      .    @ @@@@WB
)@@G@@       J     FX0020      .    @[@@@@.     @B@@@@. ACTION RTNES FOR EXIT WC
)@@G@@FROM FUNCTIONS    @[@@@@.     @C@@@@FX0200 COMJMP A0 AFNNAM,FX0220 AFNANWD
)@@G@@S,FX0230 ;  @D@@@@                        AFNARG,FX0240 AFNLCL,FX0240   WE
)@@G@@@C@@@@FX0210 COMJMP A0 AFNNAM,FX0020 AFNANS,FX0240 ;  @D@@@@            WF
)@@G@@           AFNARG,FX0240 AFNLCL,FX0240 .  @C@@@@. FUNC NAME-- PUT RESULTWG
)@@G@@ DESCRIPTOR INTO STACK  @ @@@@FX0220 LA    A6,FXANSR   .    @ @@@@      WH
)@@G@@ PUSH  A6          .    @D@@@@       J     FX0020      . CONTINUE PROCESWI
)@@G@@SING HEADER @A@@@@. FUNC RESULT, STACK AS TEMPORARY   @D@@@@FX0230 LMJ  WJ
)@@G@@ X11,DUPE    . REPRODUCE INTO TEMPORARY   @ @@@@       J     FX0999     WK
)@@G@@ .    @F@@@@       SA    A2,FXANSR   . SAVE POINTER TO TEMP FOR STACKINGWL
)@@G@@ LATER@F@@@@       LA    A6,FXNAMB   . RECOVER NAMEBLOK POINTER FOR ERASWM
)@@G@@URE   @C@@@@. ARGS, LOCAL VARIABLES--- ERASE THEIR VALUES   @ @@@@FX0240WN
)@@G@@ LMJ   X11,ERASEL  .    @ @@@@       J     FX0999      .    @ @@@@      WO
)@@G@@ J     FX0020      .    @[@@@@.     @A@@@@FX0300 LX    X11,FXLINK       WP
)@@G@@.     @A@@@@       J     1,X11            .     @[@@@@.     @A@@@@FX0900WQ
)@@G@@ ERROR YSYSTM,FX0999    .     @A@@@@FX0999 LX    X11,FXLINK       .     WR
)@@G@@@A@@@@       J     0,X11            .     @ @@@@       VARBLS           WS
)@@G@@ .    @ @@@@FXLEXT EQUF  $,,H1       .    @ @@@@FXLARG EQUF  $,,H2      WT
)@@G@@ .    @#@@@@       RES    1  .@ @@@@FXLINK EQUF  $,,H2       .    @#@@@@WU
)@@G@@       RES    1 . @F@@@@FXNAMB RES   1           . FOR TEMP STORAGE OF NWV
)@@G@@AMEBLOK POINTER   @F@@@@FXANSR RES   1           . TEMP STORAGE OF DESCRWW
)@@G@@ FOR FUNC RESULT  @#@@@@       VARCON .   @E@@@@FXACTN +0,$-$           WX
)@@G@@ . CAUTION, INDIRECTION THRU HERE   @]@@@@       END  ___@@@.     @D@@@@WY
)@@G@@FX0010 SA    A0,FXACTN   . SAVE ADDR OF ACTION RTNE   @D@@@@       LMJ  WZ
)@@G@@ X11,LEXGET  . INITIALIZE TO FETCH TEXT   @ @@@@       J     FX0999     XA
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************XB
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APXC
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         XD
)@@G@@                            * @G@@@@       AXR$         .               XE
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSXF
)@@G@@EMBLY PARAMETERS                        * @G@@@@       APSYMB.     DEFINXG
)@@G@@E APL SYMBOL SET                              * @G@@@@       WSDEF.     XH
)@@G@@ DEFINE WORKSPACE                                   * @G@@@@WORKSP INFO XI
)@@G@@ 2 20.      SET ASIDE THE SPACE                           * @G@@@@      XJ
)@@G@@ RUNCTL.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@XK
)@@G@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE                      * XL
)@@G@@@G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES             XM
)@@G@@    * @G@@@@.                                                           XN
)@@G@@          * @G@@@@. END OF STANDARD PROC BLOCK                          XO
)@@G@@                * @G@@@@. **********************************************XP
)@@G@@*********************** @[@@@@.     @[@@@@.     @F@@@@P      PROC       XQ
)@@G@@       . DOUBLE JUMP LESS THAN, DESTROIES A2,A3 @ @@@@FJL*   NAME       XR
)@@G@@       .    @ @@@@       UNLI$T            .    @ @@@@       DLM     A2,XS
)@@G@@P(1,1) .    @ @@@@       DAN    A2,P(1,2)  .    @D@@@@       DJZ   A2,$+XT
)@@G@@2      .  IF NUMBER = DO NO JUMP    @E@@@@       JN     A2,P(1,3)  .  IFXU
)@@G@@ NUMBER LESS THAN VALUE JUMP  @ @@@@       LI$T              .    @ @@@@XV
)@@G@@       END               .    @ @@@@S      PROC              .    @ @@@@XW
)@@G@@STASH* NAME              .    @ @@@@       LMJ    X2,0,X2    .    @ @@@@XX
)@@G@@       END               .    @ @@@@O      PROC              .    @ @@@@XY
)@@G@@ODIGIT* NAME             .    @ @@@@       UNLI$T            .    @ @@@@XZ
)@@G@@       LA     A1,A2      .    @ @@@@       SSL    A1,32      .    @ @@@@YA
)@@G@@       LDSL   A2,4       .    @ @@@@       AA,U   A1,AZERO   .    @ @@@@YB
)@@G@@       STASH             .    @ @@@@       LI$T              .    @]@@@@YC
)@@G@@       END  @ @@@@OS     PROC              .    @ @@@@OPOINT*  NAME     YD
)@@G@@       .    @ @@@@CH     EQU    ADECPT     .    @ @@@@       GO     OSS YE
)@@G@@       .    @ @@@@OSPACE* NAME             .    @ @@@@CH     EQU    ASPAYF
)@@G@@CE     .    @ @@@@       GO     OSS        .    @]@@@@OMINUS* NAME@ @@@@YG
)@@G@@CH     EQU    AUMINS     .    @ @@@@       GO     OSS        .    @ @@@@YH
)@@G@@OSS*   NAME              .    @ @@@@       UNLI$T            .    @ @@@@YI
)@@G@@       LA,U   A1,CH      .    @ @@@@       STASH             .    @ @@@@YJ
)@@G@@       LI$T              .    @ @@@@       END               .    @[@@@@YK
)@@G@@.     @ @@@@C      PROC              .    @ @@@@INTCON* NAME            YL
)@@G@@ .    @#@@@@CEND   EQU    C(1)@ @@@@       UNLI$T            .    @D@@@@YM
)@@G@@       DO     CEND ,     ; INITALIZATION IF COUNTING  @ @@@@       LR,U YN
)@@G@@  R1,C(1,1)-1 .   @C@@@@C010   DSL    A0,36      . SHIFT FOR DIVISION   YO
)@@G@@@B@@@@       DI,U   A0,10      . DIVIDE BY TEN  @B@@@@       TSL    A1,4YP
)@@G@@       . SAVE REMAINDER @B@@@@       AA,U   A6,1       . INCREMENT COUNTYQ
)@@G@@@B@@@@       DO     CEND ,     ; ENDING IF COUNT@ @@@@       JGD    R1,CYR
)@@G@@010    .    @C@@@@       JNZ    A0,C010    . NORMAL TERMINATION   @ @@@@YS
)@@G@@       LI$T              .    @]@@@@       END  @ @@@@T       PROC      YT
)@@G@@       .    @ @@@@FTWR*   NAME             .    @ @@@@REG     EQU   T(1,YU
)@@G@@1)     .    @ @@@@BIG     EQU   T(2,2)     .    @ @@@@LESS    EQU   T(2,YV
)@@G@@1)     .    @ @@@@        UNLI$T           .    @ @@@@        TLE   REG,YW
)@@G@@(1.0D)  .   @ @@@@        J     LESS       .    @ @@@@        TG    REG,YX
)@@G@@(10.0D)  .  @ @@@@        J     BIG        .    @ @@@@        LI$T      YY
)@@G@@       .    @ @@@@        END              .    @[@@@@/.    @C@@@@.     YZ
)@@G@@             NUMERICAL FORMAT ROUTINES    @E@@@@.        THESE ROUTINES ZA
)@@G@@CONVERT NUMBERS TO APL CHARACTERS . @E@@@@.        THE CHARACTERS GENERAZB
)@@G@@TED ARE STASHED BY THE SYSTEM @G@@@@.        OUTPUT LINE HANDLER. BEFOREZC
)@@G@@ ENTRY TO THE ROUTINE RELOAD THE    @E@@@@.        BUFFER CONTROL REGISTZD
)@@G@@ERS, AND AFTER STORINNG THEY  @F@@@@.        SHOULD BE FLUSHED. THE NUMBZE
)@@G@@ER TO BE CONVERTED SHOULD BE  @E@@@@.        STORED SIGN-EXTENDED INTO AZF
)@@G@@4,A5 THE ROUTINES HANDLE@E@@@@.        DFLOATING AND INTEGER NUMBERS TO ZG
)@@G@@60 BITS IN LENGTH.@E@@@@.        A0,A1 ARE FORMAT CONTROL REGISTERS, FORZH
)@@G@@ GENERAL USE@E@@@@.        SET THEM TO ZERO. THEN LMJ TO DESIRED ENTRY PZI
)@@G@@OINT, @A@@@@.        CONTROL RETURNS TO 1,X11.  @C@@@@.                 ZJ
)@@G@@ ENTRY FORMI- INTEGER,IFORMAT @C@@@@.                        FORMD- FLOAZK
)@@G@@TING,DFORMAT@D@@@@.                        FORME- FLOATING, EFORMAT     ZL
)@@G@@@D@@@@.                        FORMG- FLOATING,D OR E FORMAT@[@@@@.     ZM
)@@G@@@[@@@@.     @ @@@@/.     'G' FORMAT ROUTINE     @#@@@@       INSTRS .   ZN
)@@G@@@B@@@@FORMG* SX    X11,FGLINK  . SAVE RETURN    @ @@@@       JNZ   A0,FGZO
)@@G@@1070   .    @C@@@@       DJZ   A4,FG1050   . HARD ZERO D-FORMAT   @F@@@@ZP
)@@G@@       FJL   A4,FGLLMT,FG1070 . E-FORMAT LESS THAN LOWER LIMIT    @C@@@@ZQ
)@@G@@       LA     A0,WSDGTS  . GET NUMBER OF DIGITS @A@@@@       AA,U   A0,7ZR
)@@G@@       . ADD SEVEN@ @@@@       DSL    A0,36      .    @F@@@@       DI,U ZS
)@@G@@  A0,18      . SEPERATE INTO POWERS OF 10 AND 10*18'S @C@@@@       LDSL ZT
)@@G@@  A0,1       . MULTIPLY BOTH BY 2   @A@@@@       DL     A1,PWR10,A1     ZU
)@@G@@.     @A@@@@       DFM    A1,PWR18,A0     .     @E@@@@       DL     A0,AZV
)@@G@@1      . PUT MAX INTO A0,A1 FOR TESTING   @ @@@@       FJL   A4,A0,FG105ZW
)@@G@@0    .@#@@@@       SZ     A0  @ @@@@       J     FG1070      .    @^@@@@ZX
)@@G@@FG1050 .     DFORMAT    @ @@@@       DSL   A0,72       .    @ @@@@      ZY
)@@G@@ LMJ   X11,FORMD   .    @ @@@@       ER    ERR$        .    @ @@@@      ZZ
)@@G@@ OSPACE            .    @ @@@@       J     FG1090      .    @#@@@@FG1070AA
)@@G@@ . E FORMAT @G@@@@       SA     A0,FGFEFL  . SAVE FLAG INDICATING FIXED AB
)@@G@@OR VARIABLE WIDTH @G@@@@       LMJ    X11,FO8500 . GET DECIMAL EXPT. IN AC
)@@G@@A0, MANTISA OF NUM IN A4@G@@@@       SA     A0,FGEEXP  . SAVE DECIMAL EXAD
)@@G@@PONENT SO WE CAN PRINT IT     @D@@@@       TP     FOSIGN     . IF SIGN OAE
)@@G@@F NUM WAS NEG     @D@@@@       DLN    A4,A4      . NEGATE MANTISA OF NUMAF
)@@G@@BER   @E@@@@       LA     A0,WSDGTS  . GET NUMBER OF SIGNIFICIANT DIGITSAG
)@@G@@@E@@@@       ANU,U  A0,1       . SET FAFTER TO 1 LESS THAN DIGITS @F@@@@AH
)@@G@@       AA,U   A0,2       . SET FIELD WIDTH TO 2 MORE THAN DIGITS  @D@@@@AI
)@@G@@       TNZ    FGFEFL     . IF VARIABLE WIDTH E-FORMAT @F@@@@       DSL  AJ
)@@G@@  A0,72      . SET THE FORMAT CONTROL REGS. TO ZERO   @F@@@@       LMJ  AK
)@@G@@  X11,FORMD  . CALL D-FORMAT ROUTINE, PRINTING MANTISA@E@@@@       ER   AL
)@@G@@  ERR$       . SYSTEM ERROR IF WE EVER GET HERE @B@@@@       LA,U   A1,AAM
)@@G@@E      . GET AN 'E'     @D@@@@       STASH             . SITCK IT INTO TAN
)@@G@@HE PRINTLINE@F@@@@       LA     A4,FGEEXP  . GET THE TENS EXPONENT OF THAO
)@@G@@E NUMBER    @B@@@@       DSA    A4,36      . SIGN EXTEND IT @F@@@@      AP
)@@G@@ LNA,U  A0,5       . SET FORMAT CONTROL REG. FOR FIXED WIDTH@D@@@@      AQ
)@@G@@ TNZ    FGFEFL     . IF VARIABLE WIDTH E-FORMAT @E@@@@       DSL    A0,7AR
)@@G@@2      . CLEAR THE FORMAT CONTROL REGISTER@D@@@@       LMJ    X11,FORMI AS
)@@G@@ . PRINT THE TEN'S EXPONENT   @F@@@@       NOP               . SYSTEM ERAT
)@@G@@ROR IF THIS GUY EVER EXECUTED @D@@@@       TZ     FGFEFL     . IF FIXED AU
)@@G@@WIDTH E-FORMAT    @A@@@@       J      FG1090       RETURN   @D@@@@      AV
)@@G@@ OSPACE            . ELSE, OUTPUT ONE SPACE     @ @@@@FG1090 LX    X11,FAW
)@@G@@GLINK  .    @ @@@@       J     1,X11       .    @ @@@@       VARBLS     AX
)@@G@@       .    @ @@@@FGLINK RES   1           .    @#@@@@FGFEFL RES    1   AY
)@@G@@@ @@@@       CONSTS            .    @D@@@@FGLLMT +0.00001D          .  SAZ
)@@G@@MALEST NUMBER D-FORMAT  @]@@@@       .    @A@@@@       .      INTEGER GEBA
)@@G@@NERAL FORMAT@]@@@@       .    @ @@@@       INSTRS            .    @#@@@@BB
)@@G@@FORMGI*       .   @ @@@@       SX     X11,FHGFLG .    @ @@@@       SZ   BC
)@@G@@  A3         .    @ @@@@       J      FI0005     .    @#@@@@FORMI*      BD
)@@G@@ .    @E@@@@       SZ    FHGFLG      .  NOT'G' ENTRY, NO TRAILING SPACESBE
)@@G@@@F@@@@       SA    A0,A3       .  MOVE FORMAT CONTROL OUT OF THE WAY    BF
)@@G@@@[@@@@.     @]@@@@FI0005  .   @C@@@@       LMA    A5,A5      .    GET ABBG
)@@G@@S VALUE     @C@@@@       LR,U   R1,7       .    SET UP FOR SEARCH @ @@@@BH
)@@G@@       LX     A0,(-1,7)  .    @G@@@@       SLE    A5,FITENS-1,*A0   .   BI
)@@G@@ FIND LARGEST POWER OF TEN SMALLER  @D@@@@       NOP               .    BJ
)@@G@@       THAN THE NUMBER  @D@@@@       LA,U   A1,1,A0    .    GET WIDTH INBK
)@@G@@ DIGITS     @B@@@@       TP     A4         .    ADD ONE TO  @E@@@@      BL
)@@G@@ AA,U  A1,1        .       WIDTH IF NUMBER IS NEGATIVE@D@@@@       LMA  BM
)@@G@@ A2,A3       . GET ABS VALUE OF WIDTH     @D@@@@       ANA   A2,A1      BN
)@@G@@ . SUBTRACT NUMBER OF DIGITS  @D@@@@       SZ    R2          . CLEAR TRABO
)@@G@@ILING BLANK COUNT @G@@@@       JZ    A3,$+3      .  IF WIDTH WAS ZERO CLBP
)@@G@@EAR LEADING BLANK COUNT @G@@@@       JP    A3,$+3      . IF WIDTH WAS POBQ
)@@G@@SITIVE OUTPUT LEADING BLANKS  @F@@@@       SA    A2,R2       .  BUT IF NBR
)@@G@@EGATIVE OUTPUT TRAILING BLANKS@E@@@@       SZ    A2          .  SO CLEARBS
)@@G@@ THE LEADING BLANK COUNT@ @@@@FI0010 JNGD  A2,FI0020   .    @ @@@@      BT
)@@G@@ OSPACE            .    @ @@@@       J     FI0010      .    @ @@@@FI0020BU
)@@G@@ JP    A4,FI0030   .    @ @@@@       OMINUS            .    @ @@@@FI0030BV
)@@G@@ LA     A2,A5      .    @ @@@@FI0040 SZ     A1         .    @A@@@@      BW
)@@G@@ DI     A1,FITENS,A0    .     @A@@@@       LA,U   A1,AZERO,A1     .     BX
)@@G@@@ @@@@       STASH             .    @ @@@@       JMGI   A0,FI0040  .    BY
)@@G@@@C@@@@       TZ     FHGFLG     .    IF'G' ENTRY ALWAYS@E@@@@       LR,U BZ
)@@G@@  R2,2       .      STASH TWO TRAILING BLANKS   @ @@@@FI0050 JNGD  R2,1,CA
)@@G@@X11    .    @ @@@@       OSPACE            .    @ @@@@       J     FI005CB
)@@G@@0      .    @[@@@@.     @[@@@@.     @[@@@@.     @ @@@@       CONSTS     CC
)@@G@@       .    @ @@@@FITENS          1        .    @ @@@@               10 CD
)@@G@@       .    @ @@@@              100        .    @ @@@@             1000 CE
)@@G@@       .    @ @@@@            10000        .    @ @@@@           100000 CF
)@@G@@       .    @ @@@@          1000000        .    @ @@@@        VARBLS    CG
)@@G@@       .    @ @@@@FHGFLG RES    1          .    @ @@@@FINMBR RES   2    CH
)@@G@@       .    @ @@@@FILINK RES   1           .    @ @@@@FHLINK RES    1   CI
)@@G@@       .    @]@@@@       .    @A@@@@       .      DECIMAL FORMAT ROUTINECJ
)@@G@@@]@@@@       .    @#@@@@       INSTRS .   @C@@@@FORMD* SX     X11,FODLNKCK
)@@G@@ . SAVE RETURN ADDRESS  @E@@@@       DS     A0,FWIDTH  . SAVE FORMAT CONCL
)@@G@@TROL INFORMATION  @F@@@@       DS     A4,FONMBR  . SAVE THE NUMBER, FOR CM
)@@G@@LATER REFERENCE   @D@@@@       LMJ    X11,FO8500 . GET TENS EXPONENT OF CN
)@@G@@NUMBER@A@@@@       SA     A0,FOEXPT  . SAVE IT  @]@@@@       .    @G@@@@CO
)@@G@@       .      NOW TO CONVERT THE NUMBER TO DECIMAL WE WILL MULTIPLY     CP
)@@G@@@G@@@@       .      (OR DIVIDE) THE NUMBER BY SOME POWER OF TEN SUCH THACQ
)@@G@@T     @G@@@@       .      THE RESULT IS AN INTEGER WITH THE PROPER NUMBECR
)@@G@@R OF DIGITS @B@@@@       .      FOR THE SPECIFIED ACCURACY  @]@@@@      CS
)@@G@@ .    @G@@@@       ANA    A0,WSDGTS  . THAT POWER OF TEN IS TEN TO THE ECT
)@@G@@XPT-DIGITS  @A@@@@       AA,U   A0,1       . PLUS 1   @]@@@@       .    CU
)@@G@@@E@@@@       LMA    A1,A0      . GET ABS VALUE OF POWER OF TEN    @C@@@@CV
)@@G@@       DSA    A1,36      . PREPARE TO DIVIDE    @B@@@@       DI,U   A1,1CW
)@@G@@8      . DIVIDE BY 18   @C@@@@       LDSL   A1,1       . MULTIPLY BOTH BCX
)@@G@@Y 2   @E@@@@       DL     A2,PWR10,A2 . INDEX INTO POWER OF TENS TABLE  CY
)@@G@@@F@@@@       DFM    A2,PWR18,A1 . MULTIPLY BY POWER OF TEN TO THE 18TH  CZ
)@@G@@@]@@@@       .    @D@@@@       DLM    A4,FONMBR  . GET ABS VALUE OF NUMBDA
)@@G@@ER    @F@@@@       TP     A0         . IF NUMBER WAS SMALLER THAN DESIREDB
)@@G@@D     @D@@@@       DFM    A4,A2      .  MULTIPLY BY POWER OF TEN  @F@@@@DC
)@@G@@       TN     A0         . IF NUMBER WAS BIGGER  THAN DESIRED     @D@@@@DD
)@@G@@       DFD    A4,A2      .  DIVIDE   BY POWER OF TEN  @]@@@@       .    DE
)@@G@@@A@@@@       DFU    A0,A4      . UNPACK   @ @@@@       LNA    A0,A0     DF
)@@G@@ .    @A@@@@       DSA    A1,02074,A0 . TRUNCATE@ @@@@       DSL    A4,0DG
)@@G@@2073,A0    .@ @@@@       JNB    A5,$+2     .    @ @@@@       DA     A1,(DH
)@@G@@1D)    .    @ @@@@       DL     A4,A1      .    @G@@@@       LMJ    X11,DI
)@@G@@FO7000 . CALL BINARY TO DECIMAL ROUTINE, BCD IN A2,A3 @B@@@@       LA   DJ
)@@G@@  A0,FOEXPT  . GET EXPONENT   @F@@@@       AA,U  A0,1        . ADD 1, GIDK
)@@G@@VING DIGITS BEFORE THE PT     @A@@@@FO3025 TG,U   A0,1       . NDB >= 1 DL
)@@G@@@B@@@@       J      FO3030     .  YES,GO ON     @E@@@@       DSL    A2,4DM
)@@G@@       .  NO, GENERATE A LEADING ZERO     @C@@@@       AA,U   A0,1      DN
)@@G@@ .  INCREMENT COUNT     @A@@@@       J      FO3025     .  LOOP    @E@@@@DO
)@@G@@       .      CALCULATE NUMBER OF LEADING BLANKS NEEDED     @D@@@@FO3030DP
)@@G@@ LA     A1,FWIDTH  .    GET THE FIELD WIDTH     @F@@@@       ANA    A1,FDQ
)@@G@@AFTER  .    SUBTRACT DIGITS AFTER THE POINT     @F@@@@       ANA    A1,ADR
)@@G@@0      .             DIGITS BEFORE THE POINT    @F@@@@       ANA,U  A1,1DS
)@@G@@       .             ONE (FOR DECIMAL POINT)    @D@@@@       TP     FONMDT
)@@G@@BR     .    IF NUMBER IS NEGATIVE   @F@@@@       ANA,U  A1,1       .    DU
)@@G@@ SUBTRACT ANOTHER ONE FOR MINUS SIGN@G@@@@       LR     R1,A1      .    DV
)@@G@@LOAD REGISTER WITH NUMBER OF LEADING BLNKS@A@@@@       .      OUTPUT LEADW
)@@G@@DING SPACES @ @@@@FO3040 LA,U   A1,ASPACE  .    @ @@@@       JNGD   R1,FDX
)@@G@@O3050  .    @ @@@@       STASH             .    @ @@@@       J      FO30DY
)@@G@@40     .    @D@@@@       .      OUTPUT A MINUS SIGN IF NUMBER NEGATIVE  DZ
)@@G@@@ @@@@FO3050 TN     FONMBR     .    @ @@@@       J      FO3060     .    EA
)@@G@@@ @@@@       OMINUS            .    @C@@@@       .      OUTPUT DIGITS BEEB
)@@G@@FORE THE POINT    @ @@@@FO3060 JNGD   A0,FO3080  .    @ @@@@       ODIGIEC
)@@G@@T            .    @ @@@@       J      FO3060     .    @]@@@@       .    ED
)@@G@@@ @@@@FO3080 TNZ   FWIDTH      .    @G@@@@       J      FO3120     .  OREE
)@@G@@ NEG LEFT ADJUSTING SUPPRESS TRAILING DIGI@F@@@@       LMA    A0,FAFTER EF
)@@G@@ .  GET NUMBER OF DIGITS AFTER THE POINT  @ @@@@       LA,U  A4,AZERO   EG
)@@G@@ .    @E@@@@       TP     FAFTER     .  IF FAFTER  POSITIVE, ZERO FILL  EH
)@@G@@@D@@@@       LA,U   A4,ASPACE  .    OTHERWIZE BLANK FILL    @F@@@@      EI
)@@G@@ DJZ   A2,$+2      .    ARE TEHERE DIGITS AFTER THE POINT   @F@@@@      EJ
)@@G@@ J     $+3         .     YES, OUTPUT A POINT AND CUTPUT THEM@E@@@@      EK
)@@G@@ LA,U  A1,ASPACE   .     NO, IF WE ARE ZERO FILLING   @D@@@@       TE,U EL
)@@G@@ A4,ASPACE   .       OUTPUT A POINT ('.') @G@@@@       LA,U  A1,ADECPT  EM
)@@G@@ .       IF WE ARE SPACE FILLING OUTPUT A SPACE @B@@@@       STASH      EN
)@@G@@       .       INSTEAD  @B@@@@FO3090 JGD    A0,$+2     .   MORE TO DO?  EO
)@@G@@@B@@@@       J      FO3150     .    NO, QUIT    @C@@@@       DJZ    A2,FEP
)@@G@@O3100  .    ANY MORE DIGITS   @ @@@@       ODIGIT            .    @A@@@@EQ
)@@G@@       J      FO3090     .    LOOP  @B@@@@FO3100 LA     A1,A4      .    ER
)@@G@@LOAD FILLER @B@@@@       STASH             .    OUTPUT IT   @A@@@@      ES
)@@G@@ J      FO3090     .    LOOP  @ @@@@FO3120 DJZ    A2,FO3150  .    @ @@@@ET
)@@G@@       OPOINT            .    @ @@@@FO3130 ODIGIT            .    @ @@@@EU
)@@G@@       DJZ    A2,FO3150  .    @ @@@@       J      FO3130     .    @ @@@@EV
)@@G@@FO3150 LX     X11,FODLNK .    @B@@@@       J      1,X11      . NORMAL REEW
)@@G@@TURN  @[@@@@.     @[@@@@.     @ @@@@FO7000 .       INTEGER TO BCD @C@@@@EX
)@@G@@       DSL    A2,72      . CLEAR ANSWER REGS.   @A@@@@       DI    A4,(1EY
)@@G@@0000000000) .     @B@@@@       SZ     A6         . CLEAR COUNT    @G@@@@EZ
)@@G@@       JZ     A4,FO7020  . IF MORE THAN TEN DIGITS FIRST PRODUCE TEN    FA
)@@G@@@D@@@@       LA     A0,A5      . GET LEASH SIG. 10 DIGITS   @B@@@@      FB
)@@G@@ INTCON 10         . CONVERT THEM   @C@@@@       LA     A0,A4      . THEFC
)@@G@@N CONVERT THE REST@ @@@@       J      FO7030     .    @D@@@@FO7020 LA   FD
)@@G@@  A0,A5      . IF NOT CONVERT ONLY THE LSH@ @@@@FO7030 INTCON           FE
)@@G@@ .    @A@@@@       J      0,X11      . RETURN   @D@@@@/      INSTRS     FF
)@@G@@       .    FORCE TO WITHIN RANGE   @C@@@@FO8500 DJZ    A4,FO8580  .    FG
)@@G@@ZERO SPECIAL CASE @D@@@@       SA     A4,FOSIGN  .    SAVE SIGN OF NUMBEFH
)@@G@@R     @D@@@@       DLM    A4,A4      .    GET MAGNITUDE OF NUMBER @C@@@@FI
)@@G@@       .      ESTIMATE 10'5 EXPONENT OF NUMBER  @A@@@@       LA     A0,AFJ
)@@G@@4      .    GET   @D@@@@       SSL    A0,24      .     TWO'S EXPONENT (BFK
)@@G@@IASED)@C@@@@       ANA,U  A0,02000   .    SUBTRACT BIAS     @E@@@@      FL
)@@G@@ MF     A0,FOLOG2  .    MULTIPLY BY    LOG 2 BASE 10  @G@@@@       .    FM
)@@G@@  USE ESTIMATE OF 10'S EXPONENT TO FORCE NUMBER TO  1<X<10  @D@@@@      FN
)@@G@@ LMA    A1,A0      .    GET ABS VALUE OF EXP    @ @@@@       DSA    A1,3FO
)@@G@@6      .    @B@@@@       DI,U   A1,18      .    DIVIDE BY 18@F@@@@      FP
)@@G@@ LDSL   A1,1       .    MULTIPLY QUOTENT AND REMAINDER BY 2 @G@@@@      FQ
)@@G@@ DL     A2,PWR10,A2 .   GIVING INDEX INTO TABLES OF POWERS OF 10  @F@@@@FR
)@@G@@       DFM    A2,PWR18,A1 .    AND POWERS OF TEN TO THE 18'TH     @ @@@@FS
)@@G@@       JP     A0,FO8540  .    @E@@@@       DFM    A4,A2      .    NUMBERFT
)@@G@@ LESS THAN 1 SO MULTIPLY@E@@@@       J      FO8570     .    GO MAKE FINEFU
)@@G@@ ADJUST MENTS     @E@@@@FO8540 DFD    A4,A2      .    NUMBER MORE THAN 1FV
)@@G@@ SO DIVIDE  @B@@@@       J      FO8570     .    ALSO FIXUP  @G@@@@      FW
)@@G@@ .      MAKE SURE NUMBER IN PROPER RANGE  1<=X<10 (ENTER FO8570)  @C@@@@FX
)@@G@@FO8560 DFD    A4,(10.0D) .   DIVIDE NUMBER BY 10@C@@@@       AA,U   A0,1FY
)@@G@@       .    INCREMENT EXP     @B@@@@       J      FO8570     .     TEST FZ
)@@G@@AGAIN @D@@@@FO8565 DFM    A4,(10.0D) .   MULTIPLY NUMBER BY 10    @C@@@@GA
)@@G@@       ANA,U  A0,1       .    DECREMENT EXP     @E@@@@FO8570 TG     A4,(GB
)@@G@@10.0D) .    TEST NUMBER FOR UPPER LIMINT  @B@@@@       J      FO8560    GC
)@@G@@ .     TO BIG     @C@@@@       TLE    A4,(1.0D)  .    TEST LOWER LIMIT  GD
)@@G@@@B@@@@       J      FO8565     .     TO SMALL   @G@@@@       .      NOW GE
)@@G@@NUMBER IS IN RANGE, ROUND IT TO CORRECT SIGNIFICENCE  @B@@@@       LA   GF
)@@G@@  A1,WSDGTS  .    GET DIGITS  @F@@@@       LSSL   A1,1       .    MULTIPGG
)@@G@@LY BY 2 GIVING TABLE INDEX    @A@@@@       DFM    A4,PWR10-2,A1   .     GH
)@@G@@@A@@@@       DFA    A4,(0.5D)  .    ROUND @B@@@@       DFA    A4,UNZERO GI
)@@G@@ .    TRUNCATE    @A@@@@       DFD    A4,PWR10-2,A1   .     @E@@@@      GJ
)@@G@@ TLE    A4,(10.0D) .    DID WE ROUND UP OUT OF RANGE? @B@@@@       J    GK
)@@G@@  0,X11      .    NO, RETURN  @B@@@@       DFD    A4,(10.0D) .    YES, PGL
)@@G@@ATCH  @ @@@@       AA,U   A0,1       .    @A@@@@       J      0,X11     GM
)@@G@@ .   RETURN @C@@@@       .      HANDLE  SPECIAL CASE OF  ZERO     @ @@@@GN
)@@G@@FO8580 DSL    A4,72      .    @ @@@@       SZ     A0         .    @ @@@@GO
)@@G@@       SZ     FOSIGN     .    @ @@@@       J      0,X11      .    @]@@@@GP
)@@G@@       .    @#@@@@       VARBLS     @#@@@@FOSIGN RES   1    @]@@@@FGEEXPGQ
)@@G@@ RES 1@#@@@@       CONSTS     @#@@@@UNZERO +02074D*/60@^@@@@FOLOG2 +0110GR
)@@G@@040465025   @[@@@@/.    @#@@@@       INSTRS     @E@@@@FORMS*  .      ARRGS
)@@G@@AY SCANING ROUTINE SETS FORMAT PARAMETERS @G@@@@.                       GT
)@@G@@ FIND LARGEST AND SMALEST ELEMENTS IN ARRAY     @C@[@@       SZ     FSNFGU
)@@G@@LG     . CLEAR NEG NUMBER FLAG@C@@[[       SA      A3,FSMODE . SAVE MODEGV
)@@G@@ OF DATA    @ @@[[       TE,U    A3,ZMOHFI .    @ @@[[       TNE,U   A3,GW
)@@G@@ZMODFL .    @ @@[[       J       $+2       .    @ @@[[       J       1,XGX
)@@G@@11     .    @A[@@@       LR     R1,A15     . SAVE     @A@@@@       LR   GY
)@@G@@  R2,X6      .  COUNT   @C@@@@       LR     R3,X7      .   AND PICK RIGHGZ
)@@G@@T REGS@E@@@@       DSL    A0,72      . CLEAR,   REG  CONTAINING MINIMUM HA
)@@G@@@E@@@@       DL     A2,A0      .          REG  CONTAINING MAXIMUM @C@@@@HB
)@@G@@       J      FS0100     . GO TO BOTTOM OF LOOP @C@@@@FS0050 LMJ    X6,0HC
)@@G@@,X6    .   FETCH,NEXT ELEMENT @ @@@@       TP     A4         .    @D@[@@HD
)@@G@@       SA     A4,FSNFLG  . IF NUMBER NEG SET NEG FLAG @C[@@@       DLM  HE
)@@G@@  A4,A4      .   GET ABSOLUTE VALUE @E@@@@       DJZ    A4,FS0100  .   IHF
)@@G@@F ELEMENT IS ZERO SKIP IT     @F@@@@       DJZ    A0,FS0060  .   IF WE HHG
)@@G@@AVE NO MINIMUM YET, GET ONE   @E@@@@       DTG    A0,A4      .   COMPAIRHH
)@@G@@  MINIMUM WITH NEW ITEM @E@@@@FS0060 DL     A0,A4      .    SMALER, NEW HI
)@@G@@BECOMES MINIMUM   @E@@@@FS0070 DTLE   A2,A4      .    LARGER, COMPAIR WIHJ
)@@G@@TH MAXIMUM  @E@@@@       DL     A2,A4      .      LARGER, NEW BECOMES MAHK
)@@G@@X     @C@@@@FS0100 JGD    A15,FS0050 .      SMALLER, LOOP   @A@@@@      HL
)@@G@@ LX     X6,R2      . RELOAD   @A@@@@       LX     X7,R3      .  POINTERSHM
)@@G@@@B@@@@       LA     A15,R1     .   AND COUNTERS @G@[@@       TEP    A2,(HN
)@@G@@0400040,0)   .  CHECK LARGEST FOR D-FLOATING POINT    @B@[@@       J    HO
)@@G@@  FS0200     . DOUBLE FLOATING@F@[@@       JNZ   A2,1,X11        .  CHARHP
)@@G@@ACTER DONT TRY TO FORMAT IF   @ @@[[       LA      A4,FSMODE .    @ @@[[HQ
)@@G@@       TE,U    A4,ZMOHFI .    @ @@[[       J       FS0200    .    @^#@@@HR
)@@G@@       LA,U    A0,2  .  @B@@@@FS0125 DI,U   A2,10      . DIVIDE BY 10   HS
)@@G@@@C@@@@       JZ    A2,$+4      . IF NO QUOTENT QUIT   @C@@@@       AA,U HT
)@@G@@ A0,1        . INCREMENT DIGIT COUNT@C@@@@       DSL   A2,36       . RIGHU
)@@G@@HT JUSTIFY QUOTENT@A@@@@       J     FS0125      . LOOP     @D@@@@      HV
)@@G@@ SZ     A1         . CLEAR OTHER FORMAT REG     @A@@@@       J      1,X1HW
)@@G@@1      . RETURN   @B@@@@FS0200 SX    X11,R3      . SAVE RETURN    @ @@@@HX
)@@G@@       TLE    A0,FGLLMT  .    @ @@@@       J      FS0300     .    @ @@@@HY
)@@G@@       DS    A0,FSTEMP   .    @ @@@@       DL    A4,A2       .    @D@@@@HZ
)@@G@@       LMJ   X11,FO8500  . GET EXPONENT OF MAXIMUM    @ @@@@       LA   IA
)@@G@@ A1,WSDGTS   .    @D@@@@       AA,U  A1,8        . FIND DIGITS PLUS EIGHIB
)@@G@@T     @D@@@@       TG    A0,A1       . IS MAXIMUM < DIGITS +EIGHT @D@@@@IC
)@@G@@       J     FS0300      .  NO,WE MUST USE E FORMAT   @C@@@@       DL   ID
)@@G@@ A4,FSTEMP   . YES, RELOAD MINIMUM  @E@@@@       DS    A0,FSTEMP   . ANDIE
)@@G@@ SAVE MAX EXP AND DIGITS+8    @ @@@@       LMJ    X11,FO8500 .    @ @@@@IF
)@@G@@       LA    A1,WSDGTS   .    @ @@@@       TN    A0          .    @G@@@@IG
)@@G@@       ANA   A1,A0       . SUBTRACT EXPONENT OF SMALLEST FROM DIGITS    IH
)@@G@@@^@@@@       AU    A1,FSTEMP .@ @@@@       TG    A2,FSTEMP+1 .    @ @@@@II
)@@G@@       J     FS0300      .    @ @@@@       LA    A0,A2       .    @ @@@@IJ
)@@G@@       AA,U  A0,2        .    @ @[@@       TP     FSNFLG     .    @ @[@@IK
)@@G@@       AA,U   A0,1       .    @ ]@@@       J     FS0400      .    @]@@@@IL
)@@G@@FS0300 .    @ @@@@       DSL   A0,72       .    @ @@@@       LA,U    A0,IM
)@@G@@1      .    @ @@@@FS0400 LX    X11,R3      .    @ @@@@       J     1,X11IN
)@@G@@       .    @ @@@@       VARBLS            .    @ @@@@FSTEMP RES   2    IO
)@@G@@       .    @ @[@@FSNFLG RES    1          .    @ @@[[FSMODE EQUF    $,,IP
)@@G@@Q1     .    @ @@[[       RES     1         .    @[[@@@/.    @ @@@@      IQ
)@@G@@ VARBLS            .    @D@@@@FODLNK RES    1          . RETURN, DECIMALIR
)@@G@@ FORMATING  @]@@@@FOTLNK RES 1@C@@@@FOEXPT RES    1          . DECIMAL EIS
)@@G@@XPONENT     @ @@@@FONDB  RES    1          .    @C@@@@FONMBR RES    2   IT
)@@G@@       . NUMBER TO BE FORMATED@]@@@@FOLLMT RES 2@]@@@@FOULMT RES 2@ @@@@IU
)@@G@@FWIDTH RES   2           .    @ @@@@FAFTER EQU   FWIDTH+1    .    @G@@@@IV
)@@G@@/. ROUTINES TO SUPERVISE PRINTING OF LISTS OF NAMES ()FNS, )VARS, ETC.) IW
)@@G@@@[@@@@.     @B@@@@. INITIALIZATION-- POST FLAG (IF ANY)     @F@@@@.     IX
)@@G@@ A3=ABSADR OF FLAG ('NOT COPIED/ERASED'), A4=NO OF CHARS    @[@@@@.     IY
)@@G@@@#@@@@       INSTRS .   @ @@@@NLINIT* SX   X11,NLLINK  .    @C@@@@      IZ
)@@G@@ DS    A3,NLPOIN   . TEMP SAVE POINTERS   @F@@@@       LMJ   X11,LNFLSH JA
)@@G@@ . IF ANYTHING IS IN PRINTBUF, FLUSH IT   @C@@@@       DL    A3,NLPOIN  JB
)@@G@@ . GET POINTERS TO FLAG @C@@@@       JZ    A4,NI0010   .IF NONE, FORGET JC
)@@G@@IT    @F@@@@       LMJ   X11,EDTLIT  . ELSE EDIT IT AS IF IT IS A LITERAJD
)@@G@@L     @E@@@@NI0010 SZ    NLITEM      . CLEAR FLAG FOR ITEMS ON THIS LINEJE
)@@G@@@B@@@@       J     NN0060      . GO CLEAN UP    @[@@@@.     @E@@@@. INSEJF
)@@G@@RT NAME-- (RELADR IN A3, WSORG IN A4) INTO LINE--     @[@@@@.     @ @@@@JG
)@@G@@NLNAME* SX   X11,NLLINK  .    @C@@@@       DS    A3,NLPOIN   . AND SAVE JH
)@@G@@POINTERS    @D@@@@       AA    A3,A4       . MAKE NAMEBLOK ADDR ABSOLUTEJI
)@@G@@@B@@@@       LA,S1 A0,0,A3     . BLOCK TYPE     @E@@@@       JNE,U A0,ZTJJ
)@@G@@PNAM NL0900 . IF NOT NAMEBLOK, SYSERR     @C@@@@       LMJ   X11,LINRES JK
)@@G@@ . RESTORE BUF POINTERS @ @@@@       DL    A3,NLPOIN   .    @F@@@@      JL
)@@G@@ LMJ   X11,PRALGN  . PRINT NAME WITH BOUNDARY ALIGNMENT     @ @@@@      JM
)@@G@@ J     NL0999      .    @E@@@@       SX    X11,NLITEM  . MARK THAT WE'VEJN
)@@G@@ BEEN THRU HERE   @D@@@@NN0060 LMJ   X11,LINSUS  . SAVE REGS FOR NEXT ENJO
)@@G@@TRY   @ @@@@       LX,H2 X11,NLLINK  .    @ @@@@       J     1,X11      JP
)@@G@@ .    @[@@@@.     @A@@@@. FLUSH BUF I F ANY NAMES ARE IN IT @[@@@@.     JQ
)@@G@@@ @@@@NLFLSH* SX   X11,NLLINK  .    @C@@@@       TZ    NLITEM      . ANYJR
)@@G@@THING IN LINE?    @B@@@@       LMJ   X11,LNFLSH  . YES, PRINT IT  @F@@@@JS
)@@G@@       LMJ   X11,LINITL  . INITIALIZE BUF POINTERS TO CLEAR LINE  @ @@@@JT
)@@G@@       LX,H2 X11,NLLINK  .    @ @@@@       J     1,X11       .    @[@@@@JU
)@@G@@.     @[@@@@.     @ @[@@NL0900 ERROR YSYSTM      .    @E@@[[NL0900  EQU JV
)@@G@@   0              . FORCE IGDM ON SYSTEM ERRORS @ [@@@NL0999 LX,H2 X11,NJW
)@@G@@LLINK  .    @ @@@@       J     0,X11       .    @ @@@@       VARBLS     JX
)@@G@@       .    @ @@@@NLLINK RES   1           .    @ @@@@NLITEM EQUF  $,,H1JY
)@@G@@       .    @#@@@@       RES   1 .  @ @@@@NLPOIN RES   2           .    JZ
)@@G@@@@@@@@@ @@@@       END               .    ___FLG RES    1          .    KA
)@@G@@@ @@[[FSMODE EQUF    $,,*[S@@@*SDFF*@[@@@@.     @G@@@@. ****************KB
)@@G@@***************************************************** @G@@@@. STANDARD PKC
)@@G@@ROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.     KD
)@@G@@                                                                * @G@@@@KE
)@@G@@       AXR$         .                                                 * KF
)@@G@@@G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS                    KG
)@@G@@    * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET                    KH
)@@G@@          * @G@@@@       WSDEF.      DEFINE WORKSPACE                   KI
)@@G@@                * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE     KJ
)@@G@@                      * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)KK
)@@G@@                            * @G@@@@RUNCON INFO  2 22.      AND SET ASIDKL
)@@G@@E ITS  SPACE                      * @G@@@@       CBLOCK            . DEFKM
)@@G@@INE CONTROL BLOCK TYPES                 * @G@@@@.                       KN
)@@G@@                                              * @G@@@@. END OF STANDARD KO
)@@G@@PROC BLOCK                                          * @G@@@@. **********KP
)@@G@@*********************************************************** @[@@@@.     KQ
)@@G@@@[@@@@.     @[@@@@.     @[@@@@.     @E@@@@       STATEV            . DEFKR
)@@G@@INE STATEVECTOR PARAMETERS    @[@@@@.     @F@@@@. BUFFERS USED BY THIS RKS
)@@G@@OUTINE (SPACE IS RES'D IN ELEMENT RANDAC) @F@@@@FBCMAX EQU   132        KT
)@@G@@ . MAX NO CHARS ALLOWED IN LINE BUFFER    @G@@@@FBSIZE EQU   FBCMAX//4  KU
)@@G@@ . NO WDS NEEDED TO HOLD THE MAX NO OF CHARS    @G@@@@FBIBUF EQU   BUFF KV
)@@G@@       . APL SOURCE CODE IMAGES ARE MOVED HERE FROM   @G@@@@            KW
)@@G@@             . THE INPUT BUF, AND THEN SCANNED FROM HERE    @G@@@@FBCBUFKX
)@@G@@ EQU   BUFF+FBSIZE . LINE EDITING COMMANDS ARE MOVED HERE TO SCAN @[@@@@KY
)@@G@@.     @A@@@@. PROC TO HANDLE BUFFER MOVEMENT    @F@@@@M      PROC    . IKZ
)@@G@@MAGE GOES TO 1ST PARAMETER LOCN FROM WSIBUF--   @#@@@@MOVIMG* NAME .    LA
)@@G@@@#@@@@       UNLI$T .   @ @@@@       DL    A0,MVCTRL   .    @ @@@@      LB
)@@G@@ LR,U  R1,FBSIZE   .    @A@@@@       BT    A0,0,*A1    . MOVE IT  @#@@@@LC
)@@G@@       CONSTS .   @#@@@@MVCTRL +1,M(1,1) .@ @@@@       +1,CIOBUF        LD
)@@G@@ .    @#@@@@       INSTRS     @#@@@@       LI$T  .    @]@@@@       END .LE
)@@G@@@[@@@@.     @ @@@@S      PROC              .    @F@@@@STASH* NAME       LF
)@@G@@       . PROC TO STASH SOMETHING IN A1 INTO THE @D@@@@       UNLI$T     LG
)@@G@@       . WORKSPACE OUT-PUT BUFFER   @ @@@@       LMJ   X2,0,X2     .    LH
)@@G@@@ @@@@       LI$T              .    @ @@@@       END               .    LI
)@@G@@@ @@@@XSAVE  PROC              .    @E@@@@XREGSV* NAME             . NIFLJ
)@@G@@TY PROCS TO SAVE LEXCANS REGS @ @@@@       UNLI$T            .    @ @@@@LK
)@@G@@       SX    X2,X2TEMP   .    @ @@@@       SX    X3,X3TEMP   .    @ @@@@LL
)@@G@@       SA    A15,A15TMP  .    @ @@@@       LI$T              .    @ @@@@LM
)@@G@@       END               .    @ @@@@XLOAD  PROC              .    @ @@@@LN
)@@G@@XREGLD* NAME             .    @ @@@@       UNLI$T            .    @ @@@@LO
)@@G@@       LX    X2,X2TEMP   .    @ @@@@       LX    X3,X3TEMP   .    @ @@@@LP
)@@G@@       LA    A15,A15TMP  .    @ @@@@       LI$T              .    @ @@@@LQ
)@@G@@       END               .    @[@@@@.     @F@@@@N      PROC . EXITS -- NLR
)@@G@@ODESC,DEFNER (AT EXIT A0=ABSADR OF DESCR) @F@@@@NBLCHN* NAME            LS
)@@G@@ . CHAIN FROM NAMEBLOK TO DESCR, IF ANY   @#@@@@       UNLI$T .   @ @@@@LT
)@@G@@       LA    A0,STVFNN   .    @ @@@@       ABSADR A0         .    @D@@@@LU
)@@G@@       LA,H2 A0,1,A0     . DESCR POINTER FROM NAMELBOK@B@@@@       JZ   LV
)@@G@@ A0,N(1,1)   . IF NONE, EXIT  @ @@@@       ABSADR A0         .    @F@@@@LW
)@@G@@       TZ,H1 2,A0        . IS THIS A DESCR FOR A GLOBAL VBLE?     @B@@@@LX
)@@G@@       J     N(1,2)      . NO, DEFN ERR   @C@@@@       LA,S1 A1,0,A0    LY
)@@G@@ . YS, GET BLOK TYPE    @D@@@@       JNE,U A1,ZTPFUN FU0280 . IF NOT FUNLZ
)@@G@@C, DEFN ERR @#@@@@       LI$T    .  @ @@@@       END               .    MA
)@@G@@@G@@[[/. FUNDMP-- FUNCTION SYMBOLIC DUMPER-- THIS IS USED PRESENTLY BY )MB
)@@G@@FLIST @F@@[[. AND )EDIT. (IT MAY EVENTUALLY BE USED BY )PUNCH).  IT DUMPMC
)@@G@@S THE @F@@[[. SYMBOLIC REPRESENTATION OF THE FUNCTION WHOSE ABSOLUTE NAMMD
)@@G@@E BLOK@B@@[[. POINTER IS FOUND IN A0.  RETURNS ARE:   @G@@[[.     0,X11 ME
)@@G@@ ERROR     1,X11 NAME NOT FUNC (OR LOCKED)  2,X11 NORMAL    @[@@[[.     MF
)@@G@@@ @@[[       INSTRS            .    @F@@[[. ENTRY FOR )FLIST-- NORMAL LIMG
)@@G@@STING USING DELS AND LINE NUMBERS   @D@@[[FUNDMP* LA,U   A1,0      . CLEMH
)@@G@@AR SURPRESS LINE NO FLAG@C@@[[        J      FD0005    . AND GO INITIALIMI
)@@G@@ZE    @D@@[[. ENTRY FOR )EDIT-- LINE NOS AND DELS ARE SURPRESSED  @E@@[[MJ
)@@G@@FUNDME* LA,U   A1,1      . RAISE SURPRESS LINENUMBER FLAG   @[@@[[.     MK
)@@G@@@C@@[[FD0005  SA     A1,FDSURP . SAVE SURPRESSION FLAG@ @@[[        SX  ML
)@@G@@   X11,FDLINK.    @C@@[[. BE SURE THAT NAME POINTS TO AN UNLOCKED FUNC  MM
)@@G@@@E@@[[FD0010 LA,H2 A1,1,A0     . GET DESCR ADDR FROM SYMBOL TABLE @D@@[[MN
)@@G@@       JZ    A1,FD0200   . IF NO DESCR, NOFIND EXIT   @D@@[[       ABSADMO
)@@G@@R A1         . GET ABS DESCRIPTOR ADDR    @D@@[[       LA,S1 A2,0,A1    MP
)@@G@@ . GET TYPE FROM DESCR WORD 1 @B@@[[       TNE,U A2,ZTPFUN   . IS IT A FMQ
)@@G@@UNC   @C@@[[       TZ,S1 1,A1        . YES, IS IT UNLOCKED? @E@@[[      MR
)@@G@@ J     FD0200      . IF NOT FUNC OR LOCKED, GET OUT   @C@@[[. NOW SET UPMS
)@@G@@ PARAMETERS SO DEF CAN BE OPENED    @E@@[[FD0020 RELADR A0         . GENMT
)@@G@@ERATE REL ADDR OF NAME BLOCK  @C@@[[       SA    A0,STVFNN   . AND PLUG MU
)@@G@@INTO SI     @C@@[[       DL    A2,0,A1     . GET ENTIRE DESCR     @D@@[[MV
)@@G@@       DS    A2,FUDUMY   . AND POST FOR USE BY LISTER @C@@[[       SZ   MW
)@@G@@ FUPEND      . CLEAR PENDANT FLAG   @ @@[[. OPEN AND DISPLAY THE FUNC   MX
)@@G@@@F@@[[FD0030 LA    A0,A1       . PUT DESCR ADDR WHERE FLOPEN WANTS IT   MY
)@@G@@@D@@[[       LA,U  A1,WSID     . AND SET UP BASE ADDR OF WS @B@@[[      MZ
)@@G@@ LMJ   X11,FLOPEN  . OPEN THE DEF   @ @@[[       J     FD0310      .    NA
)@@G@@@D@@[[       LA,U  A1,0377777  . FORCE PRINT OF ALL LINES   @D@@[[      NB
)@@G@@ DSL   A2,72       . STARTING WITH LINE ZERO    @F@@[[        LX,U   X11NC
)@@G@@,FNFPRT. SET UP FOR NORMAL PRINT (I.E. )FLIST)  @D@@[[        TZ     FDSND
)@@G@@URP    . IS SURPRESSION FLAG ON?    @F@@[[        LX,U   X11,FNSPRT     NE
)@@G@@. YES, USE SURPRESSION ENTRY POINT  @C@@[[        LMJ    X11,0,X11 . PRINF
)@@G@@NT THE FUNCTION   @ @@[[       J     FD0310      .    @D@@[[       LMJ  NG
)@@G@@ X11,LNFLSH  . CLEAR THE OUTPUT BUFFER    @D@@[[        TZ     FDSURP   NH
)@@G@@ . IS SURPRESSION FLAG ON?    @E@@[[        J      FD0040    . YES, BYPANI
)@@G@@SS LINE WITH CLOSING DEL@B@@[[       LA,U  A1,ASPACE   . GET A BLANK    NJ
)@@G@@@C@@[[ DO 3 , LMJ X2,0,X2      . STASH THREE OF THEM  @B@@[[       LA,U NK
)@@G@@ A1,AFUNCT   . GET CLOSING DEL@C@@[[       LMJ   X2,0,X2     . PUT INTO NL
)@@G@@LINEBUF     @B@@[[       LMJ   X11,LINSTR  . PRINT THE LINE @D@@[[FD0040NM
)@@G@@  LMJ    X11,FCLOSE     . CLOSE THE DEFINITION  @ @@[[       J     FD031NN
)@@G@@0      .    @#@@[[. NORMAL EXIT--   @C@@[[FD0100 SZ    STVFNN      . CLENO
)@@G@@AR SI FUNC PTR    @ @@[[       LX    X11,FDLINK  .    @A@@[[       J    NP
)@@G@@ 2,X11       . GO HOME  @ @@[[. NOT FOUND OR LOCKED-- EXIT  @ @@[[FD0200NQ
)@@G@@ LX    X11,FDLINK  .    @ @@[[       J     1,X11       .    @^@@[[. REALNR
)@@G@@ ERROR EXIT----   @C@@[[FD0300 LMJ   X11,FCLOSE  . CLOSE IF POSOSIBEL   NS
)@@G@@@D@@[[       NOP   . IGNORE ERRORS, WE'VE ALREADY GOT ONE   @ @@[[FD0310NT
)@@G@@ LX    X11,FDLINK  .    @ @@[[       J     0,X11       .    @ @@[[      NU
)@@G@@ VARBLS            .    @ @@[[FDLINK EQUF  $,,H1       .    @E@@[[FDSURPNV
)@@G@@  EQUF   $,,S4     . FLAG FOR LINE NUMBER SURPRESSION @ @@[[       RES  NW
)@@G@@ 1           .    @[@@@@/.    @[@@@@.     @#@@@@       INSTRS.    @ @[@@NX
)@@G@@FUNDEF* SX   X11,FULINK .     @H@@[[. ENTRY TO ACCEPT @ADD,E FILE PREPARNY
)@@G@@ED BY @ED PROCESSOR FROM )EDIT COMMAND    @A@@[[FUNDED* SX     X11,FULINNZ
)@@G@@K     .     @D@@[[        SX     X11,FUEFLG     . RAISE )EDIT MODE FLAG OA
)@@G@@@D@@[[        SX     X11,FUEOFS     . RAISE @EOF SEARCH FLAG@E@@[[      OB
)@@G@@  SZ     FLNLIN         . SET NEXT LINE TO LINE ZERO  @F@@[[        SZ  OC
)@@G@@   FUTABL    . NOTE THAT THERE IS NO OPEN TABLE YET   @E@@[[        LMJ OD
)@@G@@   X11,LNFLSH     . BE SURE BUFFER IS CLEAR     @F@@[[        LMJ    X11OE
)@@G@@,BUFILL     . AND PRIME INPUT WITH 1ST LINE     @B@@[[        J      FU9OF
)@@G@@010         . OOPS, @EOF@E@@[[        LMJ    X11,LEXINI     . INITIALIZEOG
)@@G@@ SCAN OF THE IMAGE@G@@[[        LA,U   A0,AFUNCT      . PRETEND OPENING OH
)@@G@@$F HAS BEEN SCANNED     @C@@[[        J      FU0005         . AND CONTINOI
)@@G@@UE    @B@@[[. NORMAL ENTRY (FOR INTERNAL APL EDITING) @A@@[[FUNDEF* SX  OJ
)@@G@@   X11,FULINK     .     @C@@[[        SZ     FUEFLG         . LOWER )EDIOK
)@@G@@T FLAG@E@@[[        SZ     FLNLIN         . SET NEXT LINE TO LINE ZERO  OL
)@@G@@@F@@[[        SZ     FUTABL    . NOTE THAT THERE IS NO OPEN TABLE YET   OM
)@@G@@@]@@[[FU0005 .    @F[@@@       SA    A0,FULOCK   . SAVE OPENIN CHAR IN CON
)@@G@@ASE ITS AN ALOCK .@D@@@@       SZ    FUPEND      . TURN OFF PENDANT FUNCOO
)@@G@@ FLAG @G@@@@       SZ    FUHERS      . ASSUME ERASURE OF HDR AT FU0280 IOP
)@@G@@F ERR OUT   @C@@@@       LA    A0,STVCUR   . SAVE CURRENT STATE   @ @@@@OQ
)@@G@@       SA    A0,STATMP   .    @B@@@@       LA,U  A0,STFUNC   . SET TO DEOR
)@@G@@F MODE@ @@@@       SA    A0,STVCUR   .    @G@@@@. SCAN FROM IMAGE BUF TOOS
)@@G@@ STOP POSSIBLE DESTRUCTION BY EDIT CMND OUTPUT  @D@@@@FU0010 MOVIMG FBIBOT
)@@G@@UF     . PUT IN NORMAL IMAGE BUFFER @F@@@@       AX    X3,(+FBIBUF-CIOBUOU
)@@G@@F)  .  CHANGE LEXCAN'S FETCHREG     @C@@@@. SCAN AND ANALYZE THE TEXT OFOV
)@@G@@ THE HEADER LINE  @ @@@@FU0020 LMJ   X11,FHANAL  .    @ @@@@       J    OW
)@@G@@ FU9020      .    @E@@@@       JNZ   A1,FU0040   . IF ANY TEXT STORED, POX
)@@G@@ROCESS IT   @E@@@@. NO TEXT STORED-- ONLY ESCAPE FROM DEFN MODE IS ALLOWOY
)@@G@@ED    @D@@[[        TZ     FUEFLG         . ARE WE IN )EDIT MODE? @D@@[[OZ
)@@G@@        J      FU9000         . YES, SIGNAL DEF ERR   @B@@@@       TE,U PA
)@@G@@ A0,AFUNCT   . OK IF FUNC     @A@@@@       TNE,U A0,ALOCK    . OF LOCK  PB
)@@G@@@D@@@@       J     FU2010      . IF EITHER, NORMAL EXIT     @B@@@@      PC
)@@G@@ J     FU9000      . ELSE DEFN ERR  @A@@@@. AN ACTUAL HEADER LINE WAS SCPD
)@@G@@ANNED @G@@@@FU0040 DS    A0,FUHTXT   . SAVE POINTER TO TEST LINE, COMPLEPE
)@@G@@TION FLAG   @D@@@@       SA    A2,STVFNN   . NAMEBLOK ADDR TO STATEVECT PF
)@@G@@@D@@@@       SA    A3,FUNARG   . NO OF ARGS TO DUMMY DESCR  @C@@@@      PG
)@@G@@ TZ    A4          . ANY RESULT SPECIFIED?@B@@@@       LA,U  A4,1       PH
)@@G@@ . YES, SET FLAG  @E@@@@       SA    A4,FUNRES   . PUT RESULT FLAG INTO PI
)@@G@@DUMMY DESCR @E@@@@       SZ,H2 FUDUMY      . CLEAR NO OF LINES IN DUMMY PJ
)@@G@@DESCR @F@@@@       SZ    FUDUMY+1    . CLEAR LOCK, TABLE ADDR IN DUMMY DPK
)@@G@@ESCR  @C@@@@       SZ    FUDUMY+2    . CLEAR LEVEL, TOO     @C@@@@. NOW PL
)@@G@@FIND OUT WHETHER THIS IS NEW OR OLD--     @F@@@@FU0050 NBLCHN FU0200,FU0PM
)@@G@@280   . FIND DESCR-- IF NONE, NEW FUNC    @B@@@@/. RE-OPEN THE DEF OF ANPN
)@@G@@ OLD FUNCTION     @[@@@@.     @ @@@@. CHECK FORMAT OF HEADER LINE @B@[@@PO
)@@G@@FU0100 TZ,S1 1,A0       . IS DEFN LOCKED? @C@[@@       J     FU0280     PP
)@@G@@ . YES, DON'T RE-OPEN IT@ @[@@       RELADR  A0        .    @B@[@@      PQ
)@@G@@ SA    A0,STVFND   . DITTO RELADR   @E@@[[FU0100  LA     A1,A0          PR
)@@G@@. COPY DESCRIPTOR ADDRESS     @E@@[[        RELADR A1             . SO IPS
)@@G@@T CAN BE MADE RELATIVE  @F@@[[        SA     A1,STVFND      . AND THENCEPT
)@@G@@ POSTED IN STATEVECTOR  @D@@[[        TZ     FUEFLG         . ARE WE IN PU
)@@G@@)EDIT MODE? @G@@[[        J      FU0210         . YES, CONTINUE AS IF THPV
)@@G@@IS FUNCT IS NEW   @G@@[[        TZ,S1  1,A0           . NO-- IS OLD COPYPW
)@@G@@ OF THIS DEFN LOCKED?   @D@@[[        J      FU0280         . YES, DON'TPX
)@@G@@ REOPEN IT  @F^@@@       SX    X11,FUHERS  . INHIBIT HDR ERASURE IF LATEPY
)@@G@@R ER ERROR  @D@@@@       LA    A0,FUHADR   . RECOVER ADDR OF TEXT LINE  PZ
)@@G@@@G@@@@       LMJ   X11,TEXERS  . OLD FUNCS DON'T GET NEW HEADERS, SO ERAQA
)@@G@@SE IT @ @@@@       J     FU0190      .    @D@@@@       TNZ   FUNRES     QB
)@@G@@ . WAS A RESULT SPECIFIED?    @E@@@@       TZ    FUNARG      . NO, WERE QC
)@@G@@ANY ARGUMENTS GIVEN?    @G@@@@       J     FU0190      . IF EITHER, BAD QD
)@@G@@SYNTAX FOR REOPENING, DEFN ERR@G@@@@. FORMAT OF HDR LINE OK, NOW EXAMINEQE
)@@G@@ STATEVECT.  TO PREVENT A PROBLEM   @G@@@@. WITH POSSIBLE ERASURE OF LOCQF
)@@G@@AL LABELS WHICH MIGHT BE PUSHED INTO THE  @F@@@@. STATE INDICATOR, A SUSQG
)@@G@@PENDED FUNC MAY BE RE-OPENED ONLY IF IT   @G@@@@. IS THE TOPMOST FUNC.  QH
)@@G@@THEN THE OLD LABEL VALUES ARE EASILY FOUND.     @[@@@@.     @E@@@@FU0110QI
)@@G@@ LA,U  A1,1        . SET CTR FOR DEPTH IN STATEVECT   @G@@@@       LA,U QJ
)@@G@@ A5,STFUNX   . STATE FLAG FOR COMPARISON WITH CURRENT STATE @C@@@@      QK
)@@G@@ LA    A4,STVFNN   . NAME OF THIS FUNC    @D@@@@       LA,U  A0,WSTATE  QL
)@@G@@ . ABSADR OF CURRENT STATEVECT@D@@@@FU0120 LA,H2 A0,0,A0     . POINTER TQM
)@@G@@O NEXT STATEBLOCK @C@@@@       JZ    A0,FU0130   . IF NONE, WE'RE DONE  QN
)@@G@@@D@@@@       ABSADR A0         . ELSE SET UP TO LOOK AT IT  @F@@@@      QO
)@@G@@ JNE,Q1 A5,0,A0 FU0120 . IF NOT FUNC XQT MODE, KEEP CHAINING@F@@@@      QP
)@@G@@ JGD   A1,FU0125   . IF 1ST HIT ON FUNCMODE, ALLOW THIS FUNC@G@@@@      QQ
)@@G@@ JE,H1 A4,3,A0 FU0190  . NOT TOP. BE SURE THIS FUNC NOT HERE IN SI@E@@@@QR
)@@G@@       J     FU0120      . AND IF IT ISN'T, KEEP SCANNING   @G@@@@. EXAMQS
)@@G@@INE TOPMOST FUNC IN SI TO SEE IF ITS THE ONE WE'RE TRYING TO OPEN @E@@@@QT
)@@G@@FU0125 JNE,H1 A4,3,A0 FU0120  . IF IT ISN'T, KEEP SCANNING  @F@@@@      QU
)@@G@@ SX    X11,FUPEND  . ITS THIS, SO MARK IT AT LEAST PENDANT  @G@@@@      QV
)@@G@@ TNZ,H1 2,A0       . ANY CODE OPEN (I.E. IN PARTIAL EXECUTION?)   @B@@@@QW
)@@G@@       J     FU0120      . NO, KEEP GOING @G@@@@       J     FU0190     QX
)@@G@@ . . YES, SUSPENDED, CANNOT OPEN, SO DEFN ERR   @B@@@@. INITIALIZE DUMMYQY
)@@G@@ DESCR FROM REAL ONE    @B@@@@FU0130 LA    A0,STVFND   . DESCR ADDR     QZ
)@@G@@@ @@@@       ABSADR A0         .    @ @@@@       DL    A1,0,A0     .    RA
)@@G@@@ @@@@       DS    A1,FUDUMY   .    @F@@@@       TNZ   FUPEND      . WASRB
)@@G@@ THIS FUNC FOUND TO BE PENDING?     @D@@@@       J     FU0140      . NO,RC
)@@G@@ FORGET ABOUT LABELS    @G@@@@       LA,U  A0,1,A2     . YES, GET RELAD RD
)@@G@@OF TBL ENTRY FOR LINE ZERO    @E@@@@       LMJ   X11,FUNLBE  . AND ERASERE
)@@G@@ THE OLD LABEL VALUES   @ @@@@       J     FU9020      .    @D@@@@FU0140RF
)@@G@@ LA,U  A1,1        . GET VAL TO USE AS FLAG     @C@@@@       LA    A2,FURG
)@@G@@LOCK   . RECOVER OPENING CHAR @F@@@@       TNE,U A2,ALOCK    . DID OPENIRH
)@@G@@NG LINE SAY TO LOCK THIS?     @F@@@@       SA,S1 A1,FUDUMY+1 . YES, TURNRI
)@@G@@ ON LOCK FIELD OF DUMMY DESCR @E@@@@       LA,U  A0,FUDUMY   . DUMMY DESRJ
)@@G@@CR ADDR (AS AN ARG)     @D@@@@       LA,U  A1,WSID     . SET BASE ADDR ORK
)@@G@@F WORKSPACE @C@@@@       LMJ   X11,FLOPEN  . OPEN THE LINENO TABLE@ @@@@RL
)@@G@@       J     FU0280      .    @F@@@@       J     FU0250      . GO CLEAN RM
)@@G@@UP REMAINDER OF THIS LINE     @[@@@@.     @ @@@@FU0190 ERROR YDEFN,FU902RN
)@@G@@0 .   @C@@@@/. OPEN UP A DEFN FOR A COMPLETELY NEW FUNC     @[@@@@.     RO
)@@G@@@C@@@@. NOTHING CHAINED-- BACKWARD LINK IS IN NAMEBLOK@D@@@@FU0200 SZ   RP
)@@G@@ STVFND      . CLEAR FUNC DESCR POINTER   @B@[@@       LA,U  A1,1       RQ
)@@G@@ . GET FLAG VALUE @C@@[[. ENTER HERE IF OLD FUNC COMING BACK FROM )EDIT RR
)@@G@@@ @@[[FU0210  LA,U   A1,1      .    @C[@@@       LA    A2,FULOCK   . RECRS
)@@G@@OVER OPENING CHAR @F@@@@       TNE,U A2,ALOCK    . DID OPENING LINE SAY RT
)@@G@@TO LOCK THIS?     @E@@@@       SA,S1 A1,FUDUMY+1 . YES, TURN LOCK ON IN RU
)@@G@@DUMMYDESCR  @E@@@@       LA,U  A0,FUDUMY   . DUMMY DESCR ADDR (AS AN ARGRV
)@@G@@)     @D@@@@       LA,U  A1,WSID     . SET BASE ADDR OF WORKSPACE @B@@@@RW
)@@G@@       LMJ   X11,FLOPEN  . OPEN THE TABLE @^@@@@       J     FU9020     RX
)@@G@@@E@@[[        SX     X11,FUTABL     . SET FLAG THAT A TABLE EXISTS@C@@@@RY
)@@G@@       LA    A1,FUHADR   . ADDR OF HDR LINE TEXT@B@@@@       DSL   A2,72RZ
)@@G@@       . SET LINENO ZERO@C@@@@       LA,U  A0,0        . CLEAR LABEL INDSA
)@@G@@ICATOR@C@@@@       LMJ   X11,FLENTR  . STASH ZERO'TH LINE   @ @@@@      SB
)@@G@@ J     FU9020      .    @E@@@@       DL    A2,PWR10    . SET FIRST LINE SC
)@@G@@NUMBER TO ONE     @[@@@@.     @A@@@@. FINAL CLEANUP OF FUNC HEADER LINE SD
)@@G@@@[@@@@.     @C@@@@FU0250 DS    A2,FLNLIN   . POST NEXT LINE NUMB  @C@@@@SE
)@@G@@       LA    A0,FUHTXT   . GET TERMINATING CHAR @E@@@@       JE,U  A0,ARSF
)@@G@@PAR FU1180 . IF RITE PAREN, GO DO SYS CMD @G@@@@       JE,U  A0,ALBRAK FSG
)@@G@@U1100 . IF LEFT BRACKET, GO SCAN EDIT COMMAND   @D@@@@       J     FU123SH
)@@G@@0      . ELSE GO CHECK FOR EOL, ETC.@[@@@@.     @C@@@@. ERROR TRYING TO SI
)@@G@@OPEN-- GET RID OF HEADER TEXT @ @@@@FU0280 ERROR YDEFN       .    @D@@@@SJ
)@@G@@       TZ    FUHERS   . HAS HDR ALREADY BEEN ERASED   @D@@@@       J    SK
)@@G@@ FU9999      . YES, DON'T TRY IT AGAIN    @C@@@@       SA    A0,FUDUMY+2SL
)@@G@@ . TEMP SAVE ERROR CODE @C@@@@       LA    A0,FUHADR   . ADDR OF HEADER SM
)@@G@@TEXT  @ @@@@       LMJ   X11,TEXERS  .    @ @@@@       ER    ERR$       SN
)@@G@@ .    @C@@@@       LA    A0,FUDUMY+2 . RECOVER ERROR CODE   @ @@@@      SO
)@@G@@ J     FU9999      .    @ @@@@FU0290 ERROR YWSFUL,FU9020 .  @B@@@@/. PRISP
)@@G@@NCIPAL LOOP TO ACCEPT NEW LINES--   @[@@@@.     @C@@@@FU1000 LMJ   X11,LSQ
)@@G@@NFLSH  . SET UP LINE # STASH  @A@@@@       LA,U  A1,ALBRAK   . PRINT A [SR
)@@G@@@ @@@@       STASH             .    @ @@@@       DSL   A0,72       .    SS
)@@G@@@B@@@@       DL    A4,FLNLIN   . GET NEXT LINE #@B@@@@       LMJ   X11,FST
)@@G@@ORMD   . AND PRINT IT   @ @@@@       ER    ERR$        .    @ @@@@      SU
)@@G@@ LA,U   A3,FUFILL  .    @ @@@@       LA,U   A4,4       .    @B@@@@      SV
)@@G@@ LMJ    X11,EDTLIT . FILL IN ']  '  @C@@@@. NOW PROMPT THE USER AND ACCESW
)@@G@@PT THE NEXT LINE  @B@@@@       LMJ   X11,BUFILL  . GET NEXT LINE  @F@@@@SX
)@@G@@       J     FU9010      . GOT AN EOF, GO CLOSE TABLE AND SIGN OFF@E@@@@SY
)@@G@@       MOVIMG   FBIBUF   . PRESERVE IT IN INTERNAL BUFFER   @C@@@@FU1010SZ
)@@G@@ LMJ   X11,LEXINI  . SET UP TO SCAN IT    @F@@@@       AX    X3,(+FBIBUFTA
)@@G@@-CIOBUF)  .  CHANGE LEXCAN'S FETCHREG     @G@@@@. SCAN AND ANALYZE THE LTB
)@@G@@INE WE JUST READ (OR CONTINUE SCAN OF OLD LINE) @D@@@@FU1020 DL    A2,FLTC
)@@G@@NLIN   . GET CURRENT LINE NUMBER    @C@@[[        TZ     FUEFLG         TD
)@@G@@. IN )EDIT MODE?  @G@@[[        DJZ    A2,FU9000      . YES, REDEFINITIOTE
)@@G@@N OF LINE ZERO IS ERROR @E@@@@       DJZ   A2,FU1170   . IF ZERO, GO SCATF
)@@G@@N FUNC HEADER     @D@@@@       LMJ   X11,LEXANL  . ELSE ITS A NORMEL LINTG
)@@G@@E     @D@@@@       J     FU8000      . GO SEE IF WE GOT A WS FULL @D@@@@TH
)@@G@@       SZ    CONSBR      . JUST TO BE ON THE SAFE SIDE@C@@[[        TNZ TI
)@@G@@   FUEFLG    . ARE WE IN )EDIT MODE?@D@@[[        J      $+3       . NO,TJ
)@@G@@ NO EXTRA CHECK NEEDED  @F@@[[        TE,U   A1,3      . YES, DID SCAN STK
)@@G@@TOP ON LEFT BRACKET?    @F@@[[        JNZ    A1,FU9000      . NO- DEF ERTL
)@@G@@R IF NOT ZERO EITHER    @F@@@@       COMJMP A1 0,FU1200 1,FU1180 2,FU121TM
)@@G@@0 3,FU1110 4,FU1190 .   @[@@@@.     @G@@@@. FOR THE ABOVE COMJMP, THE FOTN
)@@G@@LLOWING VALUES HOLD AS SCAN TERMINATORS   @E@@@@.      0 => EOL         TO
)@@G@@     (ENTER THIS LINE IN TABLE)     @C@@@@.      1 => )                (TP
)@@G@@SYSTEM COMMAND)   @C@@@@.      2 => DEL OR DEL-TILDE (LEAVE DEFN MODE)  TQ
)@@G@@@D@@@@.      3 => [                ( PERFORM EDIT COMMAND)  @C@@@@.     TR
)@@G@@ 4 => ALAMP            (DELETE THIS LINE) @A@@@@/.  PROCESS LINE EDITINGTS
)@@G@@ COMMANDS-- @[@@@@.     @B@@@@. SCAN EDIT CMND AFTER SEEING AN OPEN [   TT
)@@G@@@F@@@@FU1100 LMJ   X11,EDCMNH  . ONLY A HEADER LINE CAN GET US HERE     TU
)@@G@@@G@@@@       J     FU1000      . OOPS, NOT IN CORRECT FORMAT, GO GET NEXTV
)@@G@@T LINE@C@@[[FU1110  LA     A1,FUEFLG      . GET EDITING FLAG@C@@[[      TW
)@@G@@  TE,U   A0,2           . IS COMMAND [N]? @F@@[[        JNZ    A1,FU9000TX
)@@G@@      . NO. IF IN )EDIT MODE, DEFN ERROR  @F@[@@FU1110 COMJMP A0 0,FU112TY
)@@G@@0 1,FU1130 2,FU1140 3,FU1150 4,FU1160     @F@@][       COMJMP A0 0,FU112TZ
)@@G@@0 1,FU1130 2,FU1140 3,FU1150 4,FU1160     @[[@@@.     @[@@@@.     @A@@@@UA
)@@G@@. ["]        DISPLAY ENTIRE FUNCTION@[@@@@.     @]@@@@FU1120.     @C@@@@UB
)@@G@@       XREGSV            . SAVE STUPH FOR LEXCAN@B@@@@       LA,H2 A0,FUUC
)@@G@@DUMY+2 . GET TABLE ADDR @E@@@@       LA,U  A1,10000    . FORCE PRINT OF UD
)@@G@@ENTIRE FUNCTION   @C@@@@       DSL   A2,72       . STARTING LINE IS ZEROUE
)@@G@@@C@@@@       LMJ   X11,FNNPRT  . PRINT FUNC WITH DEL  @A@@@@       ER   UF
)@@G@@ ERR$        . NEVER!   @F@@@@       LMJ   X11,FNXTLN  . COMPUTE NEXT LIUG
)@@G@@NE # (CURRENT ONE IN A3)@A@@@@       DS    A2,FLNLIN   . SAVE IT  @A@@@@UH
)@@G@@       TZ    CONSBR      . BREAK?   @D@@@@       J     FU1121      . YESUI
)@@G@@, DON'T CLOSE WITH A DEL@D@@@@       LMJ   X11,LNFLSH  . SET UP CLOSING UJ
)@@G@@DEL/LOCK    @B@@@@       LA,U  A1,ASPACE   . INDENT BY THREE@ @@@@      UK
)@@G@@ DO    3 , STASH   .    @C@@@@       LA    A1,FULOCK   . GET CLOSING CHAUL
)@@G@@R     @C@@@@       STASH             . STICK IT AWAY TOO    @C@@@@      UM
)@@G@@ LMJ   X11,LINSTR  . PRINT THE LAST LINE  @B@@@@FU1121 SZ    CONSBR     UN
)@@G@@ . CLEAR BREAK    @ @@@@       XREGLD            .    @ @@@@       J    UO
)@@G@@ FU1020      .    @C@@@@       J     FU1020      . AND CONTINUE THE SCANUP
)@@G@@@[@@@@.     @[@@@@. ["K]@[@@@@.     @]@@@@FU1130.     @ @@@@       XREGSUQ
)@@G@@V            .    @C@@@@       LA    A0,WSWDTH   . TEMP SAVE WIDTH OF WSUR
)@@G@@@ @@@@       SA    A0,FUWIDE   .    @F@@@@       LA,U  A0,FBCMAX   . SETUS
)@@G@@ TO MAX ALLOWED SO NO LINE OVFLO    @ @@@@       SA    A0,WSWDTH   .    UT
)@@G@@@C@@@@       DS    A2,FLNLTP   . SAVE THIS LINE NUMBER@B@@@@       LA,H2UU
)@@G@@ A0,FUDUMY+2 . GET TABLE ADDR @B@@@@       LA,U  A1,1        . PRINT ONEUV
)@@G@@ LINE @ @@@@       LMJ   X11,FUNPRT  .    @C@@@@       J     FU1000     UW
)@@G@@ . THE LINE IS NOT THER @E@@@@       SZ    CONSBR      . BREAK DOESNT MEUX
)@@G@@AN ANYTHING HERE  @D@@@@       LMJ   X11,FUEDIT  . ENTER CHANGE EDIT MODUY
)@@G@@E     @C@@@@       J     FU9010      . GOT AN EOF ON READ   @C@@@@      UZ
)@@G@@ LA    A0,FUWIDE   . RESTORE WIDTH OF WS  @ @@@@       SA    A0,WSWDTH  VA
)@@G@@ .    @ @@@@       DL    A2,FLNLTP   .    @C@@@@       DS    A2,FLNLIN  VB
)@@G@@ . SET THIS LINE NUMBER @ @@@@       XREGLD            .    @F@@@@      VC
)@@G@@ J     FU1010      . GO SCAN THE EDITED LINE AND ENTER IT   @[@@@@.     VD
)@@G@@@[@@@@. [K] @[@@@@.     @C@@@@FU1140 DS    A2,FLNLIN   . POST NEW LINE NVE
)@@G@@UMBER @E@@@@       J     FU1020      . AND GO SCAN REMAINDER OF LINE    VF
)@@G@@@[@@@@.     @D@@@@. [N"]  PRINT LINE N, AND PROMPT FOR A NEW LINE N     VG
)@@G@@@[@@@@.     @G@@@@FU1150 LNA,U A4,1        . GET NO OF LINES, USE SIGN AVH
)@@G@@S PROMPT FLAG     @G@@@@       DS    A2,FLNLTP   . SAVE CURRENT LINE NO VI
)@@G@@FOR LATER RE-PROMPT     @F@@@@                         . AND FALL THRU AVJ
)@@G@@S SPECIAL CASE OF [N"M] @[@@@@.     @B@@@@. [M"N]  PRINT N LINES, STARTIVK
)@@G@@NG FROM M   @[@@@@.     @C@@@@FU1160 SA    A4,FUPFLG   . SAVE PROMPT FLAVL
)@@G@@G     @E@@@@       XREGSV            . SAVE SCAN REGS USED BY LEXCAN    VM
)@@G@@@F@@@@       LMA   A1,A4       . INITIALIZE NO OF LINES TO BE PRINTED   VN
)@@G@@@F@@@@                         . NOTE: 1ST LINE NUM ASSUMED IN A2,A3    VO
)@@G@@@E@@@@       LA,H2 A0,FUDUMY+2 . GET TABLE ADDR FROM DUMMY DESCR  @A@@@@VP
)@@G@@       LMJ   X11,FUNPRT  . PRINT 'EM@B@@@@       J     FU1000      . OOPVQ
)@@G@@S, TRY AGAIN@C@@@@       SZ    CONSBR      . BREAK DOESNT COUNT   @F@@@@VR
)@@G@@       LMJ   X11,FNXTLN  . GET NEXT LINE # (CURRENT ONE IN A3)    @D@@@@VS
)@@G@@       TP    FUPFLG      . DEYERMINE PROPER PROMP     @B@@@@       DL   VT
)@@G@@ A2,FLNLTP   . USE OLD ONE    @ @@@@       DS    A2,FLNLIN   .    @D@@@@VU
)@@G@@       XREGLD            . RESTORE REGS USED BY LEXCAN@E@@@@       J    VV
)@@G@@ FU1020      . AND CONTINUE SCANNING THE LINE   @[@@@@.     @[@@@@.     VW
)@@G@@@B@@@@. PROCESS FUNC HEADER FROM AN EDIT COMMAND@C@@@@FU1170 LMJ   X11,FVX
)@@G@@HANAL  . ANALYZE THE LINE     @ @@@@       J     FU1000      .    @E@@@@VY
)@@G@@       JNZ   A1,FU1171   . IF THERE WAS TEXT, GOLOOK AT IT  @E@@@@      VZ
)@@G@@ JE,U  A0,ALBRAK FU1100 . IF EDIT COMMAND, GO DO IT   @E@@@@       J    WA
)@@G@@ FU1230      . ELSE GO CHECK SCAN TERMINATOR    @E@@@@FU1171 DS    A0,FUWB
)@@G@@HTXT   . SAVE TERM CHAR AND TEXT ADDR     @D@@@@       TNZ   FUPEND     WC
)@@G@@ . IS THIS FUNCTION PENDANT?  @D@@@@       J     FU1172      . NO, GO CHWD
)@@G@@ECK IF RENAMING   @F@@@@       ERROR YDEFN,FU1195     . YES, CANNOT CHANWE
)@@G@@GE ITS HEADER LINE@D@@@@FU1172 TNE   A2,STVFNN   . IS HE TRYING TO RENAMWF
)@@G@@E?    @B@@@@       J     FU1177      . NO, CONTINUE   @C@@@@. CHECK THATWG
)@@G@@ ATTEMPT TO RENAME FUNC IS ALLOWED  @C@@@@FU1173 LA    A5,STVFNN   . GETWH
)@@G@@ CURRENT NAME     @E@@@@       SA    A2,STVFNN   . REPLACE IT WHTI PROPOWI
)@@G@@SED NAME    @G@@@@       NBLCHN FU1177,FU1175   . AND SEE IF A DESCR BY WJ
)@@G@@THAT NAME EXISTS  @E@@@@FU1175 SA    A5,STVFNN   . IF ONE DOES, RESTORE WK
)@@G@@THE OLD NAME@G@@@@       ERROR YDEFN,FU1195     . AND REFUSE TO LET HIM WL
)@@G@@ZAP THE OLD THING @G@@@@FU1177 SZ    FUPEND      . BE SURE PEND FUNC FLAWM
)@@G@@G IS OFF FOR NEW NAMES  @F@@@@       SA    A3,FUNARG   . THEN SAVE NO OFWN
)@@G@@ ARGS IN DUMMY DESCR    @C@@@@       TZ    A4          . RESULT SPECIFIEWO
)@@G@@D?    @D@@@@       LA,U  A4,1        . YES, FORCE FLAG TO ONE     @F@@@@WP
)@@G@@       SA    A4,FUNRES   . AND SET RESULT FLAG IN DUMMY DESCR     @D@@@@WQ
)@@G@@       LA,U  A1,1        . GET REASONABLE FLAG VALUE  @E@@@@       LA   WR
)@@G@@ A4,FULOCK   . GET THE OPENING FUNC OR LOCK     @C@@@@       SZ,S1 FUDUMWS
)@@G@@Y+1    . ZERO TO LOCK FLAG    @C@@@@       TNE,U A4,ALOCK    . WAS FUNCTWT
)@@G@@ION LOCKED? @B@@@@       SA,S1 A1,FUDUMY+1 . SET LOCK FLAG  @D@@@@      WU
)@@G@@ LA    A2,FUHADR   . GET HEADER TEXT RELADR     @C@@@@       LA    A0,FUWV
)@@G@@HTXT   . GET SCAN TERMINATOR  @C@@@@       SSL   A3,36       . CLEAR LABWW
)@@G@@EL FLAG     @D@@@@       J     FU1220      . GO ENTER NEW LINE ZERO     WX
)@@G@@@[@@@@.     @]@@@@. SYSCMD    @[@@@@.     @]@@@@FU1180.     @D@@@@      WY
)@@G@@ LMJ   X11,SYSCMD  . GO DO THE SYSTEM COMMAND   @D@@@@       J     FU100WZ
)@@G@@0      . ERROR IN SCAN - NO SWEAT   @C@@@@       LA    A0,STVCUR   . GETXA
)@@G@@ CURRENT STATE    @B@@@@       TNE,U A0,STFUNC   . STIL FUNC DEFNA@F@@@@XB
)@@G@@       J     FU1000      . YES, EVERYTHING OK - GO GET NEXT LINE  @C@@@@XC
)@@G@@       J     FU9999      . NO! GET OUT QUICK!   @[@@@@.     @A@@@@. THE XD
)@@G@@CURRENT LINE IS TO BE DELETED @[@@@@.     @C@@@@FU1190 SZ    A1         XE
)@@G@@ . MAKE TEXT ADDR ZERO  @B@@@@       DL    A2,FLNLIN   . GET THE LINE # XF
)@@G@@@A@@@@       SZ    A0          . NO LABLE @C@@@@       LMJ   X11,FLENTR XG
)@@G@@ . ENTER IT IN THE TABLE@B@@@@       J     FU9020      . INTERNAL ERROR XH
)@@G@@@[@@@@.     @B@@@@. COMPUTE NEXT LINE NO, THEN CONTINUE     @[@@@@.     XI
)@@G@@@D@@@@FU1195 DL    A3,FLNLIN   . GET CURRENT LINE NUMBER    @D@@@@      XJ
)@@G@@ LMJ   X11,FNXTLN  . COMPUTE NEXT LINE NUMBER   @C@@@@       DS    A2,FLXK
)@@G@@NLIN   . SAVE THE NEXT LINE # @B@@@@       J     FU1000      . AND GO GEXL
)@@G@@T IT  @ @@@@/.    END OF MAIN DEFN LOOP   @[@@@@.     @[@@@@.     @E@@@@XM
)@@G@@FU1200 JZ    A2,FU1000   . EOL-- IF NO STORED TEXT, GO RETRY@B@@@@      XN
)@@G@@ LA,U  A0,AEOL     . ELSE GET FLAG  @F@@@@       J     FU1220      . ANDXO
)@@G@@ GO STASH THIS LINE IN THE TABLE    @F@@@@FU1210 JZ    A2,FU1230   . FUNXP
)@@G@@C/LOCK-- IF NO TEXT, GO CLOSE FUNCT @A@@@@. ENTER CURRENT LINE INTO TABLXQ
)@@G@@E     @D@@@@FU1220 SA    A0,FUHEND   . SAVE CLOSING CHARACTER     @E@@@@XR
)@@G@@       LA    A1,A2       . PICK UP THE POINTER TO THE TEXT  @B@@@@      XS
)@@G@@ SZ    A0          . ASSUME NO LABEL@B@@@@       TZ    A3          . WASXT
)@@G@@ THERE ONE ?@C@@@@       LA,U  A0,1*/12    . YES, SET THE FLAG    @C@@@@XU
)@@G@@       DL    A2,FLNLIN   . RECOVER ITS LINE #   @E@@@@       LMJ   X11,FXV
)@@G@@LENTR  . ENTER THE LINE INTO THE TABLE    @F@@@@       J     FU9020     XW
)@@G@@ . THE ERROR'S BEEN TAKEN CARE OF - EXIT  @D@@@@       DL    A3,FLNLIN  XX
)@@G@@ . GET CURRENT LINE NUMBER    @D@@@@       LMJ   X11,FNXTLN  . COMPUTE NXY
)@@G@@EXT LINE NUMBER   @D@@@@       DS    A2,FLNLIN . . SAVE THE ' NEXT LINE XZ
)@@G@@# '   @E@@@@       LA    A0,FUHEND   . RECOVER SCAN TERMINATION FLAG    YA
)@@G@@@^@@@@. CHECK SCAN TERMINATOR @D@@@@FU1230 JE,U  A0,AEOL FU1000   . IF EYB
)@@G@@OL, GET NEXT LINE @E@@@@       JE,U  A0,AFUNCT FU2000 . IF NORMAL FUNC CYC
)@@G@@LOSE, EXIT  @E@@@@       JE,U  A0,ALOCK FU1240 . IF LOCK, GO SET LOCK BIYD
)@@G@@T     @E@@@@       ERROR YSYNTA,FU1000    . ANY OTHER CHAR IS SYNTAX ERRYE
)@@G@@@A@@@@FU1240 LA,U  A1,1        . GE T BIT @E@@@@       SA,S1 A1,FUDUMY+1YF
)@@G@@ . TO LOCK FIELD OF DUMMY DESCR     @ @@@@/.     LEAVE FUNC DEFN MODE   YG
)@@G@@@]@@@@FU2000.     @B@@@@       LMJ   X11,FCLOSE  . CLOSE TABLE    @ @@@@YH
)@@G@@       J     FU9020      .    @ @@@@FU2010 LX    X11,FULINK  .    @C@@@@YI
)@@G@@       LA    A0,STATMP   . RESTORE ENTRY STATE  @ @@@@       SA    A0,STYJ
)@@G@@VCUR   .    @B@@@@       J     1,X11       . NORMAL EXIT    @F@[@@. CHECYK
)@@G@@K ERR CODE RETRND BY LEXANL TO SEE IF WE STILL TAKE LINES   @B@[@@FU8000YL
)@@G@@ LA,H1 A0,*ERPRNT  . GET ERROR CODE @[@@[[.     @B@@[[. ERROR IN LEXICALYM
)@@G@@ ANALYSIS OF A LINE     @[@@[[.     @E@@[[FU8000  TZ     FUEFLG         YN
)@@G@@. IS INPUT COMING FROM @ED?   @E@@[[        J      FU9030         . YES,YO
)@@G@@ GO CANCEL EVERYTHING   @D@@[[        LA,H1  A0,*ERPRNT     . NO, GET ERYP
)@@G@@ROR CODE    @C]@@@       TE,U  A0,YWSFUL   . WAS IT A WS FULL?    @E@@@@YQ
)@@G@@       J     FU1000      . NO, WE CAN STILL TAKE NEW LINES  @E@@[[      YR
)@@G@@  SZ     FUTABL    . NOTE THAT OPEN TABLE WILL BE GONE@D@@@@       LMJ  YS
)@@G@@ X11,FTFREE  . YES, GO FREE TEXT AND TABLE@A@@@@       ER    ERR$       YT
)@@G@@ . OOPS!    @A@@@@       J     FU9020      . EXIT     @[@[@@.     @ @[@@YU
)@@G@@FU9000 ERROR YDEFN,FU9020 .   @B@[@@FU9010 LMJ   X11,FCLOSE  . CLOSE TABYV
)@@G@@LE    @ @[@@       J     FU9020      .    @G@[@@       CALREP,SYSREP X11YW
)@@G@@,SINOFF    . SIGNOFF CODE IS IN COMMAND MODULE  @E@[@@FU9020 TNZ   FUPENYX
)@@G@@D      . WERE WE EDITING AN PENDANT FUNC? @C@[@@       J     FU9999     YY
)@@G@@ . NO, GET RIGHT OUT    @G@[@@       ERROR YSIDAM      . YES, WARN HIM TYZ
)@@G@@HAT HIS LABELS MAY BE GONE    @[@@[[.     @ @@[[. ERRORS AND EOF CONTIDIZA
)@@G@@ONS---@[@@[[.     @A@@[[FU9000  ERROR  YDEFN,FU9020   .     @[@@[[.     ZB
)@@G@@@^@@[[. END OF FILE ON INPUT--@[@@[[.     @D@@[[FU9010  SZ     FUEOFS   ZC
)@@G@@      . LOWER EOF SEARCH FLAG @D@@[[        SZ     FUTABL         . LOWEZD
)@@G@@R TABLE ERASE FLAG@C@@[[        LMJ    X11,FCLOSE     . CLOSETHE TABLE  ZE
)@@G@@@A@@[[        J      FU9020         .     @F@@[[        TZ     FUEFLG   ZF
)@@G@@      . DID WE JUST READ EDITOR INPUT?    @C@@[[        J      FU2010   ZG
)@@G@@      . YES, NORMAL EXIT@D@@[[        CALREP,SYSREP X11,SINOFF   . NO, SZH
)@@G@@IGN OFF     @[@@[[.     @B@@[[. WE'VE BEEN CREAMED BY A REAL ERROR-     ZI
)@@G@@@[@@[[.     @E@@[[FU9020  TZ     FUEFLG         . IS INPUT COMING FROM @ZJ
)@@G@@ED?   @E@@[[        J      FU9030         . YES, GO DO SPECIAL FARBLING ZK
)@@G@@@F@@[[        TNZ    FUPEND         . NO, WAS FUNC BEING EDITED PENDANT?ZL
)@@G@@@D@@[[        J      FU9999         . NO, IMMEDIATE GOODBYE @G@@[[      ZM
)@@G@@  ERROR  YSIDAM,FU9999  . YES, TELL USER HIS LABELS MAY BE GONE   @[@@[[ZN
)@@G@@.     @E@@[[. ERROR WHILE ASSIMILATING A FUNCTION PROCESSED BY )EDIT    ZO
)@@G@@@F@@[[. SINCE USER CANNOT IMMEDIATELY CORRECT ERRORS IN AN @ADD FILE, WEZP
)@@G@@@F@@[[. CANCEL ALL TRACES OF THE EDITING HERE AND REQUIRE HIM TO RESTARTZQ
)@@G@@@F@@[[. HIS EDITING.  THE EDITOR WILL BE RECALLED AUTOMATICALLY FOR HIM ZR
)@@G@@@[@@[[.     @E@@[[FU9030  TNZ    FUEOFS         . IS @EOF SEARCH FLAG ONZS
)@@G@@?     @E@@[[        J      FU9040         . NO, GO EXAMINE THE TABLE    ZT
)@@G@@@G@@[[        LA     A0,(+FU9040,BUFF)   . YES, READ RECORD INTO TRASH BZU
)@@G@@UFFER @B@@[[        ER     READ$          . YUMMM     @E@@[[        J   ZV
)@@G@@   $-2            . LOOP UNTIL WE GET THE END   @F@@[[FU9040  SZ     FUEZW
)@@G@@OFS         . NOTE THAT WE'VE PASSED THE EOF    @E@@[[        TNZ    FUTZX
)@@G@@ABL         . WAS A TABLE EVER CREATED?   @G@@[[        J      FU9050   ZY
)@@G@@      . NO, DON'T TRY ERASING WHATS NOT THERE   @E@@[[        SZ     FUTZZ
)@@G@@ABL         . MARK TABLE GONE BYE-BYE     @G@@[[        LMJ    X11,FTFREAA
)@@G@@E     . YES, RELEASE TABLE AND ITS TEXT SPACE   @A@@[[        ER     ERRAB
)@@G@@$           .     @G@@[[FU9050  DL     A0,FLNLIN      . GET NEXT LINE NOAC
)@@G@@ IN CASE WE RESUME AT IT@C@@[[        TNZ    A0        . IS IT LINE ZEROAD
)@@G@@?     @F@@[[        DSL    A0,72          . YES, BE SURE EVERYTHING IS CAE
)@@G@@LEARD @[@@[[.     @CC@@@FU9999 LX    X11,FULINK  . PICK UP RETURN ADDR  AF
)@@G@@@B@@@@       J     0,X11       . ERROR EXIT     @ @@@@       VARBLS     AG
)@@G@@       .    @F@@@@FUPFLG RES   1           . PROMPT FLAG (WHOLE WD BECAUAH
)@@G@@SE OF TP)   @B@@@@FULOCK EQUF  $,,Q1       . OPE ING CHAR   @D@@@@FUHENDAI
)@@G@@ EQUF  $,,Q2       . SCAN TERMINATORS GO HERE   @B@@@@FULINK EQUF $,,H2 AJ
)@@G@@       . RETURN LINK    @ @@@@       RES   1           .    @ @@@@FUHTXTAK
)@@G@@ RES   2           .    @ @@@@FUHADR EQU   FUHTXT+1    .    @ @@@@FLNLTPAL
)@@G@@ RES   2           .    @ @@@@FLNLIN RES   2           .    @ @@@@FUHERSAM
)@@G@@ EQU FLNLIN        .    @ @@@@X2TEMP RES   1           .    @ @@@@X3TEMPAN
)@@G@@ RES   1           .    @#@@@@A15TMP RES   1    @E@@@@FUPEND* +0        AO
)@@G@@       . *** TEMP KLUDGE FOR )COPY TO WORK@ @@@@STATMP RES   1          AP
)@@G@@ .    @C@@@@FUWIDE RES   1           . TEMP FOR WIDTH OF WS @ @@[[FUEFLGAQ
)@@G@@  EQUF   $,,H1     .    @A@@[[FUEOFS  EQUF   $,,H2          .     @A@@[[AR
)@@G@@        RES    1              .     @A@@[[FUTABL  EQUF   $,,H1          AS
)@@G@@.     @A@@[[        RES    1              .     @ @@@@       VARCON     AT
)@@G@@       .    @A@@@@FUDUMY* CBLOCK ZTPFUN,0,0,0 0 0 .   @B@@@@FUNARG EQUF AU
)@@G@@ FUDUMY,,S3  . NO OF ARGS     @E@@@@FUNRES EQUF  FUDUMY,,S2  . NON-ZERO AV
)@@G@@IF FUNC HAS A RESULT    @#@@@@       CONSTS     @A@@@@FUFILL +ARBRAK,ASPAW
)@@G@@ACE,ASPACE,AEOL   @B@@@@/. ROUTINE TO HANDLE THE ["K] EDIT COMMAND@C@@@@AX
)@@G@@.  LINE TO BE EDITED ASSUMED TO BE IN CIOBUF    @[@@@@.     @B@@@@.  <SOAY
)@@G@@URCE> IS THE IMAGE BEING EDITED     @[@@@@.     @C@@@@.  THE COMMAND ITSAZ
)@@G@@ELF HAS THE FOLLOWING FORMAT: @[@@@@.     @B@@@@.  'DELIM',<SEARCH>,'DELBA
)@@G@@IM',<CHANGE-TO>,^ @[@@@@.     @F@@@@.  WHERE ^::=   'DELIM'             BB
)@@G@@   => CHANGE FIRST OCCURANCE  @F@@@@.               'DELIM',NON-BLANK CHBC
)@@G@@AR => CHANGE ALL OCCURANCES   @G@@@@.               BLANKS              BD
)@@G@@   => CHANGE FIRST OCCURANCE AND    @G@@@@.                             BE
)@@G@@            DELETE THE REST OF THE IMAGE  @[@@@@.     @[@@@@.     @]@@@@BF
)@@G@@P      PROC @A@@@@FETCH* NAME 010          . LOAD     @B@@@@. LOAD TABLEBG
)@@G@@ FOR THE CHANGE EDIT COMMAND  @#@@@@       UNLI$T     @ @@@@UFIELD EQUF BH
)@@G@@ P(1,2),P(1,3)    @B@@@@       I$    P(0,0),Q1,P(1,1)-12,UFIELD   @B@@@@BI
)@@G@@       I$    P(0,0),Q2,P(1,1)-12,UFIELD   @B@@@@       I$    P(0,0),Q3,PBJ
)@@G@@(1,1)-12,UFIELD   @^@@@@       LMJ   P(1,5),$+1 @C@@@@       I$    P(0,0BK
)@@G@@),Q4,P(1,1)-12,P(1,3),2,P(1,2)@^@@@@       LXM,U P(1,4),0   @^@@@@      BL
)@@G@@ J     0,P(1,5)   @]@@@@       LI$T @]@@@@       END  @]@@@@GE     PROC BM
)@@G@@@]@@@@GETSRC* NAME@^@@@@       EX    SORC,*X4   @]@@@@       END  @]@@@@BN
)@@G@@GT     PROC @]@@@@GTSRCH* NAME@^@@@@       EX    SRCH,*X6   @]@@@@      BO
)@@G@@ END  @]@@@@S      PROC @]@@@@STOTPT* NAME@#@@@@       UNLI$T     @^@@@@BP
)@@G@@       JGD   R1,$+2     @^@@@@       J     S(1,1)     @ @@@@       LMJ  BQ
)@@G@@ X2,0,X2     .    @]@@@@       LI$T @]@@@@       END  @ @@@@       INSTRBR
)@@G@@S            .    @B@@@@FUEDIT SX    X11,FELINK  . SAVE RETURN    @D@@@@BS
)@@G@@FE0100 MOVIMG FBIBUF     . MOVE CIOBUF TO <SOURCE>    @C@@@@       LMJ  BT
)@@G@@ X11,LINITL  . GET EDIT COMMAND     @ @@@@       LA,U  A1,AEOL     .    BU
)@@G@@@ @@@@       LMJ   X2,0,X2     .    @ @@@@       LMJ   X11,BUFILL  .    BV
)@@G@@@B@@@@       J     FE2010      . GOT AN EOF     @F@@@@       MOVIMG FBCBBW
)@@G@@UF     . MOVE EDIT COMMAND TO OUR OWN BUFFER    @A@@@@. INITIALIZE ALL SBX
)@@G@@CAN REGISTERS     @D@@@@       SZ    FEREPT      . CLEAR MULTIPLE REPLACBY
)@@G@@E FLAG@D@@@@       LMJ   X11,LINITL  . SETUP OUTPUT STASH REGS    @C@@@@BZ
)@@G@@       LX    X4,(1,0)    . TAGS INTO <SOURCE>   @ @@@@       LX    X5,X4CA
)@@G@@       .    @C@@@@       LX    X6,X5       . TAGS INTO <SEARCH>   @ @@@@CB
)@@G@@       LX    X7,X6       .    @D@@@@       LR,U  R1,FBCMAX   . SET MAX ACC
)@@G@@LLOWED OUTPUT LINE@[@@@@.     @D@@@@. EDIT IMAGE IN <SOURCE> , CHANGES GCD
)@@G@@O TO <OUTPUT>     @[@@@@.     @D@@@@FE1000 GTSRCH            . GET NEXT CE
)@@G@@CHAR OF <SEARCH>  @F@@@@       JE,U  A0,AEOL   FE2000 . IF LINE BLANK, LCF
)@@G@@EAVE EDIT MODE    @D@@@@       JE,U  A0,ASPACE FE1000 . IGNORE LEADING BCG
)@@G@@LANKS @E@@@@       SA    A0,FEDLIM   . FIRST NON-BLANK IS DELIMITER     CH
)@@G@@@F@@@@       SAVER X6,FESRCH,2 . THIS MARKS LOGICAL START OF <SEARCH>   CI
)@@G@@@D@@@@       GTSRCH            . GET NEXT CHAR OF <SEARCH>  @F@@@@      CJ
)@@G@@ JE,U  A0,AEOL   FE1700 . NOTHING TO LOOK FOR - DEFN ERR    @C@@@@      CK
)@@G@@ JE    A0,FEDLIM FE1700 . AGAIN NOTHING   @C@@@@. LOOK FOR FIRST CHAR OFCL
)@@G@@ <SEARCH> IN <SOURCE>   @D@@@@FE1100 GETSRC            . GET NEXT CHAR OCM
)@@G@@F <SOURCE>  @G@@@@       JE,U  A1,AEOL   FE1520 . NO FIND, ECMO LINE ANDCN
)@@G@@ GET NEW COMMAND  @G@@@@       JE    A1,A0     FE1200 . INITIAL MATCH, LCO
)@@G@@OOK FOR TOTAL MATCH     @D@@@@       STOTPT   FE1600   . ELSE MOVE CHAR CP
)@@G@@TO <OUTPUT> @C@@@@       J     FE1100      . AND GO GET NEXT CHAR @[@@@@CQ
)@@G@@.     @G@@@@. WE HAVE AN INITIAL MATCH, NOW SEE IF REST OF <SEARCH> IS ICR
)@@G@@MBEDDED     @G@@@@. IN <SOURCE> AT THIS POINT. FIRST SAVE TAGS INTO <SOUCS
)@@G@@RCE> SO WE KNOW   @B@@@@. WHERE TO RESTART IF NO MATCH IS FOUND   @[@@@@CT
)@@G@@.     @D@@@@FE1200 SAVER X4,FESORC,2 . SAVE TAGS INTO <SOURCE>    @E@@@@CU
)@@G@@       SA    A1,A5       . TEMP SAVE FIRST CHAR OF MATCH    @D@@@@FE1210CV
)@@G@@ GTSRCH            . GET NEXT CHAR OF <SEARCH>  @D@@@@       JE,U  A0,AECW
)@@G@@OL   FE1700 . NO SECOND DELIMITER   @F@@@@       JE    A0,FEDLIM FE1300 CX
)@@G@@. TOTAL FIND, GO INSERT <CHANGE-TO> @D@@@@       GETSRC            . GETCY
)@@G@@ NEXT CHAR OF <SOURCE>  @E@@@@       JE    A1,A0     FE1210 . IF STILL MCZ
)@@G@@ATCH, KEEP TRYING @F@@@@       JE,U  A1,AEOL   FE1500 . IF EOL, GO CLOSEDA
)@@G@@ OUT THIS PASS    @F@@@@       LOADR X4,FESORC,2 . NO MATCH, RESTORE TAGDB
)@@G@@S INTO <SOURCE>   @F@@@@       LOADR X6,FESRCH,2 . AND REPOSITION TO STADC
)@@G@@RT OF <SEARCH>    @D@@@@       LA    A1,A5       . RESTORE FIRST CHAR OFDD
)@@G@@ MATCH@A@@@@       STOTPT   FE1600   . OUTPUT IT@D@@@@       GTSRCH     DE
)@@G@@       . GET FIRST CHAR OF <SEARCH> @F@@@@       J     FE1100      . ANDDF
)@@G@@ GO BACK TO TOP OF MAIN SEARCH LOOP @[@@@@.     @E@@@@. FOUND <SEARCH> IDG
)@@G@@N <SOURCE> , COPY <CHANG-TO> INTO <OUTPUT>@[@@@@.     @G@@@@FE1300 SAVERDH
)@@G@@ X4,FESORC,2 . SAVE TAGS INTO <SOURCE> IN CASE OF MULTPL CHG@E@@@@FE1310DI
)@@G@@ GTSRCH            . GET NEXT CHAR OF <CHANGE-TO>     @F@@@@       JE,U DJ
)@@G@@ A0,AEOL   FE1519 . NO MORE, IGNORE REST OF <SOURCE>  @G@@@@       JE   DK
)@@G@@ A0,FEDLIM FE1400 . IF FINAL(3RD) DELIMITER, GO CLEAN UP    @E@@@@      DL
)@@G@@ DSL   A0,36       . ELSE MOVE THIS CHAR TO <OUTPUT>  @ @@@@       STOTPDM
)@@G@@T   FE1600   .    @D@@@@       J     FE1310      . AND GO GET THE NEXT ODN
)@@G@@NE    @[@@@@.     @G@@@@. TRY FOR MULTIPLE REPLACE (I.E., SOME NON-BLANKDO
)@@G@@ CHAR AFTER LAST DELIM. @B@@@@FE1400 TZ    FEREPT      . DO WE REPEAT?  DP
)@@G@@@G@@@@       J     FE1420      . YES, GO SETUP CONTINUED SCAN OF <SOURCEDQ
)@@G@@>     @F@@@@FE1410 GTSRCH            . MAYBE, TEST FOR REST OF COMMAND BDR
)@@G@@LANK  @G@@@@       JE,U  A0,AEOL   FE1510 . YES, COPY REST OF <SOURCE> TDS
)@@G@@O <OUTPUT>  @C@@@@       JE,U  A0,ASPACE FE1410 . WHAT BLANK?     @G@@@@DT
)@@G@@       SX    X11,FEREPT  . SOMETHINGS THERE, GUESS WE HAVE TO REPEAT    DU
)@@G@@@E@@@@FE1420 LOADR X6,FESRCH,2 . RESET POINTERS SO WE CAN RESET   @ @@@@DV
)@@G@@       LOADR X4,FESORC,2 .    @D@@@@       GTSRCH            . GET FIRSTDW
)@@G@@ CHAR OF <SEARCH> @C@@@@       J     FE1100      . AND GO LOOK FOR IT   DX
)@@G@@@[@@@@.     @D@@@@. OUTPUT REST OF <SOURCE> AND DISPLAY THE NEW IMAGE   DY
)@@G@@@G@@@@.        FIRST ENTRY IS FOR EOL DETECTED WHILE SEARCHING FOR TOTALDZ
)@@G@@ FIND @[@@@@.     @D@@@@FE1500 LA    A1,A5       . RESTORE FIRST CHAR OFEA
)@@G@@ MATCH@A@@@@       STOTPT   FE1600   . OUTPUT IT@G@@@@       LOADR X4,FEEB
)@@G@@SORC,2 . RESET TAGS FOR <SOURCE> TO AFTER INITIAL FIND@F@@@@FE1510 GETSREC
)@@G@@C            . CONTINUE FETCHING FROM <SOURCE> UNTILL @C@@@@       JE,U ED
)@@G@@ A1,AEOL   FE1520 . WE FIND AN EOL  @ @@@@       STOTPT   FE1600   .    EE
)@@G@@@ @@@@       J     FE1510      .    @E@@@@FE1519 LA,U  A1,AEOL     . CMNEF
)@@G@@D W/O 3RD DELIM COMES HERE    @C@@@@FE1520 STOTPT   FE1600   . STASH THEEG
)@@G@@ FINAL EOL  @D@@@@       LMJ   X11,LINSTR  . SHOW THE GUY WHAT HE DID   EH
)@@G@@@G@@@@       J     FE0100      . AND START THE WHOLE THING OVER FROM THEEI
)@@G@@ TOP  @[@@@@.     @[@@@@.     @B@@@@. PROPOSED CHANGES CAUSE A BUFFER OVEJ
)@@G@@ERFLOW@[@@@@.     @[@@@@.     @C@@@@FE1600 ERROR YLENGT      . GIVE A LEEK
)@@G@@NGTH ERROR  @E@@@@       LMJ   X11,LINITL  . SET UP REGS TO COPY <SOURCEEL
)@@G@@>     @ @@@@       LX    X4,(1,0)    .    @ @@@@       LX    X5,X4      EM
)@@G@@ .    @G@@@@FE1610 GETSRC            . REPRINT <SOURCE> I.E., SHOW HIM NEN
)@@G@@O CHANGE    @A@@@@       JE,U  A1,AEOL   FE1620 .     @ @@@@       STOTPEO
)@@G@@T   0        .    @ @@@@       J     FE1610      .    @B@@@@FE1620 STOTPEP
)@@G@@T   0        . CRAM IN THE EOL@G@@@@       LMJ   X11,LINSTR  . ECHO THE EQ
)@@G@@LINE (AS IT WAS BEFORE EDITING)     @B@@@@       J     FE0100      . ANDER
)@@G@@ START OVER @[@@@@.     @A@@@@. SOME FORM OF COMMAND FORMAT ERROR @[@@@@ES
)@@G@@.     @C@@@@FE1700 SAVER X2,FESRCH,2 . SAVE OUTPUT REGS     @B@@@@      ET
)@@G@@ ERROR YDEFN       . POST ERROR     @ @@@@       LOADR X2,FESRCH,2 .    EU
)@@G@@@E@@@@       J     FE1510      . GO MOVE REST OF IMAGE FOR DISPLAY@[@@@@EV
)@@G@@/.    @^@@@@. LEAVE LINE EDIT MODE  @E@@@@. EDITED IMAGE IN CIOBUF - TO EW
)@@G@@BE SCANNED BY MAIN DEFN LOOP  @[@@@@.     @B@@@@FE2000 LX    X11,FELINK EX
)@@G@@ . NORMAL EXIT    @ @@@@       J     1,X11       .    @F@@@@FE2010 LX   EY
)@@G@@ X11,FELINK  . GOT AN EOF WHILE TRYING FOR COMMAND    @ @@@@       J    EZ
)@@G@@ 0,X11       .    @[@@@@.     @B@@@@. LOAD TABLES FOR SCANNING THE STRINFA
)@@G@@GS    @A@@@@SORC   FETCH A1,FBIBUF,X5,X4,X11 .  @A@@@@SRCH   FETCH A0,FBFB
)@@G@@CBUF,X7,X6,X11 .  @ @@@@       VARBLS            .    @A@@@@FELINK EQUF FC
)@@G@@ $,,H1       . WHAT ELSE@C@@@@FEREPT EQUF  $,,H2       . MULTIPLE REPLACFD
)@@G@@E FLAG@D@@@@FEDLIM EQUF  $+1,,Q1     . COMMAND STRING DELIMITER   @ @@@@FE
)@@G@@       RES   2           .    @ @@@@FESORC RES   2           .    @ @@@@FF
)@@G@@FESRCH RES   2           .    @F@@@@/.       SEGMENT TO CLOSE THE DEFINIFG
)@@G@@TION OF THE CURRENT FUNCTION  @ @@@@       INSTRS            .    @ @@@@FH
)@@G@@FCLOSE* SX    X11,FCLINK  .   @F@@@@       LMJ   X11,FTCLOS  . CLOSE TABFI
)@@G@@LE, GET RID OF OPEN TABLE     @ @@@@       J     FC0900      .    @ @@@@FJ
)@@G@@       SA    A0,FCTABL   .    @G@@@@FC0010 NBLCHN FC0020,FC0810   . CHAIFK
)@@G@@N FROM NAMEBLOK TO DESCR, IF ANY    @A@@@@. AN OLD FUNC IS DEFINED, ERASFL
)@@G@@E IT  @ @@@@       LA    A6,STVFNN   .    @ @@@@       LMJ   X11,ERASEV FM
)@@G@@ .    @ @@@@       J     FC0900      .    @D@@@@FC0020 ALLOCT,U 3 FC0810FN
)@@G@@ . GET SPACE FOR NEW DESCR    @B@@@@       LA    A0,STVFNN   . NAME BLOKFO
)@@G@@ ADDR @ @@@@       ABSADR A0         .    @D@@@@       SA,H2 A1,1,A0    FP
)@@G@@ . DESCR ADDR TO NAMEBLOK     @ @@@@       ABSADR A1         .    @D@@@@FQ
)@@G@@       DL    A2,FUDUMY   . DUMMY DESCR WITH ALL PARAMS@B@@@@       DS   FR
)@@G@@ A2,0,A1     . TO REAL DESCR  @E@@@@       SZ    2,A1        . CLEAR LEVFS
)@@G@@EL/LINK OF REAL DESCR   @C@@@@       LA    A0,FCTABL   . RELADR OF FUNCTFT
)@@G@@ABLE  @B@@@@       SA,H2 A0,1,A1     . TO DESCRIPTOR  @ @@@@       ABSADFU
)@@G@@R A0         .    @F@@@@       LA,H2 A2,0,A0     . SIZE OF CLOSED TBL FRFV
)@@G@@OM BLOK HDR WORD  @E@@@@       ANA,U A2,1        . LESS BLOK HDR=NO OF LFW
)@@G@@INES IN FUNC@D@@@@       SA,H2 A2,0,A1     . NO OF LINES TO FUCN DESCR  FX
)@@G@@@F@@@@       TNZ   FUPEND      . HAVE WE BEEN EDITING A PENDANT FUNC?   FY
)@@G@@@A@@@@       J     FC0100      . NO, EXIT @F@@@@       LA    A0,FCTABL  FZ
)@@G@@ . YES, RECOVER RELAD OF CLOSED FUNCTBL   @G@@@@       LA,U  A0,1,A0    GA
)@@G@@ . BUMP ADDR TO POINT TO ENTRY FOR LINE ZERO    @E@@@@       LMJ   X11,FGB
)@@G@@UNLBC  . AND ASSIGN LOCAL LABEL VALUES    @ @@@@       J     FC0900     GC
)@@G@@ .    @ @@@@FC0100 LX    X11,FCLINK  .    @ @@@@       J     1,X11      GD
)@@G@@ .    @ @@@@FC0800 ERROR YWSFUL,FC0900 .  @F@@@@FC0810 ER    ERR$       GE
)@@G@@ . TEMP UNTIL WE CAN ERASE OLD TEMPORARIES@ @@@@FC0900 LX    X11,FCLINK GF
)@@G@@ .    @ @@@@       J     0,X11       .    @#@@@@       VARBLS  .  @A@@@@GG
)@@G@@FCLINK EQUF  $,,H1 . RETURN LINK    @B@@@@FCTABL EQUF  $,,H2 . CLOSED TAGH
)@@G@@BLE RELADR  @^@@@@       RES   1     .    @D@@@@/. ROUTINE TO COMPUTE 'NGI
)@@G@@EXT LINE NUMBER' FOR FUNCTIONS@A@@@@. 'CURRENT' LINE NUMBER IN A3,A4    GJ
)@@G@@@B@@@@. RETURNS 'NEXT' LINE NUMBER IN A2,A3     @#@@@@       INSTRS .   GK
)@@G@@@C@@@@FNXTLN* DS   A3,FNLINE   . SAVE CURRENT LINE NUM@C@@@@       JZ   GL
)@@G@@ A3,FN0120   . IF ZERO, INCR BY ONE @F@@@@       DTG   A3,PWR10+10 . WILGM
)@@G@@L SHIFTED VAL FIT IN SING INT.?     @C@@@@       J     FN0120      . NO,GN
)@@G@@ USE INCR OF ONE  @E@@@@       DFM   A3,PWR10+8  . YES, SHIFT LEFT 4 DECGO
)@@G@@IMAL DIGITS @A@@@@       DFA   A3,(+0.5D)  . ROUND UP @B@@@@       DFA  GP
)@@G@@ A3,(02074D*/60) . TRUNCATE   @A@@@@       DFU   A0,A3       . UNPACK   GQ
)@@G@@@D@@@@       LNA   A0,A0       . INVERT EXPONENT FOR SHIFT  @D@@@@      GR
)@@G@@ DSA   A1,02074,A0 . ALIGN BIN PT TO RIGHT OF A2@C@@@@. COUNT TRAILING ZGS
)@@G@@EROES TO DETERMINE INCREMENT  @ @@@@       LA,U  A0,4        .    @F@@@@GT
)@@G@@FN0100 JNGD  A0,FN0120   . AFTER FOUR SHIFTS, USE INCR OF ONE     @E@@@@GU
)@@G@@       DI,U  A1,10       . SHIFT RIGHT ONE DECIMAL DIGIT    @C@@@@      GV
)@@G@@ JNZ   A2,FN0110   . IF REMAINDER, STOP   @D@@@@       DSA   A1,36      GW
)@@G@@ . ELSE TRY ANOTHER SHIFT     @ @@@@       J     FN0100      .    @E@@@@GX
)@@G@@FN0110 MSI,U A0,2        . DONE, GET TAG INTO INCR TABLE    @A@@@@      GY
)@@G@@ DL    A2,FLITBL,A0 . GET INCR@D@@@@       J     FN0130      . AND GO INGZ
)@@G@@CLUDE LINE NUMBER @C@@@@FN0120 DL    A2,PWR10    . FORCE INCR TO ONE    HA
)@@G@@@D@@@@FN0130 DFA   A2,FNLINE   . ADD IN OLD LINE NUMBER     @A@@@@      HB
)@@G@@ J     0,X11       . LEAVE    @#@@@@       VARBLS .   @ @@@@FNLINE RES  HC
)@@G@@ 2           .    @#@@@@       CONSTS .   @ @@@@FLITBL + 0.1D           HD
)@@G@@ .    @ @@@@       + 0.01D           .    @ @@@@       + 0.001D         HE
)@@G@@ .    @ @@@@       + 0.0001D         .    @D@@@@/. SEARCH AND PRINT ROUTHF
)@@G@@INE USED BY EDIT COMMANDS     @C@@@@. AT ENTRY:         A1=NO OF LINES THG
)@@G@@O BE PRINTED@D@@@@.                  A2,A3 = FIRST LINE TO BE PRINTED   HH
)@@G@@@A@@@@. RETURNS : A3,A4  LAST LINE PRINTED@ @@@@       INSTRS           HI
)@@G@@ .    @ @[@@FNNPRT* SX   X11,FPLINK  .    @D@[@@       LX,U  X11,HDRPRT HJ
)@@G@@ . SET ROUTINE TO PRINT DEL   @ @[@@       J     FP0010      .    @ @[@@HK
)@@G@@FUNPRT* SX   X11,FPLINK  .    @D@[@@       LX,U  X11,HDNPRT  . SET ROUTIHL
)@@G@@NE TO PRINT [0]   @ @[@@FP0010 SX    X11,FPHPRT  .    @G@@[[. THIS ENTRYHM
)@@G@@ FOR )EDIT-- LINE NOS ARE SURPRESSED, HDR PRINTS WITH BLANK @E@@[[FNSPRTHN
)@@G@@  LA,U   A0,ASPACE . GET SPACE TO USE ON HEADER LINE  @D@@[[        SA  HO
)@@G@@   A0,FULOCK . POST AS OPENING CHARACTER  @G@@[[        LA     A0,(+LINEHP
)@@G@@KO,HDRPRT) . GET ADDRESSES OF PRINT RTNES TO USE@C@@[[        J      FP0HQ
)@@G@@010    . AND GO STASH THEM    @E@@[[. FOR )FLIST AND ["], PUT $F ON HEADHR
)@@G@@ER AND PRINT LINE NOS   @C@@[[FNFPRT  LA,U   A0,AFUNCT . ENTER HERE FOR HS
)@@G@@)FLIST@ @@[[        SA     A0,FULOCK .    @E@@[[FNNPRT  LA     A0,(+LNNEHT
)@@G@@KO,HDRPRT) . ENTER HERE FOR ["]     @ @@[[        J      FP0010    .    HU
)@@G@@@D@@[[. FOR [N"M] PRINT LINE NUMBERS EVEN FOR LINE ZERO--   @D@@[[FUNPRTHV
)@@G@@  LA     A0,(+LNNEKO,HDNPRT) . ENTRY FOR [N"M]  @[@@[[.     @E@@[[FP0010HW
)@@G@@  SA     A0,FPPOIN . SAVE POINTERS TO PRINT ROUTINES  @D@@[[        SX  HX
)@@G@@    X11,FPLINK    . SAVE OUR RETURN ADDR  @EA@@@       SA    A1,FPNLNS  HY
)@@G@@ . SAVE NUMBER OF LINES TO PRINT    @D@@@@       DS    A2,FPLNUM   . SAVHZ
)@@G@@E IN CASE OF NO FIND    @D@@@@       DL    A0,A2       . GET LINE NUM TOIA
)@@G@@ SEARCH FOR @C@@@@       LMJ   X11,FTFIND  . FIND ITS TABLE ENTRY @ @@@@IB
)@@G@@       ER    ERR$        .    @ @@@@. PRINT THE CURRENT LINE .    @C@@@@IC
)@@G@@FP0100 JZ    A0,FP0200   . IF NO NEXT LINE, QUIT@E@@@@       SA    A0,FPID
)@@G@@LAST   . SAVE CURRENT TABLE ENTRY ADDR    @D@@@@       LA,U  A1,0       IE
)@@G@@ . CLEAR TYPE AND MARK FLAG   @E@@@@       LA,H2 A2,2,A0     . GET TEXT IF
)@@G@@ADDR FROM TBL ENTRY     @D@@@@       LA,S1 A3,2,A0     . ALSO LABEL FLAGIG
)@@G@@, IF ANY    @D@@@@       DL    A4,0,A0     . GET LINE NO OF THIS ENTRY  IH
)@@G@@@B@@@@       DS    A4,FPLNUM   . SAVE FOR EXIT  @G@@@@       LA    A6,FUII
)@@G@@LOCK   . GET OPENING CHAR OF FUNC(IN CASE HEADER)     @F@[@@       LX,U IJ
)@@G@@ X11,LNNEKO  . ASSUME WE'RE TO PRINT A NORMAL LINE    @C@[@@       TNZ  IK
)@@G@@ FPLNUM      . IS THIS LINE ZERO?   @D@[@@       LX    X11,FPHPRT  . GETIL
)@@G@@ HEADER PRINT ENTRY PT  @G@@[[        LX,H1  X11,FPPOIN     . ASSUME WE'IM
)@@G@@RE TO PRINT A NORMAL TEXT LINE@C@@[[        TNZ    FPLNUM    . IS THIS LIN
)@@G@@INE ZERO?   @G@@[[        LX,H2  X11,FPPOIN     . YES, GET ADDR OF HDR PIO
)@@G@@RINT RTNE INSTEAD @B#@@@       LMJ   X11,0,X11   . PRINT THIS LINE@ @@@@IP
)@@G@@       ER    ERR$        .    @E@@@@FP0110 TZ    CONSBR      . HAS USER IQ
)@@G@@REQUESTED US TO QUIT?   @B@@@@       J     FP0200      . YES, QUIT HERE IR
)@@G@@@E@@@@       LA    A0,FPNLNS   . NO, GET CT OF NO LINES REMAINING @D@@@@IS
)@@G@@       ANA,U A0,1        . COUNT THE ONE WE JUST DID  @E@@@@       JZ   IT
)@@G@@ A0,FP0200   . IF NO MORE TO DO, GO GET OUT     @F@@@@       SA    A0,FPIU
)@@G@@NLNS   . ELSE SAVE COUNT OF REMAINING LINES     @D@@@@       LA    A0,FPIV
)@@G@@LAST   . GET LAST LINE ENTRY ADDR   @C@@@@       LMJ   X11,FTSCAN  . STEIW
)@@G@@P TO NEXT ENTRY   @ @@@@       ER    ERR$        .    @B@@@@       J    IX
)@@G@@ FP0100      . AND CONTINUE   @B@@@@. ALL LINES HAVE BEEN PRINTED, GET OIY
)@@G@@UT    @D@@@@FP0200 DL    A3,FPLNUM   . GET LAST NUMBER PRINTED    @ @@@@IZ
)@@G@@       LX    X11,FPLINK  .    @ @@@@       J     1,X11       .    @#@@@@JA
)@@G@@       VARBLS  .  @ @@@@FPLINK EQUF  $,,H1       .    @D@@@@FPNLNS EQUF JB
)@@G@@ $,,H2       . NO LINES LEFT TO BE PRINTED@#@@@@       RES   1  . @D@@@@JC
)@@G@@FPLAST EQUF  $,,H1       . TBL ADDR OF LAST ENTRY     @E@[@@FPHPRT EQUF JD
)@@G@@ $,,H2       . HEADER PRINT RTNE ENTRY POINT    @#[@@@       RES   1 .  JE
)@@G@@@F@@[[FPPOIN  +$-$,$-$         . POINTERS TO LINE PRINT RTNES TO BE USEDJF
)@@G@@@#@@@@FPLNUM RES   2 .  @[@@@@.     @G@@@@. CODE FORMERLY HERE REMOVED TJG
)@@G@@O ELEMENT FUNLBL/APL BECAUSE OF SEGMENTING@[@@@@.     @]@@@@       END. JH
)@@G@@___@[[.     @E@@[[FP0010  SA     A0,FPPOIN . SAVE POINTERS TO PRINT ROUTJI
)@@G@@INES  @D@@[[        SX  *[S@@@*SDFF*@[@@@@ 7,8  @[@@@@.     @G@@@@. ****JJ
)@@G@@***************************************************************** @G@@@@JK
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * JL
)@@G@@@G@@@@.                                                                 JM
)@@G@@    * @G@@@@       AXR$         .                                       JN
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        JO
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        JP
)@@G@@                      * @G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLSJQ
)@@G@@                            * @G@@@@       WSDEF.      DEFINE WORKSPACE JR
)@@G@@                                  * @G@@@@WORKSP INFO  2 20.      SET ASJS
)@@G@@IDE THE SPACE                           * @G@@@@       RUNCTL.     DEFINJT
)@@G@@E RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.JU
)@@G@@      AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCJV
)@@G@@K            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.     JW
)@@G@@                                                                * @G@@@@JX
)@@G@@. END OF STANDARD PROC BLOCK                                          * JY
)@@G@@@G@@@@. ****************************************************************JZ
)@@G@@***** @[@@@@.     @[@@@@.     @B@@@@/. ROUTINE TO ASSIGN VALUES TO LABELKA
)@@G@@S     @C@@@@.      AT ENTRY, A0=RELADR OF CLOSED FUNCT TABLE@[@@@@.     KB
)@@G@@@#@@@@       INSTRS .   @D@@@@. THIS ENTRY TO CREATE LOCAL LABELS AT FUNKC
)@@G@@C ENTRY TIME@B@@@@FUNLBC* LA,U A1,0        . TURN OFF FLAG  @C@@@@      KD
)@@G@@ J     FL0010      . AND GO INITIALIZE    @E@@@@. THIS ENTRY POINT TO ERKE
)@@G@@ASE LOCAL LABELS TA FUNC EXIT TIME  @C@@@@FUNLBE* LA,U A1,FL0115   . ADDKF
)@@G@@R OF ERASE CODE   @C@@@@       J     FL0010      . GO SET UP THE LOOP   KG
)@@G@@@E@@@@. THIS ENTRY TO PRINT NAMES OF LABELS (FOR )SIV COMMAND)    @D@@@@KH
)@@G@@FUNLBP* LA,U A1,FL0112   . SET UP ADDR OF PRINT CODE  @[@@@@.     @E@@@@KI
)@@G@@FL0010 SA    A1,FLCREA   . SAVE CREATE/STORE/ERASE FLAG     @ @@@@      KJ
)@@G@@ SX    X11,FLLINK  .    @F@@@@       ANA,U A0,1        . STEP ADR BACK TKK
)@@G@@O BLOCK HEADER WORD     @F@@@@       ABSADR A0         . GET SET TO LOOKKL
)@@G@@ AT CLOSED FUNC TABLE   @B@@@@       LA,H2 A1,0,A0     . GET TABLE SIZE KM
)@@G@@@C@@@@       ANA,U A1,2        . LESS HDR AND LINE 0  @D@@@@       LA   KN
)@@G@@ A10,A1      . NOW WE HAVE A LOOP COUNT   @D@@@@       AA,U  A0,2       KO
)@@G@@ . POINT TO ENTRY FOR LINE 1  @C@@@@       LXI,U A0,1        . PUT IN LIKP
)@@G@@NE NUMBER   @A@@@@       SA    A0,LBFLAG   . SAVE IT  @E@@@@FL0100 JNGD KQ
)@@G@@ A10,FL0130  . WHEN TABLE IS EXHAUSTED, EXIT    @C@@@@       TNZ,S1 0,A0KR
)@@G@@       . IS THIS LINE LABELED?@B@@@@       J     FL0120      . NO, FORGEKS
)@@G@@T IT  @D@@@@       SA    A10,FLLOOP  . YES, SAVE LINE COUNTER     @D@@@@KT
)@@G@@       LA,H2 A3,0,A0     . AND FETCH NEXT TEXT ADDR   @A@@@@       ABSADKU
)@@G@@R A3         . ABS IT   @E@@@@       LA,H1 A5,1,A3     . GET FIRST ENTRYKV
)@@G@@ FROM THE TEXT    @E@@@@       AND,U A5,1*/15-1  . STRIP OFF FLAG BITS FKW
)@@G@@ROM LABEL   @F@@@@       TZ    FLCREA      . ARE WE CREATING THIS LABEL KX
)@@G@@VARIABLE?   @C@@@@       J     *FLCREA     . NO, GO PRINT/ERASE IT@C@@@@KY
)@@G@@. SET UP DUMMY DESCR TO STORE IN LOCAL LABEL    @G@@@@FL0110 LA,H1 A3,LBKZ
)@@G@@FLAG   . GET CURRENT LINE NO FROM RUNNING COUNTER     @D@@@@       TG,U LA
)@@G@@ A3,0200000  . DOES VALUE EXCEED 16 BITS? @G@@@@       J     FL0800     LB
)@@G@@ . YES, AN HORRENDOUS SITUATION, WORTHY OF SYSER@E@[@@       SA,H2 A3,FLLC
)@@G@@DUMY   . NO- STASH VALUE IN DUMMY DESCR   @C@[@@       LA,U  A2,FLDUMY  LD
)@@G@@ . ADDR OF DUMMY DESCR  @F@[@@       RELADR A2         . APPROPRIATELY RLE
)@@G@@ELATIVIZED, OF COURXE   @E@[@@       PUSH  A2          . STASH AS RITEARLF
)@@G@@G OF STORE OP     @A@[@@. CREATE LABEL VARIABLE (FUNC ENTRY)@F@[@@FL0111LG
)@@G@@ LMJ   X11,CRINIT  . CREATE AND INITIALIZE AS IF ARGUMENT   @ @[@@      LH
)@@G@@ J     FL0900      .    @E@@[[        SA,H2  A3,FLSKEL      . PUT INTO SLI
)@@G@@KELETON DESCR     @E@@[[        LMJ    X11,CREATE     . CREATE LINKED INLJ
)@@G@@ITIAL DESCR @A@@[[        J      FL0900         .     @G@@[[        LA  LK
)@@G@@   A1,FLSKEL      . GET WD 1 OF SKEL DESCR WITH VALUE IN IT @C@@[[      LL
)@@G@@  SA     A1,0,A0        . CRAM INTO WS    @CB@@@       J     FL0117     LM
)@@G@@ . GO RESTORE LOOP COUNT@ @@@@. PRINT NAME OF LOCAL VARIABLE@E@@@@FL0112LN
)@@G@@ LMJ   X11,LINRES  . RESTORE OUTPUT BUFFER POINTERS   @E@@@@       LA   LO
)@@G@@ A3,A6       . PUT NAMEBLOK ADDR IN ARG REG     @F@@@@       LA,U  A4,WSLP
)@@G@@ID     . AND SET BASE ADDR OF WORKSPACE UP, ALSO@F@@@@       LMJ   X11,PLQ
)@@G@@RALGN  . THEN PRINT NAME WITH BOUNDARY ALIGNMENT@ @@@@       J     FL090LR
)@@G@@0      .    @D@@@@       LMJ   X11,LINSUS  . SAVE LINE BUFFER POINTERS  LS
)@@G@@@E@@@@       J     FL0117      . GO RESTORE FUNC LINE COUNTER     @ @@@@LT
)@@G@@. ERASE VALUE OF LABEL---     @D@@@@FL0115 LMJ   X11,ERASEL  . ERASE LOCLU
)@@G@@AL LABEL VALUE    @ @@@@       J     FL0900      .    @C@@@@FL0117 LA   LV
)@@G@@ A10,FLLOOP  . RESTORE LINE COUNTER @E@@@@FL0120 LA    A0,LBFLAG   . GETLW
)@@G@@ OLD LINE NUMBER AND ADDR     @A@@@@       AH    A0,(1,1)    . BUMP THEMLX
)@@G@@@A@@@@       SA    A0,LBFLAG   . SAVEM    @^@@@@       J     FL0100     LY
)@@G@@@ @@@@FL0130 LX    X11,FLLINK  .    @B@@@@       J     1,X11       . NORLZ
)@@G@@MAL EXIT    @ @[@@FL0800 ERROR YSYSTM      .    @D@@[[FL0800  EQU    0  MA
)@@G@@            . SYSERR IS JUMP TO IGDM@ [@@@FL0900 LX    X11,FLLINK  .    MB
)@@G@@@B@@@@       J     0,X11       . ERROR EXIT     @#@@@@       VARBLS  .  MC
)@@G@@@ @@@@FLLINK EQUF  $,,H1       .    @ @@@@FLLOOP EQUF  $,,H2       .    MD
)@@G@@@#@@@@       RES   1 .  @D@@@@FLCREA +0      . CAUTION, INDIRECTION MAY ME
)@@G@@GO THRU HERE@#@@@@LBFLAG RES   1 .  @#@@@@       VARCON  .  @B@[@@FLDUMYMF
)@@G@@ CBLOCK ZTPTMP,ZMOHFI,ZRANKS,0  .   @G@@[[FLSKEL  CBLOCK ZTPVAR,ZMOHFI,ZMG
)@@G@@RANKS,0   . SKELETON DESCR FOR LABELS     @][@@@       END. ___,1*/15-1 MH
)@@G@@ . STRIP OFF FLAG BITS F*[S@@@*SDFF*@G@@@@. ****************************MI
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUMJ
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 MK
)@@G@@                                                    * @G@@@@       AXR$ ML
)@@G@@        .                                                 * @G@@@@      MM
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@MN
)@@G@@       WSDEF.      DEFINE WORKSPACE                                   * MO
)@@G@@@G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                       MP
)@@G@@    * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                  MQ
)@@G@@          * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE      MR
)@@G@@                * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK MS
)@@G@@TYPES                 * @G@@@@.                                         MT
)@@G@@                            * @G@@@@. END OF STANDARD PROC BLOCK        MU
)@@G@@                                  * @G@@@@. ****************************MV
)@@G@@***************************************** @[@@@@.     @[@@@@.     @[@[@@MW
)@@G@@.     @B@[@@. EXECUTE TABLE FOR SIXTH WORD PICKUP     @[@[@@.     @[@[@@MX
)@@G@@.     @ @[@@       LA,S6 A2,0,*X5    .    @ @[@@       LMJ   X6,0,X6    MY
)@@G@@ .    @ @[@@ASEXTB LA,S1 A2,0,X5     .    @ @[@@       LA,S2 A2,0,X5    MZ
)@@G@@ .    @ @[@@       LA,S3 A2,0,X5     .    @ @[@@       LA,S4 A2,0,X5    NA
)@@G@@ .    @ @[@@       LA,S5 A2,0,X5     .    @ @[@@       LMJ   X6,ASEXTB-2NB
)@@G@@ .    @[@[@@.     @[@[@@.     @[@[@@.     @B@[@@.    PROC TO STORE AND CNC
)@@G@@OUNT CHARACTERS   @[@[@@.     @[@[@@.     @ @[@@P      PROC             ND
)@@G@@ .    @ @[@@ASSTCT* NAME             .    @ @[@@       UNLI$T           NE
)@@G@@ .    @C@[@@       AA,U  A3,1        . INCREMENT COUNTER    @B@[@@      NF
)@@G@@ LMJ   X2,0,X2     . STORE CHARACTER@D@[@@       JE,U  A2,ASSPCE ASTEND NG
)@@G@@. WAS CHAR A SPACE?     @C@[@@       SA    A3,ASCHCT   . NUMBER OF CHARANH
)@@G@@CTERS @E@[@@       DL    A4,X2       . SAVE LAST NON-BLANK LOCATION     NI
)@@G@@@[@[@@ASTEND@ @[@@       LI$T              .    @ @[@@       END        NJ
)@@G@@       .    @DX@@@/. DRIVER FOR UOM-FUNNYMODE FULL ASCII INPUT/OUTPUT   NK
)@@G@@@#@@@@       INSTRS  .  @ @@@@FUNNYM* SX   X11,ASLINK  .    @E@@[[      NL
)@@G@@  LA      A0,RCOPTW     . GET PROCESSOR CALL OPTIONS  @E@@[[        LSSLNM
)@@G@@    A0,35+'T'-'Z' . MOVE T-BIT TO SIGN POSITION @E@@[[        SSL     A0NN
)@@G@@,35         . AND BACK TO LOW-ORDER BIT   @E@@[[        SA      A0,ASTOPNO
)@@G@@T     . SET UNISCOPE (T-OPTION) FLAG@E@@[[        TNZ     UOMASC        NP
)@@G@@. IS ASCII IMPLEMENTED HERE?  @G@@[[        JZ      A0,AS0910     . NO. NQ
)@@G@@IF HE WANTS IT (NO T-OPT) WIPE OUT  @D@@@@       GHFINT X4 AS0900  . GETNR
)@@G@@ PARAM FORCED TO HALFINT@F@@@@       COMJMP A2,AS0900 0,AS0008 1,AS0008 NS
)@@G@@2,AS0002 3,AS0004 .     @C@@@@. CODE INDICATES PAPER TAPE READER CONTROLNT
)@@G@@--    @E@@@@AS0002 LA,U  A2,0        . CODE=2, TURN OFF PT INPUT MODE   NU
)@@G@@@C@@@@AS0004 SA    A2,RCPTIF   . SET/CLEAR PTI FLAG   @D@[@@       J    NV
)@@G@@ AS0600      . AND GO TAKE NORMAL EXIT    @C@@[[       LA,U  A6,ASDUMD  NW
)@@G@@ . GET DUMMY DESCR ADDR @C@@[[       J     AS0500      . AND TAKE NORMALNX
)@@G@@ EXIT @D@[@@. CODES 0 OR 1 ARE FUNNYMODE OUTPUT(0) AND INPUT (1)  @D@@][NY
)@@G@@. CODES 0 OR 1 ARE FUNNYMODE INPUT(0) AND OUTPUT(1)   @D]@@@AS0008 SA   NZ
)@@G@@ A2,ASOPCD   . SAVE READ/WRITE OPCODE     @E@@@@       ANA,U A14,1      OA
)@@G@@ . COUNT THE VALUE WE JUST FETCHED  @A@[@@. INITIALIZE STASHING IN OUTBUOB
)@@G@@F     @E@[@@AS0010 LX,U  X2,PUTARY+ZMOCHR . USE COMMON CHAR STASH RTNE  OC
)@@G@@@E@[@@       LX,U  X3,BUFF     . AND EVERYBODY'S SHARED BUFFER    @ @[@@OD
)@@G@@       LXI,U X3,1        .    @F@[@@       LA,U  A13,ASBSIZ-1   .  OUTBUOE
)@@G@@F SIZE LESS 1ST (FLAG) CHAR   @D@[@@       LA,U  A1,0777     . GET FUNNYOF
)@@G@@MODE FLAG CHAR    @A@@[[. INITIALIZE STASHING IN OUTBUF     @E@@[[AS0010OG
)@@G@@ LX,U  X3,BUFF     . EVERYONE USES THE COMMON BUFFER  @B@@[[       LXI,UOH
)@@G@@ X3,1        . SET INCREMENT  @C@@[[       LA,U  A13,6       . ASSUME SIOI
)@@G@@XTH-WORDS   @A@@[[       TNZ   ASTOPT      . T-OPTION @D@@[[       LA,U OJ
)@@G@@ A13,4       . NO-QUARTER WORDS, PLEASE   @G@@[[       MSI,U A13,ASBWDS OK
)@@G@@ . TIMES NO WORDS/BUF=CAPACITY OF BUFF IN CHARS @E@@[[       LX,U  X2,ASOL
)@@G@@PUT6   . SET BUF STASH RTNE TO SIXTH-WORDS@A@@[[       TZ    ASTOPT     OM
)@@G@@ . T-OPTION?@C@@[[       J     AS0025      . YES- GO GET 1ST CHAR @G@@[[ON
)@@G@@       LX,U  X2,PUTARY+ZMOCHR      . NO- CHANGE TO QUARTERWORD STASH    OO
)@@G@@@G@@[[       ANA,U A13,1       . DECREMENT COUNT TO COMPENSATE FOR FLAG OP
)@@G@@CHAR  @E@@[[       LA,U  A1,0777     . AND GET FUNNYMODE SIGNAL VALUE   OQ
)@@G@@@ A@@@. STASH CURRENT CHAR IN OUTBUF@ @@@@AS0020 LMJ   X2,0,X2     .    OR
)@@G@@@F@[@@       JNGD  A14,AS0040  . IF INPUT EXHAUSTED, GO FLUSH OUTPUT    OS
)@@G@@@F@@][AS0025 JNGD  A14,AS0040  . IF INPUT EXHAUSTED, GO FLUSH OUTPUT    OT
)@@G@@@F[@@@       JNGD  A13,AS0030  . IF NO ROOM FOR NEXT CHAR, GO FLUSH BUF OU
)@@G@@@B@@@@       GHFINT X4 AS0900  . GET NEXT VALUE @C@@@@       JN    A2,ASOV
)@@G@@0900   . NEG IS DOMAIN ERR    @E@@@@       JLE,U A2,256 AS0900    . SO IOW
)@@G@@S ASCII CHAR .GE. 256   @C@@@@       LA,U  A1,0,A2     . MOVE CHARACTER OX
)@@G@@OVER  @E@@@@       J     AS0020      . AND THEN GO BACK AND STASH IT    OY
)@@G@@@B@@@@. NO ROOM FOR NEXT CHAR, DUMP THE BUFFER  @F@@@@AS0030 LA    A0,ASOZ
)@@G@@BDMP   . GET CTL WD FOR A FULL BUFFER'S WORTH   @B@@@@       ER    PRINTPA
)@@G@@$      . AND DUMP IT    @F@@@@       AA,U  A14,1       . RESTORE COUNT FPB
)@@G@@OR INCHAR NOT PICKED UP @D@@@@       J     AS0010      . AND REINITIALIZPC
)@@G@@E STASHING  @D@@@@. INPUT EXHAUSTED - PAD BUF TO WD BNDRY, GET NO OF WDSPD
)@@G@@@C@[@@AS0040 DSL   A1,72       . GENERATE ASCII NULLS @C@[@@ DO 3 , LMJ PE
)@@G@@X2,0,X2      . STASH THREE OF THEM  @C@@[[AS0040 LA,U  A1,0177     . GETPF
)@@G@@ AN ASCII RUBOUT  @A@@[[       TNZ   ASTOPT      . T-OPTION?@E@@[[      PG
)@@G@@ J     AS0045      . NO-GO DO ASCII FILL OF 3 CHARS   @G@@[[       LA,U PH
)@@G@@ A1,' '      . YES- FILL WITH FIELDATA BLANKS FOR NOW ******@ @@[[ DO 2 PI
)@@G@@, LMJ  X2,0,X2     .    @]@@[[AS0045    . @G@@[[ DO 3 , LMJ  X2,0,X2    PJ
)@@G@@ . 3 FILLS FOR QWD, TOTAL OF 5 FOR 6-TH WDS     @C]@@@       LA,U  A1,0,PK
)@@G@@X3     . GET CURRENT BUF PTR  @D@@@@       ANA,U A1,BUFF     . LESS FWA PL
)@@G@@GIVES NO OF WDS   @D@@@@       SA    A1,ASWDCT   . NO WDS TO PRINT$ PACKPM
)@@G@@ET    @[@@@@.     @C@@@@. NOW READ OR WRITE ACCORDING TO INITIAL REQUESTPN
)@@G@@@[@@@@.     @C@@@@AS0100 TNZ   ASOPCD      . IS OPCODE = PRINT$   @C@@@@PO
)@@G@@       J     AS0200      . NO- GO DO TREAD$     @B@@@@       LA    A0,ASPP
)@@G@@PPKT   . YES, GET CTL WD@ @@@@       ER    PRINT$      .    @B@[@@      PQ
)@@G@@ J     AS0600      . NORMAL EXIT    @[@[@@.     @F@@[[       LA,U  A6,ASPR
)@@G@@DUMD   . GET DUMMY DESCR ADDR FOR FAKED RESULT  @A@@[[       J     AS050PS
)@@G@@0      . AND EXIT @[@@[[.     @#@@[[       CONSTS  .  @G@@[[ASDUMD CBLOCPT
)@@G@@K ZTPTMP,ZMOHFI,ZRANKS,0    . OUTPUT OP HAS VALUE OF ZERO   @D]@@@/ . DOPU
)@@G@@ TREAD$, CONVERT INPUT TO ASCII, IF NECESSARY   @[@@@@.     @#@@[[      PV
)@@G@@ INSTRS  .  @ @@@@AS0200 LA,U  A0,ASPPKT   .    @ @@@@       ER    TREADPW
)@@G@@$      .    @C@@@@       SA    A0,ASWORD   . NUMBER OF WORDS READ @E@[@@PX
)@@G@@       LXI,U X3,1        . INITIALIZE Q. W. STORE ROUTINE   @ @[@@      PY
)@@G@@ LXM,U X3,BUFF+21  .    @A@[@@       LX,U  X2,PUTARY+ZMOHFI .     @D@[@@PZ
)@@G@@       LA,U  A3,0        . INITIALIZE STORE CHAR COUNT@H@[@@       JZ   QA
)@@G@@ A0,AS0400   . IF ZERO WORD COUNT , GO STORE CAR RET AND GET OUT  @ @[@@QB
)@@G@@       LXI,U X5,1        .    @E@[@@       LXM,U X5,BUFF     . PARTIAL FQC
)@@G@@ETCH INITIALIZATION     @ @[@@       L,S1  A0,BUFF     .    @C@[@@      QD
)@@G@@ JNE,U A0,ASCFLG AS0300 . WAS INPUT ASCII?@C@[@@       LA    A0,ASWORD  QE
)@@G@@ . YES- ASCII INPUT     @ @[@@       LSSL  A0,2        .    @C@[@@      QF
)@@G@@ ANA,U A0,1        . CORRECT CHAR COUNT   @D@[@@       LX,U  X4,GLFTBL+ZQG
)@@G@@MOCHR . INITIALIZE Q. W. FETCH@E@[@@AS0225 LMJ   X4,0,X4     . MOVE POINQH
)@@G@@TER OVER ASCII FLAG     @ @[@@AS0250 JNGD  A0,AS0275   .    @ @[@@      QI
)@@G@@ LMJ   X4,0,X4     .    @F@[@@       JE,U  A1,ASCRRT AS0400 . GET OUT IFQJ
)@@G@@ CHAR WAS A CAR RET     @E@[@@       JE,U  A1,ASCISI AS0400 . GET OUT IFQK
)@@G@@ IT WAS A SHIFT IN@ @[@@       LA,U  A2,0,A1     .    @G@[@@       ASSTCQL
)@@G@@T            . STORE CHARACTER AND INCREMENT CHAR COUNT     @ @[@@      QM
)@@G@@ J     AS0250      .    @G@[@@AS0275 LA    A0,ASPPKT+1 . NO CAR RET OR SQN
)@@G@@I FOUND, MUST DO ANOTHER READ$@C@[@@       ER    READ$       . READ CONTQO
)@@G@@INUATION    @ @[@@       LXI,U A0,0        .    @E@[@@       LSSL  A0,2 QP
)@@G@@       . MULTIPLY BY 4 TO GET CHARS COUNT @F@[@@       ANA,U A0,1       QQ
)@@G@@ . CORRECT COUNT , DON'T COUNT ASCII FLAG @D@[@@       LX,U  X4,GLFTBL+ZQR
)@@G@@MOCHR . INITIALIZE Q. W. FETCH@C@[@@       LXM,U X5,BUFF     . RESET FETQS
)@@G@@CH POINTER  @C@[@@       J     AS0225      . GO PROCESS INPUT     @D@[@@QT
)@@G@@AS0300 LA    A0,ASWORD   . NO- INPUT WAS FIELD-DATA   @D@[@@       MSI,UQU
)@@G@@ A0,6        . COMPUTE MAX CHAR COUNT     @D@[@@       LXI,U X6,1       QV
)@@G@@ . INITIALIZE SIXTH-WORD GET  @ @[@@       LXM,U X6,ASEXTB   .    @ @[@@QW
)@@G@@AS0350 JNGD  A0,AS0375   .    @E@[@@       EX    0,*X6       . PICK UP FQX
)@@G@@IELD-DATA CHARACTER     @ @[@@       LA    A2,ASCIIT,A2 .   @G@[@@      QY
)@@G@@ ASSTCT            . STORE CHARACTER AND INCREMENT CHAR COUNT     @C@[@@QZ
)@@G@@       J     AS0350      . GET NEXT CHARACTER   @G@[@@AS0375 DS    A4,X2RA
)@@G@@       . RESTORE X-REGS TO LAST NON-BLANK LOCATION    @E@[@@       LA   RB
)@@G@@ A3,ASCHCT   . RESTORE TO ACTUAL CHAR COUNT     @ @[@@AS0400 LA,U  A6,BURC
)@@G@@FF+21  .    @F@[@@       RELADR A6         . COMPUTE RELATIVE ADDR OF ASRD
)@@G@@CII CHARS   @C@[@@       SA,H2 A6,ASDECP+1 . STORE IN DESCRIPTOR  @ @[@@RE
)@@G@@       LA,U  A6,ASDECP   .    @ @[@@       LA,U  A2,ASCRRT   .    @B@[@@RF
)@@G@@       ASSTCT            . STORE CAR RET  @D@[@@       SZ    A2         RG
)@@G@@ . CREATE NULLS FOR PADDING   @B@[@@ DO 3 , LMJ  X2,0,X2     . PAD OUT BRH
)@@G@@UFFER @E@[@@       J     AS0610      . GO DUPE INPUT INTO WORKSPACE     RI
)@@G@@@^@[@@/ . FINISH UP AND RETURN@[@[@@.     @[@[@@.     @E@[@@AS0600 LA,U RJ
)@@G@@ A6,ASNULD   . DUMMY DESCRIPTOR FOR NULL RESULT @ @[@@AS0610 RELADR A6  RK
)@@G@@       .    @ @[@@       LMJ   X11,DUPE    .    @D@@[[. INITIALIZE TO STRL
)@@G@@ORE RESULT IN AN APL INTEGER RESULT @B@@[[AS0210 LX,U  X3,BUFF+22  . BUIRM
)@@G@@LD IT HERE  @ @@[[       LXI,U X3,1        .    @F@@[[       LX,U  X2,PURN
)@@G@@TARY+ZMOHFI . USE STANDARD HALFINT STASH RTNE   @E@@[[       LA,U  A3,0 RO
)@@G@@       . INIT LENGTH OF RESULT VECTOR     @D@@[[       JZ    A0,AS0390  RP
)@@G@@ . GO HANDLE ZERO-LENGTH IMAGE@E@@[[. NON-ZERO IMAGE LENGTH - SET UP SIXRQ
)@@G@@TH/QUARTER WORD FETCH   @E@@[[AS0230 LX,U  X5,BUFF     . SET ADDR OF PLARR
)@@G@@CE TO FETCH FROM  @ @@[[       LXI,U X5,1        .    @D@@[[       LA,S1RS
)@@G@@ A0,0,X5     . GET 1ST CHAR OF INPUT IMAGE@A@@[[       TNZ   ASTOPT     RT
)@@G@@ . T-OPTION?@F@@[[       TE,U  A0,077      . NO- IS 1ST CHAR ASCII FUNNYRU
)@@G@@MODE SIGNAL?@D@@[[       J     AS0300      . GO DO SIXTH-WORD FETCHING  RV
)@@G@@@D@@[[       LA    A0,ASWORD   . PICK UP-NO OF WORDS READ   @[@@[[.     RW
)@@G@@@^@@[[. FETCH ASCII FUNNYMODE @[@@[[.     @F@@[[AS0240 LSSL  A0,2       RX
)@@G@@ . WORDS TIMES 4=NO OF CHARS IN IMAGE     @E@@[[       ANA,U A0,1       RY
)@@G@@ . LESS 1 TO ACCOUNT FOR ASCII FLAG @F@@[[       LX,U  X4,GLFTBL+ZMOCHR RZ
)@@G@@. INITIALIZE Q.W. FETCH RTNE TO Q1  @E@@[[       LMJ   X4,0,X4     . THESA
)@@G@@N SPACE PAST THE FLAG CHAR    @^@@[[. STASH CURRENT IMAGE   @G@@[[AS0250SB
)@@G@@ JNGD  A0,AS0270   . IF NO MORE IN THIS IMAGE, GO GET CONTINUATION@D@@[[SC
)@@G@@       LMJ   X4,0,X4     . ELSE PICK UP NEXT CHAR     @F@@[[       DSL  SD
)@@G@@ A1,36       . MOVE IT OVER SO IT LOOKS LIKE A HALFINT@A@@[[AS0260 LMJ  SE
)@@G@@ X2,0,X2     . STASH IT @E@@[[       AA,U  A3,1        . AND BUMP COUNT SF
)@@G@@OF CHARS STORED   @C@@[[       TE,U  A2,ASCRRT   . CARRIAGE RETURN?     SG
)@@G@@@D@@[[       TNE,U A2,ASCISI   . NO, HOW ABOUT SHIFT-IN?    @D@@[[      SH
)@@G@@ J     AS0400      . IF EITHER, GO CLOSE IMAGE  @C@@[[       JE,U  A2,ASSI
)@@G@@XOFF AS0400 . OR IF XOFF (DC4)@D@@[[       J     AS0250      . ELSE GO BSJ
)@@G@@ACK FOR NEXT CHAR @E@@[[. END OF IMAGE WITHOUT CR/SI/XOFF INDICATES CONTSK
)@@G@@INUED IMAGE @ @@[[AS0270 LA    A0,ASPPKT+1 .    @C@@[[       ER    READ$SL
)@@G@@       . READ CONTINUATION    @C@@[[       LXM,U X5,BUFF     . RESET FETSM
)@@G@@CH ADDR     @C@@[[       LA,U  A0,0,A0     . BE SURE WORDCT IS OK @F@@[[SN
)@@G@@       JNZ   A0,AS0240   . IF NON-ZERO, GO SCAN THE CONTINUATION  @E@@[[SO
)@@G@@       J     AS0390      . ELSE GO FAKE A CARRIAGE RETURN   @[@@[[.     SP
)@@G@@@A@@[[. SIXTH WORD IMAGE FROM SYMBIONT -  @[@@[[.     @D@@[[AS0300 LA   SQ
)@@G@@ A0,ASWORD   . GET WORDCT OF INPUT IMAGE  @C@@[[       MSI,U A0,6       SR
)@@G@@ . TIMES SIX=CHAR CT    @F@@[[       LX,U  X6,ASGET6   . SET UP FETCH LISS
)@@G@@NKAGE FOR SIXTH-WD FETCH@ @@[[       LXI,U X6,1        .    @E@@[[AS0310ST
)@@G@@ JNGD  A0,AS0320   . QUIT WHEN SOURCE IS EXHAUSTED    @E@@[[       EX   SU
)@@G@@ 0,*X6       . GET NEXT FIELDATA CHAR TO A2     @B@@[[       TNZ   ASTOPSV
)@@G@@T      . IS T-OPTION ON?@D@@[[       LA    A2,ASCIIT,A2     . NO-CONVERTSW
)@@G@@ IT TO ASCII@B@@[[       LMJ   X2,0,X2     . STASH THE CHAR @B@@[[      SX
)@@G@@ AA,U  A3,1        . AND COUNT IT   @G@@[[       JE,U  A2,ASSPCE AS0310 SY
)@@G@@. IF AN ASCII SPACE, CONTINUE THE MARCH   @G@@[[       DL    A4,X2      SZ
)@@G@@ . ELSE GET STASH REGS TO PAD AFTER NON-BLANK   @E@@[[       SA    A3,ASTA
)@@G@@CHCT   . AND SAVE NO OF NON-BLANK CHARS   @C@@[[       J     AS0310     TB
)@@G@@ . THEN GO GET NEXT CHAR@^@@[[. END OF SIXTHWORD IMAGE@F@@[[AS0320 DS   TC
)@@G@@ A4,X2       . RESTORE REGS TO CHAR AFTER LAST NON-BL @A@@[[       TNZ  TD
)@@G@@ ASTOPT      . T-OPTION?@F@@[[       LA    A3,ASCHCT   . NO, RESET CHAR TE
)@@G@@CT TO NO OF NON-BLANKS  @[@@[[.     @A@@[[. SPECIAL HANDLING FOR NULL IMTF
)@@G@@AGES--@[@@[[.     @A@@[[AS0390 TZ    ASTOPT      . T-OPTION?@D@@[[      TG
)@@G@@ J     AS0400      . YES- GO SAVE NULL RESULT   @E@@[[       LA,U  A2,ASTH
)@@G@@CRRT   . MANUFACTURE A CARRIAGE RETURN    @A@@[[       LMJ   X2,0,X2    TI
)@@G@@ . STASH IT @B@@[[       AA,U  A3,1        . AND COUNT IT   @[@@[[.     TJ
)@@G@@@#@@[[. CLOSE IMAGE     @[@@[[.     @F@@[[AS0400 SA    A3,ASCHCT   . NO TK
)@@G@@OF CHARS TO LENGTH FIELD OF DESCR   @D@@[[       LA,U  A6,BUFF+22  . STATL
)@@G@@RT ADDR OF THE IMAGE    @F@@[[       RELADR A6         . WHICH MUST BE RTM
)@@G@@ELATIVE TO ORIGIN OF WS @F@@[[       SA,H2 A6,ASDECP+1 . BECAUSE IT IS DTN
)@@G@@ATA ADDR OF DUMMY DESCR @D@@[[       LA,U  A6,ASDECP   . GET ADDR OF DUMTO
)@@G@@MY DESCR    @F@@[[                         . AND FALL THRU TO WRITE IT ITP
)@@G@@NTO THE WS  @[@@[[.     @B@@[[. NORMAL EXIT (DESCR ADDR SHOULD BE IN A6)TQ
)@@G@@@[@@[[.     @D@@[[AS0500 RELADR A6         . FIX UP REL ADDR OF DESCR   TR
)@@G@@@D@@[[       LMJ   X11,DUPE    . DUPE RESULT INTO THE WS    @ 7@@@      TS
)@@G@@ J     AS0999      .    @C@@@@       PUSH  A2          . STACK DUMMY RESTT
)@@G@@ULT   @ @@@@       LX    X11,ASLINK  .    @ @@@@       J     1,X11      TU
)@@G@@ .    @[@@@@.     @#@@@@. ERROR EXITS -   @A@@@@AS0900 ERROR YDOMAI,AS09TV
)@@G@@99    .     @A@@[[AS0910  ERROR   YUNIMP,AS0999 .     @A@@@@AS0999 LX   TW
)@@G@@ X11,ASLINK       .     @A@@@@       J     0,X11            .     @F@@@@TX
)@@G@@AS1000 CALREP,SYSREP X11,SINOFF . EOF ENCOUNTERED , GO SIGN OFF   @[@@[[TY
)@@G@@.     @D@@[[. CODE BELOW USED FOR SIXTH-WORD LOADS AND STORES     @[@@[[TZ
)@@G@@.     @ @@[[       LA,S6 A2,0,*X5    .    @ @@[[       LMJ   X6,0,X6    UA
)@@G@@ .    @ @@[[ASGET6 LA,S1 A2,0,X5     .    @ @@[[       LA,S2 A2,0,X5    UB
)@@G@@ .    @ @@[[       LA,S3 A2,0,X5     .    @ @@[[       LA,S4 A2,0,X5    UC
)@@G@@ .    @ @@[[       LA,S5 A2,0,X5     .    @ @@[[       LMJ   X6,ASGET6-2UD
)@@G@@ .    @[@@[[.     @ @@[[ASPUT6 SA,S1 A1,0,X3     .    @ @@[[       LMJ  UE
)@@G@@ X2,0,X2     .    @ @@[[       SA,S2 A1,0,X3     .    @ @@[[       LMJ  UF
)@@G@@ X2,0,X2     .    @ @@[[       SA,S3 A1,0,X3     .    @ @@[[       LMJ  UG
)@@G@@ X2,0,X2     .    @ @@[[       SA,S4 A1,0,X3     .    @ @@[[       LMJ  UH
)@@G@@ X2,0,X2     .    @ @@[[       SA,S5 A1,0,X3     .    @ @@[[       LMJ  UI
)@@G@@ X2,0,X2     .    @ @@[[       SA,S6 A1,0,*X3    .    @ @@[[       LMJ  UJ
)@@G@@ X2,0,X2     .    @ @@[[       J     ASPUT6      .    @ @@@@       VARCOUK
)@@G@@N            .    @G@[@@ASNULD CBLOCK ZTPTMP,ZMOHFI,ZRANKS,0    . DUMMY UL
)@@G@@DESCRIPTOR FOR RESULTS  @A[@@@. PACKETS, ETC.  FOR FUNNYMODE I/O  @F@@@@UM
)@@G@@ASPPKT  +0,BUFF          . WORD 1 OF TREAD$ PKT = PRINT$ CTL WD   @G@@@@UN
)@@G@@        +AS1000,BUFF     . WORD 2= READ$, NOTE: EOF ADDR GIVES )BOUNCE  UO
)@@G@@@B@@@@ASDECP CBLOCK ZTPTMP,ZMOHFI,ZRANKV,0 .    @ @@@@       + 0        UP
)@@G@@       .    @E@@@@ASCHCT EQUF  ASDECP,,H2  . CHARACTER COUNT FOR DESCRIPUQ
)@@G@@TOR   @ @[@@ASCIIT EQUF  FDASCI,,H2  .    @F@@[[ASCIIT  EQUF   ASFDQ1,,QUR
)@@G@@1     . TABLE TO GET ASCII FROM FIELDATA  @C[@@@ASWDCT  EQUF ASPPKT,,H1 US
)@@G@@ . OUTPUT WORDCOUNT     @D@[@@ASBSIZ  EQU  88          . SIZE OF OUTBUF UT
)@@G@@(CHARS)     @F@[@@ASBDMP  +(ASBSIZ//4),BUFF     . PRINT CTL TO DUMP ENTIUU
)@@G@@RE BUFFER   @C@@[[ASBWDS EQU   22          . SIZE OF BUF IN WORDS @F@@[[UV
)@@G@@ASBDMP +ASBWDS,BUFF      . PRINT$ CTL WD TO DUMP ENTIRE BUFFER    @C]@@@UW
)@@G@@ASCRRT EQU   015         . ASCII CARRAGE RETURN @A@@@@ASCISI EQU   017  UX
)@@G@@       . SHIFT IN @B@@[[ASXOFF EQU   023         . XOFF (DC3)     @ @@@@UY
)@@G@@ASCFLG EQU   077         .    @B@@@@ASSPCE EQU   040         . ASCII SPAUZ
)@@G@@CE    @#@@@@        VARBLS .  @ @@@@ASLINK  EQUF  $,,H1      .    @ @@@@VA
)@@G@@ASOPCD EQUF  $,,S4       .    @ @@@@        RES   1          .    @F@@[[VB
)@@G@@ASTOPT EQUF  $,,H1       . FLAG FOR T-OPTION (FIELDATA FUNNYMODE) @C@@@@VC
)@@G@@ASWORD EQUF  $,,H2       . INPUT WORD COUNT     @ @@@@       RES 1      VD
)@@G@@       .    @ @@@@        END              .    ___@@@       PUSH  A2   VE
)@@G@@       . STACK DUMMY RES*[S@@@*SDFF*@G@@@@. ****************************VF
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUVG
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 VH
)@@G@@                                                    * @G@@@@       AXR$ VI
)@@G@@        .                                                 * @G@@@@      VJ
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@VK
)@@G@@       WSDEF.      DEFINE WORKSPACE                                   * VL
)@@G@@@G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                       VM
)@@G@@    * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                  VN
)@@G@@          * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE      VO
)@@G@@                * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK VP
)@@G@@TYPES                 * @G@@@@.                                         VQ
)@@G@@                            * @G@@@@. END OF STANDARD PROC BLOCK        VR
)@@G@@                                  * @G@@@@. ****************************VS
)@@G@@***************************************** @[@@@@.     @G@@@@. THIS RTNE VT
)@@G@@HANDLES ALL MANIPULATIONS OF FUNCTION TABLES.  AN OPEN FUNC @F@@@@. TABLVU
)@@G@@E IS A LINKED CHAIN OF BLOCKS, THE 1ST 2 WORDS OF WHICH ARE @E@@@@. CONTVV
)@@G@@ROL INFO, FOLLOWED BY 3-WORD ENTRIES, 1 PER LINE .    @G@@@@.           VW
)@@G@@            ..............................................  @G@@@@. THE VX
)@@G@@CONTROL INFO IS --: ZTPFTB(S1) : X :               BLKSIZE(H2) :  @G@@@@VY
)@@G@@.                       :  BACKWARD LINK (H1)        : FWD LINK (H2) :  VZ
)@@G@@@G@@@@.                       :.........................................WA
)@@G@@....  @G@@@@. DATA ENTRIES ARE :    :   LINE NUMBER (DFLOAT)  1ST WORD  WB
)@@G@@         :  @G@@@@.                       :   2 ND WORD OF  LINE NUM    WC
)@@G@@               :  @G@@@@.                       : LBL  : STOP : TRACE : WD
)@@G@@ADDR OF LEX TEXT(H2) :  @G@@@@.                       :.................WE
)@@G@@...........................:  @G@@@@. WHERE  LBL IS  ON IF STMNT IS LABEWF
)@@G@@LED,  STOP/TRACE ARE CARRIED ALONG  @G@@@@. FROM THEIR VALUES FOR THIS LWG
)@@G@@INE IF IT WAS ORIGINALLY A CLOSED FUNC..  @[@@@@.     @F@@@@. THE FIRST WH
)@@G@@BLOCK MAY BE OF ARBITRARY SIZE (IF WE'RE RE-OPENING); @D@@@@. SUBSEQUENTWI
)@@G@@ BLOX ARE ALLOCATED IN UNITS OF FTBSIZ    @[@@@@.     @D@@@@       FUZDEWJ
)@@G@@F  . DEFINE CONSTANTS NEEDED FUR FUZZING  @[@@@@.     @F@@@@FTLINS EQU  WK
)@@G@@ 15          . NO OF LINE ENTRIES IN OPEN FUNCBLOK    @F@@@@FTBSIZ EQU  WL
)@@G@@ 2+3*FTLINS  . NO OF WDS USED IN BLOK OF DEFAULT SIZE @B@@@@/. ADDRESSINWM
)@@G@@G CONTROL FOR OPEN FUNCTABLES @D@@@@.  ENTRY CONDITIONS:  A0=ADDR OF LASWN
)@@G@@T WORD ACCESSED   @B@@@@.                     LMJ   X11,STEPX     @B@@@@WO
)@@G@@.                     +    PARAMETER WORD @F@@@@. WHERE THE PARAMETER WOWP
)@@G@@RD IS INTERNAL TO THIS ROUTINE, AND MUST  @F@@@@. BE INITIALIZED BY A CAWQ
)@@G@@LL TO FSTEPI, AND MUST NOT BE DISTURBED   @ @@@@. BY THE CALLING ROUTINEWR
)@@G@@S.    @G@@@@.  AT EXIT, A0=NEXT ENTRY ADDR (ABSOLUTE) OR ZERO, IF NO NEXWS
)@@G@@T ENTRY     @[@@@@.     @B@@@@. THIS ENTRY POINT STEPS TO THE RIGHT     WT
)@@G@@@[@@@@.     @#@@@@       INSTRS .   @D@@@@FSTEPR* AA,U A0,3        . STEWU
)@@G@@P TO NEXT 3-WORD ENTRY  @F@@@@       TLE,H2 A0,*0,X11  . PAST LWA OF THIWV
)@@G@@S BLOK (IN PARAM WD)?   @A@@@@       J     1,X11       . NO, OUT  @G@@@@WW
)@@G@@       LA,H1 A0,*0,X11   . YES, GET FWA OF THIS BLOK FROM PARAM WORD    WX
)@@G@@@F@@@@       LA,H2 A0,1,A0     . GET REL FWD LINK FROM 2ND WD OF BLOK   WY
)@@G@@@D@@@@       JNZ   A0,FSTEPI   . IF IT EXISTS, GO STEP TO IT@B@@@@. NO NWZ
)@@G@@EXT BLOCK, TRY AND ALLOCATE ONE     @ @@@@FR0010 SX    X11,FRLINK  .    XA
)@@G@@@B@@@@       ALLOCT,U FTBSIZ FR0020 . YUMMMMMMM @B@@@@       LX    X11,FXB
)@@G@@RLINK  . RESTORE LINKAGE@F@@@@       LA,H1 A0,*0,X11   . GET FWA OF LASTXC
)@@G@@ BLOK FROM PARAM WORD   @G@@@@       SA,H2 A1,1,A0     . MAKE FWD LINK OXD
)@@G@@F OLD BLOK POINT TO NEW ONE   @C@@@@       RELADR A0         . RELADR OFXE
)@@G@@ OLD BLOCK  @B@@@@       ABSADR A1         . ABSADR OF NEW  @F@@@@      XF
)@@G@@ LSSL  A0,18       . ALIGN OLD BLOK ADDR TO BKWD PTR FIELD  @E@@@@      XG
)@@G@@ SA    A0,1,A1     . AND SET POINTER WD OF NEW BLOCK  @C@@@@       LA   XH
)@@G@@ A0,FLSKEL   . SKELETON HEADER WD   @B@@@@       SA    A0,0,A1     . TO XI
)@@G@@NE W BLOCK  @D@@@@       LNA,U A0,2        . GET END OF TABLE MARKER    XJ
)@@G@@@E@@@@       SA    A0,2,A1     . AND MARK 1ST SLOT ACCORDINGLY    @B@@@@XK
)@@G@@       LA    A0,A1       . MOVE ADDR OVER @D@@@@       RELADR A0        XL
)@@G@@ . FIX SO WE CAN FALL THRU    @[@@@@.     @C@@@@. INITIALIZATION-- RELADXM
)@@G@@R OF 1ST BLOK IN A0     @[@@@@.     @D@@@@FSTEPI* ABSADR A0        . GETXN
)@@G@@ ADDR OF BLOK HDR WORD  @E@@@@       SA,H1 A0,*0,X11   . AND PLUG INTO PXO
)@@G@@ARAMETER WORD     @D@@@@       AU,H2 A0,0,A0     . ADD IN LENGTH OF BLOCXP
)@@G@@K     @E@@@@       SA,H2 A1,*0,X11   . AND POST LWA+1 TO TEST FOR EOB   XQ
)@@G@@@E@@@@       AA,U  A0,2        . GET ADDR OF 1ST USABLE WD IN BLOK@B@@@@XR
)@@G@@       J     1,X11       . AND GET OUT    @[@@@@.     @E@@@@FR0020 LA,U XS
)@@G@@ A0,0        . SIGNAL NO NEW BLOCK AVAILABLE    @A@@@@       J     1,X11XT
)@@G@@       . AND QUIT @[@@@@.     @C@@@@. THIS ENTRY TO STEP TO THE LEFT (BAXU
)@@G@@CKWARD)     @[@@@@.     @D@@@@FSTEPL* ANA,U A0,3       . STEP BACKWARD OXV
)@@G@@NE ENTRY    @F@@@@       TG,H1 A0,*0,X11   . DID WE GO PAST THE FWA OF TXW
)@@G@@HIS BLOCK?  @B@@@@       J     1,X11       . NO, GET OUT    @F@@@@      XX
)@@G@@ LA,H1 A0,*0,X11   . YES, GET FWA OF BLOK FROM PARAM WORD   @F@@@@      XY
)@@G@@ LA,H1 A0,1,A0     . PICK UP BKWD POINTER FROM WD 2 OF BLOK @C@@@@      XZ
)@@G@@ JZ    A0,1,X11    . IF NONE, GET OUT     @C@@@@       ABSADR A0        YA
)@@G@@ . E.SE MAKE IT ABSOLUTE@F@@@@       SA,H1 A0,*0,X11   . STUFF NEW BLOK YB
)@@G@@FWA INTO PARAM WORD     @C@@@@       AA,H2 A0,0,A0     . ADD LENGTH OF BYC
)@@G@@LOCK  @E@@@@       SA,H2 A0,*0,X11   . AND PUT LWA+1 INTO PRAM WORD, TOOYD
)@@G@@@F@@@@       ANA,U A0,3        . ADJUST ADDR TO LAST ENTRY IN THE BLOK  YE
)@@G@@@A@@@@       J     1,X11       . AND QUIT @#@@@@       VARBLS .   @^@@@@YF
)@@G@@FRLINK EQUF  $,,H1 .    @#@@@@       RES   1 .  @[@@@@.     @E@@@@. THE YG
)@@G@@FOLLOWING PROCS ARE USED TO REFERENCE THE ABOVE--     @#@@@@P      PROC YH
)@@G@@ .    @#@@@@IFSTEP* NAME .    @#@@@@       UNLI$T .   @ @@@@       LMJ  YI
)@@G@@ X11,FSTEPI  .    @#@@@@       +P(1,1)   .@#@@@@       LI$T .     @]@@@@YJ
)@@G@@       END .@#@@@@P      PROC  .    @#@@@@RFSTEP* NAME .    @#@@@@      YK
)@@G@@ UNLI$T .   @ @@@@       LMJ   X11,FSTEPR  .    @#@@@@       +P(1,1)   .YL
)@@G@@@#@@@@       LI$T .     @]@@@@       END .@#@@@@P      PROC  .    @#@@@@YM
)@@G@@LFSTEP* NAME .    @#@@@@       UNLI$T .   @ @@@@       LMJ   X11,FSTEPL YN
)@@G@@ .    @#@@@@       +P(1,1)   .@#@@@@       LI$T .     @]@@@@       END .YO
)@@G@@@E@@@@/.    MAINTAIN LINENO TABLES FOR FUNCTIONS BEING UPDATED    @[@@@@YP
)@@G@@.     @A@@@@. ***** OPEN THE FUNC TABLES *****  @G@@@@.  AT INPUT- A0=ABYQ
)@@G@@SADR OF FUNC DESCR, A1=BASE ADDR OF WORKSPACE IT'S IN @D@@@@.         OUYR
)@@G@@TPUT  A2,A3 : FLOATVAL OF 'NEXT LINE'     @[@@@@.     @[@@@@.     @#@@@@YS
)@@G@@       INSTRS .   @E@@[[FKOPEN* SZ   FUPEND      . CLEAR PEND FUNC FLAG,YT
)@@G@@ )COPY ENTRY@ @@@@FLOPEN* SX   X11,FOLINK  .    @F@@@@       SA    A0,FOYU
)@@G@@DESC   . SAVE ADDR OF DESCRIPTOR (ABSOLUTE)     @F@@@@       TZ,H2 1,A0 YV
)@@G@@       . IS A CLOSED TBL CHAINED OFF THE DESCR? @B@@@@       J     FO010YW
)@@G@@0      . YES, GO COPY IT@D@@@@. ALLOCATE BLOCK FOR NEW FUNC (NO OLD BLOKYX
)@@G@@ TO COPY)   @C@@@@FO0010 LA,U  A0,FTBSIZ   . GET DEFAULT BLOCKSIZE@D@@@@YY
)@@G@@       SA    A0,FOBSIZ   . SAVE NO OF WDS ALLOCATED   @F@@@@       SZ   YZ
)@@G@@ FOLINS      . BUT SET NO OF LINES COPIED TO NONE     @D@@@@       ALLOCZA
)@@G@@T FO0900     . ACQUIRE THE NEEDED SPACE   @E@@@@       SA    A1,FLFRST  ZB
)@@G@@ . POST RELADR OF 1ST BLOCK ON CHAN @E@@@@       J     FO0200      . GO ZC
)@@G@@INITIALIZE REMAINING POINTERS @[@@@@.     @C@@@@. COPY OLD FUNCTABLE INTZD
)@@G@@O A VARIABLE SIZE BLOCK @[@@@@.     @F@@@@FO0100 SA    A1,FOWBAS   . SAVZE
)@@G@@E BASEADR OF WS WE'RE TO COPY FROM  @F@@@@       AA,H2 A1,1,A0     . ADDZF
)@@G@@ RELADR OF CLOSED TABLE (FROM DESCR)@E@@@@       SA    A1,FOBLOK   . ANDZG
)@@G@@ SAVE ABSADR OF CLOSED TABLE  @C@@@@       LA    A2,FODESC   . GET ABSADZH
)@@G@@R OF DESCR  @D@@@@       LA,H2 A2,0,A2     . NO OF LINES FROM DESCR     ZI
)@@G@@@G@@@@       SA    A2,FOLINS   . AND TEMP SAVE FOR LOOP CTRL WHILE COPYIZJ
)@@G@@NG    @F@@@@       MSI,U A2,3        . TIMES 3 GIVES NO WDS NEEDED FOR DZK
)@@G@@ATA   @F@@@@       AA,U  A2,2+6      . PLUS 2 WDS OVERHEAD AND 2 EXTRA SZL
)@@G@@LOTS  @D@@@@       SA    A2,FOBSIZ   . SAVE SIZE OF NEEDED BLOK   @G@@@@ZM
)@@G@@. NOW ALLOCATE SPACE AT THE TOP OF THE WS (WE TRY TO FORCE TEMPORARY    ZN
)@@G@@@E@@@@. STUFF AT HIGH WS ADDRS TO MINIMIZE EXTERNAL FRAGMENTATION)@E@@@@ZO
)@@G@@FO0110 UNLNKL            . FIND AND UNLINK THE LARGEST BLOCK@E@@@@      ZP
)@@G@@ LA    A0,WSFLWA   . ADDR OF LAST WORD IN THE BIG BLOK@C@@@@       ANA  ZQ
)@@G@@ A0,FOBSIZ   . LESS NO WDS WE NEED  @G@@@@       AA,U  A0,1        . PLUZR
)@@G@@S 1 GIVES RELATIVE FWA OF BLOCK WE'LL USE @E@@@@       SA    A0,FLFRST  ZS
)@@G@@ . POST FWA OF 1ST BLOCK FOR FLENTER@G@@@@       AN    A0,WSFFWA   . LESZT
)@@G@@S ADDR OF 1ST WD IN BIG BLOK=NO UNUSED WDS@D@@@@       TLE,U A0,1       ZU
)@@G@@ . AT LEAST 1 WORD TO FREE?   @C@@@@       J     FO0910      . NO, SIGNAZV
)@@G@@ L WSFULL   @D@@@@       LA    A1,WSFFWA   . ADDR OF FIRST WD IN BLOK   ZW
)@@G@@@G@@@@       FREE              . PUT UNUSED SPACE BACK ON AVAL STORAGE LZX
)@@G@@IST   @[@@@@.     @E@@@@. INITIALIZE TBL HEADER, COPY CLOSED TBL (IF ANYZY
)@@G@@) TO IT     @[@@@@.     @D@@@@FO0200 LA    A0,FLFRST   . GET ADDR OF BLOZZ
)@@G@@K HDR WD    @ @@@@       ABSADR A0         .    @C@@@@       LA    A1,FLAA
)@@G@@SKEL   . SKELETON HEADER WORD @E@@@@       LXM   A1,FOBSIZ   . PUT IN NOAB
)@@G@@ WDS ACTUALLY ALLOCATED @D@@@@       SA    A1,0,A0     . INITIALIZE 1ST AC
)@@G@@WD OF BLOCK @E@@@@       SZ    1,A0        . AND CLEAR BLOCK LINKAGE WORAD
)@@G@@D     @D@@@@       LA    A0,FLFRST   . RECOVER RELADR OF BLOK HDR @F@@@@AE
)@@G@@       IFSTEP FLPARM     . INITIALIZE PARAM WORD TO STASH IN IT   @F@@@@AF
)@@G@@       ANA,U A0,3        . SUBTRACT 1 ENTRY FROM NEXT ENTRY ADDR  @F@@@@AG
)@@G@@       SA    A0,FLLAST   . AND SAVE ADDR OF LAST ENTRY STORED INTO@F@@@@AH
)@@G@@       LA    A3,FOLINS   . GET CT OF NO OF LINES LEFT TO BE COPIED@D@@@@AI
)@@G@@       DSL   A4,72       . CLEAR 'NEXT LINE' NUMBER   @C@@@@       LA   AJ
)@@G@@ A2,FOBLOK   . ADDR OF CLOSED TABLE @F@@@@       LXI,U A2,1        . WHOAK
)@@G@@SE ENTIREIS ARE IN SINGLE WORDS     @^@@@@. NOW DO THE MOVING     @F@@@@AL
)@@G@@FO0210 JNGD  A3,FO0300   . EXIT WHEN NO MORE ARE LEFT TO COPY     @E@@@@AM
)@@G@@       RFSTEP FLPARM     . GET ADDR OF NEXT OPEN TABLE ENTRY@B@@@@      AN
)@@G@@ SA    A0,FLLAST   . POST ITS ADDR  @E@@@@       DS    A4,0,A0     . PUTAO
)@@G@@ CURRENT LINENUM IN OPEN TABLE@E@@@@       LA,H1 A1,1,A2     . GET FLAGSAP
)@@G@@ FROM CLOSED TBL ENTRY  @E@@@@       LSSL  A1,18       . ALIGN AND CLEARAQ
)@@G@@ AEER FIELD (H2)  @D@@@@       SA    A1,2,A0     . PUT FLAG WD IN OPEN TAR
)@@G@@ABLE  @E@@@@       LA,H2 A1,1,*A2    . GET TEXT ADDR FROM CLOSED TABLE  AS
)@@G@@@E@@@@       DS    A2,FOCTRL   . SAVE CLOSED TBL CONTROL PARAMS   @F@@@@AT
)@@G@@       LA    A0,FOWBAS   . SET UP BASE ADDR OF WS TO COPY FROM    @E@@@@AU
)@@G@@       LMJ   X11,TEXCPY  . COPY THE TEXT OF THIS STATEMENT  @B@@@@      AV
)@@G@@ J     FO0220      . OOPS, NO GO    @C@@@@       SA    A0,A1       . TEMAW
)@@G@@P SAVE TEXT ADDR  @G@@@@       LA    A0,FLLAST   . GET ADDR OF OPEN TBL AX
)@@G@@ENTRY WE'RE FILLING     @E@@@@       SA,H2 A1,2,A0     . PUT ADDR OF TEXAY
)@@G@@T IN OPEN TABLE   @G@@@@       DL    A2,FOCTRL   . RECOVER CONTROL PARAMAZ
)@@G@@ETERS FOR CLOSED TABLE  @E@@@@       DL    A4,0,A0     . GET LINE NO OUTBA
)@@G@@ OF OPEN TBL ENTRY@C@@@@       DFA   A4,(+1.0D)  . BUMP TO NEXT LINENUM BB
)@@G@@@D@@@@       J     FO0210      . AND GO BACK FOR NEXT ENTRY @A@@@@. ERROBC
)@@G@@R WHILE TRYING TO COPY TEXT   @F@@@@FO0220 LA    A0,FLLAST   . ADDR OF EBD
)@@G@@NTRY WE WERE TRYING TO FILL   @G@@@@       ANA,U A0,3        . ADJUST TOBE
)@@G@@ ADDR OF LAST ENTRY ACTUALLY USED   @F@@@@       SA    A0,FLLAST   . ANDBF
)@@G@@ SAVE FOR USE BY TABLE FREE RTNE    @C@@@@       LX    X11,FOLINK  . ORIBG
)@@G@@GINAL NETRY POINT @G@@@@       ANX,U X11,1       . ADJUST SO ERROR EXIT BH
)@@G@@(0,X11) WILL BE TAKEN   @F@@@@       J     FTFREE      . AND GO FREE TABBI
)@@G@@LE AND COPIED LINES     @[@@@@.     @B@@@@. FINAL CLEANUP--- SET UP DUMMBJ
)@@G@@Y DESCR     @[@@@@.     @E@@@@FO0300 LA    A1,FODESC   . PICK UP ABS ADDBK
)@@G@@R OF DESCRIPTOR   @C@@@@       LA    A0,FLFRST   . RELADR OF THIS BLOCK BL
)@@G@@@B@@@@       SA,H2 A0,2,A1     . PLUG INTO DESCR@ @@@@. NOW EXIT BACK TOBM
)@@G@@ CALLER     @F@@@@       DL    A2,A4       . SET UP 'NEXT LINE' NUMBER FBN
)@@G@@OR CALLER   @ @@@@       LX    X11,FOLINK  .    @B@@@@       J     1,X11BO
)@@G@@       . NORMAL RETURN  @[@@@@.     @E@@@@FO0900 ERROR YWSFUL,FO0990    BP
)@@G@@. NO SPACE FOR INITIAL BLOCK  @F@@@@FO0910 ERROR YWSFUL,FO0980 . NO ROOMBQ
)@@G@@ EVEN TO START-- SIGNAL WSFULL@A@@@@. REPLACE THE UNCHAINED CORE BLOCK  BR
)@@G@@@F@@@@FO0980 LA    A0,WSFLWA   . ADDR OF LAST WORD IN UNCHAINED BLOCK   BS
)@@G@@@C@@@@       ANA   A0,WSFFWA   . LESS FIRST WORD ADDR @C@@@@       AA,U BT
)@@G@@ A0,1        . PLUS 1=BLOCK SIZE    @D@@@@       LA    A1,WSFFWA   . RECBU
)@@G@@OVER ADDR OF 1ST WORD   @F@@@@       FREE              . PUT IT BACK ON BV
)@@G@@THE FREE STORAGE LIST   @ @@@@FO0990 LX    X11,FOLINK  .    @B@@@@      BW
)@@G@@ J     0,X11       . ERROR EXIT     @[@@@@.     @#@@@@       VARBLS .   BX
)@@G@@@ @@@@FOLINK EQUF  $,,H1 . LINKAGE  @C@@@@FODESC EQUF  $,,H2       . ADDBY
)@@G@@R OF DESCRIPTOR   @ @@@@       RES   1           .    @D@@@@FOBSIZ EQUF BZ
)@@G@@ $,,H1 . NO WDS ALLOCATED IN 1ST BLOCK    @E@@@@FOLINS EQUF  $,,H2 . CT CA
)@@G@@OF NO OF LINES LEFT TO BE COPIED    @#@@@@       RES   1 .  @E@@@@FOWBASCB
)@@G@@ EQUF  $,,H1 . BASE ADDR OF WS WE'RE COPYING FROM     @D@@@@FOBLOK EQUF CC
)@@G@@ $,,H2 . ABSADR OF CLOSED TBL IN THAT WS  @ @@@@       RES   1          CD
)@@G@@ .    @F@@@@FOCTRL RES   2           . CTRL WDS FOR POINTING AT CLOSED TCE
)@@G@@BL    @G@@@@/. THIS CODE ENTERS A NEW LINE IN THE OPEN FUNC TABLE, AND CCF
)@@G@@OMPUTES THE @E@@@@.     LINENO TO BE ECHOED TO THE USER FOR THE NEXT LINCG
)@@G@@E     @F@@@@.         ARGS ARE: A0=LABEL NAMEBLOK ADDR (IF LABELED) OR ZCH
)@@G@@ERO   @B@@@@.                   A1=ADDR OF TEXT BLOK  @A@@@@.           CI
)@@G@@        A2,A3= LINE NO  @[@@@@.     @#@@@@       INSTRS .   @ @@@@FLENTRCJ
)@@G@@* SX   X11,FLLINK  .    @C@@@@       TP    A2          . IS LINENUM VALICK
)@@G@@D?    @F@@@@       ER    ERR$        . NO, CATCH HERE SO SORT WON'T BLOWCL
)@@G@@ LATER@C@@@@        SA   A1,FLEWD3   . SAVE TEXTBLOK ADDR   @C@@@@      CM
)@@G@@  SA,H1 A0,FLEWD3  . PACK LABEL POINTER IN@G@@@@        DS   A2,FLINUM  CN
)@@G@@ . SAVE LINENO FOR USE IN COMPUTING NEXT ONE    @D@@@@       LA    A0,FLCO
)@@G@@LAST   . GET ADDR OF LAST WORD USED @D@@@@       RFSTEP FLPARM     . COMCP
)@@G@@PUTE NEXT WORD ADDR     @E@@@@       JZ    A0,FL0300   . IF CAN'T GET ONCQ
)@@G@@E, SIGNAL WSFULL  @F@@@@       TLD   A1,FLEWD1   . ELSE PICK UP ENTRY WHCR
)@@G@@ICH GOES HERE     @C@@@@       TSTO  A1,0,A0     . PUT IT IN THE TABLE  CS
)@@G@@@D@@@@       SA    A0,FLLAST   . AND REMENBER WHERE IT WENT @B@@@@FL0230CT
)@@G@@ LX    X11,FLLINK  . AND GET OUT    @ @@@@       J     1,X11       .    CU
)@@G@@@E@@@@. COULD NOT GET ANY MORE BLOCKS / FREE EVERYTHING WE'VE USED@B@@@@CV
)@@G@@FL0300 ERROR YWSFUL      . SIGNAL THE USER@C@@@@       LX    X11,FLLINK CW
)@@G@@ . RECUVER RETURN ADDR  @E@@@@       ANX,U X11,1       . FIX SO ERROR RECX
)@@G@@TURN WILL BE TAKEN@E@@@@       J     FTFREE      . AND GO RELEASE ALL SPCY
)@@G@@ACE USED    @ @@@@       VARBLS            .    @ @@@@FLLINK EQUF  $,,H1CZ
)@@G@@       .    @ @@@@       RES   1           .    @D@@@@. PRIMARY CONTROL DA
)@@G@@PARAMETERS USED TO STEP THRU TABLE  @B@@@@FLFRST EQUF  $,,H1 . RELADR OFDB
)@@G@@ 1ST BLOCK  @D@@@@FLLAST EQUF  $,,H2       . ABSADR OF LAST WORD USED   DC
)@@G@@@ @@@@       RES   1           .    @F@@@@FLPARM RES   1           . PARDD
)@@G@@AMETER WD FOR BLOCK BOUNDARY CONTROL@ @@@@. TEMP STORAGE OF LINE ENTRY  DE
)@@G@@@ @@@@FLEWD1 RES   2           .    @F@@@@FLINUM EQU   FLEWD1      . LINDF
)@@G@@E NO GOES IN 1ST 2 WDS OF ENTRY     @D@@@@FLEWD3 RES   1           . LASDG
)@@G@@T WORD POINTS TO TEXT   @ @@@@       VARCON            .    @F@@@@FLSKELDH
)@@G@@ CBLOCK ZTPFTB,0,0,FTBSIZ    . SKELETON BLOCK HEADER WORD   @#@@@@      DI
)@@G@@ CONSTS .   @B@@@@. TABLE OF INCREMENTS FOR NEXT LINE NO    @#@@@@FLITBLDJ
)@@G@@ +0.1D  .   @#@@@@       +0.01D .   @ @@@@       +0.001D           .    DK
)@@G@@@ @@@@       +0.0001D          .    @D@@@@/. ROUTINE TO FIND THE ENTRY FDL
)@@G@@OR A GIVEN LINE NUMBER  @B@@@@.     ENTER WITH DESIRED LINE NO IN A0,A1 DM
)@@G@@@D@@@@.     EXIT WITH :A1=0, A0=ADDR IN TBL OF EXACT MATCH  @G@@@@.     DN
)@@G@@EXIT WITH :A1 NON-0, A0=TBL ADR OF LAST ENTRY <REQUESTED LINE NO  @F@@@@DO
)@@G@@. AT EITHER EXIT, FTSCAN POINTERS ARE INITIALIZED TO KEEP SCANNING@[@@@@DP
)@@G@@.     @#@@@@       INSTRS .   @ @@@@FTFIND* SX   X11,FFLINK  .    @E@@@@DQ
)@@G@@       DS    A0,FFLNUM   . SAVE SEARCH TARGET LINE NUMB     @E@@@@      DR
)@@G@@ LA,U  A0,0        . CLEAR ADDR OF LAST LINE ACCESSED @A@@@@. LOOP TO NEDS
)@@G@@XT TABLE ENTRY, IF ANY  @E@@@@FF0100 SA    A0,FFLAST   . SAVE ADDR OF LADT
)@@G@@ST LINE ACCESSED  @C@@@@       LMJ   X11,FTSCAN  . GET ADDR OF NEXT LINEDU
)@@G@@@ @@@@       ER    ERR$        .    @C@@@@       JZ    A0,FF0110   . IF DV
)@@G@@NO MORE, GET OUT  @F@@@@       DL    A1,0,A0     . ELSE GET LINE NO OF TDW
)@@G@@HIS TABLE ENTRY   @D@@@@       DL    A3,FFLNUM   . AND LINE NO OF TARGETDX
)@@G@@ LINE @C@@@@       FUZDIF A1,A3      . GET (THIS-TARGET)    @E@@@@      DY
)@@G@@ JZ    A1,FF0120   . IF EXACT MATCH, DIS IS DE PLACE  @F@@@@       JN   DZ
)@@G@@ A1,FF0100   . IF TARGET FOLLOWS CURRENT, KEEP LOOKING@E@@@@. TARGET FOLEA
)@@G@@LOWS CURRENT, OR NO MORE LINES-- SET NO MATCH   @B@@@@FF0110 LA,U  A1,1 EB
)@@G@@       . NOMATCH FLAG ON@F@@@@       LA    A0,FFLAST   . GET TBL ADDR OFEC
)@@G@@ ENTRY WHICH PRECEDED   @[@@@@.     @ @@@@FF0120 LX    X11,FFLINK  .    ED
)@@G@@@ @@@@       J     1,X11       .    @#@@@@       VARBLS .   @ @@@@FFLINKEE
)@@G@@ EQUF  $,,H1       .    @D@@@@FFLAST EQUF  $,,H2       . NUM OF LAST LINEF
)@@G@@E PROCESSED @#@@@@       RES   1 .  @B@@@@FFLNUM RES   2 . LINE NO OF TAEG
)@@G@@RGET LINE   @G@@@@/. THIS ROUTINE SUPERVISES SCANNING THROUGH AN ENTIRE EH
)@@G@@OPEN FUNCTION     @A@@@@. TABLE,  SORTING WHERE NECESSARY.  @F@@@@.     EI
)@@G@@ENTRY CONDITIONS: A0=LAST ADDR USED, OR ZERO TO INITIALIZE  @G@@@@.     EJ
)@@G@@AT EXIT: A0=NEXT ENTRY ADDR, OR ZERO IF NOTHING LEFT IN TABLE     @ @@@@EK
)@@G@@. ALL ADDRESSES ARE ABSOLUTE. @[@@@@.     @#@@@@       INSTRS .   @ @@@@EL
)@@G@@FTSCAN* SX   X11,FSLINK  .    @E@@@@       JZ    A0,FS0010   . IF INITIAEM
)@@G@@LIZATION ENTRY, GO SORT @F@@@@FS0005 RFSTEP FSTEST     . ELSE COMPUTE NEEN
)@@G@@XT ENTRY ADDR IN A0     @D@@@@       JZ    A0,FS0510   . IF NO MORE TABLEO
)@@G@@E, GET OUT  @E@@@@       TN    0,A0        . IS THIS ENTRY A VACANCY FLAEP
)@@G@@G?    @F@@@@       J     FS0510      . NO, RETURN WITH NORMAL LINE ADDR EQ
)@@G@@IN A0 @D@@@@       LA    A1,0,A0     . YES, PICK UP FLAG VALUE    @F@@@@ER
)@@G@@       TNE,XU A1,-1      . IS IT VACANT BECAUSE OF A DELETION?    @D@@@@ES
)@@G@@       J     FS0005      . YES, IGNORE AND GO TO NEXT @F@@@@       LA,U ET
)@@G@@ A0,0        . NO, MUST BE END OF TABLE-- MARK IT     @B@@@@       J    EU
)@@G@@ FS0510      . AND GET OUT    @[@@@@.     @D@@@@. INITIALIZATION ENTRY, EV
)@@G@@SORT TABLE BEFORE ACCESSING IT@[@@@@.     @D@@@@FS0010 LA    A0,FLLAST  EW
)@@G@@ . ADDR OF LAST ENTRY USED    @G@@@@       RFSTEP FLPARM     . GO TO NEXEX
)@@G@@T WORD USING NORMAL ENTRY PARAM WORD@E@@@@       JZ    A0,FS0020   . IF EY
)@@G@@NO MORE TABLE SPACE, FORGET IT@E@@@@       LNA,U A1,2        . ELSE GET EZ
)@@G@@END OF TABLE INDICATOR  @E@@@@       SA    A1,0,A0     . AND MARK THE LAFA
)@@G@@ST SLOT EMPTY     @D@@@@FS0020 LA    A0,FLFRST   . ADDR OF 1ST BLOCK IN FB
)@@G@@CHAIN @E@@@@       IFSTEP FSTEST     . SET POINTERS TO TEST LOCATION    FC
)@@G@@@C@@@@       SA    A0,FSTORG   . POST ORIGIN OF TABLE @F@@@@       LA,U FD
)@@G@@ A6,0        . INITIALIZE NON-TRIVIAL ENTRY COUNT     @E@@@@. FIND PROPEFE
)@@G@@R PLACE IN TABLE TO INSERT CURRENT TEST ENTRY   @E@@@@FS0100 SA    A0,FSFF
)@@G@@TLOC   . SAVE ADDR OF CURRENT TEST VAL    @D@@@@       TNZ   A0         FG
)@@G@@ . IS THERE SOMETHING THERE?  @D@@@@       ER    ERR$        . IF NOT, WFH
)@@G@@E'RE VERY BROKE   @D@@@@       TLD   A1,0,A0     . GET VALUES OF THIS ENFI
)@@G@@TRY   @E@@@@       JP    A1,FS0110   . IF NORMAL LINE, SAVE FOR TESTING FJ
)@@G@@@E@@@@       TE,XU A1,-1       . IS IT A VACANT (DELETED) SLOT?   @D@@@@FK
)@@G@@       J     FS0500      . NO, ASSUME END OF TABLE    @B@@@@       J    FL
)@@G@@ FS0410      . YES, SKIP IT   @D@@@@FS0110 TSTO  A1,FSVTST   . NO, SAVE FM
)@@G@@VALUE FOR TESTING @G@@@@       LA    A1,FSTEST   . GET PARAM WORD FOR THFN
)@@G@@E ORIGINAL TEST ENTRY   @F@@@@       SA    A1,FSLPAR   . AND USE AS INITFO
)@@G@@IAL LEFT STEP POINTER   @E@@@@. COMPARE TEST VALUE WITH ENTRY TO LEFT OFFP
)@@G@@ CURRENT HOLE     @D@@@@FS0200 SA    A0,FSHLOC   . POST LOCN OF CURRENT FQ
)@@G@@HOLE  @G@@@@       JE    A0,FSTORG FS0400 . IF HOLE IS AT 1ST TBL ENTRY,FR
)@@G@@ FILL IT    @E@@@@       LFSTEP FSLPAR     . AND MOVE 1 SLOT TO THE LEFTFS
)@@G@@ OF IT@D@@@@       TNZ   A0          . THERE HAD BETTER BE ONE... @E@@@@FT
)@@G@@       ER    ERR$        . OTHERWISE, UP AGAINST THE WALL   @F@@@@      FU
)@@G@@ DL    A1,0,A0     . GET LINENUM FROM CURRENT LEFT ENTRY    @D@@@@      FV
)@@G@@ JN    A1,FS0320   . IF NEG, SLOT IS VACANT     @D@@@@       DL    A3,FSFW
)@@G@@VTST   . GET LINENUM OF TEST VAL    @D@@@@       FUZDIF A1,A3      . TAKFX
)@@G@@E FUZZY DIF (THIS-TEST) @E@@@@       JZ    A1,FS0300   . IF LINENUMS EQUFY
)@@G@@AL, GO EARSE TEXT @F@@@@       JN    A1,FS0400   . IF TEST LARGER, IT GOFZ
)@@G@@ES IN THE HOLE    @F@@@@. TEST VAL IS < LEFT ENTRY, MOVE LEFT OVER ONE AGA
)@@G@@ND KEEP GOING     @B@@@@FS0210 LA    A1,FSHLOC   . LOCN OF HOLE   @B@@@@GB
)@@G@@       TLD   A2,0,A0     . GET LEFT ENTRY @E@@@@       TSTO  A2,0,A1    GC
)@@G@@ . PUT INTO HOLE, WHICH IS TO RIGHT @F@@@@       J     FS0200      . CONGD
)@@G@@TINUE, USING OLD LEFT AS NEW HOLE   @D@@@@. TEST VAL=LEFT ENTRY-- DELETEGE
)@@G@@ LEFT ENTRY TEXT, IF ANY@D@@@@FS0300 SA    A0,FSLLOC   . TEMP SAVE LEFT GF
)@@G@@SLOT ADDR   @E@@@@       LA,H2 A0,2,A0     . GET RELADR OF TEXT FOR THISGG
)@@G@@ LINE @D@@@@       TNZ   A0          . IS IT A DELETE LINE ENTRY? @ @@@@GH
)@@G@@       ER    ERR$        .    @D@@@@       LMJ   X11,TEXERS  . ELSE GET GI
)@@G@@RID OF STORED TEXT@F@@@@       ER    ERR$        . AND WE BETTER NOT BREGJ
)@@G@@AK HERE, FOLKS    @D@@@@FS0310 LA    A0,FSLLOC   . RESTORE LEFT SLOT ADDGK
)@@G@@R     @G@@@@       ANA,U A6,1        . ADJUST NON-TRIV LINE CT FOR LINE GL
)@@G@@JUST ERASED @ @@@@. MARK CURRENT HOLE AS VACANT @B@@@@FS0320 LA    A1,FSGM
)@@G@@HLOC   . GET LOC OF HOLE@C@@@@       LNA,U A2,1        . GET NEG NO FOR GN
)@@G@@FLAG  @G@@@@       SA    A2,0,A1     . PUT VACANT FLAG IN 1ST WORD OF CUGO
)@@G@@RRENT HOLE  @F@@@@       J     FS0200      . AND CONTINUE WITH OLD LEFT GP
)@@G@@AS NEW HOLE @E@@@@. TEST VAL > LEFT ENTRY-- PUT TEST VAL INTO CURRENT HOGQ
)@@G@@LE    @C@@@@FS0400 LA    A0,FSHLOC   . GET ADDR OF THE HOLE @D@@@@      GR
)@@G@@ TLD   A1,FSVTST   . AND PICK UP THE TESTVAL    @D@@@@       TNZ,U 0,A3 GS
)@@G@@       . WAS THIS A DELETION ENTRY? @E@@@@       LNA,U A1,1        . IF GT
)@@G@@SO, GET VACANT SLOT MARKER    @D@@@@       TN    A1          . IS THIS AGU
)@@G@@ TRIVIAL ENTRY?   @B@@@@       AA,U  A6,1        . NO, COUNT IT   @D@@@@GV
)@@G@@       TSTO  A1,0,A0     . PLUG TESTVAL INTO THE HOLE @A@@@@. STEP TESTVGW
)@@G@@AL TO THE RIGHT ONE SLOT@C@@@@FS0410 LA    A0,FSTLOC   . FIND OUT WHERE GX
)@@G@@IT WAS@E@@@@       RFSTEP FSTEST     . MOVE TEST LOCN 1 TO THE RIGHT    GY
)@@G@@@E@@@@       JNZ   A0,FS0100   . IF ENTRY EXISTS, GO LOOK AT IT   @F@@@@GZ
)@@G@@       LA    A0,FSTLOC   . ELSE WE'RE DONE, GET LAST ADDR USED    @F@@@@HA
)@@G@@       AA,U  A0,3        . BUMP AS IF WE HAD STORED ANOTHER ENTRY @G@@@@HB
)@@G@@                         . AND FALL THRU TO RECOMPUTE LAST ENTRY ADDR   HC
)@@G@@@[@@@@.     @G@@@@. END OF TABLE REACHED, MARK FOR FLENTR AND INITIALIZEHD
)@@G@@ SCAN POINTERS    @[@@@@.     @G@@@@FS0500 ANA,U A0,3        . GO BACK THE
)@@G@@O LAST ENTRY CONTAINING SOMETHING   @E@@@@       SA    A0,FLLAST   . POSHF
)@@G@@T FOR USE BY LINE ENTRY RTNE  @E@@@@       LA    A0,FSTEST   . GET PARAMHG
)@@G@@ WORD FOR THAT BLOCK    @E@@@@       SA    A0,FLPARM . WHICH IS ALSO USEHH
)@@G@@D BY LINE ENTRY   @D@@@@       LA    A0,FLFRST   . ADDR OF 1ST BLOCK ON HI
)@@G@@CHAIN @E@@@@       IFSTEP FSTEST     . INITIALIZE SCAN TO START THERE   HJ
)@@G@@@F@@@@       TP    0,A0        . IS ENTRY FOR FUNC HDR LINE VACANT?     HK
)@@G@@@C@@@@       ER    ERR$        . YES, ERROR IN SORTING@A@@@@. RETURN CTRHL
)@@G@@L OF HIS SET TO THE USER@ @@@@FS0510 LX    X11,FSLINK  .    @G@@@@      HM
)@@G@@ J     1,X11       . RETURN WITH TBL ENTRY IN A0, LINECT IN A6    @#@@@@HN
)@@G@@       VARBLS .   @E@@@@FSTEST RES   1 . PARAM WORD FOT RIGHTMOST (TEST)HO
)@@G@@ VALUES     @B@@@@FSLPAR RES   1 . PARAM WORD FOR LEFT SLOT @G@@@@FSTORGHP
)@@G@@ EQUF  $,,H1       . LOCN OF ORIGIN OF TBL (TO TEST FOR BACKUP)   @G@@@@HQ
)@@G@@FSTLOC EQUF  $,,H2       . ORIGINAL LOC OF CURRENT TEST VAL IN TABLE    HR
)@@G@@@#@@@@       RES   1 .  @D@@@@FSLLOC EQUF  $,,H1       . LOC OF CURRENT HS
)@@G@@LEFT ENTRY  @C@@@@FSHLOC EQUF  $,,H2       . LOC OF CURRENT HOLE  @#@@@@HT
)@@G@@       RES     1 .@D@@@@FSVTST RES   3 . TEMP STORAGE OF CURRENT TEST ENHU
)@@G@@TRY   @B@@@@FSLINK EQUF  $,,H1       . WHAT ELSE?     @#@@@@       RES  HV
)@@G@@ 1 .  @B@@@@/. ROUTINES TO CLOSE AN OPEN FUNCTABLE    @[@@@@.     @C@@@@HW
)@@G@@. NORMAL CLOSE-- MOVE OPEN TABLE TO CLOSED TABLE@[@@@@.     @#@@@@      HX
)@@G@@ INSTRS  .  @ @@@@FTCLOS* SX   X11,FCLINK  .    @C@@@@       LA,U  A0,0 HY
)@@G@@       . CLEAR LAST ENTRY ADDR@D@@@@       LMJ   X11,FTSCAN  . PREPARE THZ
)@@G@@O SCAN OPEN TABLE @ @@@@       ER    ERR$        .    @E@@@@       SA   IA
)@@G@@ A0,FCLAST   . SAVE ADDR OF NEXT WORD TO ACCESS @F@@@@       SA    A6,FCIB
)@@G@@USED   . SAVE NO OF NON-TRIVIAL TABLE ENTRIES   @G@@@@       LA    A0,A6IC
)@@G@@       . NUM WDS FOR CLOSED TBL IS NUM NON-TRIVIAL ...@E@@@@       AA,U ID
)@@G@@ A0,1        . PLUS ONE FOR BLOCK HEADER WORD   @F@@@@       ALLOCT FC09IE
)@@G@@00     . AND ACQUIRE SPACE FOR CLOSED TABLE     @E@@@@       SA    A1,FCIF
)@@G@@CTBL   . TAME SAVE ADDR OF CLOED TABLE    @ @@@@       ABSADR A1        IG
)@@G@@ .    @D@@@@       LA    A2,FLSKEL   . SKELETON BLOCK HEADER WORD @E@@@@IH
)@@G@@       SA    A2,0,A1     . PUT INTO 1ST WD OF THIS BLOCK    @E@@@@      II
)@@G@@ LA    A0,FCUSED   . GET NOMINAL VALUE OF NO OF LINES @D@@@@       AA,U IJ
)@@G@@ A0,1        . PLUS 1 FOR BLOK HDR WORD   @E@@@@       SA,H2 A0,0,A1    IK
)@@G@@ . POST BLOK SIZE IN ITS HEADER WORD@F@@@@FC0010 LA,U  A3,1,A1     . SETIL
)@@G@@ UP ADDR OF 1ST WD IN CLOSED TBL    @C@@@@       LXI,U A3,1        . ANDIM
)@@G@@ SET UP THE STEP  @G@@@@       LA    A0,FCLAST   . GET ADDR OF NEXT (I.EIN
)@@G@@. 1ST) OPEN TBL ENTRY   @[@@@@.     @E@@@@FC0100 LA    A1,2,A0     . PICIO
)@@G@@K UP NEXT OPEN TABLE ENTRY    @C@@@@       TNZ,U 0,A1        . IS THERE IP
)@@G@@TEXT IN IT? @D@@@@       ER    ERR$        . IF NOT, SORT IS BUSTED     IQ
)@@G@@@D@@@@       SA    A1,0,*A3    . YES, PUT INTO CLOSED TABLE @E@@@@      IR
)@@G@@ LMJ   X11,FTSCAN  . STEP TO NEXT OPEN TABLE ENTRY    @ @@@@       ER   IS
)@@G@@ ERR$        .    @D@@@@       JNZ   A0,FC0100   . IF THERE IS ONE, GO SIT
)@@G@@AVE IT@E@@@@       J     FC0300      . ELSE GO RELEASE OPEN TABLE SPACE IU
)@@G@@@ @@@@. NO ROOM FOR CLOSED TABLE    @D@@@@FC0900 ERROR YWSFUL      . HANIV
)@@G@@DLE THE ERROARRRRRR     @C@@@@       LX    X11,FCLINK  . RESTORE LINKAGEIW
)@@G@@ WORD @G@@@@       ANX,U X11,1       . FAKE IT SO ERROR EXIT (0,X11) IS IX
)@@G@@TAKEN BELOW @D@@@@                         . AND FALL THROUGH TO...     IY
)@@G@@@[@@@@.     @C@@@@. THIS ENTRY TO ERASE TBL BECAUSE OF AN ERROR   @[@@@@IZ
)@@G@@.     @ @@@@FTFREE* SX   X11,FCLINK  .    @E@@@@       SZ    FCLAST     JA
)@@G@@ . CLEAR ADDR OF LAST TABLE ENTRY   @[@@@@.     @F@@@@FC0200 LA    A0,FCJB
)@@G@@LAST   . ADDR OF LAST WD ACCESSED IN OPEN TABLE @C@@@@       LMJ   X11,FJC
)@@G@@TSCAN  . GET NEXT ENTRY ADDR  @ @@@@       ER    ERR$        .    @F@@@@JD
)@@G@@       JZ    A0,FC0300   . IF NO MORE, GO FREE OPEN TABLE SPACE   @F@@@@JE
)@@G@@       SA    A0,FCLAST   . ELSE SAVE ENTRY ADDR FOR NEXT TIME THRU@E@@@@JF
)@@G@@       LA,H2 A0,2,A0     . GET TEXT ADDR FROM THIS ENTRY    @C@@@@      JG
)@@G@@ TZ    A0          . IS THERE ANY TEXT?   @B@@@@       LMJ   X11,TEXERS JH
)@@G@@ . YES, ERASE IT  @D@@@@       ER    ERR$        . NO TEXT OR ERASE ERROJI
)@@G@@R     @D@@@@       J     FC0200      . GO BACK FOR NEXT ENTRY     @[@@@@JJ
)@@G@@.     @B@@@@. FREE SPACE WHICH WAS USED BY OPEN TABLE @[@@@@.     @D@@@@JK
)@@G@@FC0300 LA    A1,FLFRST   . GET ADDR OF NEXT BLOCK     @C@@@@       JZ   JL
)@@G@@ A1,FC0400   . IF NONE, WE'RE DONE  @ @@@@       ABSADR A1         .    JM
)@@G@@@E@@@@       LA,H2 A0,1,A1     . GET ADR OF NEXT BLOK ON CHAIN    @E@@@@JN
)@@G@@       SA    A0,FLFRST   . SAVE FOR NEXT TIME THRU THE LOOP @D@@@@      JO
)@@G@@ LA,H2 A0,0,A1     . GET CURRENT BLOK SIZE.     @ @@@@       RELADR A1  JP
)@@G@@       .    @ @@@@       FREE              .    @D@@@@       J     FC030JQ
)@@G@@0      . AND GO GET THE NEXT BLOCK  @#@@@@. NORMAL EXIT     @G@@@@FC0400JR
)@@G@@ LA    A0,FCCTBL   . IN CASE THIS WAS CLOSE, GET CLOSED TBL ADR   @ @@@@JS
)@@G@@       LX    X11,FCLINK  .    @ @@@@       J     1,X11       .    @[@@@@JT
)@@G@@.     @#@@@@       VARBLS  .  @D@@@@FCUSED EQUF  $,,H1 . NO OF NON-TRIVIJU
)@@G@@AL LINE ENTRIES   @D@@@@FCCTBL EQUF  $,,H2       . RELADR OF CLOSED TABLJV
)@@G@@E     @#@@@@       RES   1 .  @E@@@@FCLAST EQUF  $,,H1       . ADDR OF LJW
)@@G@@AST TABLE ENTRY SCANNED @ @@@@FCLINK EQUF  $,,H2       . X11@#@@@@      JX
)@@G@@ RES   1 .  @]@@@@       END .___HE STEP  @G@@@@       LA    A0,FCLAST  JY
)@@G@@ . GET ADDR OF NEXT (I.E. 1ST) OPEN TBL ENTRY   @[@@@@.     @E@@@@FC0100JZ
)@@G@@ LA    A1,2,A0     . PIC*[S@@@*SDFF*@G@@@@. ****************************KA
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUKB
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 KC
)@@G@@                                                    * @G@@@@       AXR$ KD
)@@G@@        .                                                 * @G@@@@      KE
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@KF
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * KG
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               KH
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 KI
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            KJ
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACEKK
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL KL
)@@G@@BLOCK TYPES                 * @G@@@@.                                   KM
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  KN
)@@G@@                                        * @G@@@@. **********************KO
)@@G@@*********************************************** @G@@[[        BRIEF  . SKP
)@@G@@PECIAL UOM ASSEMBLER DIRECTIVE. REMOVE AT OTHER SITES @F@@[[        IODEKQ
)@@G@@F                 . DEFINE TAGS IN WORKSPACE PREAMBLES@[@@@@.     @G@@@@KR
)@@G@@.     NOTE: THE I-BEAM INDICES FOR THE NON-PUBLIC IBEAMS (I.E. OTHER    KS
)@@G@@@G@@@@. THAN 19 THRU 29) ARE DELIBERATELY HIDDEN FROM THE USER AND ACCESKT
)@@G@@SIBLE @G@@@@. TO HIM ONLY THROUGH THE LOCKED FUNCTIONS IN 1WSFNS.  THIS KU
)@@G@@HAS BEEN    @G@@@@. DONE TO PROTECT USER PROGRAMS AGAINST CHANGES IN THEKV
)@@G@@SE I-BEAMS, AND   @G@@@@. THE SECRECY OF THEIR VALUES SHOULD NOT BE VIOLKW
)@@G@@ATED.  NO GUARANTEES    @G@@@@. ARE MADE THAT THE I-BEAMS THEMSELVES WILKX
)@@G@@L NOT BE CHANGED.  WE WILL    @G@@@@. GUARANTEE, HOWEVER, THAT PROGRAMS KY
)@@G@@WHICH USE ONLY THE LOCKED FUNCTIONS @H@@@@. WILL CONTINUE TO WORK, AS ANKZ
)@@G@@Y CHANGE IN THE I-BEAMS WILL BE ACCOMPANIED     @C@@@@. BY AN APPROPRIATLA
)@@G@@ELY UPDATED COPY OF 1 WSFNS.  @G@@@@.      IN ADDITION, SOME OF THESE ROLB
)@@G@@UTINES MAY BYPASS SOME ERROR CHECKS,@G@@@@. SINCE THEY ASSUME THAT THE CLC
)@@G@@HECKS HAVE BEEN DONE IN SOURCE LANGUAGE   @G@@@@. BY THE LOCKED FUNCTIONLD
)@@G@@S.  ATTEMPTS TO CALL THEM DIRECTLY, WITHOUT     @D@@@@. THESE CHECKS, COLE
)@@G@@ULD RESULT IN SPURIOUS SYSTEM ERRORS@[@@@@.     @[@@@@.     @#@@@@      LF
)@@G@@ STATEV .   @[@@@@.     @G@[@@MASTER EQU   18          . SPECIAL D-BANK LG
)@@G@@LOCCTR FOR MASTER CONSOLE CODE@G@[@@MASCON INFO 2 18         . BLOCK IN LH
)@@G@@WHICH MASTER CONSOLE CODE APPEARS   @B]@@@.     DEFINE TABLE ENTRIES FORLI
)@@G@@ IBEAMS     @B@@@@ DO 1-IB$PAS(1) ,IB$MIN(1) EQU 077777 .   @A@@@@ DO 1-LJ
)@@G@@IB$PAS(1) ,IB$MAX(1) EQU 0 .  @[@@@@.     @^@@@@I      PROC         .   LK
)@@G@@@#@@@@IMONAD* NAME  1.  @#@@@@IDYAD*  NAME  0.  @F@@@@IDYADV* NAME -1   LL
)@@G@@  . DYAD WITH SUBTYPES (I.E. VECTOR LEFTARG)    @C@@@@K      EQU   I(1,1LM
)@@G@@)      . IBEAM INDEX NUMBER   @^@@@@IB$MON*(K) EQU I(0,0) . @^@@@@IB$JMPLN
)@@G@@*(K) EQU I(1,2) . @C@@@@IB$MOD*(K) EQU (I(1)>2)*I(1,3)+(I(1)<3)*ZMONUL .LO
)@@G@@@^@@@@IB$RNK*(K) EQU I(1,4) . @B@@@@ DO  I(1,1)>IB$MAX(1) ,IB$MAX*(1) EQLP
)@@G@@U K . @B@@@@ DO  I(1,1)<IB$MIN(1) ,IB$MIN*(1) EQU K . @#@@@@       END  LQ
)@@G@@   .  @[@@@@.     @G@@@@. THIS PROC GENERATES THE TABLE OF CHARACTERISTILR
)@@G@@CS OF THE GIVEN I-BEAM  @E@@@@. DEFINED BY THE PROC ABOVE.  FORM OF TABLLS
)@@G@@E ENTRIES IS---   @F@@@@.      S1    TYPE FLAG   1=MONAD, 0=DYAD, -1=DYALT
)@@G@@D WITH SUBTYPE    @F@@@@.      S2    MODE OF RESULT (IF ITS TO BE SET UPLU
)@@G@@ BY THIS ROUTINE) @ @@@@.      S3    RANK OF RESULT   @D@@@@.      H2   LV
)@@G@@ ADDR OF PROCESSING RTNE FOR THIS FUNCTION@#@@@@T      PROC    .  @#@@@@LW
)@@G@@TBLGEN* NAME   .  @#@@@@       UNLI$T .   @ @@@@*      EQU   $-IB$MIN(1)LX
)@@G@@ .    @ @@@@C      FORM  6,6,6,18    .    @ @@@@L      EQU  IB$MIN(1)-1 LY
)@@G@@ .    @ @@@@N      EQU  IB$MAX(1)-L  .    @F@@@@K DO N  , C IB$MON(K+L),LZ
)@@G@@IB$MOD(K+L),IB$RNK(K+L),IB$JMP(K+L) .     @G@@@@IB$PAS*(1) EQU 1 . SET TMA
)@@G@@HIS SO THAT MAX AND MIN ARE OK ON ASM PASS 2    @#@@@@       LI$T .     MB
)@@G@@@]@@@@       END .@[@@@@.     @#@@@@T      PROC    .  @#@@@@TINTBL* NAMEMC
)@@G@@   .  @E@@@@       TLE,U T(1,1),IB$MAX(1)+1    . IS THE VAL .GT. MAX?   MD
)@@G@@@#@@@@       UNLIST .   @D@@@@       TLE,U T(1,1),IB$MIN(1) . IS MIN .LEME
)@@G@@. THE VAL?  @F@@@@       J     NOSKIP      . VALUE EXCEEDS TABLE BOUNDARMF
)@@G@@IES--- ERROR@F@@@@       TNZ,H2 IBTABL,T(1,1)   . WITHIN LIMITS. IS THERMG
)@@G@@E ANY CODE? @]@@@@NOSKIP .    @#@@@@       LIST .     @#@@@@       END  MH
)@@G@@.     @^@@@@/.    I BEAM  FUNCTIONS @#@@@@       INSTRS  .  @C@@@@MIBEAMMI
)@@G@@* SX   X11,IBLINK  . MONADIC ENTRY POINT  @D@@@@       SX    X11,IBMONF MJ
)@@G@@ . TURN ON MONADIC USAGE FLAG @E@@@@       J     IB0010      . GO INITIAMK
)@@G@@LIZE AND CHECK RIGHT ARG@C@@@@DIBEAM* SX   X11,IBLINK  . DYADIC ENTRY POML
)@@G@@INT   @C@@@@       SZ    IBMONF      . CLEAR MONAD FLAG     @D@@@@IB0010MM
)@@G@@ LMJ   X11,PIKRIT  . INIT TO GET I-BEAM INDEX   @ @@@@       J     IB999MN
)@@G@@9      .    @E@@@@       SA    A6,RITDSC   . POST DESCR FOR GARBAGE COLLMO
)@@G@@ECTOR @E@@@@       DS    A4,RITRNK   . POST RANK AND SIZE OF ARGUMENT   MP
)@@G@@@A@@@@       JE,U  A3,ZMODFL IB0030 .     @A@@@@       JNE,U A3,ZMOHFI IMQ
)@@G@@B9900 .     @C@@@@IB0020 LMJ   X6,0,X6     . GET INDEX HALFINT    @ @@@@MR
)@@G@@       DL    A1,A4       .    @ @@@@       J     IB0040      .    @C@@@@MS
)@@G@@IB0030 LMJ   X6,0,X6     . GET INDEX DFLOAT     @C@@@@       FUZZDN     MT
)@@G@@       . CONVERT TO INTEGER   @C@@@@       JNZ   A1,IB9900   . IF NON-INMU
)@@G@@T, DOMAINERR@F@@@@. INDEX IN A2--FIND OUT WHAT TO DO BY EXAMINING ITS TAMV
)@@G@@BLE ENTRY   @E@@@@IB0040 TINTBL  A2        . IS THIS I-BEAM IN THE TABLEMW
)@@G@@?     @C@@@@       J     IB9900      . NO, DOMAIN ERROR     @D@@[[      MX
)@@G@@  LA     A1,RCMASF      . GET INST MGR FLAG     @E@@[[        TG,U   A2,MY
)@@G@@50          . IS THIS AN INST MGR FUNC?   @F@@[[        JZ     A1,IB9900MZ
)@@G@@      . IES, IF JOE USER, SAY DOMAIN ERROR@E@@@@       DL    A4,RITRNK  NA
)@@G@@ . RECOVER ARG RANK AN D LENGTH     @F@@@@       TP    IBTABL,A2   . IS NB
)@@G@@THIS FUNC A DYAD WITH SUBTYPES?     @E@@@@       J     IB0050      . YESNC
)@@G@@, GO BE SURE ARG IS VECTOR    @F@@@@       JNE,U A5,1 IB9900 . IF NO SUBND
)@@G@@TYPES, ARG LENGTH MUST BE 1   @C@@@@       TNZ,S1 IBTABL,A2  . IS THIS FNE
)@@G@@UNC A MONAD?@E@@@@       J     IB0055      . NO, DYAD, GO SETUP TO GET RNF
)@@G@@ITEARG@H@@@@       TNZ   IBMONF      . NON-DYAD, DID WE COME IN AT MONADNG
)@@G@@ ENTRY POINT?     @D@@@@       J     IB9900      . NO, DYAD-- DOMAIN ERRNH
)@@G@@OR    @B@@@@       J     IB0060      . YES, CONTINUE  @A@@@@. INDEX INDINI
)@@G@@CATES DYAD WITH SUBTYPES@C@@@@IB0050 TNE,U A4,ZRANKV   . IS ARG A VECTORNJ
)@@G@@?     @D@@@@       TLE,U A5,2        . YES, OF AT LEAST LENGTH 2? @C@@@@NK
)@@G@@       J     IB9900      . NO, DOMAIN ERROR     @F@@@@. FOR DYADS, INITINL
)@@G@@ALIZE FETCH OF RITEARG (USING LEFTARG REGS)     @F@@@@IB0055 TZ    IBMONNM
)@@G@@F      . DID WE COME IN AT MONADIC ENTRY POINT? @B@@@@       J     IB990NN
)@@G@@0      . YES, DOMAIN ERR@D@@@@       SA    A2,IBINDX   . YES, TEMP SAVE NO
)@@G@@INDEX VALUE @G@@@@       LMJ   X11,PIKLFT  . INITIALIZE TO FETCH RITE ARNP
)@@G@@G (USES LEFT REGS)@ @@@@       J     IB9900      .    @D@@@@       SAVERNQ
)@@G@@ A0,LFTDAD,8 . SAVE DECODED ARG PARAMETERS@ @@@@       LA    A2,IBINDX  NR
)@@G@@ .    @G@@@@IB0060 LA,S2 A1,IBTABL,A2. ALL IS OK -PICK UP THE MODE TO USNS
)@@G@@E FOR ANSWER@C@@@@       TNE,U A1,ZMONUL   . IS IT UNDEFINED?     @G@@@@NT
)@@G@@       J     IB0070      . YES, CANNOT RESERVE SPACE. GO EXECUTE THE OP NU
)@@G@@@E@@@@       SA,S2 A1,IBDUMY   . NO, SAVE IT IN THE DUMMY DESCR   @B@@@@NV
)@@G@@       LA,S3 A0,IBTABL,A2. GET THE RANK   @B@@@@       SA,S3 A0,IBDUMY  NW
)@@G@@ . PLUG IT IN, TOO@B@@@@       TE,U  A0,ZRANKS   . IS IT SCALAR?  @F@@@@NX
)@@G@@       J     IB0070      . NO-CAN'T RESERVE WITHOUT KNOWING LENGTH@D@@@@NY
)@@G@@       SA,H2 A2,IBDUMY   . YES- TEMP SAVE TABLE INDEX @C@@@@       LA,U NZ
)@@G@@ A0,IBDUMY   . LOCN OF DUMMY DESCR  @C@@@@       LMJ   X11,PUTANS  . INIOA
)@@G@@TIALIZE STORE RTNE@ @@@@       J     IB9999      .    @D@@@@       PUSH OB
)@@G@@ A6          . DESCR OF RESULT TO STACK   @C@@@@       LA,H2 A2,IBDUMY  OC
)@@G@@ . RECOVER TABLE INDEX  @C@@@@IB0070 LA,H2 A2,IBTABL,A2 . GET CODE RTNE OD
)@@G@@ADDR  @E@[@@       TG,U  A2,IBMAST   . IS THIS A MASTER CONSOLE I-BEAM? OE
)@@G@@@F@[@@       TZ    RCMASF      . YES, IS THIS USER A MASTER CONSOLE?    OF
)@@G@@@D@[@@       J     0,A2        . OK, GO EXECUTE THE FUNCTION@G@[@@      OG
)@@G@@ ERROR YDOMAI,IB9999 . JOE USER TRYING TO BE INSTALLATION MANAGER @D@@[[OH
)@@G@@        J      0,A2           . AND GO EXECUTE IT     @B^@@@/. INDIVIDUAOI
)@@G@@L IBEAMS EXECUTE FROM HERE--- @[@@@@.     @[@@@@.     @E@@@@ IDYAD  1,IBOJ
)@@G@@0100,ZMOHFI,ZRANKS     . DELAY (I.E. TWAIT)     @D@@@@IB0100 LMJ   X4,0,OK
)@@G@@X4     . GET NO OF SECONDS TO DELAY @D@@@@       JZ    A1,IB0110   . IF OL
)@@G@@ALREADY HALFINT, OK     @B@@@@       DL    A4,A1       . ELSE CONVERT   OM
)@@G@@@ @@@@       FUZZDN            .    @C@@@@IB0110 DJZ   A1,IB0140   . IF ON
)@@G@@ZERO, DON'T WAIT  @F@@@@       TG,U  A2,901      . BETTER BE LESS OR EQUOO
)@@G@@AL 15 MINUTES     @C@@@@       LA,U  A2,900      . ELSE FORCE TO 15 MINSOP
)@@G@@@C@@@@       MSI,U A2,1000     . CONVERT TO MILLISEC  @C@@@@       DSL  OQ
)@@G@@ A2,36       . PREPARE FOR DIVISION @E@@@@       DI,U  A2,3000     . BREOR
)@@G@@AK UP INTO 30 SECOND INTERVALS@F@@@@       TLE,U A3,2        . IS REMAINOS
)@@G@@ING INTERVAL AT LEAST 2 MS?   @E@@@@       J     IB0130      . NO, DO 30OT
)@@G@@-SEC INTERVALS ONLY     @D@@@@       LA,U  A1,0,A3     . YES- GET SHORT OU
)@@G@@INTERVAL    @A@@@@IB0120 ER    TWAIT$      . WAIT     @E@@@@       TZ   OV
)@@G@@ CONSBR      . HAS USER SIGNALED ATTENTION?     @B@@@@       J     IB014OW
)@@G@@0      . YES, GET OUT---@D@@@@IB0130 JNGD  A2,IB0140   . ANY MORE 30-SECOX
)@@G@@ INTERVALS? @F@@@@       LA,U  A1,3000     . YES- SET UP FOR ANOTHER 30-OY
)@@G@@SEC WAIT    @A@@@@       J     IB0120      . AND DO IT@B@@@@IB0140 DSL  OZ
)@@G@@ A1,72       . CLEAR RESULT   @D@@@@       LMJ   X2,0,X2     . STASH ANSPA
)@@G@@WER (ALWAYS ZERO) @A@@@@       J     IB9100      . EXIT     @[@@@@.     PB
)@@G@@@E@@@@ IDYAD  2,IB0200,ZMOHFI,ZRANKS          . DEBUG SENTINALS   @B@@@@PC
)@@G@@IB0200 X$ON              . TURN DUMPS ON  @E@@@@       LX,U  X11,DBGLIM PD
)@@G@@ . SET ADDR OF PARAM TABLE IN SYSCMD@D@@@@       LMJ   A3,IPARAM   . GO PE
)@@G@@CKECK AND POST PARAM VAL@B@@@@       LA    A0,WSDBUG   . GET NEW FLAG   PF
)@@G@@@D@@@@       JB    A0,IB9100   . IF 1-BIT ON, LEAVE DUMPS ON@C@@@@      PG
)@@G@@ X$OFF             . ELSE TURN THEM OFF   @B@@@@       J     IB9100     PH
)@@G@@ . AND THEN QUIT  @[@@@@.     @D@@@@  IDYAD  3,IB0300,ZMOHFI,ZRANKS     PI
)@@G@@         .  ORIGIN@F@@@@IB0300 LX,U  X11,ORGLIM       . POINTERS ARE IN PJ
)@@G@@SYSCMD ELEMENT    @D@@@@       J     IPARAM      . GO SET PARAMETERS ANDPK
)@@G@@ EXIT @[@@@@.     @D@@@@  IDYAD  4,IB0400,ZMOHFI,ZRANKS              . DPL
)@@G@@IGITS @A@@@@IB0400 LX,U  X11,DIGLIM       .     @D@@@@       J     IPARAPM
)@@G@@M      . GO SET PARAMETERS AND EXIT @[@@@@.     @D@@@@  IDYAD  5,IB0500,PN
)@@G@@ZMOHFI,ZRANKS              . WIDTH  @A@@@@IB0500 LX,U  X11,WIDLIM       PO
)@@G@@.     @D@@@@       J     IPARAM      . GO SET PARAMETERS AND EXIT @G@@@@PP
)@@G@@.                                                           ** SFEI **  PQ
)@@G@@@ @@@@ IDYAD  6,IB0600,ZMOCHR,ZRANKV@E@@@@IB0600 JNE,U A3,ZMOCHR IB9900 PR
)@@G@@. ARG NOT CHAR=DOMAIN ERR     @C@@@@       JLE,U A4,ZRANKV+1 IB9900 . DIPS
)@@G@@TTO IF ARRAY@B@@@@       DL    A1,WSSFEI   . GET OLD SIGNAL @D@@@@      PT
)@@G@@ DS    A1,IBDDTA   . TEMP SAVE IN DATA AREA     @E@@@@       DL    A1,0,PU
)@@G@@X5     . GET 1ST 2 WDS OF NEW SIGNAL FLAG @A@@@@       DS    A1,WSSFEI  PV
)@@G@@ . AND STASH@C@@@@. NOW PUT EOL AFTER LAST CHAR OF NEW SIGNAL     @F@@@@PW
)@@G@@IB0610 TG,U  A5,7        . IS NEW FLAG (A5) LONGER THAN 7 CHARS?  @B@@@@PX
)@@G@@       LA,U  A5,7        . YES, FORCE 7   @C@@@@       DSL   A5,36      PY
)@@G@@ . PREPARE TO DIVIDE    @D@@@@       DI,U  A5,4        . WORD TO A5, CHAPZ
)@@G@@R IN A6     @F@@@@       AA,U  A5,WSSFEI   . FOLD IN ABS ADDR OF TARGET QA
)@@G@@AREA IN WS  @C@@@@       LA,U  A0,AEOL     . GET END OF LINE CHAR @E@@@@QB
)@@G@@       DL    A1,A5       . PREPARE TO ACCESS EXECUTE TABLE  @C@@@@      QC
)@@G@@ EX    IB0650,A2   . STUFF INTO SF LOCN   @A@@@@. SCAN OLD FLAG TO GET NQD
)@@G@@O OF CHARS  @A@@@@IB0620 DL    A2,IBDDTA   . OLD FLAG @B@@@@       LA,U QE
)@@G@@ A15,8       . LENGTH CTR     @B@@@@IB0630 JNGD  A15,IB0640  . EXIT WHENQF
)@@G@@ DONE @D@@@@       LA,U  A1,0        . CLEAR TO RECIEVE NEXT CHAR @D@@@@QG
)@@G@@       LTSL  A1,8        . NEXT CHAR TO COMPARE REG   @B@@@@       TE,U QH
)@@G@@ A1,AEOL     . END OF LINE?   @C@@@@       J     IB0630      . NO, KEEP QI
)@@G@@LOOKING     @B@@@@IB0640 LA,U  A5,7        . INITIAL COUNT  @C@@@@      QJ
)@@G@@ ANA   A5,A15      . LESS NO NOT SCANNED  @C@@@@       SA,H2 A5,IBDUMY  QK
)@@G@@ . LENGTH TO DUMMY DESCR@F@@@@       J     IB9000      . GO SET DATA ADDQL
)@@G@@R, COPY DESCR AND EXIT  @D@@@@. EXECUTE TABLE TO STASH END OF LINE CHARSQM
)@@G@@ IN SIG FLAG@ @@@@IB0650 SA,Q1 A0,0,A1     .    @ @@@@       SA,Q2 A0,0,QN
)@@G@@A1     .    @ @@@@       SA,Q3 A0,0,A1     .    @ @@@@       SA,Q4 A0,0,QO
)@@G@@A1     .    @F@@@@.                                                     QP
)@@G@@RESET RANDOM@A@@@@ IDYAD 7,IB0700,ZMODFL,ZRANKS .     @C@@@@IB0700 LA   QQ
)@@G@@ A5,LFTSIZ   . LENGTH OF RITEARG    @D@@@@       JNE,U A5,1 IB9900 . IF QR
)@@G@@NOT 1, DOMAIN ERROR     @F@@@@       LA    A3,LFTMOD   . MODE OF RITEARGQS
)@@G@@ (LEFTARG PICK WAS USED)@D@@@@       JE,U  A3,ZMOHFI IB0720 . IF HALFINTQT
)@@G@@, GO GET IT @E@@@@       JNE,U A3,ZMODFL IB9900 . IF NOT DFLOAT, DOMAIN QU
)@@G@@ERR   @E@@@@IB0710 LMJ   X4,0,X4     . GET RITEARG (TO LEFTARG REGS)    QV
)@@G@@@D@@@@       DL    A4,A1       . PREPARE TO TRUNCATE IT     @A@@@@      QW
)@@G@@ FUZZDN            . AND DO SO@G@@@@       JZ    A1,IB0730   . IF TRUNCAQX
)@@G@@TION RESULT HALFINT, GO RE-FLOAT    @E@@@@       J     IB0740      . OTHQY
)@@G@@ERWISE, CALL THE RESET RTNE   @D@@@@IB0720 LMJ   X4,0,X4     . PICK UP HQZ
)@@G@@ALFINT RIGHTARG   @ @@@@IB0730 DFLOAT A0,A1      .    @B@@@@IB0740 LMJ  RA
)@@G@@ X11,RANCHG  . GO SET NEW SEED@F@@@@       J     IB9900      . DOMAIN ERRB
)@@G@@R IF SEED NOT 35 BIT INTEGER  @C@@@@       LMJ   X2,0,X2     . STASH RESRC
)@@G@@ULT IN WS   @A@@@@       J     IB9100      . AND QUIT @F@@@@.           RD
)@@G@@                                     PRINT CONTROL    @ @@@@ IDYAD 8,IB0RE
)@@G@@800,ZMOHFI,ZRANKS @G@[@@IB0800 LA    A3,LFTMOD   . MODE OF RIGHT ARG(LEFRF
)@@G@@T ARG PICK WAS USED)    @G@[@@       LA    A4,LFTRNK   . RANK OF RIGHT ARG
)@@G@@RG(LEFT ARG PICK WAS USED)    @G@[@@       LA    A5,LFTSIZ   . SIZE OF RRH
)@@G@@IGHT ARG(LEFT ARG PICK WAS USED)    @D@[@@       JNE,U A3,ZMOCHR IB9900 RI
)@@G@@. IF ARG IS NOT  CHAR   @B@[@@       JNE,U A4,ZRANKV IB9900 . OR VECTOR RJ
)@@G@@@E@[@@       TG,U  A5,240      . MAKE SURE IMAGE IS NOT TOO LONG  @C@[@@RK
)@@G@@       J     IB9900      . WHUPPS, DOMAIN ERROR @F@[@@       DL    A1,WRRL
)@@G@@FCTL   . INITIALIZE POINTERS FOR EDIT ROUTINE   @C@[@@       LXM,U A2,,XRM
)@@G@@5      . GET TEXT ADDRESS     @B@[@@       LR    R1,A5       . GET TEST RN
)@@G@@LENGTH@C@[@@       LA    A0,(1,BUFF) . GET BUFFER ADDRESS   @B@[@@      RO
)@@G@@ LMJ   X11,WREDIT  . EDIT THE IMAGE @D@[@@       ANA   A0,(1,BUFF) . CALRP
)@@G@@CULATE THE WORD COUNT   @E@@[[IB0800 LA    A0,(+1,BUFF)     . GET ACW FORQ
)@@G@@R FIELDATA IMAGE  @G@@[[       LMJ   X11,IBEDTF  . CHECK RITEARG FOR CHARR
)@@G@@R, EDIT TO FIELDATA     @DH@@@       TG,U  A0,41       . WITHIN LIMIT FORS
)@@G@@R PRTCN$    @C@@@@       J     IB9900      . NO, SIGNAL DOMAIN ERR@F@@@@RT
)@@G@@       LSSL  A0,18       . PUT WORD COUNT OF IMAGE INTO PACKET    @E@@@@RU
)@@G@@       LXM,U A0,BUFF     . PUT ADDRESS OF IMAGE INTO PACKET @D@@@@      RV
)@@G@@ ER    PRTCN$      . SEND IT OFF TO THE EXEC    @E@@@@       DSL   A1,72RW
)@@G@@       . SET RESULTS RETURNED TO ZERO     @A@@@@       LMJ   X2,0,X2    RX
)@@G@@ . STORE IT @A@@@@       J     IB9100      . EXIT     @[@@@@.     @E@@@@RY
)@@G@@.                                            SET FUZZING    @[@@@@.     RZ
)@@G@@@A@@@@  IDYAD 9,IB0900,ZMOHFI,ZRANKS .    @C@@@@IB0900 LX,U  X11,FUZLIM SA
)@@G@@ . SET TABLE POINTER    @E@@@@       LMJ   A3,IP0010   . GO CHECK VAL ANSB
)@@G@@D PUT INTO THE WS @C@@@@       LA    A2,WSFUZI   . GET NEW VAL OF FUZINDSC
)@@G@@@E@@@@       SETFUZ            . CONVERT TO PERCENT ERROR AND SAVE@C@@@@SD
)@@G@@       J     IB9100      . THEN TAKE NORMAL EXIT@[@@@@.     @^@@@@. FILESE
)@@G@@ I/O OPERATIONS---@[@@@@.     @ @@@@ IDYADV 10,IB1000,ZMONUL,0 .  @E@[@@SF
)@@G@@IB1000 TNZ,U FILEIO      . HAS INSTALLATION TURNED FILES ON?@G@[@@      SG
)@@G@@ J     IB1010      . NO, GIVE UNIMPLEMENTED FEATURE DIAGNOSTIC    @B@[@@SH
)@@G@@       LMJ   X11,FILEIO  . YES, DO IT     @A@@[[IB1000 LMJ   X11,FILEIO SI
)@@G@@ . GO DO IT @A#@@@       J     IB9999      . ERROR    @B@@@@       J    SJ
)@@G@@ IB9100      . NORMAL EXIT    @D@[@@IB1010 ERROR YUNIMP,IB9999    . GO SSK
)@@G@@IGNAL ERROR EXIT  @[[@@@.     @^@@@@. RAW ASCII INPUT/OUTPUT@[@@@@.     SL
)@@G@@@A@@@@ IDYAD 11,IB1100,ZMONUL,0     .     @E@[@@IB1100 TNZ,U FUNNYM     SM
)@@G@@ . IS UOM FUNNYMODE I/O PKG IN EXEC?@D@[@@       J     IB1110      . NO,SN
)@@G@@ UNIMPLEMENTED FEATURE  @G@[@@       JMRTST ZRANKV,IB9900 ZMODFL,ZMOHFI,SO
)@@G@@IB9900  . CHECK NUMERIC VECT  @G@@][IB1100 JMRTST ZRANKV,IB9900 ZMODFL,ZSP
)@@G@@MOHFI,IB9900  . CHECK NUMERIC VECT  @B#@@@       LMJ   X11,FUNNYM  . DO SQ
)@@G@@ASCII I/O   @A@@@@       J     IB9999      . OOPS-    @B@@@@       J    SR
)@@G@@ IB9100      . NORMAL EXIT    @A@@@@IB1110 ERROR YUNIMP,IB9999    .     SS
)@@G@@@[@@[[.     @G@@[[. GENERAL EXEC8-SPECIFIC ESCAPE HATCH-- ER CSF$, SETC$ST
)@@G@@, COND$, OPT$     @[@@[[.     @B@@[[ IDYADV 12,IB1200,ZMODFL,ZRANKS     SU
)@@G@@.     @D@@[[IB1200 LA    A5,RITSIZ   . GET LENGTH OF CTL VECT     @E@@[[SV
)@@G@@       JNE,U A5,2 IB9900 . DOMAIN ERROR IF NOT LENGTH 2     @B@@[[      SW
)@@G@@ LMJ   X6,0,X6     . GET SUBFUNC    @#@@[[       LA    A0,A5@E@@[[      SX
)@@G@@ COMJMP A0,IB9900 0,IB1210 1,IB1220 2,IB1230 3,IB1240 @^@@[[. SUBFUNCTIOSY
)@@G@@N 0, ER CSF$@E@@[[IB1210 LA    A0,(+1,BUFF)     . IMAGE IS EDITED INTO BSZ
)@@G@@UFF   @C@@[[       LMJ   X11,IBEDTF  . EDIT TO FIELDATA     @C@@[[      TA
)@@G@@ LSSL  A0,18       . LINE UP WORD COUNT   @C@@[[       LXM,U A0,BUFF    TB
)@@G@@ . AND PUT IMAGE ADDR IN@G@@[[       SA    A0,ERRCSF   . MAKE CONTING RTTC
)@@G@@NE ALLOW CSF$ SYNTAX ERRORS   @C@@[[       ER    CSF$        . SUBMIT THTD
)@@G@@E IMAGE     @C@@[[       LA    A1,ERRCSF   . GET CONTING FLAG BACK@F@@[[TE
)@@G@@       SZ    ERRCSF      . BE SURE ITS OFF FOR ANYONE FOLLOWING   @E@@[[TF
)@@G@@       JZ    A1,IB9900   . IF IT WAS CLEARED, DOMAIN ERROR  @D@@[[      TG
)@@G@@ J     IB1290      . GO RETURN STATUS TO USER   @^@@[[. SUBFUNCTION 1, CTH
)@@G@@OND$  @ @@[[IB1220 ER    COND$       .    @ @@[[       J     IB1290     TI
)@@G@@ .    @^@@[[. SUBFUNCTION 2, OPT$   @D@@[[IB1230 LA    A0,RCOPTW   . GETTJ
)@@G@@ VALUE AT SIGNON TIME   @A@@[[       AND   A0,(+000377777777)    .@ @@[[TK
)@@G@@       LDSL  A0,36       .    @ @@[[       J     IB1290      .    @ @@[[TL
)@@G@@. SUBFUNCTION 3, ER SETC$     @B@@[[IB1240 TLD   A3,LFTMOD   . GET ARG PTM
)@@G@@ARAMS @C@@[[       JMRTST ZRANKS,IB9900 ZMOHFI,IB9900    .  @C@@[[      TN
)@@G@@ LMJ   X4,0,X4     . GET VALUE TO BE USED @ @@[[       TG,U  A2,0       TO
)@@G@@ .    @D@@[[       TG,U  A2,010000   . THIRD WORDS ONLY, PLEASE   @C@@[[TP
)@@G@@       J     IB1290      . ELSE DOMAIN ERROR    @ @@[[       LA,U  A0,0,TQ
)@@G@@A2     .    @ @@[[       ER    SETC$       .    @C@@[[       LA,U  A0,0 TR
)@@G@@       . DUMMY RETURN VALUE   @B@@[[. CONVERT STATUS VALUES TO DFLOAT INTS
)@@G@@ WS   @ @@[[IB1290 LA,U  A1,0        .    @E@@[[       LA    A2,A0      TT
)@@G@@ . PREPARE TO RETURN STATUS CODE    @D@@[[       DFLOAT A0,A1      . MAKTU
)@@G@@E STATUS CODE FLOATING  @D@@[[       LMJ   X2,0,X2     . STASH IN THE WOTV
)@@G@@RKSPACE     @B@@[[       J     IB9100      . AND RETURN     @[@@[[.     TW
)@@G@@@C@@[[. COMPUTE LIBNO FROM A GIVEN ACCNT, QUAL, RUNID @[@@[[.     @A@@[[TX
)@@G@@ IDYAD 13,IB1300,ZMODFL,ZRANKS     .@C@@[[IB1300 LA    A5,LFTSIZ   . LENTY
)@@G@@GTH OF CHAR ARG   @E@@[[       JNE,U A5,30 IB9900     . IF NOT 30 CHARS,TZ
)@@G@@ DOMAIN ERR @A@@[[       LA    A0,(+1,BUFF)     .     @C@@[[       LMJ  UA
)@@G@@ X11,IBEDTF  . EDIT TO FIELDATA     @C@@[[       DL    A0,BUFF+2   . GETUB
)@@G@@ CONVERTED ACCOUNT@A@@[[       DL    A2,BUFF     . QUALIFIER@A@@[[      UC
)@@G@@ LA    A4,BUFF+4   . AND RUNID@F@@[[       LMJ   X11,LIBNOC  . USE INSTAUD
)@@G@@LLATION DEPENDENT ROUTINE     @C@@[[       DSL   A1,36       . ADJUST REUE
)@@G@@TURNED VALUE@A@@[[       DFLOAT A0,A1      . FLOAT IT @B@@[[       LMJ  UF
)@@G@@ X2,0,X2     . STASH IN WS    @C@@[[       J     IB9100      . AND TAKE UG
)@@G@@NORMAL EXIT @[@@@@.     @[@@@@.     @E@@@@. PARAM CHECK ROUTINE FOR I-BEUH
)@@G@@AMS WHICH MATCH SYSCMDS---    @[@@@@.     @E@@@@IPARAM LX,U  A3,IB9100  UI
)@@G@@ . SET EXIT ADDR TO NORMAL PROG EXIT@C@@@@IP0010 SA    A3,A6       . TEMUJ
)@@G@@P SAVE LINKAGE    @B@@@@       LA    A0,LFTSIZ   . LENGTH OF ARG  @D@@@@UK
)@@G@@       JNE,U A0,1 IB9900 . IF NOT UNITY, DOMAIN ERROR @B@@@@       LA   UL
)@@G@@ A1,LFTMOD   . GET THE MODE   @E@@@@       JE,U  A1,ZMOHFI IP0020      .UM
)@@G@@ IF HALFINT, GO GET IT  @F@@@@       JNE,U A1,ZMODFL IB9900 . IF NOT DFLUN
)@@G@@OAT EITHER, DOMAIN ERR  @B@@@@       LMJ   X4,0,X4     . BRIN G TO A1,A2UO
)@@G@@@C@@@@       DL    A4,A1       . PREPARE TO TRUNCATE  @A@@@@       FUZZDUP
)@@G@@N            . AND DO SO@D@@@@       JNZ   A1,IB9900   . IF TOO BIG, DOMUQ
)@@G@@AIN ERR     @ @@@@       J     IP0030      .    @B@@@@IP0020 LMJ   X4,0,UR
)@@G@@X4     . GET HALFINT ARG@C@@@@IP0030 TG,H1 A2,0,X11    . CHECK LOWER BOUUS
)@@G@@ND    @A@@@@       TG,H2 A2,0,X11    . AND UPPER@E@@@@       J     IB990UT
)@@G@@0      . IF EITHER EXCEEDED, DOMAIN ERR   @C@@@@       EX    1,X11      UU
)@@G@@ . BRING OLD VAL TO A1  @D@@@@       EX    2,X11       . STASH OLD VAL TUV
)@@G@@O WS FROM A2@B@@@@       DSL   A1,36       . ALIGN OLD VAL  @D@@@@      UW
)@@G@@ LMJ   X2,0,X2     . OLD VAL TO RESULT DESCR    @B@@@@       LX    A3,A6UX
)@@G@@       . RECOVER EXIT   @B@@@@       J     0,A3        . AND RETURN     UY
)@@G@@@[@@@@.     @G@@@@. SPECIAL I-BEAM TO GET TRUE CPU TIME REGARDLESS OF ACUZ
)@@G@@COUNTING SYSTEM   @[@@@@.     @A@@@@ IMONAD 18,IB1800,ZMODFL,ZRANKS    .VA
)@@G@@@A@@@@IB1800 LA    A0,(+PCTRES,RCPCT)    .@ @@@@       ER    PCT$       VB
)@@G@@ .    @G@@@@       LA    A1,RCPCT+026     . GET CPU TIME (200 MICROSEC IVC
)@@G@@NTERVALS)   @C@@@@       DSA   A1,36       . PREPARE TO FLOAT     @A@@@@VD
)@@G@@       DFLOAT A0,A1      . AND DO SO@B@@@@       LMJ   X2,0,X2     . STAVE
)@@G@@SH IN RESULT@B@@@@       J     IB9100      . THEN GO AWAY   @G@@@@/. PUBVF
)@@G@@LIC I-BEAMS-- ONLY THESE SHOULD BE KNOWN TO THE GENERAL PUBLIC    @E@@@@VG
)@@G@@. OF APL USERS-- THE REST ARE RESERVED FOR THE COGNISCIENTI @F@@@@. (TRAVH
)@@G@@NSLATED FROM THE ITRALIAN, THAT MEANS 'TRUE APPLE-FREAKS')  @[@@@@.     VI
)@@G@@@G@@@@ IMONAD 19,IB1900,ZMODFL,ZRANKS .                      . KEYING TIVJ
)@@G@@ME    @F@[@@IB1900 DL    A1,RCKEYT   . PICK UP THE ACCUMULATED TIME SO FVK
)@@G@@AR    @E@@[[IB1900  LA     A0,RCKEYT      . GET TIME IN MILLISECONDS    VL
)@@G@@@E@@[[        LMJ    X11,TIMNOT     . CONVERT TO 60'THS, DFLOAT   @D[@@@VM
)@@G@@       LMJ   X2,0,X2     . STASH ERSATZ KEYING TIME   @B@@@@       J    VN
)@@G@@ IB9100      . AND GET OUT    @[@@@@.     @G@@@@ IMONAD 20,IB2000,ZMODFLVO
)@@G@@,ZRANKS                        . TIME OF DAY    @C@@@@IB2000 LMJ   X11,TVP
)@@G@@IMENW  . GO GET PRESENT TIME  @B@@@@       LMJ   X2,0,X2     . STASH ANSVQ
)@@G@@WER   @B@@@@       J     IB9100      . NORMAL EXIT    @[@@@@.     @G@@@@VR
)@@G@@ IMONAD 21,IB2100,ZMODFL,ZRANKS                        . CPU TIME USED  VS
)@@G@@@F@@@@IB2100 LMJ   X11,CPUNOW  . GET PRESENT (PCT) VALUE OF CPU TIME    VT
)@@G@@@E@@@@       DFAN  A1,RCPUON   . LESS CPU TIME AT SIGNON OF APL   @C@@@@VU
)@@G@@       LMJ   X2,0,X2     . SAVE ELAPSED TIME    @A@@@@       J     IB910VV
)@@G@@0      . AND EXIT @[@@@@.     @G@@@@ IMONAD  22,IB2200,ZMOHFI,ZRANKS   .VW
)@@G@@ 22=AVAILABLE STORAGE (IN BYTES)    @A@[@@IB2200 LA,U  A5,0        . CLEVX
)@@G@@AR SUM@G@@[[IB2200  LMJ    X11,GARBAF     . BE SURE GARBAGE IS COLLECTEDVY
)@@G@@ TO FREELIST@B@@[[        LA,U   A5,0           . CLEAR SUM @D[@@@      VZ
)@@G@@ LA,U  A0,0,WSTAG  . GET BASE ADDR OF WORKSP    @G@@@@       LA,U  A1,WSWA
)@@G@@FREE   . INITIALIZE ABS ADDR OF FREE LIST POINTER     @F@@@@IB2210 TNZ,HWB
)@@G@@2 0,A1       . DOES ANOTHER BLOCK FOLLOW THIS ONE?    @A@@@@       J    WC
)@@G@@ IB2220      . NO, QUIT @C@@@@       AU,H2 A0,0,A1     . YES- COMPUTE ITWD
)@@G@@S ADDR@D@@@@       AA,H1 A5,0,A1     . BUMP FREE STORAGE WORD CT  @C@@@@WE
)@@G@@       J     IB2210      . CONTINUE LOOKING     @E@@@@IB2220 LA    A2,A5WF
)@@G@@       . BRING CT IN WDS TO ANSWER REG    @D@@[[        AA,H2  A2,WSMSIZWG
)@@G@@      . PLUS MAX SIZE IN WORDS@G@@[[        ANA,H2 A2,WSASIZ      . LESSWH
)@@G@@ ACTUAL = NO WDS WE COULD MCORE$ TO @D@@@@       LSSL  A2,2        . MULWI
)@@G@@T BY 4 TO GET BYTES     @B@@@@       LMJ   X2,0,X2     . STASH ANSWER   WJ
)@@G@@@B@@@@       J     IB9100      . NORMAL EXIT    @[@@@@.     @F@@@@ IMONAWK
)@@G@@D 24,IB2400,ZMODFL,ZRANKS .                      SIGNON TIME@E@@@@IB2400WL
)@@G@@ DL    A1,RCONTM   . PICK IT UP FROM RUN CONTROL BLOK @C@@@@       LMJ  WM
)@@G@@ X2,0,X2     . STORE THE RESULT     @B@@@@       J     IB9100      . NORWN
)@@G@@MAL EXIT    @[@@@@.     @D@@@@ IMONAD 25,IB2500,ZMOHFI,ZRANKS . 25=TODAYWO
)@@G@@'S DATE     @F@@@@IB2500 LA    A2,RCDATE   . PICK UP THE DATE - ALREADY WP
)@@G@@CONVERTED   @C@@@@       LMJ   X2,0,X2     . CALL THE COROUTINE   @B@@@@WQ
)@@G@@       J     IB9100      . NORMAL EXIT    @[@@@@.     @F@@@@ IMONAD 26,IWR
)@@G@@B2600,ZMOHFI,ZRANKV        . CURRENT LINE NO ($Y27)[1]@C@@@@IB2600 DSL  WS
)@@G@@ A1,72       . CLEAR STATEMENT NO   @C@@@@       SSL   A3,36       . ANDWT
)@@G@@ LENGTH OF VECTOR @D@@@@       LA,U  A0,WSTATE   . ADDR OF CURRENT STATEWU
)@@G@@VECT  @C@@@@IB2610 LA,Q1 A4,0,A0     . GET CURRENT STATE    @F@@@@      WV
)@@G@@ JNE,U A4,STSUSP IB2620 . IF NOT SUSPENDED, GO GET LINENUM  @E@@@@      WW
)@@G@@ LA,H2 A0,0,A0     . ELSE GET LINK TO NEXT STATEBLOK  @D@@@@       JZ   WX
)@@G@@ A0,IB2630   . IF NONE, STATEVECT IS NULL @D@@@@       ABSADR A0        WY
)@@G@@ . ELSE GET ADDR OF NEXT BLOCK@C@@@@       J     IB2610      . AND GO EXWZ
)@@G@@AMINE IT    @E@@@@IB2620 TNE,U A4,STFUNX   . IS THIS FUNC EXECUTION STATXA
)@@G@@E?    @F@@@@       LA,H1 A2,1,A0     . YES, GET STATEMENT NO FROM STATE XB
)@@G@@VECTOR@D@@@@       LA,U  A3,1        . SET VECTOR LENGTH OF RESULT@E@@@@XC
)@@G@@IB2630 SA,H2 A3,IBDUMY   . POST RESULT LENGTH IN DUMMY DESCR@G@@@@      XD
)@@G@@ SA,H1 A2,IBDDTA   . AND DATA VALUE (IN CASE IT'S MEANINGFUL)     @D@@@@XE
)@@G@@       J     IB9000      . GO DUPE RESULT INTO WS     @[@@@@.     @E@@@@XF
)@@G@@ IMONAD 27,IB2700,ZMOHFI,ZRANKV    . VECT OF STMNTNOS IN SI @E@@@@. SCANXG
)@@G@@ STATEVECT TO SEE WHTA LENGTH OF RESULT IWLL BE--     @D@@@@IB2700 LA,U XH
)@@G@@ A0,0        . COUNT NO OF STMNTS IN SI   @ @@@@       LA,U  A1,WSTATE  XI
)@@G@@ .    @F@@@@       LA,U  A3,STSUSP   . GET SUSPENSION MARKER FOR COMPARIXJ
)@@G@@SON   @D@@@@IB2710 TE,Q1 A3,0,A1     . IS THIS KEYBOARD STATE?    @B@@@@XK
)@@G@@       AA,U  A0,1        . NO, COUNT IT   @B@@@@       LA,H2 A1,0,A1    XL
)@@G@@ . GE T FWD LINK  @E@@@@       JZ    A1,IB2720   . IF NONE, GO STASH ACTXM
)@@G@@UAL RESULT  @E@@@@       ABSADR A1         . ELSE GO LOCATE NEXT STATEBLXN
)@@G@@OK    @C@@@@       J     IB2710      . AND GO EXAMINE IT    @ @@@@. NOW XO
)@@G@@RESERVE THENEEDED SPACE @D@@@@IB2720 SA,H2 A0,IBDUMY   . PUT LENGTH INTOXP
)@@G@@ DUMMY DESCR@D@@@@       JZ    A0,IB9010   . IF NULL, GO COPY AND EXIT  XQ
)@@G@@@C@@@@       LA,U  A1,ZMOHFI   . OTHERWISE, GET MODE  @D@@@@       LA,U XR
)@@G@@ A0,IBDUMY   . AND ABS ADDR OF DUMMY DESCR@D@@@@       LMJ   X11,PUTANS XS
)@@G@@ . INITIALIZE STASH ROUTINE   @ @@@@       J     IB9999      .    @C@@@@XT
)@@G@@       PUSH  A6          . STACK DESCR OF RESULT@^@@@@. AND FILL IN THE XU
)@@G@@BLANKS@ @@@@       LA,U  A0,WSTATE   .    @B@@@@IB2730 LA,Q1 A3,0,A0    XV
)@@G@@ . CURRENT MODE   @D@@@@       JE,U  A3,STSUSP IB2740 . IF KEYBOARD, FORXW
)@@G@@GET IT@B@@@@       DSL   A1,72       . CLEAR LINE NUM @E@@@@       TNE,UXX
)@@G@@ A3,STFUNX   . IS THIS STATE FUNC EXECUTION?    @C@@@@       LA,H1 A2,1,XY
)@@G@@A0     . YES, GET STATEMENT NO@B@@@@       LMJ   X2,0,X2     . STASH RESXZ
)@@G@@ULT   @B@@@@IB2740 LA,H2 A0,0,A0     . GET FWD LINK   @C@@@@       JZ   YA
)@@G@@ A0,IB9100   . IF NONE, NORMAL EXIT @E@@@@       ABSADR A0         . ELSYB
)@@G@@E GET ADDR OF NEXT STATEBLOK  @C@@@@       J     IB2730      . AND GO PRYC
)@@G@@OCESS IT    @[@@@@.     @F@@@@ IMONAD 28,IB2800,ZMOHFI,ZRANKS . 28=TYPE YD
)@@G@@OF RUN(BATCH=5,DEMAND=6)@D@@@@IB2800 LA    A0,RCDMND   . GET THE RUN CONYE
)@@G@@TROL WORD   @C@@@@       LA,U  A2,5      . ASSUME IT IS BATCH     @C@@@@YF
)@@G@@       TZ    A0        . CHECK THE CONTROL WORD @E@@@@       LA,U  A2,6 YG
)@@G@@     . RUN MUST BE DEMAND, CHANGE THE FLAG@C@@@@       LMJ   X2,0,X2    YH
)@@G@@ . STORE THE RESULT     @A@@@@       J     IB9100    . NORMAL EXIT@[@@@@YI
)@@G@@.     @C@@@@ IMONAD 29,IB2900,ZMODFL,ZRANKS . 29=USER NUMBER@D@@@@IB2900YJ
)@@G@@ DL    A1,RCLIBN   . GET FROM RUN CONTROL BLOCK @C@@@@       LMJ   X2,0,YK
)@@G@@X2     . STORE THE RESULT     @B@@@@       J     IB9100      . NORMAL EXYL
)@@G@@IT    @[@@@@.     @G@@@@/.    IBEAMS IN HERE ARE USABLE ONLY BY A MASTERYM
)@@G@@ CONSOLE.  IF THIS IS   @G@@@@.     AN ORDINARY USER, THE COLLECTOR ALLOYN
)@@G@@CATED SPACE FOR THESE FUNCTS  @G@@@@.     IS PURGED BY OVERLAYING IT WITYO
)@@G@@H THE WS AND LCORE$'ING THE REST OUT@[@@@@.     @]@[@@$(MASTER) . @G@[@@YP
)@@G@@. DEFINE EXTERNAL LABEL USED BY CORE MANAGEMENT RTNES TO LOCATE MASTER  YQ
)@@G@@@A@[@@. CONSOLE CODE FOR OVERLAY PURPOSES @C@[@@IBMNOW EQU   $          YR
)@@G@@ . REMEMBER CURRENT LOC @B@[@@       RES   0-$         . RESET TO ZERO  YS
)@@G@@@D@[@@IBMAST* EQU  $           . SET TAG TO ZERO'TH LOCN    @E@[@@      YT
)@@G@@ RES   IBMNOW      . AND RESET LC TO WHERE IT WAS     @[@[@@.     @G@@[[YU
)@@G@@IBMAST  INFO   2 MCINFO       . COMMON BLOK FOR MASTER CONSOLE CODE     YV
)@@G@@@#@@[[        MASTER .  @GC@@@.                                         YW
)@@G@@            CREATE CHARACTER  @A@@@@ IDYAD 50,IB5000,ZMOCHR,ZRANKV    . YX
)@@G@@@F@@@@IB5000 JNE,U A3,ZMOHFI IB9900 . DOMAIN ERR IF ARG NOT HALFINT     YY
)@@G@@@F@@@@       JLE,U A4,ZRANKV+1 IB9900 . NEITHER CAN IT BE AN ARRAY...   YZ
)@@G@@@E@@@@       JNE,U A5,1 IB9900 . NOR OF OTHER THAN UNIT LENGTH    @E@@@@ZA
)@@G@@       SA,H2 A5,IBDUMY   . STUFF LENGTH INTO DUMMY DESCR    @C@@@@      ZB
)@@G@@ LMJ   X4,0,X4     . GET ARG TO A1,A2     @C@@@@       JN    A1,IB9900  ZC
)@@G@@   . NEG IS DOMAIN ERROR@G@@@@       JLE,U A2,01000 IB9900  . BE SURE ITZD
)@@G@@ WILL FIT IN A QUARTERWORD    @F@@@@       SA,Q1 A2,IBDDTA   . STASH NUMZE
)@@G@@ERIC VALUE AS A CHARACTER     @C@@@@       J     IB9000      . GO MOVE RZF
)@@G@@ESULT TO WS @A@[@@. IBEAM TO MANAGE THE ACCOUNTS FILE @B@[@@       IDYADZG
)@@G@@  51,IB5100,ZMOHFI,ZRANKS .   @E@[@@IBNVFS EQU   3           . # FUNCTIOZH
)@@G@@NS WITH VECTOR ARGS     @D@[@@IBNSFS EQU   1           .      ''      ''ZI
)@@G@@ SCALAR ARGS@F@[@@. FUNCTIONS WITH VECTOR ARGS SHOULD BE FIRST IN THE JUZJ
)@@G@@MP TABLE,   @A@[@@. FOLLOWED BY THOSE WITH SCALAR ARGS@ @[@@IBFTAB JMPTBZK
)@@G@@L 0 ; NOT DEFINED @ @[@@       1,IB5110 ; OPEN FILE   @ @[@@       2,IB5ZL
)@@G@@120 ; CLOSE FILE  @C@[@@       3,IB5130 ; GET A RECORD FROM THE FILE    ZM
)@@G@@@B@[@@       4,IB5140 . GET CURRENT POSITION    @E@[@@IB5100 TLD   A3,LFZN
)@@G@@TMOD   . GET PARAMETERS FOR THE RIGHT ARG @D@[@@       JNE,U A3,ZMOHFI IZO
)@@G@@B9900 . ARGS MUST BE HALF INT @E@[@@       JNE,U A4,ZRANKV IB5105 . IF NZP
)@@G@@OT VEC, GO CHECK SCALAR @E@[@@       JNE,U A5,2      IB9900 . VECS MUST ZQ
)@@G@@BE OF LENGTH TWO  @C@[@@       LA,H1 A0,0,X5     . GET FUNCTION INDEX   ZR
)@@G@@@B@[@@       TLE,U A0,IBNVFS+1 . IS IT LEGAL?   @ @[@@       TLE,U A0,1 ZS
)@@G@@       .    @C@[@@       J     IB9900      . NO, DOMAIN ERROR     @D@[@@ZT
)@@G@@       LA,H2 A1,0,X5     . YES, GET ARG TO FUNCTION   @A@[@@       J    ZU
)@@G@@ *IBFTAB,A0  . GO DO IT @E@[@@IB5105 JNE,U A4,ZRANKS IB9900 . DOMAIN ERRZV
)@@G@@ IF NOT SCALAR    @C@[@@       LMJ   X4,0,X4     . GET FUNCTION INDEX   ZW
)@@G@@@ @[@@       LA    A0,A2       .    @F@[@@       ANU,U A0,IBNVFS   . MAKZX
)@@G@@E IT RELATIVE TO THE SCALAR FUNCS   @B@[@@       TLE,U A1,IBNSFS+1 . IS ZY
)@@G@@IT LEGAL?   @ @[@@       TLE,U A1,1        .    @C@[@@       J     IB990ZZ
)@@G@@0      . NO, DOMAIN ERROR     @B@[@@       J     *IBFTAB,A0  . YES, DO IAA
)@@G@@T     @^@[@@. OPEN ACCOUNT FILE     @C@[@@.        A1=0=> READ ONLY  ,  AB
)@@G@@1=> ENABLE WRITE  @G@[@@. RETURN A0=# RECORDS IN FILE  ,  -1=> FILE IN UAC
)@@G@@SE  ,  -2=> I/O ERROR   @D@[@@IB5110 TLE,U A1,2        . 0,1 ARE THE ONLAD
)@@G@@Y GOOD ARGS @ @[@@       TLE,U A1,0        .    @ @[@@       J     IB990AE
)@@G@@0      .    @ @[@@       LMJ   X11,ACFOPN  .    @ @[@@       ER    ERR$ AF
)@@G@@       .    @ @[@@       J     IB5190      .    @^@[@@. CLOSE ACCOUNT FIAG
)@@G@@LE    @^@[@@.        A1=0=> AS IS   @F@[@@.           1=> GARBAGE COLLECAH
)@@G@@T (ALL DELETED #'S GO TO THE END)   @G@[@@.           2=> GARBAGE COLLECAI
)@@G@@T THEN PACK (I.E., THROW OUT DLT'D #'S)   @E@[@@. RETURN A0=0=> OK  ,  -AJ
)@@G@@1=> FILE NOT OPEN  ,  -2=> I/O ERROR@ @[@@IB5120 TLE,U A1,3        .    AK
)@@G@@@ @[@@       TLE,U A1,0        .    @ @[@@       J     IB9900      .    AL
)@@G@@@ @[@@       LMJ   X11,ACFCLO  .    @ @[@@       ER    ERR$        .    AM
)@@G@@@ @[@@       J     IB5190      .    @D@[@@. LOAD ACTIVE BUFFER WITH RECOAN
)@@G@@RD SPECIFIED BY (A1)    @G@[@@. RETURN A0=CURRENT POSITION (BEFORE SELECAO
)@@G@@TION)  ,  -1=> FILE NOT OPEN ,@B@[@@.           -3=> RECORD DOES NOT EXIAP
)@@G@@ST    @D@[@@IB5130 JN    A1,IB9900   . WHAT'S A NEG RECORD #?     @ @[@@AQ
)@@G@@       LMJ   X11,ACGREC  .    @ @[@@       ER    ERR$        .    @[@@[[AR
)@@G@@.     @F@@[[. FUNCTIONS 51, 52, AND 53 ARE FOR MANAGEMENT OF ACCOUNTING AS
)@@G@@DATA  @[@@[[.     @E@@[[        IDYAD  51,IB5100,ZMONUL,0  . OPEN, POSITAT
)@@G@@ION, CLOSE  @[@@[[.     @G@@[[. TABLES FOR SUBFUNX OF IBEAM 51:  H1=ARG AU
)@@G@@MAX+1, H2=SUBROUTINE ADDR     @[@@[[.     @E@@[[.                       AV
)@@G@@      VAL FUNC       ARG VALUES     @G@@[[IBATBL  +1+1,ACFOPN           AW
)@@G@@. 1  OPEN 0=READ ENABLE, 1=WRITE ENABLE   @G@@[[        +2+1,ACFCLO     AX
)@@G@@      . 2  CLOSE     0=ASIS, 1=COLLECT, 2=PACK  @F@@[[        +0377777,AAY
)@@G@@CGREC       . 3 ACTIVATE   RECORD INDEX IN FILE @D@@[[        +0,IB9900 AZ
)@@G@@            . 4  NO LONGER USED     @F@@[[        +0+1,ACADNU           BA
)@@G@@. 5  ADD NEW ENTRY       IGNORED    @F@@[[        +0+1,ACALOK           BB
)@@G@@. 6 LOCK                 IGNORED    @F@@[[        +0+1,ACULOK           BC
)@@G@@. 7 UNLOCK               IGNORED    @[@@[[.     @G@@[[IB5100  TNZ,U  ONEBD
)@@G@@FIL         . HAS SITE IMPLEMENTED A SINGLE FILE?     @D@@[[        J   BE
)@@G@@   IB9900         . NO, CAN'T DO THIS     @G@@[[        TLD    A3,LFTMODBF
)@@G@@      . YES GET RITEARG PARAMS FROM LEFTARG LOCS@F@@[[        JMRTST ZRABG
)@@G@@NKV,IB9900 ZMOHFI,IB9900   . CKECH MODE, RANK   @E@@[[        JNE,U  A5,BH
)@@G@@2 IB9900    . AND BE SURE LENGTH IT 2     @C@@[[        LMJ    X4,0,X4  BI
)@@G@@      . GET SUBFUNCTION @C@@[[        SA     A2,IBDDTA      . TEMP SAVE BJ
)@@G@@IT    @D@@[[        LMJ    X4,0,X4        . GET SUBFUNC ARGUMENT  @E@@[[BK
)@@G@@        LA     A1,A2          . MOVE ART TO EXPECTED REG    @D@@[[      BL
)@@G@@  LA     A2,IBDDTA      . RECOVER SUBFUNCTION   @E@@[[        TG,U   A2,BM
)@@G@@1           . IS SUBFUNC AT LEAST ONE?    @D@@[[        TG,U   A2,5+1   BN
)@@G@@      . AND NO MORE THAN 5?   @D@@[[        J      IB9900         . IF NBO
)@@G@@OT, DOMAIN ERROR  @F@@[[        TLE,H1 A1,IBATBL-1,A2 . IS ARG TOO LARGEBP
)@@G@@ FOR THIS SUBFUNC?@D@@[[        TLE,U  A1,0           . NO, IS IT TOO SMBQ
)@@G@@ALL?  @G@@[[        J      IB9900         . EITHER OF THE ABOVE IS ALSO BR
)@@G@@DOMAIN ERR  @E@@[[        LX,H2  X11,IBATBL-1,A2     . GET SUBROUTINE ADBS
)@@G@@DR    @C@@[[        LMJ    X11,0,X11      . AND CALL IT     @F@@[[      BT
)@@G@@  ER     ERR$           . WHICH NEVER HAS AN ERROR EXIT     @G@@[[      BU
)@@G@@  J      IB8010         . BECAUSE WE HAVE A STATUS IN A0, INSTEAD @ @[@@BV
)@@G@@       J     IB5190      .    @ @[@@. GET CURRENT FILE POSITION   @C@[@@BW
)@@G@@. RETURN A0=SAME AS LOAD RECORD EXCEPT NO -3    @ @[@@IB5140 LMJ   X11,ABX
)@@G@@CFPOS  .    @ @[@@       ER    ERR$        .    @ @[@@       J     IB519BY
)@@G@@0      .    @A@[@@. COMMON RETURN POINT FOR IBEAM 60'S@C@[@@IB5190 LA   BZ
)@@G@@ A2,A0       . GET RESULT FOR STASH @A@[@@       LMJ   X2,0,X2     . STOCA
)@@G@@RE IT @E@[@@       J     IB9100      . TAKE COMMON EXIT FOR ALL IBEAMS  CB
)@@G@@@[@@[[.     @C@@[[. TABLES TO DEFINE ENTRIES IN AN ACCOUNT BLOCK  @[@@[[CC
)@@G@@.     @#@@[[P       PROC   .  @#@@[[DCVTBL* NAME   .  @#@@[[        UNLICD
)@@G@@$T .  @E@@[[        CBLOCK ZTPTMP,P(1,1),P(1,2),P(1,3)   . DESCRIPTOR   CE
)@@G@@@A@@[[        +P(3,1),IBDDTA        .     @ @@[[        +P(2,1),P(2,2)  CF
)@@G@@ .    @#@@[[        LI$T   .  @#@@[[        END    .  @[@@[[.     @A@@[[CG
)@@G@@CNDFLG  EQU    GLFTBL+ZMODFL  .     @A@@[[CNDFLP  EQU    PUTARY+ZMODFL  CH
)@@G@@.     @A@@[[CNCHRG  EQU    GLFTBL+ZMOCHR  .     @A@@[[CNCHRP  EQU    PUTCI
)@@G@@ARY+ZMOCHR  .     @A@@[[CNHFIG  EQU    GLFTBL+ZMOHFI  .     @A@@[[CNHFIPCJ
)@@G@@  EQU    PUTARY+ZMOHFI  .     @[@@[[.     @G@@[[IBRTBL  EQU    $-3      CK
)@@G@@      . NOTE: TABLE INDICES START FROM 1, NOT 0 @F@@[[       DCVTBL ZMODCL
)@@G@@FL,ZRANKV,1 CNDFLG,CNDFLP ACTIVE     . LIBNO    @E@@[[       DCVTBL ZMOCCM
)@@G@@HR,ZRANKV,8 CNCHRG,CNCHRP ACTIVE+2   . KEY@F@@[[       DCVTBL ZMOHFI,ZRACN
)@@G@@NKV,2 CNHFIG,CNHFIP ACTIVE+4   . LAST REF @F@@[[       DCVTBL ZMOCHR,ZRACO
)@@G@@NKV,12 CNFTOA,CNATOF ACTIVE+5  . ACCOUNT  @F@@[[       DCVTBL ZMOCHR,ZRACP
)@@G@@NKV,12 CNFTOA,CNATOF ACTIVE+7  . QUALIFIER@F@@[[       DCVTBL ZMOHFI,ZRACQ
)@@G@@NKV,6  CNSIXH,CNHSIX ACTIVE+9  . QUOTAS   @F@@[[       DCVTBL ZMOHFI,ZRACR
)@@G@@NKV,6  CNSIXH,CNHSIX ACTIVE+10 . USAGE    @G@@[[       DCVTBL ZMOHFI,ZRACS
)@@G@@NKV,36 CNBITH,CNHBIT ACTIVE+11 . PERMISSIONS    @G@@[[. PARAMETERS FOR NCT
)@@G@@EW FORMAT ACCOUNT ELEMENTS (WITH STORAGE BILLING)     @H@@[[        DCVTCU
)@@G@@BL ZMOCHR,ZRANKV,6  CNFTOA,CNATOF ACTIVE+9      . ACTUAL RUNID    @G@@[[CV
)@@G@@        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP ACTIVE+10     . DRUM USAGECW
)@@G@@@G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP ACTIVE+12     . TRACCX
)@@G@@K SECS@G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP ACTIVE+13     CY
)@@G@@. BILL DATE @C@@[[. DEFAULT PERMISSIONS FIELDS (SECTOR ZERO ONLY) @G@@[[CZ
)@@G@@        DCVTBL ZMOHFI,ZRANKV,4  CNHFIG,CNHFIP ACTIVE+1 . PERMS, MAX DRUMDA
)@@G@@@G@@[[IBFREC EQU   ($-IBRTBL-3)/3   . NO OF ENTRIES IN TBL GIVES NO OF FDB
)@@G@@IELDS @[@@[[.     @[_@@@.     @F@@@@  IDYAD 52,IB5200,ZMONUL,0  . GET A DC
)@@G@@FIELD FROM THE CURRENT RECORD @F@[@@IBFREC EQU   8           . NR OF FIEDD
)@@G@@LDS IN AN ACCOUNTING RECORD   @#@[@@IBRTAB JMPTBL 0 ; @B@[@@       1,IB5DE
)@@G@@210 ; LIBRARY NUM  (DFLOAT)   @B@[@@       2,IB5220 ; KEY          (APL DF
)@@G@@CHARS)@B@[@@       3,IB5230 ; LAST REF     (TDATE$)   @B@[@@       4,IB5DG
)@@G@@240 ; ACCOUNT NO   (12 F.D.)  @B@[@@       5,IB5250 ; QUALIFIER    (12 FDH
)@@G@@.D.)  @D@[@@       6,IB5260 ; QUOTAS       (6 SIXTH WRD INTS)     @D@[@@DI
)@@G@@       7,IB5270 ; USED         (6 SIXTH WRD INTS)     @B@[@@       8,IB5DJ
)@@G@@280 . PERMISSIONS  (36 BITS)  @E@[@@IB5200 DL    A3,LFTMOD   . GET MODE DK
)@@G@@AND RANK OF RITE ARG    @C@[@@       JNE,U A3,ZMOHFI IB9900 . MUST BE HADL
)@@G@@LF INT@C@[@@       JNE,U A4,ZRANKS IB9900 . AND A SCALAR    @ @[@@      DM
)@@G@@ LMJ   X4,0,X4     .    @D@[@@       TLE,U A2,IBFREC+1 . IS THERE SUCH ADN
)@@G@@ BEAST?     @ @[@@       TLE,U A2,1        .    @D@[@@       J     IB990DO
)@@G@@0      . NO, GIVE A DOMAIN ERROR    @B@[@@       SA    A2,IBDDTA   . SAVDP
)@@G@@E REC NUMBER@C@[@@       LMJ   X11,ACFPOS  . GET CURRENT RECORD # @B@[@@DQ
)@@G@@       ER    ERR$        . IST UNMOEGLICH @D@[@@       JZ    A0,IB9900  DR
)@@G@@ . ZERO SAYS NO RECORD LOADED @C@[@@       LA    A0,IBDDTA   . RESTORE FDS
)@@G@@IELD NUMBER @D@[@@       LA    A1,IBLIBN-1,A0 . GET DESCR FOR THIS ONE  DT
)@@G@@@F@[@@       SA    A1,IBDUMY   . SET IT IN THE PLACE FOR FINAL DUPE     DU
)@@G@@@C@[@@       LA,U  A1,IBDUMY+2 . DATA WILL START HERE @ @[@@       RELADDV
)@@G@@R A1         .    @E@[@@       SA    A1,IBDUMY+1 . POST DATA ADDR IN DUMDW
)@@G@@MY DESCR    @F@[@@       J     *IBRTAB,A0  . GO TO SEGMENT TO DO THE TRADX
)@@G@@NSLATION    @C@[@@IB5210 DL    A0,ACTIVE   . GET LIBRARY NUMBER   @C@[@@DY
)@@G@@       DS    A0,IBDUMY+2 . STASH INTO DESCRIPTOR@C@[@@       J     IB901DZ
)@@G@@0      . GO STASH THE RESILT  @B@[@@IB5220 DL    A0,ACTIVE+2 . GET LIB NEA
)@@G@@R KEY @ @[@@       DS    A0,IBDUMY+2 .    @ @[@@       J     IB9010     EB
)@@G@@ .    @E@[@@IB5230 LA    A0,ACTIVE+4 . GET TIME AD DATE OF LAST REF     EC
)@@G@@@ @[@@       SA    A0,IBDUMY+2 .    @ @[@@       J     IB9010      .    ED
)@@G@@@D@[@@IB5240 LA,U  A0,ACTIVE+5 . POINT XLATE AT ACCOUNT #   @E@[@@      EE
)@@G@@ J     IB5253      . AND GO CONVERGE WITH QUAL XLATION@C@[@@IB5250 LA,U EF
)@@G@@ A0,ACTIVE+7 . POINT XLATE AT QUAL  @D@[@@IB5253 SX    X2,IBDDTA   . SAVEG
)@@G@@E THESE FROM XLATER     @ @[@@       SX    X3,IBDDTA+1 .    @E@[@@      EH
)@@G@@ LX    X3,(1,IBDUMY+2) . THIS IS WHERE THE RESULT GOES@D@[@@       LR,U EI
)@@G@@ R1,12       . TWELVE CHARS TO BE MASSAGED@D@[@@       LXI,U A0,1       EJ
)@@G@@ . SET I CREMENT FOR XLATE    @E@[@@       LMJ   X11,TRANFN  . XLATE FIEEK
)@@G@@LD DATA TO APL INTERNAL @C@[@@       J     IB5255      . GO HANDLE THE EEL
)@@G@@RROR  @B@[@@       LX    X2,IBDDTA   . RESTORE THESE  @ @[@@       LX   EM
)@@G@@ X3,IBDDTA+1 .    @C@[@@       J     IB9010      . AND GO PUSH RESULT   EN
)@@G@@@F@[@@IB5255 LA    A0,IBLIBN   . SINCE THE DESCR WAS ALREADY SET UP,    EO
)@@G@@@F@[@@       SA    A0,IBDUMY   . CHANGE IT TO SOMETHING USEFUL HERE     EP
)@@G@@@D@[@@       LX    X2,IBDDTA   . RESTORE THE WIPED OUT REGS @ @[@@      EQ
)@@G@@ LX    X3,IBDDTA+1 .    @ @[@@       LA,XU A0,-2       .    @C@[@@      ER
)@@G@@ SA,H1 A0,IBDUMY+2 . REPORT A FORMAT ERROR@B@[@@       J     IB9010     ES
)@@G@@ . AND GO CLEAN UP@D@[@@IB5260 LX,U  A3,ACTIVE+9 . POINT CODE AT QUOTA WET
)@@G@@ORD   @ @[@@       J     IB5271      .    @C@[@@IB5270 LX,U  A3,ACTIVE+1EU
)@@G@@0 . POINT AT USED WORD  @G@[@@IB5271 LA,S1 A0,0,A3     . PICK UP THE 6THEV
)@@G@@S INTO 3 WRDS OF HALF INTS    @ @[@@       LSSL  A0,18       .    @ @[@@EW
)@@G@@       AA,S2 A0,0,A3     .    @ @[@@       LA,S3 A1,0,A3     .    @ @[@@EX
)@@G@@       LSSL  A1,18       .    @ @[@@       AA,S4 A1,0,A3     .    @ @[@@EY
)@@G@@       LA,S5 A2,0,A3     .    @ @[@@       LSSL  A2,18       .    @ @[@@EZ
)@@G@@       AA,S6 A2,0,A3     .    @ @[@@       TSTO  A0,IBDUMY+2 .    @ @[@@FA
)@@G@@       J     IB9010      .    @ @[@@IB5280 SSL   A0,36       .    @C@[@@FB
)@@G@@       LA    A1,ACTIVE+11 . GET PERMISSION BITS @D@[@@       LX    A2,(1FC
)@@G@@,IBDUMY+2) . START STASHING HERE    @D@[@@       LR,U  R1,17       . 18 FD
)@@G@@WRDS (36 HALF INTS)     @C@[@@IB5281 LDSL  A0,1        . GET THE H1 VALUFE
)@@G@@E     @B@[@@       LSSL  A0,17       . SHIFT OVER SO  @D@[@@       LDSL FF
)@@G@@ A0,1        . THIS SHIFT GIVES H1 AND H2 @D@[@@       SA    A0,0,*A2   FG
)@@G@@ . STASH AND GO TO NEXT WORD  @D@[@@       SSL   A0,36       . CLEAR OUTFH
)@@G@@ FOR NEXT PASS    @ @[@@       JGD   R1,IB5281   .    @ @[@@       J    FI
)@@G@@ IB9010      .    @[@[@@.     @G@@[[IB5200  TNZ,U  ONEFIL         . HAS FJ
)@@G@@SITE IMPLEMENTED A SINGLE FILE?     @B@@[[        J      IB9900         FK
)@@G@@. NO, ERROR @G@@[[        DL     A3,LFTMOD      . GET MODE RANK OF RITE FL
)@@G@@(REALLY!) ARG     @F@@[[        JMRTST ZRANKS,IB9900 ZMOHFI,IB9900   . BFM
)@@G@@E SURE ITS OK     @D@@[[        LMJ    X4,0,X4        . BRING ARG VAL TOFN
)@@G@@ A2   @E@@[[        SZ     IBDDTA         . SET GET/PUT FLAG TO GET     FO
)@@G@@@F@@[[        J      IB5310         . AND GO CHECK FILE STATUS, ARG VALIFP
)@@G@@@[@[@@.     @H@[@@   IDYADV 53,IB5300,ZMOHFI,ZRANKS .      SET A FIELD IFQ
)@@G@@NTHE CURRENT RECORD     @#@[@@IBSTAB JMPTBL 0 ; @#@[@@       1,IB5310 ; FR
)@@G@@@#@[@@       2,IB5320 ; @#@[@@       3,IB5330 ; @#@[@@       4,IB5340 ; FS
)@@G@@@#@[@@       5,IB5350 ; @#@[@@       6,IB5360 ; @#@[@@       7,IB5370 ; FT
)@@G@@@#@[@@       8,IB5380 . @C@[@@IB5300 LA    A0,RITSIZ   . GET SIZE OF LEFFU
)@@G@@T ARG @C@[@@       JNE,U A0,2 IB9900 . MUST BE LENGTH TWO   @B@[@@      FV
)@@G@@ LA    A0,RITDSC   . GET ITS DESCR  @ @[@@       ABSADR A0         .    FW
)@@G@@@B@[@@       LA,S2 A1,0,A0     . GET ITS MODE   @A@[@@       JNE,U A1,ZMFX
)@@G@@OHFI IB9900 .     @B@[@@       LMJ   X6,0,X6     . GET FIELD INDEX@ @[@@FY
)@@G@@       LA    A2,A5       .    @C@[@@       TLE,U A2,IBFREC+1 . DOES THE FZ
)@@G@@FIELD EXIST?@ @[@@       TLE,U A2,1        .    @D@[@@       J     IB990GA
)@@G@@0      . NO, GIVE A DOMAIN ERROR    @B@[@@       SA    A2,IBDDTA   . YESGB
)@@G@@, SAVE IT   @D@[@@       TNZ,Q1 MCAWRD     . IS FILE OPEN FOR WRITE?    GC
)@@G@@@C@[@@       J     IB5392      . NO, GO TELL HIM SO   @G@[@@       LMJ  GD
)@@G@@ X11,ACFPOS  . GET CURRENT RECORD NUMBER(IS FIL OPN+REC)    @B@[@@      GE
)@@G@@ ER    ERR$        . CANNOT HAPPEN  @D@[@@       JZ    A0,IB9900   . NO GF
)@@G@@RECORD IN THE BUFFER    @C@[@@       JN    A0,IB5392   . THE FILE IS NOTGG
)@@G@@ OPEN @C@[@@       LA    A0,IBDDTA   . RESTORE FIELD NUMBER @F@[@@      GH
)@@G@@ TLD   A1,LFTMOD   . GET MODE, RANK, AND SIZE OF RIGHT ARG  @D@[@@      GI
)@@G@@ JNE,U A0,1 IB5305 . CHECK FOR A LIB NO REQ     @E@[@@       JE,U  A1,ZMGJ
)@@G@@ODFL IB5305 . IF ALREADY, SKIP THE CONVERT@C@[@@       JNE,U A2,ZRANKV IGK
)@@G@@B5393 . MUST BE VECTOR  @C@[@@       JNE,U A1,ZMOHFI IB5393 . AND NOW HAGL
)@@G@@LF INT@B@[@@       LA    A0,LFTDSC   . GET DESCR ADDR @D@[@@       ABSADGM
)@@G@@R A0         . FIND OUT WHERE IT REALLY IS@D@[@@       LA,S1 A1,0,A0    GN
)@@G@@ . FIND OUT WHAT TYPE IT IS   @D@[@@       JE,U  A1,ZTPLIT IB5304 . IF LGO
)@@G@@ITERAL SKIP THIS  @C@[@@       LA,H2 A0,1,A0     . ELSE GET ADDR OF DATAGP
)@@G@@@A@[@@       ABSADR A0         . ABS IT   @E@[@@       ANA,U A0,1       GQ
)@@G@@ . AND BIAS IT SO WE CAN CONVERGE   @D@[@@IB5304 LA,H1 A1,1,A0     . GETGR
)@@G@@ DATA FOR CONVERSION    @C@[@@       DSL   A1,36       . CONVERT TO D FLGS
)@@G@@OAT   @ @[@@       DFLOAT A0,A1      .    @ @[@@       DS    A1,IBDDTA  GT
)@@G@@ .    @ @[@@       LX,U  X11,IBDDTA  .    @ @[@@       J     IB5310     GU
)@@G@@ .    @D@[@@IB5305 TNE   A1,IBFMOD,A0 . ALL OF THESE MUST BE EXACT@ @[@@GV
)@@G@@       TE    A2,IBFRNK,A0 .   @B@[@@       J     IB5393      . IMPROPER GW
)@@G@@FORMAT@ @[@@       TE    A3,IBFSIZ,A0 .   @E@[@@       J     IB5393     GX
)@@G@@ . RITE ARG NOT OF PROPER LENGTH    @G@[@@       LX    X11,LFTDSC  . GETGY
)@@G@@ ADDR OF LEFT ARG DESCR (SORRY, RIGHT ARG)@ @[@@       ABSADR X11       GZ
)@@G@@ .    @B@[@@       LA,S1 A1,0,X11    . GET DESCR TYPE @F@[@@       AX,U HA
)@@G@@ X11,1       . BUMP TO NEXT WRD (DATA OR LOC(DATA))   @B@[@@       LXI,UHB
)@@G@@ X11,1       . SET INCREMENT  @C@[@@       TNE,U A1,ZTPLIT   . DOES DATAHC
)@@G@@ FOLLOW?    @E@[@@       J     *IBSTAB,A0  . YES, GO TO TRANSLATE ROUTINHD
)@@G@@E     @C@[@@       LXM,H2 X11,0,X11  . NO, GET DATA ADDR    @B@[@@      HE
)@@G@@ ABSADR X11        . AND ABS IT     @E@[@@       J     *IBSTAB,A0  . GO HF
)@@G@@TO ROUTINE TO TRANSLATE THIS  @B@[@@IB5310 DL    A0,0,X11    . LIBRARY NHG
)@@G@@UMBER @ @[@@       DS    A0,ACTIVE   .    @ @[@@       J     IB5390     HH
)@@G@@ .    @ @[@@IB5320 DL    A0,0,X11    . KEY@ @[@@       DS    A0,ACTIVE+2HI
)@@G@@ .    @ @[@@       J     IB5390      .    @B@[@@IB5330 LA    A0,0,X11   HJ
)@@G@@ . LAST REFERENCE @ @[@@       SA    A0,ACTIVE+4 .    @ @[@@       J    HK
)@@G@@ IB5390      .    @E@[@@IB5340 SX    X11,IBDDTA  . SET UP ADDR OF ACCOUNHL
)@@G@@T NUMBER    @F@[@@       OUTCNV,U 12 *IBDDTA,ACTIVE+5 IB5393 . TRANSLATEHM
)@@G@@ INTO BUFFER@ @[@@       J     IB5390      .    @C@[@@IB5350 SX    X11,IHN
)@@G@@BDDTA  . SAVE QUALIFIER ADDR  @C@[@@       OUTCNV,U 12 *IBDDTA,ACTIVE+7 HO
)@@G@@IB5393 .    @ @[@@       J     IB5390      .    @D@[@@IB5360 LA,U  A3,ACHP
)@@G@@TIVE+9 . POINT CODE AT QUOTA FIELD  @ @[@@       J     IB5371      .    HQ
)@@G@@@C@[@@IB5370 LA,U  A3,ACTIVE+10 . POINT AT USED FIELD @G@[@@IB5371 LA   HR
)@@G@@ A1,(0777700777700) . MASK TO MAKE SURE WE HAVE SIXTH WORDS @C@[@@      HS
)@@G@@ LR,U  R1,2        . THREE WORDS TO DO    @E@[@@IB5372 AND   A1,0,X11   HT
)@@G@@ . ALLOW ONLY SIXTH WORD VALUES     @ @[@@       JNZ   A2,IB5393   .    HU
)@@G@@@ @[@@       LSSL  A0,6        .    @ @[@@       AA,H1 A0,0,X11    .    HV
)@@G@@@ @[@@       LSSL  A0,6        .    @ @[@@       AA,H2 A0,0,*X11   .    HW
)@@G@@@ @[@@       JGD   R1,IB5372   .    @ @[@@       SA    A0,0,A3     .    HX
)@@G@@@ @[@@       J     IB5390      .    @D@[@@IB5380 LA    A1,(0777776777776HY
)@@G@@) . ALLOW ONLY BITS     @A@[@@       LR,U  R1,17       . 18 WORDS @ @[@@HZ
)@@G@@IB5381 AND   A1,0,X11    .    @ @[@@       JNZ   A2,IB5393   .    @ @[@@IA
)@@G@@       LSSL  A0,1        .    @ @[@@       AA,H1 A0,0,X11    .    @ @[@@IB
)@@G@@       LSSL  A0,1        .    @ @[@@       AA,H2 A0,0,*X11   .    @ @[@@IC
)@@G@@       JGD   R1,IB5381   .    @ @[@@       SA    A0,ACTIVE+11 .   @B@[@@ID
)@@G@@IB5390 LA,U  A2,0        . EVERYTHING OKAY@ @[@@IB5391 LMJ   X2,0,X2    IE
)@@G@@ .    @ @[@@       J     IB9100      .    @B@[@@IB5392 LA,XU A2,-1      IF
)@@G@@ . FILE NOT OPEN  @ @[@@       J     IB5391      .    @D@[@@IB5393 LA,XUIG
)@@G@@ A2,-2       . BAD VALUE GOING INTO BUFFER@ @[@@       J     IB5391     IH
)@@G@@ .    @[@[@@/.    @#@[@@. NORMAL EXIT     @#@[@@       INSTRS .   @[@@[[II
)@@G@@.     @G@@[[   IDYADV 53,IB5300,ZMONUL,0       . PUT A FIELD IN THE CURRIJ
)@@G@@ENT RECORD  @G@@[[IB5300  TNZ,U  ONEFIL         . HAS SITE IMPLEMENTED AIK
)@@G@@ SINGLE FILE?     @D@@[[        J      IB9900         . NO, GO SIGNAL ERIL
)@@G@@ROR   @F@@[[        TLD    A3,RITMOD      . YES, GET PARAMS OF CTL VECTOIM
)@@G@@R     @F@@[[        JMRTST ZRANKV,IB9900 ZMOHFI,IB9900   . CHECKMODE ANDIN
)@@G@@ RANK @C@@[[        JNE,U  A5,2 IB9900    . AND ALSO LENGTH @E@@[[      IO
)@@G@@  SX     X11,IBDDTA     . SET GET/PUT FLAG TO PUT     @E@@[[        LMJ IP
)@@G@@   X6,0,X6        . GETCH THE SUBFUNC INDEX     @F@@[[        LA     A2,IQ
)@@G@@A5          . AND PUT IN REG USED FOR TESTS     @B@@[[. CHECK SUBFUNCTIOIR
)@@G@@N VALIDITY, FILE STATUS @E@@[[IB5310  TLE,U  A2,IBFREC+1    . IS FIELD NIS
)@@G@@UMBER IN RANGE?   @A@@[[        TLE,U  A2,1           .     @C@@[[      IT
)@@G@@  J      IB9900         . NO, DOMAIN ERR  @G@@[[        SA     A2,IBDDTAIU
)@@G@@+1    . STASH FIELD INDEX FOR USE BY GET/PUT    @D@@[[        LA     A0,IV
)@@G@@IBDDTA      . RECOVER GET/PUT FLAG  @E@@[[        JZ     A0,IB5320      IW
)@@G@@. IF GET, NOTHING TO CHECK    @G@@[[        LA,S1  A1,ACFLGW      . ELSEIX
)@@G@@ GET ENABLE PORTION OF FLAG WORD    @E@@[[        TOP,U  A1,2           IY
)@@G@@. IS FILE ENABLED FOR WRITE?  @D@@[[        J      IB9900         . NO, IZ
)@@G@@SIGNAL DOMAIN ERR @F@@[[        SA,H2  A1,ACFLGW      . YES, TURN BUFFERJA
)@@G@@ CHANGED FLAG ON  @G@@[[IB5320  LA,U   A1,IBRTBL      . SET TABLE BASE AJB
)@@G@@DDR FOR GET/PUT RTNE    @D@@[[        J      IB7000         . AND GO PERJC
)@@G@@FORM THE OP @E@@[[IB5390  LNA,U  A0,1           . SET STATUS FOR FILE ERJD
)@@G@@ROR   @C@@[[        J      IB8010         . AND GO POST IT  @[@@[[.     JE
)@@G@@@B@@[[. FUNCTIONS TO MANAGE SAVED WORKSPACES--  @[@@[[.     @C@@[[.     JF
)@@G@@  54$Y1  RETURNS NO OF ELEMENTS IN FILE   @F@@[[.       54$Y2  DELETE CUJG
)@@G@@RRENT ELEMENT, RESULT=STATUS FROM PFD$    @D@@[[.       54$Y3,K         JH
)@@G@@      PRIME FOR ELEMENT K     @G@@[[.                             RESULTJI
)@@G@@S: 1=OK; 2=NOT A WS, 3=OUT OF RANGE @E@@[[.                             JJ
)@@G@@IF NOT A WS, PREAMBLE NOT READ@G@@[[.       54$Y4,K               GET PAJK
)@@G@@RAMETER K (SEE TABLE FOR PARAM NOS) @G@@[[.       54$Y5                 JL
)@@G@@RESET REFCOUNT AND DATE FOR CURRENT WORKSP@[@@[[.     @E@@[[. TABLES TO JM
)@@G@@DESCRIBE FIELDS IN ELEMENT PREAMBLE AND TOC     @[@@[[.     @]@@[[IBETBLJN
)@@G@@ .    @B@@[[.    DATA FROM PF$ (FILE TOC) ENTRY--     @F@@[[        DCVTJO
)@@G@@BL ZMOCHR,ZRANKV,12 CNFTOA,CNATOF PFETBL   . ELEMENT  @G@@[[        DCVTJP
)@@G@@BL ZMOCHR,ZRANKV,12 CNFTOA,CNATOF PFETBL+4 . VERSION (LIBNO)@G@@[[      JQ
)@@G@@  DCVTBL ZMOHFI,ZRANKV,3  CNSIXH,CNHSIX PFETBL+3 . FLAGS/TYPE     @G@@[[JR
)@@G@@        DCVTBL ZMOHFI,ZRANKV,2 CNHFIG,CNHFIP PFETBL+7  . DRUM USAGE     JS
)@@G@@@F@@[[        DCVTBL ZMOCHR,ZRANKV,12 CNFTOA,CNATOF DRQUAL   . QUALIFIERJT
)@@G@@@F@@[[        DCVTBL ZMOCHR,ZRANKV,12 CNFTOA,CNATOF DRACNT   . ACCOUNT  JU
)@@G@@@F@@[[        DCVTBL ZMOCHR,ZRANKV,6  CNFTOA,CNATOF DRFLAG   . FLAG WORDJV
)@@G@@@F@@[[        DCVTBL ZMOCHR,ZRANKV,8  CNCHRG,CNCHRP DIRECT+5      . KEY JW
)@@G@@@F@@[[        DCVTBL ZMOCHR,ZRANKV,12 CNCHRG,CNCHRP DIRECT+7 . WSNAME   JX
)@@G@@@G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP DIRECT+10 . CREATIONJY
)@@G@@ TDATE@G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP DLAST    . LASJZ
)@@G@@T REF TDATE$@G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP DSIZE   KA
)@@G@@ . WS CORE USAGE  @G@@[[        DCVTBL ZMODFL,ZRANKV,1  CNDFLG,CNDFLP DIKB
)@@G@@RECT+13 . SAVER'S LIBNO @G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHKC
)@@G@@FIP DMOST    . TDATE$ OF SAVE @F@@[[        DCVTBL ZMOCHR,ZRANKV,6  CNFTKD
)@@G@@OA,CNATOF DRUNID   . RUNID    @G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFKE
)@@G@@IG,CNHFIP DRFTOT   . TOTAL REFS     @G@@[[        DCVTBL ZMOHFI,ZRANKV,2KF
)@@G@@  CNHFIG,CNHFIP DRFSAV   . REFS SINCE SAVE@H@@[[        DCVTBL ZMOHFI,ZRKG
)@@G@@ANKV,2  CNHFIG,CNHFIP DRFRES   . REFS SINCE RESET     @G@@[[        DCVTKH
)@@G@@BL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP DTDRES   . TDATE$ OF RESET@G@@[[      KI
)@@G@@  DCVTBL ZMOHFI,ZRANKV,2  CNHFIG,CNHFIP DMXSIZ   . MAX CORE USAGE @ @@[[KJ
)@@G@@. TDATE$ OF LAST EXEC8 REBOOT @G@@[[        DCVTBL ZMOHFI,ZRANKV,2  CNHFKK
)@@G@@IG,CNHFIP RCTBOO        . IN RUN CTL@E@@[[IBKREC  EQU    ($-IBETBL)/3   KL
)@@G@@. NO OF ENTRIES IN TABLE ABOVE@[@@[[.     @F@@[[   IDYAD 54,IB5400,ZMONUKM
)@@G@@L,0   . DEFINE TABLE ENTRY FOR I-BEAM     @[@@[[.     @F@@[[IB5400  TLD KN
)@@G@@   A3,LFTMOD      . GET PARAMS DESCRIBING CTL VECTOR  @G@@[[        JMRTKO
)@@G@@ST ZRANKV,IB9900 ZMOHFI,IB9900   . CHECK ARG PARAMETERS     @C@@[[      KP
)@@G@@  LMJ    X4,0,X4        . GET SUBFUNCTION @G@@[[        COMJMP A2,IB9900KQ
)@@G@@ 1,IB5410 2,IB5420 3,IB5430 4,IB5440 5,IB5450 . @B@@[[. SUBFUNC 1, GET NKR
)@@G@@O OF ELEMENTS IN FILE   @E@@[[IB5410  JNE,U  A5,1 IB9900    . BE SURE ARKS
)@@G@@G HAD LENGTH 1    @G@@[[        LMJ    X11,LSMNEL     . ASK ELEMENT LODSKT
)@@G@@AV FOR NO OF ELS (IN A0)@D@@[[        J      IB8010         . GO STASH TKU
)@@G@@HE STATUS   @A@@[[. SUBFUNC 2, DROP CURRENT ELEMENT   @D@@[[IB5420  JNE,KV
)@@G@@U  A5,1 IB9900    . REQUIRE ARG LENGTH=1  @F@@[[        LMJ    X11,LSMDRKW
)@@G@@P     . LET LODSAV DROP, STATUS BACK IN A0@D@@[[        J      IB8010   KX
)@@G@@      . GO POST RESULT STATUS @D@@[[. SUBFUNC 3, LOAD BUFFERS WITH DATA KY
)@@G@@FOR ELEMENT K     @D@@[[IB5430  JNE,U  A5,2 IB9900    . CHECK ARGUMENT LKZ
)@@G@@ENGTH @D@@[[        LMJ    X4,0,X4        . GET ELEMENT NUMBER    @F@@[[LA
)@@G@@        LA     A0,A2          . PUT WHERE LODSAV EXPECTS IT TO BE @E@@[[LB
)@@G@@        LMJ    X11,LSMGET     . AND LET LODSAV GET THE STUFF@D@@[[      LC
)@@G@@  J      IB8010         . GO STASH THE STATUS   @C@@[[. SUBFUNC 4, READ LD
)@@G@@DATA FROM THE CURRENT ELEMENT @E@@[[IB5440  JNE,U  A5,2 IB9900    . BE SLE
)@@G@@URE ARG WAS CORRECT     @C@@[[        LMJ    X4,0,X4        . FIELD INDELF
)@@G@@X     @D@@[[        TLE,U  A2,IBKREC      . CHECK WITHIN RANGE    @A@@[[LG
)@@G@@        TLE,U  A2,0           .     @C@@[[        J      IB9900         LH
)@@G@@. IF NOT, DOMAIN  @E@@[[        SZ     IBDDTA         . SET GET/PUT FLAGLI
)@@G@@ TO GET     @E@@[[        SA     A2,IBDDTA+1    . AND POST INDEX TO FIELLJ
)@@G@@D     @E@@[[        LA,U   A1,IBETBL      . SET UP ADDR OF TABLE TO USE LK
)@@G@@@G@@[[        J      IB7000         . AND GO TO GENERALIZED GET/PUT ROUTLL
)@@G@@INE   @E@@[[. SUBFUNC 5, RESET REF CNT AND TDATE$ FOR CURRENT WORKSPACE LM
)@@G@@@F@@[[IB5450  JNE,U  A5,1 IB9900    . CKECH THAT ARG WAS LENGTH ONE     LN
)@@G@@@F@@[[        LMJ    X11,LSMRES     . RESET AND WRITE UPDATED PRAMBLE   LO
)@@G@@@D@@[[        J      IB8010         . GO POST UPDATED STATUS@D@@[[/. GETLP
)@@G@@/PUT INITIALIZATION FOR MASTER CONSOLE ROUTINES @G@@[[.       IBDDTA=0/1LQ
)@@G@@ FOR GET/PUT; IBDDTA+1=FIELD INDEX; A1=TABLE ADDR     @#@@[[        MASTLR
)@@G@@ER .  @C@@[[IB7000  LA     A0,IBDDTA+1    . GET FIELD NUMBER@F@@[[      LS
)@@G@@  MSI,U  A0,3           . TIMES 3 WORDS PER TABLE ENTRY     @G@@[[      LT
)@@G@@  AA     A0,A1          . PLUS TABLE ADDR = ADDR OF THIS ENTRY    @C@@[[LU
)@@G@@        TZ     IBDDTA         . IS THIS A GET?  @D@@[[        J      IB7LV
)@@G@@200         . NO, PUT, GO DO IT     @E@@[[IB7100  LA     A1,0,A0        LW
)@@G@@. GET DESCRIPTOR FROM TABLE   @B@@[[        SA     A1,IBDUMY      . POSTLX
)@@G@@ IT   @B@@[[        LMJ    X11,CNMTOA     . CONVERT   @B@@[[        J   LY
)@@G@@   IB9900         . ERROR     @C@@[[        J      IB9000         . NORMLZ
)@@G@@AL EXIT     @#@@[[. THIS IS A PUT-- @B@@[[IB7200  LMJ    X11,CNATOM     MA
)@@G@@. CONVERT   @F@@[[        J      IB7900         . IF BAD DATA, GO SET STMB
)@@G@@ATUS = -2   @C@@[[        LA,U   A0,0           . ELSE SET ZERO   @D@@[[MC
)@@G@@        J      IB8010         . AND GO POST STATUS    @D@@[[IB7900  LNA,MD
)@@G@@U  A0,2           . SET STATUS BAD DATA   @C@@[[        J      IB8010   ME
)@@G@@      . AND GO POST IT  @#@@[[/. NORMAL EXITS   @[@@[[.     @F@@[[. STATMF
)@@G@@US POSTER-- USE FOR IBEAMS WITH HALFINT SCALAR RESULTS--    @[@@[[.     MG
)@@G@@@#@@[[        INSTRS .  @F@@[[IB8000  LA     A0,A2          . IF STATUS MH
)@@G@@IS IN A2, FIX IT UP     @ @@[[. HERE IF STATUS ALREADY IN A0@E@@[[IB8010MI
)@@G@@  LXI,H1 A0,IBSDSC      . PLUG DUMMY SCALA R DESCR IN @D@@[[        SA  MJ
)@@G@@   A0,IBDUMY      . STASH IT FOR COPY     @D@@[[        J      IB9010   MK
)@@G@@      . AND GO COPY INTO HT WS@[@@[[.     @C_@@@. CREATE I-BEAM RESULT FML
)@@G@@ROM DUMMY DATA AREA     @[@@@@.     @B@@@@IB9000 LA,U  A1,IBDDTA   . DUMMM
)@@G@@MY DATA ADDR@ @@@@       RELADR A1         .    @D@@@@       SA    A1,IBMN
)@@G@@DUMY+1 . TO DATA ADDR FIELD OF DESCR@C@@@@. CREATE I-BEAM RESULT FROM INMO
)@@G@@ITIALIZED DESCR   @C@@@@IB9010 LA,U  A6,IBDUMY   . ADDR OF DUMMY DESCR  MP
)@@G@@@ @@@@       RELADR A6         .    @C@@@@       LMJ   X11,DUPE    . COPMQ
)@@G@@Y DUMMY INTO WS   @ @@@@       J     IB9999      .    @B@@@@       PUSH MR
)@@G@@ A2          . STACK RESULT   @#@@@@. NORMAL EXIT     @ @@@@IB9100 LX   MS
)@@G@@ X11,IBLINK  .    @ @@@@       J     1,X11       .    @#@@@@. ERROR EXITMT
)@@G@@S     @A@@@@IB9900 ERROR YDOMAI,IB9999    .     @ @@@@IB9999 LX    X11,IMU
)@@G@@BLINK  .    @ @@@@       J     0,X11       .    @F@@@@. NOTE-- TABLE GENMV
)@@G@@ERATED UNDER INSTRS LOCN COUNTER BECAUSE ITS    @H@@@@. SYMBOLIC ORIGIN MW
)@@G@@IS SPECIFIED WITH A RES $-N, AND IT NEEDS A POSITIVE NO     @#@@@@IBTABLMX
)@@G@@ TBLGEN .   @#@@@@       VARBLS .   @#@@@@IBLINK RES   1 .  @#@@@@IBMONFMY
)@@G@@ RES   1 .  @#@@@@IBINDX RES   1 .  @#@@@@       VARCON  .  @#@[@@IBDDTAMZ
)@@G@@ RES   2 .  @^@[@@IBFMOD EQUF  $-1,,S2 .  @^@[@@IBFRNK EQUF  $-1,,S3 .  NA
)@@G@@@^@[@@IBFSIZ EQUF $-1,,H2 .   @B@[@@IBLIBN CBLOCK ZTPTMP,ZMODFL,ZRANKV,1NB
)@@G@@ .    @B@[@@IBAKEY CBLOCK ZTPTMP,ZMOCHR,ZRANKV,8 .    @B@[@@IBLREF CBLOCNC
)@@G@@K ZTPTMP,ZMOHFI,ZRANKV,2 .    @B@[@@IBACNT CBLOCK ZTPTMP,ZMOCHR,ZRANKV,1ND
)@@G@@2 .   @B@[@@IBQUAL CBLOCK ZTPTMP,ZMOCHR,ZRANKV,12 .   @B@[@@IBQUOT CBLOCNE
)@@G@@K ZTPTMP,ZMOHFI,ZRANKV,6 .    @B@[@@IBUSED CBLOCK ZTPTMP,ZMOHFI,ZRANKV,6NF
)@@G@@ .    @B@[@@IBPERM CBLOCK ZTPTMP,ZMOHFI,ZRANKV,36 .   @A@[@@IBDUMY CBLOCNG
)@@G@@K  ZTPTMP,0,0,0  0  .   @ @[@@       RES   18          .    @F@@[[IBSDSCNH
)@@G@@  CBLOCK ZTPTMP,ZMOHFI,ZRANKS,0   . SKELETON STATUS DESCRIPT@C@@[[IBDUMYNI
)@@G@@  CBLOCK ZTPTMP,0,0,0  0     . DUMMY DESCR@C@@[[IBDDTA  RES    20       NJ
)@@G@@      . DUMMY DATA AREA @DI@@@/. SUBROUTINES USED TO GET TIMES FROM THE NK
)@@G@@EXECUTIVE   @E@@@@. ***** ENTER HERE FOR PRESENT CPU TIME (ALSO DOES PCTNL
)@@G@@ READ)@[@@@@.     @#@@@@       INSTRS .   @ @[@@CPUNOW* SX   X11,TILINK NM
)@@G@@ .    @G@@[[CPUNOW* ER     TIME$          . IN CASE PCT NOT UP-TO-DATE, NN
)@@G@@GET TIME NOW@E@@[[        SA     A0,A2     . SAVE THE CURRENT TIME OF DANO
)@@G@@Y     @G[@@@       LA    A0,(+PCTRES,RCPCT) . PCT WILL BE READ INTO RUN NP
)@@G@@CTL BLOK    @A@@@@       ER    PCT$        . GET IT   @F@[@@       LA   NQ
)@@G@@ A0,RCPCT+TIMWRD  . PICK UP CHARGE TIME WORD FROM PCT @C@[@@       DSA  NR
)@@G@@ A0,36       . PREPARE TO DIVIDE    @F@@[[CPUNOT* SX     X11,TILINK     NS
)@@G@@. HERE IF PCT AND TIME$ ALREADY DONE@G@@[[I$$ FORM 6,4,4,4,2,7,9   . SPENT
)@@G@@CIAL FORM TO GET 2 EXTERNALS IN 'U' FIELD @F@@[[        I$$ 027,U,A0,0,0NU
)@@G@@,EXEC8,TIMWRD   . LX,U A0,512*EXEC8+TIMWRD@F@@[[        TE,U   A0,27*512NV
)@@G@@+0143 . LEVEL 27 AND USING CORE TIME?     @C@@[[       J     CN0020     NW
)@@G@@ . NO, GO DO NORMALLY   @F@@[[. COMPUTE EXACT VALUE OF LEVEL 27 CORE TIMNX
)@@G@@E FROM CORE QUANTUM USED@D@@[[CN0010  LA     A0,RCPCT+030   . GET CURRENNY
)@@G@@T CORE SIZE @D@@[[        AND,U  A0,07777       . WHICH IS KEPT IN T3   NZ
)@@G@@@G@@[[        MSI,U  A2,5      . CONVERT CURRENT TIME (MSEC) TO CLOCK TIOA
)@@G@@CKS   @E@@[[        ANA    A2,RCPCT+0107  . LESS TIME OF LAST PCT UPDATEOB
)@@G@@@E@@[[        LA,H1  A0,RCPCT+025   . GET CURRENT QUANTUM USED    @C@@[[OC
)@@G@@        TN     A2        . WAS PCT UP-TO-DATE   @G@@[[        AA     A0,OD
)@@G@@A2     . NO, BUMP QUANTUM USED BY TIME SINCE UPDATE   @D@@[[        MSI OE
)@@G@@   A1,A0     . CORE SIZE TIMES TIME USED  @E@@[[        AA     A1,RCPCT+OF
)@@G@@014   . PLUS ACCUMULATED AMOUNT     @F@@[[        SSL    A1,3      . DIVOG
)@@G@@ BY 8 GIVING SAME UNITS AS WORD 0143@F@@[[        J      CN0030         OH
)@@G@@. AND THEN TREAT IT IDENTICALLY     @C@@[[. FOR NON-27 SYSTEMS, OR NOT UOI
)@@G@@SING CORE TIME--- @A@@[[CN0020  LA     A1,RCPCT+TIMWRD     .@#@@[[. CONVOJ
)@@G@@ERT UNITS   @C@@[[CN0030  LA,U   A0,0       . PREPARE TO DIVIDE   @D]@@@OK
)@@G@@       DI,U  A0,5        . CONVERT TO MILLISEC IN A0  @E@@@@       DSA  OL
)@@G@@ A0,36       . MOVE TO A1 FOR MULTIPLICATION    @F@@@@       MF    A1,COOM
)@@G@@NVER   . CONVERT TIME IN MILLISEC TO 60'THS     @E@@@@       DSA   A1,TION
)@@G@@MNOR   . IF NORMALIZATION SPECIFIED, DO IT@C@@@@       J     TI0010     OO
)@@G@@ . GO CONVERT TO 60'THS @B@@@@. ***** ENTER HERE FOR PRESENT TIME OF DAYOP
)@@G@@@ @[@@TIMENW* SX   X11,TILINK  .    @D@[@@       ER    TIME$       . PICOQ
)@@G@@K UP THE TIME OF DAY    @D@@[[TIMENW* ER     TIME$          . GET THE TIOR
)@@G@@ME OF DAY   @G@@[[TIMNOT* SX     X11,TILINK     . HERE IF TIME$ HAS BEENOS
)@@G@@ DONE ALREADY     @C]@@@       DSL   A0,36       . PREPARE FOR DIVISION OT
)@@G@@@G@@@@       DI    A0,(+24*60*60*1000) . REDUCE MOD NO OF MILLISEC IN A OU
)@@G@@DAY   @F@@@@       MF    A1,CONVER   . CONVERT TIME IN MILLISEC TO 60'THOV
)@@G@@S     @G@@@@TI0010 LA,U  A0,02074-36 . SET UP EXPONENT (BINARY PT BETWEEOW
)@@G@@N A1 AND A2)@G@@@@       DFP   A0,A1       . CONVERT 60'THS SECONDS TO FOX
)@@G@@LOATING POINT     @ @@@@       LX    X11,TILINK  .    @A@@@@       J    OY
)@@G@@ 0,X11       . RETURN   @[@@@@.     @#@@@@       VARBLS .   @#@@@@TILINKOZ
)@@G@@ RES   1 .  @D@@@@. CONVERSION FACTOR FOR FIXED POINT MILLISEC TO 60'THSPA
)@@G@@@#@@@@       CONSTS .   @G@@@@SIXES  EQU   (60/20)*/33 . NO OF 60'THS PEPB
)@@G@@R SECOND, BINARY POINT (3,33) @F@@@@MILS   EQU   1000/20     . NO OF MILPC
)@@G@@S PER SEC, BINARY POINT (36,0)@E@@@@CFACT  EQU   SIXES/MILS  . NO OF 60'PD
)@@G@@THS PER MILLISEC, (3,33)@E@@@@CONVER +CFACT*/2         . MOVE BINARY POIPE
)@@G@@NT TO GET (1,35)  @[@@@@.     @A@[@@. SPACE INTO WHICH PCT IS READ--    PF
)@@G@@@[@[@@.     @ @[@@       VARBLS            .    @C@[@@QUAOFF EQU   021  PG
)@@G@@       . OFFSET OF QUALIFIER  @C@[@@ACTOFF EQU   023         . OFFSET OFPH
)@@G@@ ACCOUNT NO @[@[@@.     @D@[@@PCTRES EQU   0144    . NO WDS NEEDED FOR PPI
)@@G@@C T BUFFER  @C@[@@RCPCT*  RES  PCTRES      . PCT IS READ INTO HERE@A@[@@PJ
)@@G@@RCQUAL* EQU  RCPCT+QUAOFF     .     @A@[@@RCACNT* EQU  RCPCT+ACTOFF     PK
)@@G@@.     @[@[@@.     @[@[@@.     @ @@[[/. CALCULATE LIBRARY NUMBER   @C@@[[PL
)@@G@@.  A0,A1=QUALIFIER, A2,A3=ACCOUNT NO, A4=RUNID  @G@@[[. PARAMATERS WHICHPM
)@@G@@ DETERMINE WHICH OF THE ABOVE ARE USED TO GET LIBNO   @A@@[[. ARE DEFINEPN
)@@G@@D IN ELEMENT SITEPAR--- @E@@[[.      RESULT IS INTEGER IN A1 (TO BE TREAPO
)@@G@@TED AS POSITIVE)  @[@@[[.     @ @@[[       INSTRS            .    @E@@[[PP
)@@G@@LIBNOC* TNZ,U LIBNOQ     . IS THIS SITE USING QUALIFIER?    @B@@[[      PQ
)@@G@@ DSL   A0,72       . NO, CLEAR IT   @D@@[[       TNZ,U LIBNOA      . IS PR
)@@G@@ACCOUNT NR TO BE USED   @B@@[[       DSL   A2,72       . NO, CLEAR IT   PS
)@@G@@@C@@[[       TNZ,U LIBNOR      . HOW ABOUT RUNID?     @E@@[[       SSL  PT
)@@G@@ A4,36       . CLEAR RUNID IF NO USE FOR IT     @F@@[[       DSC   A2,36PU
)@@G@@       . ROTATE ACCOUNT TO MIX THINGS UP A BIT  @B@@[[       SSC   A4,14PV
)@@G@@       . AND RUNID ALSO @D@@[[       DA    A0,A2       . ACCOUNT+ROTATEDPW
)@@G@@ QUALIFIER  @A@@[[       AA    A1,A4       . AND RUNID@D@@[[       MSI  PX
)@@G@@ A0,A1       . SQUEEZE DOWN TO 1 WORD     @G@@[[       AND   A0,(+1*/29-PY
)@@G@@1)    . BE SURE ITS + AND NOT .GT. 10 DIGITS    @C@@[[       TLE,U A1,10PZ
)@@G@@00     . WOULD IT BE PUBLIC?  @E@@[[       AA,U  A1,1000     . YES, DON'QA
)@@G@@T ALLOW THAT TO HAPPEN  @D@@[[       J     0,X11       . ADN QUIT WHILE QB
)@@G@@WE'RE AHEAD @[@@[[.     @G@@[[. EDIT ROUTINE FOR I-BEAMS WITH CHAR RITE QC
)@@G@@ARGS WHICH ARE TO BE CONVERTED@E@@[[. TO FIELDATA.  USED BY PRTCN$, CSF$QD
)@@G@@ AND LIBNUMBER I-BEAMS  @E@@[[.      AT ENTRY, A0=(+1,BUFADR), AT EXIT AQE
)@@G@@0=IMAGE LENGTH    @[@@[[.     @^@@[[IBEDTF SX    X11,IELINK @C@@[[      QF
)@@G@@ SA    A0,IEBPTR   . SAVE POINTER TO IMAGE@D@@[[       DL    A3,LFTMOD  QG
)@@G@@ . GET RITEART MODE AND RANK  @A@@[[       LA    A5,LFTSIZ   . AND SIZE QH
)@@G@@@G@@[[       JMRTST ZRANKV,IB9900 ZMOCHR,IB9900    . BE SURE ITS A CHAR QI
)@@G@@VECT  @C@@[[       TG,U  A5,240      . IS IMAGE TOO LONG?   @C@@[[      QJ
)@@G@@ J     IB9900      . YES, DOMAIN ERROR    @E@@[[       DL    A1,WRFCTL  QK
)@@G@@ . GET INITIAL TEXT FETCH POINTERS  @B@@[[       LXM,U A2,,X5      . GETQL
)@@G@@ TEXT ADDR  @B@@[[       LR    R1,A5       . AND TEXT LENGTH@D@@[[      QM
)@@G@@ LMJ   X11,WREDIB  . EDIT WITH FORCED BLANK FILL@ @@[[       ANA   A0,IEQN
)@@G@@BPTR   .    @ @@[[       LX    X11,IELINK  .    @ @@[[       J     0,X11QO
)@@G@@       .    @ @@[[       VARBLS            .    @ @@[[IEBPTR RES   1    QP
)@@G@@       .    @ @@[[IELINK EQUF  $,,H1       .    @ @@[[       RES   1    QQ
)@@G@@       .    @G@@[[/. CONVERSION RTNES USED BY MASTER CONSOLE RTNES TO COQR
)@@G@@NVERT BETWEEN     @C@@[[. MACHINE FORMATTED DATA AND APL FORMATTED DATA QS
)@@G@@@G@@[[.     THESE ROUTINES EXPECT A0 TO POINT TO A 3-WORD TABLE ENTRY OFQT
)@@G@@ FORM:@D@@[[.        +TYPE,MODE,RANK,SIZE      DUMMY DESCRIPTOR WD@G@@[[QU
)@@G@@.        +MDATA,ADATA              ADDRESSES OF MACHINE/APL DATA AREAS  QV
)@@G@@@E@@[[.        +MGET,MPUT                MACHINE FMT GET/PUT RTNES@[@@[[QW
)@@G@@.     @#@@[[        MASTER .  @^@@[[. MACHINE  TO APL -     @A@@[[CNMTOAQX
)@@G@@* SX     X11,CNLINK     .     @A@@[[. SET STASH LINKAGE FOR INTERNAL FMTQY
)@@G@@@D@@[[CN0100  LA,S3  A1,0,A0        . RANK FROM TABLE ENTRY @C@@[[      QZ
)@@G@@  LX,U   X2,PUTSCL      . ASSUME SCALAR   @B@@[[        TE,U   A1,ZRANKSRA
)@@G@@      . IS IT?    @E@@[[        LX,U   X2,PUTARY      . NO, USE ARRAY STRB
)@@G@@ASH RTNE    @F@@[[        AX,S2  X2,0,A0        . ADD MODE GIVING STASH RC
)@@G@@LINK ADDR   @C@@[[        LX,H2  X3,1,A0        . SET STASH ADDR  @F@@[[RD
)@@G@@        LXI,U  X3,1           . AND INCREMENT DEFAULTED TO ONE    @E@@[[RE
)@@G@@        LA,S2  A1,0,A0        . GET MODE FROM TABLE ENTRY   @D@@[[      RF
)@@G@@  TNE,U  A1,ZMODFL      . WILL RESULT BE DFLOAT @D@@[[        LXI,U  X3,RG
)@@G@@2           . YES, CHANGE STASH INCR@D@@[[        LA,H2  A13,0,A0       RH
)@@G@@. SET COMPONENT COUNTER @D@@[[. SET FETCH LINKAGE FOR EXTERNAL (I.E. EXERI
)@@G@@C-8) FMT    @F@@[[CN0110  LX,H1  X4,2,A0        . COROUTINE ADDR FROM TARJ
)@@G@@BLE ENTRY   @C@@[[        LX,H1  X5,1,A0        . DATA ADDR,TOO   @E@@[[RK
)@@G@@        LXI,U  X5,1           . ALWAYS ASSUME FETCH STEP = 1@D@@[[      RL
)@@G@@  J      CN0300         . GO DO THE MOVEMENT    @[@@[[.     @G@@[[. APL RM
)@@G@@TO INTERNAL. NOTE: WE ASSUME THAT APL FMT HAS BEEN INITIALIZED    @D@@[[RN
)@@G@@.                  USING PIKLFT AND FETCHREGS ARE SET @[@@[[.     @A@@[[RO
)@@G@@CNATOM  SX     X11,CNLINK     .     @D@@[[. CHECK THAT APL VAR HAS CORRERP
)@@G@@CT MODE, RANK, LENGTH   @E@@[[CN0200  LA,S2  A1,0,A0        . GET MODE FRQ
)@@G@@ROM TABLE ENTRY   @C@@[[        JNE    A1,LFTMOD CN0900    . CHECK MODE RR
)@@G@@@A@@[[        LA,S3  A1,0,A0             .@C@@[[        JNE    A1,LFTRNKRS
)@@G@@ CN0900    . CHECK RANK @A@@[[        LA,H2  A1,0,A0             .@C@@[[RT
)@@G@@        JNE    A1,LFTSIZ CN0900    . CHECK SIZE @A@@[[. INITIALIZE MACHIRU
)@@G@@NE FMT STASH RTNES@E@@[[CN0210  LX,H2  X2,2,A0        . STASH RTNE ADDR RV
)@@G@@FROM TABLE  @C@@[[        LX,H1  X3,1,A0        . DATA ADDR ALSO  @C@@[[RW
)@@G@@        LXI,U  X3,1           . SET DUMMY INCR=1@E@@[[        LA,H2  A13RX
)@@G@@,0,A0       . SET LOOP CNT FROM PACKET    @D@@[[                        RY
)@@G@@      . FALL THRU TO MOVE RTNE@D@@[[. COMMON MOVE LOOP FOR XLATION IN BORZ
)@@G@@TH DIRECTIONS     @C@@[[CN0300  JNGD   A13,CN0400     . OUT WHEN DONE   SA
)@@G@@@F@@[[        LMJ    X4,0,X4        . GET (CAUTION- MIGHT CHANGE REGS)  SB
)@@G@@@A@@[[        LMJ    X2,0,X2        . PUT @C@@[[        J      CN0300   SC
)@@G@@      . BACK FOR MORE   @[@@[[.     @A@@[[CN0400  LX     X11,CNLINK     SD
)@@G@@.     @A@@[[        J      1,X11          .     @[@@[[.     @A@@[[CN0900SE
)@@G@@  LX     X11,CNLINK     .     @A@@[[        J      0,X11          .     SF
)@@G@@@[@@[[.     @A@@[[CNLINK  EQUF   $,,H1               .@A@@[[CNCHCT  EQUFSG
)@@G@@   $,,H2          .     @A@@[[        RES    1                   .@D@@[[SH
)@@G@@/. SPECIAL CO-ROUTINES FOR USE BY THE ABOVE CONVERTER @[@@[[.     @#@@[[SI
)@@G@@        MASTER .  @^@@[[. FIELDATA TO APL -     @G@@[[CNFTOA  LA     A0,SJ
)@@G@@X5          . MOVE SOURCE ADDR WHERE TRANFN EXPECTS IT@D@@[[        AA,USK
)@@G@@   A13,1          . FUDGE LOOP CNT BACK UP@E@@[[        LR     R1,A13   SL
)@@G@@      . AND PUT WHERE IT BELONGS    @E@@[[        LX     X11,CNLINK     SM
)@@G@@. SET ORIGINAL CALL ADDR UP   @G@@[[        J      TRANFN         . JUMPSN
)@@G@@ AND LET CALLED RTNE RETURN TO USER @G@@[[. APL TO FIELDATA.  A NOISE FESO
)@@G@@TCH OF THE 1ST APLCHAR HAS BEEN DONE--    @G@@[[. WE GET HERE ON THE FIRSP
)@@G@@ST STASH ATTEMPT, CHENGE THE STRING OURSELVES,  @G@@[[. AND THEN RESTORESQ
)@@G@@ THE REGS SO THE MAIN LOOP CONTINUES THINKING IT DID I@E@@[[CNATOF  SA  SR
)@@G@@   A13,CNCHCT     . SAVE CURRENT LOOP CONTROL   @F@@[[        AA,U   A13SS
)@@G@@,1          . ADJUST JGD BACK TO TRUE CHAR CNT  @G@@[[        OUTCNB A13ST
)@@G@@ *X5,IBDDTA+5 . USE SCRATCH AREA TO AVOID FILL OVERRUN@D@@[[. NOW SET UPSU
)@@G@@ TO MOVE SIXTH WORDS AS PER ORIGINAL LOOP @D@@[[        LA     A13,CNCHCSV
)@@G@@T     . RESTORE LOOP CONTROL  @G@@[[        LXM,U  X5,IBDDTA+5    . SET SW
)@@G@@FETCH ADDR TO PLACE CONVERTED INTO  @G@@[[        LMJ    X4,CNSIXH      SX
)@@G@@. GET 1ST CONVERTED CHAR AS IF MAINLINE DI@G@@[[        J      CNHSIX   SY
)@@G@@      . THEN STASH AND RETURN TO PRIMARY LOOP   @D@@[[. 6TH WD PACKED INSZ
)@@G@@TEGERS TO HALFINTS AND VICE-VERSA   @#@@[[P       PROC   .  @A@@[[GET6* TA
)@@G@@  NAME   027  . OPCODE= LX    @A@@[[PUT6*   NAME   06   . OPCODE= SX    TB
)@@G@@@#@@[[        UNLI$T .  @D@@[[        I$  P(0,0),P(0,1),A2,P(1,1)+1,P(1,TC
)@@G@@*1)*2,0 .   @A@@[[        LMJ    P(1,1),0,P(1,1)     .@#@@[[        LI$TTD
)@@G@@   .  @]@@[[        END @[@@[[.     @ @@[[CNSIXH  . SIXTH TO HALFINT    TE
)@@G@@@A@@[[        GET6,S1 X4            .     @A@@[[        GET6,S2 X4      TF
)@@G@@      .     @A@@[[        GET6,S3 X4            .     @A@@[[        GET6TG
)@@G@@,S4 X4            .     @A@@[[        GET6,S5 X4            .     @A@@[[TH
)@@G@@        GET6,S6 *X4           .     @A@@[[        J      CNSIXH         TI
)@@G@@.     @ @@[[. HALFWORD TO PACKED SIXTHS   @]@@[[CNHSIX .    @A@@[[      TJ
)@@G@@  PUT6,S1 X2            .     @A@@[[        PUT6,S2 X2            .     TK
)@@G@@@A@@[[        PUT6,S3 X2            .     @A@@[[        PUT6,S4 X2      TL
)@@G@@      .     @A@@[[        PUT6,S5 X2            .     @A@@[[        PUT6TM
)@@G@@,S6 *X2           .     @A@@[[        J      CNHSIX         .     @C@@[[TN
)@@G@@. BIT PACKED TO HALFINT VECTOR AND VICE VERSA   @[@@[[.     @#@@[[P     TO
)@@G@@  PROC   .  @A@@[[BLSHFT* NAME   0              .     @A@@[[BRSHFT* NAMETP
)@@G@@   1              .     @#@@[[        UNLI$T .  @ @@[[ DO P(0,0)=0 , LA,TQ
)@@G@@U A2,0 .    @A@@[[ DO P(0,0)=0 , LDSL A2,1      .     @A@@[[ DO P(0,0)=1TR
)@@G@@ , DSL  A2,1      .     @A@@[[ DO P(0,0)=1 , LSSC A3,2      .     @A@@[[TS
)@@G@@        LMJ    P(1,1),0,P(1,1)     .@#@@[[        LI$T   .  @#@@[[      TT
)@@G@@  END    .  @[@@[[.     @D@@[[CNBITH  LA     A3,0,*X5  . GET FULL WD TO TU
)@@G@@BE UNPACKED @G@@[[  DO 36 , BLSHFT X4      . LEFT SHIFT 1 BIT AT A CRACKTV
)@@G@@ FROM A3 TO A2    @D@@[[        J      CNBITH    . GO BACK FOR NEXT FULLTW
)@@G@@WORD  @ @@[[. HALFINT VECT TO BIT PACKED  @]@@[[CNHBIT .    @E@@[[  DO 3TX
)@@G@@5 , BRSHFT X2 . SHIFT 35 BIT'S WORTH FROM A2 TO A3    @D@@[[        DSL TY
)@@G@@   A2,1      . MOVE OVER THE LAST BIT     @C@@[[        LSSC   A3,1     TZ
)@@G@@      . AND ALIGN IT    @B@@[[       SA      A3,0,*X3  . STASH FULL WORDUA
)@@G@@@ @@[[       LMJ     X2,0,X2   .    @ @@[[       J       CNHBIT    .    UB
)@@G@@@#G@@@       END  .     ___E REGS SO THE MAIN LOOP CONTINUES THINKING ITUC
)@@G@@ DID I@E@@[[CNATOF  SA     A13,CNCHCT     . SAVE CURRENT LOOP CONTROL   UD
)@@G@@@F@@[[        AA,U   A13,1          . ADJUST JGD*[S@@@*SDFF*@[@@@@.     UE
)@@G@@@G@@@@. ****************************************************************UF
)@@G@@***** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE UG
)@@G@@DECKS     * @G@@@@.                                                     UH
)@@G@@                * @^@@@@       AXR$         .   @C@@@@       CONFIG  .  UI
)@@G@@  DEFINE ASSEMBLY PARAMETERS  @G@@@@       APSYMB.     DEFINE APL SYMBOLUJ
)@@G@@ SET                              * @G@@@@       WSDEF.      DEFINE WORKUK
)@@G@@SPACE                                   * @G@@@@WORKSP INFO  2 20.      UL
)@@G@@SET ASIDE THE SPACE                           * @G@@@@       RUNCTL.    UM
)@@G@@ DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO UN
)@@G@@ 2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@      UO
)@@G@@ CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@UP
)@@G@@.                                                                     * UQ
)@@G@@@G@@@@. END OF STANDARD PROC BLOCK                                      UR
)@@G@@    * @G@@@@. **********************************************************US
)@@G@@*********** @[@@@@.     @[@@@@.     @C@@@@       SKMARX            . DEFUT
)@@G@@INE STACK MARKERS @D@@@@       PSUDOP            . DEFINE PSEUDO MACHINEUU
)@@G@@ CODE @D@@@@       STATEV            . DEFINE STATEVECTOR SYMBOLS @[@@@@UV
)@@G@@.     @[@@@@.     @B@[@@.  DEFINE STARTING AND ENDING OPERATORS   @G@@[[UW
)@@G@@. THE START AND END VALUES BELOW ARE USED TO SET LIMITS ON THE SIZE OF  UX
)@@G@@@G@@[[. THE GENERATED TABLES AND TO SET OFFSETS FOR INDEXING INTO THESE UY
)@@G@@TABLES@[@@[[.     @^[@@@ASTART(1) EQU AMONST .  @^@@@@AEND(1) EQU   AMONUZ
)@@G@@EN .  @^@@@@ASTART(2) EQU ADYAST .  @^@@@@AEND(2)  EQU  ADYAEN .  @[@@@@VA
)@@G@@.     @[@@@@.     @[@@@@.     @D@@@@CTABLE FORM 6,6,6,18     . USED FOR VB
)@@G@@CODETABLE POINTERS@[@@@@.     @F@@@@.  GENERATE PRIMARY OPTABLE--- ONE WVC
)@@G@@ORD PER OP, INDEXED BY OPCODE @C@@@@.      TABLE FORMAT: S1=0/1 FOR SCALVD
)@@G@@AR/MIXED    @G@@@@.                   S2=REDUCE FLAGS; 1=OK TO REDUCE,2=VE
)@@G@@IDENTITY EXISTS   @F@@@@.                    S3 =0 ALWAYS, TABLE MAY BE VF
)@@G@@INDIRECTED INTO   @F@@@@.                    H2=ADDR OF SPECIAL ROUTINE VG
)@@G@@,IF MIXED, OR     @F@@@@.                       ADDR OF SECONDARY TABLE,VH
)@@G@@ IF SCALAR, OR--  @D@@@@.                       0 IF OP NOT YET IMPLEMENVI
)@@G@@TED   @[@@@@.     @#@@@@M      PROC .     @G@@@@. NOTE: SCALAR/MIXED FLAVJ
)@@G@@G, AND TABLE ADDR ARE SET BY 'MONDEF' PROC--    @#@@@@MONTBL* NAME 1 .  VK
)@@G@@@#@@@@DYATBL* NAME 2 .  @^@@@@I      EQU   M(0,0) .   @#@@@@Z      PROC VL
)@@G@@ .    @#@@@@ZIP*   NAME  .    @^@@@@ RES  ORG+K-1-$     .   @D@@@@      VM
)@@G@@ CTABLE MO$SCA(K,I),MO$RED(K,I),0,MO$DFT(K,I) . @]@@@@       END .@A@@@@VN
)@@G@@NMOPS  EQU   AEND(I)-ASTART(I)+1 .  @#@@@@ORG    EQU   $ .  @ @@@@*     VO
)@@G@@ EQU   $-ASTART(I) .    @D@@@@       +0    . FILL TABLE WITH 'UNIMPLEMENVP
)@@G@@TED' FLAG   @#@@@@       UNLIST .   @#@@@@ DO NMOPS-1 , +0 .@C@@@@K DO NVQ
)@@G@@MOPS , ZIP . FILL IN THE TABLE ENTRIES    @C@@@@       RES   ORG+NMOPS-$VR
)@@G@@      . RESTORE LOCN CTR@#@@@@       LIST .     @]@@@@       END .@[@@@@VS
)@@G@@.     @D@@@@. GENERATE SECONDARY TABLES FOR MONADIC OPERATORS---  @F@@@@VT
)@@G@@.  ONE TABLE PER IMPLEMENTED SCALAR MONAD, 8 ENTRIES PER TABLE.   @C@@@@VU
)@@G@@.     INDEX INTO THIS TABLE IS MODE OF ARGUMENT.@E@@@@.     TABLE FORMATVV
)@@G@@:  S1= 00-07   MODE OF RESULT OF THIS OP  @G@@@@.                       VW
)@@G@@ 40    OPERATION ILLEGAL FOR THIS OPERAND MODE  @A@@@@.                 VX
)@@G@@   S2,S3  UNUSED  @F@@@@.                    H2= ADDR OF CODE TABLE, IF VY
)@@G@@LEGAL OPERATION   @G@@@@.                        0 IF OP HAS NO EFFECT OVZ
)@@G@@N OPERANDS OF THIS MODE @[@@@@.     @#@@@@M      PROC .     @#@@@@MONDEFWA
)@@G@@* NAME 1 .  @#@@@@DYADEF* NAME 2 .  @#@@@@       UNLI$T  .  @^@@@@I     WB
)@@G@@ EQU   M(0,0) .   @#@@@@Z      PROC  .    @#@@@@ZAP*   NAME    .  @ @@@@WC
)@@G@@  RES ORG+M(K+1,1)-$     .    @A@@@@   CTABLE  M(K+1,2),0,0,M(K+1,3) .  WD
)@@G@@@#@@@@       END    .   @#@@@@ORG    EQU   $ .  @C@@@@. GENERATE FLAGS TWE
)@@G@@O PLUG INTO PRIMARY TABLE--   @E@@@@MINDEX EQU   M(1,1)-ASTART(I)+1    .WF
)@@G@@ INDEX FOR THIS OPCODE  @E@@@@MO$SCA*(MINDEX,I) EQU M(1,*1) . SET FLAG OWG
)@@G@@N FOR SCALAR OPS  @G@@@@ DO 1-M(1,*1) ,MO$DFT*(MINDEX,I) EQU M(2,1) . SEWH
)@@G@@T EXTERN ADDR FOR MIXED @G@@@@ DO 1-M(1,*1) , GO MD$030 . AND IF MIXED OWI
)@@G@@P, SKIP GEN OF 2NDARY TABLE   @F@@@@MO$DFT*(MINDEX,I) EQU ORG . FOR SCALWJ
)@@G@@ARS, POST ADDR OF 2NDARY TBL  @B@@@@NLAST  EQU   M-1    . INDEX OF LAST WK
)@@G@@FIELD @G@@@@ DO M(0,0)=2 , DO M(NLAST)=1 ,MO$RED*(MINDEX,I) EQU 1+2*M(NLWL
)@@G@@AST,*1) .   @A@@@@. TABULATE REDUCTION IDENTITY ENTRY @G@@@@ DO MO$RED(MWM
)@@G@@INDEX,I)>0 , +M(NLAST,1) . IF REDUCTION OK, MAKE IDENTITY   @G@@@@ DO MOWN
)@@G@@$RED(MINDEX,I)=0 , DO 2 , +040,0,0,0,0,0 . ELSE ILLEGAL OP FILL   @C@@@@WO
)@@G@@. INITIALIZE REST OF TABLE TO ILLEGAL OP VALUE  @A@@@@ DO ZMOMAX-1 , +04WP
)@@G@@0,0,0,0,0,0  .    @E@@@@. NOW OVERLAY LOCNS SPECIFIED BY BRANCH VALUES IWQ
)@@G@@N ARG LIST  @E@@@@NARGS  EQU   M-2-(MO$RED(MINDEX,I)>0) . NO OF POINTER WR
)@@G@@FIELDS@D@@@@K DO NARGS  , ZAP   . FOR EACH ARG, GENERATE AN ENTRY @D@@@@WS
)@@G@@      RES ORG+ZMOMAX+1-$ . SET LOC CTR TO END OF TBL  @#@@@@MD$030* NAMEWT
)@@G@@ .    @^@@@@      LI$T          .   @^@@@@      END           .   @[@@@@WU
)@@G@@.     @B@@@@. PROCS TO TEST/CONVERT LOGICAL VALUES    @[@@@@.     @E@@@@WV
)@@G@@P      PROC  . JUMP IF DFLOAT NOT LOGICAL (CONVERT IF IT IS)@ @@@@JDNLGLWW
)@@G@@* NAME . REG,TARGET,XREG@ @@@@       UNLI$T            .    @E@@@@ DO P(WX
)@@G@@1,1)=A1 , LMJ A0,DFLGA1 . ROUTINE IS IN ELEMENT MOCROP@A@@@@ DO P(1,1)=AWY
)@@G@@4 , LMJ A0,DFLGA4 .     @A@@@@       J     P(1,2),P(1,3)    .     @#@@@@WZ
)@@G@@       LI$T  .    @#@@@@       END   .    @[@@@@.     @B@@@@P      PROC XA
)@@G@@ . JUMP IF HALFINT NOT LOGICAL@ @@@@JHNLGL* NAME . REG,TARGET,XREG@ @@@@XB
)@@G@@       UNLI$T            .    @B@@@@       TE,U  P(1,1),1    . ONE IS LEXC
)@@G@@GAL   @F@@@@       JNZ   P(1,1),P(1,2),P(1,3)  . BUT IF NOT 1, MUST BE ZXD
)@@G@@ERO   @E@@@@       LMA   P(1,1),P(1,1)    . WATCH OUT FOR NEGATIVE ZEROSXE
)@@G@@@#@@@@       LI$T  .    @#@@@@       END   .    @[@@@@.     @^@@@@/.  INXF
)@@G@@TERPRET THE CODE  @G@@@@.     THIS ROUTINE ACTUALLY EXECUTES A STATEMENTXG
)@@G@@ .  IT CAN BE CALLED TO @G@@@@.     START A NEW STMNT, OR TO CONTINUE INXH
)@@G@@ AN OLD ONE AFTER RETURN FROM @G@@@@.     A FUNC CALL OR EVALUATED INPUTXI
)@@G@@.  IT EXPECTS X8 AND X9 TO POINT AT @G@@@@.     THE NEXT OP TO BE EXECUTXJ
)@@G@@ED; NO OTHER INITIALIZATION IS NEEDED     @[@@@@.     @B@@@@.           XK
)@@G@@ EXIT PARAMETERS ARE IN A0:   @A@@@@.              0 NORMAL TERMINATION XL
)@@G@@@D@@@@.              1 GO TO NUMBERED STATEMENT (IN A1,A2)  @E@@@@.     XM
)@@G@@         2 EXECUTE USER DEFINED FUNC (ADDR IN A1)     @B@@@@.           XN
)@@G@@   3 ACCEPT EVALUATED INPUT   @C@@@@.              4 UNQUOTE (DESCRIPTORXO
)@@G@@ ON STACK)  @G@@@@.             5 SUSPEND (BREAK ON OUTPUT OR O-U-T ON QXP
)@@G@@UOTEQUAD INPUT)   @F@@@@.             6 ESCAPE/SUSPEND/CLEAR SV (I.E.NILXQ
)@@G@@ADIC RIGHT ARROW) @[@@@@.     @#@@@@       INSTRS .   @ @@@@INTERP* SX  XR
)@@G@@ X11,INLINK  .    @C@@@@       SZ    STOFLG      . TURN OFF STORE FLAG  XS
)@@G@@@B@@@@IN0010 LA    A0,STOFLG   . OLD STORE FLAG @ @@@@       SZ    RITDSXT
)@@G@@C      .    @F@@@@       SZ    LFTDSC      .  MAKE SURE  DES STORE  LOCAXU
)@@G@@TIONS ARE  0@A@@@@       LSSL  A0,18       . ALIGN IT @B@@@@       SA   XV
)@@G@@ A0,STOFLG   . POST NEW FLAG  @B@@@@IN0020 LMJ   X8,0,X8     . GET NEXT XW
)@@G@@OPCODE@D@@@@       DSL   A0,15       . ISOLATE PRIMARY OP CODE    @E@@@@XX
)@@G@@       COMJMP A0 PSONUL,IN0010 PSOLOD,IN0040 PSOLDV,IN0060 ;@G@@@@      XY
)@@G@@                  PSOFUN,IN0100 PSOXQP,IN1000 PSOUTR,IN3000 .     @#@@@@XZ
)@@G@@. OPERAND LOAD    @C@@@@IN0040 SSL   A1,21       . ALIGN DESCRIPTOR ADDRYA
)@@G@@@B@@@@       PUSH  A1 IN9000   . PUT IN STACK   @B@@@@       J     IN001YB
)@@G@@0      . NEXT INSTR     @E@@@@. OPERAND LOAD WITH VERIFICATION (FOR NAMEYC
)@@G@@D VARIABLES ONLY) @B@@@@IN0060 SSL   A1,21   . ALIGN NAMEBLOK ADDR@^@@@@YD
)@@G@@       LA    A0,A1  .   @B@@@@       ABSADR A0    . GET BLOCK ADDR ABS  YE
)@@G@@@E@@@@       LA,H2 A0,1,A0 . PICK UP DESCR ADDR FROM NAMEBLOK     @C@@@@YF
)@@G@@       JZ    A0,IN0095   . IF NONE, VALUE ERROR @C@@@@       ABSADR A0  YG
)@@G@@       . MAKE DESCR ADDR ABS  @D@@@@       LA,S2 A0,0,A0     . GET MODE YH
)@@G@@FIELD FROM DESCR  @D@@@@       JE,U  A0,ZMOUNK IN0095 . IF UNKNOWN, VAL YI
)@@G@@ERR   @C@@@@       JE,U  A0,ZMONUL IN0095 . DITTO IF NULL   @D@@@@      YJ
)@@G@@ PUSH  A1 IN0097   . OK, PUT NAMEBLOK INTO STACK@B@@@@       J     IN001YK
)@@G@@0      . GET NEXT INSTR @[@@@@.     @A@@@@IN0095 ERROR YVALUE,IN9900    YL
)@@G@@.     @A@@@@IN0097 ERROR YWSFUL,IN9900    .     @A@@@@/.  FUNCTION REFERYM
)@@G@@ENCING OPERATIONS @[@@@@.     @C@@@@IN0100 DSL   A1,36-3     . ALIGN QUAYN
)@@G@@LIFIER IN A1@E@@@@       SSL   A2,36-12    . AND RELADR OF NAMEBLOK IN AYO
)@@G@@2     @E@@@@       COMJMP A1 PSQIFN,IN0110 PSQXFN,IN0120 PSQVSV,IN0200 ;YP
)@@G@@@G@@@@                        PSQVTV,IN0300 PSQSSV,IN0400 PSQSTV,IN0500 YQ
)@@G@@.     @ @@@@. INDEX AND EXECUTE FUNCTION  @D@@@@IN0110 SA    A2,INTEMP  YR
)@@G@@ . TENP SAVE NAMEBLOK ADDR    @F@@@@       LMJ   X11,SUBTMP  . CREATE A YS
)@@G@@TEMPORARY BY SUBSCRIPTING     @ @@@@       J     IN9900      .    @C@@@@YT
)@@G@@       LA    A2,INTEMP   . RECOVER FUNC POINTRE @#@@@@. EXECUTE FUNCTIONYU
)@@G@@@C@@@@IN0120 LA    A1,A2       . POSITION ADDR OF FUNC@B@@@@       LA,U YV
)@@G@@ A0,2        . SET EXIT FLAG  @ @@@@       LX    X11,INLINK  .    @E@@@@YW
)@@G@@       J     1,X11       . LET SUPERVIXOR HANDLE RECURSION  @ @@@@. TRACYX
)@@G@@E AND STOPVECTOR STUFF  @E@@@@IN0200 LMJ   X11,GETSTP  . GET CURRENT VALYY
)@@G@@UE OF STOPVECTOR  @ @@@@       J     IN9900      .    @ @@@@       J    YZ
)@@G@@ IN9500      .    @E@@@@IN0300 LMJ   X11,GETTRC  . GET CURRENT VALUE OF ZA
)@@G@@TRACEVECTOR @ @@@@       J     IN9900      .    @ @@@@       J     IN950ZB
)@@G@@0      .    @B@@@@IN0400 LMJ   X11,SETSTP  . SET STOPVECTOR @ @@@@      ZC
)@@G@@ J     IN9900      .    @ @@@@       J     IN0510      .    @B@@@@IN0500ZD
)@@G@@ LMJ   X11,SETTRC  . SET TRACEVECTOR@ @@@@       J     IN9900      .    ZE
)@@G@@@C@@@@IN0510 SX,H2 X11,STOFLG  . TURN ON STORE FLAG   @B@@@@       J    ZF
)@@G@@ IN9500      . AND GO CLEAN UP@^@@@@/. EXECUTE PRIMITIVES   @B@@@@IN1000ZG
)@@G@@ DSL   A1,33       . QUALIFIER IN A1@A@@@@       DSL   A2,33       . S3 ZH
)@@G@@IN A2 @A@@@@       SSL   A3,27       . Q4 IN A3 @E@@@@       COMJMP A1 PZI
)@@G@@SQNIL,IN1100 PSQMON,IN2000 PSQXDY,IN4000 ;@B@@@@             PSQDYA,IN50ZJ
)@@G@@00 PSQRED,IN3500 .@[@@@@.     @ @@@@. EXECUTE PRIMITIVE NILAD     @[@@@@ZK
)@@G@@.     @E@@@@IN1100 COMJMP A3 PSNNOP,IN9500 PSNXTS,IN1120 PSNBOS,IN1130 ;ZL
)@@G@@@G@@@@             PSNEVI,IN1200 PSNCHI,IN1300 PSNEVO,IN1400 PSNCHO,IN15ZM
)@@G@@00  ; @G@@@@             PSNRBR,IN1140 PSNELX,IN1150 PSNESC,IN1160 PSNXNZN
)@@G@@O,IN4100 .  @^@@@@. GO TO NEXT STATEMENT  @ @@@@IN1120 LX    X11,INLINK ZO
)@@G@@.     @E@@@@       LA,U  A0,0        . SET END OF STMNT RETURN FLAG     ZP
)@@G@@@B@@@@       J     1,X11       . NORMAL EXIT    @^@@@@. BEGINNING OF STAZQ
)@@G@@TEMENT@F@@@@IN1130 LA,U A0,SKMRHS . GET STACKMARK FOR RITEHAND SIDE OF SZR
)@@G@@TMNT  @A@@@@       PUSH  A0          . PUT IT IN@D@@@@       SX    X11,SZS
)@@G@@TVSTK  . POST 'SOMETHING IS STACKED'@ @@@@       J     IN9500      .    ZT
)@@G@@@ @@@@. MARKSTACK, RIGHT BRACKET    @F@@@@IN1140 LA,U  A0,SKMESL   . GETZU
)@@G@@ STACKMARK FOR END OF SUBSCRIPT LIST@B@@@@       PUSH  A0          . PUTZV
)@@G@@ INTO STACK @ @@@@       J     IN9500      .    @ @@@@. MARKSTACK FOR SEZW
)@@G@@MICOLON     @D@@@@IN1150 LA,U  A0,SKMELX   . SEMICOLON=ELIDED INDEX     ZX
)@@G@@@A@@@@       PUSH  A0          . STACK IT @B@@@@       J     IN9500     ZY
)@@G@@ . AND CONTINUE   @E@@@@. NILADIC RIGHT ARROW (CLEAR SV/ESCAPE FROM EVALZZ
)@@G@@INPUT )     @D@@@@IN1160 LA,U  A0,6        . SET SV CLEAR EXIT FLAG     AA
)@@G@@@B@@@@       LX    X11,INLINK  . AND EXCAPE     @ @@@@       J     1,X11AB
)@@G@@       .    @[@@@@.     @A@@@@. QUAD AND QUOTE-QUAD INPUT/OUTPUT  @[@@@@AC
)@@G@@.     @F@@@@IN1200 LA,U  A0,3        . SET RETURN FLAG FOR EVALUATED INPAD
)@@G@@UT    @F@@@@       LX    X11,INLINK  . EXIT TO LET SUPERVISOR HANDLE RECAE
)@@G@@URSION@ @@@@       J     1,X11       .    @#@@@@. CHARACTER INPUT @ @@@@AF
)@@G@@IN1300 LMJ   X11,QQUADI  .    @ @@@@       J     IN9900      .    @F@@@@AG
)@@G@@       TNZ   QESCAP      . WAS ESCAPE (O-U-T OR $$) DETECTED?     @C@@@@AH
)@@G@@       J     IN9500      . NO, PROCESS NORMALLY @C@@@@       SZ    QESCAAI
)@@G@@P      . YES, RESET THE FLAG  @C@@@@       LA,U  A0,5        . SET SUSPEAJ
)@@G@@ND FLAG     @ @@@@       LX    X11,INLINK  .    @B@@@@       J     1,X11AK
)@@G@@       . NORMAL EXIT    @[@@@@.     @ @@@@. EVALUATED (QUOTE) OUTPUT    AL
)@@G@@@ @@@@IN1400 LMJ   X11,QUPRNT  .    @ @@@@       J     IN9900      .    AM
)@@G@@@C@@@@       SX,H2 X11,STOFLG  . TURN ON STORE FLAG   @ @@@@       J    AN
)@@G@@ IN9500      .    @A@@@@. CHARACTER  (QUOTE-QUAD) OUTPUT    @ @@@@IN1500AO
)@@G@@ LMJ   X11,QQPRNT  .    @ @@@@       J     IN9900      .    @C@@@@      AP
)@@G@@ SX,H2 X11,STOFLG  . TURN ON STORE FLAG   @ @@@@       J     IN9500     AQ
)@@G@@ .    @[@@@@.     @ @@@@/. EXECUTE PRIMITIVE MONADS   @[@@@@.     @G@@@@AR
)@@G@@. CAUTION- DECODED INSTR IN A1--A3 MAY BE NEEDED BY CALLED SUBROUTINES  AS
)@@G@@@E@@@@IN2000 LA,H2 A0,MONADS,A3 . GET TABLE POINTER FOR THIS OP   @E@@@@AT
)@@G@@       JZ    A0,IN2060   . IF NONE, SIGNAL UNIMPLEMENTED    @C@@@@      AU
)@@G@@ TNZ,S1 MONADS,A3  . IS THIS A SCALAR OP? @D@@@@       J     IN6000     AV
)@@G@@ . NO, GO CALL SPECIAL ROUTINE@A@@@@. FOR SCALAR OPS, SET UP LINKAGES   AW
)@@G@@@G@@@@IN2010 SA    A0,INTEMP   . SAVE ADDR OF SECONDARY TABLE FOR THIS OAX
)@@G@@PCODE @C@@@@       LMJ   X11,PIKRIT  . INITIALIZE ARG FETCH @ @@@@      AY
)@@G@@ J     IN9900      .    @E@@@@       SA    A6,RITDSC   . POST DESCR FOR AZ
)@@G@@GARBAGE COLLECTION@D@@@@       JNZ   A5,IN2020   . IF NOT NULL, GO DO THBA
)@@G@@E OP  @E@@@@       LMJ   X11,DUPE    . OTHERWISE, JUST REPRODUCE THE ARGBB
)@@G@@@ @@@@       J     IN9900      .    @C@@@@       PUSH  A2          . STABC
)@@G@@CK THE RESULT     @E@@@@       J     IN9500      . AND GO DO GARBAGE COLBD
)@@G@@LECTION     @G@@@@IN2020 AA    A3,INTEMP   . ADD BASE OF TBL TO MODE GIVBE
)@@G@@ING TBL ENTRY ADDR@D@@@@       TP    0,A3        . IS OP LEGAL FOR THIS BF
)@@G@@MODE? @B@@@@       J     IN2050      . NO--DOMAIN ERR @D@@@@       LA,H2BG
)@@G@@ A2,0,A3     . YES- GET ADDR OF CODE RTNE @B@@@@       SA,H1 A2,INTEMP  BH
)@@G@@ . SAVE CODE ADDR @E@@@@IN2030 LA,S1 A1,0,A3     . PICK UP MODE TO USE FBI
)@@G@@OR RESULT   @B@@@@       LA    A0,RITDSC   . GET DESCR ADDR @ @@@@      BJ
)@@G@@ ABSADR A0         .    @D@@@@       LMJ   X11,PUTANS  . ACQUIRE SPACE FBK
)@@G@@OR RESULT   @ @@@@       J     IN9600      .    @C@@@@       PUSH  A6   BL
)@@G@@       . PLACE RESULT IN STACK@C@@@@       LR    R4,A5       . SET REPEABM
)@@G@@T COUNT     @C@@@@       LX,H1 X11,INTEMP  . SET CODE RTNE ADDR   @C@@@@BN
)@@G@@       TZ    ERRITH      . IS ARITH ERR FLAG ON?@C@@@@       ER    ERR$ BO
)@@G@@       . YES, SYSTEM ERROR    @E@@@@IN2040 JNGD  R4,IN9500   . WHEN ALL BP
)@@G@@DONE, GO GARBAGE COLLECT@C@@@@       LMJ   X6,0,X6     . GET NEXT DATA VBQ
)@@G@@ALUE  @B@@@@       LMJ   X11,0,X11   . EXECUTE THE OP @B@@@@       J    BR
)@@G@@ IN2050      . OOPS, ERROR    @E@@@@       TZ    ERRITH      . WAS THEREBS
)@@G@@ AN ARITHMETIC ERROR+   @B@@@@       J     IN2050      . YES, GO NOTE ITBT
)@@G@@@C@@@@       LMJ   X2,0,X2     . STASH THE RESULT     @ @@@@       J    BU
)@@G@@ IN2040      .    @[@@@@.     @[@@@@IN2050@C@@@@       SZ    ERRITH     BV
)@@G@@ . CLEAR INTERRUPT FLAG @ @@@@       ERROR YDOMAI,IN9600  . @ @@@@IN2060BW
)@@G@@ ERROR YUNIMP,IN9600 .  @#@@@@       VARBLS .   @ @@@@INTEMP RES   2    BX
)@@G@@       .    @C@@@@/.    CODE TABLES FOR MONADIC SCALAR OPERATORS  @#@@@@BY
)@@G@@       INSTRS .   @G@@@@.                                               BZ
)@@G@@                 PLUS   @E@@@@ MONDEF  *AADD ZMOHFI,ZMOHFI,IN2100  ZMODFCA
)@@G@@L,ZMODFL,IN2100 . @B@@@@IN2100 DL    A1,A4       . COPY THE ARG   @ @@@@CB
)@@G@@       LMJ   X11,1,X11   .    @B@@@@       J     IN2100      . AND CONTICC
)@@G@@NUE   @G@@@@.                                                           CD
)@@G@@     NEGATE @F@@@@ MONDEF *ASUBTR        ZMOHFI,ZMOHFI,IN2110 ZMODFL,ZMOCE
)@@G@@DFL,IN2110  @^@@@@IN2110 DLN   A1,A4  .   @ @@@@       LMJ   X11,1,X11  CF
)@@G@@ .    @^@@@@       J     IN2110 .   @G@@@@.                             CG
)@@G@@                                    SIGNUM@E@@@@ MONDEF *AMULT  ZMOHFI,ZCH
)@@G@@MOHFI,IN2120  ZMODFL,ZMOHFI,IN2120  @ @@@@IN2120 SZ    A2          .    CI
)@@G@@@ @@@@       DJZ   A4,IN2125   .    @ @@@@       LA,U  A2,1        .    CJ
)@@G@@@ @@@@       TP    A4          .    @ @@@@       LNA,U A2,1        .    CK
)@@G@@@ @@@@IN2125 LMJ   X11,1,X11   .    @ @@@@       J     IN2120      .    CL
)@@G@@@G@@@@.                                                                RCM
)@@G@@ECIP  @E@@@@ MONDEF *ADIVID  ZMOHFI,ZMODFL,IN2130 ZMODFL,ZMODFL,IN2135  CN
)@@G@@@C@@@@IN2130 DFLOAT A3,A4      .    INTEGER ARGUMENT  @ @@@@       DL   CO
)@@G@@ A1,(+1.0D)  .    @ @@@@       DFD   A1,A4       .    @ @@@@       LMJ  CP
)@@G@@ X11,1,X11   .    @^@@@@       J     IN2130 .   @C@@@@IN2135 DL    A1,(+CQ
)@@G@@1.0D)  .    FLOATING ARGUMENT @ @@@@       DFD   A1,A4       .    @ @@@@CR
)@@G@@       LMJ   X11,1,X11   .    @^@@@@       J     IN2135 .   @G@@@@.     CS
)@@G@@                                                           CEILING@E@@@@CT
)@@G@@ MONDEF *ACEIL ZMOHFI,ZMOHFI,IN2140 ZMODFL,ZMOINT,IN2145 .  @D@@@@IN2140CU
)@@G@@ J     IN2100 . IF INTEGER, ALL WE DO IS COPY   @^@@@@IN2145 FUZZUP     CV
)@@G@@  .   @ @@@@       LMJ   X11,1,X11   .    @^@@@@       J     IN2145 .   CW
)@@G@@@G@@@@.                                                                FCX
)@@G@@LOOR  @E@@@@ MONDEF *AFLOOR ZMOHFI,ZMOHFI,IN2150 ZMODFL,ZMOINT,IN2155 . CY
)@@G@@@D@@@@IN2150 J     IN2100 . IF INTEGER, ALL WE DO IS COPY   @^@@@@IN2155CZ
)@@G@@ FUZZDN        .  @ @@@@       LMJ   X11,1,X11   .    @^@@@@       J    DA
)@@G@@ IN2155  .  @G@@@@.                                                     DB
)@@G@@       EXPONENTIAL@E@@@@ MONDEF  *AEXPON  ZMOHFI,ZMODFL,IN2160  ZMODFL,ZDC
)@@G@@MODFL,IN2165@[@@@@.     @ @@@@Y      PROC              .    @ @@@@EXPP* DD
)@@G@@ NAME              .    @ @@@@       UNLI$T            .    @A@@@@      DE
)@@G@@ SX    X11,FORLNK  . SAVE X11 @G@@@@       FCALL DEXP,FORWBK,$-INTERP FODF
)@@G@@RARG . PROC TO CALL FORTRAN DEXP    @B@@@@       LX    X11,FORLNK  . RESDG
)@@G@@TORE X11    @B@@@@       DL    A1,A0       . POSITION RESULT@ @@@@      DH
)@@G@@ LI$T              .    @ @@@@       END               .    @[@@@@.     DI
)@@G@@@D@@@@IN2160 DFLOAT A3,A4      . CONVERT HFI ARG TO DFL     @ @@@@      DJ
)@@G@@ EXPP              .    @B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  DK
)@@G@@@ @@@@       J     IN2160      .    @ @@@@IN2165 EXPP              .    DL
)@@G@@@B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  @ @@@@       J     IN216DM
)@@G@@5      .    @G@@@@.                                                     DN
)@@G@@ NATURAL LOGARITHM@E@@@@ MONDEF  *ALOG  ZMOHFI,ZMODFL,IN2170  ZMODFL,ZMODO
)@@G@@DFL,IN2175  @[@@@@.     @ @@@@Z      PROC              .    @ @@@@LOGP* DP
)@@G@@ NAME              .    @ @@@@       UNLI$T            .    @A@@@@      DQ
)@@G@@ SX    X11,FORLNK  . SAVE X11 @G@@@@       FCALL DLOG,FORWBK,$-INTERP FODR
)@@G@@RARG . PROC TO CALL FORTRAN DLOG    @B@@@@       LX    X11,FORLNK  . RESDS
)@@G@@TORE X11    @B@@@@       DL    A1,A0       . POSITION RESULT@ @@@@      DT
)@@G@@ LI$T              .    @ @@@@       END               .    @[@@@@.     DU
)@@G@@@D@@@@IN2170 DFLOAT A3,A4      . CONVERT HFI ARG TO DFL     @ @@@@      DV
)@@G@@ LOGP              .    @B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  DW
)@@G@@@ @@@@       J     IN2170      .    @ @@@@IN2175 LOGP              .    DX
)@@G@@@B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  @ @@@@       J     IN217DY
)@@G@@5      .    @G@@@@.                                                     DZ
)@@G@@         MAGNITUDE@E@@@@ MONDEF *ARESID  ZMOHFI,ZMOHFI,IN2180  ZMODFL,ZMEA
)@@G@@ODFL,IN2180 @ @@@@IN2180 DLM   A1,A4       .    @ @@@@       LMJ   X11,1EB
)@@G@@,X11   .    @ @@@@       J     IN2180      .    @G@@@@.                 EC
)@@G@@                                             FACTORIAL@E@@@@ MONDEF  *AFED
)@@G@@ACTL  ZMOHFI,ZMODFL,FA0100  ZMODFL,ZMODFL,FA0200@[@@@@.     @B@@@@K     EE
)@@G@@ PROC              . PROC FOR GAMMA @ @@@@FACP*  NAME              .    EF
)@@G@@@ @@@@       UNLI$T            .    @A@@@@       SX    X11,FORLNK  . SAVEG
)@@G@@E X11 @E@@@@       LMJ   X11,FACTRL  . CALL FACTORIAL ROUTINE IN MTHLIB EH
)@@G@@@B@@@@       J     FP0110      . ERROR RETURN   @D@@@@       LX    X11,FEI
)@@G@@ORLNK  . NORMAL RETURN, RESTORE X11 @ @@@@       J     FP0130      .    EJ
)@@G@@@B@@@@FP0110 LX    X11,FORLNK  . RESTORE X11    @B@@@@       J     0,X11EK
)@@G@@       . ERROR RETURN   @ @@@@FP0130                   .    @ @@@@      EL
)@@G@@ LI$T              .    @ @@@@       END               .    @[@@@@.     EM
)@@G@@@D@@@@FA0100 DFLOAT A3,A4      . CONVERT HFI ARG TO DFL     @ @@@@      EN
)@@G@@ FACP              .    @B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  EO
)@@G@@@ @@@@       J     FA0100      .    @ @@@@FA0200 FACP              .    EP
)@@G@@@B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  @ @@@@       J     FA020EQ
)@@G@@0      .    @G@@@@.                                                     ER
)@@G@@              ROLL@E@@@@ MONDEF  *AROLL  ZMOHFI,ZMOHFI,IN2190  ZMODFL,ZMES
)@@G@@ODFL,IN2193 @B@@@@IN2190 TLE,U A5,1        . TEST ARG > 0   @C@@@@      ET
)@@G@@ J     0,X11       . FOR NEG AND NULL ARGS@E@@@@       LMJ   A0,RANINT  EU
)@@G@@ . GENERATE VALUE IN RANGE (0,N-1)  @F@@@@       AA    A2,WSIXOR   . IF EV
)@@G@@1-ORIGIN, CHANGE RANGE TO (1,N)     @B@@@@       LMJ   X11,1,X11   . NOREW
)@@G@@MAL RETURN  @ @@@@       J     IN2190      .    @ @@@@. ROLL FOR DFLOAT EX
)@@G@@RITEARGS    @F@@@@IN2193 JN    A4,0,X11    . NEGATIVE VALUES GIVE DOMAINEY
)@@G@@ ERRORS     @C@@@@       FUZZDN            . TRUNCATE THE ARGUMENT@F@@@@EZ
)@@G@@       JNZ   A1,IN2196   . IF TRUNCATED VAL STILL DFLOAT, CONTINUE@F@@@@FA
)@@G@@       DJZ   A1,0,X11    . OTHERWISE, BE SURE WE DIDN'T GET ZERO  @E@@@@FB
)@@G@@       DFLOAT A0,A1      . AND CONVERT BACK TO FLOATING     @F@@@@IN2196FC
)@@G@@ DL    A4,A1       . MOVE TRUNCATED VAL BACK TO ARGUMENT REG@D@@@@      FD
)@@G@@ LMJ   A0,RANFLT   . GET VALUE IN RANGE (0,N-1) @C@@@@       TZ    WSIXOFE
)@@G@@R      . ZERO ORIGIN INDEXING?@G@@@@       DFA   A1,(+1.0D)  . NO, ONE-OFF
)@@G@@RIGIN-- ADJUST RESULT ACCORDINGLY   @A@@@@       LMJ   X11,1,X11   . GO FG
)@@G@@HOME  @ @@@@       J     IN2193      .    @G@@@@.                       FH
)@@G@@                                        PI TIMES@E@@@@ MONDEF *ACIRCL  ZFI
)@@G@@MOHFI,ZMODFL,IN2200  ZMODFL,ZMODFL,IN2205 @ @@@@IN2200 DFLOAT A3,A4     FJ
)@@G@@ .    @ @@@@       DL    A1,PI       .    @ @@@@       DFM   A1,A4      FK
)@@G@@ .    @ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN2200     FL
)@@G@@ .    @ @@@@IN2205 DL    A1,PI       .    @ @@@@       DFM   A1,A4      FM
)@@G@@ .    @ @@@@       LMJ   X11,1,X11   .    @^@@@@       J     IN2205     FN
)@@G@@@G@@@@.                                                                 FO
)@@G@@   NOT@B@@@@ MONDEF *ALGNOT ZMOHFI,ZMOHFI,IN2210 ;    @A@@@@            FP
)@@G@@    ZMODFL,ZMOHFI,IN2215@D@@@@IN2210 JHNLGL A5,0,X11   . IF NOT LOGICAL,FQ
)@@G@@ ERROR EXIT @ @@@@       LA    A1,A5      .     @ @@@@       XOR,U A1,1 FR
)@@G@@      .     @ @@@@       LMJ   X11,1,X11  .     @ @@@@       J     IN221FS
)@@G@@0     .     @F@@@@IN2215 JDNLGL A4,0,X11   . JUMP IF RITEARG (A4,5) NOT FT
)@@G@@LOGICAL     @ @@@@       LA    A1,A5      .     @ @@@@       XOR,U A1,1 FU
)@@G@@      .     @ @@@@       LMJ   X11,1,X11  .     @^@@@@       J     IN221FV
)@@G@@5     @ @@@@       CONSTS            .    @A@@@@PI     +     3.141592653FW
)@@G@@58979324D . @ @@@@       VARBLS            .    @F@@@@FACRES RES   2    FX
)@@G@@       . FACTORIAL TEMPORARY IN CALLING SEQUENCE@D@@@@/.                FY
)@@G@@         MIXED PRIMITIVE MONADS     @ @@@@       INSTRS            .    FZ
)@@G@@@[@@@@.     @G@@@@. GENERATE TABLE ENTRIES FOR OPS WHICH USE THEIR OWN EGA
)@@G@@XTERNAL RTNES     @C@@@@       MONDEF ASIZE SIZE      . MONADIC RHO     GB
)@@G@@@D@@@@       MONDEF ARAVEL RAVEL    . MAKE INTO A VECTOR    @E@@@@      GC
)@@G@@ MONDEF AINDEX INDGEN   . GENERATE INDEX VECTOR (IOTA)@A@@@@       MONDEGD
)@@G@@F ASYSTM MIBEAM   .     @A@@@@       MONDEF AREVER REVERS   .     @A@@@@GE
)@@G@@       MONDEF ARVFIR REVFIR   .     @A@@@@       MONDEF AXPOSE TRALA    GF
)@@G@@.     @A@@@@       MONDEF AUPGRD GRADUP   .     @A@@@@       MONDEF ADNGGG
)@@G@@RD GRADWN   .     @E@@[[        MONDEF ADOMNO MODINO  . MONADIC MATRIX IGH
)@@G@@NVERSION    @[@@@@.     @G@@@@ MONDEF AMEMBR IN2800         .           GI
)@@G@@   MONADIC EPSILON (UNQUOTE)  @E@@@@IN2800 VERIFY IN2902,IN2902,IN9900 .GJ
)@@G@@ POP AND DECODE ARG     @G@@@@       JMRTST  ZRANKV,IN2903 ZMOCHR,IN2903GK
)@@G@@ . TEST MODE AND RANK OF ARG  @D@@@@       LA    A1,A0       . MOVE DATAGL
)@@G@@ ADDR FOR EXIT    @D@@@@       LA,U  A0,4        . SET UNQUOTE RETURN FLGM
)@@G@@AG    @ @@@@       LX    X11,INLINK  .    @B@@@@       J     1,X11      GN
)@@G@@ . AND GET OUT    @E@@@@.                                               GO
)@@G@@      GOTO  @^@@@@ MONDEF AGOTO IN2810 .  @A@@@@IN2810 VERIFY IN2902,IN2GP
)@@G@@902,IN9900 .@F@@@@       PUSH  A6          . RE-STACK FOR GARBAGE COLLECGQ
)@@G@@TION/VALUE  @G@@@@       SX,H2 X11,STOFLG  . TURN ON STORE FLAG TO INHIBGR
)@@G@@IT PRINTING NULLS @F@@@@       JZ    A5,IN9500    . IF NULL, CONTINUE TOGS
)@@G@@ NEXT OPERATION   @D@@@@       COMJMP A3,IN2903 ZMOHFI,IN2812 ZMODFL,IN2GT
)@@G@@814 . @C@@@@IN2812 LA,H2 A2,0,A0     . GET VAL AS IF SCALAR @F@@@@      GU
)@@G@@ TE,U  A4,ZRANKS   . WAS SCALAR THE CORRECT ASSUMPTION?     @D@@@@      GV
)@@G@@ LA,H1 A2,0,A0     . NO GET AS PER VECTOR/ARRAY @A@@@@       J     IN281GW
)@@G@@6      . AND EXIT @D@@@@IN2814 DL    A4,0,A0     . PICK UP FLOATING VALUGX
)@@G@@E     @C@@@@       FUZZDN            . CONVERT TO INTEGER   @E@@@@      GY
)@@G@@ TZ    A1          . DOES VAL FIT INTO A HAFLINTEGER? @G@@@@       SZ   GZ
)@@G@@ A2          . NO, SET LINENUM ZERO TO FORCE OUT OF RANGE   @ @@@@IN2816HA
)@@G@@ LX    X11,INLINK  .    @E@@@@       LA,U  A0,1        . POST RETURN FLAHB
)@@G@@G FOR GOTO EXIT   @E@@@@       J     1,X11       . AND LET THE SUPERVOSOHC
)@@G@@R HANDLE IT @[@@@@.     @ @@@@IN2902 ERROR YSYNTA,IN9600 .  @ @@@@IN2903HD
)@@G@@ ERROR YDOMAI,IN9600 .  @[@@@@.     @A@@@@.     GENERATE PRIMARY MONADICHE
)@@G@@ TABLE@[@@@@.     @#@@@@       CONSTS .   @^@@@@MONADS* MONTBL IN9500 . HF
)@@G@@@D@@@@/. COMPOUND OPERATORS (INNER/OUTER PRODUCT, REDUCTION)@ @@@@      HG
)@@G@@ INSTRS            .    @[@@@@.     @A@@@@.                     INNER/OUHH
)@@G@@TER   @D@@@@S      PROC    .    SET UP REGS WITH POINTERS FOR OP  @#@@@@HI
)@@G@@SETOP* NAME    .  @#@@@@       UNLI$T  .  @D@@@@       TNZ,H2 DYADS,S(1,HJ
)@@G@@2)    . IS THIS OP DEFINED?   @E@@@@       J     IN9010           . NO, HK
)@@G@@UNIMPLEMENTED FEATURE   @D@@@@       TNZ,S1 DYADS,S(1,2)    . IS THIS A HL
)@@G@@SCALAR OP?  @B@@@@       ER    ERR$        . NO, SYSERR     @F@@@@      HM
)@@G@@ LA,S2 S(1,1),DYADS,S(1,2)   . GET FLAGBITS FOR REDUCTION   @F@@@@      HN
)@@G@@ TOP,U S(1,1),1         . IS REDUCTION DEFINED FOR THIS OPR?@B@@@@      HO
)@@G@@ ER    ERR$        . NO, SYSERR     @F@@@@       LA,H2 S(1,1)+1,DYADS,S(HP
)@@G@@1,2) . YES, GET OPCODE TABLE ADDR   @#@@@@       LI$T    .  @#@@@@      HQ
)@@G@@ END     .  @E@[@@DDYAST EQU   0D+ADYAST   . DOUBLE CONST TO ADJUST OPCOHR
)@@G@@DES   @E@@][DDYAST EQU   0D+ARBIAS   . DOUBLE CONST TO ADJUST OPCODES   HS
)@@G@@@G[@@@IN3000 DSL   A1,36-3     . ALIGN SUBSCRIPTING FLAG IN LOW 3 BITS OHT
)@@G@@F A1  @B@@@@       DSL   A2,36-6     . LEFT OP TO A2  @B@@@@       SSL  HU
)@@G@@ A3,36-6     . RIGHT OP TO A3 @G@[@@       DA    A2,(+ADYAST+DDYAST*/36)HV
)@@G@@ . ADJUST OPCODES TO NORMAL VALUES  @G@@][       DA    A2,(+ARBIAS+DDYASHW
)@@G@@T*/36) . ADJUST OPCODES TO NORMAL VALUES  @E[@@@       JNE,U A1,PSQXDY IHX
)@@G@@N3020 . IF NO INDEXING, GO DO OP    @C@@@@IN3010 DS    A2,INTEMP   . SAVHY
)@@G@@E OPS TO BE USED  @F@@@@       LMJ   X11,SUBTMP  . CREATE A TEMPORARY BYHZ
)@@G@@ SUBSCRIPTING     @ @@@@       J     IN9900      .    @D@@@@       DL   IA
)@@G@@ A2,INTEMP   . RECOVER OPS TO BE EXECUTED @F@@@@IN3020 JNE,U A2,AOUTER IIB
)@@G@@N3100 . IF NOT OUTER PROD, GO DO INNER    @E@@@@       LX,U  X11,OUTPRD IC
)@@G@@ . SET XFER ADDR FOR OUTER PRODUCT  @E@@@@       J     IN3510      . GO ID
)@@G@@CHECK VALIDITY OF RIGHT OP    @#@@@@. INNER PRODUCT   @F@@@@IN3100 SETOPIE
)@@G@@ A4,A2       . USE LEFTOP (A2) TO SET PARAMS IN A4,A5 @C@@@@       LX,U IF
)@@G@@ X11,INPROD  . SET UP XFER ADDR     @C@@@@       J     IN3510      . GO IG
)@@G@@SET UP RIGHTOP    @[@@@@.     @]@@@@. REDUCTION @[@@@@.     @G@@@@. AT TIH
)@@G@@HIS POINT A2=S3 OF OPCODE, I.E. COORDINATE SELECTOR, A3=OPERATOR  @F@@@@II
)@@G@@IN3500 LX,U  X11,REDUCE  . SET XFER ADDR FOR REDUCTION SUBROUTINE @ @@@@IJ
)@@G@@. CHECK LEGALITY OF OPCODE    @E@@@@IN3510 SETOP A0,A3       . PUT RITEOIK
)@@G@@P (A3) PARAMS INTO A0,A1@B@@@@       LMJ   X11,0,X11   . GO DO THE OP   IL
)@@G@@@ @@@@       J     IN9600      .    @ @@@@       J     IN9500      .    IM
)@@G@@@B@@@@/. OPERATION S ON SUBSCRIPTED DATA---     @B@@@@.            INDEXIN
)@@G@@ AND DYADIC OPERATE     @C@@@@IN4000 TE,U  A3,ASTORE   . IS OPERATION STIO
)@@G@@ORE?  @D@@@@       J     IN4110      . NO, GO SAVE THE DYADIC OP  @F@@@@IP
)@@G@@       LMJ   X11,SUBSTO  . YES, GO DO SUBSCRIPTED STORE ROUTINE   @C@@@@IQ
)@@G@@       J     IN9900      . ERROR WHILE STORING  @C@@@@       SX,H2 X11,SIR
)@@G@@TOFLG  . TURN ON STORE FLAG   @C@@@@       J     IN9500      . AND GO DOIS
)@@G@@ NEXT OP    @A@@@@. COME HERE FOR INDEX AND NO-OP     @B@@@@IN4100 LA,U IT
)@@G@@ A3,0        . TURN OFF FLAG  @B@@@@. STORE DYADIC OP TO BE EXECUTED LATIU
)@@G@@ER    @E@@@@IN4110 DS    A2,INTEMP   . TEMP SAVE OPCODE AND SELECTR FLAGIV
)@@G@@@G@@@@       LMJ   X11,SUBTMP  . GO USE SUBSCRIPTING TO CREATE A TEMPORAIW
)@@G@@RY    @B@@@@       J     IN9900      . OOPS, ERROR    @F@@@@       TNZ  IX
)@@G@@ INTEMP+1    . IS THERE A DYADIC OP TO BE EXECUTED?   @C@@@@       J    IY
)@@G@@ IN9500      . NO, GO DO NEXT OP    @B@@@@       DL    A2,INTEMP   . YESIZ
)@@G@@, RECOVER IT@B@@@@       J     IN5000      . AND GO DO IT   @ @@@@/. EXEJA
)@@G@@CUTE PRIMITIVE DYADS    @[@@@@.     @G@@@@. CAUTION- DECODED INSTR IN A1JB
)@@G@@--A3 MAY BE NEEDED BY CALLED SUBROUTINES  @E@@@@IN5000 LA,H2 A0,DYADS,A3JC
)@@G@@ .  GET TABLE POINTER FOR THIS OP   @E@@@@       JZ    A0,IN5900   . IF JD
)@@G@@NONE, SIGNAL UNIMPLEMENTED    @C@@@@       TNZ,S1 DYADS,A3   . IS THIS AJE
)@@G@@ SCALAR OP? @D@@@@       J     IN6000      . NO, GO CALL SPECIAL ROUTINEJF
)@@G@@@^@@@@. FOR SCALAR OPS, SET UP@G@@@@IN5002 SA    A0,INTEMP   . SAVE ADDRJG
)@@G@@ OF SECONDARY TABLE FOR THIS OPCODE @E@@@@       LMJ   X11,PIKTWO  . INIJH
)@@G@@TIALIZE ARG FETCH ROUTINES    @B@@@@       J     IN9900      .OOPS, ERROJI
)@@G@@R     @G@@@@       AA    A3,INTEMP   . MODE+2NDARY TBL=ENTRY FOR THIS OPJJ
)@@G@@ AND MODE   @D@@@@       TP    0,A3        . IS OP LEGAL FOR THIS MODE? JK
)@@G@@@C@@@@       J     IN5930      . NO, DOMAIN ERROR .   @D@@@@       LA,H2JL
)@@G@@ A2,0,A3     . YES, GET ADDR OF CODE RTNE @C@@@@       SA,H1 A2,INTEMP  JM
)@@G@@ . AND TEMP SAVE IT     @E@@@@       LA,S1 A1,0,A3     . GET MODE TO BE JN
)@@G@@USED FOR RESULT   @E@@@@       SA,S2 A1,INDUMY   . AND TEMP SAVE IN DUMMJO
)@@G@@Y DESCRIPTOR@A@@@@. DETERMINE SIZE AND SHAPE OF RESULT@D@@@@IN5003 DL   JP
)@@G@@ A4,LFTRNK   . GET RANK/LENGTH OF LEFTARG @B@@@@       TE,U  A5,1       JQ
)@@G@@ . IS IT UNITY?   @C@@@@       J     IN5005      . NO- GO CHECK RITE ARGJR
)@@G@@@D@@@@       TE    A5,RITSIZ   . IS RITE ALSO LENGTH 1?     @G@@@@      JS
)@@G@@ J     IN5004      . NO, SET SHAPE OF RESULT=SHAPE OF RITEARG     @D@@@@JT
)@@G@@. BOTH ARE LENGTH 1, SET SHAPE OF RESULT TO GRTR RANK @C@@@@       TG   JU
)@@G@@ A4,RITRNK   . IS RITE .GT. LEFT?   @E@@@@       J     IN5006      . NO,JV
)@@G@@ FORCE RESULT TO MATCH LEFT   @D@@@@IN5004 DL    A4,RITRNK   . GET RANK/JW
)@@G@@LENGTH OF RITEARG @D@@@@       LA    A7,RITDDS   . GET DIMV POINTER OF RJX
)@@G@@ITEARG@C@@@@       J     IN5007      . GO SET UP DUMMY DESCR@G@@@@. LEFTJY
)@@G@@ARG NOT LENGTH 1- CHECK WHETHER RITE IS EITHER 1 OR CONFORMABLE   @D@@@@JZ
)@@G@@IN5005 DL    A2,RITRNK   . GET RANK/LENGTH OF RITEARG @G@@@@       JE,U KA
)@@G@@ A3,1 IN5006 . IF RITEARG LENGTH 1, SET RESULT TO LEFT SHAPE@E@@@@      KB
)@@G@@ JNE   A2,A4 IN5910     . IF RANKS UNEQUAL, RANK ERROR@G@@@@       SAVERKC
)@@G@@ X4,WORDPT,4 . SAVE ARG FETCHREGS IN RANDAC SCRATCH AREA    @D@@@@      KD
)@@G@@ LMJ   X11,PIKLFD  . INIT TO GET LEFT DIMENSIONS@C@@@@       LMJ   X11,PKE
)@@G@@IKRID  . AND ALSO RIGHT DIM   @E@@@@IN5005A JNGD A15,IN5005B . EXIT AFTEKF
)@@G@@R SCAN OF ALL RITE DIMS @B@@@@       LMJ   X4,0,X4     . GET LEFT DIM   KG
)@@G@@@B@@@@       LMJ   X6,0,X6     . GET RITE DIM   @E@@@@       JE    A2,A5KH
)@@G@@ IN5005A    . IF DIMS EQUAL, CONTINUE     @D@@@@       ERROR YLENGT,IN96KI
)@@G@@00    . ELSE LENGTH ERROR     @D@@@@IN5005B LOADR X4,WORDPT,4 . RESTORE KJ
)@@G@@ARG FETCHREGS     @E@@@@       DL    A4,LFTRNK   . RESTORE RANK/LENGTH PKK
)@@G@@OINTERS     @G@@@@IN5006 LA    A7,LFTDDS   . RESULT MUST MATCH LEFT, GETKL
)@@G@@ ADDR OF ITS DIMV @D@@@@IN5007 SA,H1 A7,INDUMY+1 . DIMV POINTER TO DUMMYKM
)@@G@@ DESCR@B@@@@       SA,S3 A4,INDUMY   . DITTO FOR RANK @B@@@@       SA,H2KN
)@@G@@ A5,INDUMY   . AND LENGTH     @D@@@@       LA,S2 A1,INDUMY   . PICK UP MKO
)@@G@@ODE OF RESULT     @C@@@@       LA,U  A0,INDUMY   . ADDR OF DUMMY DESCR  KP
)@@G@@@F@@@@       LMJ   X11,PUTANS  . GO GET SET TO STORE THE FINAL ANSWER   KQ
)@@G@@@C@@@@       J     IN9900      . OOPS, WE BLEW IT     @D@@@@       PUSH KR
)@@G@@ A6          . PUT DESCR OF ANS IN STACK  @E@@@@       LX,H1 X11,INTEMP KS
)@@G@@ . INITIALIZE LINK TO CODE RTNE     @D@@@@       TNZ   ERRITH      . IS KT
)@@G@@ARITHMETIC OFLO FLAG ON?@B@@@@       J     IN5008      . NO, PROCEED    KU
)@@G@@@D@@@@       LA    A0,ERRITH   . YES, SYSERR- BETTER DUMP IT@ @@@@      KV
)@@G@@ ER    ERR$        .    @^@@@@. NOW LOOP AND DO THE OP@F@@@@IN5008 JNGD KW
)@@G@@ A13,IN9500  . WHEN ALL IS DONE, GO GARBAGE COLLECT   @C@@@@       LMJ  KX
)@@G@@ X4,0,X4     . YES-GET LEFT ARG     @B@@@@       LMJ   X6,0,X6     . GETKY
)@@G@@ RITE ARG   @B@@@@       LMJ   X11,0,X11   . EXECUTE THE OP @C@@@@      KZ
)@@G@@ J     IN5930      . OOPS, DOMAIN ERR     @E@@@@       TZ    ERRITH     LA
)@@G@@ . IS ARITH ERROR FLAG STILL OFF?   @C@@@@       J     IN5930      . NO LB
)@@G@@-DOMAIN ERROR     @C@@@@       LMJ   X2,0,X2     . STASH THE RESULT     LC
)@@G@@@C@@@@       J     IN5008      . GO DO NEXT DATUM     @[@@@@.     @A@@@@LD
)@@G@@IN5900 ERROR YUNIMP,IN9600    .     @A@@@@IN5910 ERROR YRANK,IN9600     LE
)@@G@@.     @A@@@@IN5920 ERROR YLENGT,IN9600    .     @^@@@@IN5930 SZ    ERRITLF
)@@G@@H .   @A@@@@       ERROR YDOMAI,IN9600    .     @#@@@@       VARCON .   LG
)@@G@@@E@@@@INDUMY CBLOCK ZTPTMP,0,0,0 0       . DUMMY DESCR FOR DYADS  @A@@@@LH
)@@G@@/. CODE TABLES FOR DYADIC SCALAR OPS@[@@@@.     @#@@@@       INSTRS .   LI
)@@G@@@F@@@@.                                                          ADD    LJ
)@@G@@@F@@@@ DYADEF *AADD ZMOHFI,ZMOINT,IN5010 ZMODFL,ZMODFL,IN5015  *0.0D    LK
)@@G@@@ @@@@IN5010 DA    A1,A4       .    @F@@@@       CFLOAT A0,A1      . IF LL
)@@G@@RESULT EXCEEDS HALFINT, FLOAT IT    @ @@@@       LMJ   X11,1,X11   .    LM
)@@G@@@^@@@@       J     IN5010 .   @ @@@@IN5015 DFA   A1,A4       .    @ @@@@LN
)@@G@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5015      .    @[@@@@LO
)@@G@@.     @G@@@@.                                                          SLP
)@@G@@UBTRACT     @F@@@@ DYADEF *ASUBTR ZMOHFI,ZMOINT,IN5020 ZMODFL,ZMODFL,IN5LQ
)@@G@@025  *0.0D  @ @@@@IN5020 DAN   A1,A4       .    @F@@@@       CFLOAT A0,ALR
)@@G@@1      . IF RESULT EXCEEDS HALFINT, FLOAT IT    @ @@@@       LMJ   X11,1LS
)@@G@@,X11   .    @ @@@@       J     IN5020      .    @ @@@@IN5025 DFAN  A1,A4LT
)@@G@@       .    @ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN502LU
)@@G@@5      .    @G@@@@.                                                     LV
)@@G@@     MULTIPLY     @F@@@@ DYADEF *AMULT ZMOHFI,ZMOINT,IN5030 ZMODFL,ZMODFLW
)@@G@@L,IN5035  *1.0D   @ @@@@IN5030 LA    A1,A2       .    @ @@@@       MI   LX
)@@G@@ A1,A5       .    @F@@@@       CFLOAT A0,A1      . IF RESULT EXCEEDS HALLY
)@@G@@FINT, FLOAT IT    @ @@@@       LMJ   X11,1,X11   .    @ @@@@       J    LZ
)@@G@@ IN5030      .    @ @@@@IN5035 DFM   A1,A4       .    @ @@@@       LMJ  MA
)@@G@@ X11,1,X11   .    @ @@@@       J     IN5035      .    @[@@@@.     @F@@@@MB
)@@G@@ DYADEF *ADIVID ZMOHFI,ZMODFL,IN5040 ZMODFL,ZMODFL,IN5045 *1.0D   @B@@@@MC
)@@G@@IN5040 DTE   A1,A4  . ARE OPERANDS EQUAL? @C@@@@       J     IN5042 . NOMD
)@@G@@, GO DO THE DIVISION    @G@@@@       DL    A1,(+1.0D)  . YES, FORCE RESUME
)@@G@@LT TO ONE (TO DEFINE 0%0=1)   @ @@@@       LMJ   X11,1,X11   .    @^@@@@MF
)@@G@@       J     IN5040 .   @^@@@@IN5042 DFLOAT A0,A1 .   @^@@@@       DFLOAMG
)@@G@@T A3,A4 .   @^@@@@       DFD   A1,A4 .    @ @@@@       LMJ   X11,1,X11  MH
)@@G@@ .    @^@@@@       J     IN5040 .   @B@@@@IN5045 DTE   A1,A4  . ARE OPERMI
)@@G@@ANDS EQUAL? @A@@@@       J     IN5047 . NO, GO DIVIDE @D@@@@       DL   MJ
)@@G@@ A1,(+1.0D)  . YES, FORCE RESULT UNITY    @ @@@@       LMJ   X11,1,X11  MK
)@@G@@ .    @^@@@@       J     IN5045 .   @^@@@@IN5047 DFD   A1,A4  .   @ @@@@ML
)@@G@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5045      .    @G@@@@MM
)@@G@@.                                                                MAXIMUMMN
)@@G@@@E@@@@ DYADEF *ACEIL ZMOHFI,ZMOHFI,IN5050 ZMODFL,ZMODFL,IN5055   ;@F@@@@MO
)@@G@@         *0400000000000000000000000D    . IDENTITY=MAX NEGATIVE NO@D@@@@MP
)@@G@@IN5050 AN    A5,A2       . SUB LEFT ARG FROM RIGHT ARG@D@@@@       TN   MQ
)@@G@@ A5          . IS LEFT ARG > RIGHT ARG    @E@@@@       A     A2,A5      MR
)@@G@@ . NO, PUT RIGHT ARG IN LEFT ARG    @ @@@@       LMJ   X11,1,X11   .    MS
)@@G@@@ @@@@       J     IN5050      .    @G@@@@IN5055 DS    A4,A6  . SAE RITEMT
)@@G@@ARG TO AVOID BIT LOSS IN NORMALIXATION    @D@@@@       DFAN  A4,A1  . FOMU
)@@G@@RM DIFFERENCE (RIGHT-LEFT)    @C@@@@       TN    A4     . WAS LEFTARG THMV
)@@G@@E LARGER?   @F@@@@       DL    A1,A6  . NO, BRING ORIGINAL RITEARG TO REMW
)@@G@@SULT REG    @ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN505MX
)@@G@@5      .    @G@@@@.                                                     MY
)@@G@@           MINIMUM@E@@@@ DYADEF *AFLOOR ZMOHFI,ZMOHFI,IN5060 ZMODFL,ZMODMZ
)@@G@@FL,IN5065  ;@F@@@@        *0377777777777777777777777D     . IDENTITY=MAXNA
)@@G@@ POSITIVE NO@D@@@@IN5060 AN    A5,A2       . SUB LEFT ARG FROM RIGHT ARGNB
)@@G@@@D@@@@       TP    A5          . IS LEFT ARG < RIGHT ARG    @E@@@@      NC
)@@G@@ A     A2,A5       . NO, PUT RIGHT ARG IN LEFT ARG    @ @@@@       LMJ  ND
)@@G@@ X11,1,X11   .    @ @@@@       J     IN5060      .    @G@@@@IN5065 DS   NE
)@@G@@ A4,A6  . SAVE RITEARG TO PRECLUDE NORMALIZATION PROBLEMS   @C@@@@      NF
)@@G@@ DFAN  A4,A1  . DIFFERENCE: (RIGHT-LEFT)  @C@@@@       TP    A4     . WANG
)@@G@@S RITEARG THE LARGER?   @D@@@@       DL    A1,A6  . MO, LEFT. SET RESULTNH
)@@G@@ TO RIGHTARG@ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN506NI
)@@G@@5      .    @G@@@@.                                                     NJ
)@@G@@             POWER@F@@@@ DYADEF *AEXPON ZMOHFI,ZMODFL,IN5070 ZMODFL,ZMODNK
)@@G@@FL,IN5075   *1.0D @B@@@@IN5070 DFLOAT A0,A1      . FLOAT LEFT ARG @B@@@@NL
)@@G@@       DFLOAT A3,A4      . FLOAT RITE ARG @A@@@@       SX    X11,MTHLNK NM
)@@G@@ . SAVE X11 @D@@@@       LMJ   X11,POWER   . GO TO ROUTINE IN MTHLIB    NN
)@@G@@@B@@@@       J     IN5073      . ERROR RETURN   @D@@@@       LX    X11,MNO
)@@G@@THLNK  . NORMAL RETURN, RESTORE X11 @B@@@@       LMJ   X11,1,X11   . NORNP
)@@G@@MAL RETURN  @ @@@@       J     IN5070      .    @B@@@@IN5073 LX    X11,MNQ
)@@G@@THLNK  . RESTORE X11    @ @@@@       J     0,X11       .    @A@@@@IN5075NR
)@@G@@ SX    X11,MTHLNK  . SAVE X11 @D@@@@       LMJ   X11,POWER   . GO TO ROUNS
)@@G@@TINE IN MTHLIB    @B@@@@       J     IN5078      . ERROR RETURN   @D@@@@NT
)@@G@@       LX    X11,MTHLNK  . NORMAL RETURN, RESTORE X11 @B@@@@       LMJ  NU
)@@G@@ X11,1,X11   . NORMAL RETURN  @ @@@@       J     IN5075      .    @B@@@@NV
)@@G@@IN5078 LX    X11,MTHLNK  . RESTORE X11    @ @@@@       J     0,X11      NW
)@@G@@ .    @G@@@@.                                                           NX
)@@G@@   LOGARITHM@F@@@@ DYADEF *ALOG   ZMOHFI,ZMODFL,IN5080 ZMODFL,ZMODFL,IN5NY
)@@G@@085    0D   @[@@@@.     @B@@@@D      PROC              . LOGARITHM PROCSNZ
)@@G@@@ @@@@DOLOG* NAME              .    @ @@@@       UNLI$T            .    OA
)@@G@@@B@@@@       DS    A1,LOGLFT   . SAVE LEFT ARG  @B@@@@       DS    A4,LOOB
)@@G@@GRIT   . SAVE RITE ARG  @B@@@@       SX    X11,FORLNK  . SAVE LINK WORD OC
)@@G@@@E@@@@       SCALL DLOG,FORWBK,$-INTERP LOGLFT . LOG (LEFT ARG)   @C@@@@OD
)@@G@@       DS    A0,LOGLFT   . SAVE LOG (LEFT ARG)  @E@@@@       SCALL DLOG,OE
)@@G@@FORWBK,$-INTERP LOGRIT . LOG (RITE ARG)   @D@@@@       DFD   A0,LOGLFT  OF
)@@G@@ . DIVIDE RITE LOG BY LEFT LOG@D@@@@       DL    A1,A0       . PUT RESULOG
)@@G@@T IN RETURN REG   @C@@@@       LX    X11,FORLNK  . RESTORE LINK REG     OH
)@@G@@@ @@@@       LI$T              .    @ @@@@       END               .    OI
)@@G@@@[@@@@.     @B@@@@IN5080 DFLOAT A0,A1      . FLOAT LEFT ARG @B@@@@      OJ
)@@G@@ DFLOAT A3,A4      . FLOAT RITE ARG @E@@@@       DOLOG             . COMOK
)@@G@@PUTE RITE LOG OVER LEFT LOG   @B@@@@       LMJ   X11,1,X11   . RETURN TOOL
)@@G@@ USER @ @@@@       J     IN5080      .    @E@@@@IN5085 DOLOG            OM
)@@G@@ . COMPUTE RITE LOG OVER LEFT LOG   @B@@@@       LMJ   X11,1,X11   . RETON
)@@G@@URN TO USER @ @@@@       J     IN5085      .    @G@@@@.                 OO
)@@G@@                                               RESIDUE@F@@@@ DYADEF *AREOP
)@@G@@SID ZMOHFI,ZMOHFI,IN5090 ZMODFL,ZMODFL,IN5095  *0.0D  @F@[@@IN5090 JZ   OQ
)@@G@@ A2,IN5092   . IF LEFT ARG = 0 THEN TEST RITE ARG     @D@[@@       LMA  OR
)@@G@@ A2,A2       . GET ABSVAL OF LEFT ARG     @F@[@@       DI    A4,A2      OS
)@@G@@ . DIVIDE RIGHT ARG BY ABSVAL LEFT ARG    @C@[@@       JZ    A5,IN5091  OT
)@@G@@ . TEST REMAINDER ZERO  @C@[@@       TP    A5     . IS REMAINDER NEGATIVOU
)@@G@@E?    @E@[@@       AA    A5,A2  . YES, FORCE POS BY ADDING IN THE BASE  OV
)@@G@@@D@[@@       LA    A2,A5       . REMAINDER IS DESIRED RESULT@B@[@@      OW
)@@G@@ J     IN5093      . NORMAL EXIT    @B@[@@IN5091 SZ    A2          . RESOX
)@@G@@ULT IS ZERO @ @[@@       J     IN5093      .    @G@[@@IN5092 JN    A5,0,OY
)@@G@@X11    . LEFT ARG = 0 AND RITE ARG NEG, DOMAIN ERROR  @E@[@@       DL   OZ
)@@G@@ A1,A4       . OTHERWISE, RESULT IS RIGHT ARG   @A@[@@IN5093 LMJ   X11,1PA
)@@G@@,X11   . RETURN   @ @[@@       J     IN5090      .    @F@[@@IN5095 DJZ  PB
)@@G@@ A1,IN5097   . IF LEFT ARG = 0 THEN TEST RIGHT ARG    @B@[@@       DS   PC
)@@G@@ A4,R1       . SAVE RIGHT ARG @D@[@@       DLM   A1,A1       . GET ABSVAPD
)@@G@@L OF LEFT ARG     @C@[@@       DS    A1,INSTIX   . SAVE ABSVAL LEFT ARG PE
)@@G@@@F@[@@       DFD   A4,A1       . DIVIDE RIGHT ARG BY ABSVAL LEFT ARG    PF
)@@G@@@E@[@@       FUZZDN            . TAKE LARGEST INTEGER IN RESULT   @G@[@@PG
)@@G@@       JNZ   A1,IN5096   . IF FUZZDN RESULT IS FLOATING, SKIP CONVERSIONPH
)@@G@@@E@[@@       DFLOAT A0,A1      . OTHERWISE, CONVERT TO FLOATING   @E@[@@PI
)@@G@@IN5096 DFM   A1,INSTIX   . MULT RESULT BY ABSVAL LEFT ARG   @C@[@@      PJ
)@@G@@ DLN   A1,A1       . GET NEG OF RESULT    @B@[@@       DFA   A1,R1      PK
)@@G@@ . ADD RIGHT ARG  @B@[@@       J     IN5098      . NORMAL EXIT    @G@[@@PL
)@@G@@IN5097 JN    A4,0,X11    . LEFT ARG 0 AND IF RIGHT ARG NEG, DOMAIN ERRORPM
)@@G@@@E@[@@       DL    A1,A4       . OTHERWISE, RESULT IS RIGHT ARG   @G@@[[PN
)@@G@@. NEW DEFINITION (JUNE 1973). DEFINED FOR ALL ARGS, HAS SIGNED RESULT   PO
)@@G@@@G@@[[IN5090  TZ     A2             . IF ZERO LEFTARG, RESULT WILL BE RIPP
)@@G@@TE    @H@@[[        DI     A4,A2          . ELSE DIVIDE LEFT BY RITE, REPQ
)@@G@@MAINDER TO A5     @F@@[[        LA     A2,A5          . RESULT=REMAINDERPR
)@@G@@ OR ORIGINAL VALUE@B@@[[        LMJ    X11,1,X11      . RETURN    @A@@[[PS
)@@G@@        J      IN5090         .     @G@@[[IN5095  DJZ    A1,IN5097      PT
)@@G@@. IF ZERO LEFTARG, GO FORCE RESULT =RIGHT @D@@[[        DS     A1,INSTIXPU
)@@G@@      . ELSE TEMP SAVE LEFTARG@D@@[[        DS     A4,R1          . AND PV
)@@G@@RIGHT ARG ALSO    @D@@[[        DFD    A4,A1          . RIGEART OVER LEFPW
)@@G@@T     @C@@[[        FUZZDN                . TAKE THE FLOOR  @F@@[[      PX
)@@G@@  JNZ    A1,IN5096      . IF STILL DFLOAT, NO FIXUP NEEDED  @E@@[[      PY
)@@G@@  DFLOAT A0,A1          . ELSE RECONVERT TO DFLOAT    @E@@[[IN5096  DFM PZ
)@@G@@   A1,INSTIX      . TIMES ORIGINAL LEFT ARG     @B@@[[        DLN    A1,QA
)@@G@@A1          . NEGATE    @E@@[[        DFA    A1,R1          . ADD IN ORIQB
)@@G@@GINAL RIGHT ARG   @C@@[[        J      IN5098         . AND WE'RE DONE  QC
)@@G@@@G@@[[IN5097  DL     A1,A4          . FOR LEFTARG ZERO, FORCE RESULT=RIGQD
)@@G@@HTARG @ W@@@IN5098 LMJ   X11,1,X11   .    @ @@@@       J     IN5095     QE
)@@G@@ .    @G@@@@.                                                   BINOMIALQF
)@@G@@ COEFFICIENT@G@@@@ DYADEF  *AFACTL  ZMOHFI,ZMODFL,BC0100  ZMODFL,ZMODFL,QG
)@@G@@BC0200  *1.0D     @[@@@@.     @F@@@@B      PROC              . USES FACPQH
)@@G@@ FOUND UNDER MONADIC FACTORIAL@ @@@@BCPROC* NAME             .    @ @@@@QI
)@@G@@       UNLI$T            .    @D@@@@       DTG   A4,A1       . LEFT ARG QJ
)@@G@@.GT. RITE ARG ?   @C@@@@       J     BC0010      . NO,PROCEEDE NORMALLY QK
)@@G@@@D@@@@       DSL   A1,72       . YES, FORCE RESULT TO ZERO  @F@@@@      QL
)@@G@@ J     BC0020      . AND LEAVE WITHOUT DOING ANYTHING ELSE  @C@@@@BC0010QM
)@@G@@ DS    A1,BCLEFT   . SAVE LEFT ARG - A    @C@@@@       DS    A4,BCRITE  QN
)@@G@@ . SAVE RITE ARG - B    @D@@@@       DFAN  A4,A1       . B-A INTO A4 FORQO
)@@G@@ FACTRL     @C@@@@       FACP              . !B-A WINDS UP IN A1  @A@@@@QP
)@@G@@       DL    A4,BCLEFT   . RESTORE A@A@@@@       DS    A1,BCLEFT   . SAVQQ
)@@G@@E !B-A@B@@@@       FACP              . NOW FIND !A    @A@@@@       DFM  QR
)@@G@@ A1,BCLEFT   . (!A)#!B-A@A@@@@       DS    A1,BCLEFT   . SAVE IT  @A@@@@QS
)@@G@@       DL    A4,BCRITE   . RESTORE B@B@@@@       FACP              . ANDQT
)@@G@@ FIND !B    @E@@@@       DFD   A1,BCLEFT   . DONE---(!B)%(!A)#!B-A  IN  QU
)@@G@@A1    @D@@@@BC0020. COME DIRECTLY HERE IF LEFT ARG > RITE ARG     @ @@@@QV
)@@G@@       LI$T              .    @ @@@@       END               .    @[@@@@QW
)@@G@@.     @C@@@@BC0100 DFLOAT A0,A1      . FLOAT LEFT ARG - A   @C@@@@      QX
)@@G@@ DFLOAT A3,A4      . FLOAT RITE ARG - B   @ @@@@       BCPROC           QY
)@@G@@ .    @B@@@@       LMJ   X11,1,X11   . NORMAL RETURN  @ @@@@       J    QZ
)@@G@@ BC0100      .    @ @@@@BC0200 BCPROC            .    @B@@@@       LMJ  RA
)@@G@@ X11,1,X11   . NORMAL RETURN  @ @@@@       J     BC0200      .    @G@@@@RB
)@@G@@.                                                               CIRCULARRC
)@@G@@@F@@@@ DYADEF *ACIRCL ZMOHFI,ZMODFL,CI0010 ZMODFL,ZMODFL,CI0040    0D   RD
)@@G@@@A@@@@CI0010 SX    X11,CIXELE  . SAVE X11 @D@[@@       DFLOAT A3,A4     RE
)@@G@@ . CONVERT HFI RITE ARG TO DFL@G@[@@       DS    A4,CITRRG   . STORE DFLRF
)@@G@@ RITE ARG FOR ROUTINE CALLING SEQ   @C@[@@       LX,U  X11,CI0020  . LOARG
)@@G@@D RETURN ADDRESS  @F@[@@       COMJMP A2,CI0030 -7,DATANH -6,DACOSH -5,DRH
)@@G@@ASINH -4,CIRC01 ; @F@[@@                        -3,DATAN  -2,DACOS  -1,DRI
)@@G@@ASIN   0,CIRC02 ; @F@[@@                         1,DSIN    2,DCOS    3,DRJ
)@@G@@TAN    4,CIRC03 ; @F@[@@                         5,DSINH   6,DCOSH   7,DRK
)@@G@@TANH            . @C@[@@CI0020 +     CITRRG      . ADDRESS OF TRIG ARG  RL
)@@G@@@ @[@@       +     $-INTERP,CIWKBK .@E@@[[        LX,U   X11,CI0020     RM
)@@G@@. DUMMY UP A RETURN ADDRESS   @E@@[[        J      CI0055         . AND RN
)@@G@@GO CALL LIBRARY FUNC    @G@@[[CI0020  EQU    $-2            . LEAVE ROOMRO
)@@G@@ FOR FORTRAN WALKBACK, ETC.   @BD@@@       LX    X11,CIXELE  . RESTORE XRP
)@@G@@11    @D@@@@       DL    A1,A0       . LOAD RESULT FOR RETURN     @C@@@@RQ
)@@G@@       LMJ   X11,1,X11   . NORMAL EXIT FOR HFI  @ @@@@       J     CI001RR
)@@G@@0      .    @B@[@@CI0030 LX    X11,CIXELE  . RESTORE X11    @ @[@@      RS
)@@G@@ J     0,X11       .    @A]@@@CI0040 SX    X11,CIXELE  . SAVE X11 @E@@[[RT
)@@G@@        LX,U   X11,CI0070     . AND DUMMY UP A RETURN ADDR  @D@@@@      RU
)@@G@@ JZ    A1,CI0050   . TEST LEFT ARG FOR HFI MODE @B@@@@       DS    A4,CIRV
)@@G@@TRRG   . SAVE RITE ARG  @E@@@@       DS    A1,A4       . PREPARE LEFT ARRW
)@@G@@G FOR FUZZING     @ @@@@       FUZZDN            .    @F@@@@       JNZ  RX
)@@G@@ A1,CI0080   . TEST RESULT OF FUZZING FOR HFI MODE    @C@@@@       DL   RY
)@@G@@ A4,CITRRG   . REPLACE RITE ARG     @D@@@@CI0050 JNZ   A4,CI0060   . TESRZ
)@@G@@T RITE ARG FOR HFI MODE @C@[@@       DFLOAT A3,A4      . CONVERT TO FLOASA
)@@G@@TING  @C@@][CI0055 DFLOAT A3,A4      . CONVERT TO FLOATING  @G[@@@CI0060SB
)@@G@@ DS    A4,CITRRG   . SAVE RITE ARG FOR CALLING OF TRIG ROUTINES   @C@[@@SC
)@@G@@       LX,U  X11,CI0070  . LOAD RETURN ADDRESS  @F[@@@       COMJMP A2,CSD
)@@G@@I0080 -7,DATANH -6,DACOSH -5,DASINH -4,CIRC01 ; @F@@@@                  SE
)@@G@@      -3,DATAN  -2,DACOS  -1,DASIN   0,CIRC02 ; @F@@@@                  SF
)@@G@@       1,DSIN    2,DCOS    3,DTAN    4,CIRC03 ; @F@@@@                  SG
)@@G@@       5,DSINH   6,DCOSH   7,DTANH            . @C@@@@CI0070 +     CITRRSH
)@@G@@G      . ADDRESS OF TRIG ARG  @ @@@@       +     $-INTERP,CIWKBK .@B@@@@SI
)@@G@@       LX    X11,CIXELE  . RESTORE X11    @D@@@@       DL    A1,A0      SJ
)@@G@@ . LOAD RESULT FOR RETURN     @C@@@@       LMJ   X11,1,X11   . NORMAL EXSK
)@@G@@IT FOR DFL  @ @@@@       J     CI0040      .    @B@@@@CI0080 LX    X11,CSL
)@@G@@IXELE  . RESTORE X11    @ @@@@       J     0,X11       .    @F@@@@.     SM
)@@G@@                                                     AND    @F@@@@ DYADESN
)@@G@@F *ALGAND ZMOHFI,ZMOHFI,IN5101 ZMODFL,ZMOHFI,IN5103   *1D   @D@@@@IN5101SO
)@@G@@ JHNLGL A2,0,X11   . BE SURE LEFTARG IS LOGICAL @B@@@@       JHNLGL A5,0SP
)@@G@@,X11   . DITTO THE RIGHT@D@@@@       AND   A2,A5      . BOTH ARE GOOD, SSQ
)@@G@@O AND THEM  @D@@@@       LA    A2,A3      . PUT ANSWER WHERE IT BELONGS SR
)@@G@@@A@@@@       LMJ   X11,1,X11  . AND RETURN@ @@@@       J     IN5101     SS
)@@G@@.     @F@@@@IN5103 JDNLGL A4,0,X11   . JUMP IF RITEARG (A4,5) NOT LOGICAST
)@@G@@L     @E@@@@       JDNLGL A1,0,X11   . AND LEFTARG MUST BE LOGICAL, TOO SU
)@@G@@@ @@@@       AND   A2,A5      .     @ @@@@       LA    A2,A3      .     SV
)@@G@@@ @@@@       LMJ   X11,1,X11  .     @ @@@@       J     IN5103     .     SW
)@@G@@@F@@@@.                                                          OR     SX
)@@G@@@F@@@@ DYADEF *ALGOR ZMOHFI,ZMOHFI,IN5110  ZMODFL,ZMOHFI,IN5113   *0D   SY
)@@G@@@D@@@@IN5110 JHNLGL A2,0,X11   . BE SURE LEFTARG IS LOGICAL @B@@@@      SZ
)@@G@@ JHNLGL A5,0,X11   . DITTO THE RIGHT@A@@@@       OR    A2,A5      . OR TTA
)@@G@@HEM   @E@@@@       LA    A2,A3      . AND PUT RESULT IN PROPER PLACE    TB
)@@G@@@ @@@@       LMJ   X11,1,X11  .     @ @@@@       J     IN5110     .     TC
)@@G@@@F@@@@IN5113 JDNLGL A4,0,X11   . JUMP IF RITEARG (A4,5) NOT LOGICAL     TD
)@@G@@@E@@@@       JDNLGL A1,0,X11   . AND LEFTARG MUST BE LOGICAL, TOO @ @@@@TE
)@@G@@       OR    A2,A5      .     @ @@@@       LA    A2,A3      .     @ @@@@TF
)@@G@@       LMJ   X11,1,X11  .     @ @@@@       J     IN5113     .     @F@@@@TG
)@@G@@.                                                          NAND   @F@@@@TH
)@@G@@ DYADEF *ALGNAN ZMOHFI,ZMOHFI,IN5115 ZMODFL,ZMOHFI,IN5118    0D   @D@@@@TI
)@@G@@IN5115 JHNLGL A2,0,X11   . BE SURE LEFTARG IS LOGICAL @B@@@@       JHNLGTJ
)@@G@@L A5,0,X11   . DITTO THE RIGHT@B@@@@       AND   A2,A5      . AND THEM, TK
)@@G@@AND   @C@@@@       LA,U  A2,1       . SUBTRACT THE RESULT   @F@@@@      TL
)@@G@@ ANA   A2,A3      . FROM 1 ( IN ORDER TO GET COMPLEMENT )   @ @@@@      TM
)@@G@@ LMJ   X11,1,X11  .     @^@@@@       J     IN5115     @F@@@@IN5118 JDNLGTN
)@@G@@L A4,0,X11   . JUMP IF RITEARG (A4,5) NOT LOGICAL     @E@@@@       JDNLGTO
)@@G@@L A1,0,X11   . AND LEFTARG MUST BE LOGICAL, TOO @ @@@@       AND   A2,A5TP
)@@G@@      .     @ @@@@       LA,U  A2,1       .     @ @@@@       ANA   A2,A3TQ
)@@G@@      .     @ @@@@       LMJ   X11,1,X11  .     @ @@@@       J     IN511TR
)@@G@@8     .     @F@@@@.                                                     TS
)@@G@@     NOR    @F@@@@ DYADEF *ALGNOR ZMOHFI,ZMOHFI,IN5120 ZMODFL,ZMOHFI,IN5TT
)@@G@@123    0D   @D@@@@IN5120 JHNLGL A2,0,X11   . BE SURE LEFTARG IS LOGICAL TU
)@@G@@@B@@@@       JHNLGL A5,0,X11   . DITTO THE RIGHT@A@@@@       OR    A2,A5TV
)@@G@@      . OR THEM   @B@@@@       LA,U  A2,1       . AND COMPLEMENT  @A@@@@TW
)@@G@@       ANA   A2,A3      . THE RESULT@ @@@@       LMJ   X11,1,X11  .     TX
)@@G@@@^@@@@       J     IN5120     @F@@@@IN5123 JDNLGL A4,0,X11   . JUMP IF RTY
)@@G@@ITEARG (A4,5) NOT LOGICAL     @E@@@@       JDNLGL A1,0,X11   . AND LEFTATZ
)@@G@@RG MUST BE LOGICAL, TOO @ @@@@       OR    A2,A5      .     @ @@@@      UA
)@@G@@ LA,U  A2,1       .     @ @@@@       ANA   A2,A3      .     @ @@@@      UB
)@@G@@ LMJ   X11,1,X11  .     @ @@@@       J     IN5123     .     @G@@@@.     UC
)@@G@@                                                              LESS@F@@@@UD
)@@G@@ DYADEF *ALESS  ZMOHFI,ZMOHFI,IN5300 ZMODFL,ZMOHFI,IN5305   *0D   @ @@@@UE
)@@G@@IN5300 ANA   A5,A2       .    @ @@@@       LA,U  A2,1        .    @C@@@@UF
)@@G@@       TZ    A5          . TEST FOR +0 OR -0    @C@@@@       TP    A5   UG
)@@G@@       . TEST FOR A2 < A5     @ @@@@       LA,U  A2,0        .    @ @@@@UH
)@@G@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5300      .    @ @@@@UI
)@@G@@IN5305 FUZDIF A4,A1      .    @ @@@@       LA,U  A2,1        .    @C@@@@UJ
)@@G@@       TZ    A4          . TEST FOR +0 OR -0    @C@@@@       TP    A4   UK
)@@G@@       . TEST FOR A1 < A4     @ @@@@       LA,U  A2,0        .    @ @@@@UL
)@@G@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5305      .    @G@@@@UM
)@@G@@.                                                            NOT GREATERUN
)@@G@@@F@@@@ DYADEF *ALEQ   ZMOHFI,ZMOHFI,IN5310  ZMODFL,ZMOHFI,IN5315  *1D . UO
)@@G@@@ @@@@IN5310 ANA   A5,A2       .    @ @@@@       LA,U  A2,1        .    UP
)@@G@@@C@@@@       JZ    A5,$+3      . TEST FOR +0 OR -0    @C@@@@       TP   UQ
)@@G@@ A5          . TEST FOR A2 < A5     @ @@@@       LA,U  A2,0        .    UR
)@@G@@@ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5310      .    US
)@@G@@@ @@@@IN5315 FUZDIF A4,A1      .    @ @@@@       LA,U  A2,1        .    UT
)@@G@@@C@@@@       DJZ   A4,$+3      . TEST FOR +0 OR -0    @C@@@@       TP   UU
)@@G@@ A4          . TEST FOR A1 < A4     @ @@@@       LA,U  A2,0        .    UV
)@@G@@@ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5315      .    UW
)@@G@@@G@@@@.                                                                 UX
)@@G@@ EQUAL@E@@@@ DYADEF *AEQUL ZMOHFI,ZMOHFI,IN5320 ZMODFL,ZMOHFI,IN5325 ;  UY
)@@G@@@E@@@@          ZMOCHR,ZMOHFI,IN5322 ZMOINT,ZMOHFI,IN5327  *1D    @ @@@@UZ
)@@G@@IN5320 ANA   A5,A2       .    @ @@@@       LA,U  A2,1        .    @C@@@@VA
)@@G@@       TZ    A5          . TEST FOR +0 OR -0    @ @@@@       LA,U  A2,0 VB
)@@G@@       .    @ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN532VC
)@@G@@0      .    @B@@@@IN5322 LA,U  A2,1   . SET RESULT TRUE     @C@@@@      VD
)@@G@@ TE    A1,A4  . ARE THEY REALLY EQUAL?    @C@@@@       LA,U  A2,0   . NOVE
)@@G@@, CHANGE FLAG TO FLASE  @ @@@@       LMJ   X11,1,X11   .    @^@@@@      VF
)@@G@@ J     IN5322 .   @ @@@@IN5325 FUZDIF A4,A1      .    @ @@@@       LA,U VG
)@@G@@ A2,1        .    @C@@@@       TZ    A4          . TEST FOR +0 OR -0    VH
)@@G@@@ @@@@       LA,U  A2,0        .    @ @@@@       LMJ   X11,1,X11   .    VI
)@@G@@@ @@@@       J     IN5325      .    @E@@@@IN5327 LA,U  A2,0   . MODE MISVJ
)@@G@@MATCH-- RESULT IS ALWAYS FALSE@ @@@@       LMJ   X11,1,X11   .    @^@@@@VK
)@@G@@       J     IN5327 .   @G@@@@.                                         VL
)@@G@@                      NOT LESS@F@@@@ DYADEF *AGEQ  ZMOHFI,ZMOHFI,IN5330 VM
)@@G@@ZMODFL,ZMOHFI,IN5335  *1D     @ @@@@IN5330 ANA   A5,A2       .    @ @@@@VN
)@@G@@       LA,U  A2,1        .    @C@@@@       JZ    A5,$+3      . TEST FOR VO
)@@G@@+0 OR -0    @C@@@@       TN    A5          . TEST FOR A2 > A5     @ @@@@VP
)@@G@@       LA,U  A2,0        .    @ @@@@       LMJ   X11,1,X11   .    @ @@@@VQ
)@@G@@       J     IN5330      .    @ @@@@IN5335 FUZDIF A4,A1      .    @ @@@@VR
)@@G@@       LA,U  A2,1        .    @C@@@@       DJZ   A4,$+3      . TEST FOR VS
)@@G@@+0 OR -0    @C@@@@       TN    A4          . TEST FOR A1 > A4     @ @@@@VT
)@@G@@       LA,U  A2,0        .    @ @@@@       LMJ   X11,1,X11   .    @ @@@@VU
)@@G@@       J     IN5335      .    @G@@@@.                                   VV
)@@G@@                             GREATER@F@@@@ DYADEF *AGRTR ZMOHFI,ZMOHFI,IVW
)@@G@@N5340 ZMODFL,ZMOHFI,IN5346  *0D     @ @@@@IN5340 ANA   A5,A2       .    VX
)@@G@@@ @@@@       LA,U  A2,1        .    @C@@@@       TZ    A5          . TESVY
)@@G@@T FOR +0 OR -0    @C@@@@       TN    A5          . TEST FOR A2 > A5     VZ
)@@G@@@ @@@@       LA,U  A2,0        .    @ @@@@       LMJ   X11,1,X11   .    WA
)@@G@@@ @@@@       J     IN5340      .    @ @@@@IN5346 FUZDIF A4,A1      .    WB
)@@G@@@ @@@@       LA,U  A2,1        .    @C@@@@       TZ    A4          . TESWC
)@@G@@T FOR +0 OR -0    @C@@@@       TN    A4          . TEST FOR A1 > A4     WD
)@@G@@@ @@@@       LA,U  A2,0        .    @ @@@@       LMJ   X11,1,X11   .    WE
)@@G@@@ @@@@       J     IN5346      .    @G@@@@.                             WF
)@@G@@                                 NOT EQUAL@E@@@@ DYADEF *AUNEQL ZMOHFI,ZWG
)@@G@@MOHFI,IN5350 ZMODFL,ZMOHFI,IN5355 ; @E@@@@             ZMOCHR,ZMOHFI,IN5WH
)@@G@@352 ZMOINT,ZMOHFI,IN5357   *0D@ @@@@IN5350 ANA   A5,A2       .    @ @@@@WI
)@@G@@       LA,U  A2,1        .    @C@@@@       TNZ   A5          . TEST FOR WJ
)@@G@@NONZERO     @ @@@@       LA,U  A2,0        .    @ @@@@       LMJ   X11,1WK
)@@G@@,X11   .    @ @@@@       J     IN5350      .    @B@@@@IN5352 LA,U  A2,1 WL
)@@G@@  . SET RESULT TRUE     @C@@@@       TNE   A1,A4  . ARE THEY REALLY UNUQWM
)@@G@@UAL?  @B@@@@       LA,U  A2,0   . NO, SET RESULT FALES@ @@@@       LMJ  WN
)@@G@@ X11,1,X11   .    @ @@@@       J     IN5352      .    @ @@@@IN5355 FUZDIWO
)@@G@@F A4,A1      .    @ @@@@       LA,U  A2,1        .    @C@@@@       TNZ  WP
)@@G@@ A4          . TEST FOR NONZERO     @ @@@@       LA,U  A2,0        .    WQ
)@@G@@@ @@@@       LMJ   X11,1,X11   .    @ @@@@       J     IN5355      .    WR
)@@G@@@E@@@@IN5357 LA,U  A2,1   . IF MODE MISMATCH, RESULT ALWAYS TRUE  @ @@@@WS
)@@G@@       LMJ   X11,1,X11   .    @^@@@@       J     IN5357 .   @ @@@@      WT
)@@G@@ VARBLS            .    @D@@@@PWBASE RES   2           . BASE CALL SEQ LWU
)@@G@@OCATION     @D@@@@PWEXPN RES   2           . EXPN CALL SEQ LOCATION     WV
)@@G@@@G@@@@MTHLNK RES   1           . TEMPORARY FOR X11 WHEN CALLING MTHLIB RWW
)@@G@@OUTINE@ @@@@LOGLFT RES   2           .    @ @@@@LOGRIT RES   2          WX
)@@G@@ .    @F@@@@CITRRG RES   2           . PLACE FOR PASSING ARG TO TRIG ROUWY
)@@G@@TINES @ @@@@CIWKBK RES   1           .    @ @@@@CIXELE RES   1          WZ
)@@G@@ .    @E@@@@BCLEFT RES   2           . TEMP STORAGE USED BY BCPROC IN   XA
)@@G@@@D@@@@BCRITE RES   2           . FINDING BINOMIAL COEFF.    @G@@@@/. TABXB
)@@G@@LE ENTRIES FOR DYADIC MIXED OPRS (WHICH HAVE THEIR OWN SUBRTNES)  @[@@@@XC
)@@G@@.     @ @@@@       INSTRS            .    @A@@@@       DYADEF ASIZE RESHXD
)@@G@@AP    .     @A@@@@       DYADEF ARAVEL CATEN    .     @A@@@@       DYADEXE
)@@G@@F AINDEX INDXOF   .     @A@@@@       DYADEF AMEMBR MBRSHP   .     @A@@@@XF
)@@G@@       DYADEF AREDUC COMPRS   .     @A@@@@       DYADEF ARDFIR COMFIR   XG
)@@G@@.     @A@@@@       DYADEF AXPAND EXPAND   .     @A@@@@       DYADEF AXPFXH
)@@G@@IR EXPFIR   .     @A@@@@       DYADEF AXPOSE TRANSP   .     @A@@@@      XI
)@@G@@ DYADEF AREVER ROTATE   .     @A@@@@       DYADEF ARVFIR ROTFIR   .     XJ
)@@G@@@ @@@@       DYADEF ATAKE TAKE .    @ @@@@       DYADEF ADROP DROP .    XK
)@@G@@@ @@@@       DYADEF AROLL DEAL .    @A@@@@       DYADEF ADCODE DECODE   XL
)@@G@@.     @A@@@@       DYADEF ANCODE ENCODE   .     @A@@@@       DYADEF ASYSXM
)@@G@@TM DIBEAM   .     @E@@[[        DYADEF ADOMNO DOMINO  . DYADIC LINEAR EQXN
)@@G@@N SOLUTION  @^@@@@ DYADEF ASTORE IN5800 . @^@@@@IN5800 LMJ   X11,STORE .XO
)@@G@@@D@@@@       J     IN9900      . JUMP TO ERROR REPORTER     @C@@@@      XP
)@@G@@ SX,H2 X11,STOFLG  . TURN ON STORE FLAG   @C@@@@       J     IN9500     XQ
)@@G@@ . GO DO NEXT OPERATION @[@@@@.     @A@@@@. GENERATE PRIMARY DYADIC OP TXR
)@@G@@ABLE  @[@@@@.     @#@@@@       CONSTS .   @#@@@@DYADS* DYATBL .   @[@@@@XS
)@@G@@.     @#@@@@       INSTRS .   @B@@@@. TEMPORARY PATCH FOR ERROR REPORTINXT
)@@G@@G--   @ @@@@IN9000 ERROR YWSFUL,IN9900 .  @ @@@@IN9010 ERROR YUNIMP,IN99XU
)@@G@@00  . @G@@@@/. COME HERE TO CALL EXTERNAL SUBROUTINES FOR MIXED OPRS-- AXV
)@@G@@DDR IS IN A2@[@@@@.     @ @@@@       INSTRS            .    @C@@@@IN6000XW
)@@G@@ LMJ   X11,0,A0    . CALL THE ROUTINE     @F@@@@       J     IN9600     XX
)@@G@@ . ERROR, GO GARBAGE COLLECT THE ARGUMENTS@B@@@@       J     IN9500     XY
)@@G@@ . NORMAL EXIT    @D@@@@/. GARBAGE COLLECTION AND EXIT AFTER EACH INSTRUXZ
)@@G@@CTION @[@@@@.     @B@@@@. NORMAL TERMINATION OF LAST INSTRUCTION  @[@@@@YA
)@@G@@.     @C@@@@IN9500 SZ    INEFLG      . TURN ERROR FLAG OFF  @B@@@@      YB
)@@G@@ J     IN9610      . GO CLEAN UP    @^@@@@. ERROR TERMINATION     @ @@@@YC
)@@G@@IN9600 LA,U  A0,1        .    @C@@@@       SA    A0,INEFLG   . TURN ON EYD
)@@G@@RROR FLAG   @[@@@@.     @D@[@@IN9610 LA    A6,LFTDSC   . LEFT ARG DESCRIYE
)@@G@@PTOR ADDR   @D@[@@       JZ    A6,IN9620   . IF NONE, GO LOOK AT RITEARGYF
)@@G@@@B@[@@       LMJ   X11,ERASET  . ELSE ERASE IT  @ @[@@       J     IN990YG
)@@G@@0      .    @ @[@@       SZ    LFTDSC      .    @D@[@@IN9620 LA    A6,RIYH
)@@G@@TDSC   . RITE ARG DESCRIPTOR ADDR   @B@[@@       JZ    A6,IN9630   . IF YI
)@@G@@NONE, EXIT  @C@[@@       LMJ   X11,ERASET  . ELSE GET RID OF IT   @ @[@@YJ
)@@G@@       J     IN9900      .    @C@[@@       SZ    RITDSC      . AND MARK YK
)@@G@@IT GONE     @D@@[[IN9610  LMJ    X11,ERASEA     . ERASE THE ARGUMENTS   YL
)@@G@@@A@@[[        J      IN9900         .     @[E@@@.     @C@@@@IN9630 TZ   YM
)@@G@@ INEFLG      . WAS THERE AN ERROR?  @E@@@@       J     IN9900      . YESYN
)@@G@@, TAKE ERROR EXIT TO CALLER   @E@@@@       J     IN0010      . NO, GO FEYO
)@@G@@TCH NEXT INSTRUCTION    @[@@@@.     @ @@@@IN9900 LX    X11,INLINK .     YP
)@@G@@@B@@@@       J     0,X11       . ERROR EXIT     @#@@@@       VARBLS .   YQ
)@@G@@@ @@@@INSTIX RES   2           .    @#@@@@INLINK RES   1 .  @E@@@@STOFLGYR
)@@G@@* RES  1           . FLAG USED TO INDICATE STORES     @#@@@@INAREG RES  YS
)@@G@@ 2    @ @@@@INEFLG EQUF  $,,H1       .    @ @@@@       RES   1          YT
)@@G@@ .    @F@@@@.                          FORTRAN CALLING SEQUENCE LOCATIONYU
)@@G@@S     @A@@@@FORARG RES   2           . ARG LOC  @C@@@@FORWBK RES   1    YV
)@@G@@       . FORTRAN WALKBACK WORD@D@@@@FORLNK RES   1           . TEMPORARYYW
)@@G@@ SAVE FOR X11     @]@@@@       END .___    DYADEF ANCODE ENCODE   .     YX
)@@G@@@A@@@@       DYADEF ASYSTM DIBEAM   .     @E@@[[        DYADEF ADOMNO DOYY
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************YZ
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APZA
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         ZB
)@@G@@                            * @G@@@@       AXR$         .               ZC
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSZD
)@@G@@EMBLY PARAMETERS                        * @G@@@@       WSDEF.      DEFINZE
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.ZF
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTZG
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONZH
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@ZI
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * ZJ
)@@G@@@G@@@@.                                                                 ZK
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                ZL
)@@G@@          * @G@@@@. ****************************************************ZM
)@@G@@***************** @[@@@@.     @E@@@@/. DEPENDENCY LIST CREATOR FOR LISTSZN
)@@G@@/TREES/RINGS/WHATEVER   @G@@@@.     THIS ROUTINE BUILDS A LIST OF DESCRIZO
)@@G@@PTOR ADDRS AND ASSOCIATED     @G@@@@. REFCNTS.  THE RESULTING COUNT IS TZP
)@@G@@HE NUMBER OF REFERENCES WHICH ARE   @G@@@@. DEPENDENT UPON POINTERS INTOZQ
)@@G@@ THE LIST FROM THE OUTSIDE ENVIRONMENT.   @G@@@@. A ZERO COUNT INDICATESZR
)@@G@@ THAT THE ELEMENT BELONGS TO NO LIST OUTSIDE THE@D@@@@. CURRENT ONE (ANDZS
)@@G@@ THUS, FOR EXAMPLE COULD BE ERASED).@B@@@@.     THE TECHNIQUE USED IS THZT
)@@G@@E FOLLOWING-@G@@@@.  (1) A LEFT-TO-RIGHT RECURSIVE PASS THROUGH THE LISTZU
)@@G@@ IS MADE.  THE 1ST@G@@@@.      TIME AN ELEMENT IS ENCOUNTERED, IT IS TABZV
)@@G@@ULATED, ALONG WITH ITS  @G@@@@.      REFERENCE COUNT; SUBSEQUENT ENCOUNTZW
)@@G@@ERS MERELY DECREMENT THE REFCT@G@@@@.  (2) AT THE END OF THE 1ST PASS, OZX
)@@G@@BJECTS WITH ONLY INTERNAL POINTERS  @G@@@@.      WILL HAVE A ZERO COUNT ZY
)@@G@@VALUE.  THOSE WITH COUNTS OF 'N' HAVE 'N' @F@@@@.      POINTERS TO THEM ZZ
)@@G@@FROM SOMEWHERE OUTSIDE THE CURRENT LIST.  @G@@@@.  (3) IF THE COUNT FOR AA
)@@G@@THE ORIGINAL TOP OF THE LIST IS NON-ZERO, THEN  @F@@@@.      IT IS NOT IAB
)@@G@@NDEPENDENT, HENCE NOTHING ELSE CAN BE EITHER. A @ @@@@.      SPECIAL EXIAC
)@@G@@T IS TAKEN. @G@@@@.  (4) IF ALL COUNTS ARE ZERO, THEN THE LIST IS SELF-CAD
)@@G@@ONTAINED. ANOTHER @ @@@@.      SPECIAL EXIT IS TAKEN  @G@@@@.  (5) IF THAE
)@@G@@E HEAD OF THE LIST HAS A ZERO COUNT, BUT OTHER ELEMENTS DO  @G@@@@.     AF
)@@G@@ NOT, ONLY SOME OF THE LIST IS INDEPENDENT (POSSIBLY ONLY THE     @B@@@@AG
)@@G@@.      HEAD).  A SECOND PASS IS INITIATED.@G@@@@.  (6) FOR THE SECOND PAAH
)@@G@@SS, A DUMMY LIST CONSITING OF THE ELEMENTS WITH @G@@@@.      NON-ZERO COAI
)@@G@@UNTS IS FORMED.  SINCE THIS LIST IS DEPENDENT ON THE  @F@@@@.      OUTSIAJ
)@@G@@DE UNIVERSE, ANYTHING IN IT IS SIMILARLY DEPENDENT    @G@@@@.  (7) THE DAK
)@@G@@UMMY LIST IS TRACED, AGAIN LEFT TO RIGHT. EACH ENCOUNTER    @E@@@@.     AL
)@@G@@ WITH AN ELEMENT CAUSES ITS TALLY TO BE INCREMENTED.  @G@@@@.  (8) AT THAM
)@@G@@E END OF THE 2ND PASS, EACH TALLY REPRESENTS THE TOTAL NO   @G@@@@.     AN
)@@G@@ OF REFERENCES TO EACH ELEMENT WHICH ARE DEPENDENT ON THE OUTSIDE @#@@@@AO
)@@G@@.      UNIVERSE.  @G@@@@. NOTE: THE SAME STACK IS USED ON PASSES 1 AND 2AP
)@@G@@ FOR THE RECURSIVE TRACE@G@@@@.     ON PASS 1, AN ELEMENT IS ENTERED (ANAQ
)@@G@@D SCANNED) IFF IT HAS NOT     @G@@@@.     ALREADY BEEN STACKED, BUT ON PAR
)@@G@@ASS 2 IT WILL ALREADY APPEAR.  THE  @G@@@@.     FLAG INDICATING WHETHER AS
)@@G@@AN ELEMENT HAS BEEN SEEN ON PASS 2 IS THE @G@@@@.     SIGN OF THE TALLY-AT
)@@G@@ BETWEEN PASSES 1 AND 2, TALLYS ARE SET NEGATIVE@[@@@@.     @#@@@@P     AU
)@@G@@ PROC    .  @G@@@@SETREF* NAME   . GET REFCNT OF BLOK WITH RELADR IN A2 AV
)@@G@@AND DECREMENT IT  @#@@@@       UNLI$T  .  @D@@@@       LA,H2 A2,0,A0    AW
)@@G@@ . GET DESCR ADDR FROM TABLE  @^@@@@       ABSADR A2    .   @B@@@@      AX
)@@G@@ LA,S1 A3,0,A2     . GET BLOCK TYPE @F@@@@       LA,H1 A4,1,A2     . ASSAY
)@@G@@UMING EXPLICIT NAMEBLOK, GET REFCNT @C@@@@       TE,U  A3,ZTPNAM   . WASAZ
)@@G@@ IT EXPLICIT NAME?@E@@@@       LA,H2 A4,2,A2     . NO, GET REFCT FOR IMPBA
)@@G@@LICIT NAME  @F@@@@       ANA,U A4,1        . DECREMENT IT, THEREBY COUNTBB
)@@G@@ING THIS REF@D@@@@       SA,H1 A4,0,A0     . PUT REFCNT INTO TABLE ENTRYBC
)@@G@@@D@@@@       RELADR A2         . RESTORE ADDR OF POINTER    @ @@@@      BD
)@@G@@ LI$T              .    @ @@@@       END               .    @B@@@@/. DRIBE
)@@G@@VER TO CREATE DEPENDENCY TABLE-     @G@@@@.     SINCE WE NEED TO ACCESS BF
)@@G@@REFCNTS ASSOCIATED WITH NAMES, A6 SHOULD  @D@@@@. BE A POINTER TO THE NABG
)@@G@@MEBLOK, NOT THE DATA VALUE    @[@@@@.     @#@@@@       INSTRS  .  @[@@@@BH
)@@G@@.     @ @@@@DDTABL* SX   X11,DDLINK  .    @[@@@@.     @D@@@@DD0100 LA,U BI
)@@G@@ A0,LRTABL   . SET BASE OF DESCR TABLE    @C@@@@       SA    A6,0,A0    BJ
)@@G@@ . AND POST HEAD OF LIST@F@@@@       SETREF            . SO WE CAN PUT RBK
)@@G@@EFERENCE COUNT IN IT    @E@@@@       LA,U  A0,1        . TABLE NOW CONTABL
)@@G@@INS A SINGLE ENTRY@C@@@@       SA    A0,LRTSIZ   . SO POST THAT FACT    BM
)@@G@@@C@@@@       LMJ   X11,PIKLFU  . SET UP TO FETCH IT   @ @@@@       ER   BN
)@@G@@ ERR$        .    @C@@@@       LMJ   X11,SLTRC1  . AND GO DO PASS 1     BO
)@@G@@@ @@@@       J     DD0900      .    @[@@@@.     @C@@@@. PASS 1 DONE, CHEBP
)@@G@@CK WHETHER RETRACE IS NEEDED  @[@@@@.     @ @@@@DD0200 LR    R1,LRTSIZ  BQ
)@@G@@ .    @ @@@@       LX    A0,LRTBAS   .    @F@@@@       LA,H1 A2,1,A0    BR
)@@G@@ . GET REFCNT FOR HEAD OF LIST FROM TABLE @F@@@@       JNZ   A2,DD0700  BS
)@@G@@ . IF NON-ZERO, NOTHING IS INDEPENDENT    @B@@@@. LOOP THRU TABLE FOR NOBT
)@@G@@N-ZERO ENTRIES    @E@@@@       SNE,H1 A2,1,*A0   . ARE THERE ANY NON-ZERBU
)@@G@@O ENTRIES   @E@@@@       J     DD0710      . NO- ENTIRE LIST IS INDEPENDBV
)@@G@@ENT   @F@@@@. NON-ZERO ENTRIES DETECTED, SET UP SUBLIST SCAN OF DUMMY LIBW
)@@G@@ST    @D@@@@                         . MOVE ZERO ENTRY TO THE END @C@@@@BX
)@@G@@       LMJ   X11,SLTRC2  . DO PASS 2 ON LIST    @F@@@@       ER    ERR$ BY
)@@G@@       . WHICH CANNOT BREAK, SINCE PASS 1 WORKED@ @@@@       LX    X11,DBZ
)@@G@@DLINK  .    @C@@@@       J     1,X11       . TAKE NORMAL EXIT     @[@@@@CA
)@@G@@.     @ @@@@. EXIT FOR NOTHING INDEPENDENT@[@@@@.     @ @@@@DD0700 LA,U CB
)@@G@@ A0,0        .    @ @@@@       J     DD0800      .    @[@@@@.     @A@@@@CC
)@@G@@. EXIT FOR EVERYTHING INDEPENDEND   @[@@@@.     @ @@@@DD0710 LA,U  A0,1 CD
)@@G@@       .    @ @@@@       J     DD0800      .    @[@@@@.     @ @@@@. EXITCE
)@@G@@ FOR MIXED CONDITIONS   @[@@@@.     @ @@@@DD0720 LA,U  A0,2        .    CF
)@@G@@@ @@@@       J     DD0800      .    @[@@@@.     @^@@@@. COMMON EXIT POINCG
)@@G@@T     @[@@@@.     @ @@@@DD0800 LX    X11,DDLINK  .    @ @@@@       J    CH
)@@G@@ 1,X11       .    @ @@@@       VARBLS            .    @ @@@@DDLINK EQUF CI
)@@G@@ $,,H1       .    @ @@@@       RES   1           .    @^@@@@/. SUBLIST TCJ
)@@G@@RACE RTNE.  @[@@@@.     @G@@@@.     THIS ROUTINE IS USED ON BOTH PASSES CK
)@@G@@TO TRAVERSE A LIST/SUBLIST IN @G@@@@. LEFT-TO-RIGHT RECURSIVE FASHION.  CL
)@@G@@ON PASS 1, THE LIST BEING SCANNED IS@G@@@@. A TRUE VARIABLE; ON PASS 2, CM
)@@G@@IT IS THE DUMMY SUBLIST.  SINCE THESE ARE @G@@@@. STORED DIFFERENTLY, WECN
)@@G@@ REQUIRE THAT THE CALLER INITIALIZE THE REGS    @G@@@@. USED FOR SCANNINCO
)@@G@@G (X4,X5 AND A14).  THIS MEANS THAT THE HEAD (OR DUMMY@G@@@@. HEAD) OF TCP
)@@G@@HE LIST HAS ALREADY BEEN SCANNED, AND PLACED INTO THE STACK @C@@@@. AREACQ
)@@G@@ USED FOR DESCRIPTOR AND TALLY STORAGE.   @[@@@@.     @A@@@@. ENTRY POINCR
)@@G@@TS FOR PASSES 1 AND 2 - @[@@@@.     @ @@@@       INSTRS            .    CS
)@@G@@@B@@@@SLTRC1 LA,U  A0,0   . SET FLAG FOR PASS 1 @^@@@@       J     SL001CT
)@@G@@0 .   @A@@@@SLTRC2 LA,U  A0,1   . SET PASS2 FLAG@[@@@@.     @B@@@@SL0010CU
)@@G@@ SA    A0,SLPASS   . POST PASS FLAG @E@@@@       LX    X6,SLPUSH   . INICV
)@@G@@TIALIZE PUSHDN STACK POINTER  @[@@@@.     @D@@@@. ENTRY BELOW OCCURS WHECW
)@@G@@N WE RECURSIVELY CALL OURSELF @[@@@@.     @ @@@@SL0100 SX    X11,SLLINK CX
)@@G@@ .    @D@@@@. GET NEXT POINTER AND FIGURE OUT WHAT TO DO ABOUT IT @D@@@@CY
)@@G@@SL0200 JNGD  A14,SL0400  . QUIT WHEN THEY'RE ALL GONE @D@@@@       LMJ  CZ
)@@G@@ X4,0,X4     . BRING NEXT POINTER TO A2   @D@@@@       LR    R1,LRTSIZ  DA
)@@G@@ . GET CURRENT TABLE SIZE     @C@@@@       LX    A0,LRTBAS   . AND BASE/DB
)@@G@@INCREMENT   @D@@@@       SE,H2 A2,1,*A0    . IS THIS ENTITY TABULATED?  DC
)@@G@@@C@@@@       J     SL0230      . NO, GO PUT IT IN     @B@@@@. CURRENT ENDD
)@@G@@TRY IS ALREADY IN THE STACK   @C@@@@SL0210 LA    A1,LSTALY   . PICK UP TDE
)@@G@@ALLY FIELD  @F@@@@       JN    A1,SL0220   . IF NEGATIVE, 1ST ENCOUNTER,DF
)@@G@@ PASS 2     @E@@@@       ANA,U A1,1        . ASSUME PASS 1 AND DECREMENTDG
)@@G@@ TALLY@C@@@@       TZ    SLPASS      . IS IT REALLY PASS 1? @G@@@@      DH
)@@G@@ AA,U  A1,1+1      . NO- UNDO DECREMENT AND INCREMENT INSTEAD     @C@@@@DI
)@@G@@       SMA   A1,LSTALY   . SAVE UPDATED TALLY   @G@@@@       J     SL020DJ
)@@G@@0      . AND CONTINUE SCAN OF THE CURRENT POINTER     @E@@@@. 1ST ENCOUNDK
)@@G@@TER, PASS 2.  MARK ENTRY ENCOUNTERED, SCAN IT   @G@@@@SL0220 ANA,U A1,1 DL
)@@G@@       . DECREMENT NEG VAL IS EQUIV TO INCREMENTING IT@G@@@@       SMA  DM
)@@G@@ A1,LSTALY   . FORCE POSITIVE SO WE KNOW WE'VE BEEN HERE    @F@@@@      DN
)@@G@@ J     SL0300      . GO DECODE AND (IF ITS A LIST) RECURSE  @]@@@@. NEW DO
)@@G@@ENTRY @B@@@@SL0230 TZ    SLPASS      . IS THIS PASS 1?@G@@@@       ER   DP
)@@G@@ ERR$        . EGAD, HOW DID WE MISS THIS THE 1ST TIME?     @G@@@@      DQ
)@@G@@ TLE   A0,SLSBAS   . WOULD ENTERING THIS ZAP THE RECURSION STACK? @F@@@@DR
)@@G@@       J     SL0900      . YES- LIST TOO COMPLEX TO TRACE, GIVE UP@B@@@@DS
)@@G@@       SA    A2,0,A0     . NO, PUT IT IN  @D@@@@       LA    A1,LRTSIZ  DT
)@@G@@ . GET CURRENT TABLE SIZE     @A@@@@       AA,U  A1,1        . BUMP IT  DU
)@@G@@@D@@@@       SA    A1,LRTSIZ   . POST UPDATED TABLE SIZE    @C@@@@      DV
)@@G@@ SETREF            . GET REFCNT TO A4     @B@@@@       SA,H1 A4,0,A0    DW
)@@G@@ . AND TABULATE IT@ @@@@                         .    @D@@@@. EXAMINE CUDX
)@@G@@RRENT TARGET, RECURSE IF IT'S A POINTER   @ @@@@.                       DY
)@@G@@ .    @G@@@@SL0300 LA    A6,A2       . PUT REL NAMEBLOK ADDR WHERE ITS EDZ
)@@G@@XPECTED     @E@@@@       VERIFW            . DECODE NAMEBLOK- FIND THE VEA
)@@G@@ALUE  @F@@@@       JNE,U A3,ZMOPTR SL0200 . IF NOT POINTER, GO SCAN NEXTEB
)@@G@@ FIELD@E@@@@. CURRENT TARGET IS POINTER - SCAN THE SUBLIST IT DEFINES   EC
)@@G@@@D@@@@SL0310 LA    A0,SLLINK   . RECOVER OUR ENTRY LINKAGE  @C@@@@      ED
)@@G@@ LXI,U A0,A14      . AND CURRENT LOOP CT  @B@@@@       DL    A1,X4      EE
)@@G@@ . GET PICKREGS   @D@@@@       TSTO  A0,0,*X6    . STACK THE IMPORTANT SEF
)@@G@@TUFF  @G@@@@       LMJ   X11,PIKLFU  . INITIALIZE SCAN OF NEWLY ENCOUNTEEG
)@@G@@RED ELEMENT @C@@@@       ER    ERR$        . WHICH CANNOT FAIL    @D@@@@EH
)@@G@@       LMJ   X11,SL0100  . AND CALL OURSELF TO SCAN IT@B@@@@       J    EI
)@@G@@ SL0330      . OOPS, ERROR    @D@@@@. HAVING FINISHED SUBLIST SCAN, RESTEJ
)@@G@@ORE AND CONTINUE  @D@@@@SL0320 AX,U  X6,3        . STEP RECURSION STACK EK
)@@G@@BACK  @D@@@@       TLD   A0,0,X6     . GET LAST SET OF ENTRIES    @D@@@@EL
)@@G@@       DS    A1,X4       . RESTORE FRG FETCH LINKAGE  @B@@@@       SA   EM
)@@G@@ A0,SLLINK   . RETURN LINKAGE @B@@@@       SSL   A0,18       . LINE UP LEN
)@@G@@OOP CT@B@@@@       LA    A14,A0      . RESTORE IT     @C@@@@       J    EO
)@@G@@ SL0200      . AND CONTINUE SCAN    @B@@@@. ERROR IN SUBLIST SCAN- TAKE EP
)@@G@@ERROR EXIT  @C@@@@SL0330 AX,U  X6,3        . GO BACK 1 STACK ENTRY@C@@@@EQ
)@@G@@       LX    X11,0,X6    . RECOVER THE LINKAGE  @B@@@@       J     0,X11ER
)@@G@@       . AND GET OUT    @[@@@@.     @ @@@@. END OF POINTER SCAN- GO HOMEES
)@@G@@@[@@@@.     @ @@@@SL0400 LX    X11,SLLINK  .    @ @@@@       J     1,X11ET
)@@G@@       .    @[@@@@.     @ @@@@. ERRORS IN SUBLIST SCANS     @[@@@@.     EU
)@@G@@@ @@@@SL0900 LX    X11,SLLINK  .    @F@@@@       J     0,X11       . STAEV
)@@G@@CK OFLO, LIST TOO COMPLEX TO HANDLE @[@@@@.     @ @@@@       VARBLS     EW
)@@G@@       .    @ @@@@LRTSIZ EQUF  $,,H1       .    @ @@@@       RES   1    EX
)@@G@@       .    @ @@@@SLLINK EQUF  $,,H1       .    @ @@@@SLPASS EQUF  $,,S4EY
)@@G@@       .    @ @@@@       RES   1           .    @[@@@@.     @ @@@@LRTABLEZ
)@@G@@ EQU   BUFF        .    @ @@@@LSTALY EQUF  0,A0,H1     .    @D@@@@SLSBASFA
)@@G@@ EQUF  0,X6,U      . STACK OFLO CHECK PARAMETER @ @@@@       CONSTS     FB
)@@G@@       .    @ @@@@LRTBAS +1,LRTABL-1       .    @G@@@@SLPUSH -3,BUFEND-2FC
)@@G@@       . THREE WRDS/STACK ENTRY  STACK BUILDS DOWN    @ @@@@       END  FD
)@@G@@             .    ___@@@       SA    A2,0,A0     . NO, PUT IT IN  @D@@@@FE
)@@G@@       LA    A1,LRTSIZ   . GET CURRENT TABLE SIZE     @A@@@@       AA,U FF
)@@G@@ A1,1        . BUMP IT  *[S@@@*SDFF*@G@@@@. ****************************FG
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUFH
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 FI
)@@G@@                                                    * @^@@@@       AXR$ FJ
)@@G@@        .   @C@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@FK
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * FL
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               FM
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 FN
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            FO
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACEFP
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL FQ
)@@G@@BLOCK TYPES                 * @G@@@@.                                   FR
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  FS
)@@G@@                                        * @G@@@@. **********************FT
)@@G@@*********************************************** @[@@@@.     @[@@@@.     FU
)@@G@@@A@@@@N      PROC .  GET NEXT LEXICAL ITEM@#@@@@NEXLEX* NAME .    @#@@@@FV
)@@G@@       UNLI$T .   @E@@@@       TNZ   LALOOK      . DID LAST SCAN PRODUCEFW
)@@G@@ LOOKAHEAD? @B@@@@       J     NL0010      . NO, GO SCAN    @C@@@@      FX
)@@G@@ DL    A0,LALTRM   . YES, RETRIEVE IT     @ @@@@       DL    A2,LALDTA  FY
)@@G@@ .    @B@@@@       J     NL0020      . AND GET OUT    @D@@@@NL0010 LMJ  FZ
)@@G@@ X11,LEXCAN  . PICK UP NEXT LEXICAL TOKEN @ @@@@       J     N(1,1)     GA
)@@G@@ .    @C@@@@NL0020 SZ    LALOOK      . TURN LOOKAHEAD OFF   @#@@@@      GB
)@@G@@ LI$T  .    @]@@@@       END .@[@@@@.     @#@@@@B      PROC .     @B@@@@GC
)@@G@@BURYL* NAME . HIDE EXTERNAL LOOKAHEAD     @#@@@@       UNLI$T .   @F@@@@GD
)@@G@@       TZ    LALOOK      . ANY PREVIOUS UNSERVICED LOOKAHEAD?     @C@@@@GE
)@@G@@       ER   ERR$         . YES, SYSTEM ERROR    @D@@@@       SX    X11,LGF
)@@G@@ALOOK  . NO, TURN ON LOOKAHEAD FLAG @A@@@@       DS    A0,LALTRM   . SAVGG
)@@G@@E DATA@ @@@@       DS    A2,LALDTA   .    @#@@@@       LI$T .     @]@@@@GH
)@@G@@       END .@[@@@@.     @A@@@@T      PROC    .  SAVE TEXT POINTERS@#@@@@GI
)@@G@@TXPSAV* NAME   .  @#@@@@       UNLI$T  .  @ @@@@       SX    X6,T(1,1)  GJ
)@@G@@ .    @ @@@@       SX    X7,T(1,1)+1 .    @ @@@@       LI$T             GK
)@@G@@ .    @ @@@@       END               .    @[@@@@.     @A@@@@T      PROC GL
)@@G@@   . LOAD TEXT POINTERS @#@@@@TXPLOD* NAME   .  @#@@@@       UNLI$T  .  GM
)@@G@@@ @@@@       LX    X6,T(1,1)   .    @ @@@@       LX    X7,T(1,1)+1 .    GN
)@@G@@@ @@@@       LI$T              .    @]@@@@       END  @[@@@@.     @C@@@@GO
)@@G@@T      PROC    . STASH DATA IN TEXT STORAGE AREA@#@@@@TSTASH* NAME   .  GP
)@@G@@@#@@@@       UNLI$T  .  @^@@@@       LMJ   X6,0,X6  . @D@@@@       J    GQ
)@@G@@ T(1,1)+(T(1)=0)*LA0910 . OOPS, WSFULL    @#@@@@       LI$T    .  @#@@@@GR
)@@G@@       END     .  @[@@@@.     @D@@@@T      PROC              . OPEN STORGS
)@@G@@AGE FOR TEXT LINE @#@@@@TXOPEN* NAME .    @#@@@@       UNLI$T .   @D@@@@GT
)@@G@@       TZ    TXTOPN      . HAS SPACE BEEN ALLOCATED?  @ @@@@       J    GU
)@@G@@ OUT         .    @D@@@@       DS    A0,LALTRM   . NO, TEMP SAVE ARG REGGV
)@@G@@S     @ @@@@       DS    A2,LADATA   .    @D@@@@       LMJ   X11,TEXSTO GW
)@@G@@ . IN9TIALIZE TEXT STORAGE    @ @@@@       J     T(1,1)      .    @ @@@@GX
)@@G@@       DL    A0,LALTRM   .    @ @@@@       DL    A2,LADATA   .    @[@@@@GY
)@@G@@OUT . @#@@@@       LI$T .     @]@@@@       END .@[@@@@.     @E@@@@/.    GZ
)@@G@@LEXICAL ANALYZER-- TABULATES NAMES AND CONSTANTS, ETC.@[@@@@.     @^@@@@HA
)@@G@@.      EXIT PARAMS--    @G@@@@.            A1=EXIT TYPE (0=EOL,1=SYSCMD,HB
)@@G@@2=LOCK/FUNC,3=EDCMD,4=DELETE) @D@@@@.            A0=FINAL CHAR (NEEDED FHC
)@@G@@OR FUNC/LOCK ONLY)@E@@@@.            A2=ADDR OF TEXT, IF ANY (EOL AND FUHD
)@@G@@NC/LOCK)    @C@@@@.            A3=NON-ZERO IF STMNT IS LABELED    @B@@@@HE
)@@G@@.                        ----- OR -----   @G@@@@.            A2,A3=DFLOAHF
)@@G@@T LINENO (EDIT CMND), A4=HALFINT CHARNO IF ANY  @[@@@@.     @ @@@@      HG
)@@G@@ STATEV            .    @#@@@@       INSTRS .   @B@@@@. ENTRY FOR ANALYSHH
)@@G@@IS OF NORMAL TEXT LINES @ @@@@LEXANL* SX   X11,LALINK .     @E@@@@      HI
)@@G@@ SZ    LABELF      . TURN OFF LABELED STATEMENT FLAG  @[@@@@.     @ @@@@HJ
)@@G@@LA0010 NEXLEX LA0960     .    @D@@@@       JZ    A1,LA0600   . IF NO TERHK
)@@G@@M, GO PROCESS OPR @F@@@@       JE,U  A1,1 LA0500 . IF NAME ENCOUNTERED, HL
)@@G@@GO PROCESS IT     @E@@@@. IF NEITHER NAME NOR OPR, MUST BE LIT.  INITIALHM
)@@G@@IZE FOR IT  @D@@@@LA0020 TXOPEN LA0999     . ACQUIRE SPACE, IF REQUIRED HN
)@@G@@@D@@@@       DS    A0,LATERM   . TEMP SAVE RESULTS OF SCAN  @ @@@@      HO
)@@G@@ DS    A2,LADATA   .    @F@@@@       TXPSAV LATXTP     . SAVE T-STRING PHP
)@@G@@OINTERS TO TEXT ENTRY   @B@@@@       LA,U  A0,LEXLIT*/15   . GET FLAG   HQ
)@@G@@@B@@@@       TSTASH LA0640     . PLUG IT IN     @F@@@@       LMJ   X11,THR
)@@G@@EXFWD  . FORCE T-STRING STORAGE MODE TO FULLWORD@ @@@@       J     LA042HS
)@@G@@0      .    @G@@@@       TXPSAV LADSCP     . SAVE POINTERS TO PLACE WE'LHT
)@@G@@L PLANT THE DESCR @C@@@@       SZ    LANELS      . CLEAR ELEMENT COUNTERHU
)@@G@@@F@@@@       LA    A1,LATERM+1 . RECOVER ORIGINAL TYPE OF RETURN FLAG   HV
)@@G@@@D@@@@       JE,U  A1,2 LA0300 . IF CHAR, GO PICK IT UP     @ @@@@/. COLHW
)@@G@@LECT NUMERIC LITERALS   @[@@@@.     @E@@@@LA0100 LA    A0,LANDSC   . DUMHX
)@@G@@MY DESCRIPTOR FOR NUMERIC     @C@@@@       TSTASH LA0410     . PUT INTO HY
)@@G@@T-STRING    @E@@@@       LMJ   X11,TEXDWD  . FORCE STORAGE MODE TO DOUBLHZ
)@@G@@EWORD @ @@@@       J     LA0420      .    @C@@@@. NOW PICK UP DATA VALS IA
)@@G@@AND STASH THEM IN THE WS@D@@@@LA0110 DL    A2,LADATA   . IF NECESSARY, RIB
)@@G@@ECOVER VAL  @ @@@@LA0120 TSTASH LA0410     .    @E@@@@       LA    A0,LAIC
)@@G@@NELS   . UPDATE CT OF NO OF ELS PICKED UP @ @@@@       AA,U  A0,1       ID
)@@G@@ .    @ @@@@       SA    A0,LANELS   .    @^@@@@. SCAN NEXT EL, IF ANY  IE
)@@G@@@E@@@@LA0130 LA    A0,LATERM   . CHAR WHICH STOPPED LAST SCAN     @E@@@@IF
)@@G@@       JNE,U A0,ASPACE LA0200 . IF NOT A SPACE, WE'RE DONE  @D@@@@      IG
)@@G@@ NEXLEX LA0412     . ELSE GET NEXT LEXICAL TOKEN@E@@@@       JG,U  A1,4 IH
)@@G@@LA0210 . IF NOT ANOTHER NUMERIC, EXIT     @C@@@@       SA    A0,LATERM  II
)@@G@@ . SAVE CLOSING CHAR    @F@@@@       JE    A1,LADTYP LA0120 . IF MODE UNIJ
)@@G@@CHANGED, GO STORE IT    @G@@@@       JNE,U A1,4 LA0140 . IF THIS ONE NOTIK
)@@G@@ HALFINT, MAKE OTHERS DFL     @F@@@@       DFLOAT A1,A2      . FLOAT CURIL
)@@G@@RENT VAL TO MATCH OLD ONES    @B@@@@       J     LA0120      . AND GO STIM
)@@G@@ASH IT@E@@@@. DFL PRECEDED BY HALFINT--GO BACK AND FLOAT THE OLD DATA   IN
)@@G@@@E@@@@LA0140 DS    A2,LADATA   . TEMP SAVE CURRENT (FLOATING) VAL @D@@@@IO
)@@G@@       SA    A1,LADTYP   . CHANGE STORE MODE TO DFL   @C@@@@       LR   IP
)@@G@@ R1,LANELS   . NO OF ELS TO CONVERT @D@@@@       LA    A0,LADSCP+1 . GETIQ
)@@G@@ DESCRIPTOR ADDRESS     @D@@@@       LXI,U A0,2        . SET STEP TO DOUIR
)@@G@@BLEWORDS    @D@@@@       LA,U  A1,02074    . GET EXP TO USE TO FLOAT    IS
)@@G@@@E@@@@LA0150 JNGD  R1,LA0110   . IF NO MORE TO DO, GO SAVE CURRENT@C@@@@IT
)@@G@@       DL    A2,1,A0     . PICK UP INTEGER VALUE@B@@@@       DFP   A1,A2IU
)@@G@@       . CONVERT IT     @C@@@@       DS    A2,1,*A0    . REPLACE FLOATEDIV
)@@G@@ VAL  @E@@@@       J     LA0150      . AND LOOP OVER ALL UNCONVERTED ELSIW
)@@G@@@[@@@@.     @A@@@@. END OF LIT- CLEAN UP POINTERS, ETC@E@@@@.     NOTE--IX
)@@G@@DESCR IS INITIALIZED TO SCALAR,HALFINT BY ABOVE @F@@@@LA0200 LA,U  A1,0 IY
)@@G@@       . STOPPED BY NON-BL, FAKE AN OPR EXIT    @D@@@@LA0210 BURYL      IZ
)@@G@@       . HIDE LOOKAHEAD POINTERS    @E@@@@       TXPSAV LAENDP     . SAVJA
)@@G@@E POINTER VALS FOR END OF LIT @F@@@@       LXM,H2 X7,LADSCP+1 . SET ADDRJB
)@@G@@ TO DESCR, LEAVE INCREMENT=2  @G@@@@       LA,U  A1,ZMODFL   . GET MODE JC
)@@G@@FLAG FOR TEST (INITIAL DESC IS HFI) @D@@@@       LA    A0,LANELS   . NO JD
)@@G@@OF ELEMENTS SCANNED     @E@@@@       JNE,U A0,1 LA0250 . IF NOT SCALAR, JE
)@@G@@GO CLEAN UP VECTOR@A@@@@. SET POINTERS FOR NUMERIC SCALARS  @B@@@@LA0220JF
)@@G@@ DL    A2,1,X7     . GET DATA VAL   @F@@@@       JNZ   A2,LA0230   . IF JG
)@@G@@IT'S NOT HALFINT, GO SET UP DFL     @F@@@@       SA,H2 A3,0,X7     . IT'JH
)@@G@@S HALFINT; PUT VALUE INTO DESCR     @D@@@@       J     LA0240      . ANDJI
)@@G@@ GO SET ADDRESS POINTER @G@@@@LA0230 SA,S2 A1,0,*X7    . SET DFL MODE, BJJ
)@@G@@UMP REG TO LAST WORD USED     @D@@@@LA0240 LA,U  A0,1,X7     . GET ADDR JK
)@@G@@OF 1ST UNUSED WORD@F@@@@       J     LA0290      . GO COMPUTE NO OF WDS JL
)@@G@@USED FOR THIS LIT @^@@@@. CLEAN UP VECTORS---   @C@@@@LA0250 SA,H2 A0,0,JM
)@@G@@X7     . LENGTH TO H2 OF DESCR@ @@@@       LA,U  A0,ZRANKV   .    @E@@@@JN
)@@G@@       SA,S3 A0,0,X7     . SET RANK FIELD OF DESCR TO VECTOR@F@@@@      JO
)@@G@@ JNE   A1,LADTYP LA0260 . IF DATA NOT DFLOAT, GO PACK IT    @E@@@@      JP
)@@G@@ SA,S2 A1,0,X7     . PUT DFLOAT MODE FLAG INTO DESCR  @D@@@@       LA,H2JQ
)@@G@@ A0,LAENDP+1 . GET ADDR OF 1ST UNUSED WORD@G@@@@       J     LA0290     JR
)@@G@@ . AND GO COMPUTE WDS USED; RESET TEXT POINTER  @C@@@@. PACK DOUBLEWORD JS
)@@G@@INTEGER VALS INTO HALFINT     @D@@@@LA0260 LA,U  A0,1,X7     . SET ADDR JT
)@@G@@OF DATA FOR STASH @C@@@@       LXI,U A0,1        . AND STEP BY 1 WD     JU
)@@G@@@B@@@@       LR    R1,LANELS   . NO OF ELEMENTS @E@@@@       LXM,U X7,1,JV
)@@G@@X7     . SET 1ST WD ADDR TO FETCH FROM    @ @@@@LA0270 JNGD  R1,LA0282  JW
)@@G@@ .    @B@@@@       DL    A2,0,*X7    . GET DOUBLE     @A@@@@       SA,H1JX
)@@G@@ A3,0,A0     . SAVE HALF@B@@@@       JNGD  R1,LA0280   . TEST FOR END   JY
)@@G@@@ @@@@       DL    A2,0,*X7    .    @ @@@@       SA,H2 A3,0,*A0    .    JZ
)@@G@@@C@@@@       J     LA0270      . LOOP ON ALL VALUES   @F@@@@LA0280 SZ,H2KA
)@@G@@ 0,*A0       . CLEAR OUT LAST HALF AND ADJUST BOUNDARY@D@@@@LA0282 LA,U KB
)@@G@@ A0,0,A0     . SET REG TO 1ST UNUSED WD   @D@@@@. NOW GET NO WDS USED, SKC
)@@G@@ET TEXTPOINTER, AND CLOSE UP  @F@@@@LA0290 SA,H2 A0,LAENDP+1 . FORCE ENDKD
)@@G@@ POINTER TO 1ST UNUSED WD     @D@@@@       J     LA0400      . GO TO COMKE
)@@G@@MON CLEANUP RTNE  @ @@@@/. PROCESS CHARACTER LITERALS @[@@@@.     @#@@@@KF
)@@G@@C      PROC    .  @ @@@@CHRGET* NAME             .    @#@@@@       UNLI$KG
)@@G@@T .   @C@@@@CH$010 LMJ   X2,0,X2     . GO GET NEXT CHARACTER@C@@@@      KH
)@@G@@ TNE,U A0,ANULL    . IF IT'S A NULL...    @B@@@@       J     CH$010     KI
)@@G@@ . THEN SKIP IT   @#@@@@       LI$T .     @]@@@@       END .@[@@@@.     KJ
)@@G@@@C@@@@LA0300 LA    A0,LACDSC   . DUMMY DESCR FOR CHARS@C@@@@       TSTASKK
)@@G@@H LA0410     . PUT IT INTO THE WS   @E@@@@       LMJ   X11,TEXQWD  . FORKL
)@@G@@CE STORAGE MODE TO QUARTERWORD@A@@@@       J     LA0420      . WS FULL  KM
)@@G@@@A@@@@. PICK UP NEXT CHAR AND MOVE TO WS  @C@@@@LA0310 CHRGET           KN
)@@G@@ . BRING NEXT CHAR TO A0@D@@@@       JNE,U A0,AALFAN LA0320 . IF NOT QUOKO
)@@G@@TE, GO STASH@G@@@@       DL    A5,X2       . TEMP SAVE FETCHPOINTERS SO KP
)@@G@@WE CAN BACK UP    @A@@@@       SA    A15,R2      . AND COUNT@C@@@@      KQ
)@@G@@ CHRGET            . GET CHAR AFTER QUOTE @G@@@@       JNE,U A0,AALFAN LKR
)@@G@@A0340 . IF NOT ANOTHER QUOTE, THEN END OF LIT   @C@@@@LA0320 TSTASH LA04KS
)@@G@@10     . PUT CHAR INTO STRING @A@@@@       LA    A2,LANELS   . GET EL CTKT
)@@G@@@A@@@@       AA,U  A2,1        . BUMP IT  @C@@@@       SA    A2,LANELS  KU
)@@G@@ . AND SAVE NEW COUNTER @E@@@@       JNE,U A0,AEOL LA0310   . IF NOT EOLKV
)@@G@@, KEEP SCANNING   @G@@@@. NOTE: BECAUSE THE 1108 TTY HANDLER STRIPS TRAIKW
)@@G@@LING BLANKS AND PADS TO @G@@@@.     A WORD BOUNDARY, THERE IS NO WAY TO KX
)@@G@@DETERMINE THE EXACT CARRAIGE  @G@@@@.     POSITION WHEN THE USER HIT RETKY
)@@G@@URN.  FOR THIS REASON, WE ARE INCOM-@G@@@@.     PATIBLE WITH APL/360 AT KZ
)@@G@@THIS POINT, AND DO NOT ALLOW THE CARRAIGE @G@@@@.     RETURN CHARACTER TLA
)@@G@@O BE GENERATED BY LEAVING OFF A TRAILING QUOTE. @E@@@@       J     LA041LB
)@@G@@1      . INSTEAD, WE GIVE A LEXICAL ERROR @C@@@@. QUOTE NOT FOLLOWED BY LC
)@@G@@A 2ND QUOTE-- END OF LIT@G@@@@LA0340 DS    A5,X2       . RESTORE FETCHPOLD
)@@G@@INTERS FOR BACKUP IN LEXCAN   @ @@@@       LA    A15,R2      .    @C@@@@LE
)@@G@@       SZ    LALOOK      . TURN LOOKAHEAD OFF   @E@@@@       LMJ   X11,TLF
)@@G@@EXDWD  . FORCE ALIGNMENT OF WORD BOUNDARY @ @@@@       J     LA0420     LG
)@@G@@ .    @D@@@@       TXPSAV LAENDP     . SAVE END OF LIT POINTERS   @B@@@@LH
)@@G@@       LX    X7,LADSCP+1 . ADDR OF DESCR  @C@@@@       LA    A0,LANELS  LI
)@@G@@ . NO OF CHARS SCANNED  @D@@@@       SA,H2 A0,0,X7     . TO LENGTH FIELDLJ
)@@G@@ OF DESCR   @C@@@@       TNE,U A0,1        . WAS IT ONLY ONE CHAR?@G@@@@LK
)@@G@@       SZ,S3 0,X7        . YES, FORCE RANK FIELD IN DESCR TO SCALAR     LL
)@@G@@@#@@@@. FINAL CLEANUP   @D@@@@LA0360 LA,H2 A0,LAENDP+1 . GET ADDR OF 1STLM
)@@G@@ UNUSED WORD@[@@@@/.    @E@@@@. FINAL CLEANUP FOR ALL LITS (A0=ADDR OF 1LN
)@@G@@ST UNUSED WORD)   @[@@@@.     @F@@@@LA0400 ANA,H2 A0,LADSCP+1 . LESS DESLO
)@@G@@CR ADDR=NO OF WDS TO SKIP     @C@@@@       AA,U  A0,LEXLIT*/15   . PUT ILP
)@@G@@N FLAG BITS @C@@@@       TXPLOD LATXTP     . RESTORE TEXT POINTERS@D@@@@LQ
)@@G@@       TSTASH            . PUT FLAG INTO T-STRING     @E@@@@       TXPLOLR
)@@G@@D LAENDP     . RESET POINTERS TO END OF LIT     @F@@@@       LMJ   X11,TLS
)@@G@@EXHWD  . RE-ESTABLISH HALFWORD STORAGE MODE     @ @@@@       J     LA042LT
)@@G@@0      .    @C@@@@       J     LA0010      . AND SCAN NEXT DATUM  @[@@@@LU
)@@G@@.     @ @@@@. ERR DURING STORAGE OF LIT---@[@@@@.     @ @@@@LA0410 ERRORLV
)@@G@@ YWSFUL,LA0420 .  @ @@@@LA0411 ERROR YLEXIC,LA0420 .  @ @@@@LA0412 ERRORLW
)@@G@@ YSYNTA,LA0420 .  @E@@@@. TERMINATE LINE SO TEXERS CAN SCAN FOR REFERENCLX
)@@G@@ES TO NAMES @B@@@@LA0420 SA    A0,LALTRM   . SAVE ERROR CODE@E@@@@      LY
)@@G@@ TXPSAV LAENDP     . SAVE CURRENT STRING POINTERS     @G@@@@       TXPLOLZ
)@@G@@D LATXTP     . RESET POINTERS TO FLAG AT BEGINNING OF LIT   @F@@@@      MA
)@@G@@ LA,U  A0,AEOL+(LEXOPR*/15)  . GET ERSATZ END OF LINE FLAG  @G@@@@      MB
)@@G@@ TSTASH LA0940     . PRETEND WE REALLY FOUND ONE (TO STOP ERASING)@G@@@@MC
)@@G@@       TXPLOD LAENDP     . RESTORE POINTERS SO CLOSE STRING WILL WORK   MD
)@@G@@@C@@@@       LA    A0,LALTRM   . GET ERROR CODE BACK  @D@@@@       J    ME
)@@G@@ LA0990      . AND GO CLOSE THE BLOCK     @C@@@@/. PROCESS SYMBOLIC VARIMF
)@@G@@ABLE/FUNCTION  NAMES    @[@@@@.     @E@@@@LA0500 SA    A0,LATERM   . TEMMG
)@@G@@P SAVE TERMINAL CHARACTER     @B@@@@       LSSL  A3,15       . ALIGN NAMMH
)@@G@@E TYPE@G@@@@       AA,U  A3,LEXNAM*/15    . AND CREATE FLAGBITS FOR THISMI
)@@G@@ NAME TYPE  @C@@@@       SA,H2 A3,LADESC   . TEMP SAVE NEME TYPE  @C@@@@MJ
)@@G@@       LMJ   X11,SYMBOL  . TABULATE THIS NAME   @ @@@@       J     LA096MK
)@@G@@0      .    @B@@@@       LA,U  A0,0,A1     . MOVE ADDR OVER @C@@@@      ML
)@@G@@ AA,H2 A0,LADESC   . FOLD IN FLAG BITS    @E@@@@       SA,H2 A0,LADESC  MM
)@@G@@ . AND TEMP SAVE TEXT ENTRY FOR NAME@D@@@@       TZ    TXTOPN      . HASMN
)@@G@@ TEXT STORAGE STARTED?  @G@@@@       J     LA0530      . YES, NOT BEGINNMO
)@@G@@ING OF LINE; SKIP LABEL CHECK @D@@@@       TXOPEN LA0999     . NO-- ACQUMP
)@@G@@IRE SPACE FOR TEXT@D@@@@       LA    A0,LATERM   . RECOVER TERMINATING CMQ
)@@G@@HAR   @F@@@@       JNE,U A0,ASPACE LA0520 . IF NON-BLANK, NO LOOKAHEAD NMR
)@@G@@EEDED @E@@@@       NEXLEX LA0960     . ELSE PEEK AFTER NAME FOR AN OPR  MS
)@@G@@@D@@@@       JZ    A1,LA0510   . IF OPR FOUND, GO PROCESS IT@C@@@@      MT
)@@G@@ BURYL             . ELSE HIDE LOOKAHEAD  @D@@@@       J     LA0530     MU
)@@G@@ . AND GO STASH ORIGINAL NAME @E@@@@LA0510 SA    A0,LATERM   . SAVE OPR MV
)@@G@@HIT DURING LOOKAHEAD    @F@@@@. IF LEGAL COLON HIT, STASH NOW SO OPR SCAMW
)@@G@@N ROUTINE DOESN'T SEE IT@F@@@@LA0520 JNE,U A0,ACOLON LA0530 . IF OPR NOTMX
)@@G@@ COLON, NO LABEL CHECK  @E@@@@       LA    A1,STVCUR   . BUT IF COLON, GMY
)@@G@@ET CURRENT STATE  @G@@@@       JNE,U A1,STFUNC LA0950 . BE SURE IT'S FUNMZ
)@@G@@C DEFN, ELSE LABEL ERROR@E@@@@       SA    A0,LABELF   . TURN O N LABELENA
)@@G@@D STATEMENT FLAG  @E@@@@       LA,H2 A0,LADESC   . RECOVER ORIGINAL NAMENB
)@@G@@ POINTER    @B@@@@       TSTASH LA0640     . PUT INTO TEXT  @C@@@@      NC
)@@G@@ LA,U  A0,ACOLON   . GET A COLON BACK     @F@@@@       J     LAOPST     ND
)@@G@@ . AND GO STORE IT, BYPASSING OTHER TESTS @G@@@@. COME HERE TO STASH NAMNE
)@@G@@E IF NO COLON (BAD COLONS CAUGHT IN OPR RTNE)   @C@@@@LA0530 LA,H2 A0,LANF
)@@G@@DESC   . GET ORIGINAL NAME    @A@@@@       TSTASH LA0640     . STASH IT NG
)@@G@@@D@@@@       LA    A0,LATERM   . RECOVER TERMINATING CHAR   @E@@@@      NH
)@@G@@ JE,U  A0,ASPACE LA0010 . IF SPACE, GO SCAN AFTER IT  @C@@@@       LA,U NI
)@@G@@ A1,0        . ELSE SET OPR FLAG    @G@@@@       J     LA0600      . ANDNJ
)@@G@@ GO PROCESS OPR AS IF WE JUST SCANNED IT  @^@@@@/. PROCESS PRIMITIVE OPSNK
)@@G@@@[@@@@.     @G@@@@LA0600 JNE,U A0,AEOL LA0605   . IF NOT END OF LINE, GONL
)@@G@@ CHECK FOR LAMP   @G@@@@       TZ    TXTOPN      . END OF LINE-- HAS A TNM
)@@G@@-STRING BEEN OPENED?    @D@@@@       J     LA0630      . YES, STUFF THE NN
)@@G@@EOL INTO IT @C@@@@       LA,U  A1,0        . NO, GET EOL EXIT FLAG@A@@@@NO
)@@G@@       J     LA0700      . AND QUIT @E@@@@LA0605 JE,U  A0,ALAMP LA0650  NP
)@@G@@. IF LAMP, GO STASH COMMENTS  @C@@@@       TE,U  A0,AFUNCT   . IF FUNCT NQ
)@@G@@, OPEN/CLOSE@ @@@@       TNE,U A0,ALOCK    .    @C@@@@       J     LA069NR
)@@G@@5      . GO TAKE SPECIAL EXIT @G@@@@       JE,U  A0,ALBRAK LA0620 . IF BNS
)@@G@@RACKET, GO CHECK FOR EDIT COMMAND   @G@@@@       JE,U  A0,ACOLON LA0950 NT
)@@G@@. VALID COLONS WERE DONE ABOVE- LABEL ERR @G@@@@       JNE,U A0,ARPAR LANU
)@@G@@0630  . IF NOT RIGHT PAREN, GO STASH NORMAL OPR @D@@@@. RIGHT PAREN-- CHNV
)@@G@@ECK FOR POSSIBLE SYSTEM COMMAND     @F@@@@LA0610 TZ    TXTOPN      . HASNW
)@@G@@ SPACE BEEN ALLOCATED FOR TEXT YET? @E@@@@       J     LA0630      . YESNX
)@@G@@, GO STASH AS NORMA L OPR     @D@@@@       LA,U  A1,1        . NO, MUST NY
)@@G@@BE SYSTEM COMMAND @ @@@@       J     LA0710      .    @B@@@@. LEFT BRACKNZ
)@@G@@ET-- CHECK FOR EDIT COMMAND   @B@@@@LA0620 LMJ   X11,EDCMND  . SCAN FOWAOA
)@@G@@RD    @G@@@@       J     LA0960      . ED COMMAND REQUIRED, BUT IN WRONGOB
)@@G@@ FORMAT     @F@@@@       JZ    A1,LA0630   . IF NOT ED CMND, STASH BRACKOC
)@@G@@ET AS OPR   @D@@@@       LA,U  A1,3        . SET EDIT CMND EXIT FLAG    OD
)@@G@@@B@@@@       J     LA0710      . AND GET OUT    @ @@@@. STASH NORMAL OPROE
)@@G@@ IN TEXT    @E@@@@LAOPST . ENTER HERE FOR DIRECT STASH OF COLONS AFTER LOF
)@@G@@ABELS @D@@@@LA0630 TXOPEN LA0999     . GET SPACE TO STOR E TEXT   @C@@@@OG
)@@G@@       AA,U  A0,LEXOPR*/15    . PUT FLAGBITS IN @C@@@@       TSTASH LA06OH
)@@G@@40     . AND STORE THIS OPR   @G@@@@       JNE,U A0,AEOL LA0010   . IF OOI
)@@G@@P NOT EOL, GO BACK FOR NEXT ONE     @C@@@@       LA,U  A1,0        . OLDOJ
)@@G@@-STYLE EXIT FLAG  @B@@@@       J     LA0700      . AND GET OUT    @F@@@@OK
)@@G@@. WSFULL DURING HALFWORD STASH, FORCE AN EOL TO TERMINATE TEXT    @ @@@@OL
)@@G@@LA0640 LMJ   X11,TXHEOL  .    @F@@@@       ERROR YWSFUL,LA0990 . SIGNAL OM
)@@G@@ERROR, THEN GO FREE SPACE USED@[@@@@.     @#@@@@. STASH COMMENTS  @[@@@@ON
)@@G@@.     @D@@@@LA0650 SX    X11,LANULC  . TURN ON NULL COMMENT FLAG  @G@@@@OO
)@@G@@       TZ    TXTOPN      . HAS SPACE FOR TEXT ALREADY BEEN ALLOCATED?   OP
)@@G@@@D@@@@       SZ    LANULC      . YES, FLAG LINE NOT NULL    @E@@@@      OQ
)@@G@@ TXOPEN LA0999     . BE SURE TEXT STORAGE IS SET UP   @G@@@@       TXPSAOR
)@@G@@V LATXTP     . TEMP SAVE CURRENT POINTERS IN CASE OF ABORT  @D@@@@      OS
)@@G@@ LA,U  A0,ALAMP    . GET ORIGINAL LAMP BACK     @B@@@@       TSTASH LA06OT
)@@G@@40     . PUT IT AWAY    @E@@@@       LMJ   X11,TEXQWD  . SET STASH MODE OU
)@@G@@TO QUARTERWORD    @ @@@@       J     LA0420      .    @C@@@@LA0685 LMJ  OV
)@@G@@ X2,0,X2     . PICK UP NEXT CHAR    @B@@@@       JZ    A0,LA0685   . IGNOW
)@@G@@ORE NULLS   @C@@@@       JE,U  A0,AEOL LA0690   . GET OUT IF END  @C@@@@OX
)@@G@@       TE,U  A0,ASPACE   . IS THIS CHAR A BLANK?@E@@@@       SZ    LANULOY
)@@G@@C      . NO, TURN NULL COMMENTS FLAG OFF  @E@@@@       TSTASH LA0410    OZ
)@@G@@ . OTHERWISE, STORE THIS CHARACTER  @C@@@@       J     LA0685      . ANDPA
)@@G@@ GO BACK FOR NEXT @C@@@@LA0690 TSTASH LA0410     . PUT EOL INTO TEXT    PB
)@@G@@@E@@@@       LA,U  A1,0        . SET RETURN CODE FOR PRIMITIVE    @G@@@@PC
)@@G@@       TNZ   LANULC      . WAS THIS LINE COMPLETELY NULL (I.E.LAMP ONLY)PD
)@@G@@@C@@@@       J     LA0700      . NO, TAKE NORMA L EXIT@D@@@@       LMJ  PE
)@@G@@ X11,TEXCLO  . YES, CLOSE THE TEXT BLOCK  @ @@@@       J     LA0999     PF
)@@G@@ .    @B@@@@       LMJ   X11,TEXERS  . THEN ERASE IT  @ @@@@       J    PG
)@@G@@ LA0999      .    @E@@@@       LA,U  A1,4        . SET EXIT CODE FOR LINPH
)@@G@@E DELETION  @B@@@@       J     LA0710      . AND GET OUT    @ @@@@. SPECPI
)@@G@@IAL EXIT FOR FUNC/LOCK  @B@@@@LA0695 LA,U  A1,2        . SET EXIT FLAG  PJ
)@@G@@@C@@@@       LA    A2,TXTOPN   . AND GET TEXT FLAG    @C@@@@       JZ   PK
)@@G@@ A2,LA0710   . IF NO TEXT, GO HOME  @E@@@@       DS    A0,LADATA   . ELSPL
)@@G@@E TEMP SAVE THE EXIT PARAMS   @D@@@@       LA,U  A0,AEOL     . GET AN ERPM
)@@G@@SATZ END OF LINE  @C@@@@       TSTASH LA0410     . AND JAM IT INTO TEXT PN
)@@G@@@B@@@@       J     LA0705      . THEN GO OUT    @A@@@@/.  EXIT ROUTINES PO
)@@G@@FOR TEXT STORAGE  @[@@@@.     @F@@@@. EOL AND/OR FUNC/LOCK  ( TEXT MAY OPP
)@@G@@R MAY NOT HAVE BEEN SCANNED)  @[@@@@.     @C@@@@LA0700 LA    A2,TXTOPN  PQ
)@@G@@ . GET TEXT STORAGE FLAG@E@@@@       JZ    A2,LA0710   . IF NO TEXT STORPR
)@@G@@ED, GET RIGHT OUT @D@@@@       DS    A0,LADATA   . YES, TEMP SAVE EXIT PPS
)@@G@@ARAMS @C@@@@LA0705 LMJ   X11,TEXCLO  . CLOSE TEXT BLOCK     @ @@@@      PT
)@@G@@ J     LA0999      .    @C@@@@       LA    A2,A0       . SAVE ADDR OF TEPU
)@@G@@XT    @B@@@@       LA    A3,LABELF   . GET LABEL FLAG @C@@@@       DL   PV
)@@G@@ A0,LADATA   . RECOVER EXIT PARAMS  @F@@@@. SYSCMD, EDCMD AND DELETE NEVPW
)@@G@@ER HAVE TEXT, AND COME DIRECTLY HERE@ @@@@LA0710 LX    X11,LALINK  .    PX
)@@G@@@ @@@@       J     1,X11       .    @[@@@@/.    @#@@@@. ERROR RETURNS-- PY
)@@G@@@A@@@@LA0910 ERROR YWSFUL,LA0999 . WS FULL@ @@@@LA0940 ERROR YSYSTM,LA09PZ
)@@G@@99 .  @ @@@@LA0950 ERROR YLABEL,LA0960    @[@@@@.     @C@@@@.     ERR DUQA
)@@G@@RING SCAN, BUT NOT DURING STASH     @[@@@@.     @F@@@@LA0960 TNZ   TXTOPQB
)@@G@@N      . HAS SPACE BEEN ALLOCATED FOR T-STRING? @F@@@@       J     LA099QC
)@@G@@9      . NO, NOTHING TO CLEAN UP, SO GET OUT    @C@@@@       LA,U  A0,AEQD
)@@G@@OL     . GET AN END OF LINE   @D@@@@       TSTASH LA0965     . TRY TO PUQE
)@@G@@T IT IN NORMALLY  @D@@@@       J     LA0995      . IF THAT WORKED, GO CLQF
)@@G@@OSE UP@G@@@@LA0965 LMJ   X11,TXHEOL  . BUT IF IT DIDN'T, BE STUBBORN ANDQG
)@@G@@ FORCE IT   @ @@@@. FINAL ERROR TERMINATION     @C@@@@LA0990 TNZ   TXTOPQH
)@@G@@N      . WAS ANY TEXT STORED? @C@@@@       J     LA0999      . NO, GET RQI
)@@G@@IGHT OUT    @C@@@@LA0995 LMJ   X11,TEXCLO  . CLOSE THE TEXT BLOCK @ @@@@QJ
)@@G@@       J     LA0999      .    @G@@@@       LMJ   X11,TEXERS  . THEN ERASQK
)@@G@@E IT, WITH ALL ITS NAME REFERENCES  @ @@@@       J     LA0999      .    QL
)@@G@@@ @@@@LA0999 LX    X11,LALINK .     @B@@@@       J     0,X11        . ERQM
)@@G@@ROR EXIT    @[@@@@.     @#@@@@       VARBLS.    @F@@@@LANULC EQUF  $,,H1QN
)@@G@@       . NULL COMMENT LINE FLAG (LINE DELETION) @B@@@@LALINK EQUF  $,,H2QO
)@@G@@       . X11 AT ENTRY   @ @@@@       RES   1           .    @E@@@@LANELSQP
)@@G@@ RES   1 .    NO OF ELEMENTS (LESS 1) FOR VECTORS     @C@@@@LATERM RES  QQ
)@@G@@ 2 . REGS A0 AND A1 AT LEXCAN RETURN@E@@@@LADTYP EQU   LATERM+1 . WORD2=QR
)@@G@@TYPE OF RETURN FROM LEXCAN    @E@@@@LADATA RES   2           . TEMP OF DQS
)@@G@@ATA VAL, NUMERIC LIT    @F@@@@LATXTP RES   2           . TEMP STORAGE OFQT
)@@G@@ TEXT POINTERS (X6,X7)  @G@@@@LADSCP RES   2           . TEXT POINTERS FQU
)@@G@@OR DESCRIPTOR (IMBEDDED LITS) @F@@@@LAENDP RES   2           . TEXT POINQV
)@@G@@TERS TO END OF NUMERIC LIT    @A@@@@LALOOK RES   1 . LOOKAHEAD FLAG     QW
)@@G@@@F@@@@LALTRM RES   2           . TERMINATION ETC OF LOOKAHEAD FIELD     QX
)@@G@@@C@@@@LALDTA RES   2 . DATA VAL OF LOOKAHEAD FIELD    @F@@@@LALINO EQU  QY
)@@G@@ LALDTA      . STORAGE OF DFLOAT LINENOS (EDIT CMNDS) @E@@@@LABELF RES  QZ
)@@G@@ 1      . NON-ZERO IFF STATEMENT IS LABELED     @D@@@@LACHNO RES   1    RA
)@@G@@       . CHAR NO IN [N"M] EDIT CMNDS@#@@@@       VARCON .   @C@@@@LADESCRB
)@@G@@ J     0,WSTAG      . INDIRECT POINTERS   @B@@@@       CONSTS .  SKELETORC
)@@G@@NS FOR DESCRIPTORS@G@@@@LANDSC CBLOCK  ZTPLIT,ZMOHFI,ZRANKS,0 0 . INITIARD
)@@G@@L NUMERIC DESCRIPTOR    @B@@@@LACDSC CBLOCK ZTPLIT,ZMOCHR,ZRANKV,0 0 .  RE
)@@G@@@A@@@@/. ANALYSIS FOR FUNC HEADER LINES   @[@@@@.     @G@@@@.      RETURRF
)@@G@@N CODE IN A1:     0=OPR (OTHER THAN TERMINATOR-SEE BELOW)   @A@@@@.     RG
)@@G@@                        1=NAME@G@@@@.                             2=TERMRH
)@@G@@INATING OPR (FUNC/LOCK,[,),EOL)     @G@@@@.  A0 CONTAINS OPR OR POINTER RI
)@@G@@TO NAME (WITHOUT FLAGBITS), LITS ARE ERR  @#@@@@       INSTRS .   @ @@@@RJ
)@@G@@LEXANH* SX   X11,LHLINK  .    @B@@@@LH0010 NEXLEX LH0999     . GET NEXT RK
)@@G@@ITEM  @D@@@@       JZ    A1,LH0200   . IF OPR, LOOK FOR EOL, ETC. @E@@@@RL
)@@G@@       JNE,U A1,1 LH0900 . IF NOT NAME OR OPR, DEFN ERR     @E@@@@LH0100RM
)@@G@@ JNZ   A3,LH0900   . AND MUST BE ORDINARY NAME, TOO   @F@@@@       JE,U RN
)@@G@@ A0,ASPACE LH0110 . IF FOLLOWED BY SPACE, NO LOOKAHEAD@C@@@@       LA,U RO
)@@G@@ A1,0        . SET EXIT FLAG FOR OPR@B@@@@       DS    A0,LALTRM   . ANDRP
)@@G@@ HIDE IT    @ @@@@       SX    X11,LALOOK   .   @C@@@@LH0110 LMJ   X11,SRQ
)@@G@@YMBOL  . TABULATE THE SYMBOL  @ @@@@       J     LH0999      .    @E@@@@RR
)@@G@@       LA,U  A0,0,A1     . PUT POINTER INTO CORRECT REG     @B@@@@      RS
)@@G@@ LA,U  A1,1        . SET EXIT FLAG  @B@@@@       J     LH0300      . ANDRT
)@@G@@ GET OUT    @^@@@@. PROCESS PRIMITIVE     @A@@@@LH0200 TE,U  A0,AFUNCT  RU
)@@G@@ . FOR FUNCT@B@@@@       TNE,U A0,ALOCK    . --- OR LOCK    @D@@@@      RV
)@@G@@ J     LH0210      . TAKE TERMINATING CHAR EXIT @E@@@@       TE,U  A0,ALRW
)@@G@@BRAK   . LEFT BRACKET STARTS EDIT CMND    @C@@@@       TNE,U A0,ARPAR   RX
)@@G@@ . RIGHT PAREN IS SYSCMD@E@@@@       J     LH0210      . EITHER IS A TERRY
)@@G@@MINATING CHAR     @F@@@@       JNE,U A0,AEOL LH0300   . IF NOT EOL, THENRZ
)@@G@@ NORMAL OPR EXIT  @E@@@@LH0210 LA,U  A1,2        . SET EXIT FOR TERMINATSA
)@@G@@ING CHAR    @[@@@@.     @ @@@@LH0300 LX,H2 X11,LHLINK  .    @ @@@@      SB
)@@G@@ J     1,X11       .    @[@@@@.     @ @@@@LH0900 ERROR YDEFN       .    SC
)@@G@@@ @@@@LH0999 LX,H2 X11,LHLINK  .    @ @@@@       J     0,X11       .    SD
)@@G@@@#@@@@       VARBLS .   @#@@@@LHLINK RES   1 .  @G@@@@/.    THIS ROUTINESE
)@@G@@ SCANS AND COLLECTS EDIT COMMANDS.  IT IS CALLED WHEN @D@@@@.     AN OPESF
)@@G@@NING [ IS DETECTED, AND RETURNS WITH:     @E@@@@.         A1=0 IF NOT ANSG
)@@G@@ EDIT CMND (REGS LEFT AS AT ENTRY)  @E@@@@.         A1=1  IF ED CMND, WISH
)@@G@@TH A0 ADDITIONALLY SET AS     @E@@@@.               0=["] ; 1=["N] ; 2=[SI
)@@G@@N] ; 3=[N"] ; 4=[N"M].  @F@@@@.               N IS LEFT DFLOAT IN A2,A3-SJ
)@@G@@- M IS HALFINT IN A4    @[@@@@.     @[@@@@.     @G@@@@L      PROC    . TSK
)@@G@@HIS PROC CHECKS THAT AN OPERAND IS A VALID LINENO     @#@@@@LNOCHK* NAMESL
)@@G@@   .  @B@@@@       TE,U  A1,ZMOHFI   . IS IT HALFINT? @ @@@@       UNLISSM
)@@G@@T            .    @D@@@@       J     LN0010      . NO, GO TEST FOR DOUBLSN
)@@G@@E     @B@@@@       LA,U  A1,02074    . YES, FLOAT IT  @ @@@@       DFP  SO
)@@G@@ A1,A2       .    @B@@@@       J     LN0020      . AND GO STASH IT@D@@@@SP
)@@G@@LN0010 TE,U  A1,ZMODFL   . NOT INT, HOW ABOUT DFLOAT? @A@@@@       J    SQ
)@@G@@ L(1,1)      . NO-SORRY @D@@@@LN0020 DJZ   A2,LN0030   . ZERO IS A VALIDSR
)@@G@@ LINENO     @D@@@@       JN    A2,L(1,1)   . BUT NEGATIVE NOS ARE NOT   SS
)@@G@@@C@@@@LN0030 DS    A2,LALINO   . SAVE FLOATED LINENO  @ @@@@       LIST ST
)@@G@@             .    @ @@@@       END               .    @[@@@@.     @D@@@@SU
)@@G@@C      PROC    . CHECK FOR VALID CHARS AFTER AN OPR   @E@@@@CHRCHK* NAMESV
)@@G@@   .    ERRET CHAR1   OR   ERRET CH1,LOC1 CH2   @#@@@@       UNLI$T .   SW
)@@G@@@G@@@@       JNE,U A0,ASPACE CH0010 . IF NOT STOPPED BY SPACE, GO SEE WHSX
)@@G@@AT    @D@@@@       NEXLEX C(1,2)     . ELSE LOOK AFTER THE SPACE  @E@@@@SY
)@@G@@       JNZ   A1,C(1,1)   . AND IF NOT AN OPR, THEN ERROR    @[@@@@.     SZ
)@@G@@@ @@@@NF     EQU  C            .    @]@@@@CH0010.     @F@@@@ DO NF=4 , JTA
)@@G@@E,U A0,C(2,1) C(2,2) . IF CHAR=ALTERNATE, GO DO IT    @F@@@@       JNE,UTB
)@@G@@ A0,C(NF-1,1) C(1,1) . IF NOT PRIMARY, TAKE ERROR EXIT@#@@@@       LI$T TC
)@@G@@ .    @C@@@@       END                    . YES, FALL THRU  @[@@@@.     TD
)@@G@@@#@@@@       INSTRS .   @B@@@@EDCMND* TZ TXTOPN        . TEXT OPEN?     TE
)@@G@@@E@@@@       J     1,X11       . YES, CAN'T BE AN EDIT COMMAND    @F@@@@TF
)@@G@@EDCMNH* SX    X11,EDLINK  . COME DIRECTLY HERE IF DOING A HDR LINE@F@@@@TG
)@@G@@. SINCE WE HAVE A LEADING [, THIS CAN ONLY BE AN EDIT COMMAND     @E@@@@TH
)@@G@@ED0100 NEXLEX ED0210     . SCAN AFTER THE OPENING BRACKET   @F@@@@      TI
)@@G@@ JNZ   A1,ED0130   . IF NOT OPR, MUST BE LINE NO, GO SEE    @F@@@@      TJ
)@@G@@ JNE,U A0,AQUAD ED0200 . ONLY A QUAD MAY FOLLOW LEFT BRACKET@E@@@@      TK
)@@G@@ NEXLEX ED0210     . WE HAVE [" --SEE WHAT COMES AFTER@ @@@@       JNZ  TL
)@@G@@ A1,ED0120   .    @E@@@@       JNE,U A0,ARBRAK ED0200 . BE SURE WE'VE RETM
)@@G@@ALLY GOT ["]@D@@@@       LA,U  A0,0        . WE DO, SET COMMAND TYPE    TN
)@@G@@@A@@@@       J     ED0160      . AND EXIT @A@@@@. WE HAVE  ["-TERM  -  VTO
)@@G@@ERIFY IT    @D@@@@ED0120 LNOCHK ED0200     . CHECK THAT WE HAVE ["N     TP
)@@G@@@F@@@@       CHRCHK ED0200,ED0210 ARBRAK   . AND BE SURE IT'S CLOSED UP TQ
)@@G@@@C@@@@       LA,U  A0,1        . SET COMMAND TYPE FLAG@ @@@@       J    TR
)@@G@@ ED0160      .    @#@@@@. WE HAVE [-TERM- @E@@@@ED0130 LNOCHK ED0200    TS
)@@G@@ . BE SURE IT'S A PROPER LINENO     @H@@@@       CHRCHK ED0200,ED0210 AQTT
)@@G@@UAD,ED0140 ARBRAK . SEE WHAT FOLLOWS THE LINENO @C@@@@       LA,U  A0,2 TU
)@@G@@       . [N] IS NEW LINE FLAG @B@@@@       J     ED0160      . GO GET OUTV
)@@G@@T     @ @@@@. WE HAVE [N"  -- CONTINUE    @E@@@@ED0140 NEXLEX ED0210    TW
)@@G@@ . SEE WHAT COMES AFTER THE QUAD    @F@@@@       JNZ   A1,ED0150   . IF TX
)@@G@@NOT AN OPR, BE SURE IT'S A CHAR NUM @E@@@@       JNE,U A0,ARBRAK ED0200 TY
)@@G@@. MAKE SURE WE'VE GOT [N"]    @C@@@@       LA,U  A0,3        . WE DO, SETZ
)@@G@@T THE FLAG  @ @@@@       J     ED0160      .    @^@@@@. WE HAVE [N"--TERUA
)@@G@@M--   @F@@@@ED0150 JNE,U A1,ZMOHFI ED0200 . CHARACTER NOS MUST BE HALFINUB
)@@G@@T     @D@@@@       DJZ   A2,ED0200   . THEY CAN NEITHER BE ZERO...@B@@@@UC
)@@G@@       JN    A2,ED0200   . NOR NEGATIVE.  @C@@@@       SA    A3,LACHNO  UD
)@@G@@ . SAVE CHARACTERNO     @G@@@@       CHRCHK ED0200,ED0210 ARBRAK   . BE UE
)@@G@@SURE WE HAVE A CLOSING BRACKET@E@@@@       LA,U  A0,4        . WE DO- SEUF
)@@G@@T COMMAND TYPE FOR [N"M]@C@@@@       LA    A4,LACHNO   . PICK UP CHARACTUG
)@@G@@ER NO @C@@@@ED0160 DL    A2,LALINO   . GET LINE NUM (IF ANY)@C@@@@      UH
)@@G@@ LA,U  A1,1        . SET EDCMD EXIT FLAG  @B@@@@       LX,H2 X11,EDLINK UI
)@@G@@ . NORMAL EXIT    @ @@@@       J     1,X11       .    @C@@@@. ERROR-- NOUJ
)@@G@@T IN CORRECT FORM FOR EDIT COMMAND  @ @@@@ED0200 ERROR YDEFN       .    UK
)@@G@@@ @@@@ED0210 LX,H2 X11,EDLINK  .    @ @@@@       J     0,X11       .    UL
)@@G@@@[@@@@.     @ @@@@       VARBLS            .    @ @@@@EDLINK RES   1    UM
)@@G@@       .    @D@@@@/.  INITIALIZE THE SOURCE FETCH AND STASH ROUTINES    UN
)@@G@@@ @@@@       INSTRS            .    @D@@@@. INITIALIZATION TO FETCH FROMUO
)@@G@@ WORKSPACE INPUT BUF    @[@@@@.     @E@@@@LEXINI* LA,U A15,132     . WSIUP
)@@G@@BUF CONTAINS 132 CHARACTERS   @F@@@@       LXM,U X3,CIOBUF   . SET TO STUQ
)@@G@@ART SCAN AT 1ST CHAR OF BUF   @^@@@@       J     LI0010     @E@@@@. INITUR
)@@G@@ILIZATION TO SCAN A QUOTED STRING (REGS PER VERIFY)   @E@@@@LEXUNQ* LA  US
)@@G@@ A15,A5      . LENGTH (IN CHARS) TO BE SCANNED  @C@@@@       LXM,U X3,0,UT
)@@G@@A0     . PLUG IN DATA ADDR    @[@@@@.     @B@@@@LI0010 LXI,U X3,1       UU
)@@G@@ . SET WORDSTEP   @D@@@@       SZ    LALOOK      . TURN OFF LOOKAHEAD FLUV
)@@G@@AG    @ @@@@       LX,U  X2,AGETX2  .     @ @@@@       J     0,X11      UW
)@@G@@.     @[@@@@.     @#@@@@GET*   PROC .     @ @@@@       UNLI$T           UX
)@@G@@ .    @D@@@@       JGD  A15,GET      . IF ANY CHARS LEFT, GO MOVE @C@@@@UY
)@@G@@LOOP   LA,U  A0,AEOL     . OTHERWISE PICK UP EOL@B@@@@       LMJ   X2,0,UZ
)@@G@@X2     . AND RETURN IT  @C@@@@       J     LOOP        . FORCE CONTINUEDVA
)@@G@@ EOL'S@[@@@@GET.  @C@@@@ DO 1-(GET(1,1)=Q4) , LA,GET(1,1) A0,0,X3 .     VB
)@@G@@@B@@@@ DO GET(1,1)=Q4 , LA,GET(1,1) A0,0,*X3.   @^@@@@       LMJ   X2,0,VC
)@@G@@X2 .  @ @@@@       LI$T              .    @]@@@@       END .@#@@@@PUT*  VD
)@@G@@ PROC .     @C@@@@ DO 1-(PUT(1,1)=Q4) , SA,PUT(1,1) A0,0,X5 .     @B@@@@VE
)@@G@@ DO PUT(1,1)=Q4 , SA,PUT(1,1) A0,0,*X5 .  @^@@@@       LMJ   X4,0,X4    VF
)@@G@@@#@@@@       END  .     @^@@@@AGETX2 GET   Q1    .    @^@@@@       GET  VG
)@@G@@ Q2    .    @^@@@@       GET   Q3    .    @^@@@@       GET   Q4    .    VH
)@@G@@@^@@@@       J     AGETX2 .   @]@@@@       END .___ QUAD    @F@@@@      VI
)@@G@@ JNZ   A1,ED0150   . IF NOT AN OPR, BE SURE IT'S A CHAR NUM @E@@@@      VJ
)@@G@@ JNE,U A0,ARBRAK ED0200 *[S@@@*SDFF*@G@@@@. ****************************VK
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUVL
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 VM
)@@G@@                                                    * @G@@@@       AXR$ VN
)@@G@@        .                                                 * @G@@@@      VO
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@VP
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * VQ
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               VR
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 VS
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            VT
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACEVU
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL VV
)@@G@@BLOCK TYPES                 * @G@@@@.                                   VW
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  VX
)@@G@@                                        * @G@@@@. **********************VY
)@@G@@*********************************************** @[@@@@.     @^@@@@/. LEXVZ
)@@G@@ICAL SCANNER---   @G@@@@.     THIS ROUTINE SCANS THE TEXT AND RECOGNIZESWA
)@@G@@ AND CONVERTS DATA ITEMS@G@@@@.     IT STOPS WHENEVER IT HITS A DELIMITEWB
)@@G@@R OF ANY TYPE, AND RETURNS    @G@@@@.     WITH POINTERS TO THE ELEMENTRYWC
)@@G@@ ITEM PICKED UP, AND THE DELIMITER  @C@@@@.     WHICH CAUSED SCAN TERMINWD
)@@G@@ATION LEFT IN A0  @D@@@@.         RETURN CODES ARE LEFT IN A1 AS FOLLOWSWE
)@@G@@--    @A@@@@.              0 - NO ITEM PICKED   @A@@@@.              1 -WF
)@@G@@ SYMBOL PICKED    @C@@@@.              2 - START ALFA LIT (SEE BELOW)   WG
)@@G@@@F@@@@.              4 - HALFWD INTEGER (SIGN X-TENDED TO FULLWD IN A2) WH
)@@G@@@D@@@@.              7 - DOUBLE FLOATING (VALUE IN A2,A3)   @B@@@@.     WI
)@@G@@         CODES 3,5 AND 6 ARE UNUSED @G@@@@. SCAN STOPS AT AN OPENING QUOWJ
)@@G@@TE (SEE 2, ABOVE), AND REMAINING CHARS    @C@@@@. MUST BE PICKED UP BY CWK
)@@G@@ALLER VIA LMJ X2,0,X2.  @[@@@@.     @G@@@@. FOR VARIABLE NAMES, A3 IS SEWL
)@@G@@T TO: 0=NORMAL,1=STOPVECT,2=TRACEVECT     @B@@@@. AND A2 IS SET TO NO OFWM
)@@G@@ CHARS IN NAME    @[@@@@.     @ @@@@.     ASSUMPTIONS AT ENTRY--  @E@@@@WN
)@@G@@.       (1) X2,X3 INITIALIZED FOR SOURCE CHARACTER FETCH    @F@@@@.     WO
)@@G@@  (2) X4,X5 INITIALIZED FOR ALFA NAME/LIT STORAGE, IF ANY   @[@@@@.     WP
)@@G@@@D@@@@GETNXT* PROC    .  PICK UP NEXT CHAR BEING SCANNED    @^@@@@PIKUP WQ
)@@G@@ LMJ   X2,0,X2 .  @#@@@@       UNLIST.    @C@@@@       TNE,U A0,ANULL   WR
)@@G@@ . IS CHARACTER NULL?   @B@@@@       J     PIKUP       . YES, FORGET IT WS
)@@G@@@]@@@@       LIST.@]@@@@       END. @[@@@@.     @B@@@@STASH* PROC      .WT
)@@G@@ STORE LAST CHARACTER   @^@@@@       LMJ   X4,0,X4 .  @]@@@@       END. WU
)@@G@@@[@@@@.     @[@@@@.     @B@@@@PAD* PROC  .   PROC TO PAD NAME OR ALFALITWV
)@@G@@@]@@@@PAD1* PROC .@D@@@@       JGD   R1,SAVE     . TEST FOR ANY MORE ROOWW
)@@G@@M?    @B@@@@       J     PADXIT      . NO ROOM-- QUIT @B@@@@SAVE   STASHWX
)@@G@@             . ROOM--- SAVE   @]@@@@       END. @D@@@@       TZ    LXTRUWY
)@@G@@N      . IS TRUNCATION FLAG ON?     @#@@@@       UNLIST.    @B@@@@      WZ
)@@G@@ J     FINI        . YES, DON'T PAD @C@@@@       SA    A0,R2     . NO, SXA
)@@G@@AVE TERMINAL CHAR @F@@@@       LA,U  A0,PAD(1,1) . GET PADDING CHARACTERXB
)@@G@@  (SPACE OR NULL) @A@@@@ DO 3 , PAD1  . PAD TO A BOUNDARY   @D@@@@PADXITXC
)@@G@@ LA    A0,R2       . RECOVER TERMINAL CHARACTER @]@@@@       LIST.@[@@@@XD
)@@G@@FINI. @]@@@@       END .@[@@@@.     @ @@@@/.   START THE LEXICAL SCAN   XE
)@@G@@@#@@@@       INSTRS .   @A@@@@LEXCAN* SX   X11,LXLINK       .     @A@@@@XF
)@@G@@. $P GET NEXT SIGNIFICANT CHARACTER @B@@@@LX0010 GETNXT            . PICXG
)@@G@@K IT UP     @B@@@@       TNE,U A0,ASPACE   . IS IT SPACE?   @C@@@@      XH
)@@G@@ J     LX0010      . IF SO, IGNORE IT     @C@@@@. $T4 WHAT KIND OF FIELDXI
)@@G@@ DOES THIS CHAR START?  @D@@@@. $A NUMLIT,  NAME,  ALFALIT,LX0200  OPERAXJ
)@@G@@TOR,LX0300  @^@@@@. VARIABLE NAME CHECK---@E@@@@       JALFA LX0100     XK
)@@G@@ . IF ALFA, GO PROCESS VARIABLE NAME@ @@@@. CHECK FOR CHARACTER LITERAL XL
)@@G@@@ @@@@       TNE,U A0,AALFAN   .    @D@@@@       J     LX0200      . GO XM
)@@G@@STASH CHARACTER LIT     @ @@@@. TEST FOR NUMERIC STARTER    @D@@@@      XN
)@@G@@ JE,U  A0,ADECPT LX0030 . IF POINT, GO DO IT    @D@@@@       JE,U  A0,AUXO
)@@G@@MINS LX0040 . SAME FOR UNARY MINUS  @F@@@@       JNDIGT LX0300          XP
)@@G@@. IF NOT DIGIT, ASSUME OPERATOR     @D@@@@. $J NUMERIC LIT-- INIT AND GOXQ
)@@G@@ TO 'NUMBER' ROUTINE    @E@@@@LX0020 ANA,U A0,AZERO    . CONVERT DIGIT--XR
)@@G@@ CODED TO BINARY  @E@@@@       LA    A3,A0       . INITIALIZE FRACTION LXS
)@@G@@OW-ORDER    @B@@@@       SZ    NUSIGN      . SET SIGN PLUS  @C@@@@      XT
)@@G@@ SZ    NUDCPT      . NO DECIMAL POINT YET @ @@@@       J     NUMBER     XU
)@@G@@ .    @D@@@@LX0030 SA    A0,NUDCPT   . 1ST CHAR=DECIMAL- SET FLAG @B@@@@XV
)@@G@@       SZ    NUSIGN      . SET SIGN PLUS  @E@@@@       SZ    A3         XW
)@@G@@ . INITIALIZE LOW-ORDER FRACTION    @F@@@@       DL    A4,X2       . WE XX
)@@G@@GOT A DP, SO SAVE XI,XO IN CASE     @F@@@@       GETNXT            . THEXY
)@@G@@ NEXT CHAR IS A DYAD. WHAT IS IT    @F@@@@       AA,U  A15,1       . JUSXZ
)@@G@@T PEEKING SO DON'T DECREMENT COUNT  @D@@@@       JNDIGT  LX0035    . IF YA
)@@G@@NOT DIGIT, GO TRY DYAD  @E@@@@       SZ    A2          . CLEAR HIGH ORDEYB
)@@G@@R PORTION FRACTION@A@@@@       SZ    A4          . CLEAR EXP@D@@@@      YC
)@@G@@ J     NU0100      . AND GO CONTINUE NORMALLY   @B@@@@LX0035 TDYAD      YD
)@@G@@       . IS IT A DYAD   @D@@@@       J     LX0500      . NO, IT'S NOT ERYE
)@@G@@ROR OUT.    @D@@@@       LA,U  A0,ADECPT   . YES IT IS, SO RELOAD THE DPYF
)@@G@@@C@@@@       LA,U  A1,0        . SET THE RETURN FLAG  @D@@@@       DS   YG
)@@G@@ A4,X2       . RESTORE THE FETCH REGS, AND@A@@@@       J     LX0400     YH
)@@G@@ . RETURN   @G@@@@LX0040 DL    A4,X2       . SAVE X2,X3 PENDING PEEK. ( YI
)@@G@@FRST CHR = UMIN ) @ @@@@       GETNXT            .    @F@@@@       AA,U YJ
)@@G@@ A15,1       . JUST PEEKING SO DON'T DECREMENT COUNT  @C@@@@       JDIGIYK
)@@G@@T  LX0045    . IF NEXT CHR IS DIGIT @D@@@@       JNE,U A0,ADECPT LX0500 YL
)@@G@@. IF NO DEC PNT, LEX ERR@ @@@@       GETNXT            .    @F@@@@      YM
)@@G@@ AA,U  A15,1       . JUST PEEKING SO DON'T DECREMENT COUNT  @G@@@@      YN
)@@G@@ JNDIGT LX0500     . IF DEC PNT WITH NO TRAILING DIG, ALSO LEX ERR@B@@@@YO
)@@G@@LX0045 SA    A0,NUSIGN   . SET MINUS FLAG @D@@@@       SZ    NUDCPT     YP
)@@G@@ . FOR NUM RTNE, NO DEC PT YET@C@@@@       SZ    A3          . CLEAR LOWYQ
)@@G@@ END FRAC   @E@@@@       DS    A4,X2       . RESTORE REGS SINCE PEEK WENYR
)@@G@@T OK  @B@@@@       J     NUMBER      . AND GO TO IT   @[@@@@.     @C@@@@YS
)@@G@@LX0100 . $RPH ALFABETIC- START STASHING NAME    @[@@@@. $D  @F@@@@      YT
)@@G@@ LR,U  R1,MAXNAM   . SET MAX NO CHARS ALLOWED IN A NEME     @D@@@@      YU
)@@G@@ SZ    LXTRUN      . TURN OFF TRUNCATION FLAG   @B@@@@       SZ    LXNTYYV
)@@G@@P      . CLEAR NAME TYPE@F@@@@       LXM,U X5,WORDPT   . INITIALIZE BUFFYW
)@@G@@ER ADDR TO RECIEVE NAME @E@@@@       LXI,U X5,1        . STEP THRU BUF 1YX
)@@G@@ WD AT A TIME     @D@@@@       LX,U  X4,LX0140   . SET LINK TO STASH ROUYY
)@@G@@TINE  @D@@@@       TNE,U A0,AS       . DOES NAME START WITH 'S'?  @D@@@@YZ
)@@G@@       J     LX0104      . YES, POSSIBLE STOPVECTOR   @C@@@@       TE,U ZA
)@@G@@ A0,AT       . NO, HOW ABOUT 'T'?   @D@@@@       J     LX0110      . NO,ZB
)@@G@@ PLAIN NAME, GO STASH IT@C@@@@LX0104 SA    A0,A6       . TEMP SAVE 'S' OZC
)@@G@@R 'T' @E@@@@       DL    A4,X2       . TEMP SAVE FETCHPOINTERS FOR PEEK ZD
)@@G@@@C@@@@       GETNXT            . GET CHAR AFTER 1ST   @D@@@@       TE,U ZE
)@@G@@ A0,AMARK    . ISIT A TRACE/STOP FLAG?    @D@@@@       J     LX0107     ZF
)@@G@@ . NO, GO RESET LOOKAHEAD     @E@@@@       ANA,U A6,AS-1     . YES-COMPUZG
)@@G@@TE NAME TYPE (S=1, T=2) @ @@@@       SA    A6,LXNTYP   .    @C@@@@      ZH
)@@G@@ GETNXT            . GET CHAR AFTER FLAG  @E@@@@       JALFA  LX0110    ZI
)@@G@@ . IF ALFA, GO START SAVING NAME    @C@@@@       J     LX0500      . ELSZJ
)@@G@@E LEXICAL ERR     @B@@@@LX0107 DS    A4,X2       . RESET FETCHREGS@D@@@@ZK
)@@G@@       LA    A0,A6       . AND STARTING CHAR OF NAME  @F@@@@       AA,U ZL
)@@G@@ A15,1       . COMPENSATE COUNT OF NO CHARS SCANNED   @C@@@@LX0110 TZ   ZM
)@@G@@ LXTRUN      . TRUNCATION FLAG ON?  @D@@@@       J     LX0120      . YESZN
)@@G@@, DON'T STASH THIS CHAR @C@@@@       JGD   R1,LX0115   . ROOM FOR THIS CZO
)@@G@@HAR?  @E@@@@       SA    A0,LXTRUN   . NO-- TURN ON TRUNCATION FLAG     ZP
)@@G@@@G@@@@       LR,U  R1,0        . RESET CHAR COUNTER TO ZERO CHARS LEFT TZQ
)@@G@@O GET @C@@@@       J     LX0120      . AND GO GET NEXT CHAR @B@@@@LX0115ZR
)@@G@@ STASH             . STASH LAST CHAR@B@@@@LX0120 GETNXT            . GETZS
)@@G@@ NEXT CHAR  @D@@@@       JALFAM  LX0110    . IF ALFAMERIC, GO STASH IT  ZT
)@@G@@@C@@@@. END OF NAME-- PAD WITH BLANKS, IF THERE'S ROOM@D@@@@LX0130 LNA  ZU
)@@G@@ A2,R1       . PICK UP CHARACTER COUNTER  @E@@@@       LA,U  A2,MAXNAM,AZV
)@@G@@2 . COMPUTE NO OF CHARS IN THE NAME @F@@@@       PAD   ASPACE      . PADZW
)@@G@@ WITH SPACES ACROSS A WORD BOUNDARY @C@@@@       LA    A3,LXNTYP   . GETZX
)@@G@@ TYPE OF NAME     @B@@@@       LA,U  A1,1        . SET RETURN FLAG@A@@@@ZY
)@@G@@       J     LX0400      . GO HOME  @ @@@@. STASH TABLES FOR NAMES--    ZZ
)@@G@@@^@@@@LX0140 SA,Q1 A0,0,X5 .  @^@@@@       LMJ   X4,0,X4 .  @^@@@@      AA
)@@G@@ SA,Q2 A0,0,X5 .  @^@@@@       LMJ   X4,0,X4 .  @^@@@@       SA,Q3 A0,0,AB
)@@G@@X5 .  @^@@@@       LMJ   X4,0,X4 .  @^@@@@       SA,Q4 A0,0,*X5 . @^@@@@AC
)@@G@@       LMJ   X4,0,X4 .  @ @@@@       J     LX0140      .    @[@@@@/.    AD
)@@G@@@[@@@@.     @C@@@@. OPENING QUOTE OF CHARACTER LIT RECOGNIZED--   @D@@@@AE
)@@G@@LX0200 LA,U  A1,2        . SET ALFA LIT RETURN FLAG   @A@@@@       J    AF
)@@G@@ LX0400      . AND EXIT @A@@@@LX0300. $RPH OPERATOR SCANNED--     @[@@@@AG
)@@G@@. $D  @D@@@@       LA,U  A1,0        . RETURN FLAG IS ZERO---     @A@@@@AH
)@@G@@LX0400. $RPH RETURN TO CALLING PROG @[@@@@. $D  @^@@@@       LX    X11,LAI
)@@G@@XLINK @B@@@@       J     1,X11       . NORMAL RETURN  @F@@@@LX0500 .    AJ
)@@G@@             . LEXICAL ERROR-- RETURN TO MAINPROG     @^@@@@       ERRORAK
)@@G@@  YLEXIC .  @ @@@@       LX    X11,LXLINK .     @^@@@@       J     0,X11AL
)@@G@@ .    @]@@@@LX0900.     @ @@@@       ERROR YSYSTM,LX0990    @ @@@@LX0990AM
)@@G@@ LX    X11,LXLINK  .    @ @@@@       J     0,X11       .    @#@@@@      AN
)@@G@@ VARBLS.    @ @@@@LXLINK RES   1           .    @ @@@@LXTRUN EQUF  LXLINAO
)@@G@@K,,H1  .    @G@@@@LXNTYP RES   1      . NAME TYPE (0=ORDINARY,1=STOPVECTAP
)@@G@@,2=TRACEVECT)     @F@@@@/. NUMBER PICKUP--(A DIGIT OR UNARY MINUS OR DECAQ
)@@G@@IMAL HAS BEEN HIT)@[@@@@.     @#@@@@       INSTRS.    @B@@@@NUMBER . $HPAR
)@@G@@  ENTRY TO NUMERIC LIT SCANNER@A@@@@. $T4 GET NEXT CHAR - WHAT IS IT    AS
)@@G@@@D@@@@. $A DIGIT,  DECIMAL,  ALFAE,NU0400    OTHER,NU0600   @F@@@@      AT
)@@G@@ SZ    A2          . CLEAR HIGH ORDER PORTION OF FRACTION   @D@@@@      AU
)@@G@@ SZ    A4          . CLEAR EXPONENT COUNTER     @[@@@@.     @C@@@@NU0010AV
)@@G@@ GETNXT            . PICK UP NEXT CHAR    @D@@@@       JNDIGT  NU0200   AW
)@@G@@ . IF NOT DIGIT, GO TRY POINT @C@@@@. DIGIT-- PACK IT INTO RUNNING VALUEAX
)@@G@@ OF CONST   @G@@@@NU0100 JG    A2,CDOFLO NU0110 . WILL NEXT DIGIT OFLO? AY
)@@G@@IF NOT, GO PACK IT@E@@@@       AA,U  A4,1              . NO ROOM- POST TAZ
)@@G@@RUNCATION   @E@@@@       J     NU0120            . GO CHECK WHETHER FLOABA
)@@G@@TING  @E@@@@. MULT VALUE BY,10 (USING SHIFTING) AND ADD THIS DIGIT IN   BB
)@@G@@@B@@@@NU0110 LDSL  A2,1             . MULT BY 2 @B@@@@       DS    A2,R1BC
)@@G@@            . SAVE 2*V  @B@@@@       LDSL  A2,2             . GET 8*V   BD
)@@G@@@C@@@@       DA    A2,R1            . 10*V=8*V+2*V    @E@@@@       ANU,UBE
)@@G@@   A0,AZERO  . CONVERT INTERNAL TO BINARY IN A1 @D@@@@       LA,U  A0,0 BF
)@@G@@            . CLEAR FOR DOUBLE ADD  @E@@@@       DA    A2,A0            BG
)@@G@@. ADD NEW DIGIT INTO FRACTION @C@@@@. CHECK FOR EXPONENT ADJUSTMENT AFTEBH
)@@G@@R DECIMAL PT@D@@@@NU0120 TZ    NUDCPT      . HAS THERE BEEN A POINT     BI
)@@G@@@G@@@@       ANA,U A4,1        . YES, ADJUST EXPONENT FOR DIGIT AFTER POBJ
)@@G@@INT   @C@@@@       J     NU0010      . AND GO GET NEXT CHAR @#@@@@. DECIBK
)@@G@@MAL POINT   @B@@@@NU0200 TE,U  A0,ADECPT   . IS CHAR A DP?  @D@@@@      BL
)@@G@@ J     NU0300      . NO-- TRY EXPONENT FLAG     @D@@@@       TZ    NUDCPBM
)@@G@@T      . HAS THERE ALREADY BEEN A DP@C@@@@       J     NU0500      . YESBN
)@@G@@, LEXICAL ERROR   @C@@@@       SA    A0,NUDCPT   . NO TURN ON POINT FLAGBO
)@@G@@@D@@@@       J     NU0010      . AND GO BACK FOR NEXT CHAR  @C@@@@. ALFABP
)@@G@@ 'E': MAY BE BEGINNING OF AN EXPONENT---  @E@@@@NU0300 TE,U  A0,AE      BQ
)@@G@@ . IS IT AN ALFA 'E' (EXPONENT FLAG)@G@@@@       J     NU0400      . NO,BR
)@@G@@ CHECK FOR TERMINATION OR SYNTAX ERROR    @D@@@@       SZ    NUESGN     BS
)@@G@@ . YES, SET EXPONENT SIGN PLUS@D@@@@NU0310 GETNXT            . PICK UP 1BT
)@@G@@ST CHAR AFTER 'E' @C@@@@       TE,U  A0,AUMINS   . IS IT UNARY MINUS?   BU
)@@G@@@F@@@@       J     NU0320      . NO, TREAT AS IF 1ST DIGIT OF EXP FIELD BV
)@@G@@@D@@@@       SA    A0,NUESGN   . YES, SET EXPONENT NEGATIVE @D@@@@      BW
)@@G@@ GETNXT            . PICK UP CHAR AFTER THE 'E' @A@@@@.  PROCESS DIGITS BX
)@@G@@OF EXPONENT FIELD @D@@@@EXPGET* PROC . PROCESS EXPONENT DIGITS (AFTER THBY
)@@G@@E 1ST)@D@@@@       GETNXT            . PICK UP NEXT CHARACTER     @D@@@@BZ
)@@G@@       JNDIGT  NU0330    . IF NOT DIGIT, GO CLEANUP   @#@@@@       UNLISCA
)@@G@@T.    @D@@@@       ANA,U A0,AZERO    . CONVERT CODED TO BINARY    @C@@@@CB
)@@G@@       SA    A0,R2       . TEMP SAVE THIS DIGIT @E@@@@       LA    A0,R1CC
)@@G@@       . RECOVER RUNNING EXPONENT SUM     @A@@@@       MSI,U A0,10      CD
)@@G@@ . BUMP IT  @C@@@@       AA    A0,R2       . ADD THIS DIGIT IN    @C@@@@CE
)@@G@@       SA    A0,R1       . SAVE NEW RUNNING SUM @]@@@@       LIST.@]@@@@CF
)@@G@@       END. @A@@@@. PROCESS 1ST DIGIT OF EXPONENT---  @D@@@@NU0320 JNDIGCG
)@@G@@T  NU0500    . IF NOT DIGIT, LEXICAL ERROR@D@@@@       ANA,U A0,AZERO   CH
)@@G@@ . CONVERT DIGIT TO BINARY    @C@@@@       SA    A0,R1       . TEMP SAVECI
)@@G@@ 1ST DIGIT  @D@@@@       EXPGET            . PICK UP 2ND DIGIT, IF ANY  CJ
)@@G@@@D@@@@       EXPGET            . LIKEWISE FOR 3RD DIGIT     @F@@@@      CK
)@@G@@ GETNXT            . GET CHAR AFTER 3RD DIGIT (TERMINATOR)  @^@@@@. NOW CL
)@@G@@CLEAN UP EXPONENT @E@@@@NU0330 SA    A0,R2       . TEMP SAVE TERMINAL CHCM
)@@G@@ARACTER     @D@@@@       LA    A0,R1       . FETCH BINARY EXPONENT FIELDCN
)@@G@@@D@@@@       TZ    NUESGN      . IS IT SUPPOSED TO BE MINUS?@B@@@@      CO
)@@G@@ LNA   A0,A0       . YES, NEGATE IT @E@@@@       AA    A4,A0       . ADDCP
)@@G@@ TO EXP FROM FRACTION SCAN    @D@@@@       LA    A0,R2       . RECOVER TCQ
)@@G@@ERMINAL CHARACTER @G@@@@. END OF NUMERIC CONSTANT--CHECK TERMINAL CHAR, CR
)@@G@@CONVERT TO FLOATING     @C@@@@NU0400 DS    A2,R1       . TEMP SAVE FRACTCS
)@@G@@ION   @C@@@@       SA    A4,R3       . TEMP SAVE EXPONENT   @G@@@@      CT
)@@G@@ JALFAM NU0500     . IF TERMINAL CHAR IS ALFAMERIC, SYNTAX ERROR  @G@@@@CU
)@@G@@       TNE,U A0,AUMINS   . UNARY MINUS AND DECIMAL ARE NO GOOD, EITHER  CV
)@@G@@@ @@@@       J     NU0500      .    @ @@@@       TNE,U A0,ADECPT   .    CW
)@@G@@@ @@@@       J     NU0500      .    @C@@@@       DL    A2,R1       . RECCX
)@@G@@OVER FRACTION     @C@@@@       LA    A4,R3       . RECOVER EXPONEN T    CY
)@@G@@@[@@@@.     @D@@@@NU0410 DJZ   A2,NU0415   . ZERO IS ALWAYS INTEGER     CZ
)@@G@@@F@@@@       JNZ   A4,NU0420   . NOS WITH EXPONENTS ARE ALWAYS FLOATING DA
)@@G@@@F@@@@       THALFW A2         . WILL THIS VAL REALLY FIT IN 17 BITS?   DB
)@@G@@@B@@@@       J     NU0420      . NO, GO FLOAT IT@D@@@@NU0415 LA,U  A1,4 DC
)@@G@@       . SET HALFINTEGER RETURN CODE@D@@@@       J     NU0430      . GO DD
)@@G@@SET SIGN AND RETURN     @#@@@@. DOUBLE FLOAT    @E@@@@NU0420 LMJ   X11,CDE
)@@G@@D0010  . USE CONVERT TO DOUBLE SUBROUTINE @F@@@@       J     NU0500     DF
)@@G@@ . EXPONENT OVER/UNDERFLOW--LEXICAL ERROR @F@@@@       JZ    A2,NU0415  DG
)@@G@@ . IF RESULT IS SMALL, IT'S A HALFINT     @C@@@@       TZ    ERRITH     DH
)@@G@@ . IS ARITH ERR FLAG ON @D@@@@       J     LX0900      . GAK! IT IS   SYDI
)@@G@@S ERROR     @E@@@@       LA,U  A1,7        . SET DOUBLE FLOAT RETURN CODDJ
)@@G@@E     @^@@@@. EXIT FROM NUMERIC SCAN@E@@@@NU0430 DJZ   A2,$+3      . DONDK
)@@G@@'T GENERATE NEGATIVE ZERO     @F@@@@       TZ    NUSIGN      . NON-ZERO.DL
)@@G@@ DID WE PICK UP A MINUS SIGN+ @D@@@@       DLN   A2,A2       . YES, COMPDM
)@@G@@LEMENT RESULT     @C@@@@       J     LX0400      . TAKE NORMAL EXIT     DN
)@@G@@@#@@@@. LEXICAL ERROR   @F@@@@NU0500 EQU   LX0500      . ERROR RETURN SEDO
)@@G@@CTION IS IN LEX DRIVER  @[@@@@.     @#@@@@       VARBLS.    @#@@@@NUDCPTDP
)@@G@@ RES   1    @#@@@@NUESGN RES   1    @#@@@@NUSIGN RES   1    @[@@@@/.    DQ
)@@G@@@#@@@@       INSTRS.    @[@@@@.     @G@@@@. CONVERSION OF DOUBLE INTEGERDR
)@@G@@ (A2,A3) AND DECIMAL XPONENT (A4) TO DFLOT@[@@@@.     @E@@@@IMMED* FUNC DS
)@@G@@. CREATE AN IMMEDIATE DATA (18 BIT) CONSTANT    @A@@@@       END   IMMEDDT
)@@G@@(1)**0777777 .    @[@@@@.     @E@@@@CD0010 DJZ   A2,CD0095   . IF INTEGEDU
)@@G@@R IS ZERO, WE'RE DONE   @E@@@@       SA    A0,R3       . TEMP SAVE TERMIDV
)@@G@@NAL CHARACTER     @G@@@@       JN    A4,CD0030   . IF EXPONENT IS NEGATIDW
)@@G@@VE, WE WON'T ADJUST IT  @F@@@@CD0020 JNZ   A4,CD0025   . IF EXPONENT NONDX
)@@G@@-ZERO, KEEP ADJUSTING   @C@@@@. VALUE IS INTEGER-- TRY TO DO IT IN HALFWDY
)@@G@@ORD   @E@@@@       JNZ   A2,CD0025   . IF IT FILLS 2 REGS, NOT HALFWORD DZ
)@@G@@@E@@@@       JN    A3,CD0025   . WATCH OUT FOR SPILL INTO SIGN BIT@D@@@@EA
)@@G@@       TLE,U A3,0400000  . SMALL ENUF TO BE A HALFINT?@A@@@@       J    EB
)@@G@@ CD0095      . YES, QUIT@G@@@@CD0025 JLE   A2,CDOFLO CD0030 . IF NO ROOMEC
)@@G@@ FOR NEXT DIGIT, GO CONVERT   @D@@@@       LDSL  A2,1        . YES, STARED
)@@G@@T MULTIPLICATION  @C@@@@       DS    A2,R1       . TEMP SAVE 2*INTEGER  EE
)@@G@@@C@@@@       LDSL  A2,2        . NOW WE HAVE 8*INTEGER@D@@@@       DA   EF
)@@G@@ A2,R1       . MULT DONE. 10*I=8*I+2*I    @D@@@@       ANA,U A4,1       EG
)@@G@@ . DECREMENT DECIMAL EXPONENT @E@@@@       J     CD0020      . GO BACK AEH
)@@G@@ND TRY TO PACK SOME MORE@]@@@@CD0030.     @E@@@@       LA,U  A1,02074   EI
)@@G@@ . GET DOUBLE FLOATING EXPONENT BIAS@G@@@@       DFP   A1,A2       . NOWEJ
)@@G@@ FRACTION PORTION IS PACKED IN (A2,A3)    @]@@@@CD0040 .    @F@@@@CD0050EK
)@@G@@ LMA   A1,A4       . GET ABSVAL OF EXP TO USE AS TABLE INDEX@D@@@@      EL
)@@G@@ LA,U  A0,0        . CLEAR A0 FOR DIVISION.     @F@@@@       DI,U  A0,18EM
)@@G@@       . FACTOR TO PWR OF 10**18 AND REMAINDER  @G@@@@       LDSC  A0,37EN
)@@G@@       . ALIGN FOR TABLE ACCESS, FIX DUMDUM ERROR     @F@@@@       TG,U EO
)@@G@@ A1,PWRXX-PWR18   . IS POWER OF 10**18 IN THE TABLE?  @D@@@@       J    EP
)@@G@@ CD0090      . NO, TAKE OVERFLOW EXIT     @D@@@@       TP    A4         EQ
)@@G@@ . WAS EXPONENT SIGN POSITIVE?@B@@@@       J     CD0070      . NO, GO DIER
)@@G@@VIDE  @G@@@@CD0060 TZ    A1          . POS EXP- IS THERE A PWR OF 10**18ES
)@@G@@ TO BE USED?@F@@@@       DFM   A2,PWR18,A1 . YES, MPY BY REQUIRED PWR OFET
)@@G@@ 10**18     @E@@@@       TZ    A0          . IS THERE A PWR OF 10 TO BE EU
)@@G@@USED? @B@@@@       DFM   A2,PWR10,A0 . YES, DO IT     @C@@@@       J    EV
)@@G@@ CD0080      . GO CHECK FOR OVERFLOW@F@@@@CD0070 TZ    A1          . NEGEW
)@@G@@ EXP- IS THERE A PWR OF 10**18?     @B@@@@       DFD   A2,PWR18,A1 . YESEX
)@@G@@, DIV BY IT @D@@@@       TZ    A0          . SAME STUFF FOR PWR OF 10   EY
)@@G@@@ @@@@       DFD   A2,PWR10,A0 .    @A@@@@. TEST FOR FLOATING UNDER/OVEREZ
)@@G@@ FLOWS@E@@@@CD0080 TNZ   ERRITH      . HAS CONTINGENCY RTNE SET OFLO ON?FA
)@@G@@@C@@@@       J     CD0082      . NO, CONTINUE NORMALLY@C@@@@       SZ   FB
)@@G@@ ERRITH      . YES, TURN IT OFF     @D@@@@       J     CD0090      . ANDFC
)@@G@@ TAKE OVERFLOW EXIT     @F@@@@CD0082 DS    A2,R1       . ALL IS OK  TEMPFD
)@@G@@ SAVE THE DOUBLE VALUE  @D@@@@       TESTIN A1,R1      . TEST FOR AN INTFE
)@@G@@EGER VALUE  @E@@@@       DL    A2,R1       . IT'S NOT--RECOVER THE FLOATFF
)@@G@@VAL   @D@@@@CD0095 LA    A0,R3       . RECOVER TERMINAL CHARACTER @#@@@@FG
)@@G@@       J 1,X11 .  @B@@@@CD0090 J     0,X11       . ERROR EXIT     @[@@@@FH
)@@G@@.     @C@@@@/. CONVERSION TABLES FOR DECIMAL EXPONENTS--    @#@[@@      FI
)@@G@@ CONSTS.    @G@@[[       VARCON            . IN D-BANK CUZ WE'RE SHORT OFJ
)@@G@@N I-BANK CORE---  @G[@@@CDOFLO +0377777777777/10 . MAX INTEGER/10, TO TEFK
)@@G@@ST FOR POSSIBLE OFLO    @#@@@@. POWERS OF 10--- @D@@@@PWR10* . THIS TABLFL
)@@G@@E IS ALSO USED BY THE FORMAT ROUTINE@^@@@@K DO 19 , +1.0D*+(K-1) .@ @@@@FM
)@@G@@. POWERS OF 10 TO THE 18---   @D@@@@PWR18* . THIS TABLE IS ALSO USED BY FN
)@@G@@THE FORMAT ROUTINE@ @@@@K DO 18 , +1.0D*+(18*(K-1)) . @F@@@@PWRXX* . THIFO
)@@G@@S SYMBOL MARKS END OF TABLE FOR USE BY FORMAT ROUTINE @E@@[[. THESE LABEFP
)@@G@@LS EXTERNALIZED FOR GENERAL USE AS CONSTANTS    @ @@[[UNITY*  EQU    PWRFQ
)@@G@@10     .    @ @@[[TEN*    EQU    PWR10+2   .    @]@@@@       END  ___@@@FR
)@@G@@       ANA,U A4,1        . DECREMENT DECIMAL EXP*[S@@@*SDFF*@^@@@@.  SIMFS
)@@G@@ULATOR FOR LIJ -  @G@@@@.     THIS ROUTINE MUST BE MAPPED INTO EVERY REPFT
)@@G@@, AND THE DEFIND ENTRY  @G@@@@. POINT EACH MUST BE THE TAG  LIJ$  IN THIFU
)@@G@@S ROUTINE.  IN ADDITION, THE  @G@@@@. D-BANK TAGS MUST BE THE SAME LOCATFV
)@@G@@IONS FOR ALL REPS, AS THEY MUST BE  @B@@@@. ABLE TO COMMUNICATE THRU THEFW
)@@G@@ D-BANK.    @G@@@@.     CALL SEQ IS -      SLJ  LIJ$$   (WITH LINKREG PAFX
)@@G@@CKED IN A-FIELD)  @B@@@@.                        LA,U A0,TARGADR  @E@@@@FY
)@@G@@. THE RESULTS ARE FUNCTIONALLY EQUIVALENT TO A REAL LIJ     @[@@@@.     FZ
)@@G@@@ @@@@       AXR$              .    @[@@@@$(2) .@G@@@@. THIS CODE IS D-BGA
)@@G@@ANK CUZ THERE'S NO I-BANK UNTIL WE DO THIS THE 1ST X  @B@@@@LIJ$$* +0,$-GB
)@@G@@$            . SLUDGE TARGET  @C@@@@       DS   A0,LJREGS    . TEMP SAVEGC
)@@G@@ WORKREGS   @E@@@@       LA   A1,*LIJ$$    . GET INST WHICH COMPUTES EFFGD
)@@G@@ADR   @D@@@@       SA   A1,LJTARG    . TEMP SAVE FOR EXECUTION    @F@@@@GE
)@@G@@       DL   A0,LJREGS    . FOR GOOD LUCK IN CASE THEY'RE USED     @C@@@@GF
)@@G@@       EX   LJTARG       . COMPUTE TARGET ADDR  @F@@@@       SA   A0,LJTGG
)@@G@@ARG    . AND POST FOR WHEN WE GET TO THE REP    @D@@@@       LA   A1,LIJGH
)@@G@@$$     . GET CALL SEQ POINTER BACK  @D@@@@       LA,U A0,1,A1      . SKIGI
)@@G@@P PAST PARAMETER WORD   @D@@@@       SA,H2 A0,LJRTRN   . AND SAVE RETURNGJ
)@@G@@ LINK ADDR  @C@@@@       ANA,U A0,2        . FIND THE SLJ ITSELF  @B@@@@GK
)@@G@@       LA    A0,0,A0     . PICK IT UP     @B@@@@       LSSL  A0,10      GL
)@@G@@ . GET RID OF F,J @D@@@@       SSL   A0,36-4     . AND LINE UP ADDR OF LGM
)@@G@@INKREG@C@@@@       SA    A0,LJLNAM   . SAVE LINKREG NAME    @D@@@@      GN
)@@G@@ LA    A1,0,A0     . GET CONTENTS OF LINKREG    @D@@@@       TNE,U A0,A0GO
)@@G@@       . WHICH MIGHT HAVE BEEN A0   @B@@@@       LA    A1,LJREGS   . WHIGP
)@@G@@CH WE SAVED @A@@@@       TNE,U A0,A1       . OR A1    @C@@@@       LA   GQ
)@@G@@ A1,LJREGS+1 . WHICH WE ALSO SAVED  @H@@@@       SSL   A1,18       . LINGR
)@@G@@E UP BANK DESCR INDEX FROM LINKREG CONTENTS     @F@@[[        TZ,U   REPGS
)@@G@@MAP         . WAS COLLECTION NON-REENTRANT?     @E@@@@       TNE   A1,LJGT
)@@G@@CURI   . IS IT THE BANK WE'RE ALREADY IN? @E@@@@       J     LIJ$       GU
)@@G@@ . YES, DON'T BOTHER TO LINK TO IT  @E@@@@       LA    A0,LJ$TBL,A1     GV
)@@G@@. ELSE GET NAME FROM TABLE    @B@@@@       ER    RLINK$      . AND CALL GW
)@@G@@IT    @[@@@@.     @E@@@@. ALL REPS HAVE A SINGLE PRIMARY ENTRY POINT WHIGX
)@@G@@CH IS HERE  @[@@@@.     @[@@@@$(1) .@B@@@@LIJ$*  LA    A0,LJCURI   . GETGY
)@@G@@ CURRENT BDI@E@@@@       SA,H1 A0,LJRTRN   . WHICH BECOMES RETURN BANK IGZ
)@@G@@NDEX  @F@@@@       SA    A1,LJCURI   . AND THIS BANK IS NOW THE CURRENT HA
)@@G@@ONE   @C@@@@       LA    A0,LJLNAM   . GET NAME OF LINKREG  @C@@@@      HB
)@@G@@ LA    A1,LJRTRN   . GET LINKREG VALUE    @C@@@@       TNE,U A0,A0      HC
)@@G@@ . IF A0 WAS LINKREG    @A@@@@       SA    A1,LJREGS   . SET IT   @B@@@@HD
)@@G@@       TNE,U A0,A1       . OR IF A1 WAS...@D@@@@       SA    A1,LJREGS+1HE
)@@G@@   . THEN ITS SPECIAL, TOO    @E@@@@       SA    A1,0,A0     . SET RETURHF
)@@G@@N IN CASE IT WAS NEITHER@E@@@@       DL    A0,LJREGS   . RECOVER USER'S HG
)@@G@@ORIGINAL REGS     @C@@@@       J     *LJTARG     . AND GO TO TARGET ADDRHH
)@@G@@@[@@@@.     @F@@@@$(4) . THIS MUST BE AVAILABLE TO ALL OF THE REPS IN THHI
)@@G@@E PROGRAM-- @#@@@@LIJ$$$ INFO  2 4 .@F@@@@LJLNAM EQUF  $,,Q1       . NAMHJ
)@@G@@E (I.E. ADDR ) OF LINK REGISTER     @D@@@@LJCURI EQUF  $,,Q2       . INDHK
)@@G@@EX OF 'CURRENT' IBANK   @#@@@@       +0    .    @B@@@@LJREGS RES   2    HL
)@@G@@  . TEMP STORE OF A0,A1 @D@@@@LJTARG RES   1      . TARGET I-BANK INTERNHM
)@@G@@AL ADDR     @D@@@@LJRTRN RES   1      . RETURN LINKREG CONSTRUCTED HERE HN
)@@G@@@D@@@@. TABLE OF REP NAMES, ORDERED BY BANK DESCR INDEX     @[@@@@.     HO
)@@G@@@G@@@@LJ$FIL* RES  2 . FILENAME USED BY ELEMENT SETUP IF IT MUST DO AN RHP
)@@G@@LIST$ @E@@@@LJ$TBL EQU   $-1         . BASE TO INDEX INTO REP NAME TABLEHQ
)@@G@@@ @@@@       'APL$XQ'          .    @E@@@@       'APL$SY'          . SYSHR
)@@G@@ COMMAND AND FUNC DEFN IBANK  @G@@[[NIBANX* EQU  $-LJ$FIL-2  . NO OF I-BHS
)@@G@@ANKS (EXCLUDING ERROR$ AND UOM @ED) @E@@[[        'ED$   '              HT
)@@G@@. I-BANK NAME OF UOM EDITOR   @ @@[[       'ERROR$'          .    @[@@@@HU
)@@G@@.     @F@@@@XQTREP* EQU  1           . BANK DESCR INDEX TO USE FOR MAIN HV
)@@G@@REP   @E@@@@SYSREP* EQU  2           . DITTO FOR SYSTEM COMMAND REP     HW
)@@G@@@C@@@@FUNREP* EQU  2           . AND DEF MODE REP     @#@[@@NIBANX* EQU HX
)@@G@@ 2 .  @[[@@@.     @^@@@@       END          .   ___,LJLNAM   . SAVE LINKHY
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************HZ
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APIA
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         IB
)@@G@@                            * @^@@@@       AXR$         .   @C@@@@      IC
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINID
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.IE
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTIF
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONIG
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@IH
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * II
)@@G@@@G@@@@.                                                                 IJ
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                IK
)@@G@@          * @G@@@@. ****************************************************IL
)@@G@@***************** @[@@@@.     @[@@@@.     @B@@@@       PSUDOP           IM
)@@G@@ . DEFINE OPCODES @F@@@@/. INITIALIZE FOR PICKUP OF TWO ARGS FORCING SAMIN
)@@G@@E MODE FOR EACH   @#@@@@. RETURN REGS--   @A@@@@.         X4,X6     FETCIO
)@@G@@H RTNE ADDRS@ @@@@.         X5,X7     DATA ADDRS@ @@@@.         A14,A15 IP
)@@G@@  LENGTHS   @C@@@@.               A3        MODE USED FOR FETCHING@[@@@@IQ
)@@G@@.     @[@@@@.     @[@@@@.     @[@@@@.     @#@@@@       INSTRS     @ @@@@IR
)@@G@@PIKTWO* SX   X11,PTLINK  .    @E@@@@       LX,U  X4,1        . SET LOOP IS
)@@G@@CTR FOR LEFT/RIGHT ARGS @D@@@@       SZ    LFTDSC      . CLEAR DESCRIPTOIT
)@@G@@R ADDRS     @ @@@@       SZ    RITDSC      .    @G@@@@PT0010 VERIFY PT09IU
)@@G@@00,PT0900,PT0990  *PTNDMY,X4 . POP AND DECODE ARGS    @E@@@@       DS   IV
)@@G@@ A0,*PNTDAD,X4    . SAVE PARAMS FOR THIS ARG    @A@@@@       DS    A2,*PIW
)@@G@@NTTYP,X4    .     @A@@@@       DS    A4,*PNTRNK,X4    .     @A@@@@      IX
)@@G@@ DS    A6,*PNTDSC,X4    .     @E@@@@       JGD   X4,PT0010        . NOW IY
)@@G@@GO BACK FOR OTHER ARG   @D@@@@. CHECK VALIDITY OF ARG MODES-- FIRST CHECIZ
)@@G@@K FOR NULLS @F@@@@PT0020 JNZ   A5,PT0022   . IF RITEARG NOT NULL, GO CHEJA
)@@G@@CK LEFT     @D@@@@       LA    A3,LFTMOD   . RITE NULL, USE LEFT MODE   JB
)@@G@@@C@@@@       TNZ   LFTSIZ      . IS LEFTARG NULL TOO? @F@@@@       LA,U JC
)@@G@@ A3,ZMOHFI   . YES, BOTH NULL. FORCE HALFINT RESULT   @C@@@@       J    JD
)@@G@@ PT0030      . GO SET UP TO FETCH   @F@@@@PT0022 TNZ   LFTSIZ      . RITJE
)@@G@@EARG NOT NULL-- IS LEFTARG NULL?    @G@@@@       J     PT0030      . YESJF
)@@G@@, GO SET UP USING MODE OF NON-NULL RITEARG@E@@@@       TNE   A3,LFTMOD  JG
)@@G@@ . NEITHER IS NULL, IS RIGHT=LEFT?  @B@@@@       J     PT0030      . YESJH
)@@G@@, USE IT    @F@@@@. ARGS NON-NULL AND NOT THE SAME-- BE SURE NEITHER IS JI
)@@G@@CHARACTER   @C@@@@       LA,U  A3,ZMOINT   . GET MODE CHANGE FLAG @D@@@@JJ
)@@G@@       LA,U  A2,ZMOCHR   . GET FLAG FOR COMPARISON    @E@@@@       TE   JK
)@@G@@ A2,LFTMOD        . MAKE SURE NEITHER IS CHAR   @A@@@@       TNE   A2,RIJL
)@@G@@TMOD        .     @G@@@@       J     PT0030      . ONE IS CHAR, SAY PICKJM
)@@G@@UP IS IN MIXED MODE     @G@@@@       LA,U  A3,ZMODFL        . MODE MISMAJN
)@@G@@TCH, RESULT WILL BE DFLOAT    @C@@@@       LA,U  A2,ZMOINT   . GET MODE JO
)@@G@@CHG FLAG    @B@@@@       TE    A3,LFTMOD   . IS LEFT DFLOAT?@C@@@@      JP
)@@G@@ SA    A2,LFTMOD   . NO, SET CHANGE MODE  @C@@@@       TE    A3,RITMOD  JQ
)@@G@@ . IS RIGHT DFLOAT?     @B@@@@       SA    A2,RITMOD   . NO, MOCE CHG ONJR
)@@G@@@G@@@@PT0030 SA    A3,PTMODF   . SAVE MODE IN WHICH RESULTS WILL BE FETCJS
)@@G@@HED   @D@@@@       DL    A0,LFTDAD   . RECOVER LEFTARG PARAMS     @ @@@@JT
)@@G@@       DL    A2,LFTTYP   .    @ @@@@       DL    A4,LFTRNK   .    @C@@@@JU
)@@G@@       LMJ   X11,PIKLFU  . SETUP FOR LEFTARG    @ @@@@       J     PT099JV
)@@G@@0      .    @D@@@@       DL    A0,RITDAD   .  RECOVER RITE ARG PARAMS   JW
)@@G@@@ @@@@       DL    A2,RITTYP   .    @ @@@@       DL    A4,RITRNK   .    JX
)@@G@@@C@@@@       LMJ   X11,PIKRIU  . SETUP FOR RITEARG    @^@@@@       J    JY
)@@G@@ PT0990     @A@@@@. NOW SET PARAMS FOR RETURN TO USER @E@@@@PT0040 LA   JZ
)@@G@@ A3,PTMODF   . RECOVER MODE WE WILL FETCH IN    @ @@@@       LX    X11,PKA
)@@G@@TLINK  .    @ @@@@       J     1,X11       .    @A@[@@PT0900 ERROR YSYSTKB
)@@G@@M,PT0990    .     @D@@[[PT0900 EQU   0           . SYSERR CAUSES FORCED KC
)@@G@@IGDM  @ [@@@PT0980 ERROR YDOMAI      .    @ @@@@PT0990 SA    A0,PTMODF  KD
)@@G@@ .    @E@[@@       LA    A6,LFTDSC   . IS THERE A LEFT ARG TO BE PURGED?KE
)@@G@@@C@[@@       JZ    A6,PT0995   . NO, GO CHECK RIGHT   @B@[@@       LMJ  KF
)@@G@@ X11,ERASET  . ERASE TEMPORARY@ @[@@       NOP               .    @ @[@@KG
)@@G@@       SZ    LFTDSC      .    @ @[@@PT0995 LA    A6,RITDSC   .    @ @[@@KH
)@@G@@       JZ    A6,PT0999   .    @ @[@@       LMJ   X11,ERASET  .    @ @[@@KI
)@@G@@       NOP               .    @ @[@@       SZ    LFTDSC      .    @G@@[[KJ
)@@G@@          LMJ       X11,ERASEA        . GARBAGE COLLECT ARGS, IF ANY    KK
)@@G@@@CE@@@       LA    A0,PTMODF   . RECOVER ERROR CODE   @ @@@@PT0999 LX   KL
)@@G@@ X11,PTLINK  .    @ @@@@       J     0,X11       .    @F@@@@/. GENERAL PKM
)@@G@@ICKUP RTNES FOR LEFT AND RIGHT ARGS--(INITIALIZE REGS)@[@@@@.     @B@@@@KN
)@@G@@. NOTE: ZMODFI CAN ONLY BE USED IN PIKRIU @#@@@@       INSTRS  .  @F@@@@KO
)@@G@@PIKLFT* SX   X11,PILINK  . COME HERE TO BOTH POP AND INITIALIZE   @A@@@@KP
)@@G@@       VERIFY PL0020,PL0030,PL0040 .@ @@@@       J     PL0005      .    KQ
)@@G@@@E@@@@PIKLFU* SX   X11,PILINK  . ENTRY IF VERIFY HAS BEEN DONE    @E@@@@KR
)@@G@@PL0005 LX,U  X5,0,A0     . SET DATA ADDR WITH ZERO INCR     @B@@@@      KS
)@@G@@ TNZ,H2 GLFSCL,A3  . IS MODE LEGAL? @B@@@@       J     PL0030      . NO-KT
)@@G@@SYSTEM ERROR@G@@@@       JNE,U A4,ZRANKS PL0010 . IF NON-SCALAR, USE ARRKU
)@@G@@AY MOVE RTNES     @B@@@@       LX,H2 X4,GLFSCL,A3 . SET SUBR ADDR @A@@@@KV
)@@G@@       J     PL0020      . AND EXIT @E@@@@PL0010 TE,U  A5,1        . IS KW
)@@G@@THIS ARRAY ONLY ONE ELEMENT?  @C@@@@       J     PL0015      . NO, GO SEKX
)@@G@@T THE STEP  @G@@@@       LX,H2 X4,GLFONE,A3 . YES, LEAVE STEP ZERO, AND KY
)@@G@@GET RTNE ADDR     @A@@@@       J     PL0020      . THEN QUIT@E@@@@PL0015KZ
)@@G@@ LXI,U X5,1        . SET STEP AS IF HALFINT OR CHAR   @A@@@@       TNE,ULA
)@@G@@ A3,ZMODFL   . DFLOAT?  @C@@@@       LXI,U X5,2        . YES, CHANGE STELB
)@@G@@P     @B@@@@       LX,H2 X4,GLFTBL,A3 . SET SUBR ADDR @ @@@@PL0020 LX   LC
)@@G@@ X11,PILINK  .    @D@@@@       LA    A14,A5      . INITIALIZE LOOP COUNTLD
)@@G@@ER    @B@@@@       J     1,X11       . NORMAL EXIT    @ @[@@PL0030 ERRORLE
)@@G@@ YSYSTM      .    @D@@[[PL0030 EQU   0           . SYSERR CAUSES FORCED LF
)@@G@@IGDM  @ [@@@PL0040 LX    X11,PILINK  .    @A@@@@       J     0,X11      LG
)@@G@@ . ERR EXIT @[@@@@.     @^@@@@. RIGHT ARG PICKUP RTNE-@[@@@@.     @^@@@@LH
)@@G@@PIKRIT* SX   X11,PILINK @A@@@@       VERIFY PR0020,PR0030,PR0040 .@^@@@@LI
)@@G@@       J     PR0005 .   @ @@@@PIKRIU* SX   X11,PILINK  .    @ @@@@PR0005LJ
)@@G@@ LX,U  X7,0,A0     .    @ @@@@       TNZ,H2 GRISCL,A3  .    @ @@@@      LK
)@@G@@ J     PR0030      .    @A@@@@       JNE,U A4,ZRANKS PR0010 .     @ @@@@LL
)@@G@@       LX,H2 X6,GRISCL,A3 .   @ @@@@       J     PR0020      .    @E@@@@LM
)@@G@@PR0010 TE,U  A5,1        . IS THIS A ONE ELEMENT ARRAY?     @C@@@@      LN
)@@G@@ J     PR0015      . NO, GO SET WORD STEP @E@@@@       LX,H2 X6,GRIONE,ALO
)@@G@@3 . YES, STEP ZERO. GET ROUTINE ADDR@A@@@@       J     PR0020      . THELP
)@@G@@N EXIT@E@@@@PR0015 LXI,U X7,1        . SET INCR AS FOR HALFINT OR CHAR  LQ
)@@G@@@ @@@@       TE,U  A3,ZMODFL   .    @ @@@@       TNE,U A3,ZMODFI   .    LR
)@@G@@@ @@@@       LXI,U X7,2        .    @ @@@@       LX,H2 X6,GRITBL,A3 .   LS
)@@G@@@ @@@@PR0020 LX    X11,PILINK  .    @D@@@@       LA    A15,A5      . INILT
)@@G@@TIALIZE LOOP COUNTER    @#@@@@       J     1,X11@ @[@@PR0030 ERROR  YSYSLU
)@@G@@TM     .    @D@@[[PR0030 EQU   0           . SYSERR CAUSES FORCED IGDM  LV
)@@G@@@ [@@@PR0040 LX     X11,PILINK .    @ @@@@       J     0,X11       .    LW
)@@G@@@[@@@@.     @G@@@@/. GENERAL PICKUP ROUTINES FOR DIMENSION VECTORS-- THELX
)@@G@@SE RTNES WILL USE @G@@@@. THE LEFT AND RIGHT ARG REGS, HENCE IT IS ASSUMLY
)@@G@@ED THAT THEY HAVE BEEN  @G@@@@. PREVIOUSLY SAVED.  IT IS ALSO ASSUMED THLZ
)@@G@@AT THE DECODED PARAMS OF THE  @E@@@@. ARGUMENTS HAVE BEEN SET UP IN THE MA
)@@G@@PIKTWO GLOBAL LOCATIONS.@G@@@@.     THE NO OF DIMS IS OBVIOUSLY THE RANKMB
)@@G@@, WHICH APPEARS IN THE COUNT  @G@@@@. REGS (A14,A15).  IF AN OPERAND IS MC
)@@G@@A SCALAR, CLEARLY THESE ARE ZERO,   @D@@@@. AND FETCH IS FAKED TO GET LEMD
)@@G@@NGTH (ALWAYS UNITY) .   @[@@@@.     @#@@@@       INSTRS .   @E@@@@PIKLFDME
)@@G@@* LA   A14,LFTRNK  . LENGTH OF DIMVECT=RANK OF ARG    @E@@@@       JLE,UMF
)@@G@@ A14,2 PLD010 . FOR ARRAYS, GO USE REAL DIMVECT @F@@@@       LX,U  X5,LFMG
)@@G@@TSIZ   . FOR SCAL/VECT, FAKE IT BY USING LENGTH @E@@@@       LX,U  X4,GLMH
)@@G@@FSCL+ZMOHFI . AND IT'S IN H2 OF THAT WORD @A@@@@       J     0,X11      MI
)@@G@@ . RETURN   @C@@@@PLD010 LX    X5,LFTDMD   . SET ADDR OF DIM DATA @D@@@@MJ
)@@G@@       LXI,U X5,1        . SET STEP TO SINGLE WORD    @F@@@@       LX,U MK
)@@G@@ X4,GLFTBL+ZMOHFI . USING NORMAL HALFINT FETCH RTNE   @A@@@@       J    ML
)@@G@@ 0,X11       . RETURN   @[@@@@.     @ @@@@PIKRID* LA   A15,RITRNK  .    MM
)@@G@@@ @@@@       JLE,U A15,2 PRD010 .   @^@@@@       LX,U  X7,RITSIZ .@A@@@@MN
)@@G@@       LX,U  X6,GRISCL+ZMOHFI .     @ @@@@       J     0,X11       .    MO
)@@G@@@ @@@@PRD010 LX    X7,RITDMD   .    @ @@@@       LXI,U X7,1        .    MP
)@@G@@@A@@@@       LX,U  X6,GRITBL+ZMOHFI .     @ @@@@       J     0,X11      MQ
)@@G@@ .    @[@@@@/.    @[@@@@.     @D@@@@       CONSTS  .    POINTERS TO DECOMR
)@@G@@DED PARAM LOX     @^@@@@PTNDMY +RITDMY      .   @ @@@@       +LFTDMY    MS
)@@G@@       .    @^@@@@PNTDAD*   +RITDAD   .   @^@@@@          +LFTDAD   .   MT
)@@G@@@^@@@@PNTTYP*   +RITTYP   .   @^@@@@          +LFTTYP   .   @C@@@@PNTDMDMU
)@@G@@* +RITDMD          . DATA ADDR OF DIMVECTS@ @@@@       +LFTDMD          MV
)@@G@@ .    @B@@@@PNTSIZ* +RITSIZ     .      LENGTHS OF ARGS@^@@@@        +LFTMW
)@@G@@SIZ     .   @C@@@@PNTRNK* +RITRNK     .      POINTERS TO RANKS    @^@@@@MX
)@@G@@          +LFTRNK   .   @ @@@@PNTDSC*  +RITDSC         .    @^@@@@      MY
)@@G@@    +LFTDSC   .   @#@@@@       VARBLS  .  @#@@@@LFTDMY*  RES 2    @C@@@@MZ
)@@G@@LFTDAD* RES  1 .    DECODED INFO FOR LEFT ARG   @#@@@@LFTDMD* RES  1 .  NA
)@@G@@@#@@@@LFTTYP* RES  1 .  @#@@@@LFTMOD* RES  1 .  @#@@@@LFTRNK* RES  1 .  NB
)@@G@@@#@@@@LFTSIZ* RES  1 .  @#@@@@LFTDSC* RES  1 .  @#@@@@LFTDDS* RES  1 .  NC
)@@G@@@ @@@@RITDMY* RES 2            .    @C@@@@RITDAD* RES  1 .    DECODED INND
)@@G@@FO FOR RIGHT ARG  @#@@@@RITDMD* RES  1 .  @#@@@@RITTYP* RES  1 .  @#@@@@NE
)@@G@@RITMOD* RES  1 .  @#@@@@RITRNK* RES  1 .  @#@@@@RITSIZ* RES  1 .  @#@@@@NF
)@@G@@RITDSC* RES  1 .  @#@@@@RITDDS* RES  1 .  @[@@@@.     @#@@@@PTLINK  RES NG
)@@G@@ 1 .  @#@@@@PTMODF  RES  1 .  @#@@@@       VARBLS  .  @#@@@@PILINK RES  NH
)@@G@@ 1 .  @G@@@@/.    RTNES TO SUPERVISE STASHING OF RESULTS (USING  X2/X3) NI
)@@G@@FROM A1/A2  @G@@@@.         ENTER WITH REGS SET AS PER 'REPRO' (A0=RANK NJ
)@@G@@PTR, A1=MODE)     @D@@@@. AT EXIT, REGS ARE SET AS PER VERIFY-(EXCEPT A1NK
)@@G@@)     @ @@@@.        A0 - ABS ADR OF DESCR@[@@@@.     @#@@@@       INSTRNL
)@@G@@S .   @ @@@@PUTANS* SX   X11,PULINK  .    @A@@@@       SA    A1,PUMODE  NM
)@@G@@ . SAVE MODE@C@@@@       TNE,U A1,ZMOINT   . IS INTEGER FLAG ON?  @E@@@@NN
)@@G@@       LA,U  A1,ZMODFL   . YES- RESERVE SPACE AS IF DFLOAT  @D@@@@      NO
)@@G@@ LMJ   X11,RESERV  . ACQUIRE SPACE FOR ANSWER   @B@@@@       J     PU005NP
)@@G@@0      . OOPS, ERROR    @B@@@@       LX,U  X3,0,A1     . POST DATA ADDR NQ
)@@G@@@B@@@@       LA    A6,A2       . POST DESCR ADDR@E@@@@       SA    A0,PUNR
)@@G@@DESC   . TEMP SAVE ABS DESCR ADDR,TOO .   @D@@@@       LA,S3 A4,0,A0    NS
)@@G@@ . GET RANK FROM DESCRBLOK    @B@@@@       LA    A3,PUMODE   . RECOVER MNT
)@@G@@ODE   @B@@@@       TNZ,H2 PUSCAL,A3  . IS IT LEGAL?   @A@@@@       J    NU
)@@G@@ PU0040      . NO- ERROR@G@@@@       JNE,U A4,ZRANKS PU0020 . IF NON-SCANV
)@@G@@LAR, GO SET UP ARRAY STORE    @D@@@@PU0010 LA,U  A5,1        . NO OF ELSNW
)@@G@@=1 FOR SCALAR     @D@@@@       LX,H2 X2,PUSCAL,A3 . GET SUBR ADDR FROM TNX
)@@G@@ABLE  @A@@@@       J     PU0030      . AND QUIT @A@@@@PU0020 LXI,U X3,1 NY
)@@G@@       . SET STEP @B@@@@       TE,U  A3,ZMODFL   . IS MODE DFLOAT?@B@@@@NZ
)@@G@@       TNE,U A3,ZMOINT   . OR INTEGER?    @C@@@@       LXI,U X3,2       OA
)@@G@@ . YES- ADJUST STEP     @D@@@@       LX,H2 X2,PUARRY,A3 . GET SUBR ADDR OB
)@@G@@FROM TABLE  @C@@@@       LA,H2 A5,0,A0     . GET LENGTH FROM DBLOK@F@@@@OC
)@@G@@PU0030 SA    A5,PULNTH   . SAVE MAX NO ELS, IN CASE INTEGER MODE  @D@@@@OD
)@@G@@       LA    A13,A5      . INITIALIZE LOOP COUNTER    @ @@@@       LX   OE
)@@G@@ X11,PULINK  .    @ @@@@       J     1,X11       .    @ @[@@PU0040 ERROROF
)@@G@@ YSYSTM      .    @D@@[[PU0040 EQU   0           . SYSERR CAUSES FORCED OG
)@@G@@IGDM  @ [@@@PU0050 LX    X11,PULINK  .    @ @@@@       J      0,X11     OH
)@@G@@ .    @B@@@@/. PROCS TO GENERATE GET AND PUT SEQUENCES@[@@@@.     @E@@@@OI
)@@G@@P      PROC              . THIS PROC GENERATES PUT SEQUENCES@B@@@@PHALF*OJ
)@@G@@ NAME  0 .         PUT HALFINTEGER  @B@@@@PCHAR* NAME  2 .         PUT COK
)@@G@@HARACTER    @#@@@@       UNLI$T .   @A@@@@AREG   EQU   P(1,2)-A0+(P(0,0)OL
)@@G@@=0) . @#@@@@       PROC .     @#@@@@JAY*   NAME .     @E@@@@ I$ 01,P(0,KOM
)@@G@@),AREG,P(1,1)+1,2*P(0,*K),0 . SA,JK AX,0,(*)X+1 @B@@@@       LMJ   P(1,1ON
)@@G@@),0,P(1,1) . RETURN     @]@@@@       END .@[@@@@.     @^@@@@K DO P(0)-1 OO
)@@G@@, JAY  .    @#@@@@       LI$T .     @]@@@@       END .@[@@@@.     @D@@@@OP
)@@G@@G      PROC    . PROC TO GENERATE 'GET' SEQUENCES     @E@@@@GINT*  NAME OQ
)@@G@@ 0 . USAGE:  GET,J1, ...(*)JK,...JN   XREG,AREG @#@@@@GIFLO* NAME  1 .  OR
)@@G@@@#@@@@GCHAR* NAME  2 .  @#@@@@       UNLI$T     @G@@@@. PARTIAL WORD PICOS
)@@G@@KUP, CALLED USING A 'DO' OVER  J DESIGNATORS IN CALL  @#@@@@       PROC OT
)@@G@@   .  @#@@@@JAY*   NAME    .  @G@@@@ I$ 010,G(0,K),G(1,2)-A0,G(1,1)+1,2*OU
)@@G@@G(0,*K),0 . LA,JK  A,0,(*)X+1 .     @D@@@@ DO G(0,0)=2 , GO JY$010 . IF OV
)@@G@@CHAR, DON'T SIGN EXTEND @E@@@@       LSSL  G(1,2),18   . ELSE LEFT ADJUSOW
)@@G@@T SIGN OF HALFWORD@D@@@@       DSA   G(1,2),54   . SIGN EXTEND TO DOUBLEOX
)@@G@@WORD  @E@@@@ DO G(0,0) , DFLOAT G(1,2)-1,G(1,2) . FLOAT, IF NECESSARY   OY
)@@G@@@#@@@@JY$010* NAME   .  @B@@@@       LMJ   G(1,1),0,G(1,1)  . RETURN    OZ
)@@G@@@#@@@@       END     .  @[@@@@.     @G@@@@K DO G(0)-1 , JAY   . GENERATEPA
)@@G@@ CODE SEQ FOR EACH J-DESIGNATOR GIVEN     @^@@@@       LI$T         .   PB
)@@G@@@^@@@@       END          .   @[@@@@.     @G@@@@S      PROC    .        PC
)@@G@@ USE:  SETRL  X,A,LENGTH EXIT(H1/OR/Q3,Q2,Q1)   @F@@@@SETRL* NAME    . RPD
)@@G@@EG SETUP TO CHANGE FROM LTOR TO RTOL FETCHING   @#@@@@       UNLI$T  .  PE
)@@G@@@ @@@@NXIT   EQU   S(2)        .    @C@@@@       LA    S(1,2)-1,S(1,3)  PF
)@@G@@  . GET LENGTH    @D@@@@       ANA,U S(1,2)-1,1    . DECR FOR USE AS A WPG
)@@G@@ORD CT@F@@@@ DO NXIT>0 , GO SR$010   . IF EXITS GIVEN, HALF OR QUARTERWOPH
)@@G@@RD    @F@@@@       LSSL  S(1,2)-1,1    . NO EXITS, CONVERT TO DOUBLEWORDPI
)@@G@@ COUNT@F@@@@       AX    S(1,1)+1,S(1,2)-1  . BUMP WORD POINTER TO LAST PJ
)@@G@@WORD  @C@@@@       LXI,U S(1,1)+1,0777775 . SET STEP=-2     @B@@@@      PK
)@@G@@ GO    SR$020           . GET OUT   @D@@@@SR$010* NAME   .    HALF OR QUPL
)@@G@@ARTERWORD COME HERE     @G@@@@       DSL   S(1,2)-1,1+(NXIT>1) . DIV BY PM
)@@G@@2 (HALFINT), 4 (QUARTERWDS)   @F@@@@       AX    S(1,1)+1,S(1,2)-1  . BUPN
)@@G@@MP WORD POINTER TO LAST WD    @C@@@@       LXI,U S(1,1)+1,0777776 . SET PO
)@@G@@INCR TO (-1)@E@@@@       SSL   S(1,2)-1+1,35-(NXIT>1)   . ALIGN REMAINDEPP
)@@G@@R     @G@@@@       JZ    S(1,2)-1+1,S(2,NXIT)    . IF ZERO, THEN START APQ
)@@G@@T H1/Q1     @D@@@@ DO NXIT=1 , GO SR$020   . IF DOING HALFWORD, FINISHEDPR
)@@G@@@F@@@@       JNB   S(1,2)-1+1,S(2,1)  . IF EVEN MUST BE 2; START AT Q3  PS
)@@G@@@F@@@@       TOP,U S(1,2)-1+1,2  . IF 2-BIT ON, MUST BE 3=Q4. FALL THRU PT
)@@G@@@F@@@@       J     S(2,2)      . OTHERWISE, MUST HAVE BEEN 1-START AT Q2PU
)@@G@@@#@@@@SR$020* NAME   .  @#@@@@       LI$T    .  @#@@@@       END     .  PV
)@@G@@@ @@@@/. STASH ROUTINES (PUTANS)    @[@@@@.     @A@@@@. TABLES FOR LOCATPW
)@@G@@ING STASH RTNES   @[@@@@.     @]@@@@PUTSCL* .   @G@@@@PUSCAL JMPTBL 0 ZMPX
)@@G@@OHFI,PU0110 ZMOINT,PU0200 ZMODFL,PU0300 ZMOCHR,PU0460 @]@@@@PUTARY* .   PY
)@@G@@@G@@@@PUARRY JMPTBL 0 ZMOHFI,PU0100 ZMOINT,PU0210 ZMODFL,PU0300 ZMOCHR,PPZ
)@@G@@U0400 @[@@@@.     @#@@@@F      PROC .     @B@@@@FREEX* NAME . FREE, WITHQA
)@@G@@ X11 PRESERVATION @ @@@@       SX    X11,PULINK  .    @#@@@@       FREE QB
)@@G@@.     @ @@@@       LX    X11,PULINK  .    @]@@@@       END .@[@@@@.     QC
)@@G@@@[@@@@.     @ @@@@. STASH RTNES USED BY ABOVE-- @#@@@@. HALFINT ARRAY   QD
)@@G@@@F@@@@       J     PU0115      . COME HER E FOR R-TO-L HALFINT STASH    QE
)@@G@@@D@@@@PU0100 PHALF,H1     X2,A1    . NORMAL (L-TO-R) STASH  @ @@@@      QF
)@@G@@ PHALF,*H2    X2,A1    .@ @@@@       J     PU0100      .    @#@@@@. HALFQG
)@@G@@INT SCALAR  @C@@@@       NOP   . DUMMY IN CASE OF R-TO-L STASH    @ @@@@QH
)@@G@@PU0110 PHALF,H2    X2,A1  .   @ @@@@       J     PU0110      .    @B@@@@QI
)@@G@@. HALFINT ARRAY, RITE TO LEFT STASH--     @F@@@@PU0115 SETRL X2,A1,PULNTQJ
)@@G@@H PU0118 . CHANGE REGS FOR R-TO-L STASH   @ @@@@PU0117 PHALF,H2     X2,AQK
)@@G@@1    .@ @@@@PU0118 PHALF,*H1    X2,A1    .@ @@@@       J     PU0117     QL
)@@G@@ .    @[@@@@.     @ @@@@.        'INTEGER' SCALARS    @[@@@@.     @F@@@@QM
)@@G@@       NOP               . FOR SCALARS, L-TO-R IS SAME AS R-TO-L  @D@@@@QN
)@@G@@PU0200 JZ    A1,PU0205   . IF HALFINT, GO ADJUST DESCR@C@@@@       DS   QO
)@@G@@ A1,0,X3     . DOUBLE-PLUG IN VALUE @B@@@@       J     0,X2        . ANDQP
)@@G@@ RETURN     @B@@@@PU0205 LA    A0,PUDESC   . GET DESCR ADDR @A@@@@      QQ
)@@G@@ SA,H2 A2,0,A0     . SAVE VAL @B@@@@       LA,U  A1,ZMOHFI   . GET MODE QR
)@@G@@FLAG  @B@@@@       SA,S2 A1,0,A0     . SET THAT, TOO  @C@@@@       LA,U QS
)@@G@@ A1,0,X3     . GET DOUBLE DATA ADDR @#@@@@       RELADR A1 .@ @@@@      QT
)@@G@@ LA,U  A0,2        .    @#@@@@       FREEX .    @A@@@@       J     0,X2 QU
)@@G@@       . AND QUIT @[@@@@.     @ @@@@.        'INTEGER' -- ARRAY   @[@@@@QV
)@@G@@.     @E@@@@       J     PU0214      . R-TO-L ENTRY, GO CHANGE POINTER  QW
)@@G@@@F@@@@PU0210 SX    X3,PUCNVT   . L-TO-R ENTRY, SET CONVERSION FLAGS     QX
)@@G@@@F@@@@       J     PU0216      . GO SAVE REMAINING FLAGS WITHOUT CHANGESQY
)@@G@@@A@@@@. ADJUST FLAGS FOR R-TO-L STASHING  @D@@@@PU0214 SX    X3,PUCNVT  QZ
)@@G@@ . SET CONVERT/BACKTRACK FLAG @E@@@@       SETRL X2,A1,PULNTH . CHANGE RRA
)@@G@@EGS FOR R-TO-L STASH    @D@@@@PU0216 SX    X3,PUINTP   . SAVE INITIAL STRB
)@@G@@ASH POINTER @C@@@@       SZ    PUNELS      . CLEAR ELEMENT COUNTER@F@@@@RC
)@@G@@PU0220 JNZ   A1,PU0250   . TEST WHETHER CURRENT RESULT IS DFLOAT  @F@@@@RD
)@@G@@       TNZ   PUCNVT      . IT ISN'T, IS CONVERSION INHIBITED?     @E@@@@RE
)@@G@@       J     PU0260      . NO, GO CONVERT THIS TO DOUBLE    @D@@@@      RF
)@@G@@ LA    A0,PUNELS   . PICK UP ELEMENT COUNTER    @A@@@@       AA,U  A0,1 RG
)@@G@@       . BUMP IT  @D@@@@       SA    A0,PUNELS   . SAVE NEW COUNTER VALURH
)@@G@@E     @D@@@@       TE    A0,PULNTH   . IS THIS THE LAST ELEMENT?  @D@@@@RI
)@@G@@       J     PU0270      . NO, GO STORE THE RESULT    @C@@@@       DS   RJ
)@@G@@ A1,0,*X3    . YES, STASH LAST VALUE@G@@@@. LAST EL HAS BEEN STORED AS IRK
)@@G@@NTEGER-BACKTRACK AND RE-CONVERT TO HALFINT@D@@@@PU0230 LX    A1,PUCNVT  RL
)@@G@@ . RECOVER ORIGINAL DATA ADDR @D@@@@       LXI,U A1,1        . SET INCR RM
)@@G@@FOR HALFINT STORE @E@@@@       LX    X3,PUCNVT   . SET UP FOR FETCH OF DRN
)@@G@@OUBLE INTS  @B@@@@PU0235 JGD   A0,$+2      . MORE TO DO?    @C@@@@      RO
)@@G@@ J     PU0242      . NO- GO RELEASE SPACE @C@@@@       DL    A2,0,*X3   RP
)@@G@@ . YES, GET NEXT DOUBLE @B@@@@       SA,H1 A3,0,A1     . AND STORE HALF RQ
)@@G@@@ @@@@       JGD   A0,$+2      .    @ @@@@       J     PU0240      .    RR
)@@G@@@B@@@@       DL    A2,0,*X3    . GET DOUBLE     @B@@@@       SA,H2 A3,0,RS
)@@G@@*A1    . STASH HALF     @C@@@@       J     PU0235      . GO BACK FOR MORRT
)@@G@@E     @E@@@@. NOW RELEASE THE UNUSED PORTION OF THE DATA STORAGE AREA   RU
)@@G@@@G@@@@PU0240 NOP   0,0,*A1     . QUIT ON H1, BUMP ADDR TO 1ST LOC TO BE RV
)@@G@@FREED @E@@@@PU0242 LA,U  A0,0,X3     . LWA+1 OF ORIGINAL ALLOCATION     RW
)@@G@@@G@@@@       ANA,U A0,0,A1     . LESS FWA OF STORAGE TO RELEASE=NO TO FRRX
)@@G@@EE    @F@@@@       RELADR A1         . MAKE ADDR OF LOX TO FREE  WS RELARY
)@@G@@TIVE  @#@@@@       FREEX .    @C@@@@       LA    A0,PUDESC   . GET DESCRRZ
)@@G@@IPTOR ADDR  @C@@@@       LA,U  A1,ZMOHFI   . GET HALFINT MODE FLAG@D@@@@SA
)@@G@@       SA,S2 A1,0,A0     . SET MODE FLAG IN DESCR     @A@@@@       J    SB
)@@G@@ 0,X2        . AND QUIT @ @@@@. CURRENT ELEMENT IS DOUBLE-  @D@@@@PU0250SC
)@@G@@ TNZ   PUCNVT      . IS CONVERSION INHIBITED?   @D@@@@       J     PU027SD
)@@G@@0      . NO, GO STASH THIS RESULT   @E@@@@       LX    X3,PUINTP   . YESSE
)@@G@@, RECOVER INITIAL DATA POINTER@D@@@@       LA    A0,PUNELS   . NO OF ELSSF
)@@G@@ ALREADY STORED   @D@@@@       SZ    PUCNVT      . CLEAR CONVERT INHIBITSG
)@@G@@ FLAG @B@@@@       LA,U  A3,02074    . GET EXPONENT   @B@@@@PU0255 JGD  SH
)@@G@@ A0,$+2      . MORE TO DO?    @D@@@@       J     PU0270      . NO, GO STSI
)@@G@@ASH CURRENT VAL   @C@@@@       DFP   A3,0,X3     . PICK UP AND FLOAT    SJ
)@@G@@@C@@@@       DS    A4,0,*X3    . STASH CONVERTED VAL  @C@@@@       J    SK
)@@G@@ PU0255      . GO BACK FOR NEXT VAL @C@@@@PU0260 DFLOAT A0,A1      . FLOSL
)@@G@@AT CURRENT NO     @C@@@@PU0270 DS    A1,0,*X3    . STASH CURRENT NO     SM
)@@G@@@A@@@@       LMJ   X2,0,X2     . RETURN   @D@@@@       J     PU0220     SN
)@@G@@ . GO BACK FOR NEXT DATUM     @D@@@@.              NORMAL DFLOAT STORAGESO
)@@G@@ (ARRAY OR SCALAR)@ @@@@       J     PU0310      .    @ @@@@PU0300 DS   SP
)@@G@@ A1,0,*X3    .    @ @@@@       LMJ   X2,0,X2     .    @ @@@@       J    SQ
)@@G@@ PU0300      .    @E@@@@PU0310 SETRL X2,A1,PULNTH . CHANGE REGS FOR R-TOSR
)@@G@@-L STASH    @^@@@@       J     PU0300 .   @[@@@@.     @B@@@@.           SS
)@@G@@   CHARACTER STORAGE (ARRAY)  @ @@@@       J     PU0410      .    @A@@@@ST
)@@G@@PU0400 PCHAR,Q1,Q2,Q3,*Q4 X2,A1  .  @ @@@@       J     PU0400      .    SU
)@@G@@@D@@@@PU0410 SETRL  X2,A1,PULNTH PU0420,PU0430,PU0440 .     @ @@@@PU0420SV
)@@G@@ PCHAR,Q4     X2,A1 .   @ @@@@PU0430 PCHAR,Q3     X2,A1 .   @ @@@@PU0440SW
)@@G@@ PCHAR,Q2     X2,A1 .   @ @@@@PU0450 PCHAR,*Q1    X2,A1 .   @^@@@@      SX
)@@G@@ J     PU0420 .   @B@@@@. CHARACTER (1ELEMENT VECTOR OR SCALAR)   @]@@@@SY
)@@G@@       NOP  @ @@@@PU0460 PCHAR,Q1    X2,A1  .   @^@@@@       J     PU046SZ
)@@G@@0 .   @[@@@@.     @#@@@@       VARBLS .   @#@@@@PULINK RES   1 .  @#@@@@TA
)@@G@@PUMODE RES   1 .  @#@@@@PUDESC RES   1 .  @G@@@@PUCNVT RES   1          TB
)@@G@@ . CONVERT FLAG- ALSO INITIAL X3 FOR BAKTRAK    @G@@@@PUINTP RES   1    TC
)@@G@@       . INITIAL STORE POINTER, MAY BE R2L OR L2R     @#@@@@PUNELS RES  TD
)@@G@@ 1 .  @#@@@@PULNTH RES   1 .  @E@@@@/. GET ROUTINES---  THESE ARE CALLEDTE
)@@G@@ BY THE STORE ROUTINES--@G@@@@. LEFT ARGS COME TO A1,A2 ; RIGHT ARGS TO TF
)@@G@@A4,A5 . A0,A3 MAY BE ZAPPED   @[@@@@.     @#@@@@       CONSTS .   @F@@@@TG
)@@G@@. TABLES OF GET ROUTINE ADDRESSES-- INDEXED INTO BY DATA MODE     @[@@@@TH
)@@G@@.     @G@@@@GLFTBL* JMPTBL 0 ZMOCHR,GT0130 ZMOHFI,GT0100 ZMOINT,GT0110 ZTI
)@@G@@MODFL,GT0120@[@@@@.     @G@@@@GLFONE JMPTBL 0 ZMOCHR,GT0140 ZMOHFI,GT010TJ
)@@G@@7 ZMOINT,GT0117 ZMODFL,GT0120 @[@@@@.     @G@@@@GLFSCL* JMPTBL 0 ZMOCHR,TK
)@@G@@GT0140 ZMOHFI,GT0105 ZMODFL,GT0120 ZMOINT,GT0115@[@@@@.     @F@@@@GRITBLTL
)@@G@@* JMPTBL 0 ZMOCHR,GT0230 ZMOHFI,GT0200 ZMOINT,GT0210  ;     @C@@@@      TM
)@@G@@         ZMODFL,GT0220 ZMODFI,GT0250   .  @[@@@@.     @F@@@@GRIONE* JMPTTN
)@@G@@BL 0 ZMOCHR,GT0240 ZMOHFI,GT0207 ZMOINT,GT0217  ;     @C@@@@            TO
)@@G@@   ZMODFL,GT0220 ZMODFI,GT0250   .  @F@@@@GRISCL* JMPTBL 0 ZMOCHR,GT0240TP
)@@G@@ ZMOHFI,GT0205 ZMOINT,GT0215  ;     @C@@@@               ZMODFL,GT0220 ZTQ
)@@G@@MODFI,GT0250   .  @[@@@@.     @#@@@@       INSTRS  .  @[@@@@.     @F@@@@TR
)@@G@@.     LEFT ARGUMENT PICKUP RTNES-  XREGS=4,5 ; RESULTS TO A1,A2   @A@@@@TS
)@@G@@.     **** ARRAY OR VECT -HALFINT   @D@@@@       J     GT0102      . ENTTT
)@@G@@RY FOR RITE TO LEFT     @C@@@@GT0100 GINT,H1,*H2  X4,A1     . LEFT TO RITU
)@@G@@TE    @^@@@@       J     GT0100     @G@@@@GT0102 SETRL  X4,A1,LFTSIZ  GTTV
)@@G@@0104 . ADJUST REGS FOR RITE TO LEFT PICK  @A@@@@GT0103 GINT,H2      X4,ATW
)@@G@@1     .     @A@@@@GT0104 GINT,*H1     X4,A1     .     @A@@@@       J    TX
)@@G@@ GT0103           .     @#@@@@.     **** SCALAR @A@@@@       NOP        TY
)@@G@@            .     @A@@@@GT0105 GINT,H2      X4,A1     .     @A@@@@      TZ
)@@G@@ J     GT0105           .     @ @@@@.     **** ONE-EL VECT/ARRAY  @]@@@@UA
)@@G@@      NOP   @A@@@@GT0107 GINT,H1      X4,A1     .     @A@@@@       J    UB
)@@G@@ GT0107           .     @A@@@@.    HALFINT WITH MODE CHG TO DFLOAT@#@@@@UC
)@@G@@.    '**** ARRAY  @^@@@@       J     GT0112     @A@@@@GT0110 GIFLO,H1,*HUD
)@@G@@2 X4,A1     .     @A@@@@       J     GT0110           .     @A@@@@GT0112UE
)@@G@@ SETRL X4,A1,LFTSIZ GT0114   .@A@@@@GT0113 GIFLO,H2     X4,A1     .     UF
)@@G@@@A@@@@GT0114 GIFLO,*H1    X4,A1     .     @A@@@@       J     GT0113     UG
)@@G@@      .     @#@@@@.     **** SCALAR @#@@@@       NOP     .  @A@@@@GT0115UH
)@@G@@ GIFLO,H2     X4,A1     .     @^@@@@       J     GT0115 .   @^@@@@.     UI
)@@G@@**** 1-EL ARRAY   @]@@@@       NOP .@A@@@@GT0117 GIFLO,H1     X4,A1     UJ
)@@G@@.     @A@@@@       J     GT0117           .     @#@@@@.     DOUBLEWORD--UK
)@@G@@@A@@@@       J     GT0125           .     @A@@@@GT0120 DL    A1,0,*X5   UL
)@@G@@      .     @A@@@@       LMJ   X4,0,X4          .     @A@@@@       J    UM
)@@G@@ GT0120           .     @A@@@@GT0125 SETRL  X4,A1,LFTSIZ    .     @A@@@@UN
)@@G@@       J     GT0120           .     @ @@@@.    CHARACTER   VECTOR/ARRAY UO
)@@G@@@^@@@@       J     GT0135     @A@@@@GT0130 GCHAR,Q1,Q2,Q3,*Q4  X4,A1   .UP
)@@G@@@^@@@@       J     GT0130     @C@@@@GT0135 SETRL X4,A1,LFTSIZ GT0137,GT0UQ
)@@G@@138,GT0139 .@A@@@@GT0136 GCHAR,Q4     X4,A1     .     @A@@@@GT0137 GCHARUR
)@@G@@,Q3     X4,A1     .     @A@@@@GT0138 GCHAR,Q2     X4,A1     .     @A@@@@US
)@@G@@GT0139 GCHAR,*Q1    X4,A1     .     @^@@@@       J     GT0136     @#@@@@UT
)@@G@@.     ONE-EL ARRAY@A@@@@       NOP                    .     @A@@@@GT0140UU
)@@G@@ GCHAR,Q1     X4,A1     .     @A@@@@       J     GT0140           .     UV
)@@G@@@]@@@@.     SCALAR@]@@@@       NOP .@A@@@@GT0145 GCHAR,Q4     X4,A1     UW
)@@G@@.     @A@@@@       J     GT0145           .     @[@@@@.     @ @@@@. RITEUX
)@@G@@ ARG  PICKUP RTNES--    @[@@@@.     @^@@@@       J     GT0202 .   @A@@@@UY
)@@G@@GT0200 GINT,H1,*H2  X6,A4     .     @A@@@@       J     GT0200           UZ
)@@G@@.     @A@@@@GT0202 SETRL X6,A4,RITSIZ GT0204   .@A@@@@GT0203 GINT,H2    VA
)@@G@@  X6,A4     .     @A@@@@GT0204 GINT,*H1     X6,A4     .     @A@@@@      VB
)@@G@@ J     GT0203           .     @[@@@@.     @]@@@@       NOP  @A@@@@GT0205VC
)@@G@@ GINT,H2      X6,A4     .     @A@@@@       J     GT0205           .     VD
)@@G@@@]@@@@       NOP  @A@@@@GT0207 GINT,H1      X6,A4     .     @A@@@@      VE
)@@G@@ J     GT0207           .     @[@@@@.     @ @@@@       J     GT0212     VF
)@@G@@ .    @A@@@@GT0210 GIFLO,H1,*H2 X6,A4     .     @^@@@@       J     GT021VG
)@@G@@0     @A@@@@GT0212 SETRL X6,A4,RITSIZ GT0214   .@A@@@@GT0213 GIFLO,H2   VH
)@@G@@  X6,A4     .     @A@@@@GT0214 GIFLO,*H1    X6,A4     .     @ @@@@      VI
)@@G@@ J     GT0213      .    @]@@@@.     SCALAR@#@@@@       NOP     .  @A@@@@VJ
)@@G@@GT0215 GIFLO,H2     X6,A4     .     @A@@@@       J     GT0215           VK
)@@G@@.     @]@@@@.     ONE-EL@]@@@@       NOP  @A@@@@GT0217 GIFLO,H1     X6,AVL
)@@G@@4     .     @A@@@@       J     GT0217           .     @]@@@@.     DOUBLEVM
)@@G@@@A@@@@       J     GT0225           .     @ @@@@GT0220 DL    A4,0,*X7   VN
)@@G@@ .    @A@@@@       LMJ   X6,0,X6          .     @A@@@@       J     GT022VO
)@@G@@0           .     @ @@@@GT0225 SETRL  X6,A4,RITSIZ    @ @@@@       J    VP
)@@G@@ GT0220      .    @#@@@@. CHAR VECT/ARRAY @ @@@@       J     GT0235     VQ
)@@G@@ .    @A@@@@GT0230 GCHAR,Q1,Q2,Q3,*Q4  X6,A4   .@ @@@@       J     GT023VR
)@@G@@0      .    @C@@@@GT0235 SETRL X6,A4,RITSIZ  GT0237,GT0238,GT0239 @A@@@@VS
)@@G@@GT0236 GCHAR,Q4     X6,A4     .     @A@@@@GT0237 GCHAR,Q3     X6,A4     VT
)@@G@@.     @A@@@@GT0238 GCHAR,Q2     X6,A4     .     @A@@@@GT0239 GCHAR,*Q1  VU
)@@G@@  X6,A4     .     @^@@@@       J     GT0236     @#@@@@.      ONE-EL     VV
)@@G@@@]@@@@       NOP  @A@@@@GT0240 GCHAR,Q1     X6,A4     .     @A@@@@      VW
)@@G@@ J     GT0240           .     @]@@@@.     SCALAR@]@@@@       NOP .@A@@@@VX
)@@G@@GT0245 GCHAR,Q4     X6,A4     .     @A@@@@       J     GT0245           VY
)@@G@@.     @F@@@@. SPECIAL FETCH (FORCED FLOOR) FOR INDEXING, ETC. (RITEARGS VZ
)@@G@@ONLY) @ @@@@GT0250 DL   A4,0,*X7     .    @ @@@@       FUZZDN           WA
)@@G@@ .    @ @@@@       DL   A4,A1        .    @ @@@@       LMJ  X6,0,X6     WB
)@@G@@ .    @ @@@@       J    GT0250       .    @[@@@@.     @]@@@@       END .WC
)@@G@@___   @A@@@@GT0137 GCHAR,Q3     X4,A1     .     *[S@@@*SDFF*@G@@@@. ****WD
)@@G@@***************************************************************** @G@@@@WE
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * WF
)@@G@@@G@@@@.                                                                 WG
)@@G@@    * @G@@@@       AXR$         .                                       WH
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        WI
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        WJ
)@@G@@                      * @G@@@@       WSDEF.      DEFINE WORKSPACE       WK
)@@G@@                            * @G@@@@WORKSP INFO  2 20.      SET ASIDE THWL
)@@G@@E SPACE                           * @G@@@@       RUNCTL.     DEFINE RUN WM
)@@G@@CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.      WN
)@@G@@AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCK     WO
)@@G@@       . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.           WP
)@@G@@                                                          * @G@@@@. END WQ
)@@G@@OF STANDARD PROC BLOCK                                          * @G@@@@WR
)@@G@@. ********************************************************************* WS
)@@G@@@[@@@@.     @[@@@@.     @[@@@@.     @E@@@@.  AND NOW !!! AT LAST !!! BY WT
)@@G@@POPULAR DEMAND >>>>>>>>>>>>>> @C@@@@.  THE ONE AND ONLY SUPER FANTASTIC WU
)@@G@@TRIVIAL     @[@@@@.     @G@@@@.      LINE ECHOING ROUTINE YAAAAAAAAAAAHHWV
)@@G@@HHHHHHHHHHHH !!!!!!!!!!!!     @[@@@@.     @G@@@@. TO USE THIS HIGHLY ESOWW
)@@G@@TERIC ROUTINE, PLEASE ADHERE TO THE FOLLOWING   @E@@@@. FEW SIMPLE RULESWX
)@@G@@ ( HOPE IT DON'T MAKE NONEBODY UNHAPPY )  @[@@@@.     @C@@@@. RELADR OF WY
)@@G@@TEXT BLOK IN A2 ( OF ALL PLACES !)  @A@@@@. AND , LEST ( BUT NOT LEAST )WZ
)@@G@@ :    @G@@@@. ITEM NUMBER TO BE FLAGGED ( OR ZERO IF NONE ) IN A1 ( REASXA
)@@G@@ONABLE )    @G@@@@. LINE NO( IF ANY) DFLOAT IN A4,A5. NEGATIVE VAL MEANSXB
)@@G@@ DON'T PRINT IT   @E@@@@. ENTRY 'LNNEKO' WILL FLUSH OUTPUT BUFFER BEFOREXC
)@@G@@ PRINTING   @F@@@@. ENTRY 'LEKOWF' IS (SKUZE PLEASE) 'LINE ECHO WITHOUT XD
)@@G@@FLUSH[ING]' @[@@@@.     @^@@@@       INSTRS      .    @C@@@@LEKOWF* SX  XE
)@@G@@ X11,LILINK  . JUST DO A BUNCH OF   @C@@@@       DS    A1,LIITEM   . MUNXF
)@@G@@DANE THINGS BEFORE@D@@@@       SA    A3,LILABL   . SAVE LABEL PRINT TESTXG
)@@G@@ FLAG @D@@@@       DS    A4,LILINE   . WE GET TO THE FUN STUPH    @G@@@@XH
)@@G@@       LMJ   X11,LINRES  . FOR GOOD LUCK, RESTORE LINE BUF POINTERS     XI
)@@G@@@ @@@@       J     LN0050      .    @F@@@@LNNEKO* SX   X11,LILINK  . ENTXJ
)@@G@@RY POINT TO PRINT A LINE NUMBER     @D@@@@       DS    A1,LIITEM   . BEFXK
)@@G@@ORE THE LINE OF TEXT    @D@@@@       SA    A3,LILABL   . SAVE LABEL PRINXL
)@@G@@T TEST FLAG @B@@@@       DS    A4,LILINE   . SAVE LINE #    @E@@@@      XM
)@@G@@ LMJ   X11,LNFLSH  . WSOBUF AND DO ALL THE REGULAR    @D@@@@LN0050 SZ   XN
)@@G@@ LIMARK      . STUPH THAT HAS TO BE DONE  @E@@@@       LA    A0,WSDGTS  XO
)@@G@@ . SAVE CURRENT VALUE OF DIGITS     @D@@@@       SA    A0,LIDTMP   . ANDXP
)@@G@@ TEMP SET TO MAXIMUM    @ @@@@       LA,U  A0,17       .    @ @@@@      XQ
)@@G@@ SA    A0,WSDGTS   .    @D@@@@       TP    LILINE      . IS LINE NO TO BXR
)@@G@@E PRINTED?  @D@@@@       J     LN0060      . NO, SKIP ALL THIS CRAP     XS
)@@G@@@A@@@@       LA,U  A1,ALBRAK   . MAKE A [ @ @@@@       LMJ   X2,0,X2    XT
)@@G@@ .    @E@@@@       DSL   A0,72       . CLEAR SOMETHING FOR FORMAT RTNE  XU
)@@G@@@F@@@@       DL    A4,LILINE   . SET UP THE LINE NO TO BE ZAPPED OUT    XV
)@@G@@@B@@@@       LMJ   X11,FORMD  . DO IT TO IT !   @ @@@@       ER    ERR$ XW
)@@G@@       .    @ @@@@       LA,U  A1,ARBRAK   .    @ @@@@       LMJ   X2,0,XX
)@@G@@X2     .    @B@@@@       LA,U  A1,ASPACE   . GET A SPACE    @E@@@@      XY
)@@G@@ LMJ   X2,0,X2     . AND PUT IT AFTER THE BRACKET     @F@@@@       LA   XZ
)@@G@@ A4,LILINE   . GET MOST SIGNIF PART OF THIS LINE NUM  @C@@@@       TLE  YA
)@@G@@ A4,PWR10+2  . IS LINE NO .GE. 10?  @G@@@@       LMJ   X2,0,X2     . NO,YB
)@@G@@ STUFF ANOTHER BLANK IN TO ALIGN MARGIN   @C@@@@       TNZ   LILABL     YC
)@@G@@ . IS LINE LABELED?     @E@@@@       LMJ   X2,0,X2     . NO, ANOTHER BLAYD
)@@G@@NK TO INDENT IT   @G@@@@LN0060 LA    A2,LITEXT   . GET ADDR OF LEXICLA TYE
)@@G@@EXT (SAVED AT ENTRY)    @ @@@@       LMJ   X11,LEXGET  .    @#@@@@      YF
)@@G@@ ER    ERR$ @G@@@@       J     LI0100      . NOW GO AS IF WE ARE JUST EKYG
)@@G@@OING A NORMAL LINE@B@@@@LINEKO* SX   X11,LILINK  . SAVE RETURN    @C@@@@YH
)@@G@@       DS    A1,LIITEM   . SAVE TEXT PARAMS     @B@@@@       LMJ   X11,LYI
)@@G@@NFLSH  . SET UP STASH   @D@@@@       SZ    LIMARK      . ZERO TOTO WSOBUYJ
)@@G@@FF TEST FLAG@ @@@@       LA    A0,WSDGTS   .    @ @@@@       SA    A0,LIYK
)@@G@@DTMP   .    @ @@@@       LA,U  A0,18       .    @ @@@@       SA    A0,WSYL
)@@G@@DGTS   .    @D@@@@       LA    A2,LITEXT   . RESTORE TEXT BLOCK REL ADDRYM
)@@G@@@E@@@@       LMJ   X11,LEXGET  . SET UP LEXICAL ITEM GETTER RTNE  @B@@@@YN
)@@G@@       ER    ERR$        . TUPH LUK !     @D@@@@LI0100 LMJ   X4,0,X4    YO
)@@G@@ . GET THE NEXT LEXICAL ITEM  @A@@@@       ER    ERR$        . TOO BAD !YP
)@@G@@@F@@@@       SA    A0,A6       . IN CASE NAMED, SAVE POINTER FOR PRTNAM YQ
)@@G@@@C@@@@LI0105 TNE   A2,LIITEM   . DO WE FLAG THIS ITEM?@E@@@@       SA   YR
)@@G@@ A13,LIMARK  . YES, SAVE CHAR CNT OF THE WSOBUFF@G@@@@       COMJMP A1,LYS
)@@G@@I0900 LEXOPR,LI0250 LEXLIT,LI0150 LEXNAM,LI0150 ;     @C@@@@            YT
)@@G@@ LEXSTP,LI0110 LEXTRC,LI0120  .     @E@@@@LI0110 LA,U  A1,AS       . STOYU
)@@G@@PVECTOR-- GET OPENING 'S'     @C@@@@       LMJ   X2,0,X2     . PUT INTO YV
)@@G@@THELINE     @D@@@@       J     LI0130      . AND GO PUT IN THE MARK     YW
)@@G@@@E@@@@LI0120 LA,U  A1,AT       . TRACEVECTOR-- GET OPENINT 'T'    @B@@@@YX
)@@G@@       LMJ   X2,0,X2     . PUT IN THE LINE@E@@@@LI0130 LA,U  A1,AMARK   YY
)@@G@@ . PICK UP THE SPECIAL DELTA CHAR   @C@@@@       LMJ   X2,0,X2     . PUTYZ
)@@G@@ INTO THE OUTBUF  @D@@@@LI0150 LMJ   X11,PRTNAM  . GO ZAP OUT THE NAME WZA
)@@G@@E GOT @B@@@@       J     LI0990      . OOPS! TOO BAD .@G@@@@. PICK UP AFZB
)@@G@@TER AN OPERAND- IF ANOTHER OPERAND, SEPARATE WITH A BLANK   @ @@@@LI0160ZC
)@@G@@ LMJ   X4,0,X4     .    @ @@@@       ER    ERR$        .    @E@@@@      ZD
)@@G@@ JE,U  A1,LEXOPR LI0105 . IF OPR, PROCESS NORMALLY    @D@@@@       SA   ZE
)@@G@@ A0,A6       . ELSE SAVE NAME POINTER     @E@@@@       DS    A1,LILINE  ZF
)@@G@@ . TEMP SAVE RETURN CODE AND ITEM NO@C@@@@       LA,U  A1,ASPACE   . ELSZG
)@@G@@E GET A BLANK     @E@@@@       LMJ   X2,0,X2     . PRECEDE THIS NAME WITZH
)@@G@@H A BLANK   @E@@@@       DL    A1,LILINE   . RECOVER RETURN CODE AND LIIZI
)@@G@@TEM   @D@@@@       J     LI0105      . AND GO PROCESS NORMALLY    @ @@@@ZJ
)@@G@@. PROCESS SCANNED OPERATOR--  @C@@@@LI0250 LA    A1,A0       . MOVE CHARZK
)@@G@@ FOR STASH  @A@@@@       LMJ   X2,0,X2     . STASH IT @E@@@@       JE,U ZL
)@@G@@ A0,AEOL LI0270   . IF EOL, GO CLOSE UP SHOP    @F@@@@       JNE,U A0,ALZM
)@@G@@AMP LI0100  . IF NOT LAMP EITHER, GO GET NEXT   @C@@@@. BEGINNING OF COMZN
)@@G@@MENTS-- MOVE 1 CHAR AT A TIME @A@@@@LI0260 LMJ   X4,0,X4     . NEXT CHARZO
)@@G@@@ @@@@       ER    ERR$        .    @ @@@@       LA    A1,A0       .    ZP
)@@G@@@A@@@@       LMJ   X2,0,X2     . STASH IT @D@@@@       JNE,U A0,AEOL LI0ZQ
)@@G@@260   . IF NOT EOL, CONTINUE  @A@@@@. EOL HIT-- CLOSE OUT EVERYTHING    ZR
)@@G@@@C@@@@LI0270 TNZ   LIMARK      . IS LINE TO BE MARKED?@D@@@@       J    ZS
)@@G@@ LI0300      . NO, ITS A NORMAL WRITE     @E@@@@       LA    A0,LIMARK  ZT
)@@G@@ . YES, GET CHAR NO TO BE NARKED    @B@@@@       LMJ   X11,LINMRK  . ZAPZU
)@@G@@ IT OUT     @B@@@@       J     LI0350      . AND GO EXIT    @C@@@@LI0300ZV
)@@G@@ LMJ   X11,LINSTR  . WRITE A NORMAL LINE  @ @@@@LI0350 LX    X11,LILINK ZW
)@@G@@ .    @D@@@@       LA    A0,LIDTMP   . RESTORE DIGITS TO OLD VALUE@ @@@@ZX
)@@G@@       SA    A0,WSDGTS   .    @ @@@@       J     1,X11       .    @ @@@@ZY
)@@G@@LI0900 ERROR YSYSTM,LI0990 .  @ @@@@LI0990 LX    X11,LILINK  .    @ @@@@ZZ
)@@G@@       J     0,X11       .    @#@@@@       VARBLS .   @#@@@@LILINK RES  AA
)@@G@@ 1 .  @#@@@@LIMARK RES   1 .  @ @@@@LIITEM RES   2           .    @ @@@@AB
)@@G@@LITEXT EQU   LIITEM+1    .    @ @@@@LILINE RES   2           .    @ @@@@AC
)@@G@@LIDTMP RES   1           .    @ @@@@LILABL RES   1           .    @D@[@@AD
)@@G@@/. ROUTINE TO PRINT THE HEADER LINE OF A FUNCTION     @F@[@@.  ENTER WITAE
)@@G@@H HEADER TEXT RELADR IN A2 AND OPENING CHAR IN A6     @G@[@@. **** NOTE AF
)@@G@@**** THIS ROUTINE IS DEPENDANT UPON THE FOLLOWING OPERATORS @B@[@@. HAVIAG
)@@G@@NG THE FOLLOWING SEQUENCE -------   @]@[@@. AFNNAM = X@#@[@@. AFNANS = XAH
)@@G@@+1    @#@[@@. AFNARG = X+2    @#@[@@. AFNLCL = X+3    @ @[@@       INSTRAI
)@@G@@S            .    @A@[@@. ENTRY TO PRECEEDE HEADER WITH [0] @ @[@@HDNPRTAJ
)@@G@@* SX   X11,HDRLNK  .    @D@[@@       SA    A2,HDTEXT   . SAVE HEADER TEXAK
)@@G@@T RELADR    @ @[@@       LMJ   X11,LNFLSH  .    @B@[@@       LA,U  A1,ALAL
)@@G@@BRAK   . OUTPUT [0]     @ @[@@       LMJ   X2,0,X2     .    @ @[@@      AM
)@@G@@ LA,U  A1,AZERO    .    @ @[@@       LMJ   X2,0,X2     .    @ @[@@      AN
)@@G@@ LA,U  A1,ARBRAK   .    @ @[@@       J     HD0010      .    @C@[@@. ENTRAO
)@@G@@Y TO PRECEEDE HEADER WITH DEL OR DEL-LOCK @ @[@@HDRPRT* SX   X11,HDRLNK AP
)@@G@@ .    @B@[@@       SA    A2,HDTEXT   . SAVE TEXT ADDR @D@[@@       SA   AQ
)@@G@@ A6,HDCHAR   . SAVE OPENING CHAR OF FUNC  @B@[@@       LMJ   X11,LNFLSH AR
)@@G@@ . SET CHAR STASH @B@[@@       LA,U  A1,ASPACE   . GET A BLANK    @C@[@@AS
)@@G@@       DO 3 , LMJ X2,0,X2 . INDENT BY THREE     @D@[@@       LA    A1,HDAT
)@@G@@CHAR   . GET OPENING CHAR OF FUNC   @ @[@@HD0010 LMJ   X2,0,X2     .    AU
)@@G@@@C@[@@       LA,U  A1,ASPACE   . FOLLOWED BY A BLANK  @ @[@@       LMJ  AV
)@@G@@ X2,0,X2     .    @ @[@@       LA    A2,HDTEXT   .    @D@[@@       LMJ  AW
)@@G@@ X11,LEXGET  . AND LEXICAL ITEM GETTER    @ @[@@       J     HD0900     AX
)@@G@@ .    @E@[@@HD0100 LMJ   X4,0,X4     . GET THE FIRST ITEM OF THE PAIR   AY
)@@G@@@ @[@@       J     HD0900      .    @C@[@@       COMJMP A1,HD0900 0,HD02AZ
)@@G@@00 2,HD0300 .     @C@[@@HD0200 TE,U  A0,AEOL     . IS THE OP AN EOL ?   BA
)@@G@@@D@[@@       J     HD0900      . NO, SYSERRCAT THIS POINT   @A@[@@      BB
)@@G@@ LA    A1,A0       . YES, SO  @B@[@@       LMJ   X2,0,X2     . STASH IT,BC
)@@G@@ AND  @C@[@@       J     HD0500      . AND GO PRINT THE LINE@D@[@@HD0300BD
)@@G@@ SA    A0,HDNADR   . ITS A NAME, SO SAVE IT     @F@[@@       LMJ   X4,0,BE
)@@G@@X4     . AND GET THE SECOND ITEM OF THE PAIR    @C@[@@       JNZ   A1,HDBF
)@@G@@0900   . IF NOT OP, SYSERR    @G@[@@       ANA,U A0,AFNNAM   . ONLY AFNNBG
)@@G@@AM,...,AFNLCL ALLOWED AT ANY TIME   @ @[@@       JN    A0,HD0900   .    BH
)@@G@@@ @[@@       TG,U  A0,4        .    @ @[@@       J     HD0900      .    BI
)@@G@@@D@[@@       LA    A0,HDPTBL,A0 . GET GRAPHIC TO BE USED    @G@[@@      BJ
)@@G@@ JE,U  A0,ASEMIC HD0400 . IF LOCAL VARBL, PRINT SEMICOLON FIRST   @C@[@@BK
)@@G@@       SA    A0,HDSYMB   . ELSE PRINT NAME FIRST@D@[@@       LA    A6,HDBL
)@@G@@NADR   . GET NAMES DESCR REL ADR    @C@[@@       LMJ   X11,PRTNAM  . ANDBM
)@@G@@ STASH THE NAME   @ @[@@       J     HD0900      .    @E@[@@       LA   BN
)@@G@@ A1,HDSYMB   . RECOVER THE SYMBOL TO FOLLOW     @C@[@@       LMJ   X2,0,BO
)@@G@@X2     . AND STASH IT TOO.    @D@[@@       J     HD0100      . AND GO GEBP
)@@G@@T THE NEXT PAIR.  @D@[@@HD0400 LA    A1,A0       . WE HAVE A LOCAL VARBLBQ
)@@G@@, SO  @D@[@@       LMJ   X2,0,X2     . STASH SEMI-COLON FIRST     @C@[@@BR
)@@G@@       LA    A6,HDNADR   . AND THEN THE NAME    @ @[@@       LMJ   X11,PBS
)@@G@@RTNAM  .    @ @[@@       J     HD0900      .    @D@[@@       J     HD010BT
)@@G@@0      . AND GO GET THE NEXT PAIR   @E@[@@HD0500 LMJ   X11,LINSTR  . WRIBU
)@@G@@TE THE LINE WE JUST BUILT     @A@[@@       LX    X11,HDRLNK  . AND EXIT BV
)@@G@@@ @[@@       J     1,X11       .    @ @[@@HD0900 ERROR YSYSTM,HD0990 .  BW
)@@G@@@ @[@@HD0990 LX    X11,HDRLNK  .    @ @[@@       J     0,X11       .    BX
)@@G@@@ @[@@       VARBLS            .    @B@[@@HDRLNK EQUF  $,,H1       . RETBY
)@@G@@URN LINK    @C@[@@HDNADR EQUF  $,,H2       . A NAMES DESCR ADDR   @C@[@@BZ
)@@G@@HDCHAR EQUF  $+1,,Q1     . OPENING CHAR OF FUNC @F@[@@HDSYMB EQUF  $+1,,CA
)@@G@@Q2     . SYMBOL TO SEPERATE THINGS IN HEADER    @C@[@@HDTEXT EQUF  $+1,,CB
)@@G@@H2     . HEADER TEXT RELADR   @ @[@@       RES   2           .    @ @[@@CC
)@@G@@       CONSTS            .    @ @[@@HDPTBL +     ASPACE      .    @ @[@@CD
)@@G@@       +     ASTORE      .    @ @[@@       +     ASPACE      .    @ @[@@CE
)@@G@@       +     ASEMIC      .    @G@@[[/. NOTE:  SINCE HEADER LINES CANNOT CF
)@@G@@GIVE RISE TO DIAGNOSTICS, THE WILL  @G@@[[. ONLY BE PRINTED WHEN WE'RE ICG
)@@G@@N FUNC DEFN MODE.  CONSEQUENTLY, THE CODE @G@@[[. FORMERLY IN THIS ELEMECH
)@@G@@NT TO PRINT THEM HAS BEEN MOVED TO A SEPERATE   @G@@[[. ELEMENT,  FNHPRTCI
)@@G@@/APL  . THAT ELEMENT CAN THUS BE POSITIONED IN THE    @F@@[[. COMMAND/FUCJ
)@@G@@NCDEFN SEGMENT (REP), GAINING CORE IN TOE ROOT SEGMENT@]_@@@       END. CK
)@@G@@___MJMP A1,HD0900 0,HD0200 2,HD0300 .     @C@[@@HD0200 TE,U  A0,AEOL    CL
)@@G@@ . IS THE OP AN EOL ?   @D@[@@       J     HD0900      . NO, SYSERRCAT TCM
)@@G@@HIS POINT   @A@[@@      *[S@@@*SDFF*@G@@@@. ****************************CN
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUCO
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 CP
)@@G@@                                                    * @G@@@@       AXR$ CQ
)@@G@@        .                                                 * @G@@@@      CR
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@CS
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * CT
)@@G@@@G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLS                        CU
)@@G@@    * @G@@@@       WSDEF.      DEFINE WORKSPACE                         CV
)@@G@@          * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE           CW
)@@G@@                * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)      CX
)@@G@@                      * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS CY
)@@G@@ SPACE                      * @G@@@@       CBLOCK            . DEFINE COCZ
)@@G@@NTROL BLOCK TYPES                 * @G@@@@.                             DA
)@@G@@                                        * @G@@@@. END OF STANDARD PROC BDB
)@@G@@LOCK                                          * @G@@@@. ****************DC
)@@G@@***************************************************** @E@@[[        BRIEDD
)@@G@@F  . UOM ASSEMBLER ONLY, REMOVE AT OTHER SITES  @G@@[[        FUZDEF    DE
)@@G@@            . DEFINE FUZZ PARAMS FOR OLD WS CONVERSION@G@@[[LSINIT  INFODF
)@@G@@   2 ININFO       . DEFINE COMMON BLK FOR INITIALIZATION    @G@@[[LSMASTDG
)@@G@@  INFO   2 MCINFO       . DEFINE COMMON FOR MASTER CONSOL CODE    @[@@@@DH
)@@G@@.     @#@@@@P      PROC  .    @ @@@@READ*  NAME  1           .    @ @@@@DI
)@@G@@WRITE* NAME  2           .    @ @@@@LOCK*  NAME  3           .    @ @[@@DJ
)@@G@@WAIT*  NAME  4           .    @ [@@@UNLOCK* NAME 5           .    @ @[@@DK
)@@G@@RDICT* NAME  6           .    @ [@@@WDICT* NAME  7           .    @E@@@@DL
)@@G@@F(1)   EQU   R$          . DEFINE FUNCTIONS FOR EACH ENTRY  @ @@@@F(2)  DM
)@@G@@ EQU   W$          .    @ @@@@F(3)   EQU   RDL$        .    @ @[@@F(4)  DN
)@@G@@ EQU   W$          .    @ [@@@F(5)   EQU   UNL$        .    @ @[@@F(6)  DO
)@@G@@ EQU   R$          .    @ [@@@F(7)   EQU   W$          .    @ @@@@      DP
)@@G@@ UNLI$T            .    @B@@@@       LA,U  A0,F(P(0,0)) . GET FUNCTION  DQ
)@@G@@@ @@@@       S,S2 A0,IOPKT+3   .    @A@[@@       DO P(2)>0 , L,U A0,P(2,DR
)@@G@@1)    @ @[@@       DO P(2)=0 , L,U A0,28  @ @[@@       S,H1  A0,IOPKT+4 DS
)@@G@@ .    @A#@@@       DO    P(0,0)>5 , GO IO$020   @A@@@@       DO    P(0,0DT
)@@G@@)<3 , GO IO$010   @ @@@@       LA,U  A0,1791     .    @ @@@@       SA   DU
)@@G@@ A0,IOPKT+5  .    @ @@@@       LA,U  A0,BUFF     .    @ @[@@       SA,H2DV
)@@G@@  A0,IOPKT+4 .    @ [@@@       GO    IO$030      .    @ @@@@IO$010*     DW
)@@G@@ NAME        .    @ @[@@       LA,U  A0,P(1,1)   .    @ @[@@       SA,H2DX
)@@G@@  A0,IOPKT+4 .    @ @[@@       S     P(1,2),IOPKT+5   @A@@[[        S   DY
)@@G@@   P(1,2),IOPKT+5 .     @A@@[[        LA,U   A0,P(1,1)      .     @ #@@@DZ
)@@G@@       GO    IO$030      .    @ @@@@IO$020*      NAME        .    @F@@@@EA
)@@G@@       LA    A0,PREADD   . GET DIRECTORY ADD FOR THIS ELEMENT     @ @@@@EB
)@@G@@       SA    A0,IOPKT+5  .    @B@@@@       LA,U  A0,DIRECT   . PUT IT HEEC
)@@G@@RE    @ @[@@       SA,H2  A0,IOPKT+4 .    @ @[@@       GO    IO$030     ED
)@@G@@ .    @ ]@@@IO$030*      NAME        .    @ @[@@       LA,U  A0,IOPKT   EE
)@@G@@ .    @ @[@@       ER    IOW$        .    @ @[@@       TZ,S1 3,A0       EF
)@@G@@ .    @D@[@@       LMJ     A0,IOERRX . CHECK I/O STATUS CLOSER    @E@@[[EG
)@@G@@        LXI,U  A0,P(2,1)+(P(2)=0)*28    . GET WORDCOUNT     @D@@[[      EH
)@@G@@  SA     A0,IOPKT+4     . STASH ACCESS WORD     @D@@[[        LA,U   A0,EI
)@@G@@IOPKT       . GET IO PACKET ADDR    @B@@[[        ER     IOW$           EJ
)@@G@@. DO IT     @G@@[[ DO P(3)=0 , GO IO$040        . IF NO ERROR RET GIVEN,EK
)@@G@@ SKIP THE CHECK   @C@@[[        LA,S1  A0,IOPKT+3     . GET THE STATUS  EL
)@@G@@@B@@[[        TNE,U  A0,5           . I/O 5?    @G@@[[        TNZ,H2 IOPEM
)@@G@@KT+3        . YES, LET IT GO IF THERE WAS DATA XFER   @E@@[[        JNZ EN
)@@G@@   A0,P(3,1)      . ELSE NON-0 STATUS IS ERROR  @#@@[[IO$040* NAME   .  EO
)@@G@@@#^@@@       LI$T  .    @]@@@@       END  @ @[@@       VARBLS           EP
)@@G@@ .    @D@[@@DIRECT* RES  28          . DIRECTORY FOR CURRENT WS   @ @[@@EQ
)@@G@@IOFLGS* +    0           . YES@ @[@@       IODEF             .    @[@@[[ER
)@@G@@.     @F@@[[. DATA AREAS FOR HOLDING PREAMBLE, ETC.. EQUFS ARE DEFINED BES
)@@G@@Y PROC@G@@[[. IODEF, IN PROCEDURE ELEMENT WSDEF/APL.  SEVERAL ELEMENTS UET
)@@G@@SE THIS BUFF@#@@[[        VARBLS .  @G@@[[DIRECT* RES    28             EU
)@@G@@. OLD FORMAT PREAMBLE AREA FOR WORKSPCAES @F@@[[PREAMB* EQU    DIRECT   EV
)@@G@@      . TURN ON NEW FORMAT ACCOUNT ELEMENT@G@@[[        IODEF           EW
)@@G@@      . DEFINED EQUFS INTO ABOVE DATA AREAS     @G@@[[. SOME GLOBAL FLAGEX
)@@G@@S (I.E. ALGOL 'OWN' VARIABLES) USED BY THIS ELEMENT   @F@@[[PUBLIC  EQUFEY
)@@G@@   $,,H1          . ON IF WS BEING LOOKED AT IS PUBLIC@G@@[[ALTIO   EQUFEZ
)@@G@@   $,,H2          . ON IF AN ALT WS LIB FILE IS ASSIGNED    @A@@[[      FA
)@@G@@  +$-$,$-$              .     @[^@@@.     @ @@@@P      PROC             FB
)@@G@@ .    @ @@@@PUT*   NAME              .    @ @@@@       UNLI$T           FC
)@@G@@ .    @A@@@@       L,P(0,1) A1,P(1,1),P(1,2)   .@ @@@@       LMJ   X2,0,FD
)@@G@@X2     .    @ @@@@       LI$T              .    @]@@@@       END  @[@@@@FE
)@@G@@/.    @ @@@@       INSTRS            .    @[@@@@.     @ @@@@. ENTRY TO SFF
)@@G@@AVE A WORK SPACE  @[@@@@.     @ @[@@WSSAVE* S    X11,LSLINK  .    @ @[@@FG
)@@G@@       TLD   A0,CWSNM    .    @C@[@@       TTNE  A0,CLWS     . IF WSID IFH
)@@G@@S CLEAR WS  @D@[@@       J     SL0950      . THEN SAVE HIM FROM HISSELF FI
)@@G@@@ @[@@       LMJ   X11,SETNUM  .    @D@[@@       SZ    QUOVER      . CLEFJ
)@@G@@AR QUOTA EXCEEDED FLAG  @ @[@@       ACON              .    @D@[@@      FK
)@@G@@ TNZ   RCMASF      . IS THIS A MASTER CONSOLE?  @ @[@@       TZ    ALTIOFL
)@@G@@       .    @F@[@@       J     SV0001      . DONT HOLD HIM RESPONSIBLE FFM
)@@G@@OR HIS MESS @ @[@@       TLD   A0,CWSNM    .    @ @[@@       TTNE  A0,COFN
)@@G@@NT     .    @D@[@@       J     SV0001      . DONT CHECK FOR CONTINUE    FO
)@@G@@@ @[@@       L,U   X2,ACQWTA   .    @B@[@@       LA    A2,WSISIZ   . GETFP
)@@G@@ SIZE INDEX @ @[@@       TZ    PUBLIC      .    @G@[@@       SZ    A2   FQ
)@@G@@       . 0 INDEX FOR PUBLIC ( REGARDLESS OF SIZE)     @C@[@@       EX   FR
)@@G@@ GETQTA,A2   . GET CURRENT COUNT    @A@[@@       L     A1,A0       . SAVFS
)@@G@@E IT  @B@[@@       L,U   X2,ACUSED   . GET USED COUNT @ @[@@       EX   FT
)@@G@@ GETQTA,A2   .    @E@[@@       TG,U  A0,1,A1     . WILL THIS PUT HIM OVEFU
)@@G@@R THE QUOTA?@C@[@@       SX    X11,QUOVER  . YES, TURN THE FLAG ON@ @[@@FV
)@@G@@       ACOFF             .    @ @[@@SV0001 LA    A2,PUBLIC   .    @D@[@@FW
)@@G@@       JNZ   A2,SV0010   . PUBLIC, CHECK IT LATER     @D@[@@       TZ   FX
)@@G@@ RCMASF      . IS THIS A MASTER CONSOLE?  @D@[@@       J     SV0015     FY
)@@G@@ . YES, HE CAN SAVE ANYTHING  @D@[@@       DL    A0,CLIBN    . GET # SPEFZ
)@@G@@CIFIED OR IMPLIED @D@[@@       DTE   A0,RCLIBN   . IF PRIVATE, BETTER BEGA
)@@G@@ HIS  @ @[@@       J     SL0960      .    @ @[@@       J     SV0015     GB
)@@G@@ .    @]@[@@SV0010 .    @ @[@@       LA    A4,CKEY     .    @H@[@@      GC
)@@G@@ JNE   A4,SPACES SL0970      . KEYS ARE NOT ALLOWED ON PUBLIC FILES     GD
)@@G@@@]@[@@SV0015 .    @D@[@@       LA,U  A0,SV0020   . SET NO FOUND RETURN AGE
)@@G@@DDRESS@ @[@@       SA    A0,PFERR+1  .    @E@[@@       LMJ   X6,SETUP   GF
)@@G@@ . GO ASSIGN FILE AND SETUP ELEMENT @B@[@@       ER    TDATE$      . UPDGG
)@@G@@ATE LAST REF@D@[@@       S     A0,DMOST    . RESET MOST RECENT SAVE DATEGH
)@@G@@@ @[@@       SA    A0,DLAST    .    @C@[@@       J     SV0100      . GO GI
)@@G@@OUTPUT ELEMENT    @[@[@@.     @A@[@@. ELEMENT DID NOT PREVIOUSLY EXIST  GJ
)@@G@@@[@[@@.     @C@[@@SV0020 LA,U  A0,1        . SET REFERENCE COUNT  @D@[@@GK
)@@G@@       TZ    QUOVER      . DOES THIS EXCEED HIS QUOTA?@D@[@@       J    GL
)@@G@@ SL0980      . YES, DON'T LET HIM DO IT   @ @[@@       SA    A0,DREF    GM
)@@G@@ .    @ @[@@       ER    TDATE$      .    @C@[@@       SA    A0,DCAT    GN
)@@G@@ . SET CATALOG DATE     @D@[@@       SA    A0,DLAST    . AND LAST REFEREGO
)@@G@@NCE DATE    @D@[@@       S     A0,DMOST    . RESET MOST RECENT SAVE DATEGP
)@@G@@@B@[@@       SZ    TDATE       . CREATED NOW    @A@[@@       DL    A0,RCGQ
)@@G@@QUAL   . SET QUAL @ @[@@       DS    A0,DQUAL    .    @B@[@@       DL   GR
)@@G@@ A0,RCACNT   . AND ACCOUNT    @ @[@@       DS    A0,DACNT    .    @C@[@@GS
)@@G@@       L     A0,WSASIZ   . GET CURRENT WS SIZE  @B@[@@       SA    A0,DSGT
)@@G@@IZE    . REMEMBER IT    @ @[@@       TLD   A0,CWSNM    .    @C@[@@      GU
)@@G@@ TSTO  A0,DNAME    . SET WS NAME IN TOC   @C@[@@       DL    A0,RCLIBN  GV
)@@G@@ . REMEMBER WHO DID THIS@ @[@@       DS    A0,DLIB     .    @ @[@@      GW
)@@G@@ DL    A0,CKEY     .    @ @[@@       DS    A0,DKEY     .    @C@[@@      GX
)@@G@@ J     SV0100      . GO OUTPUT ELEMENT    @[@[@@.     @ @[@@. WRITE PACKGY
)@@G@@ED WS TO DRUM     @[@[@@.     @]@[@@SV0100.     @^@[@@       TZ    RCMASGZ
)@@G@@F.    @^@[@@       J     SV0110.    @^@[@@       L     A2,PUBLIC. @E@[@@HA
)@@G@@       JZ    A2,SV0110   . PRIVATE HAS ALREADY BEEN CHECKED @ @[@@      HB
)@@G@@ DL    A0,RCLIBN   .    @G@[@@       DTE   A0,DLIB     . IF PUBLIC, HE BHC
)@@G@@ETTER HAVE ORIGINALLY SAVED IT@ @[@@       J     SL0960      .    @ @[@@HD
)@@G@@SV0110 TLD   A0,CWSNM    .    @D@[@@       TTNE  A0,CONT     . CONTINUE HE
)@@G@@ALWAYS GET SAVED  @ @[@@       J     SV0120      .    @ @[@@       LA   HF
)@@G@@ A4,DLAST    .    @F@[@@       JE    A4,DCAT SV0120 . IF NEVER SAVED BEFHG
)@@G@@ORE, DONT CHECK   @G@[@@       TTE   A0,WSID     . BUT, IF SAVED BEFORE,HH
)@@G@@ AND WSID NOT = WS NAME @C@[@@       J     SL0950      . DONT LET HIM DOHI
)@@G@@ IT   @D@[@@SV0120 TSTO  A0,WSID     . SET CURRENT WSID TO WSNAME @ @[@@HJ
)@@G@@       DL    A0,CKEY     .    @B@[@@       DS    A0,DKEY     . SET KEY IHK
)@@G@@N TOC @C@[@@       DS    A0,WSPASW   . UPDATE CURRENT KEY   @E@[@@      HL
)@@G@@ LMJ   X11,ZRFREE  . ZERO OUT UNUSED FREE STORAGE     @ @[@@       J    HM
)@@G@@ SL2000      .    @C@[@@       LOCK              . PREVENT CONFLICTS    HN
)@@G@@@ @[@@       LA,U  A0,PFPKT    .    @D@[@@       ER    PFWL$       . GETHO
)@@G@@ NEXT WRITE LOCATION    @ @[@@       JNZ   A2,*PFERR,A2 .   @ @[@@      HP
)@@G@@ SA    A1,TXTADD   .    @D@[@@       LA    A13,A1      . SAVE DRUM ADDREHQ
)@@G@@SS HERE     @D@[@@       SZ    TXTLTH      . INITILAIZE TEXT LENGTH TO 0HR
)@@G@@@[@[@@/.    @C@@[[TWSAVE* SX     X11,SVLINK     . SAVE RETURN ADDR@D@@[[HS
)@@G@@        LX,U   X11,NUMCHT     . SET FLAG TO USE TPF$  @C@@[[        J   HT
)@@G@@   SV0005         . AND GO SET UP   @[@@[[.     @C@@[[WSSAVE* SX     X11HU
)@@G@@,SVLINK     . SAVE RETURN ADDR@G@@[[        LX,U   X11,NUMCHK     . SET HV
)@@G@@POINTER SO NORMAL FILES ARE USED    @[@@[[.     @F@@[[SV0005  TLD    A0,HW
)@@G@@CWSNM       . GET WSNAME SET BY COMMAND SCANNER @C@@[[        TTNE   A0,HX
)@@G@@CLWS        . IS IT CLEAR WS? @E@@[[        J      SV0920         . THENHY
)@@G@@ DON'T LET HIM SAVE IT  @E@@[[        LA,U   A3,0           . GET NON-COHZ
)@@G@@NTINUE FLAG VALUE @E@@[[        TTNE   A0,CONT        . IS WS TO BE SAVEIA
)@@G@@D CONTINUE? @D@@[[        LA,U   A3,1           . TURN CONTINUE FLAG ON IB
)@@G@@@D@@[[        SA     A3,SVCONT      . POST CONTINUE FLG     @G@@[[      IC
)@@G@@  LA,U   A0,0           . INHIBIT REFS TO OTHER USERS LIB FILES   @G@@[[ID
)@@G@@        LMJ    X11,0,X11      . CALL NUMCHK TO SET FLAGS AND GET FILE   IE
)@@G@@@A@@[[        J      SV0999         .     @F@@[[        TNZ    PUBLIC   IF
)@@G@@      . SAVING IN THE PUBLIC LIBRARY?     @E@@[[        J      SV0010   IG
)@@G@@      . NO, GO CHECK DROPPABILITY   @F@@[[        LA     A0,ACPERM      IH
)@@G@@. YES, GET THIS USER'S PERMISSIONS  @G@@[[        TEP,U  A0,ACPINH      II
)@@G@@. ARE PUBLIC SAVES INHIBITED FOR THIS USER@F@@[[        J      SV0910   IJ
)@@G@@      . YES, GO SAY IMPROPER LIB REFERENCE@E@@[[        LA     A2,RCMASFIK
)@@G@@      . GET MASTER CONSOLE FLAG     @F@@[[        DL     A0,CLIBN       IL
)@@G@@. GET LIBNO SPECIFIED ON THE COMMAND@G@@[[        DTLE   A0,(+100.0D)   IM
)@@G@@. IS LIBRARY RESERVED FOR INSTAL MGR?     @G@@[[        JZ     A2,SV0910IN
)@@G@@      . YES, IF WE'RE NOT HIM, IMPROPER REFER   @F@@[[. FIND OLD COPY OFIO
)@@G@@ WS, READ PREAMBLE, SEE IF IT CNA BE DROPPED    @D@@[[SV0010  LMJ    X11IP
)@@G@@,DRCHEK     . FIND AND CHECK IT     @C@@[[        J      SV0999         IQ
)@@G@@. OOPS, ERROR     @B@@[[        J      SV0050         . NOFIND    @^@@[[IR
)@@G@@. WS ALREADY EXISTS--   @G@@[[SV0020  DS     A0,SVMASS      . SAVE BILLIIS
)@@G@@NG DATA COMPUTED BY DRCHEK    @D@@[[        LA     A3,SVCONT      . GET IT
)@@G@@CONTINUE FLAG     @F@@[[        TLD    A0,CWSNM       . AND NAME SPECIFIIU
)@@G@@ED ON COMMAND     @G@@[[        TTE    A0,WSID        . DID COMMAND SPECIV
)@@G@@IFY ACTIVE WS NAME?     @F@@[[        JZ     A3,SV0920      . NO, IF NOTIW
)@@G@@ CONTINUE, DON'T SAVE IT@F@@[[        TZ     RCMASF         . IS THIS THIX
)@@G@@E INSTALLATION MANAGER? @G@@[[        TNZ    NCALTU         . YES, IS HEIY
)@@G@@ )SAVING IN A USER'S LIB?     @F@@[[        J      SV0100         . NO, IZ
)@@G@@GO MAKE COMPLETE PREAMBLE     @G@@[[        J      SV0105         . YES,JA
)@@G@@ DON'T CHANGE ACCT DATA IN PREAMB   @C@@[[. ELEMENT IS NEW-- INITIALIZE JB
)@@G@@PARAMS IN PREAMBLE@C@@[[SV0050  DSL    A0,72          . GET SOME NOTHINGJC
)@@G@@@F@@[[        DS     A0,SVMASS      . AND CLEAR MS USAGE AND BILLING    JD
)@@G@@@F@@[[        DS     A0,DRFAKE      . CLEAR WDS USED TO FAKE RB FORMAT  JE
)@@G@@@A@@[[        DS     A0,DRFAKE+2    .     @D@@[[        DS     A0,DRSPA2JF
)@@G@@      . CLEAR SPARES 2 AND 1  @E@@[[        SZ     DRFTOT         . CLEAJG
)@@G@@R TOTAL REFERENCE COUNT @D@@[[        SZ     DRFRES         . AND REFS SJH
)@@G@@INCE RESET  @C@@[[        ER     TDATE$         . GET PRESENT TIME@F@@[[JI
)@@G@@        SA     A0,DLAST       . WHICH IS TIME OF LAST REFERENCE   @F@@[[JJ
)@@G@@        SA     A0,DTDRES      . AND TIME OF LAST REFCNT RESET     @E@@[[JK
)@@G@@        SA     A0,DCAT        . AND ALSO TIME OF CREATION   @D@@[[      JL
)@@G@@  LA     A0,('APL*@@')  . GET INITIAL FLAG WORD @C@@[[        SA     A0,JM
)@@G@@DRFLAG      . AND STASH IT    @[@@[[.     @E@@[[. FINISH BUILDING PREAMBJN
)@@G@@LE AND INITIALIZE TO START OUTPUT   @[@@[[.     @E@@[[SV0100  DL     A0,JO
)@@G@@CKEY        . GET KEY SPECIFIED ON COMMAND@D@@[[        DS     A0,DKEY  JP
)@@G@@      . TO PREAMBLE OF ELEMENT@E@@[[        DS     A0,WSPASW      . AND JQ
)@@G@@ALSO INTO THE WS ITSELF @F@@[[        LA     A0,DLAST       . GET LAST RJR
)@@G@@EF DATE (I.E. RIGHT NOW)@E@@[[        SA     A0,DMOST       . MAKE IT MOJS
)@@G@@ST RECENT )SAVE   @E@@[[        SZ     DRFSAV         . CLEAR REFS SINCEJT
)@@G@@ LAST SAVE  @F@@[[        DL     A0,RCACNT      . GET THIS USER'S ACCOUNJU
)@@G@@T NUMBER    @A@@[[        DS     A0,DRACNT      .     @C@@[[        DL  JV
)@@G@@   A0,RCQUAL      . ALSO QUALIFIER  @A@@[[        DS     A0,DRQUAL      JW
)@@G@@.     @D@@[[        LA     A0,RCRUNI      . AND ORIGINAL RUNID    @A@@[[JX
)@@G@@        SA     A0,DRUNID      .     @C@@[[        DL     A0,RCLIBN      JY
)@@G@@. USER'S LIBNUMBER@A@@[[        DS     A0,DLIB        .     @G@@[[. LEAPJZ
)@@G@@ HERE TO AVOID CHANGING MS ACCNTG DATA (INST MGR )SAVE OF USER WS)@F@@[[KA
)@@G@@SV0105  TLD    A0,CWSNM       . GET WSNAME AS GIVEN ON COMMAND    @E@@[[KB
)@@G@@        TSTO   A0,WSID        . FORCE THE ACTIVE NAME TO IT @E@@[[      KC
)@@G@@  TSTO   A0,DNAME       . AND PUT IT IN THE DIRECTORY @D@@[[        LA  KD
)@@G@@   A0,WSASIZ      . GET CURRENT SIZE INDEX@C@@[[        SA     A0,DSIZE KE
)@@G@@      . POST IN PREAMBLE@G@@[[        LA     A0,WSMSIZ      . MAX CORE SKF
)@@G@@IZE TO WHICH WS CAN EXPAND    @A@@[[        SA     A0,DMXSIZ      .     KG
)@@G@@@E@@[[        LA,U   A0,PGVERS      . VERSION OF THE PROCESSOR    @E@@[[KH
)@@G@@        SA     A0,WSVERS      . MARK THE WS TEXT WITH IT    @D@@[[      KI
)@@G@@  AA,U   A0,'0'         . CONVERT TO FIELDATA   @A@@[[        SA     A0,KJ
)@@G@@DRVERS      .     @B@@[[        LA,U   A0,PGLEVL      . AND LEVEL @E@@[[KK
)@@G@@        SA     A0,WSLEVL      . MARK THE WS TEXT WITH IT    @D@@[[      KL
)@@G@@  AA,U   A0,'0'         . CONVERT TO FIELDATA   @A@@[[        SA     A0,KM
)@@G@@DRLEVL      .     @G@@[[        LMJ    X11,ZRFREE     . CLEAR FREE STORAKN
)@@G@@GE TO ZEROES FOR PACKING@A@@[[        J      SV0999         .     @C@@[[KO
)@@G@@        LA,U   A1,1791        . LOCKSECTOR ADDR @F@@[[        LOCK   BUFKP
)@@G@@F,A1 28 SV0900   . DON'T LET ANYONE ELSE IN     @C@@[[        LA,U   A0,KQ
)@@G@@PFPKT       . GET PACKET ADDR @D@@[[        ER     PFWL$          . FINDKR
)@@G@@ NEXT WRITE LOCN  @E@@[[        JNZ    A2,SV0800      . WIPE OUT IF CAN'KS
)@@G@@T DO IT     @C@@[[. ADJUST START ADDR FOR DISK BLOCKING, IF ANY   @C@@[[KT
)@@G@@SV0110  LA,U   A2,0           . CLEAR REMAINDER @E@@[[        DSL    A1,KU
)@@G@@DPREP       . GET PARTIAL BLOCKS TO A2    @D@@[[        TZ     A2       KV
)@@G@@      . ANY PARTIAL BLOCK?    @D@@[[        AA,U   A1,1           . YES,KW
)@@G@@ BUMP START ADDR  @E@@[[        LSSL   A1,DPREP       . MULTIPLY BY BLOCKX
)@@G@@KING FACTOR @F@@[[        SA     A1,PFTADR      . SAVE START ADDR FOR TEKY
)@@G@@XT IN PACKET@F@@[[        LA     A13,A1         . INITIALIZE OUTPUT TARGKZ
)@@G@@ET ADDR     @E@@[[        SZ     PFTSIZ         . CLEAR TEXT SIZE TO ZERLA
)@@G@@O     @ @@[[/. WRITE OUT WORKSPACE TEXT   @[_@@@.     @C@@@@. GET WORDS LB
)@@G@@FROM WS AND PUT IN OUTPUT BUFFER    @ @@@@. X2=CURRENT BUFFER ADDRESS   LC
)@@G@@@ @@@@. X3=CURRENT WS LOAD INDEX    @ @@@@. X4=CURRENT CONTOL WORD INDEXLD
)@@G@@@^@@@@. A2=WS EXHAUSTED FLAG  @A@@@@. A3=POINTER TO CURRENT SEGMENT     LE
)@@G@@@B@@@@. A5=# OF LOAD GROUPS FOR THIS SEGMENT    @B@@@@. A6=AVAILABLE COULF
)@@G@@NT FOR THIS SEGMENT     @[@@@@.     @D@@@@       LXM,U X3,0,WSTAG  . SETLG
)@@G@@ X3 TO BEGINNING OF WS  @ @@@@       LXI,U X3,1        .    @ @@@@      LH
)@@G@@ LXI,U X2,1        .    @D@@@@       SZ    A3          . START AT FIRST LI
)@@G@@SEGMENT     @ @@@@SV0210 LA,U  A0,040      .    @C@@@@       SA,S1  A0,BLJ
)@@G@@UFF,A3 . SET RELOCATABLE FLAG @E@@@@       SZ    BUFF+13,A3  . SET SEQUELK
)@@G@@NCING WASTE WORD TO ZERO@D@@@@       LXM,U X2,BUFF+1,A3 . FIRST LOCATIONLL
)@@G@@ FOR TEXT   @C@@@@       LA,U  A6,11       . SET AVAILABLE COUNT  @C@@@@LM
)@@G@@       SZ    A5          . NUMBER OF LOAD GROUPS@G@@@@       LX,U  X4,BULN
)@@G@@FF+12,A3 . FIRST LOAD CONTROL WORD FOR THIS SEGMENT   @G@@@@SV0220 LA,U LO
)@@G@@ A0,0,X3     . SET UP LOAD ADDRESS FOR THIS CONTROL WORD    @C@@@@      LP
)@@G@@ ANA,U A0,0,WSTAG  . MAKE ADDRESS RELATIVE@D@@@@       SA,H2  A0,0,X4   LQ
)@@G@@ . BUT IT IN CONTROL WORD     @D@@@@       LMJ   X11,MOVECG  . GO GET NELR
)@@G@@XT CONTROL GROUP  @E@@@@       SA,H1  A7,0,X4    . PUT WORD COUNT IN CONLS
)@@G@@TROL WORD   @D@@@@       ANX,U X4,1        . NEXT CONTROL WORD GOES HERELT
)@@G@@@ @@@@       AA,U  A5,1        .    @B@@@@       JZ    A2,SV0250   . RANLU
)@@G@@ OUT OF WS  @D@@@@       JP    A7,$+3      . WAS IT A COMPRESSED LOAD   LV
)@@G@@@D@@@@       ANA,U A6,2        . YES, IT ONLY TOOK TWO WORDS@ @@@@      LW
)@@G@@ J     $+3         .    @F@@@@       AN    A6,A7       . NO, IT TOOK ALLLX
)@@G@@ THE SPACE IT COULD     @D@@@@       ANA,U A6,1        . MINUS THE NEXT LY
)@@G@@CONTROL WORD@C@@@@       JN    A6,SV0240   . THIS SEGMENT IS FULL @C@@@@LZ
)@@G@@       JZ    A6,SV0230   . IT'S ALMOST FULL     @C@@@@       J     SV022MA
)@@G@@0      . GO GET SOME MORE     @C@@@@SV0230 SZ    0,X4        . SET NULL MB
)@@G@@CONTROL WORD@B@@@@SV0240 JZ    A2,SV0250   . NO MORE WS     @C@@@@      MC
)@@G@@ SA,H2  A5,BUFF,A3 . SET LOAD GROUP COUNT @C@@@@       TNE,U A3,(7*28)+1MD
)@@G@@4          . LAST ONE?  @E@@@@       J     SV0260      . NO, BUFFER IS FME
)@@G@@ULL, OUTPUT IT    @C@@@@       A,U   A3,14       . MOVE TO NEXT SEGMENT MF
)@@G@@@D@@@@       J     SV0210      . FILL SECOND HALF OF BUFFER @D@@@@SV0250MG
)@@G@@ SN,H2 A5,BUFF,A3  . SET END OF LOAD SENTINAL   @]@@@@SV0260.     @B@@@@MH
)@@G@@       L     A0,A3       . HOW FAR WE ARE @C@@@@       DSL   A0,36      MI
)@@G@@ . ROUND UP TO NEXT     @B@@@@       DI,U  A0,28       . SECTOR ADDRESS MJ
)@@G@@@ @@@@       A,U   A0,1        .    @F@@@@       AU    A0,TXTLTH   . ANDMK
)@@G@@ ADD IT TO THE SIZE OF THE ELEMENT  @ @@@@       S     A1,TXTLTH   .    ML
)@@G@@@C@@@@       L     R1,A0       . SAVE BUFFER SIZE     @D@[@@       WRITEMM
)@@G@@ BUFF,A13 224          . WRITE IT OUT     @D@@[[        WRITE  BUFF,A13 MN
)@@G@@224 SV0799 . WRITE IT OUT     @C[@@@       A     A13,R1      . MOVE UP TMO
)@@G@@HIS MANY    @A@@@@       JZ    A2,SV0270   . ALL GONE @E@@@@       SZ   MP
)@@G@@ A3          . NEXT TIME THROUGH, START AT TOP  @B@@@@       J     SV021MQ
)@@G@@0      . DO IT AGAIN    @G@[@@SV0270 SA    A13,PREADD  . TACK DIRECTORY MR
)@@G@@(PREAMBLE) TO END OF ELEMENT  @B@[@@       WDICT             . WRITE IT MS
)@@G@@OUT   @ @[@@       LA,U  A0,1        .    @C@[@@       SA    A0,PRELTH  MT
)@@G@@ . SIZE OF DIRECTORY    @D@[@@       LNA,U A0,PFPKT    . INSERT AND UPDAMU
)@@G@@TE ADDRESS  @ @[@@       LA    A1,A13      .    @C@[@@       AA,U  A1,1 MV
)@@G@@       . NEXT AVAILABLE SECTOR@D@[@@       ER    PFI$        . INSERT ELMW
)@@G@@EMENT INTO FILE   @B@[@@       JNZ   A2,*PFERR,A2 . CHECK STATUS  @C@[@@MX
)@@G@@SV0280 UNLOCK            . LET THINGS GO AGAIN  @B@[@@       LMJ   X11,SMY
)@@G@@AVEDN  . SAY WHEN SAVED @ @[@@       ACON              .    @A@@[[SV0270MZ
)@@G@@  . FOR HISTORICAL REASONS    @[@@[[.     @C@@[[. NOW WRITE PREAMBLE, CHNA
)@@G@@ECK USAGE, POSTE ELEMENT@[@@[[.     @G@@[[SV0300  SA     A13,PFPADR     NB
)@@G@@. STASH PREAMBLE ADDR (NEXT SECT) IN PKT  @E@@[[        WDICT  DIRECT,A1NC
)@@G@@3 28 SV0799     . WRITE PREAMBLE    @G@@[[. FOR DISK FILES, FUDGE PREAMBND
)@@G@@LE SO WS ENDS ON A BLOCK BOUNDARY. NOTE-- @F@@[[. THAT PREAMBLE READ-WRINE
)@@G@@TES ARE STILL ONLY ONE SECTOR, THUS SOME  @G@@[[. INEFFICIENCIES REMAIN.NF
)@@G@@  SINCE MOST I/O IS ON THE TEXT, HOWEVER, WE    @G@@[[. PREFER TO LET ITNG
)@@G@@ GO AND PAD THE WHOLE ELEMENT, RATHER THAN PADDING    @A@@[[. THE TEXT ANH
)@@G@@ND PREAMBLE SEPERATELY  @E@@[[        LA     A0,PFPADR      . GET START NI
)@@G@@ADDR OF PREAMBLE  @G@@[[        AA,U   A0,1           . PLUS ITS FIXED 1NJ
)@@G@@-SECT LENGTH=NEXT WRITE @C@@[[        LA,U   A1,0           . CLEAR REMANK
)@@G@@INDER @D@@[[        DSL    A0,DPREP       . DIV BY DISK PREP FACT @G@@[[NL
)@@G@@        TZ     A1             . WILL NEXT ELEMENT START ON A BLOK BNDRY?NM
)@@G@@@E@@[[        AA,U   A0,1           . NO, FORCE ADDR UP BY ONE    @E@@[[NN
)@@G@@        LSSL   A0,DPREP       . ALIGN ADDR BACK TO SECTORS  @E@@[[      NO
)@@G@@  ANA    A0,PFPADR      . LESS PREAMBLE START ADDR    @G@@[[        SA  NP
)@@G@@   A0,PFPSIZ      . PLUG FUDGED SIZE OF PREAMBLE IN PACKET  @E@@[[. CHECNQ
)@@G@@K FOR QUOTA IN SECTORS NOT EXCEEDED BY THIS )SAVE     @G@@[[. NOTE: FOR NR
)@@G@@OWN-FILE USAGE OF APL\1100, QUOTA VALUES ARE SET AT SIGNON  @F@@[[. TIMENS
)@@G@@ TO LARGE VALUES SUCH THAT THESE TESTS WILL ALWAYS PASS     @E@@[[SV0310NT
)@@G@@  LA     A1,PUBLIC      . GET PUBLIC LIBRARY INDICATOR@F@@[[        TZ  NU
)@@G@@   ALTIO          . IS SPEC2 OR AN OWNFILE IN USE?    @G@@[[        JZ  NV
)@@G@@   A1,SV0320      . YES, IF NOT PUBLIC SAVE, DON'T CHECK    @G@@[[      NW
)@@G@@  AA     A0,PFTSIZ      . NO COMMON FILE SAVE. COMPUTE TOTAL SECTS@G@@[[NX
)@@G@@        ANA    A0,SVMOLD      . LESS SIZE OF OLD COPY =INCR TO USAGE    NY
)@@G@@@G@@[[        AA     A0,ACCURU      . PLUS CURRENT USAGE IN SECTS FROM ANZ
)@@G@@CCNT  @F@@[[        TP     A0             . IS USAGE TRYING TO GO NEGATIOA
)@@G@@VE?   @D@@[[        SSL    A0,36           . YES, DON'T LET IT    @D@@[[OB
)@@G@@        TNZ    SVCONT         . IS THIS A CONTINUE WS?@D@@[[        TZ  OC
)@@G@@   RCMASF         . NO, THE INSTAL MGR?   @G@@[[        J      SV0320   OD
)@@G@@      . IF EITHER, DON'T CHECK FOR MAX SECTORS  @F@@[[        TG     A0,OE
)@@G@@ACMAXU      . IS MAX SECTS LARGER THAN NEW USAGE@G@@[[        J      SV0OF
)@@G@@820         . NO, DON'T LET HIM EXCEED MAX SECTORS    @F@@[[SV0320  SA  OG
)@@G@@   A0,ACCURU      . PUST NEW VAL OF CURRENT USAGE     @E@@[[        LA  OH
)@@G@@   A0,ACTRKS      . GET CURRENT TRACK SECONDS   @F@@[[        AA     A0,OI
)@@G@@SVTRKS      . PLUS THOSE FOR WS WE JUST DELETED @G@@[[        SA     A0,OJ
)@@G@@ACTRKS      . POST UPDATED TRK SECONDS ACCUMULATION   @D@@[[        SZ  OK
)@@G@@   PFTDAT         . CLEAR DATE IN PACKET  @C@@[[        LA     A1,PFPADROL
)@@G@@      . PREAMBLE ADDR   @F@@[[        AA     A1,PFPSIZ      . PLUS SIZE OM
)@@G@@GIVES NEXT WRITE ADDR   @F@@[[        LNA,U  A0,PFPKT       . SET TO UPDON
)@@G@@ATE NEXT WRITE ADDR     @F@@[[        ER     PFI$           . MARK THIS OO
)@@G@@WS SAVED BY INSERTING IT@D@@[[        JZ     A2,SV0330      . IF OK, GO OP
)@@G@@CLEAN UP    @F@@[[        TE,U   A2,5           . IF NOT OK, HAS TOC OVEOQ
)@@G@@RFLOWED?    @D@@[[        J      SV0800         . NO, SIGNAL I/O ERROR  OR
)@@G@@@F@@[[        J      SV0810         . YES, SIGNAL LIBRARY TABLE FULL    OS
)@@G@@@A@@[[. WS SAVED, CLEAN UP THE LOOSE ENDS @C@@[[SV0330  LA,U   A1,1791  OT
)@@G@@      . LOCKSECTOR ADDR @D@@[[        UNLOCK BUFF,A1 28 SV0900   . RELEAOU
)@@G@@SE THE FILE @F@@[[        TLD    A0,DNAME       . GET NAME WE SAVED THISOV
)@@G@@ WS UNDER   @F@@[[        TSTO   A0,WSID        . FORCE IT TO BE THE ACTOW
)@@G@@IVE WSNAME  @C@@[[        LMJ    X11,SAVEDN     . SAY WHEN SAVED  @DG@@@OX
)@@G@@       TNZ   RCMASF      . IS THIS A MASTER CONSOLE?  @F@@@@       TZ   OY
)@@G@@ ALTIO       . NO, IS HE USING A NON-STANDARD FILE?   @D@[@@       J    OZ
)@@G@@ SL1000      . DONT ACCOUNT ON HIS FILE   @ @[@@       TLD   A0,CONT    PA
)@@G@@ .    @D@[@@       TTNE  A0,CWSNM    . FORGET IT IF 'CONTINUE'    @ @[@@PB
)@@G@@       J     SL1000      .    @ @[@@       L     A0,DCAT     .    @C@[@@PC
)@@G@@       TE    A0,DLAST    . IS THIS A NEW ONE    @D@[@@       J     SL100PD
)@@G@@0      . NO, DONT INCREMENT COUNTER @ @[@@       L,U   A3,1        .    PE
)@@G@@@B@[@@       LMJ   X3,NEWQTA   . UPDATE COUNT   @ @[@@       ACOFF      PF
)@@G@@       .    @B@[@@       J     SL1000      . SAVE COMPLETED @G@@[[      PG
)@@G@@  J      SV0500         . YES, EXIT WITHOUT UPDATING ACCOUNTING   @G@@[[PH
)@@G@@        LMJ    X11,UPDATE     . UPDATE ACCOUNT ELEMENT WITH DRUM USAGE  PI
)@@G@@@A@@[[        J      SV0999         .     @C@@[[SV0500  LX     X11,SVLINPJ
)@@G@@K     . NORMAL EXITS    @A@@[[        J      1,X11          .     @[@@[[PK
)@@G@@.     @A@@[[. ERRORS WHILE FILE IS LOCKED--     @[@@[[.     @C@@[[SV0799PL
)@@G@@  TNE,U  A0,022         . I/O STATUS 22?  @E@@[[        J      SV0820   PM
)@@G@@      . YES, GO SAY QUOTA USED UP   @A@@[[SV0800  ERROR  YIOERR,SV0899  PN
)@@G@@.     @A@@[[SV0810  ERROR  YLIBRA,SV0899  .     @A@@[[SV0820  ERROR  YUSPO
)@@G@@ED,SV0899   .     @C@@[[SV0899  LA,U   A1,1791        . LOCKSECTOR ADDR PP
)@@G@@@C@@[[        UNLOCK BUFF,A1 28 SV0999   . RELEASE IT @C@@[[        J   PQ
)@@G@@   SV0999         . AND GET OUT     @[@@[[.     @A@@[[. ERRORS WHILE FILPR
)@@G@@E IS NOT LOCKED-- @[@@[[.     @A@@[[SV0900  ERROR  YIOERR,SV0999  .     PS
)@@G@@@A@@[[SV0910  ERROR  YIMPRO,SV0999  .     @C@@[[SV0920  TLD    A0,WSID  PT
)@@G@@      . GET NAME OF WS  @D@@[[        TSTO   A0,SVNNAM      . PLUNK INTOPU
)@@G@@ MESSAGE    @F@@[[        PRINT  36,SVNMSG      . SAY 'NOT SAVED, THIS WPV
)@@G@@S IS ... '  @A@@[[        J      SV0999         .     @D@@[[SV0930  ERROPW
)@@G@@R  YUSED,SV0999   . FOR OLD STYLE QUOTAS  @B@@[[SV0999  LX     X11,SVLINPX
)@@G@@K     . ERROR EXIT@A@@[[        J      0,X11          .     @[@@[[.     PY
)@@G@@@#@@[[        VARBLS .  @F@@[[SVMASS  RES    2              . MASS STORAPZ
)@@G@@GE USAGE PARAMETERS     @C@@[[SVTRKS  EQU    SVMASS         . TRACK-SECOQA
)@@G@@NDS   @F@@[[SVMOLD  EQU    SVMASS+1       . MS USAGE (SECTS) OF OLD COPYQB
)@@G@@ OF WS@A@@[[SVLINK  EQUF   $,,H1          .     @F@@[[SVCONT  EQUF   $,,QC
)@@G@@S6          . FLAG-- ON IF WSNAME IS CONTINUE   @A@@[[        RES    1  QD
)@@G@@            .     @C@@[[SVNMSG  APLBCI ' NOT SAVED, ',' THIS WS IS '    QE
)@@G@@@E@@[[SVNNAM  RES    3              . WSNAME IS DEPOSITED HERE    @[F@@@QF
)@@G@@/.    @[@@@@.     @B@@@@. ROUTINE TO GET NEXT LOAD GROUP FROM WS  @F@@@@QG
)@@G@@. IF ANY REPETITIOUS WORDS ARE FOUND IN CONSEQUTIVE LOCATIONS     @G@@@@QH
)@@G@@. A NEGATIVE WORD COUNT IS RETURNED AND ONLY ONE COPY OF THE WORD IS PUTQI
)@@G@@@H@@@@. IN THE OUTPUT BUFFER.  OTHERWISE ALL WORDS ARE STORED AND COUNT QJ
)@@G@@IS POSITIVE @C@@@@. IS A2=ZERO ON RETURN, WS HAS BEEN EXHAUSTED   @ @@@@QK
)@@G@@. A7=COUNT FOR THIS LOAD GROUP@[@@@@.     @#@@[[        INSTRS .  @F@@@@QL
)@@G@@MOVECG LA,U  A7,0        . INITIALIZE COUNT OF NO OF WORDS MOVED  @D@[@@QM
)@@G@@       LA,U  A2,WSLAST   . ADDR OF LAST WORD IN WS    @E@@[[        LA  QN
)@@G@@   A2,RCALWA      . GET LWA OF ACTIVE WORKSPACE @E[@@@       JG,U  A2,0,QO
)@@G@@X3 MV0200   . IF NEXT WD OUT OF WS, QUIT  @[@@@@.     @F@@@@. MOVE 1ST WQP
)@@G@@D AND CONTINUE UNTIL DETECTION OF IDENTICAL WORDS     @[@@@@.     @E@@@@QQ
)@@G@@MV0010 LA    A0,0,*X3    . GET NEXT WD TO BE MOVED FROM WS  @C@@@@      QR
)@@G@@ SA    A0,0,*X2    . AND PUT IT IN THE BUF@E@@@@       AA,U  A7,1       QS
)@@G@@ . UPDATE COUNT OF NO OF WORDS MOVED@C@@@@       JE    A6,A7 0,X11 . IF QT
)@@G@@BURRER FULL, QUIT @F@@@@       JG,U  A2,0,X3 MV0200   . IF NEXT WD OUT OQU
)@@G@@F WS, WSEMPTY EXIT@G@@@@       JNE   A0,0,X3 MV0010   . IF NEXT WD DIFFEQV
)@@G@@RENT FROM LAST, MOVE IT @F@@@@       JNE,U A7,1 0,X11  . IDENTICAL.  IF QW
)@@G@@NOT 1ST 2 WORDS, QUIT   @[@@@@.     @F@@@@. THE 2ND WD IS IDENTICAL TO TQX
)@@G@@HE 1ST, MAKE A COMPRESSED GROUP     @[@@@@.     @D@@@@MV0100 LNA,U A7,2 QY
)@@G@@       . POST 1ST 2 WDS AS IDENTICAL@E@@@@MV0110 JG,U  A2,1,*X3 MV0200  QZ
)@@G@@. EXIT IF NEXT WD OUT OF WS   @G@@@@       JNE   A0,0,X3 0,X11    . IF DRA
)@@G@@IFFERENT FROM PREVIOUS WORDS, QUIT  @F@@@@       ANA,U A7,1        . OTHRB
)@@G@@ERWISE COUNT ANOTHER IDENTICAL WORD @D@@@@       J     MV0110      . ANDRC
)@@G@@ GO COMPARE NEXT ONE    @[@@@@.     @^@@@@. EXIT FOR EMPTY WS--   @[@@@@RD
)@@G@@.     @C@@@@MV0200 LA,U  A2,0        . SET WSEMPTY FLAG     @A@@@@      RE
)@@G@@ J     0,X11       . BYE---   @[@@@@/.    @ @@@@. ENTRY TO LOAD A WORK SRF
)@@G@@PACE  @[@@@@.     @ @[@@WSLOAD* SX   X11,LSLINK  .    @C@[@@       LA,U RG
)@@G@@ A0,SL0910   . SET NO FIND RETRUN   @ @[@@       SA    A0,PFERR+1  .    RH
)@@G@@@E@[@@       LMJ   X6,SETUP    . GO ASSIGN FILE AND SETUP ELEMENT @ @[@@RI
)@@G@@       LMJ   X11,SETNUM  .    @ @[@@       LA    A0,PUBLIC   .    @C@[@@RJ
)@@G@@       JZ    A0,LD0010   . # SAYS FILE=PRIVATE  @ @[@@       LA    A4,CKRK
)@@G@@EY     .    @F@[@@       JNE   A4,SPACES SL0970 . BUT PUBLIC FILES CNNT RL
)@@G@@HAVE KEYS   @#@@[[        INSTRS .  @G@@[[TWSLOD* LX,U   A1,NUMCHT      RM
)@@G@@. )TLOAD ENTRY. SET TARGET ADDR TO GET FIL@D@@[[        J      LD0005   RN
)@@G@@      . AND GO SAVE STUFF     @[@@[[.     @G@@[[WSLOAD* LX,U   A1,NUMCHKRO
)@@G@@      . NORMAL ENTRY, SET FILE GET RTNE ADDR    @[@@[[.     @A@@[[LD0005RP
)@@G@@  SX     X11,LDLINK     .     @F@@[[        LA,U   A0,1           . RAISRQ
)@@G@@E OTHER USER LIB ALLOW FLAG   @G@@[[        LMJ    X11,0,A1       . CALLRR
)@@G@@ NUMCHK AND PUT FILENAMES IN PKTS   @A@@[[        J      LD0999         RS
)@@G@@.     @F@@[[        LMJ    X11,ELINIT     . INITIALIZE TO GET THIS ELEMERT
)@@G@@NT    @B@@[[        J      LD0999         . ERROR     @B@@[[        J   RU
)@@G@@   LD0800         . NOFIND    @DD@@@LD0010 TZ    RCMASF      . IS THIS ARV
)@@G@@ MASTER CONSOLE?  @E@@@@       J     LD0020      . YES, HE DOESN'T NEED RW
)@@G@@THE KEYS    @A@@@@       DL    A0,DKEY     . GET KEY  @C@@@@       DTE  RX
)@@G@@ A0,CKEY     . WAS IT THE RIGHT ONE?@ @[@@       J     SL0940      . TSKRY
)@@G@@@ @@][       J     LD0910      . TSK@B@[@@LD0020 LA    A0,DSIZE    . GETRZ
)@@G@@ WS SIZE    @ @[@@       TE    A0,WSASIZ   .    @A@[@@       J     SL093SA
)@@G@@0      . CONFLICT @ @[@@       LA    A0,DREF     .    @ @[@@       AA,U SB
)@@G@@ A0,1        .    @ @[@@       SA    A0,DREF     .    @ @[@@       ER   SC
)@@G@@ TDATE$      .    @ @[@@       SA    A0,DLAST    .    @ @[@@       WDICTSD
)@@G@@             .    @C@@[[. CHECK WORKSPACE SIZE AGAINST CORE REQUIREMENTSSE
)@@G@@@D@@[[LD0020  LA,H1  A0,DSIZE       . GET SIZE INDEX VALUE  @E@@[[      SF
)@@G@@  JZ     A0,LD0920      . IF ZERO, WS HAS BEEN TRASHED@C@@[[        LSSLSG
)@@G@@   A0,12          . MULTIPLY BY 4096@G@@[[        TE,H2  A0,DSIZE       SH
)@@G@@. DOES IT MATCH NOMINAL SIZE IN WORDS     @D@@[[        J      LD0920   SI
)@@G@@      . IF NOT, SIZE ERROR    @E@@[[        LA     A0,DSIZE       . GET SJ
)@@G@@THE ENTIRE WORD BACK    @G@@[[        ANU    A0,RCMXWS      . REQUESTED SK
)@@G@@LESS MAX ALLOWED FOR THIS USER@F@@[[        TLE,U  A1,1           . DOESSL
)@@G@@ REQUESTED EXCEED ALLOWED?    @E@@[[        LMJ    X11,CORGET     . GE SSM
)@@G@@URE WE HAVE ENOUGH CORE @F@@[[        J      LD0930         . IF WE CAN'SN
)@@G@@T, SAY WS IS TOO LARGE  @A@@[[. PREPARE TO SUCK UP THE TEXT --    @DE@@@SO
)@@G@@       SZ    A3          . START AT FIRST SEGMENT     @ @@@@       LXI,USP
)@@G@@ A1,1        .    @B@@@@       LA    A13,TXTADD  . START HERE     @E@[@@SQ
)@@G@@       READ  BUFF,A13 224          . READ IN NEXT 8 SECTORS @E@@[[      SR
)@@G@@  READ   BUFF,A13 224 LD0900 . GET NEXT 8 SECTORS     @ [@@@LD0100 LM,XHSS
)@@G@@2 A5,BUFF,A3 .    @D@@@@       ANA,U A5,1        . LOAD GROUP COUNT FOR ST
)@@G@@JGD   @D@@@@       LXM,U X4,BUFF+12,A3    . CONTROL WORD INDEX    @B@@@@SU
)@@G@@       LXM,U X2,BUFF+1,A3     . LOAD INDEX@ @@@@LD0110 LM    A0,0,X4    SV
)@@G@@ .    @A@@@@       SSL   A0,18       . FAKE XH1 @D@@@@       L     R1,A0SW
)@@G@@       . WORD COUNT=REPEAT COUNT    @H@@@@       LXI,U X2,0        . IF SX
)@@G@@A COMPRESSED LOAD, DONT INCREMENT LOAD INDEX    @C@@@@       TN    0,X4 SY
)@@G@@       . COMPRESSED LOAD?     @G@@@@       LXI,U X2,1        . FOR NONCOSZ
)@@G@@MPRESSED LOADS, MOVE INDEX WITH LOAD@B@@@@       LXM,H2 A1,0,X4    . LOATA
)@@G@@D TO HERE   @C@@@@       AA,U  A1,0,WSTAG  . MAKE ADDRESS ABSOLUTE@A@@@@TB
)@@G@@       BT    A1,0,*X2    . DO IT    @F@@@@       TP    0,X4        . MOVTC
)@@G@@E INDEX UP ONE FOR COMPRESSED LOAD  @ @@@@       AX,U  X2,1        .    TD
)@@G@@@D@@@@       ANX,U X4,1        . MOVE TO NEXT CONTROL WORD  @D@@@@      TE
)@@G@@ JGD   A5,LD0110   . LOOP TILL SEGMENT EXHAUSTED@B@@@@       TP,XH2 BUFFTF
)@@G@@,A3    . LAST SEGMENT?  @A@@@@       J     LD0200      . YES, QUIT@D@@@@TG
)@@G@@       TNE,U A3,(7*28)+14          . LAST SECTOR?     @D@@@@       J    TH
)@@G@@ LD0120      . YES, READ IN NEW BUFFER    @C@@@@       A,U   A3,14      TI
)@@G@@ . MOVE TO NEXT SEGMENT @ @@@@       J     LD0100      .    @ @@@@LD0120TJ
)@@G@@ AA,U  A13,8       .    @E@[@@       READ  BUFF,A13 224          . READ TK
)@@G@@IN NEXT 8 SECTORS @E@@[[        READ   BUFF,A13 224 LD0900 . GET NEXT 8 TL
)@@G@@SECTORS     @ [@@@       SZ    A3          .    @ @@@@       J     LD010TM
)@@G@@0      .    @]@[@@LD0200 .    @D@[@@       LMJ   X11,SAVED   . SAY WHEN TN
)@@G@@IT WAS CAT'ED     @C@[@@       J     SL1000      . DONE FOR NOW******** TO
)@@G@@@[@[@@/.    @ @[@@. ENTRY TO DROP A WORK SPACE  @[@[@@.     @ @[@@WSDROPTP
)@@G@@* SX   X11,LSLINK  .    @ @[@@       LMJ   X11,SETNUM  .    @ @[@@      TQ
)@@G@@ LA    A2,PUBLIC   .    @ @[@@       JNZ   A2,DR0010   .    @E@[@@      TR
)@@G@@ DL    A0,CLIBN    . GET LIBNO ASSOCIATED WITH THE WS @C@[@@       TZ   TS
)@@G@@ RCMASF      . IS THIS SUPERMAN?    @E@[@@       DL    A0,RCLIBN   . YESTT
)@@G@@, FIX IT SO HE ALWAYS PASSES  @F@[@@       DTE   A0,RCLIBN   . IF NUMBERTU
)@@G@@ IS PRIVATE, IT BETTER BE HIS @ @[@@       J     SL0960      .    @ @[@@TV
)@@G@@       J     DR0100      .    @]@[@@DR0010 .    @ @[@@       LA    A4,CKTW
)@@G@@EY     .    @B@[@@       TZ    RCMASF      . MASTER CONSOLE?@D@[@@      TX
)@@G@@ LA    A4,SPACES   . YES, MAKE SURE HE PASSES   @E@[@@       JNE   A4,SPTY
)@@G@@ACES SL0970 . NO KEYS FOR PUBLIC WS'S     @]@[@@DR0100.     @B@[@@      TZ
)@@G@@ LA,U  A0,SL0910   . SET NO FIND ADD@ @[@@       SA    A0,PFERR+1  .    UA
)@@G@@@ @[@@       LMJ   X6,SETUP    .    @ @[@@       LA    A2,PUBLIC   .    UB
)@@G@@@ @[@@       JZ    A2,DR0110   .    @ @[@@       DL    A0,DLIB     .    UC
)@@G@@@B@[@@       TZ    RCMASF      . MASTER CONSOL? @D@[@@       DL    A0,RCUD
)@@G@@LIBN   . YES, MAKE SURE HE GETS THRU@F@[@@       DTE   A0,RCLIBN   . IF UE
)@@G@@PUBLIC, HE BETTER HAVE SAVED IT     @ @[@@       J     SL0960      .    UF
)@@G@@@]@[@@DR0110.     @ @[@@       DL    A0,DKEY     .    @B@[@@       TZ   UG
)@@G@@ RCMASF      . IS THIS GOD?   @F@[@@       DL    A0,CKEY     . YES, FOR UH
)@@G@@HIM, ALL KEYS ARE CORRECT     @D@[@@       DTE   A0,CKEY     . CORRECT KUI
)@@G@@EY SPECIFIED?     @A@[@@       J     SL0940      . NO, ERROR@]@[@@DR0120UJ
)@@G@@.     @C@[@@       LOCK.             PREVENT CONFLICKTS     @^@[@@      UK
)@@G@@ L,U   A0,PFPKT.  @A@[@@       ER    PFD$        . DELETE IT@C@[@@      UL
)@@G@@ UNLOCK.           LET THINGS GO AGAIN    @A@[@@       JNZ   A2,*PFERR,AUM
)@@G@@2          .@B@[@@       LMJ   X11,SAVED   . SAY WHEN SAVED @ @[@@      UN
)@@G@@ ACON              .    @ @[@@       TZ    ALTIO       .    @ @[@@      UO
)@@G@@ J     SL1000      .    @[@@[[.     @C@@[[. FARBLE FORMAT OF OLD WORKSPAUP
)@@G@@CES, IF NECESSARY @[@@[[.     @E@@[[LD0200  LA     A0,WSVERS      . GET UQ
)@@G@@VERSION SAVED UNDER     @A@@[[        LSSL   A0,6           .     @B@@[[UR
)@@G@@        AA     A0,WSLEVL      . GET LEVEL @F@@[[        TG,U   A0,0600  US
)@@G@@      . WAS IT CREATED BEFORE LEVEL 6.0?  @C@@[[        J      LD0300   UT
)@@G@@      . NO, WE'RE DONE  @G@@[[. FOR WORKSPACES THRU 5.9, CLEAR SPARE WORUU
)@@G@@DS IN LOWER WS. NOTE THAT ADD-@G@@[[. RESSES ARE WIRED IN TO PROTECT AGAUV
)@@G@@INST EQUF CHANGES IN LATER LEVELS   @G@@[[        LA,U   A1,WSFLGD+1    UW
)@@G@@. 1ST SPARE IN 5.9 CAME AFTER FLAG WD 'D' @A@@[[        LXI,U  A1,1     UX
)@@G@@      .     @E@@[[        LR,U   R1,66-1        . AND THERE WERE 66 OF TUY
)@@G@@HEM   @B@@[[        SZ     0,*A1          . CLEAR ONE @E@@[[        JGD UZ
)@@G@@   R1,$-1         . AND LOOP OVER THE WHOLE MESS@G@@[[        LXM,U  A1,VA
)@@G@@WSFPNT+1    . ANOTHER BLOK STARTED AFTER WSFPNT WORD  @F@@[[        LR,UVB
)@@G@@   R1,16-1        . AND THERE WERE 16 AT THIS POINT   @B@@[[        SZ  VC
)@@G@@   0,*A1          . CLEAR ONE @D@@[[        JGD    R1,$-1         . AND VD
)@@G@@THEN THE REST     @G@@[[        SZ     WSGARB         . ZRFREE DONE AT )VE
)@@G@@SAVE MEANS NEVER GARBAGE@E@@[[        TG,U   A0,0510        . WAS LAST )VF
)@@G@@SAVE PRIOR TO 5.8?@C@@[[        J      LD0300         . NO, WE'RE DONE  VG
)@@G@@@F@@[[. FOR WS'S 5.7 AND OLDER, SET EXPANSION VAL, SET VERS IN PREAMB   VH
)@@G@@@E@@[[LD0210  AU,U   A0,'00'        . GET VERS, LEVEL IN FIELDATA @D@@[[VI
)@@G@@        SA     A1,DRLEVL      . POST LEVEL IN PREAMBLE@^@@[[        SSL VJ
)@@G@@   A1,6     @C@@[[        SA     A1,DRVERS      . AND VERSION     @C@@[[VK
)@@G@@        LA     A1,WSASIZ      . GET ACTUAL SIZE @F@@[[        SA     A1,VL
)@@G@@WSMSIZ      . MAKE IT THE MAX FOR EXPANSION     @F@@[[        TG,U   A0,VM
)@@G@@0310        . WAS LAST )SAVE EARLIER THAN 3.8?  @C@@[[        J      LD0VN
)@@G@@300         . NO, WE'RE DONE  @D@@[[. FOR WS'S OLDER THAN 3.8, INITIALIZVO
)@@G@@E VARIBALE FUZZING@D@@[[LD0220  LA,U   A2,FUZIND      . DEFAULT FUZZ INDVP
)@@G@@EX    @B@@[[        SETFUZ                . SET TO IT @D@@[[. ELEMENT SUVQ
)@@G@@CCESFULLY LOADED, CLEAN UP THE LOOSE ENDS @F@@[[LD0300  LA     A0,RCMXWSVR
)@@G@@      . GET MAX WS ALLOWED FOR THIS USER  @E@@[[        TLE    A0,WSMSIZVS
)@@G@@      . IS WS MAX LESS THAN USER'S  @F@@[[        SA     A0,WSMSIZ      VT
)@@G@@. YES, FORCE WS MAX TO USER'S MAX   @D@@[[        LMJ    X11,SAVED      VU
)@@G@@. SAY WHEN WS WAS SAVED @G@@[[. TRY PREAMBLE UPDATE, BUT IF NO WRITE PERVV
)@@G@@MISSION, FORGET THE ERROR     @F@@[[LD0310  LA     A1,PFPADR      . GET VW
)@@G@@PREAMBLE ADDR FROM PF$ PACKET @G@@[[        WRITE  DIRECT,A1 28   . TRY VX
)@@G@@TO UPDATE REFCNTS, LASTREF, ETC.    @E@@[[        LMJ    X11,NUFREE     VY
)@@G@@. GET RID OF ALT FILE, IF ANY @C@@[[        LX     X11,LDLINK     . GET VZ
)@@G@@RETURN ADDR @D@@[[        J      1,X11          . AND TAKE NORMAL EXIT  WA
)@@G@@@#@@[[. ERROR EXITS     @B@@[[LD0800  ERROR  YWSNOT,LD0999  . NOFIND    WB
)@@G@@@A@@[[LD0900  ERROR  YIOERR,LD0999  .     @A@@[[LD0910  ERROR  YWSLOC,LDWC
)@@G@@0999  .     @F@@[[LD0920  ERROR  YNOTWS,LD0999  . SIZE ERR MEANS NOT A WWD
)@@G@@ORKSPACE    @G@@[[LD0930  ERROR  YWSTOO,LD0999  . MCORE$ FAILURE OR .GT.WE
)@@G@@ USER'S CORE MAX  @E@@[[LD0999  LMJ    X11,NUFREE     . RELEASE ALT FILEWF
)@@G@@, IF ANY    @C@@[[        LX     X11,LDLINK     . GET RETURN ADDR @D@@[[WG
)@@G@@        J      0,X11          . AND TAKE ERROR EXIT   @#@@[[        VARBWH
)@@G@@LS .  @A@@[[LDLINK  EQUF   $,,H1          .     @A@@[[        RES    1  WI
)@@G@@            .     @ @@[[/. WORKSPACE DROP ROUTINE     @[@@[[.     @#@@[[WJ
)@@G@@        INSTRS .  @A@@[[WSDROP* SX     X11,DRLINK     .     @F@@[[      WK
)@@G@@  LA,U   A0,0           . INHIBIT REF TO ANOTHER USER'S LIB @G@@[[      WL
)@@G@@  LMJ    X11,NUMCHK     . CHECK VALIDITY, SET PRIVATE/PUBLIC FLAG @A@@[[WM
)@@G@@        J      DR0999         .     @G@@[[        LMJ    X11,DRCHEK     WN
)@@G@@. FIND WS, CHECK WHETHER DROP ALLOWED     @B@@[[        J      DR0999   WO
)@@G@@      . ERROR     @B@@[[        J      DR0910         . NOFIND    @E@@[[WP
)@@G@@. UPDATE WORKSPACE ACCOUNTING DATA (RETURNED BY DRCHEK)     @G@@[[DR0010WQ
)@@G@@  AA     A0,ACTRKS      . TRK-SECS THIS WS PLUS PRESENT ACCUMULAT @F@@[[WR
)@@G@@        SA     A0,ACTRKS      . POST NEW ACCUMULATED TRAK-SECS    @F@@[[WS
)@@G@@        ANA    A1,ACCURU      . SIZE OF THIS WS LESS CURRENT USAGE@E@@[[WT
)@@G@@        TN     A1             . WOULD NEW USAGE BE NEGATIVE?@G@@[[      WU
)@@G@@  LNA,U  A1,0           . YES, FUDGE FOR UNACCOUNTED PUBLIC WS    @G@@[[WV
)@@G@@        SNA    A1,ACCURU      . AND POST UPDATED CURRENT SECTOR USAGE   WW
)@@G@@@[@@[[.     @^@@[[. NOW GET RID OF THE WS @A@@[[DR0050  LA,U   A1,1791  WX
)@@G@@      .     @D@@[[        LOCK   BUFF,A1 28 DR0900   . LOCK THE FILE    WY
)@@G@@@C@@[[        LA,U   A0,PFPKT       . GET PACKET ADDR @B@@[[        ER  WZ
)@@G@@   PFD$           . DELETE    @E@@[[        LA,U   A1,1791        . GET XA
)@@G@@LOCKSETCOR DRUM ADDR    @A@@[[        UNLOCK BUFF,A1 28 DR0900   .@F@@[[XB
)@@G@@        JNZ    A2,DR0900      . IF PFD$ ABNORMAL, SIGNAL I/O ERR  @C@@[[XC
)@@G@@        LMJ    X11,SAVED      . SAY WHEN SAVED  @C@@[[        TZ     ALTXD
)@@G@@IO          . OWN-FILE USER?  @D@@[[        J      DR0100         . YES,XE
)@@G@@ GET RIGHT OUT    @B@[@@       TLD A0,CWSNM      . GET WS NAME    @A@[@@XF
)@@G@@       TTNE  A0,CONT     . CONTINUE @B@[@@       J     SL1000      . YESXG
)@@G@@, NO EFFECT @C@[@@       L,XU  A3,-1       . DECRMENT WS COUNT    @ @[@@XH
)@@G@@       LMJ   X3,NEWQTA   .    @ @[@@       ACOFF             .    @A@[@@XI
)@@G@@       J     SL1000      . DONE     @[@[@@/.    @[@[@@.     @E@[@@. ENTRXJ
)@@G@@Y TO LIST ALL SAVED WORKSPACES UNDER A GIVEN LIB #    @[@[@@.     @ @[@@XK
)@@G@@       INSTRS            .    @ @[@@WSLIB* SX    X11,LSLINK  .    @D@[@@XL
)@@G@@       LMJ   X11,SETNUM  . SET PUBLIC/PRIVATE FLAG    @ @[@@       L    XM
)@@G@@ A2,PUBLIC   .    @ @[@@       JNZ   A2,LB0010   .    @D@[@@       TZ   XN
)@@G@@ RCMASF      . IS THIS A MASTER CONSOLE?  @D@[@@       J     LB0010     XO
)@@G@@ . YES, HE IS ALLOWED TO SNOOP@ @[@@       DL    A0,CLIBN    .    @E@[@@XP
)@@G@@       DTE   A0,RCLIBN   . IF PRIVATE NUM, IT BETTER BE HIS @D@[@@      XQ
)@@G@@ J     SL0960      . IMPROPER LIB REFERENCE     @]@[@@LB0010.     @ @[@@XR
)@@G@@       L,U   A0,LB0100   .    @E@[@@       S     A0,PFERR+1  . IGNORE SEXS
)@@G@@ARCH FOR GARBAGE ELEMENT@ @[@@       LMJ   X6,SETUP    .    @]@[@@LB0100XT
)@@G@@.     @ @[@@       SZ    A13         .    @B@[@@       READ  BUFF,A13   XU
)@@G@@ . GET SECTOR 0   @ @[@@       L     A0,BUFF     .    @B@[@@       TE   XV
)@@G@@ A0,('**PF**')         . HMMM @ @[@@       J     SL0900      .    @D@[@@XW
)@@G@@       L,H2  A13,BUFF+3  . GET START OF ELEMENT TABLE @A@[@@       READ XX
)@@G@@ BUFF,A13  140         .@D@[@@       L,H2  A0,BUFF+139           . GET IXY
)@@G@@TEM COUNT   @ @[@@       S     A0,COUNT    .    @C@[@@       A,U   A13,5XZ
)@@G@@       . MOVE TO FIRST THINGY @]@[@@LB0200.     @E@[@@       L,U   A12,2YA
)@@G@@7      . JGD COUNT FOR 28 ITEMS/BUFFER    @D@[@@       READ  BUFF,A13 28YB
)@@G@@0          . GET NEXT TEN     @A@[@@       L     A2,(10,BUFF)          .YC
)@@G@@@ @[@@LB0300 L     A0,COUNT    .    @A@[@@       JZ    A0,LB0500   . ALLYD
)@@G@@ GONE?@ @[@@       AN,U  A0,1        .    @ @[@@       S     A0,COUNT   YE
)@@G@@ .    @B@[@@       L,S1  A0,3,A2     . GET DELETE FLAG@C@[@@       JNZ  YF
)@@G@@ A0,LB0400   . ITS NOT REALLY THERE @C@[@@       L,S3  A0,3,A2     . GETYG
)@@G@@ ELEMENT TYPE     @B@[@@       TE,U  A0,5        . SHOULD BE REL  @ @[@@YH
)@@G@@       J     LB0400      .    @C@[@@       DL    A0,4,A2     . GET VERSIYI
)@@G@@ON NAME     @E@[@@       DTE   A0,PFLIB    . IS IT ONE OF THE RIGHT ONESYJ
)@@G@@?     @A@[@@       J     LB0400      . NOPE     @B@[@@       DS    A12,SYK
)@@G@@A12    . SAVE EVERYTHING@ @[@@       S     A2,SA2      .    @C@[@@      YL
)@@G@@ DL    A0,,A2      . GET ELEMENT NAME     @ @[@@       DS    A0,NAME    YM
)@@G@@ .    @E@[@@       INCNV,U NAME,NAME1,12 SL0900 . CONVERT TO INTERNAL   YN
)@@G@@@B@[@@       PRINT 12,NAME1    . PRINT IT OUT   @C@[@@       DL    A12,SYO
)@@G@@A12    . RESTORE POINTERS     @ @[@@       L     A2,SA2      .    @C@[@@YP
)@@G@@LB0400 NOP   0,0,*A2     . MOVE TO NEXT ITEM    @E@[@@       JGD   A12,LYQ
)@@G@@B0300  . FINISH ALL ITEMS IN THE BUFFER   @E@[@@       A,U   A13,10     YR
)@@G@@ . MOVE UP TO DO NEXT TEN SECTORS   @ @[@@       J     LB0200      .    YS
)@@G@@@]@[@@LB0500.     @A@[@@       J     SL1000      . DONE     @G@@[[      YT
)@@G@@  LMJ    X11,UPDATE     . UPDATE ACCOUNT ELEMENT WITH DRUM USAGE  @C@@[[YU
)@@G@@        J      DR0999         . OOPS, ERROR     @C@@[[DR0100  LX     X11YV
)@@G@@,DRLINK     . NLRMAL EXIT     @A@@[[        J      1,X11          .     YW
)@@G@@@A@@[[DR0900  ERROR  YIOERR,DR0999  .     @C@@[[DR0910  ERROR  YWSNOT,DRYX
)@@G@@0999  . WS NOT FOUND    @B@@[[DR0999  LX     X11,DRLINK     . ERROR EXITYY
)@@G@@@A@@[[        J      0,X11          .     @#@@[[        VARBLS .  @A@@[[YZ
)@@G@@DRLINK  EQUF   $,,H1          .     @A@@[[        RES    1              ZA
)@@G@@.     @E@@[[/. ENTRY TO LIST ALL SAVED WS'S UNDER A GIVEN LIB NUMBER    ZB
)@@G@@@[@@[[.     @#@@[[       INSTRS  .  @ @@[[WSLIB* SX    X11,WLLINK  .    ZC
)@@G@@@F@@[[        LA,U   A0,0           . INHIBIT REF TO ANOTHER USER'S LIB ZD
)@@G@@@G@@[[        LMJ    X11,NUMCHK     . CHECK VALIDITY, SET PRIVATE/PUBLICZE
)@@G@@ FLAG @A@@[[        J      LB0999         .     @D@@[[       LA,U  A2,BUZF
)@@G@@FF     . I/O BUFFER FOR PF ROUTINES @D@@[[       LMJ   X11,PFSET   . INIZG
)@@G@@TIALIZE TO SEARCH TOC   @A@@[[        J      LB0999         .     @G@@[[ZH
)@@G@@        SZ     PFLSTI         . CLEAR SEQUENCE NO OF LAST ENTRY READ    ZI
)@@G@@@^@@[[. GET NEXT ENTRY IN TOC @D@@[[WL0100 DL    A3,PFLIB    . GET LIBNOZJ
)@@G@@ WE'RE LOOKING FOR@D@@[[       LA,U  A2,BUFF     . I/O BUFFER FOR PF ROUZK
)@@G@@TINES @F@@[[       LMJ   X11,PFNEXT  . GET NEXT TOC ENTRY WITH THAT LIBNZL
)@@G@@O     @A@@[[        J      LB0999         .     @D@@[[       JZ    A0,LBZM
)@@G@@0200   . QUIT IF NO MORE ELEMENTS   @E@@[[       DL    A0,0,A0     . GETZN
)@@G@@ ELEMENT NAME FROM PACKET     @F@@[[       DS    A0,NAME     . TEMP SAVEZO
)@@G@@ WHERE CONVERTER CAN FIND     @G@@[[        INCNV,U NAME,NAME1,12 LB0900ZP
)@@G@@    . CONVERT FIELDAT A TO INTERNAL @D@@[[       PRINT 12,NAME1    . DISZQ
)@@G@@PLAY NAME OF THIS WS    @D@@[[       J     WL0100      . LOOP TO NEXT ENZR
)@@G@@TRY IN TOC  @[@@[[. EXIT@ @@[[LB0200 LX    X11,WLLINK  .    @ @@[[      ZS
)@@G@@ J     1,X11       .    @[@@[[.     @A@@[[LB0900  ERROR  YIOERR,LB0999  ZT
)@@G@@.     @A@@[[LB0910  ERROR  YIMPRO,LB0999  .     @A@@[[LB0999  LX     X11ZU
)@@G@@,WLLINK     .     @A@@[[        J      0,X11          .     @[_@@@.     ZV
)@@G@@@[@@@@.     @ @@@@       VARBLS            .    @ @[@@COUNT  +     0    ZW
)@@G@@       .    @ @[@@SA2    +     0           .    @ @[@@SA12   +     0D   ZX
)@@G@@       .    @ #@@@NAME   +     0D          .    @ @@@@NAME1  RES   4    ZY
)@@G@@       .    @C@[@@QUOVER EQUF  $,,H1       . QUOTA EXCEEDED FLAG  @D@@[[ZZ
)@@G@@WLLINK EQUF  $,,H2       . X11 SAVE FOR WSLIB ROUTINE @#[@@@       RES  AA
)@@G@@ 1 .  @[@[@@/.    @[@[@@.     @A@[@@. SEE IF ELEMENT PREVIOUSLY EXISTED AB
)@@G@@@[@[@@.     @ @[@@       INSTRS            .    @ @[@@SETUP  DL    A0,SFAC
)@@G@@DNAM   .    @E@[@@       DS    A0,PFELT    . WORKSPACE NAME > ELEMENT NAAD
)@@G@@ME    @D@[@@       DFU   A0,CLIBN    . CONVERT TO FULL INTEGER    @ @[@@AE
)@@G@@       LNA   A0,A0       .    @ @[@@       LDSC  A1,11       .    @ @[@@AF
)@@G@@       DSA   A1,02043,A0 .    @H@[@@       LMJ   X11,CONBD   . COVERT INAG
)@@G@@TEGER LIB # TO FIELD DATA FOR VERSION NAME@ @[@@       DS    A3,PFLIB   AH
)@@G@@ .    @C@[@@       WAIT              . WAIT FOR GREEN LIGHT @ @[@@      AI
)@@G@@ LA,U  A0,PFPKT    .    @F@[@@       ER    PFS$        . SEE IF IT WAS AAJ
)@@G@@LREADY SAVED PREVIOUSLY @ @[@@       JNZ   A2,*PFERR,A2     @ @[@@      AK
)@@G@@ RDICT             .    @A@[@@       J     0,X6        . RETURN   @[@[@@AL
)@@G@@/.    @^@[@@.      CHECK I/O STATUS @[@[@@.     @#@[@@       INSTRS.    AM
)@@G@@@]@[@@IOERRX.     @B@[@@       S       A0,SAVEA0 . SAVE RETURN    @B@[@@AN
)@@G@@       L,S1    A0,IOPKT+3. GET STATUS     @A@[@@       TNE,U   A0,5     AO
)@@G@@ . I/O 5'S, @C@[@@       TNZ,H2  IOPKT+3   . WITH NO TRANSFER     @A@[@@AP
)@@G@@       J       SL0900    . ARE FATAL@ @[@@       L       A0,SAVEA0 .    AQ
)@@G@@@ @[@@       J       0,A0      .    @#@[@@       VARBLS.    @#@[@@SAVEA0AR
)@@G@@ RES     1. @[@[@@/.    @D@[@@.      SETUP @USE NAME AND ASSIGN THE LOADAS
)@@G@@/SAVE FILE  @D@@[[/. MISCELLANEOUS INITIALIZATION AND CHECKING ROUTINES AT
)@@G@@@[@@[[.     @^@@[[. PREPARE TO DROP A WS--@A@@[[. EXITS-       0,X11    AU
)@@G@@      ERROR @A@@[[.              1,X11          NOFIND@F@@[[.           AV
)@@G@@   2,X11          . OK-- ACCOUNTING DATA IN A0,A1     @#@@[[        INSTAW
)@@G@@RS .  @A@@[[DRCHEK  SX     X11,DCLINK     .     @G@@[[. NOTE: NUMCHK HASAX
)@@G@@ ALREADY CHECKED FOR REF TO ANOTHER USER'S LIBRARY    @ @@[[. LOOK IN FIAY
)@@G@@LE FOR THIS WS    @F@@[[DC0020  LMJ    X11,ELINIT     . FIND ELEMENT, REAZ
)@@G@@AD ITS PREAMBLE   @D@@[[        J      DC0999         . ERROR (USUALLY IBA
)@@G@@/O)   @B@@[[        J      DC0800         . NOFIND    @F@@[[. DON'T LET BB
)@@G@@ANYONE DROP A PUBLIC WS HE DIDN'T ORIGINALLY SAVE     @F@@[[DC0030  DL  BC
)@@G@@   A0,DLIB        . GET LIBNO OF SAVER FROM PREAMBLE  @C@@[[        TNZ BD
)@@G@@   RCMASF         . MASTER CONSOLE? @C@@[[        TNZ    PUBLIC         BE
)@@G@@. NO PRIVATE?     @F@@[[        DL     A0,RCLIBN      . MC OR PRIVATE, PBF
)@@G@@RETEND HE DID IT  @F@@[[        DTE    A0,RCLIBN      . WAS THIS WS SAVEBG
)@@G@@D BY THIS USER?   @D@@[[        J      DC0900         . NO, IMPROPER LIBBH
)@@G@@E REF @ @@[[. GET MASS STORAGE USAGE DATA @A@@[[DC0040  LMJ    X11,MSUSABI
)@@G@@G     .     @A@@[[        ER     ERR$           .     @#@@[[. NORMAL EXIBJ
)@@G@@T     @A@@[[DC0050  LX     X11,DCLINK     .     @A@@[[        J      2,XBK
)@@G@@11          .     @#@@[[. NOFIND EXIT     @A@@[[DC0800  LX     X11,DCLINBL
)@@G@@K     .     @A@@[[        J      1,X11          .     @^@@[[. IMPROPER RBM
)@@G@@EF EXIT     @A@@[[DC0900  ERROR  YIMPRO,DC0999  .     @A@@[[DC0999  LX  BN
)@@G@@   X11,DCLINK     .     @A@@[[        J      0,X11          .     @#@@[[BO
)@@G@@        VARBLS .  @A@@[[DCLINK  EQUF   $,,H1          .     @A@@[[      BP
)@@G@@  RES    1              .     @G@@[[/. INITIALIZE TO EXAMINE A WS-- FINDBQ
)@@G@@ IT IN THE TOC AND READ PREAMBLE    @[@@[[.     @#@@[[        INSTRS .  BR
)@@G@@@A@@[[ELINIT  SX     X11,ELLINK     .     @G@@[[        OUTCNB,U 12 CWSNBS
)@@G@@M,PFELT . EDIT WSNAME FROM CMND TO FD IN PKT    @F@@[[        SZ     PFEBT
)@@G@@LT+2        . CLEAR OUTCNV OVERRUN INTO PACKET  @G@@[[. NOTE THAT NUMCHKBU
)@@G@@ HAS ALREADY STASHED FIELDATA LIBNO IN VERSION OF PKT @D@@[[        LA,UBV
)@@G@@   A0,PFPKT       . THEN GET PACKET ADDR  @E@@[[        ER     PFS$     BW
)@@G@@      . AND SEARCH FOR THIS ELEMENT @F@@[[        JNZ    A2,EL0100      BX
)@@G@@. IF PF$ NOT NORMAL, GO SEE WHY NOT @G@@[[        LA     A3,PFPADR      BY
)@@G@@. ELSE GET PREAMBLE ADDR FROM PF$ PACKET  @D@@[[        READ   DIRECT,A3BZ
)@@G@@ 28 EL0900 . SUCK UP PREAMBLE @D@@[[. CONVERT WS PREAMBLE TO NEW FORMAT,CA
)@@G@@ IF NECESSARY     @F@@[[EL0010  TZ,S1  DRFAKE         . HAS PREAMB ALREACB
)@@G@@DY BEEN CONVERTED?@D@@[[        LMJ    X11,PRECNV     . NO, BETTER DO ITCC
)@@G@@ NOW  @C@@[[. UPDATE LAST REF TDATE AND REFERENCE COUNTS    @C@@[[EL0020CD
)@@G@@  ER     TDATE$         . GET PRESENT TIME@F@@[[        SA     A0,DLAST CE
)@@G@@      . SAVE AS TIME OF LAST REFERENCE    @F@@[[        LA,U   A0,1     CF
)@@G@@      . GET A VALUE TO INCREMENT WITH     @E@@[[        AU     A0,DRFTOTCG
)@@G@@      . UPDATE TOTAL REFERENCES     @A@@[[        SA     A1,DRFTOT      CH
)@@G@@.     @C@@[[        AU     A0,DRFRES      . REFS SINCE RESET@A@@[[      CI
)@@G@@  SA     A1,DRFRES      .     @D@@[[        AU     A0,DRFSAV      . REFSCJ
)@@G@@ SINCE LAST )SAVE @A@@[[        SA     A1,DRFSAV      .     @A@@[[      CK
)@@G@@  LX     X11,ELLINK     .     @C@@[[        J      2,X11          . TAKECL
)@@G@@ NORMAL EXIT@ @@[[. CHECK NON-ZERO PF$ STATUS   @E@@[[EL0100  JNE,U  A2,CM
)@@G@@1 EL0900    . IF NOT NOFIND, THEN ERROR   @D@@[[        LX     X11,ELLINCN
)@@G@@K     . ELSE GET RETURN ADDR  @D@@[[        J      1,X11          . YES,CO
)@@G@@ TAKE NOFIND EXIT @C@@[[                              . ELSE FALL THRU  CP
)@@G@@@]@@[[. ERROR EXIT@E@@[[EL0900  ERROR  YIOERR         . SIGNAL ALL ELSE CQ
)@@G@@AS I/O ERROR@C@@[[EL0999  LX     X11,ELLINK     . GET RETURN ADDR @C@@[[CR
)@@G@@        J      0,X11          . TAKE ERROR EXIT @#@@[[        VARBLS .  CS
)@@G@@@A@@[[ELLINK  EQUF   $,,H1          .     @A@@[[        RES    1        CT
)@@G@@      .     @E@@[[/. SET UP FLAGS AND PACKETS DEPENDING UPON LIBNO TO USCU
)@@G@@E     @E@@[[. ENTER WITH A0=1 TO PERMIT REFS TO OTHER USER'S LIBRARIES  CV
)@@G@@@[@@[[.     @#@@[[        INSTRS .  @B@@[[. THIS ENTRY FOR COMMANDS DIRECW
)@@G@@CTED AT TPF$@C@@[[NUMCHT  SX     X11,NCTFLG     . RAISE TPF$ FLAG @D@@[[CX
)@@G@@        J      NC0005         . AND GO EXAMINE LIBNO  @A@@[[. THIS ENTRYCY
)@@G@@ FOR NORMAL COMMANDS    @C@@[[NUMCHK  SZ     NCTFLG         . CLEAR TPF$CZ
)@@G@@ FLAG @[@@[[.     @E@@[[NC0005  SX     X11,NCLINK     . REMENBER WHERE WDA
)@@G@@E CAME FROM @E@@[[        SA     A0,NCALTA      . SAVE ALT USER LIB ALLODB
)@@G@@W FLAG@E@@[[        SZ     NCALTU         . CLEAR ALT LIB IN USE FLAG   DC
)@@G@@@D@@[[        DFU    A0,CLIBN       . UNPACK TARGET LIBNO   @D@@[[      DD
)@@G@@  LMJ    X11,CONLIB     . CONVERT TO FIELDATA   @C@@[[        DS     A3,DE
)@@G@@PFLIB       . AND SAVE IT     @F@@[[        DL     A0,CLIBN       . GET DF
)@@G@@LIBNO SPECIFIED ON COMMAND    @E@@[[        DJZ    A0,NC0900      . ZERODG
)@@G@@ IS AN ILLEGAL LIBNO    @D@@[[        JN     A0,NC0900      . AS ARE NEGDH
)@@G@@ATIVE VALUES@ @@[[. SET PRIVATE/PUBLIC FLAG     @D@@[[NC0010  LA,U   A2,DI
)@@G@@0           . ASSUME NON-PUBLIC     @E@@[[        DTLE   A0,(+1000.0D)  DJ
)@@G@@. IS THIS A PUBLIC LIBNUM?    @D@@[[        LA,U   A2,1           . YES,DK
)@@G@@ TURN ON FLAG     @E@@[[        SA     A2,PUBLIC      . STASH PUBLIC/PRIDL
)@@G@@VATE FLAG   @E@@[[        TZ     NCTFLG         . IS COMMAND DIRECTED TODM
)@@G@@ TPF$?@E@@[[        J      NC0120         . YES, GO DO SPECIAL SETUP    DN
)@@G@@@G@@[[        JNZ    A2,NC0040      . IF PUBLIC, GO SET UP FOR COMMON FIDO
)@@G@@LE    @B@@[[. NON-PUBLIC, CHECK FOR USER'S OWN LIBRARY@G@@[[NC0020  DTE DP
)@@G@@   A0,RCLIBN      . DID COMMAND SPECIFY USER'S OWN LIB?     @E@@[[      DQ
)@@G@@  J      NC0030         . NO, GO DO SPECIAL CHECKING  @F@@[[        TNZ DR
)@@G@@   ALTIO          . YES, IS AN ALTERNATE FILE IN USE? @F@@[[        J   DS
)@@G@@   NC0040         . NO, GO SET UP FOR COMMON FILE     @F@@[[        DL  DT
)@@G@@   A0,('APL$USERFILE') . YES, GET ALT FILE @USE NAME  @C@@[[        J   DU
)@@G@@   NC0050         . AND GO STASH IT @C@@[[. REFERENCE TO SOMEONE ELSE'S DV
)@@G@@PIRVATE LIBRARY-- @E@@[[NC0030  LA     A2,RCMASF      . GET MASTER CONSODW
)@@G@@LE FLAG     @G@@[[        TNZ    NCALTA         . DOES THIS COMMAND PERMDX
)@@G@@IT ALT LIB REF?   @F@@[[        JZ     A2,NC0900      . NO, IF NOT INSTADY
)@@G@@LLATION MGR, DIE  @G@@[[        TNZ,U  ONEFIL         . HAS SITE IMPLEMEDZ
)@@G@@NTED A SINGLE FILE?     @G@@[[        J      NC0100         . NO, GO ASSEA
)@@G@@IGN TARGET USER'S UNIQUE FILE @B@@[[. SET UP @USE FOR COMMON LIBRARY FILEB
)@@G@@E--   @D@@[[NC0040  DL     A0,('APL$FILE    ') . GET ITS @USE NAME@D@@[[EC
)@@G@@. FILE ALREADY ASSIGNED, SET UP USE NAME IN PACKETS   @D@@[[NC0050  DS  ED
)@@G@@   A0,IOPKT       . USE NAME TO I/O PACKET@C@@[[        DS     A0,PFPKT EE
)@@G@@      . TO PF$ PACKET   @D@@[[        DS     A0,FACPKT      . AND TO FACEF
)@@G@@IL$ PACKET  @C@@[[        J      NC0200         . TAKE NORMAL EXIT@[@@[[EG
)@@G@@.     @E@@[[. ASSIGN FILE CONTAINING ANOTHER USER'S WORKSPACE LIBRARY   EH
)@@G@@@[@@[[.     @F@@[[NC0100  DFU    A0,CLIBN       . UNPACK LIBNO SPECIFIEDEI
)@@G@@ ON COMMAND @D@@[[        LMJ    X11,CONLIB     . CONVERT IT TO FIELDATAEJ
)@@G@@@E@@[[        DS     A3,NCQUAL      . PUT QUALIFIER INTO PACKET   @D@@[[EK
)@@G@@        LA,U   A0,NCQUAL      . SET POINTER TO PACKET @F@@[[        LA,UEL
)@@G@@   A1,0           . SET FLAG TO INHIBIT FILE CREATION @D@@[[        DL  EM
)@@G@@   A2,NCUNAM      . GET THE @USE NAME     @E@@[[        LMJ    X11,ASGUSEN
)@@G@@E     . AND TRY TO ASSIGN THE FILE  @E@@[[        J      NC0190         EO
)@@G@@. IF NOGOT, GO SEE WHY NOT    @D@@[[        LA,U   A0,1           . ELSEEP
)@@G@@ GET A NICE NUMBER@F@@[[        SA     A0,NCALTU      . AND RAISE THE ALEQ
)@@G@@T LIB IN USE FLAG @E@@[[        SA     A1,NCFOPT      . STASH OPTIONS FOER
)@@G@@R @FREE     @F@@[[        LA,S2  A0,FACPKT+6    . GET STATUS FROM FACIL$ES
)@@G@@ PACKET     @E@@[[        AND,U  A0,024         . ISOLATE READ INHIBIT BET
)@@G@@ITS   @G@@[[        JNZ    A1,NC0910      . IF READ INHIBITED, GO SAY WSEU
)@@G@@ LOCKED     @D@@[[        J      NC0200         . ELSE TAKE NORMAL EXIT EV
)@@G@@@C@@[[. SPECIAL SETUP FOR COMMANDS DIRECTED AT TPF$   @C@@[[NC0120  DL  EW
)@@G@@   A0,('TPF$        ') . GET NAME   @C@@[[        DS     A0,IOPKT       EX
)@@G@@. TO I/O PACKET   @C@@[[        DS     A0,PFPKT       . TO PF$ PACKET   EY
)@@G@@@D@@[[        DS     A0,FACPKT      . AND TO FACIL$ PACKET  @F@@[[      EZ
)@@G@@  SA     A0,NCALTU      . MAKE ALT LIB IN USE FLAG NON-ZERO @D@@[[      FA
)@@G@@  LA,U   A1,1791        . GET LOCKSECTOR ADDR   @G@@[[        WRITE  BUFFB
)@@G@@F,A1 28     . INITIALIZE LOCKSECT, IGNORING ERRORS    @D@@[[        J   FC
)@@G@@   NC0200         . THEN TAKE NORMAL EXIT @B@@[[. DIAGNOSE FAILURE TO GEFD
)@@G@@T ALT USER FILE   @D@@[[NC0190  SA     A1,NCALTU      . POST ASSIGNMANT FE
)@@G@@SATTUS@G@@[[        JNZ    A1,NC0920      . IF ANY BUT ASSIGN FAIL, SAY FF
)@@G@@I/O ERROR   @G@@[[        TOP    A0,(+1*/21)    . DID ASSIGN FAIL FOR NOFG
)@@G@@NEXISTENT FILE?   @D@@[[        J      NC0910         . NO, GO SAY WS LOFH
)@@G@@CKED  @E@@[[        J      NC0930         . YES, GO SAY WS NOT FOUND    FI
)@@G@@@#@@[[. NORMAL EXIT     @A@@[[NC0200  LX     X11,NCLINK     .     @A@@[[FJ
)@@G@@        J      1,X11          .     @[@@[[.     @A@@[[NC0900  ERROR  YIMFK
)@@G@@PRO,NC0999  .     @A@@[[NC0910  ERROR  YWSLOC,NC0999  .     @A@@[[NC0920FL
)@@G@@  ERROR  YIOERR,NC0999  .     @A@@[[NC0930  ERROR  YWSNOT,NC0999  .     FM
)@@G@@@[@@[[.     @C@@[[NC0999  LX     X11,NCLINK     . SET RETURN ADDR @F@@[[FN
)@@G@@                              . FALL THRU TO ALT FILE FREE SUBRTNE@[@@[[FO
)@@G@@.     @F@@[[. SUBROUTINE TO RELEASE ALT FILE ASSIGNED BY ABOVE AND CLEARFP
)@@G@@ FLAGS@[@@[[.     @F@@[[NUFREE  LA     A0,NCALTU      . GET ALT FILE FLAFQ
)@@G@@G AS IT IS NOW    @C@@[[        SZ     NCALTU         . THEN CLEAR IT   FR
)@@G@@@G@@[[        TZ     A0             . WAS AN ALT FILE USED FOR THIS CMNDFS
)@@G@@?     @D@@[[        TZ     NCTFLG         . YES, WAS IT TPF$?     @G@@[[FT
)@@G@@        J      0,X11          . IF NONE, OR TPF$, DOM'T FREE ANYTHING   FU
)@@G@@@E@@[[        LA,U   A0,NCFREE      . ELSE GET IMAGE FOR ALT FILE @B@@[[FV
)@@G@@        ER     CSF$           . @FREE IT  @B@@[[        J      0,X11    FW
)@@G@@      . AND RETURN@#@@[[        VARBLS .  @A@@[[NCLINK  EQUF   $,,H1    FX
)@@G@@      .     @E@@[[NCALTA  EQUF   $,,S4          . ALT LIB REF ALLOWED FLFY
)@@G@@AG    @E@@[[NCALTU  EQUF   $,,S5          . ALT LIB REF IN USE FLAG     FZ
)@@G@@@A@@[[        RES    1              .     @G@@[[NCTFLG  EQUF   $,,H1    GA
)@@G@@      . FLAG UP IF CMND IS DIRECTED TO TPF$     @A@@[[        RES    1  GB
)@@G@@            .     @F@@[[NCQUAL  RES    2              . PACKET FOR ALT FGC
)@@G@@ILE : QUALIFIER   @D@@[[        'APLUSERFILE$'        . FILENAME ALWAYS GD
)@@G@@THIS  @F@@[[        '            '        . READ/WRITE KEYS BOTH ALWAYS GE
)@@G@@BLANK @A@@[[NCFREE  '@ FREE'              .     @F@@[[NCFOPT  'XXXXXX'  GF
)@@G@@            . OPTIONS FOR @FREE ARE STASHED HERE@C@@[[NCUNAM  'APL$ALTUSGG
)@@G@@ER$'        . ITS USE NAME    @A@@[[        '. .   '              .     GH
)@@G@@@C@@[[/. SIGNON TIME CODE TO ASSIGN LOAD/SAVE FILE(S) @F@@[[. ENTER WITHGI
)@@G@@   A0=POINTER TO INFOR OF SPEC2 (FILENAME) OR ZERO,   @D@@[[.           GJ
)@@G@@   A1=POINTER TO KEY (WHICH MAY BE BLANKS)@[<@@@.     @G@[@@LSINIT INFO GK
)@@G@@ 2 26        . COMMONIZE THIS STUFF SO WE CAN POSITION IT   @H@[@@$(26).GL
)@@G@@ THIS CODE IS USED ONCE DURING SIGN-ON, THEN BECOMES PART OF ACTIVE WS  GM
)@@G@@@ @@[[        INITAL . SET LOCN CTR @[]@@@.     @]@[@@LSASG*.     @ @[@@GN
)@@G@@       S     X11,LSLINK  .    @B@[@@       DL    A0,LSQUAL   . GET QUALIGO
)@@G@@FIER  @E@[@@       LA    A2,('      ')   . SET UP TO CONSTRUCT Q*FILE   GP
)@@G@@@E@[@@       TNE   A0,A2       . IS 1ST WORD OF QUALIFIER BLANK?  @F@[@@GQ
)@@G@@       TE    A1,A2       . YES, IF 2ND IS BLANK TOO, DON'T USE A *@F@[@@GR
)@@G@@       LA    A2,('*     ')   . QUALIFIER NON-BLANK, USE QUAL*FILE @ @[@@GS
)@@G@@       SA    A2,STAR     .    @D@[@@       LMJ   X11,JUSTFY  . RIGHT JUSGT
)@@G@@TIFY THE QUALIFIER@C@[@@       DS    A0,UQUAL    . AND PUT IN USE NAME  GU
)@@G@@@D@[@@       DL    A0,LSFILE   . AND DO SAME WITH FILE NAME @ @[@@      GV
)@@G@@ LMJ   X11,JUSTFY  .    @ @[@@       DS    A0,UFILE    .    @E@[@@      GW
)@@G@@ L     A0,('      ') . KEYS ARE JUST ONE WORD LONG    @A@[@@       L    GX
)@@G@@ A1,LSRKEY   . READ KEY @ @[@@       LMJ   X11,JUSTFY  .    @ @[@@      GY
)@@G@@ S     A1,URKEY    .    @ @[@@       L     A1,LSWKEY   .    @ @[@@      GZ
)@@G@@ LMJ   X11,JUSTFY  .    @ @[@@       S     A1,UWKEY    .    @D@[@@      HA
)@@G@@ L,U   A0,USEN     . NOW DO THE USE -> APL$FILE @ @[@@       ER    CSF$ HB
)@@G@@       .    @C@[@@       L,U   A0,ASG      . NOW ASSIGN APL$FILE  @ @[@@HC
)@@G@@       ER    CSF$        .    @D@[@@       JN    A0,LS0200   . IF NO GOOHD
)@@G@@D, CHECK CLOSER   @]@[@@LS0100.     @G@[@@       L,U   A0,FACPKT   . LETHE
)@@G@@S CHECK THE DEVICE TYPE & IF TEMPORARY    @ @[@@       ER    FACIL$     HF
)@@G@@ .    @B@[@@       L     A0,FACPKT+7 . GET ASG OPTIONS@ @[@@       L,U  HG
)@@G@@ R1,1        .    @C@[@@       TEP,U A0,1*/('Z'-'T') . T OPTION ON?     HH
)@@G@@@E@[@@       SZ    R1          . YES, 0 SAYS FILE IS TEMPARARY    @D@[@@HI
)@@G@@       S     R1,TMPASG   . SO WE KNOW NOT TO FREE IT  @B@[@@       L,S1 HJ
)@@G@@ A0,FACPKT+6 . GET DEVICE CODE@ @[@@       TG,U  A0,030      .    @ @[@@HK
)@@G@@       TG,U  A0,037+1    .    @D@[@@       J     LS0400      . NOT FASTRHL
)@@G@@AND FORMAT, SORRY @ @[@@       LA,U  A13,0       .    @C@[@@       READ HM
)@@G@@ BUFF,A13    . READ SECTOR ZERO     @ @[@@       LA    A0,BUFF     .    HN
)@@G@@@D@[@@       TE    A0,('**PF**')    . IS IT A PROGRAM FILE? @B@[@@      HO
)@@G@@ J     LS0990      . IF NOT, GIVE UP@ @[@@       L     X11,LSLINK  .    HP
)@@G@@@B@[@@       J     1,X11       . NORMAL EXIT    @[@[@@.     @C@[@@.     HQ
)@@G@@ BAD STATUS ON ATTEMPTING TO ASSIGN FILE  @[@[@@.     @]@[@@LS0200.     HR
)@@G@@@C@[@@       TZ    ALTIO       . IF IT WAS HIS FILE,  @C@[@@       J    HS
)@@G@@ LS0300      . TELL HIM THE BAD NEWS@C@[@@       L,U   A0,CAT      . IF HT
)@@G@@IT WAS OUR FILE   @C@[@@       ER    CSF$        . TRY TO CREATE IT     HU
)@@G@@@B@[@@       TP    A0          . AND IF NO GO   @E@[@@       J     LS041HV
)@@G@@0      . IF NOGO, GIVE ERR MSG AND QUIT   @B@[@@       L,U   A0,ASG     HW
)@@G@@ . NOW TRY AGAIN  @ @[@@       ER    CSF$        .    @ @[@@       TP   HX
)@@G@@ A0          .    @D@[@@       J     LS0410      . WE'RE IN TROUBLE, FOLHY
)@@G@@KS    @ @[@@       L,U   A13,1791    .    @D@[@@       WRITE BUFF,A13   HZ
)@@G@@ . INITIALIZE LOCK SECTOR     @B@[@@       LA,U  A0,IOPKT    . ADDR OF PIA
)@@G@@ACKET @E@[@@       ER    PFWL$       . LET PFP$ INITIALIZE THE FILE     IB
)@@G@@@D@[@@       J     LS0100      . CONTINUE WHERE WE LEFT OFF @[@[@@.     IC
)@@G@@@ @[@@.      COULDNT ASSIGN HIS FILE@[@[@@.     @]@[@@LS0300.     @B@[@@ID
)@@G@@       L,U   A3,COULDT   . ADD OF MSG     @A@[@@       L,U   A4,32      IE
)@@G@@ . ITS SIZE @B@[@@       LMJ   X11,PRSEND  . TELL HIM NO-GO @C@[@@      IF
)@@G@@ J     LS0999      . SIGN OFF QUIETLY     @[@[@@.     @^@[@@.      FILE IG
)@@G@@FORMAT BAD  @[@[@@.     @]@[@@LS0400.     @ @[@@       L,U   A3,NOTFST  IH
)@@G@@ .    @ @[@@       L,U   A4,34       .    @ @[@@       LMJ   X11,PRSEND II
)@@G@@ .    @ @[@@       J     LS0999      .    @[@[@@.     @ @[@@. WORKSPACE IJ
)@@G@@FILE CANNOT BE HAD@[@[@@.     @ @[@@LS0410 J     LS0980      .    @A@@[[IK
)@@G@@LSASG*  SX     X11,LALINK     .     @G@@[[        SA     A0,LASPC2      IL
)@@G@@. SAVE POINTER TO DECODED SPEC 2 (FNAME)  @D@@[[        SA     A1,LAKEYPIM
)@@G@@      . SAVE POINTER TO KEY   @E@@[[        SA     A2,LAEXPL      . SAVEIN
)@@G@@ EXPLICIT LIBNUM FLAG   @F@@[[        SZ     LAPERM         . CLEAR INITIO
)@@G@@IAL PERMISSIONS BITS    @E@@[[        SZ     ALTIO          . CLEAR ALT IP
)@@G@@FILE IN USE FLAG  @G@@[[        JNZ    A0,LA0020      . IF A FILE NAME WIQ
)@@G@@AS GIVEN, GO ASSIGN IT  @G@@[[        TZ,U   ONEFIL         . HAS SITE IIR
)@@G@@MPLEMENTED A SINGLE FILE?     @D@@[[        J      LA0100         . YES,IS
)@@G@@ GO ASSIGN IT     @F@@[[. FOR SITES WITH A DIFFERENT FILE FOR EACH USER,IT
)@@G@@ CREATE FILENAME  @F@@[[LA0010  LMJ    X11,CONLIA     . GET USER' S LIBNIU
)@@G@@O IN FIELDATA     @G@@[[        DS     A3,USRQUA      . TO QUALIFIER FIEIV
)@@G@@LD OF USER FILE PKT     @E@@[[        LA     A3,LAKEYP      . GET POINTEIW
)@@G@@R TO KEY FIELD    @D@@[[        DL     A0,0,A3        . GET FIELDATA KEYIX
)@@G@@ LJSF @F@@[[        SA     A0,USRRKY      . LEFTMOST 6 CHARS ARE READ KEIY
)@@G@@Y     @C@@[[        LMJ    X11,JUSTFY     . RIGHT JUSTIFY IT@F@@[[      IZ
)@@G@@  SA     A1,USRWKY      . RIGHTMOST 6 CHARS ARE WRITE KEY   @D@@[[      JA
)@@G@@  LA,U   A0,USRQUA      . GET POINTER TO PACKET @G@@[[        LA,U   A1,JB
)@@G@@0           . SET FLAG INHIBITING WS FILE CREATION    @C@@[[        DL  JC
)@@G@@   A2,RCLIBN      . GET USER'S LIBNO@F@@[[        DTE    A2,ACMCON      JD
)@@G@@. IS THIS THE INSTALLATION MANAGER? @G@@[[        TNZ    LAEXPL         JE
)@@G@@. NO, WAS LIBNO COMPUTED (I.E. NOT TYPED) @G@@[[        LA,U   A1,1     JF
)@@G@@      . FOR MCONS OR IMPLICIT LIBNO, CREATE FILE@C@@[[        J      LA0JG
)@@G@@025         . AND GO ASSIGN IT@D@@[[. ASSIGN FILE AS INDICATED BY SPEC2 JH
)@@G@@ON PROCESSOR CALL @G@@[[LA0020  LA,U   A1,0           . SET FLAG TO INHIJI
)@@G@@BIT AUTOMATIC CREATION  @^@@[[. ASSIGN ALTERNATE FILE @D@@[[LA0025  DL  JJ
)@@G@@   A2,('APL$USERFILE') . GET THE @USE NAME@F@@[[        LMJ    X11,ASGUSJK
)@@G@@E     . ASSIGN FILE, DO USE AND FACIL$    @D@@[[        J      LA0090   JL
)@@G@@      . FAILURE, GO CHECK WHY @E@@[[        SA     A1,LFUOPT      . STASJM
)@@G@@H OPTIONS FOR @FREE     @E@@[[        SX     X11,ALTIO      . RAISE ALT JN
)@@G@@FILE IN USE FLAG  @F@@[[. CHECK THAT WE HAVE READ/WRITE PERMISSION AND IJO
)@@G@@F FILE IS IN USE  @E@@[[LA0030  LA     A2,LAPERM      . GET CURRENT PERMJP
)@@G@@ISSIONS     @E@@[[        OR,U   A2,ACLOKB      . TURN ON 'LOCKED OUT' BJQ
)@@G@@IT    @F@@[[        LA,S2  A1,FACPKT+6    . GET STATUS FROM FACIL$ PACKEJR
)@@G@@T     @F@@[[        AND,U  A1,036         . ISOLATE READ/WRITE PERMISSIOJS
)@@G@@NS    @F@@[[        TZ     A2             . DO WE HAVE BOTH READ AND WRIJT
)@@G@@TE?   @F@@[[        SA     A3,LAPERM      . NO, SET PERM BITS TO LOCKED JU
)@@G@@OUT   @F@@[[        JNZ    A2,LA0200      . AND IF LOCKOUT, EXIT IMMEDIAJV
)@@G@@TELY  @F@@[[        LA     A1,LAPERM      . BUT IF OK, RECOVER OUR PERMIJW
)@@G@@SSIONS@D@@[[        OR     A1,ACINUB      . TURN ON 'IN USE' BIT  @F@@[[JX
)@@G@@        TEP,U  A0,+1*/15      . DID CSF$ SAY FILE IS ASSIGNED?    @E@@[[JY
)@@G@@        SA     A2,LAPERM      . YES, POST MARKED PERMISSIONS@E@@[[. FOR JZ
)@@G@@FILE-PER-USER SITES, CHECK FOR AUTOLOAD OF CONTINUE WS@F@@[[LA0040  TZ,UKA
)@@G@@   ONEFIL         . HAS SITE IMPLEMENTED SINGLE FILE? @D@@[[        J   KB
)@@G@@   LA0100         . YES, NOTHING TO DO    @C@@[[        DL     A0,RCLIBNKC
)@@G@@      . GET USER'S LIBNO@F@@[[        DS     A0,CLIBN       . PUT IT WHEKD
)@@G@@RE COMMAND SCANNER WOULD@D@@[[        LMJ    X11,NUMCHK     . INITIALIZEKE
)@@G@@ FOR HIM    @F@@[[        J      LA0050         . TREAT NUMCHK ERROR AS KF
)@@G@@A NOFIND    @E@@[[        TLD    A0,CONT        . GET A WSNAME OF CONTINKG
)@@G@@UE    @G@@[[        TSTO   A0,CWSNM       . PUT WHERE COMMAND SCANNER WOKH
)@@G@@ULD HAVE    @E@@[[        LA,U   A0,0           . CLEAR ALT USER ALLOW FKI
)@@G@@LAG   @E@@[[        LMJ    X11,ELINIT     . INITIALIZE, READ PREAMBLE   KJ
)@@G@@@E@@[[        NOP                   . TREAT ERROR AS A NOFIND     @F@@[[KK
)@@G@@        J      LA0050         . FOR NOFIND, SKIP SETTING THE BIT  @F@@[[KL
)@@G@@        LA     A0,LAPERM      . ELSE GET OUR PERMISSIONS WORD     @E@@[[KM
)@@G@@        OR,U   A0,ACCONB      . TURN ON )CONTINUE'D BIT     @G@@[[      KN
)@@G@@  LA     A0,DRFSAV      . GET NO OF REFS SINCE WS WAS LAST SAVED  @D@@[[KO
)@@G@@        TNE,U  A0,1           . IS THIS THE FIRST?    @F@@[[        SA  KP
)@@G@@   A1,LAPERM      . YES, POST PERMS WITH )CONT BIT ON @G@@[[. IN CASE FIKQ
)@@G@@LE EXTERNALLY ASSIGNED, GET JUSTIFIED KEYS FROM LEAD ITEM.  @G@@[[. WE'LKR
)@@G@@L ALWAYS SUCCEED SINCE READ & WRITE PERMS WERE BOTH REQUIRED ABOVE@E@@[[KS
)@@G@@LA0050  LA,U   A0,LADPKT      . GET ADDR OF DREAD$ PACKET   @F@@[[      KT
)@@G@@  ER     MSCON$         . GOBBLE LEAD ITEM UP INTO BUFF     @E@@[[      KU
)@@G@@  DL     A0,BUFF+7      . GET READ AND WRITE KEYS     @F@@[[        DS  KV
)@@G@@   A0,MSCRKY      . PUT IN MSCON$ PACKET USED AT EXIT @F@@[[        J   KW
)@@G@@   LA0100         . AND GO ASSIGN PUBLIC LIB FILE     @D@@[[. DIAGNOSE FKX
)@@G@@AILURE TO ACQUIRE ALTERNATE WORKSPACE FILE@E@@[[LA0090  COMJMP A1 0,LA00KY
)@@G@@95 1,LS0980 2,LS0990 3,LS0970  .    @G@@[[LA0095  TNZ    LASPC2         KZ
)@@G@@. WERE WE TRYING TO ASSIGN A SPEC2 FILE?  @F@@[[        TNZ    LAEXPL   LA
)@@G@@      . NO, WAS LIBNO COMPUTED INTERNALLY?@F@@[[        J      LS0980   LB
)@@G@@      . YES, GO SAY WS FILE NOT AVAILABLE @G@@[[        J      LA0960   LC
)@@G@@      . NO, SAY (EXPLICIT) NUMBER NOT IN SYSTEM @[@@[[.     @A@@[[. ASSILD
)@@G@@GN THE COMMON LIBRARY FILE    @[@@[[.     @G@@[[LA0100  LA,U   A0,LIBQUALE
)@@G@@      . SET POINTER TO CANNED COMMON PACKET     @D@@[[        LA,U   A1,LF
)@@G@@1           . SET CREATION FLAG ON  @D@@[[        DL     A2,('APL$FILE  LG
)@@G@@  ') . GET THE @USE NAME@D@@[[        LMJ    X11,ASGUSE     . TRY TO GETLH
)@@G@@ THE FILE   @D@@[[        J      LA0190         . ERROR, GO DIAGNOSE IT LI
)@@G@@@E@@[[        SA     A1,LFLOPT      . STASH OPTIONS FOR @FREE     @F@@[[LJ
)@@G@@        LA,S2  A1,FACPKT+6    . GET FACIL$ READ/WRITE PERMISSIONS @E@@[[LK
)@@G@@        AND,U  A1,024         . ISOLATE READ PERMISSIONS    @G@@[[      LL
)@@G@@  JNZ    A2,LS0980      . IF FILE NOT READABLE, SAY UNAVAILABLE   @E@@[[LM
)@@G@@        AND,U  A1,012         . ISOLATE WRITE PERMISSIONS   @G@@[[      LN
)@@G@@  JZ     A2,LA0200      . IF FILE IS WRITABLE, TAKE NORMAL EXIT   @G@@[[LO
)@@G@@        TZ,U   ONEFIL         . CAN'T WRITE, IS THIS A SINGLE FILE SITE?LP
)@@G@@@D@@[[        J      LS0980         . YES, SAY NOT AVAILABLE@F@@[[      LQ
)@@G@@  LA     A0,LAPERM      . NO, FILE-PER-USER. GET PERMISSIONS@E@@[[      LR
)@@G@@  OR,U   A0,ACPINH      . TURN ON PUBLIC SAVE INHIBIT @E@@[[        SA  LS
)@@G@@   A1,LAPERM      . STASH UPDATED PERMISSIONS   @D@@[[        J      LA0LT
)@@G@@200         . AND EXIT NORMALLY     @C@@[[. DIAGNOSE FAILURE TO GET COMMLU
)@@G@@ON LIBRARY FILE   @E@@[[LA0190  COMJMP A1 0,LS0980 1,LS0980 2,LS0990 3,LLV
)@@G@@S0970  .    @[@@[[.     @A@@[[LA0200  LX     X11,LALINK     .     @F@@[[LW
)@@G@@        LA     A0,LAPERM      . GET PERMISSIONS WORD WE BUILT     @A@@[[LX
)@@G@@        J      1,X11          .     @[_@@@.     @#@@@@. ERROR EXITS     LY
)@@G@@@[@@@@.     @C@@[[LA0960  SEND   'NUMBER NOT I','N SYSTEM'     .  @A@@[[LZ
)@@G@@        J      LS0999         .     @F@@[[LS0970  SEND   'I/O ERROR IN',MA
)@@G@@'ITIALIZING W','S FILE  '     .     @A@@[[        J      LS0999         MB
)@@G@@.     @E@@@@LS0980 SEND  'WS FILE NOT ','AVAILABLE, T','RY LATER'  .    MC
)@@G@@@ @@@@       J     LS0999      .    @C@@@@LS0990 SEND  'WS FILE NOT ','PMD
)@@G@@F FORMAT   '   .  @ @@@@       J     LS0999      .    @B@@@@            ME
)@@G@@             . FALL THROUGH   @[@@@@.     @B@@@@.      ERROR IN ASSIGNINMF
)@@G@@G FILE, GO AWAY   @[@@@@.     @ @[@@LS0999 LX    X11,LSLINK  .    @ @@][MG
)@@G@@LS0999 LX    X11,LALINK  .    @ [@@@       J     0,X11       .    @[@@[[MH
)@@G@@.     @D@@[[LASPC2  EQUF   $,,H1          . POINTER TO SPEC2 DATA @D@@[[MI
)@@G@@LAKEYP  EQUF   $,,H2          . POINTER TO KEY DATA   @A@@[[        RES MJ
)@@G@@   1              .     @A@@[[LALINK  EQUF   $,,H1          .     @F@@[[MK
)@@G@@LAPERM  EQUF   $,,H2          . PERMISSIONS ARE CONSTRUCTED HERE  @A@@[[ML
)@@G@@        RES    1              .     @G@@[[LAEXPL  EQUF   $,,H1          MM
)@@G@@. FLAG ON IF LOBNO EXPLICIT ON @APL IMAGE @A@@[[        RES    1        MN
)@@G@@      .     @[@@[[.     @G@@[[. PACKET FOR DREAD$ OF LEAD ITEM TO INSUREMO
)@@G@@ WE HAVE THE CORRECT KEYS     @F@@[[. (WE WON'T NECESSARILY IF FILE WAS MP
)@@G@@ALREADY ASSIGNED TO THE RUN)  @[@@[[.     @G@@[[DREAD$  EQU    020      MQ
)@@G@@      . FOR RLIB$ LEVELS WITHOUT THIS IN ERU$   @C@@[[LADPKT  +      DREMR
)@@G@@AD$         . FUNCTION WORD   @E@@[[        'APL$USERFILE'        . USE MS
)@@G@@NAME FOR USER OWNFILES  @A@@[[MFORM   FORM   12,6,18        .     @F@@[[MT
)@@G@@        MFORM  28,0,BUFF      . 28 WDS OF LEAD ITEM GOES INTO BUFF@E@@[[MU
)@@G@@        +0,1,0                . STARTSECTOR=0, DO 1 SECTOR  @[@@[[.     MV
)@@G@@@C@@[[. PARAMETERS DESCRIBING COMMON LIBRARY FILE --  @[@@[[.     @A@@[[MW
)@@G@@LIBQUA  +IOQUAL               .     @A@@[[        +IOQUAM               MX
)@@G@@.     @A@@[[LIBFIL  +IOFILE               .     @A@@[[        +IOFILF   MY
)@@G@@            .     @A@@[[LIBRKY  +IORKEY               .     @A@@[[LIBWKYMZ
)@@G@@  +IOWKEY               .     @[@@[[.     @G@@[[. PARAMATERS FOR DEFAULTNA
)@@G@@ FILE AT SITES WITH ONE FILE FOR EACH USER--    @[@@[[.     @D@@[[USRQUANB
)@@G@@  RES    2              . QUALIFIER IS $<LIBNO> @E@@[[        'APLUSERFINC
)@@G@@LE$'        . FILENAME IS ALWAYS THIS     @F@@[[USRRKY  RES    1        ND
)@@G@@      . READ KEY COMES FROM PROCESSOR CALL@D@@[[USRWKY  RES    1        NE
)@@G@@      . AS DOES WRITE KEY     @[@@[[.     @E@@[[/. THIS ROUTINE DOES THENF
)@@G@@ @ASG, @USE, AND (IF NECESSARY) @CAT@G@@[[. EXITS:       0,X11          NG
)@@G@@ERROR- CODE IN A1, SECONDARY CODE IN A0   @E@@[[.                       NH
)@@G@@           A1=0      @ASG FAILURE   @E@@[[.                             NI
)@@G@@     A1=1      @USE FAILURE   @E@@[[.                                  ANJ
)@@G@@1=2      PFWL$ FAILURE  @G@@[[.                                  A1=3   NK
)@@G@@   I/O ERROR WRITING LOCKSECT @C@@[[.                             1,X11 NL
)@@G@@    NORMAL  @[@@[[.     @D@@[[        INSTRS . IN I-BANK FOR USE BY MULTNM
)@@G@@I-FILE SITES@A@@[[ASGUSE  SX     X11,ASLINK     .     @E@@[[        SA  NN
)@@G@@   A0,ASPKAD      . SAVE POINTER TO FILENAME    @D@@[[        SA     A1,NO
)@@G@@ASCRFL      . SAVE CREATION FLAG    @F@@[[        DS     A2,FACPKT      NP
)@@G@@. LJSF @USE NAME TO FACIL$ PACKET   @C@@[[        DS     A2,PFPKT       NQ
)@@G@@. TO PF$ PACKET   @C@@[[        DS     A2,IOPKT       . AND TO IO PACKETNR
)@@G@@@C@@[[        DL     A0,0,A0        . GET QUALIFIER   @G@@[[        LMJ NS
)@@G@@   X11,JUSTFY     . RIGHT JUSTIFH THE QUALIFIER (A0,A1)     @C@@[[      NT
)@@G@@  DS     A0,ASGQUA      . TO @ASG IMAGE   @C@@[[        DS     A0,USEQUANU
)@@G@@      . ALSO @USE IMAGE @D@@[[        DS     A0,CATQUA      . AND ALSO @NV
)@@G@@CAT IMAGE   @E@@[[        TE     A1,('      ')  . IS QUALIFIER ALL BLANKNW
)@@G@@S?    @F@@[[        LA     A1,('*     ')  . NO, WE NEED AN ASTERISK FOR NX
)@@G@@Q*F   @F@@[[        SA     A1,ASGSTR      . ASTERISK OR SPACES TO @ASG INY
)@@G@@MAGE  @B@@[[        SA     A1,USESTR      . DITTO @USE@B@@[[        SA  NZ
)@@G@@   A1,CATSTR      . AND @CAT  @F@@[[        LA     A3,ASPKAD      . GET OA
)@@G@@ARGUMENT OF ARG FILE PACKET   @E@@[[        DL     A0,2,A3        . GET OB
)@@G@@FILENAME FROM PACKET    @C@@[[        LMJ    X11,JUSTFY     . RIGHT JUSTOC
)@@G@@IFY IT@B@@[[        DS     A0,ASGFIL      . TO @ASG   @B@@[[        DS  OD
)@@G@@   A0,USEFIL      . TO @USE   @C@@[[        DS     A0,CATFIL      . AND OE
)@@G@@TO @CAT     @D@@[[        LA     A1,4,A3        . READ KEY FROM PACKET  OF
)@@G@@@B@@[[        LA     A0,('      ')  . PAD IT    @B@@[[        LMJ    X11OG
)@@G@@,JUSTFY      . ADJUST IT@B@@[[        SA     A1,ASGRKY      . TO @ASG   OH
)@@G@@@C@@[[        SA     A1,CATRKY      . AND ALSO @CAT   @D@@[[        LA  OI
)@@G@@   A1,5,A3        . WRITE KEY FROM PACKET @D@@[[        LA     A0,('    OJ
)@@G@@  ')  . PUT IN LEADING BLANKS @B@@[[        LMJ    X11,JUSTFY     . JUSTOK
)@@G@@IFY IT@B@@[[        SA     A1,ASGWKY      . TO @ASG   @D@@[[        SA  OL
)@@G@@   A1,CATWKY      . AND FINALLY TO @CAT   @A@@[[. NOW TRY TO ASSIGN THE OM
)@@G@@FILE --     @D@@[[AS0010  LA,U   A0,ASGIMG      . GET POINTER TO IMAGE  ON
)@@G@@@C@@[[        ER     CSF$           . TRY ASSIGING IT @D@@[[        JP  OO
)@@G@@   A0,AS0030      . IF @ASG OK, PROCEED   @D@@[[. IF ASSIGN FAILED, TRY OP
)@@G@@TO CREATE THE NEEDED FILE     @G@@[[AS0020  TZ     ASCRFL         . ARE OQ
)@@G@@WE ALLOWED TO TRY TO CREATE THE FILE@G@@[[        TOP    A0,(+1*/21)    OR
)@@G@@. YES, DID WE FAIL BECAUSE ITS NOT THERE? @E@@[[        J      AS0900   OS
)@@G@@      . NO, TAKE @ASG FAILURE EXIT  @E@@[[        LA,U   A0,CATIMG      OT
)@@G@@. YES, GET POINTER TO @CAT    @B@@[[        ER     CSF$           . DO IOU
)@@G@@T     @F@@[[        JN     A0,AS0900      . WIPE OUT IF WE DID'NT MAKE IOV
)@@G@@T     @E@@[[        SZ     ASCRFL         . ELSE CLEAR CREATION FLAG    OW
)@@G@@@F@@[[        J      AS0010         . AND GO BACK AND RETRY THE @ASG    OX
)@@G@@@A@@[[. ASSIGN HAS SUCCEEDED, DO THE @USE @F@@[[AS0030  SA     A0,ASGBITOY
)@@G@@      . SAVE CSF$ BITS FOR FILE ASSIGNMENT@G@@[[        DL     A0,FACPKTOZ
)@@G@@      . GET LJSF @USE NAME FROM FACIL$ PACKET   @C@@[[        LMJ    X11PA
)@@G@@,JUSTFY     . RIGHT JUSTIFY IT@D@@[[        DS     A0,USENAM      . STASPB
)@@G@@H IN @USE IMAGE   @E@@[[        LA,U   A0,USEIMG      . GET POINTER TO TPC
)@@G@@HE IMAGE    @C@@[[        ER     CSF$           . PUT THE @USE ON @E@@[[PD
)@@G@@        JN     A0,AS0910      . CHECK FOR FAILURE OF @USE   @C@@[[. @ASGPE
)@@G@@ AND @USE OK, VERIFY THE FILE'S FORMAT--  @C@@[[AS0100  LA,U   A0,FACPKTPF
)@@G@@      . GET PACKET ADDR @E@@[[        ER     FACIL$         . AND FIND OPG
)@@G@@UT AOBUT THIS FILE@F@@[[        LA,S2  A0,FACPKT+6    . GET PERMISSIONS PH
)@@G@@FROM FACIL$ PACKET@F@@[[        AND,U  A0,036         . ISOLATE BOTH REAPI
)@@G@@D AND WRITE PERMS @F@@[[        JNZ    A1,AS0110      . IF WE DON'T HAVEPJ
)@@G@@ BOTH, ALL IS LOST@F@@[[        LA,U   A0,FACPKT      . ELSE GET POINTERPK
)@@G@@ TO FILE NAME     @G@@[[        ER     PFWL$          . AND LET PF$ INITPL
)@@G@@IALIZE IF NECESSARY     @F@@[[        JNZ    A2,AS0920      . IF NOT A PPM
)@@G@@ROG FILE, ERROR EXIT    @C@@[[        LA,U   A1,1791        . LOCKSECTORPN
)@@G@@ ADDR @F@@[[        WRITE  BUFF,A1 28 AS0930   . TRY TO INITIALIZE LOCKSPO
)@@G@@ECTOR @C@@[[. CHECK ASSIGNMENT BITS, BUILD @FREE OPTIONS    @F@@[[AS0110PP
)@@G@@  LA     A0,ASGBIT      . RECOVER CSF$ STATUS FROM @ASG     @E@@[[      PQ
)@@G@@  LA     A1,('      ')  . GET NO-OPTION WORD FOR @FREE@F@@[[        TEP PR
)@@G@@   A0,(+1*/33)    . WAS FILE ALREADY ASSIGNED TO RUN? @G@@[[        LA  PS
)@@G@@   A1,(',A    ')  . YES, SET OPTS FO FREE @USE NAME ONLY    @A@@[[      PT
)@@G@@  LX     X11,ASLINK     .     @C@@[[        J      1,X11          . TAKEPU
)@@G@@ NORMAL EXIT@#@@[[. ERROR EXITS--   @D@@[[AS0900  LA,U   A1,0           PV
)@@G@@. SET @ASG FAILURE EXIT @A@@[[        J      AS0999         .     @D@@[[PW
)@@G@@AS0910  LA,U   A1,1           . SET @USE FAILURE CODE @A@@[[        J   PX
)@@G@@   AS0999         .     @D@@[[AS0920  LA,U   A1,2           . SET PFWL$ PY
)@@G@@FAILURE     @E@@[[        LA     A0,A2          . AND SECONDARY ERROR COPZ
)@@G@@DE    @A@@[[        J      AS0999         .     @D@@[[AS0930  LA,S1  A0,QA
)@@G@@IOPKT+3     . GET I/O ERROR TPE     @C@@[[        LA,U   A1,3           QB
)@@G@@. SET EXIT FLAG   @#@@[[. ERROR EXIT--    @A@@[[AS0999  LX     X11,ASLINQC
)@@G@@K     .     @A@@[[        J      0,X11          .     @[@@[[.     @^@@[[QD
)@@G@@          VARBLS    .   @F@@[[ASPKAD  EQUF   $,,H1          . POINTER TOQE
)@@G@@ PACKET WITH FILENAME   @D@@[[ASCRFL  EQUF   $,,H2          . CREATE/NOCQF
)@@G@@REATE FLAG  @A@@[[        RES    1              .     @A@@[[ASLINK  EQUFQG
)@@G@@   $,,H1          .     @A@@[[        RES    1              .     @F@@[[QH
)@@G@@ASGBIT  RES    1              . TEMP SAVE CSF$ STATUS FROM @ASG   @D@@[[QI
)@@G@@/. FREE ASSIGNED FILE(S) AT PROCESSOR TERMINATION     @[@@[[.     @#@@[[QJ
)@@G@@        INSTRS .  @ @@[[LSFREE* SX     X11,LFLINK     @G@@[[        SA  QK
)@@G@@   A0,MSNRKY      . TEMP SAVE FLAG INDICATING KEY CHANGE    @F@@[[      QL
)@@G@@  LA,U   A0,LFLFRE      . GET POINTER TO LIB FILE FREE IMAGE@G@@[[      QM
)@@G@@  ER     CSF$           . FREE IT 1ST IN CASE OF ERRORS BELOW     @G@@[[QN
)@@G@@        TNZ    ALTIO          . DID WE EVER ACTUALLY GET AN ALT FILE?   QO
)@@G@@@D@@[[        J      LF0100         . NO, NOTHING MORE TO DO@F@@[[      QP
)@@G@@  TZ,U   ONEFIL         . YES, IS THIS A FILE-PER-USER SITE?@F@@[[      QQ
)@@G@@  J      LF0020         . NO, GO FREE WITHOUT CHANGING KEYS @E@@[[      QR
)@@G@@  LA     A0,ACPERM      . YES, GET USER'S PERMISSIONS @D@@[[        TOP,QS
)@@G@@U  A0,ACLOKB      . WAS USER LOCKED OUT?  @F@@[[        TNZ    MSNRKY   QT
)@@G@@      . NO, DID HE SPECIFY A NEW KEY?     @F@@[[        J      LF0020   QU
)@@G@@      . GO FREE FILE WITHOUT CHANGING KEYS@D@@[[. USER SAID  )OFF:<KEY> QV
)@@G@@ CHANGE KEYS ON HIS OWNFILE   @F@@[[LF0010  OUTCNB,U 8 ACKEY,BUFF . CONVQW
)@@G@@ERT KEY FRON ACCNT AREA TO FD @C@@[[        DL     A0,BUFF        . GET QX
)@@G@@FIELDATA KEY@E@@[[        LMJ    X11,JUSTFL     . LEFT ADJUST 1ST 6 CHARQY
)@@G@@S     @D@@[[        SA     A0,MSNRKY      . SAVE NEW READ KEY     @E@@[[QZ
)@@G@@        LMJ    X11,JUSTFY     . NOW RIGHT ADJUST INTO A1    @E@@[[      RA
)@@G@@  LA     A0,A1          . PICK UP RIGHTNOST 6 CHARS   @D@@[[        LA  RB
)@@G@@   A1,('      ')  . PAD OUT TO 12 CHARS   @E@@[[        LMJ    X11,JUSTFRC
)@@G@@L     . AND LEFT ADJUST FOR MSCON$  @D@@[[        SA     A0,MSNWKY      RD
)@@G@@. STASH NEW WRITE KEY   @G@@[[        LA,U   A0,MSCPKT      . SET POINTERE
)@@G@@R TO CANNED MSCON$ PACKET     @E@@[[        DL     A1,MSCRKY      . GET RF
)@@G@@OLD READ AND WRITE KEYS @G@@[[        DTE    A1,MSNRKY      . ARE WE CHARG
)@@G@@NGING KEYS TO THEMSELVES?     @G@@[[        ER     MSCON$         . NO, RH
)@@G@@DO A BILL RUSSO RIM SHOT MODULATION @E@@[[LF0020  LA,U   A0,LFUFRE      RI
)@@G@@. GET @FREE FOR USER'S FILE   @B@@[[        ER     CSF$           . AND RJ
)@@G@@DO IT @[@@[[.     @A@@[[LF0100  LX     X11,LFLINK     .     @A@@[[      RK
)@@G@@  J      1,X11          .     @[@@[[.     @#@@[[        VARCON    @A@@[[RL
)@@G@@LFLINK  EQUF   $,,H1          .     @A@@[[        RES    1              RM
)@@G@@.     @E@@[[LFLFRE  '@ FREE'              . FREE IMAGE FOR LIBRARY FILE RN
)@@G@@@E@@[[LFLOPT  '      '              . OPTIONS ARE CRAMMED IN HERE @A@@[[RO
)@@G@@        'APL$FILE. .'         .     @G@@[[LFUFRE  '@ FREE'              RP
)@@G@@. FREE IMAGE FOR USER (OR SPEC2) FILE     @C@@[[LFUOPT  '      '        RQ
)@@G@@      . OPTIONS WORD    @A@@[[        'APL$USERFILE.  . '   .     @[@@[[RR
)@@G@@.     @G@@[[DKEY$   EQU    035            . FOR LEVELS IN WHICH THIS IS RS
)@@G@@NOT IN ERU$ @#@@[[MSCPKT  +DKEY$    @C@@[[        'APL$USERFILE'        RT
)@@G@@. INTERNAL NAME   @C@@[[MSCRKY  RES    1              . OLD READ KEY    RU
)@@G@@@C@@[[MSCWKY  RES    1              . OLD WRITE KEY   @C@@[[MSNRKY  RES RV
)@@G@@   1              . NEW READ KEY    @C@@[[MSNWKY  RES    1              RW
)@@G@@. NEW WRITE KEY   @[@@[[.     @ @@[[. JUSTIFY A0,A1 TO THE LEFT   @[@@[[RX
)@@G@@.     @#@@[[        INSTRS .  @C@@[[JUSTFL  LR,U   R1,11          . DO 1RY
)@@G@@2 CHARS     @E@@[[JL0010  LDSC   A0,6           . MOVE LEADING CHAR TO ERZ
)@@G@@ND    @D@@[[        AND,U  A1,077         . SPLIT IT OFF INTO A2  @C@@[[SA
)@@G@@        TNE,U  A2,' '         . IS IT BLANK?    @C@@[[        JGD    R1,SB
)@@G@@JL0010      . YES, TRY AGAIN  @G@@[[        DSC    A0,6           . NO (SC
)@@G@@OR NO MORE TO SCAN). PUT IT BACK    @B@@[[        J      0,X11          SD
)@@G@@. AND QUIT  @[@@@@.     @ @@@@.      JUSTIFY A0,1 TO RIGHT  @[@@@@.     SE
)@@G@@@^@@[[          INSTRS    .   @]@@@@JUSTFY.     @B@@@@       L,U   R1,11SF
)@@G@@       . MAX=12 TIMES   @B@@@@       AND,U A1,077      . GET LAST CHAR  SG
)@@G@@@C@@@@       TE,U  A2,' '      . IF NON-BLANK DONE    @ @@@@       J    SH
)@@G@@ 0,X11       .    @E@@@@       DSC   A0,6        . OTHERWISE SHIFT AROUNSI
)@@G@@D 1 CHAR    @B@@@@       JGD   R1,JUSTFY+1 . AND TRY AGAIN  @D@@@@      SJ
)@@G@@ J     0,X11       . HMM TWO WORDS OF BLANKS    @[@@@@.     @[@[@@.     SK
)@@G@@@ @[@@COULDT APLBCI 'COULD NOT AS'  @ @[@@       APLBCI 'SIGN ALTERNA'  SL
)@@G@@@ @[@@       APLBCI 'TE FILE.' .    @ @[@@NOTFST APLBCI 'ALTERNATE FI'  SM
)@@G@@@ @[@@       APLBCI 'LE NOT FASTR'  @ @[@@       APLBCI 'AND FORMAT  '  SN
)@@G@@@[@[@@.     @C@[@@.      QUALIFIER,FILE,... TO SAVE LOAD FROM     @G@[@@SO
)@@G@@.      INITIALIZED TO DEFAULT FILE, BUT IF ALTERNATE FILE SPECIFIED     SP
)@@G@@@F@[@@.      ON PROCESSOR CALL CARD, IT IS OVERWRITTEN WITH THAT FILE   SQ
)@@G@@@[@[@@.     @A@[@@LSQUAL* +    IOQUAL      . QUALIFIER@^@[@@       +    SR
)@@G@@ IOQUAM .   @A@[@@LSFILE* +    IOFILE      . FILE NAME@^@[@@       +    SS
)@@G@@ IOFILF .   @A@[@@LSRKEY* +    IORKEY      . READ KEY @A@[@@LSWKEY* +   ST
)@@G@@ IOWKEY      . WRITE KEY@[@[@@.     @G@[@@.      SKELETON USE NAME, ABOVSU
)@@G@@E INFO IS PUT IN HERE RIGHT JUSTIFIED     @D@[@@.      AND LOAD SAVE FILSV
)@@G@@E WILL BE CALLED 'APL$FILE'   @[@[@@.     @[@[@@USEN. @ @[@@       '@USESW
)@@G@@    APL$FILE,'    @ @[@@UQUAL  'QQQQQQQQQQQQ'    .    @ @[@@STAR   '*   SX
)@@G@@  '          .    @ @[@@UFILE  'FFFFFFFFFFFF'    .    @ @[@@       '/   SY
)@@G@@  '          .    @ @[@@URKEY  'RRRRRR'          .    @ @[@@       '/   SZ
)@@G@@  '          .    @ @[@@UWKEY  'WWWWWW'          .    @ @[@@       '  . TA
)@@G@@  '          .    @[@[@@CAT*. @C@[@@       '@CAT,P      '    . CATALOGUETB
)@@G@@ NEW FILE   @ @[@@       +     IOQUAL      .    @^@[@@       +     IOQUATC
)@@G@@M .   @ @[@@       '*     '          .    @ @[@@       +     IOFILE     TD
)@@G@@ .    @^@[@@       +     IOFILF .   @ @[@@       '/     '          .    TE
)@@G@@@ @[@@       +     IORKEY      .    @ @[@@       '/     '          .    TF
)@@G@@@ @[@@       +     IOWKEY      .    @#@[@@      ',  ///'    @G@@[[. NOTETG
)@@G@@ @ASG IS DONE BEFORE @USE SO KEYS ON @USE WON'T BE LEFT IN PCT    @[@@[[TH
)@@G@@.     @#@@[[        VARBLS .  @ @@[[ASGIMG '@ASG,A'          .    @G@@[[TI
)@@G@@       +UOMEOP,05,05,05,05,05 . E-OPTION TO FREE AT PROG TERMINATION    TJ
)@@G@@@ @@[[ASGQUA 'QQQQQQQQQQQQ'    .    @ @@[[ASGSTR '*     '          .    TK
)@@G@@@ @@[[ASGFIL 'FFFFFFFFFFFF'    .    @ @@[[       '/     '          .    TL
)@@G@@@ @@[[ASGRKY 'RRRRRR'          .    @ @@[[       '/     '          .    TM
)@@G@@@ @@[[ASGWKY 'WWWWWW'          .    @ @@[[        '  .   '         .    TN
)@@G@@@[@@[[.     @B@@[[. @USE IMAGE (DONE ONLY IF @ASG SUCCEEDS) @[@@[[.     TO
)@@G@@@A@@[[USEIMG  '@USE '               .     @A@@[[USENAM  'UUUUUUUUUUUU'  TP
)@@G@@      .     @A@@[[        ',     '              .     @ @@[[USEQUA 'QQQQTQ
)@@G@@QQQQQQQQ'    .    @ @@[[USESTR '*     '          .    @ @@[[USEFIL 'FFFFTR
)@@G@@FFFFFFFF'    .    @ @@[[       '  .   '          .    @[@@[[.     @D@@[[TS
)@@G@@. @CAT IMAGE USED TO INITIALLY CREATE LOAD-SAVE FILE--@A@@[[CATIMG  '@CATT
)@@G@@T,P'              .     @A@@[[        '      '              .     @A@@[[TU
)@@G@@CATQUA  'QQQQQQQQQQQQ'        .     @A@@[[CATSTR  '*     '              TV
)@@G@@.     @A@@[[CATFIL  'FFFFFFFFFFFF'        .     @A@@[[        '/     '  TW
)@@G@@            .     @A@@[[CATRKY  'RRRRRR'              .     @A@@[[      TX
)@@G@@  '/     '              .     @A@@[[CATWKY  'WWWWWW'              .     TY
)@@G@@@A@@[[        ',  ///'              .     @B?@@@       +     IOFRES     TZ
)@@G@@ . MAX RESERVE    @#@@@@       '  .   '   @ @[@@ASG    '@ASG,A APL$FILE UA
)@@G@@. '   @[[@@@.     @^@@@@.      PACKET FOR FACIL$@[@@@@.     @]@@@@FACPKTUB
)@@G@@.     @ @@@@       'APL$FILE'        .    @ @@@@       RES   7          UC
)@@G@@ .    @[@@@@/.    @C@@@@. ROUTINE TO SAY 'SAVED MM/DD/YY-HH:MM WSNAME'  UD
)@@G@@@[@@@@.     @ @@@@       INSTRS            .    @E@@@@SAVEDN SX    X11,SUE
)@@G@@NFLAG  . SET FLAG SO WS NAME IS PRINTED   @ @@@@       J     SY0005     UF
)@@G@@ .    @D@@@@SAVED  SZ    SNFLAG      . INHIBIT PRINTOUT OF WS NAME@ @@@@UG
)@@G@@SY0005 SX    X11,SALINK  .    @ @@@@       LMJ   X11,LNFLSH  .    @E@@@@UH
)@@G@@       SX    X11,BFOLET  . INHIBIT CHECK OF BUF OVERFLOW    @ @@@@      UI
)@@G@@ L,U   A3,SVD      .    @ @@@@       L,U   A4,6        .    @C@@@@      UJ
)@@G@@ LMJ   X11,EDTLIT  . EDIT IN 'SAVED '     @D@@@@       L     A0,DMOST   UK
)@@G@@ . GET MOST RECENT SAVE DATE  @C@@@@       LMJ   X11,EDATE   . EDIT IN TUL
)@@G@@IME & DATE  @E@@@@       TNZ   SNFLAG      . SHOULD WSNAME BE PRINTED TOUM
)@@G@@O?    @B@@@@       J     SY0020      . NO, WE'RE DONE @D@@@@       PUT,UUN
)@@G@@ ASPACE      . SEPARATE TIME FROM WSNAME  @C@@@@       DL    A2,WSID    UO
)@@G@@ . AND PICK UP WSNAME   @B@@@@SY0010 LA,U  A1,0        . CLEAR CHAR REG UP
)@@G@@@E@@@@       LTSL  A1,9        . MOVE NEXT CHAR OF NAME TO A1     @F@@@@UQ
)@@G@@       JNZ   A1,SY0015   . IF NON-ZERO, GO SEE WHAT CHAR IT IS    @G@@@@UR
)@@G@@       LA    A2,WSID+2   . BUT ZERO MEANS 1ST 8 CHARS DONE-- GET LAST 4 US
)@@G@@@G@@@@       LA    A3,(+ASPACE,ASPACE,ASPACE,ASPACE) . SPACE FILL SO WE UT
)@@G@@STOP  @C@@@@       J     SY0010      . AND GO EDIT 9TH CHAR @E@@@@SY0015UU
)@@G@@ JE,U  A1,ASPACE SY0020 . IF CHAR IS SPACE, WE'RE DONE@E@@@@       LMJ  UV
)@@G@@ X2,0,X2     . ELSE STASH NEXT CHAR OF LINE     @B@@@@       J     SY001UW
)@@G@@0      . AND CONTINUE   @C@@@@SY0020 LMJ   X11,LINSTR  . FLUSH OUT THE LUX
)@@G@@INE   @C@@@@       SZ    BFOLET      . CLEAR BUF OFLO FLAG  @ @@@@      UY
)@@G@@ LX    X11,SALINK  .    @ @@@@       J     0,X11       .    @[@@@@.     UZ
)@@G@@@ @@@@       VARBLS            .    @[@@@@.     @ @@@@SNFLAG EQUF  $,,H1VA
)@@G@@       .    @ @@@@SALINK EQUF  $,,H2       .    @ @@@@       RES   1    VB
)@@G@@       .    @[@@@@.     @ @@@@       CONSTS            .    @[@@@@.     VC
)@@G@@@ @@@@SVD    APLBCI 'SAVED   ' .    @[@@@@/.    @C@@@@. ROUTINE TO EDIT VD
)@@G@@TIME/DATE INTO OUTPUT LINE    @^@@@@. ENTER WITH INPUT IN A0@[@@@@.     VE
)@@G@@@ @@@@       INSTRS            .    @]@[@@EDATE*.     @ @[@@       S    VF
)@@G@@ X11,TDLINK  .    @A@@[[EDATE   SX     X11,EDLINK     .     @B]@@@      VG
)@@G@@ S     A0,TTEMP    . SAVE TDATE     @C@@@@       DSL   A0,76       . CLEVH
)@@G@@AR WIDTH REGS     @A@@@@       L,S1  A4,TTEMP    . MONTH    @ @@@@      VI
)@@G@@ DSL   A4,36       .    @ @@@@       LMJ   X11,FORMI   .    @ @@@@      VJ
)@@G@@ NOP               .    @ @@@@       PUT,U AREDUC      . MM/@A@@@@      VK
)@@G@@ L,S2  A4,TTEMP    . GET DAY  @ @@@@       DSL   A4,36       .    @C@@@@VL
)@@G@@       DSL   A0,76       . CLEAR WIDTH REGS     @ @@@@       LMJ   X11,FVM
)@@G@@ORMI   .    @ @@@@       NOP               .    @A@@@@       PUT,U AREDUVN
)@@G@@C      . MM/DD/   @A@@@@       L,S3  A4,TTEMP    . GET YEAR @A@@@@      VO
)@@G@@ A,U   A4,64       . ADD BIAS @ @@@@       DSL   A4,36       .    @C@@@@VP
)@@G@@       DSL   A0,76       . CLEAR WIDTH REGS     @ @@@@       LMJ   X11,FVQ
)@@G@@ORMI   .    @ @@@@       NOP               .    @A@@@@       PUT,U ASUBTVR
)@@G@@R      . MM/DD/YY-@ @@@@       L,H2  A4,TTEMP    .    @ @@@@       DSL  VS
)@@G@@ A4,36       .    @C@@@@       DI,U  A4,60       . DIVIDE MINS & SECONDSVT
)@@G@@@C@@@@       DSL   A4,36       . DISCARDS SECONDS     @C@@@@       DI,U VU
)@@G@@ A4,60       . DIVIDE HRS & MINUTES @A@@@@       S     A5,TTEMP    . SAVVV
)@@G@@E MINS@ @@@@       DSL   A4,36       .    @C@@@@       DSL   A0,76      VW
)@@G@@ . CLEAR WIDTH REGS     @ @@@@       LMJ   X11,FORMI   .    @ @@@@      VX
)@@G@@ NOP               .    @ @@@@       PUT,U ACOLON      . HH:@B@@@@      VY
)@@G@@ LA    A4,TTEMP    . PICK UP MINUTES@F@@@@       JLE,U A4,10 ED0010     VZ
)@@G@@. IF MINS AT LEAST 10, GO FORMAT    @E@@@@       PUT,U AZERO       . OTHWA
)@@G@@ERWISE JAM A LEADING ZERO IN  @D@@@@       LA    A4,TTEMP    . GET THE MWB
)@@G@@INUTES BACK AGAIN @ @@@@ED0010 DSL   A4,36       .    @C@@@@       DSL  WC
)@@G@@ A0,76       . CLEAR WIDTH REGS     @ @@@@       LMJ   X11,FORMI   .    WD
)@@G@@@A@@@@       NOP               . HH:MM    @ @[@@       LX,H2 X11,TDLINK WE
)@@G@@ .    @A@@[[        LX     X11,EDLINK     .     @ [@@@       J     0,X11WF
)@@G@@       .    @[@@@@.     @ @@@@       VARBLS            .    @[@@@@.     WG
)@@G@@@ @@@@TTEMP  +     0           .    @ @[@@TDLINK +     0           .    WH
)@@G@@@[@[@@/.    @[@[@@.     @C@[@@.      ERROR MESSAGE HANDLING AND EXIT ROUWI
)@@G@@TINES @[@[@@.     @#@[@@       INSTRS .   @^@[@@. HANDLE I/O ERRORS     WJ
)@@G@@@[@[@@.     @[@[@@SL0900@ @[@@       ERROR YIOERR,SL2000    @[@[@@.     WK
)@@G@@@A@[@@. DOES NOT EXIST ( FOR LOAD ONLY )  @[@[@@.     @]@[@@SL0910.     WL
)@@G@@@ @[@@       ERROR YWSNOT,SL2000    @[@[@@.     @C@[@@. TOC OVERFLOW????WM
)@@G@@ ( HOW ABOUT A @PACK GANG)    @[@[@@.     @]@[@@SL0920.     @ @[@@      WN
)@@G@@ ERROR YLIBRA,SL2000    @[@[@@.     @#@[@@. WS SIZE CONFLICT@[@[@@.     WO
)@@G@@@]@[@@SL0930.     @ @[@@       SEND  'SIZE ERROR  '   @ @[@@       J    WP
)@@G@@ SL1000      .    @[@[@@.     @ @[@@. INCORRECT KEY SPECIFIED     @[@[@@WQ
)@@G@@.     @]@[@@SL0940.     @ @[@@       ERROR YWSLOC,SL2000    @[@[@@.     WR
)@@G@@@[@[@@.     @ @[@@SL0950 . BAD WS NAME SPECIFIED@[@[@@.     @B@[@@      WS
)@@G@@ TLD   A0,WSID     . GET WS NAME    @D@[@@       TSTO  A0,NOTSVD   . PUTWT
)@@G@@ IN SKELETON MESSAGE    @ @[@@       PRINT 36,NOTDUN   .    @ @[@@      WU
)@@G@@ J     SL1000      .    @[@[@@.     @B@[@@.      IMPROPER LIBRARY NUMBERWV
)@@G@@ SPECIFIED  @[@[@@.     @]@[@@SL0960.     @ @[@@       ERROR YIMPRO,SL20WW
)@@G@@00    @[@[@@.     @#@[@@.      KEY ILLEGAL@[@[@@.     @]@[@@SL0970.     WX
)@@G@@@ @[@@       ERROR YKEYIL,SL2000    @[@[@@.     @^@[@@.  WS QUOTA USED UWY
)@@G@@P     @[@[@@.     @ @[@@       ACON              .    @]@[@@SL0980.     WZ
)@@G@@@ @[@@       ERROR YUSED,SL2000     @ @[@@       ACOFF             .    XA
)@@G@@@[@[@@.     @B@[@@. NORMAL EXIT, FREE FILE IF NOT TEMP ASG  @[@[@@.     XB
)@@G@@@]@[@@SL1000.     @ @[@@       L     X11,LSLINK  .    @ @[@@       J    XC
)@@G@@ 1,X11       .    @[@[@@.     @[@[@@.     @ @[@@. ERROR RETURN FROM LODSXD
)@@G@@AV    @[@[@@.     @]@[@@SL2000.     @ @[@@       L     X11,LSLINK  .    XE
)@@G@@@ @[@@       J     0,X11       .    @A@@[[EDLINK  EQUF   $,,H1          XF
)@@G@@.     @A@@[[        RES    1              .     @E@@[[/. MASTER CONSOLE XG
)@@G@@FUNCTIONS FOR MANAGEMENT OF SAVE/LOAD FILE@[@@[[.     @B@@[[. INITIALIZEXH
)@@G@@ FILE, GET NR OF ELEMENTS     @ @@[[        MASTER . SET LOCN CTR @A@@[[XI
)@@G@@LSMNEL* SX     X11,LMLINK     .     @G@@[[        DL     A2,('APL$FILE  XJ
)@@G@@  ') . GET @USE NAME FOR LIBRARY FILE     @D@@[[        DS     A2,IOPKT XK
)@@G@@      . STASH IN I/O PACKET   @D@@[[        LA,U   A2,PFMBUF      . SET XL
)@@G@@BUFFER ADDRESS    @C@@[[        LMJ    X11,PFSETM     . AND INITIALIZE  XM
)@@G@@@E@@[[        J      LM0799         . GO SET I/O ERROR STATUS     @D@@[[XN
)@@G@@        SX     X11,LMINIT     . POST WE'RE INITIALIZED@D@@[[        LA  XO
)@@G@@   A0,PFNELS      . GET NO OF ELEMENTS    @B@@[[        J      LM0800   XP
)@@G@@      . AND EXIT  @D@@[[. GET PERTINENT DATA FOR AN ELEMENT (INDEX IN A0XQ
)@@G@@)     @A@@[[LSMGET* SX     X11,LMLINK     .     @G@@[[        DL     A2,XR
)@@G@@('APL$FILE    ') . GET @USE NAME FOR LIBRARY FILE     @D@@[[        DS  XS
)@@G@@   A2,IOPKT       . STASH IN I/O PACKET   @D@@[[        TZ     LMINIT   XT
)@@G@@      . HAVE WE INITIALIZED?  @D@@[[        J      LG0005         . YES XU
)@@G@@DON'T DO IT AGAIN @D@@[[        LA,U   A2,PFMBUF      . NO, GET BUF POINXV
)@@G@@TER   @B@@[[        LMJ    X11,PFSETM     . AND DO SO @A@@[[        J   XW
)@@G@@   LM0799         .     @D@@[[        SX     X11,LMINIT     . RAISE INITXX
)@@G@@IALIZED FLAG@C@@[[LG0005  LA,U   A2,PFMBUF      . GET BUF POINTER @D@@[[XY
)@@G@@        LMJ    X11,PFGETM     . AND READ THE ENTRY    @E@@[[        J   XZ
)@@G@@   LM0799         . GO SET I/O ERROR STATUS     @C@@[[        TNZ    A0 YA
)@@G@@            . WAS A HIT MADE? @F@@[[        J      LG0030         . NO, YB
)@@G@@GO SET STATUS TO OUT OF RANGE @G@@[[        SA     A0,PFEPTR      . YES,YC
)@@G@@ SAVE POINTER TO ITS PLACE IN BUF   @C@@[[. MOVE PF ENTRY TO WORKING BUFYD
)@@G@@FER FOR I-BEAMS   @D@@[[LG0010  LR,U   R1,10          . ENTRY IS 10 WDS YE
)@@G@@LING  @D@@[[        LXI,U  A0,1           . SET FROM INCREMENT    @C@@[[YF
)@@G@@        LA,U   A1,PFETBL      . SET TO-ADDR     @C@@[[        LXI,U  A1,YG
)@@G@@1           . AND INCREMENT   @E@@[[        BT     A1,0,*A0       . MOVEYH
)@@G@@ DATA TO ACTIVE AREA    @D@@[[. VERIFY WHETHER THE ELEMENT WE HAVE IS A YI
)@@G@@WORKSPACE   @E@@[[LG0020  LA     A0,PFETYP      . GET TYPE FROM WORK AREYJ
)@@G@@A     @F@@[[        JNE,U  A0,PFWSTP LG0040    . IF NOT CORRECT TYPE, NOYK
)@@G@@T A WS@D@@[[        LA     A0,PFEPRS      . GET PREAMBLE SIZE     @E@@[[YL
)@@G@@        TG,U   A0,1           . WHICH MUST BE AT LEAST ONE  @G@@[[      YM
)@@G@@  TG,U   A0,5           . BUT CANNOT EXCEED A MAXIMUM DISK FUDGE  @D@@[[YN
)@@G@@        J      LG0040         . O R ELSE ITS NOT A WS @E@@[[        LA  YO
)@@G@@   A1,PFEPAD      . GET DRUM ADDR OF PREAMBLE   @D@@[[        READ   DIRYP
)@@G@@ECT,A1 28 LM0799 . GET PREAMBLE     @C@@[[        LA,H1  A0,DSIZE       YQ
)@@G@@. GET SIZE INDEX  @F@@[[        JZ     A0,LG0040      . IF ZERO, THIS ISYR
)@@G@@ NOT A WORKSPACE  @C@@[[        LSSL   A0,12          . MULTIPLY BY 4096YS
)@@G@@@G@@[[        JNE,H2 A0,DSIZE LG0040     . IF SIZE ERROR, NOT A WORKSPACYT
)@@G@@E     @E@@[[        TNZ,S1 DRFAKE         . HAS ITS FORMAT BEEN CHNAGED?YU
)@@G@@@C@@[[        J      LG0025         . YES, NORMAL EXIT@E@@[[        LMJ YV
)@@G@@   X11,PRECNM     . NO, CONVERT TO NEW FORMAT   @E@@[[        LA     A1,YW
)@@G@@PFEPAD      . RECOVER PREAMBLE DRUM ADDR  @F@@[[        WRITE  DIRECT,A1YX
)@@G@@ 28 LM0799 . REWRITE NEW FORMAT PREAMBLE  @D@@[[LG0025  LA,U   A0,1     YY
)@@G@@      . GET NORMAL EXIT FLAG  @C@@[[        J      LM0800         . NORMYZ
)@@G@@AL EXIT     @E@@[[LG0030  LA,U   A0,3           . SET STATUS OUT OF RANGZA
)@@G@@E     @B@@[[        J      LM0800         . AND RETURN@F@@[[LG0040  LA,UZB
)@@G@@   A0,2           . SET STATUS TO NOT A WORKSPACE     @B@@[[        J   ZC
)@@G@@   LM0800         . AND RETURN@^@@[[. DELETE CURRENT ELEMENT@C@@[[LSMDRPZD
)@@G@@* LA,U   A0,PFEFIL      . SET PACKET ADDR @A@@[[        ER     PFD$     ZE
)@@G@@      . POOF@E@@[[        LA     A0,A2          . MOVE STATUS TO RESULT ZF
)@@G@@REG   @D@@[[        JNZ    A0,0,X11       . IF FAILURE, GET OUT   @G@@[[ZG
)@@G@@        LA     A1,PFEPTR      . ELSE GET ADDR IN BUFF OF THIS ENTRY     ZH
)@@G@@@C@@[[        LA,U   A2,040         . GET DELETE FLAG @G@@[[        SA,SZI
)@@G@@1  A2,0,A1        . MARK DELETED IN OUR COPY OF THE TOC     @B@@[[      ZJ
)@@G@@  J      0,X11          . THEN EXIT @C@@[[. RESET REFERENCE COUNT DATA FZK
)@@G@@OR CURRENT WS     @A@@[[LSMRES* SX     X11,LMLINK     .     @G@@[[      ZL
)@@G@@  DL     A2,('APL$FILE    ') . GET @USE NAME FOR LIBRARY FILE     @D@@[[ZM
)@@G@@        DS     A2,IOPKT       . STASH IN I/O PACKET   @F@@[[        LA,UZN
)@@G@@   A0,0           . SET TENTATIVE STATUS TO NOT DONE  @D@@[[        TZ  ZO
)@@G@@   LMINIT         . HAVE WE INITIALIZED?  @F@@[[        TNZ,S1 DRUNID   ZP
)@@G@@      . YES, IS WS PREAMBLE IN NEW FORMAT?@F@@[[        J      LM0800   ZQ
)@@G@@      . IF NOT BOTH, DON'T DO ANYTHING    @F@@[[        ER     TDATE$   ZR
)@@G@@      . THERE'S NO TIME LIKE THE PRESENT  @E@@[[        SA     A0,DTDRESZS
)@@G@@      . SO SET TDATE$ OF RESET TO IT@E@@[[        SZ     DRFRES         ZT
)@@G@@. CLEAR NO OF REFS SINCE NOW  @F@@[[        LA     A1,PFEPAD      . GET ZU
)@@G@@PREAMBLE ADDR FROM PF ENTRY   @E@@[[        WRITE  DIRECT,A1 28 LM0799 .ZV
)@@G@@ OUTPUT UPDATED PREAMBLE@D@@[[        LA,U   A0,1           . SET STATUSZW
)@@G@@ NORMAL     @B@@[[        J      LM0800         . AND RETURN@G@@[[. FOR ZX
)@@G@@ERRORS IN PF SUBROUTINES, SET NEGATIVE STATUS INDICATING I/O ERROR@A@@[[ZY
)@@G@@LM0799  LNA,U  A0,1           .     @ @@[[. RETURN (STATUS IS IN A0)    ZZ
)@@G@@@C@@[[LM0800  LX     X11,LMLINK     . GET RETURN ADDR @C@@[[        J   AA
)@@G@@   0,X11          . NORMAL EXIT     @[@@[[.     @A@@[[. MASTER CONSOLE FAB
)@@G@@ARBLING DATA AREAS@[@@[[.     @A@@[[LMLINK  EQUF   $,,H1          .     AC
)@@G@@@A@@[[LMINIT  EQUF   $,,H2          .     @#@@[[        +$-$,0 .  @[@@[[AD
)@@G@@.     @G@@[[PFEPTR  EQUF   $,,H1          . POINTER INTO BUF FOR CURREMEAE
)@@G@@NT ELEMENT  @A@@[[        RES    1              .     @E@@[[PFEFIL  'APLAF
)@@G@@$FILE    '        . FOR EVENTUAL USE BY A PFD$  @E@@[[PFETBL* RES    10 AG
)@@G@@            . ELEMENT TABLE WORKING BUFFER@C@@[[PFETYP  EQUF   PFETBL+3,AH
)@@G@@,S3   . TYPE OF ELEMENT @D@@[[PFEPAD  EQU    PFETBL+6       . PREAMBLE DAI
)@@G@@RUM ADDR    @E@@[[PFEPRS  EQUF   PFETBL+7,,H1   . SECTOR LENGTH OF PREAMAJ
)@@G@@BLE   @F@@[[PFMBUF  RES    280            . WORKING BUFFER FOR TOC READEAK
)@@G@@R     @G@@[[/. SUBROUTINE TO COMPUTE MASS STORAGE USAGE FACTORS FOR A WOAL
)@@G@@RKSPACE--   @F@@[[. WE ASSUME THAT THE PF$ PACKET CONTAINS THE RELEVANT AM
)@@G@@PARAMETERS  @[@@[[.     @G@@[[. EXIT WITH A0=TRACK-SECONDS OF BILLABLE TAN
)@@G@@IME (ROUNDED FROM SECTOR SECS)@F@@[[.           A1=SIZE IN SECTORS (USEDAO
)@@G@@ TO COMPUTE USAGE LIMITS)     @[@@[[.     @#@@[[        INSTRS .  @A@@[[AP
)@@G@@MSUSAG  SX     X11,MULINK     .     @E@@[[        LA     A0,PFTSIZ      AQ
)@@G@@. GET TEXT SIZE IN SECTORS    @D@@[[        AA     A0,PFPSIZ       . PLUAR
)@@G@@S PREAMBLE SIZE   @D@@[[        SA     A0,MUSIZE      . GIVES TOTAL SECTAS
)@@G@@ORS   @F@@[[        LA     A0,DMOST       . GET TDATE OF MOST RECENT SAVAT
)@@G@@E     @F@@[[        LMJ    X11,TIMTDF     . CONVERT TO SECS SINCE 0000 1AU
)@@G@@/1/64 @F@@[[        TLE    A2,ACTMAS      . WAS WS SAVED SINCE LAST BILLAV
)@@G@@ING?  @G@@[[        LA     A2,ACTMAS      . NO BEFORE. SET TIME ORIG TO AW
)@@G@@LAST BILLING@E@@[[        SA     A2,MUTIME      . SAVE START TIME FOR BIAX
)@@G@@LLING @G@@[[        LA     A0,DLAST       . GET TDATE$ OF LAST REF (I.E.AY
)@@G@@ RIGHT NOW) @F@@[[        LMJ    X11,TIMTDF     . CONVERT TDATE$ FORMAT AZ
)@@G@@TO SECONDS  @F@@[[        LA     A0,A2          . MOVE OVER RESULT FOR CBA
)@@G@@OMPUTATION  @F@@[[        ANA    A0,MUTIME      . LESS START TIME = BILLBB
)@@G@@ING TIME    @F@@[[        MSI    A0,MUSIZE      . TIMES SIZE GIVES SECTOBC
)@@G@@R SECONDS   @D@@[[        AA,U   A0,32          . ROUND BY A HALFTRACK  BD
)@@G@@@F@@[[        SSA    A0,6           . DIV BY 64 GIVING TRACK SECONDS    BE
)@@G@@@D@@[[        LA     A1,MUSIZE      . RECOVER ELEMENT SIZE  @A@@[[      BF
)@@G@@  LX     X11,MULINK     .     @A@@[[        J      1,X11          .     BG
)@@G@@@[@@[[.     @#@@[[        VARBLS .  @A@@[[MULINK  EQUF   $,,H1          BH
)@@G@@.     @D@@[[MUSIZE  EQUF   $,,H2          . EL SIZE (SECTORS)     @A@@[[BI
)@@G@@        RES    1              .     @G@@[[MUTIME  RES    1              BJ
)@@G@@. TIME SINCE ACCNTG, SECS FROM 0000 1/1/64@F@@[[/. SUBROUTINE TO CONVERTBK
)@@G@@ TDATE TO TIME IN SECS SINCE 0000 1/1/64  @[@@[[.     @#@@[[        INSTBL
)@@G@@RS .  @E@@[[TIMPFF* LSSC   A0,18          . ALIGN PF$ FMT TDATE$ WORD   BM
)@@G@@@E@@[[TIMTDF* SA     A0,TIWORD      . HERE IF NORMAL TDATE$ WORD  @C@@[[BN
)@@G@@        LA     A0,TIYEAR      . YEARS SINCE 1964@E@@[[        MSI,U  A0,BO
)@@G@@365         . TIMES DAYS IN NON-LEAP YEARS@F@@[[        LA     A2,A0    BP
)@@G@@      . INITIALIZE DAYS PREVIOUS TO TODAY @C@@[[        LA     A0,TIYEARBQ
)@@G@@      . RECOVER YEAR    @B@@[[        AA,U   A0,3           . ROUND     BR
)@@G@@@G@@[[        SSL    A0,2           . DIV BY 4 GIVING NO OF PREVIOUS LEABS
)@@G@@Y URS @G@@[[        AA     A2,A0          . BUMP DAYS BY LEAP DAYS IN PRBT
)@@G@@EVIOUS YRS  @G@@[[        SSL    A1,36-2        . ALIGN REMAINDER, CLEARBU
)@@G@@ FEBRUARY INCREMEN@D@@[[        TNE,U  A1,3           . IS THIS A LEAP YBV
)@@G@@EAR?  @F@@[[        LXI,U  A1,1           . YES, SET FEB BUMP FACTOR TO BW
)@@G@@1 DAY @G@@[[        SSL    A1,18          . ALIGN BUMP FACTOR FOR MONTHSBX
)@@G@@ MAR-DEC    @B@@[[        LA     A0,TIMONT      . GET MONTH @E@@[[      BY
)@@G@@  TG,U   A0,3           . IS MONTH PREVIOUS TO MARCH? @F@@[[        AA  BZ
)@@G@@   A2,A1          . YES, BUMP DAYS BY FEBRUARY FACTOR @G@@[[        AA  CA
)@@G@@   A2,TITABL-1,A0 . FOLD IN DAYS-1 OF PREVIOUS FULL MONTHS  @F@@[[      CB
)@@G@@  AA     A2,TIDAY       . PLYS DAYS+1 COMPLETE IN THIS MONTH@E@@[[      CC
)@@G@@  MSI    A2,(+24*60*60) . DAYS TIMES SECONDS PER DAY  @E@@[[        AA  CD
)@@G@@   A2,TISECS      . PLUS SECONDS ELAPSED TODAY  @D@@[[        J      0,XCE
)@@G@@11          . EXIT WITH TIME IN A2  @[@@[[.     @#@@[[        VARBLS .  CF
)@@G@@@A@@[[TIWORD  RES    1              .     @A@@[[TIMONT  EQUF   TIWORD,,SCG
)@@G@@1     .     @A@@[[TIDAY   EQUF   TIWORD,,S2     .     @A@@[[TIYEAR  EQUFCH
)@@G@@   TIWORD,,S3     .     @A@@[[TISECS  EQUF   TIWORD,,H2     .     @#@@[[CI
)@@G@@        CONSTS .  @]@@[[TITABL  -1 .@#@@[[        -1+31 .   @#@@[[      CJ
)@@G@@  -1+31+28 .@^@@[[        -1+31+28+31 .   @^@@[[        -1+31+28+31+30 .CK
)@@G@@@ @@[[        -1+31+28+31+30+31 .   @ @@[[        -1+31+28+31+30+31+30 .CL
)@@G@@@A@@[[        -1+31+28+31+30+31+30+31 .   @A@@[[        -1+31+28+31+30+3CM
)@@G@@1+30+31+31 .@B@@[[        -1+31+28+31+30+31+30+31+31+30 .   @B@@[[      CN
)@@G@@  -1+31+28+31+30+31+30+31+31+30+31 .@C@@[[        -1+31+28+31+30+31+30+3CO
)@@G@@1+31+30+31+30 .   @[@[@@/.    @[@[@@.     @B@[@@. CONVERT BINARY IN A1 TCP
)@@G@@O FD IN A3&A4     @[@[@@.     @ @[@@CONBD  L,U   R1,11       .    @C@[@@CQ
)@@G@@       DSL   A1,36       . PREPARE TO DIVIDE    @ @@[[/. MORE MISCELLANECR
)@@G@@OUS STUFF   @[@@[[.     @D@@[[. LIBNO (DFU IN A0,A1,A2 ) TO FIELDATA (INCS
)@@G@@ A3,A4)     @F@@[[. THIS ROUTINE IS ALSO USED TO GET QUALIFIERS FOR )SITCT
)@@G@@E AND )CSITE@[@@[[.     @#@@[[        INSTRS .  @E@@[[CONLIA* DFU    A0,CU
)@@G@@RCLIBN      . UNPACK USER'S OWN LIBNO     @A@@[[CONLIB  LNA    A0,A0    CV
)@@G@@      .     @A@@[[        LDSC   A1,11          .     @A@@[[        DSA CW
)@@G@@   A1,02043,A0    .     @A@@[[        LR,U   R1,11          .     @D@@[[CX
)@@G@@CL0010  DSL    A1,36          . PREPARE TO DIVIDE     @C_@@@       DI,U CY
)@@G@@ A1,10       . DIVIDE INTO PARTS    @B@@@@       AA,U  A2,'0'      . ADDCZ
)@@G@@ IN BIAS    @ @@@@       TSL   A2,6        .    @ @[@@       JGD   R1,CODA
)@@G@@NBD+1  .    @A@@[[        JGD    R1,CL0010      .     @ [@@@       J    DB
)@@G@@ 0,X11       .    @[@[@@.     @B@[@@.      SET PUBLIC/PRIVATE FLAG   0=PDC
)@@G@@RIVATE@[@[@@.     @C@[@@SETNUM DL    A0,CLIBN    . GET NUMBER SPECIFIED DD
)@@G@@@C@[@@       DJZ   A0,SL0960   . NO ZEROS ALLOWED     @C@[@@       JN   DE
)@@G@@ A0,SL0960   . OR NEGATIVES EITHER  @ @[@@       SZ    A2          .    DF
)@@G@@@ @[@@       DTLE  A0,(1000.0D)     @ @[@@       LA,U  A2,1        .    DG
)@@G@@@ @[@@       SA    A2,PUBLIC   .    @ @[@@       J     0,X11       .    DH
)@@G@@@ @[@@       ACON              .    @[@@[[.     @D@@[[. SUBROUTINE TO CODI
)@@G@@NVERT OLD FORMAT PREAMBLES TO NEW   @[@@[[.     @F@@[[. PROCALYZED FOR GDJ
)@@G@@ENERATION IN BOTH BANKS AT THE APPROPRIATE PLACE@[@@[[.     @#@@[[P     DK
)@@G@@  PROC   .  @#@@[[PCONV*  NAME   .  @#@@[[        UNLI$T .  @E@@[[      DL
)@@G@@  TNZ    DRFAKE         . WAS THIS TRIP NECESSARY?    @E@@[[        ER  DM
)@@G@@   ERR$           . NO, SOMEHOW WE SCREWED IT UP@D@@[[        DL     A0,DN
)@@G@@DQUAL       . YES, GET QUALIFIER    @D@@[[        DS     A0,DRQUAL      DO
)@@G@@. PUT IN ITS NEW HOME   @D@@[[        DL     A0,DACNT       . ALSO ACCOUDP
)@@G@@NT NUMBER   @A@@[[        DS     A0,DRACNT      .     @C@@[[        LDSLDQ
)@@G@@   A0,72          . GET SOME ZEROES @F@@[[        DS     A0,DRFAKE      DR
)@@G@@. CLEAR POINTERS USED BY REAL RELS  @A@@[[        DS     A0,DRFAKE+2    DS
)@@G@@.     @D@@[[        DS     A0,DRSPA2      . CLEAR SPARES 2 AND 1  @F@@[[DT
)@@G@@        LA     A0,DSIZE       . GET PRESENT ACTUAL SIZE INDICATOR @G@@[[DU
)@@G@@        SA     A0,DMXSIZ      . USE AS MAX CORE TO WHICH WS CAN EXPAND  DV
)@@G@@@F@@[[        LA     A0,DREF        . GET OLD (TOTAL) REFERENCE COUNT   DW
)@@G@@@D@@[[        SA     A0,DRFTOT      . PUT IN ITS NEW HOME   @F@@[[      DX
)@@G@@  SA     A0,DRFRES      . AND USE ALSO AS REFS SINCE RESET  @D@@[[      DY
)@@G@@  LA     A0,JAN164      . GET STARTING TDATE$   @F@@[[        SA     A0,DZ
)@@G@@DTDRES      . POST DATE SINCE LAST REFCNT RESET @F@@[[        LA     A0,EA
)@@G@@PQUEST      . GET A BUNCH OF QUESTION MARKS     @E@@[[        SA     A0,EB
)@@G@@DRUNID      . POST SAVER RUNID UNKNOWN    @F@@[[        SZ     DRFSAV   EC
)@@G@@      . CLEAR NO REFS SINCE LAST )SAVE    @D@@[[        LA     A0,PRFLAGED
)@@G@@      . GET INITIAL FLAG VALUE@C@@[[        SA     A0,DRFLAG      . AND EE
)@@G@@STASH IT    @A@@[[        J      0,X11          .     @E@@[[. CONSTANTS EF
)@@G@@WHICH APPEAR IN DIFFERENT PLACES IN EACH BANK   @E@@[[JAN164  +1,1,0,0,0EG
)@@G@@,0          . TDATE$ FOR 1 JANUARY 1964   @F@@[[PQUEST  '??????'        EH
)@@G@@      . QUESTION MARKS FOR UNKNOWN RUNIDS @G@@[[PRFLAG  'APL*@@'        EI
)@@G@@      . CONSTANT TO INDICATE THIS IS A WORKSPACE@#@@[[        LI$T   .  EJ
)@@G@@@#@@[[        END    .  @A@@[[        INSTRS                .     @D@@[[EK
)@@G@@PRECNV  PCONV  . I-BANK COPY USED IN SYSTEM COMMANDS  @D@@[[        MASTEL
)@@G@@ER . SET LOCN CTR FOR MASTER CONSOL DBANK @E@@[[PRECNM  PCONV  . D-BANK EM
)@@G@@COPY USED FOR MATER CONSOLE I-BEAMS @[@[@@.     @D@[@@. ROUTINE TO CHANGEN
)@@G@@E CURRENT QUOTA COUNT FOR THIS LIB #@B@[@@. ENTER ON X3, AMOUNT TO CHANGEO
)@@G@@E BY IN A3  @[@[@@.     @]@[@@NEWQTA.     @C@[@@       LA    A1,WSISIZ  EP
)@@G@@ . GET INDEX TO SIZE    @C@[@@       TZ    PUBLIC      . BUT PUBLIC OVEREQ
)@@G@@RIDES @C@[@@       SZ    A1          . 0 INDEX FOR PUBLIC   @A@[@@      ER
)@@G@@ L,U   X2,ACUSED   . FROM HERE@ @[@@       EX    GETQTA,A1   .    @A@[@@ES
)@@G@@       A     A0,A3       . NEW VALUE@ @[@@       TP    A0          .    ET
)@@G@@@G@[@@       SZ    A0          . DONT LET COUNT GO NEGATIVE (I.E. FUDGITEU
)@@G@@)     @A@[@@       EX    STRQTA,A1   . STASH IT @D@[@@       L     A0,DIEV
)@@G@@NDEX   . GET ADDRESS OF MY NUMBER   @C@[@@       LMJ   X11,UPDATE  . UPDEW
)@@G@@ATE ACCOUNT ENTRY @C@[@@       J     SL0900      . AN ERROR OF SOME SORTEX
)@@G@@@A@[@@       J     0,X3        . DIDIT    @[@[@@.     @[@[@@.     @A@[@@EY
)@@G@@GETQTA L,S2  A0,0,X2     . PUBLIC   @ @[@@       L,S3  A0,0,X2     . 4K EZ
)@@G@@@ @[@@       L,S4  A0,0,X2     . 8K @ @[@@       L,S5  A0,0,X2     . 16KFA
)@@G@@@ @[@@       L,S6  A0,0,X2     . 32K@[@[@@.     @[@[@@.     @A@[@@STRQTAFB
)@@G@@ S,S2  A0,0,X2     . PUBLIC   @ @[@@       S,S3  A0,0,X2     . 4K @ @[@@FC
)@@G@@       S,S4  A0,0,X2     . 8K @ @[@@       S,S5  A0,0,X2     . 16K@ @[@@FD
)@@G@@       S,S6  A0,0,X2     . 32K@ @[@@       ACOFF             .    @[!@@@FE
)@@G@@/.    @ @@@@       VARBLS            .    @ @[@@LSLINK RES   1          FF
)@@G@@ .    @[[@@@.     @ @@@@. PACKET FOR PROGRAM FILE ER'S@G@@[[PFWSTP  EQU FG
)@@G@@   5              . ELEMENT TYPE FOR WORKSPACES (RELOCATABLE@[@@@@.     FH
)@@G@@@D@@@@PFPKT  'APL$FILE'        . FILE NAME ( VIA @USE )     @D@@@@PFELT FI
)@@G@@ 'ELTNAME'         . ELEMENT NAME ( WS NAME )   @ @@@@       +     0    FJ
)@@G@@       .    @D@[@@       +     5,0         . TYPE ALWAYS RELOCATABLE    FK
)@@G@@@A@@[[        +PFWSTP,0             .     @E[@@@PFLIB  ' LIB # '        FL
)@@G@@ . VERSION NAME ( LIBRARY NUMBER )  @G@[@@PREADD +     0           . ADDFM
)@@G@@RESS OF PREAMBLE ( DIRECTORY ADDRESS )    @E@[@@       +     0          FN
)@@G@@ . PREAMBLE LENGTH (1)/TEXT LENGTH  @B@[@@TXTADD +     0           . ADDFO
)@@G@@RESS OF TEXT@D@[@@TDATE  +     0           . TIME/DATE ELEMENT CREATED  FP
)@@G@@@C@@[[PFPADR  RES    1              . PREAMBLE ADDR   @C@@[[PFPSIZ  EQUFFQ
)@@G@@   $,,H1          . PREAMBLE SIZE   @B@@[[PFTSIZ  EQUF   $,,H2          FR
)@@G@@. TEXT SIZE @A@@[[        RES    1              .     @C@@[[PFTADR  RES FS
)@@G@@   1              . TEXT ADDRESS    @B@@[[PFTDAT  RES    1              FT
)@@G@@. DATE WORD @[@@[[.     @A@@[[. TEMPORARY EQU'S FOR OLD CODE--    @[@@[[FU
)@@G@@.     @A@@[[PREADD  EQU    PFPADR         .     @A@@[[TXTADD  EQU    PFTFV
)@@G@@ADR         .     @A@@[[TDATE   EQU    PFTDAT         .     @E^@@@PRELTHFW
)@@G@@ EQUF  PFPKT+9,,H1 . LENGTH OF PREAMBLE ( ALWAYS 1 )  @B@@@@TXTLTH EQUF FX
)@@G@@ PFPKT+9,,H2 . LENGTH OF TEXT @[@@@@.     @]@@@@. I/O PACKET@[@@@@.     FY
)@@G@@@#@@@@IOPKT  'APL$FILE' @#@@@@       +     0    @ @@@@       +     $-$,0FZ
)@@G@@,0     .    @ @@@@       +     $-$,$-$     .    @ @@@@       +     $-$  GA
)@@G@@       .    @[@[@@/.    @[@[@@.     @[@[@@.     @[@[@@.     @G@[@@. TYPIGB
)@@G@@CAL CONTROL BUFFER.  LENGTH=28 WORDS ( 1 SECTOR ).  EACH BUFFER   @G@[@@GC
)@@G@@. CONSISTS OF 2 SEGMENTS OF 14 WORDS.  FIRST WORD OF EACH SEGMENT IS    GD
)@@G@@@G@[@@. A CONTROL WORD TO FAKE RELOCATABLE FORMAT.  LOAD CONTROL WORDS SGE
)@@G@@TART  @G@[@@. AT THE BOTTOM OF EACH SEGMENT AND WORK TOWARDS THE TOP.  HGF
)@@G@@1 OF THE    @G@[@@. CONTROL WORD HAS THE WORD COUNT FOR THIS LOAD, H2 COGG
)@@G@@NTAINS THE LOAD   @G@[@@. ADDRESS.  IF THE WORD COUNT IS NEGATIVE,  THISGH
)@@G@@ IS A COMPRESSED LOAD   @G@[@@. GROUP, AND THAT MANY COPIES OF THE ONE WGI
)@@G@@ORD ARE TO BE LOADED BEGINNING@H@[@@. AT THE ADDRESS IN H2.  THE FIRST WGJ
)@@G@@ORD OF EACH SEGMENT CONTAINS THE NUMBER   @G@[@@. OF LOAD GROUPS FOR THIGK
)@@G@@S SEGMENT IN HALF 2.  IF THIS COUNT IS NEGATIVE,@A@[@@. THEN THIS IS THEGL
)@@G@@ LAST SEGMENT     @[@[@@.     @F@[@@.             . . . . . . . . . . . GM
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :       :       :     GN
)@@G@@   :                        : @F@[@@.  BUFF + 0   : 040   :       :     GO
)@@G@@   :         3              : @F@[@@.             :       :       :     GP
)@@G@@   :                        : @F@[@@.             . . . . . . . . . . . GQ
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     GR
)@@G@@                            : @F@[@@.       + 1   :     FIVE WORDS TO BEGS
)@@G@@ LOADED  AT ADD             : @F@[@@.             :                     GT
)@@G@@                            : @F@[@@.             . . . . . . . . . . . GU
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     GV
)@@G@@                            : @F@[@@.       + 2   :                     GW
)@@G@@                            : @F@[@@.             :                     GX
)@@G@@                            : @F@[@@.             . . . . . . . . . . . GY
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     GZ
)@@G@@                            : @F@[@@.       + 5   :                     HA
)@@G@@                            : @F@[@@.             :                     HB
)@@G@@                            : @F@[@@.             . . . . . . . . . . . HC
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     HD
)@@G@@                            : @F@[@@.       + 6   :   WORD TO BE LOADED HE
)@@G@@ADD+5...ADD+78              : @F@[@@.             :                     HF
)@@G@@                            : @F@[@@.             . . . . . . . . . . . HG
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     HH
)@@G@@                            : @F@[@@.       + 7   :   4 WORDS TO BE LOADHI
)@@G@@ED AT ADD+79                : @F@[@@.             :                     HJ
)@@G@@                            : @F@[@@.             . . . . . . . . . . . HK
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     HL
)@@G@@                            : @F@[@@.       + 8   :                     HM
)@@G@@                            : @F@[@@.             :                     HN
)@@G@@                            : @F@[@@.             . . . . . . . . . . . HO
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     HP
)@@G@@                            : @F@[@@.       + 9   :                     HQ
)@@G@@                            : @F@[@@.             :                     HR
)@@G@@                            : @F@[@@.             . . . . . . . . . . . HS
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     HT
)@@G@@                            : @F@[@@.       + 10  :                     HU
)@@G@@                            : @F@[@@.             :                     HV
)@@G@@                            : @F@[@@.             . . . . . . . . . . . HW
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     HX
)@@G@@   :                        : @F@[@@.       + 11  :     5               HY
)@@G@@   :     ADD+79             : @F@[@@.             :                     HZ
)@@G@@   :                        : @F@[@@.             . . . . . . . . . . . IA
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     IB
)@@G@@   :                        : @F@[@@.       + 12  :     -72             IC
)@@G@@   :     ADD+5              : @F@[@@.             :                     ID
)@@G@@   :                        : @F@[@@.             . . . . . . . . . . . IE
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     IF
)@@G@@   :                        : @F@[@@.             :                     IG
)@@G@@   :                        : @F@[@@.       + 13  :     4               IH
)@@G@@   :     ADD                : @F@[@@.             . . . . . . . . . . . II
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :       :       :     IJ
)@@G@@   :                        : @F@[@@.  BUFF + 14  : 040   :       :     IK
)@@G@@   :         2              : @F@[@@.             :       :       :     IL
)@@G@@   :                        : @F@[@@.             . . . . . . . . . . . IM
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     IN
)@@G@@                            : @F@[@@.       + 15  :          9 WORDS TO IO
)@@G@@ADD+83                      : @F@[@@.             :                     IP
)@@G@@                            : @F@[@@.             . . . . . . . . . . . IQ
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     IR
)@@G@@                            : @F@[@@.       + 16  :                     IS
)@@G@@                            : @F@[@@.             :                     IT
)@@G@@                            : @F@[@@.             . . . . . . . . . . . IU
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     IV
)@@G@@                            : @F@[@@.       + 23  :                     IW
)@@G@@                            : @F@[@@.             :                     IX
)@@G@@                            : @F@[@@.             . . . . . . . . . . . IY
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     IZ
)@@G@@                            : @F@[@@.       + 24  :     30 COPIES OF THIJA
)@@G@@S WORD START ADD+101        : @F@[@@.             :                     JB
)@@G@@                            : @F@[@@.             . . . . . . . . . . . JC
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     JD
)@@G@@                            : @F@[@@.       + 25  :           FILLER ( +JE
)@@G@@ 0 )                        : @F@[@@.             :                     JF
)@@G@@                            : @F@[@@.             . . . . . . . . . . . JG
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     JH
)@@G@@   :                        : @F@[@@.       + 26  :     -30             JI
)@@G@@   :     ADD+101            : @F@[@@.             :                     JJ
)@@G@@   :                        : @F@[@@.             . . . . . . . . . . . JK
)@@G@@. . . . . . . . . . . . . . . @F@[@@.             :                     JL
)@@G@@   :                        : @F@[@@.       + 27  :     9               JM
)@@G@@   :     ADD+83             : @F@[@@.             :                     JN
)@@G@@   :                        : @F@[@@.             . . . . . . . . . . . JO
)@@G@@. . . . . . . . . . . . . . . @[@[@@/.    @[@[@@.     @C@[@@. ADDRESSES JP
)@@G@@FOR ERROR RETURNS FOR P.F. ER'S     @[@[@@.     @C@[@@PFERR +      0    JQ
)@@G@@       . NORMAL COMPLETION    @D@[@@       +     $-$         . NOFIND REJR
)@@G@@TURN, DEPENDS     @ @[@@       +     SL0900      .    @ @[@@       +    JS
)@@G@@ SL0900      .    @ @[@@       +     SL0900      .    @ @[@@       +    JT
)@@G@@ SL0920      .    @[@[@@.     @[@[@@.     @ @[@@NOTDUN APLBCI ' NOT SAVEJU
)@@G@@D, '  @ @[@@       APLBCI ' THIS WS IS '  @A@[@@NOTSVD RES   3          JV
)@@G@@ . WS NAME  @B@@[[/. PROGRAM FILE TOC READING ROUTINES--    @G@@[[.     JW
)@@G@@  THESE ROUTINES ARE USED WHENEVER WE ARE PASSING OVER THE ENTIRE @F@@[[JX
)@@G@@. TOC, RATHER THAN LOOKING FOR A SPECIFIC ELEMENT.  THE CODE IS   @G@@[[JY
)@@G@@. PROCALYZED, SO THAT IT CAN BE GENERATED TWICE IN DIFFERENT PLACES IN  JZ
)@@G@@@E@@[[. THE ADDRESS SPACE, DEPENDING ON USE.  THE TWO USES ARE:   @G@@[[KA
)@@G@@.       (1) BY THE )LIB COMMAND. THIS COPY OF THE CODE IS IN THE IBANK  KB
)@@G@@@G@@[[.           OF THE SYSTEM COMMAND REP, AS IT IS USED BY ALL USERS,KC
)@@G@@ BUT  @E@@[[.           ONLY DURING THE EXECUTION OF A SYSTEM COMMAND.  KD
)@@G@@@G@@[[.       (2) BY THE INSTALLATION MANAGER I-BEAMS.  THIS CODE IS IN KE
)@@G@@THAT  @F@@[[.           PORTION OF THE DBANK WHICH EXISTS ONLY FOR THE MKF
)@@G@@ASTER @G@@[[.           CONSOLE. COPY(1) OF THE CODE SHOULD NOT BE USED KG
)@@G@@FOR THIS    @G@@[[.           PURPOSE AS IT IS CALLED WHEN THE  EXECUTIOKH
)@@G@@N REP HAS CONTROL @E@@[[.           AND WOULD CAUSE A FLUTTER OF BANK SWKI
)@@G@@ITCHES.     @G@@[[.       SINCE THE CURCUMSTANCES UNDER WHICH THIS CODE KJ
)@@G@@IS USED ARE ALWAYS@G@@[[. PREDICTABLE, THIS METHOD OF CORE PLACEMENT IS KK
)@@G@@PREFERABLE TO PLACING A @F@@[[. SINGLE COPY OF THE CODE IN THE ROOT SEGMKL
)@@G@@ENT OF THE I-BANK .     @[@@[[.     @[@@[[.     @#@@[[P       PROC   .  KM
)@@G@@@E@@[[PSGEN*  NAME   0              . GENERATE INITIALIZATION CODE@D@@[[KN
)@@G@@PGGEN*  NAME   1              . GENERATE I/O CODE     @#@@[[        UNLIKO
)@@G@@$T .  @F@@[[PFBUFF  EQUF   0,A2           . 280 WORD BUFFER FLOATS OFF AKP
)@@G@@2     @F@@[[PFNELS  EQU    P(1,1)         . TOT NO OF ELEMENTS IN THE FIKQ
)@@G@@LE    @G@@[[PFDBAS  EQU    P(2,1)         . BASE ADDR OF ELEMENT TABLE (KR
)@@G@@DRUM SECTOR)@G@@[[PFDADR  EQU    P(2,2)         . ADDR OF DRUM RECORD CUKS
)@@G@@RRENTLY IN BUFFER @G@@[[PFLSTI  EQU    P(3,1)         . ELEMENT SEQUENCEKT
)@@G@@ NO OF LAST ELEMENT READ@G@@[[PFBIDX  EQU    P(3,2)         . INDEX (SEQKU
)@@G@@UENCE NO) INTO BUF OF LAST EL @F@@[[ DO P(0,0) , GO P$$010        . IF GKV
)@@G@@ET ENTRY, GO TO OTHER CODE    @[@@[[.     @^@@[[. INITIALIZATION ROUTINEKW
)@@G@@@[@@[[.     @G@@[[        LA,U   A1,0           . SET DRUM ADDR TO CTL SKX
)@@G@@ECT (SECTOR ZERO) @D@@[[        READ   PFBUFF,A1 28 PFEREX . GET SECTOR KY
)@@G@@ZERO  @B@@[[       LA    A0,PFBUFF   . GET 1ST WORD   @C@@[[        TE  KZ
)@@G@@   A0,PFCONS      . IS IT CORRECT?  @A@@[[       ER    ERR$        . OOPLA
)@@G@@S!    @D@@[[        SZ     PFNELS         . CLEAR NO OF ELEMENTS  @E@@[[LB
)@@G@@        LA,H2  A1,PFBUFF+3    . GET ADDR OF HEADER TABLE    @D@@[[      LC
)@@G@@  JZ     A1,1,X11       . IF NONE, FILE IS EMPTY@E@@[[        READ   PFBLD
)@@G@@UFF,A1 140 PFEREX     . GET THE TABLE     @E@@[[       LA,H2 A0,PFBUFF+1LE
)@@G@@39 . GET NUMBER OF ITEMS IN EL TABLE@A@@[[       SA    A0,PFNELS   . STALF
)@@G@@SH IT @F@@[[       AA,U  A1,5        . BUMP DRUM ADDR TO START OF ELT TALG
)@@G@@BLE   @D@@[[       SA    A1,PFDBAS   . SAVE BASE ADDR OF EL TABLE @G@@[[LH
)@@G@@        SZ     PFDADR         . DUMMY DRUM ADDR SIGNALING EMPTY BUFFER  LI
)@@G@@@B@@[[       J     1,X11       . NORMAL EXIT    @C@@[[ GO P$$020     . ELJ
)@@G@@ND OF CODE FOR INITIALIZATION @[@@[[.     @ @@[[. CODE TO READ A TOC ENTLK
)@@G@@RY--  @[@@[[.     @#@@[[P$$010* NAME   .  @G@@[[        ANU,U  A0,1     LL
)@@G@@      . FORM INDEX LESS 1 FOR DIVIDE AND TEST   @E@@[[        TG     A1,LM
)@@G@@PFNELS      . DOES DESIRED ENTRY EXIST?   @C@@[[       J      PG0140    LN
)@@G@@ . NO, TAKE NOFIND EXIT @C@@[[        LA,U   A0,0           . CLEAR FOR LO
)@@G@@DIVIDE@F@@[[       DI,U   A0,28      . INDEX DIV BY 28 ENTRIES PER BUFFELP
)@@G@@R     @G@@[[       SA    A1,PFBIDX   . SAVE REMAINDER = INDEX INTO BUF OLQ
)@@G@@F THIS ENTRY@G@@[[       MSI,U  A0,10      . BUFNUM BY 10 SECTORS/BUF = LR
)@@G@@SECTOR OFFSET     @F@@[[       AA    A0,PFDBAS   . PLUS BASE OF TABLE=DRLS
)@@G@@UMADDR OF BUF     @D@@[[        TNE    A0,PFDADR      . IS THIS BLOKC INLT
)@@G@@ CORE?@D@@[[        J      PG0120         . YES, DON'T REREAD IT  @G@@[[LU
)@@G@@        SA     A0,PFDADR      . ELSE REMEMBER IT FOR NEXT TIME THRU     LV
)@@G@@@G@@[[        LA     A1,A0          . AND SET IT UP FOR USE BY DUMB READLW
)@@G@@ PROC @G@@[[        READ   PFBUFF,A1 280 PFEREX     . GET A FULL BUFFER'LX
)@@G@@S WORTH     @B@@[[. SET UP ADDR OF DESIRED ENTRY IN BUFFER  @C@@[[PG0120LY
)@@G@@  LA     A0,PFBIDX      . GET ITS INDEX   @G@@[[       MSI,U A0,10      LZ
)@@G@@ . TIMES 10 WDS PER ENTRY=WORD OFFSET INTO BUFF @G@@[[       AA,U  A0,PFMA
)@@G@@BUFF   . PLUS BASE ADDR = ADD IN BUFF OF THIS ENTRY   @B@@[[. RETURN LEAMB
)@@G@@VING CORE ADDR OF ENTRY IN A0 @B@@[[       J     1,X11       . AND GO HOMC
)@@G@@ME    @#@@[[. NO FIND EXIT    @C@@[[PG0140 SSL   A0,36       . CLEAR BUFMD
)@@G@@F POINTER   @A@@[[       J     1,X11       . AND QUIT @[@@[[.     @A@@[[ME
)@@G@@P$$020* NAME   . EXIT FROM PROC     @C@@[[PFEREX  ERROR  YIOERR         MF
)@@G@@. SIGNAL I/O ERROR@B@@[[        J      0,X11          . AND RETURN@#@@[[MG
)@@G@@        LI$T   .  @#@@[[        END    .  @[@@[[.     @G@@[[. THE PFNEXTMH
)@@G@@ ROUTINE (BELOW) IS ONLY USED FOR SEQUENTIAL SEARCH BY )LIB @[@@[[.     MI
)@@G@@@E@@[[        INSTRS . PUT INTO I-BANK (OF SYSTEM COMMAND REP)    @ @@[[MJ
)@@G@@PFNEXT  SX     X11,PNLINK     @[@@[[.     @G@@[[PN0010  LA     A0,PFLSTIMK
)@@G@@           . INDEX OF LAST ENTRY WE LOOKED AT   @F@@[[        AA,U   A0,ML
)@@G@@1                . SET TO LOOK AT NEXT ENTRY    @E@@[[        SA     A0,MM
)@@G@@PFLSTI           . REMEMBER FOR NEXT TIME @C@@[[        LMJ    X11,PFGETMN
)@@G@@           . THEN GET IT@A@@[[        J      PN0900              .@G@@[[MO
)@@G@@        JZ     A0,PN0020           . NOFIND- NO MORE ENTRIES TO LOOK AT MP
)@@G@@@G@@[[        TP     3,A0                . TEST TO SEE IF THIS ELT IS DEMQ
)@@G@@LETED @F@@[[        J      PN0010              . DELETED ,  SKIP TO NEXTMR
)@@G@@ ONE  @C@@[[        LA,S3  A1,3,A0             . GET TYPE   @H@@[[      MS
)@@G@@  JNE,U  A1,PFWSTP PN0010    . IF NOT TYPE USED FOR WORKSPACES, SKIP ON MT
)@@G@@@I@@[[        JZ     A3,PN0020           . IF NOT CHECKING VERSIONS (MASMU
)@@G@@TER CONS), QUI    @H@@[[        DTE    A3,4,A0             . IS VERSION MV
)@@G@@NAME A MATCH (I.E. LIBNO OK?) @D@@[[        J      PN0010              .MW
)@@G@@ NO, GO TO NEXT   @#@@[[. NORMAL EXIT     @A@@[[PN0020  LX     X11,PNLINMX
)@@G@@K          .@^@@[[        J      1,X11    @A@@[[PN0900  LX     X11,PNLINMY
)@@G@@K          .@A@@[[        J      0,X11               .@[@@[[.     @D@@[[MZ
)@@G@@. GENERATE SETUP AND SEARCH CODE USED BY )LIB COMMAND @[@@[[.     @F@@[[NA
)@@G@@PFSET   PSGEN  PFNELS PFDBAS,PFDADR PFLSTI,PFBIDX . INITIALIZATION@F@@[[NB
)@@G@@PFGET   PGGEN  PFNELS PFDBAS,PFDADR PFLSTI,PFBIDX . ELEMENT FETCH @[@@[[NC
)@@G@@.     @#@@[[       VARBLS   . @A@@[[PNLINK  EQUF   $,,H1          .     ND
)@@G@@@E@@[[PFNELS  EQUF   $,,H2          . NUMBER OF ELEMENTS IN TOC   @G@@[[NE
)@@G@@        +0     . DUMMY VALUE TO FORCE FAILURE IN FNS IF NOT IMITIALIZED NF
)@@G@@@F@@[[PFDBAS  EQUF   $,,H1          . BASE SECTOR ADDR OF ELEMENT TABLE NG
)@@G@@@F@@[[PFDADR  EQUF   $,,XH2         . DRUM ADDR OF CURRENT BUF CONTENTS NH
)@@G@@@G@@[[        +0     . DUMMY VALUE TO FORCE FAILURE IN FNS IF NOT IMITIANI
)@@G@@LIZED @G@@[[PFLSTI  EQUF   $,,H1          . INDEX INTO BUFFER OF LAST 10NJ
)@@G@@-WD ENTRY   @F@@[[PFBIDX  EQUF $,,H2       . INDEX INTO BUF OF CURRENT TNK
)@@G@@OC ENTRY    @G@@[[        +0     . DUMMY VALUE TO FORCE FAILURE IN FNS INL
)@@G@@F NOT IMITIALIZED @[@@[[.     @E@@[[. NOW REPEAT THE ABOVE CODE IN THE MNM
)@@G@@ASTER CONSOLE DBANK     @[@@[[.     @#@@[[        MASTER .  @D@@[[PFSETMNN
)@@G@@  PSGEN  PFNELS PMDBAS,PMDADR PMLSTI,PMBIDX .   @D@@[[PFGETM  PGGEN  PFNNO
)@@G@@ELS PMDBAS,PMDADR PMLSTI,PMBIDX .   @[@@[[.     @A@@[[PMDBAS  EQUF   $,,NP
)@@G@@H1          .     @A@@[[PMDADR  EQUF   $,,XH2         .     @G@@[[      NQ
)@@G@@  +0     . DUMMY VALUE TO FORCE FAILURE IN FNS IF NOT IMITIALIZED @A@@[[NR
)@@G@@PMLSTI  EQUF   $,,H1          .     @A@@[[PMBIDX  EQUF   $,,H2          NS
)@@G@@.     @G@@[[        +0     . DUMMY VALUE TO FORCE FAILURE IN FNS IF NOT NT
)@@G@@IMITIALIZED @[@@[[.     @#@@[[        VARCON .  @F@@[[PFCONS  '**PF**'  NU
)@@G@@  . THIS CONST IN DBANK IS ACCESSED BY BOTH REPS@[_@@@/.    @ @@@@      NV
)@@G@@ CONSTS            .    @ @[@@FREE*  '@FREE APL$FILE . '    @ [@@@CLWS  NW
)@@G@@ APLBCI 'CLEAR WS    '  @ @@@@CONT   APLBCI 'CONTINUE    '  @]@@@@      NX
)@@G@@ END  ___     SA     A0,PFLSTI           . REMEMBER FOR NEXT TIME @C@@[[NY
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************NZ
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APOA
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         OB
)@@G@@                            * @^@@@@       AXR$         .   @C@@@@      OC
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINOD
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.OE
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTOF
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONOG
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@OH
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * OI
)@@G@@@G@@@@.                                                                 OJ
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                OK
)@@G@@          * @G@@@@. ****************************************************OL
)@@G@@***************** @[@@@@.     @[@@@@.     @C@@@@       CBLOCK           OM
)@@G@@ . DEFINE BLOCK TYPES   @D@@@@/.    MICRO-INSTRUCTIONS OF SIMULATED APL ON
)@@G@@MACHINE     @[@@@@.     @G@@@@. VERIFY --THIS ENTRY DECODES OPERANDS - IOO
)@@G@@T IS ALWAYS INVOKED BY USE    @G@@@@. OF ONE OF THE ENTRIES TO THE VERIFOP
)@@G@@Y PROC (LOCATED IN ELEMENT 'ACTION')@G@@@@. FOR AN EXPLANATION OF FUNNY OQ
)@@G@@CALLING SEQUENCE, SEE PROC DEFINITION     @[@@@@.     @#@@@@       INSTROR
)@@G@@S  .  @C@@@@VERIF$* SA,H2 A0,VFLINK   . SAVE  LINK ADDR     @C@@@@      OS
)@@G@@ SA    A2,VFSTFL   . SAVE ERROR EXIT FLAG @F@@@@       JZ    A1,VF0004  OT
)@@G@@ . IF ALREADY POPPED, GO EXAMINE STACK    @C@@@@       POP   A6         OU
)@@G@@ . ELSE GET TOP OF STACK@E@@@@VF0004 JN    A6,VF0010   . IF DUMMY DESCR,OV
)@@G@@ GO DECODE IT     @C@@@@       TEP,U A6,0400000  . IS STACKMARK BIT OFF?OW
)@@G@@@C@@@@       J     1,A0        . TAKE STAKMARK EXIT   @D@@@@VF0010 LA   OX
)@@G@@ A1,VFLINK   . GET POINTER BACK TO ARGLIST@D@@@@       JZ    A6,VF0080  OY
)@@G@@ . IF NO DESCR, VALUE ERROR   @C@@@@       LA,U  A4,ZTPNAM   . FLAG FOR OZ
)@@G@@COMPARISONS @F@@@@. INSTRUMENTATION SEZ THIS LOOP IS DONE A LOT, SO KEEPPA
)@@G@@ IT SMALL   @F@@@@VF0020 LA    A0,A6       . PUT DESCR ADDR WHERE WE CANPB
)@@G@@ USE IT     @ @@@@       ABSADR A0         .    @C@@@@       TE,S1 A4,0,PC
)@@G@@A0     . IS IT A NAME BLOCK?  @D@@@@       J     VF0030      . NO, GO STPD
)@@G@@ART DECODING IT   @F@@@@       LA,XH2 A6,1,A0    . YES, GET NEXT DESCR APE
)@@G@@DDR FROM THIS BLOK@F@@@@       JNZ   A6,VF0020   . IF IT REALLY EXISTS, PF
)@@G@@GO LOOK AT IT     @E@@@@       J     VF0080      . OTHERWISE, TAKE VALUEPG
)@@G@@ ERROR EXIT @B@@@@. WE HAVE A NON-NAME BLOCK, DECODE IT     @B@@@@VF0030PH
)@@G@@ DL    A2,0,A0     . PICK IT UP     @E@@@@       EX    0,A1        . ANDPI
)@@G@@ IF CALL SEQ WANTS, SAVE IT   @B@@@@       DSL   A2,30       . TYPE TO APJ
)@@G@@2     @B@@@@       DSL   A3,30       . AND MODE TO A3 @B@@@@       TE,U PK
)@@G@@ A3,ZMOUNK   . IS IT UNKNOWN? @A@@@@       TNE,U A3,ZMONUL   . OR NULL ?PL
)@@G@@@D@@@@       J     VF0090      . YES, TAKE NULL MODE EXIT   @B@@@@      PM
)@@G@@ DSL   A4,30       . RANK TO A4     @B@@@@       SSA   A5,18       . LENPN
)@@G@@GTH TO A5   @G@@@@       JNE,U A2,ZTPLIT VF0040 . IF NOT A LIT, CONTINUEPO
)@@G@@ NORMAL DECODING  @F@@@@       LA,U  A0,1,A0     . FOR LITS, DATA ADDR APP
)@@G@@LWAYS=DESCR+1     @D@@@@       TE,U  A4,ZRANKS   . IS THIS DATUM A SCALAPQ
)@@G@@R?    @C@@@@       J     3,A1        . NO, WE'RE FINISHED   @D@@@@      PR
)@@G@@ LA,U    A5,1      . YES, SET LENGTH TO UNITY   @B@@@@       TNE,U A3,ZMPS
)@@G@@OHFI   . IS IT HALFINT? @G@@@@       ANA,U A0,1        . YES, ADJUST DATPT
)@@G@@A ADDR; DATA IS IN THE DESCR  @C@@@@       J     3,A1        . GO BACK TPU
)@@G@@O CALLER    @B@@@@. WE NOW KNOW THAT EXIT WILL BE NORMAL    @D@@@@VF0040PV
)@@G@@ LA,U  A1,3,A1     . GET ADDR FOR NORMAL EXIT   @A@@@@       SA    A1,VFPW
)@@G@@LINK   . SAVE IT  @B@@@@       TE,U  A4,ZRANKS   . IS DATA SCALAR?@C@@@@PX
)@@G@@       J     VF0050      . NO, GO DECODE ARRAY  @F@@@@       LA    A0,A5PY
)@@G@@       . ANTICIPATING CHAR/DFLOAT, GET DATA ADDR@D@@@@       TNE,U A3,ZMPZ
)@@G@@OHFI   . DID WE GUESS CORRECTLY?    @F@@@@       LA    A0,A6       .  NOQA
)@@G@@, DATA IS IN THE DESCRIPTOR INSTEAD @B@@@@       LA,U  A5,1        . FORQB
)@@G@@CE LENGTH=1 @A@@@@       J     VF0070      . AND EXIT @G@@@@VF0050 JE,U QC
)@@G@@ A4,ZRANKV VF0060 . IF DATUM IS VECTOR, DON'T NEED DIMVECT  @F@@@@      QD
)@@G@@ LA,H1 A1,1,A0     . GET DIMV ADDR FROM 2ND WD OF DESCR     @E@@@@      QE
)@@G@@ LA,XU A1,0,A1     . IN CASE ITS DUMMY, SIGN EXTEND IT@E@@@@       SA   QF
)@@G@@ A1,A7       . AND SAVE RELADR OF DIM DESCR     @ @@@@       ABSADR A1  QG
)@@G@@       .    @G@@@@       LA,XH2 A1,1,A1     . GET DIM DATA ADDR FROM WORQH
)@@G@@D 2 OF DIMV DESCR @ @@@@       ABSADR A1         .    @E@@@@VF0060 LA,XHQI
)@@G@@2 A0,1,A0     . GET DATA ADDR FROM WD 2 OF DESCR@E@@@@VF0070 ABSADR A0  QJ
)@@G@@       . FORCE ADDR OF DATA TO ABSOLUTE   @C@@@@       J     *VFLINK    QK
)@@G@@ . TAKE NORMAL EXIT     @^@@@@. UNDEFINED VALUE EXIT  @E@@@@VF0080 TZ   QL
)@@G@@ VFSTFL      . WAS THIS A STORE TYPE ENTRY?     @F@@@@       J     2,A1 QM
)@@G@@       . YES, EXIT LEAVING NAMEBLOK ADDR IN A0  @C@@@@       J     VF009QN
)@@G@@5      . TAKE VALUE ERROR EXIT@#@@@@. NULL MODE EXIT  @D@@@@VF0090 DSL  QO
)@@G@@ A4,72       . CLEAR RANK AND LENGTH REGS @G@@@@       TZ    VFSTFL     QP
)@@G@@ . WAS THIS ENTRY FOR A STORE-TYPE OPERATION?   @F@@@@       J     3,A1 QQ
)@@G@@       . YES, NULL IS LEGAL. TAKE NORMAL EXIT   @D@@@@VF0095 ERROR YVALUQR
)@@G@@E      . OTHERWISE SET ERROR FLAG   @C@@@@       LA,H2 A1,VFLINK   . PICQS
)@@G@@K UP LINK WORD    @C@@@@       J     2,A1        . AND TAKE ERROR EXIT  QT
)@@G@@@[@@@@.     @#@@@@       VARCON .   @G@@@@VFLINK +0,$-$            . ***QU
)@@G@@** CAUTION***** INDIRECTION THRU HERE     @#@@@@       VARBLS .   @D@@@@QV
)@@G@@VFSTFL RES   1           . NON-ZERO IF A STORE ENTRY  @F@@@@/.    FUZZINQW
)@@G@@G RTNES (FLOOR AND CEILING)-ALWAYS CALLED BY USING    @B@@@@.     THE PRQX
)@@G@@OCS FUZZUP/FUZZDN  IN 'ACTION'@[@@@@.     @D@@@@       FUZDEF           QY
)@@G@@ . DEFINE FUZZING CONSTANTS   @#@@@@       INSTRS  .  @E@[@@FUZER$* DFU QZ
)@@G@@ A1,A4       . QUICK UNPACK TO CHECK FOR...     @C@[@@       TLE,U A1,01RA
)@@G@@00     . VERY TINY NUMBER???  @D@[@@       J     FZ0005      . YES, ZERORB
)@@G@@ IS A SPECIAL CASE@D@[@@       DL    A1,A4       . RECOVER ORIGINAL VALURC
)@@G@@E     @E@[@@       DFA   A1,0,A0     . ADD ZERO/ONE FOR FLOOR/CEILING   RD
)@@G@@@C@[@@       TP    A4          . IS VALUE NEGATIVE    @G@[@@       DFAN RE
)@@G@@ A1,(+1.0D)  . YES FIX 'CAUSE TRUNCATION GOES TOWARD ZERO   @G@[@@      RF
)@@G@@ DFM   A4,WSFUZZ    . COMPUTE ABSOLUTE ERROR FROM PERCENT ERR     @E@[@@RG
)@@G@@       DLM   A4,A4       . BE SURE ABS ERROR HAS RIGHT SIBN @C@[@@      RH
)@@G@@ TZ    0,A0        . IS THIS CEILING?     @G@[@@       DLN   A4,A4      RI
)@@G@@ . YES, FUZZ SHOULD BE SUBTRACTED, NOT ADDED    @F@[@@       DFA   A1,A4RJ
)@@G@@       . ROUND NO BEING FUZZED BY ABSOLUTE ERROR@B@[@@       DFA   A1,(+RK
)@@G@@02074D*/60) . TRUNCATE  @F@[@@       JNZ   A1,FZ0010   . IF RESULT NON-ZRL
)@@G@@ERO, GO TEST FOR HALFINT@E@[@@FZ0005  DSL   A1,72       . ELSE BE SURE IRM
)@@G@@TS A PLUS ZERO    @B@@[[FUZER$* DLM    A1,A4     . GET MAGNITUDE  @B@@[[RN
)@@G@@        TLE    A1,WSFUZZ . LESS THAN FUZZ?@B@@[[        J      FZ0007   RO
)@@G@@ . YES, FORCE ZERO@E@@[[        DFM    A1,WSFUZZ . NO, GET ABSOLUTE ERRORP
)@@G@@R TO ALLOW  @E@@[[        SA     A1,FZAERR . SAVE THAT WHICH WE CARE ABORQ
)@@G@@UT    @A@@[[. COMPUTE TRUE (UNFUZZED) CEIL/FLOOR@D@@[[        DL     A1,RR
)@@G@@A4     . RECOVER ORIGINAL VALUE     @C@@[[        DFA    A1,(+02074D*/60RS
)@@G@@)    . TRUNCATE IT@E@@[[        DTE    A1,A4     . A HARD INTEGER TO START
)@@G@@RT WITH?    @B@@[[        J      $+2       . NO, CONTINUE   @B@@[[      RU
)@@G@@  J      FZ0005    . YES, WE'RE DONE@D@@[[        TP     A4        . NO,RV
)@@G@@ IS ORIG VAL POSITIVE?  @E@@[[        DFAN   A1,(+1.0D)     . NO, COMPENRW
)@@G@@SATE NEG VALUE    @E@@[[        DFA    A1,0,A0   . IF CEIL, BUMP TRUNCATRX
)@@G@@ED VAL BY 1 @C@@[[. CHECK FOR ORIGINAL VAL WITHIN FUZZ OF TRUE    @C@@[[RY
)@@G@@        DFAN   A4,A1     . ORIGINAL LESS TRUE   @D@@[[        DLM    A4,RZ
)@@G@@A4     . USE ABSVAL IN COMPARISON   @D@@[[        TLE    A4,FZAERR . ERRSA
)@@G@@OR LESS THAN DIFFERENCE?@E@@[[        J      FZ0005    . NO, RAW VALUE WSB
)@@G@@AS A FUZZY INTEGER@E@@[[. IF NOT FUZZY TRUE, SEE IF FUZZY OF NEXT INTEGESC
)@@G@@R VALUE     @D@@[[        DLN    A4,A4     . GET NEGATIVE OF DIFFERENCE SD
)@@G@@@F@@[[        DFA    A4,(+1.0D)     . PLUS 1 GIVES DIST TO NEXT INTEGER SE
)@@G@@@C@@[[        TG     A4,FZAERR . IS ERR .GT. DIFF?    @F@@[[        J   SF
)@@G@@   FZ0005    . NO, BETWEEN INTS SO USE ORIGINAL VAL   @B@@[[. TRUNCATIONSG
)@@G@@ WENT WRONG WAY, FUDGE IT BACK@D@@[[        DL     A4,0,A0   . GET FLOORSH
)@@G@@/CEIL FLAG (0/1)  @A@@[[        TNZ    A4        . CEILING? @D@@[[      SI
)@@G@@  DLN    A4,(+1.0D)     . NO FLOOR, FLIP THE ONE@F@@[[        DFAN   A1,SJ
)@@G@@A4     . CHG TRUE FLOOR TO CEIL OR VICE VERSA   @A@@[[. IF ZERO, BE SURESK
)@@G@@ ITS A PLUS ZERO  @E@@[[FZ0005  JNZ    A1,FZ0010 . NON-ZERO, GO TEST FORSL
)@@G@@ HALFINT    @D@@[[FZ0007  DSL    A1,72     . ZERO, FORCE POSITIVE SIGNEDSM
)@@G@@@AJ@@@       J     2,A0        . AND EXIT @E@@@@FZ0010 DFU   A3,A1      SN
)@@G@@ . SEPARATE EXPONENT AND FRACTION   @D@@@@       TG,U  A3,02000+18 . WILSO
)@@G@@L RESULT FIT IN 17 BITS?@A@@@@       J     2,A0        . NO, QUIT @C@@@@SP
)@@G@@       LNA   A3,A3       . YES, INVERT SHIFT CT @E@@@@       DSA   A4,02SQ
)@@G@@074,A3 . ALIGN BINARY PT TO FAR RIGHT     @C@@@@       DL    A1,A4      SR
)@@G@@ . MOVE TO RESULT REGS  @A@@@@       J     2,A0        . AND QUIT @[@@@@SS
)@@G@@.     @C@@@@. CONVERSION OF DFLOAT NOS TO LOGICAL HALFINTS  @[@@@@.     ST
)@@G@@@#@@@@P      PROC  .    @B@@@@DFCONV* NAME . P(1,1) IS LEFT OF REG PAIR SU
)@@G@@@ @@@@       UNLI$T            .    @D@@@@       SZ    DFFLAG      . CLESV
)@@G@@AR SUBTRACTION FLAG     @D@@@@       TLE   P(1,1),(+0.5D)   . GTR THAN OSW
)@@G@@NE HALF?    @C@@@@       J     $+3         . NO, DON'T ADJUST     @F@@@@SX
)@@G@@       SA    P(1,1),DFFLAG    . YES, REMENBER THAT WE DID THIS    @C@@@@SY
)@@G@@       DFAN  P(1,1),(+1.0D)   . AND CONPENSATE  @D@@@@       DLM   P(1,1SZ
)@@G@@),P(1,1)    . BE SURE WE HAVE ABSVAL@G@@@@       DFAN  P(1,1),WSFUZZ    TA
)@@G@@. AND SUBTRACT THE FUZZING PERCENTAGE     @E@@@@       JP    P(1,1),0,A0TB
)@@G@@ . IF > OR = FUZZCONST, NOT LOGICAL @D@@@@       DSL   P(1,1),72   . ELSTC
)@@G@@E OK, CLEAR RESULT VALUE@C@@@@       TZ    DFFLAG      . DID WE SUBTRACTTD
)@@G@@?     @D@@@@       LA,U  P(1,1)+1,1  . YES, RESTORE THE ANSWER    @#@@@@TE
)@@G@@       LI$T  .    @#@@@@       END   .    @D@@@@. GENERATE APPROPRIATE CTF
)@@G@@ODE, DEPENDING ON THE REGS    @D@@@@DFLGA1* DFCONV A1        . FOR LEFT TG
)@@G@@ARGS (IN A1,A2)   @B@@@@       J     1,A0        . NORMAL EXIT    @D@@@@TH
)@@G@@DFLGA4* DFCONV A4        . FOR RIGHT ARGS (IN A4,5)   @ @@@@       J    TI
)@@G@@ 1,A0        .    @ @@@@       VARBLS            .    @C@@@@DFFLAG RES  TJ
)@@G@@ 1           . SUBTRACTION FLAG     @D@@[[FZAERR  RES    1         . MOSTK
)@@G@@T SIGNOF PART OF ABS ERR@ @@@@       END               .    ___@[[      TL
)@@G@@  TLE    A4,FZAERR . ERROR LESS THAN DIFFERENCE?@E@@[[        J      FZ0TM
)@@G@@005    . NO, RAW VALUE WAS A FUZZY INTEGER@E@@[[*[S@@@*SDFF*@G@@@@. ****TN
)@@G@@***************************************************************** @G@@@@TO
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * TP
)@@G@@@G@@@@.                                                                 TQ
)@@G@@    * @G@@@@       AXR$         .                                       TR
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        TS
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        TT
)@@G@@                      * @G@@@@       WSDEF.      DEFINE WORKSPACE       TU
)@@G@@                            * @G@@@@WORKSP INFO  2 20.      SET ASIDE THTV
)@@G@@E SPACE                           * @G@@@@       RUNCTL.     DEFINE RUN TW
)@@G@@CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.      TX
)@@G@@AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCK     TY
)@@G@@       . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.           TZ
)@@G@@                                                          * @G@@@@. END UA
)@@G@@OF STANDARD PROC BLOCK                                          * @G@@@@UB
)@@G@@. ********************************************************************* UC
)@@G@@@[@@@@.     @[@@@@.     @#@@@@       SKMARX .   @G@@@@.                 UD
)@@G@@       PROCS USED TO HOUSEKEEP FOR OPERAND ERASURE--  @#@@@@C      PROC UE
)@@G@@   .  @#@@@@CLEAR* NAME .     @#@@@@       UNLI$T .   @G@@@@K DO C-1  , UF
)@@G@@I$ 05,C(K,3),0,C(K,2),2*C(K,*2)+C(K,*1),C(K,1) . SZ WORD    @#@@@@      UG
)@@G@@ LI$T .     @]@@@@       END .@[@@@@.     @ @@@@/.   MIXED VECTOR OPERATUH
)@@G@@IONS  @[@@@@.     @#@@@@       INSTRS .   @ @@@@SIZE*  SX    X11,SZLINK UI
)@@G@@ .    @E@@@@       VERIFY SZ0900,,SZ0990 . POP AND DECODE THE ARGUMENT  UJ
)@@G@@@F@@@@       SA    A6,RITDSC   .   SAVE POINTER TO ARGUMENT FOR ERASEINGUK
)@@G@@@F@@@@       SA,H2 A4,SZDUMY   . RANK TO LENGTH POINTER OF RESULT DESCR UL
)@@G@@@G@@@@       SA,H1 A5,SZDUMY+1 . LENGTH TO ERSATZ DATA LOC, IN CASE OF VUM
)@@G@@ECTOR @B@@@@       TNE,U A4,ZRANKV   . IS IT VECTOR?  @F@@@@       LA,U UN
)@@G@@ A1,SZDUMY+1 . YES, USE 2ND WD OF DESCR AS DATA ADDR  @E@@@@       RELADUO
)@@G@@R A1         . REL ADDR OF DATA=DIMVECT OF OLD  @F@@@@       SA,H2 A1,SZUP
)@@G@@DUMY+1 . AND PUT INTO DATA POINTER OF DESCR     @C@@@@       LA,U  A6,SZUQ
)@@G@@DUMY   . ADDR OF DUMMY DIMVECT@ @@@@       RELADR A6         .    @B@@@@UR
)@@G@@       LMJ   X11,DUPE    . MAKE THE RESULT@ @@@@       J     SZ0990     US
)@@G@@ .    @B@@@@       PUSH  A2          . RESULT TO STACK@ @@@@       LX   UT
)@@G@@ X11,SZLINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    @[@@@@UU
)@@G@@.     @C@@@@SZ0900 ERROR YSYNTA,SZ0990 . STACKMARK IS ERROR @F@@@@SZ0910UV
)@@G@@ ERROR YWSFUL,SZ0990 . WORKSPACE FULL, NO ROOM FOR RESULT   @ @@@@SZ0990UW
)@@G@@ LX    X11,SZLINK  .    @ @@@@       J     0,X11       .    @#@@@@      UX
)@@G@@ VARBLS .   @ @@@@SZLINK RES   1           .    @#@@@@       VARCON .   UY
)@@G@@@B@@@@SZDUMY CBLOCK ZTPTMP,ZMOHFI,ZRANKV,0 0 .  @]@@@@/. RESHAPE--@#@@@@UZ
)@@G@@       INSTRS  .  @^@@@@RESHAP* SX   X11,RSLINK @D@@@@       CLEAR RSDESVA
)@@G@@C+1,,H1 RSRDSC   . CLEAR DESCR LOCNS@^@@@@       LMJ   X11,PIKLFT @A@@@@VB
)@@G@@       J     RS0350           .     @F@@@@       SA    A6,LFTDSC   .   SVC
)@@G@@AVE POINTER TO ARGUMENT FOR ERASEING@G@[@@       COMJMP A3,RS0915 ZMOUNKVD
)@@G@@,RS0910 ZMONUL,RS0910 ZMOHFI,RS0030 ;     @B@[@@             ZMODFL,RS00VE
)@@G@@30 ZMOCHR,RS0020 .@E@[@@RS0020 JZ    A5,RS0040   . LEFTARG CHAR, IF NULLVF
)@@G@@ ALLOW IT   @C@[@@       J     RS0920      . ELSE DOMAIN ERROR    @D@[@@VG
)@@G@@. AT THIS POINT ALL LEFT ARGS ARE EITHER HFI OR DFL   @A@[@@RS0030 TLE,UVH
)@@G@@ A5,MAXSUB+1      .     @A@[@@       JP    A5,RS0040        .     @A@[@@VI
)@@G@@       ERROR YLENGT,RS0350    .     @A@[@@RS0040 TE,U  A4,ZRANKS        VJ
)@@G@@.     @A@[@@       TNE,U A4,ZRANKV        .     @A@[@@       J     RS004VK
)@@G@@5           .     @A@[@@       ERROR YDOMAI,RS0350    .     @D@@[[      VL
)@@G@@ JMRTST ZRANKV,RS0930 ZMOHFI,ZMODFL,RS0920  .   @F@@[[       JLE,U A5,MAVM
)@@G@@XSUB+1 RS0925    . IF TOO LONG, LENGTH ERROR    @FG@@@RS0045 SA,S3 A5,RSVN
)@@G@@DESC        .    LENGTH OF LEFT IS RANK OF RIGHT@G@@@@       SA,H2 A5,RSVO
)@@G@@DIMD        .    AND ALSO THE LENGTH OF THE DIM VEC   @F@@@@       LA,U VP
)@@G@@ A6,RESDIM        .    GET ADDRESS OF DIMENSION VECTOR@E@@@@       RELADVQ
)@@G@@R A6              .    FIND ITS PROG REL EQUIV.,@F@@@@       SA    A6,RSVR
)@@G@@DIMD+1      .    AND PUT IT IN THE DESCRIPTOR   @F@@@@       LA,U  A6,RSVS
)@@G@@DIMD        .    ALSO GET PNTR TO DIM VEC DESC  @A@@@@       RELADR A6  VT
)@@G@@            .     @G@@@@       SA,H1 A6,RSDESC+1      .    AND STICK IT VU
)@@G@@IN THE RIGHT PLACE.     @G@@@@       LA    A3,(+1,0)        .    INITIALVV
)@@G@@IZE REG FOR DIM VEC STASH     @G@@@@       LA,U  A6,1             .    AVW
)@@G@@ND ALSO THE REG FOR FINDING LENGTH  @D@@@@RS0050 JNGD  A14,RS0080  . EXIVX
)@@G@@T WHEN LEFTARG EXHAUSTED@D@@@@       LMJ   X4,0,X4          .    GET NEXVY
)@@G@@T DIMENSION @D@@@@       JN    A1,RS0920        .    IF NEG, ERROR OUT  VZ
)@@G@@@F@@@@       JZ    A1,RS0060        .    IF LEFT HALF ZERO DONT FUZZ    WA
)@@G@@@F@@@@       DL    A4,A1            .    CHANGE REGS FOR THE FUZZ DOWN  WB
)@@G@@@F@@@@       SA    A3,RSAREG        .    SAVE A3 AS FUZZDN KILLS IT     WC
)@@G@@@A@@@@       FUZZDN                 .     @D@@@@       JNZ   A1,RS0920  WD
)@@G@@   .  IF NOT HFI, ERROR OUT   @C@@@@       LA    A3,RSAREG        .    RWE
)@@G@@ESTORE  A3  @F@@@@RS0060 MSI   A6,A2            .    ITS OK, SO MULTIPLYWF
)@@G@@ IT IN.     @F@@@@       TG,U  A6,0400000       .    ARE WE STILL WITHINWG
)@@G@@ RANGE ?    @C@@@@       J     RS0920           .    NO, ERROR OUT@E@@@@WH
)@@G@@       SA,H1 A2,RESDIM,A3     .    YES, PUT IT IN THE DIMVEC@D@@@@      WI
)@@G@@ JNGD  A14,RS0080  . EXIT WHEN LEFTARG EXHAUSTED@F@@@@       LMJ   X4,0,WJ
)@@G@@X4          .    YES, SO GO THROUGH EVERYTHING  @D@@@@       JN    A1,RSWK
)@@G@@0920        .    AL LOVER AGAIN     @A@@@@       JZ    A1,RS0070        WL
)@@G@@.     @A@@@@       DL    A4,A1            .     @F@@@@       SA    A3,RSWM
)@@G@@AREG        .    SAVE A3 AS FUZZDN KILLS IT     @A@@@@       FUZZDN     WN
)@@G@@            .     @A@@@@       JNZ   A1,RS0920        .     @C@@@@      WO
)@@G@@ LA    A3,RSAREG        .    RESTORE  A3  @A@@@@RS0070 MSI   A6,A2      WP
)@@G@@      .     @A@@@@       TG,U  A6,0400000       .     @A@@@@       J    WQ
)@@G@@ RS0920           .     @A@@@@       SA,H2 A2,RESDIM,*A3    .     @C@@@@WR
)@@G@@       J     RS0050      . GO BACK FOR NEXT     @H@@@@RS0080 SA,H2 A6,RSWS
)@@G@@DESC        . SAVE TOTAL LENGTH OF RESULT IN DUMMY DESCR    @ @@@@. SET WT
)@@G@@UP SCAN OVER RIGHT ARG  @D@@@@RS0100 LMJ   X11,PIKLFT  . (BUT USE LEFTARWU
)@@G@@G REG SET ) @^@@@@       J     RS0350     @F@@@@       SA    A6,RITDSC  WV
)@@G@@ .   SAVE POINTER TO ARGUMENT FOR ERASEING@B@@@@       TNE,U A4,ZRANKS  WW
)@@G@@ . IS IT SCALAR?  @G@@@@       LA,U  A5,0177777       . YES- USE LARGE CWX
)@@G@@T TO INHIBIT REG RELOAD @E@@@@       SA    A5,RSRCNT   . SAVE LENGTH FORWY
)@@G@@ CYCLIC PICKUP    @E@@@@       SX    X4,RSREGA   . SAVE XREGS FOR POSSIBWZ
)@@G@@LE RESET    @ @@@@       SX    X5,RSREGB   .    @A@@@@       LA    A1,A3XA
)@@G@@       . GET MODE @A@@@@       LA,U  A0,RSDESC        .     @D@@@@      XB
)@@G@@ LMJ   X11,PUTANS  . AND PREPARE TO STASH RESULT@ @@@@       J     RS025XC
)@@G@@0      .    @D@@@@       PUSH  A6 RS0915         .  RESULT DESC TO STACKXD
)@@G@@@C@@@@       LR    R1,A5       . SET COUNT FOR TARGET @E@@@@       JNGD XE
)@@G@@ R1,RS0120   . IF TARGET IS NULL, WE'RE DONE    @D@@@@       LR    R2,RSXF
)@@G@@RCNT   . IF NOT, GET SOURCE LENGTH  @G@@@@       JNGD  R2,RS0925   . IF XG
)@@G@@SOURCE NULL BUT TARGET WASN'T, LENGTH ERR @C@@@@. SET FETCHREGS TO BEGINXH
)@@G@@NING OR SOURCE STRING   @ @@@@RS0110 LX    X4,RSREGA   .    @^@@@@      XI
)@@G@@ LX    X5,RSREGB. @C@@@@RS0115 LMJ   X4,0,X4     . FETCH FROM SOURCE    XJ
)@@G@@@B@@@@       LMJ   X2,0,X2     . STASH IN TARGET@C@@@@       JNGD  R1,RSXK
)@@G@@0120   . IF TARGET FULL, QUIT @D@@@@       JGD   R2,RS0115   . IF MORE SXL
)@@G@@OURCE, GO GET IT  @D@@@@       LR    R2,RSRCNT   . ELSE RESET SOURCE COUXM
)@@G@@NT    @E@@@@       JGD   R2,RS0110   . COUNT 1ST EL, GO RESET FETCH REGSXN
)@@G@@@^@@@@       ER    ERR$ .     @#@@@@. NORMAL EXIT--   @]@@@@RS0120 .    XO
)@@G@@@ @@@@       LX    X11,RSLINK  .    @ @@@@       J     1,X11       .    XP
)@@G@@@[@@@@.     @#@@@@. ERROR EXITS     @]@@@@RS0250 .    @C@@@@RS0350 SA   XQ
)@@G@@ A0,RSERRC   . TEMP SAVE ERROR CODE @^@@@@       J     RS0950 .   @[@@@@XR
)@@G@@.     @A@@@@RS0910 ERROR YVALUE,RS0350    .     @A@[@@RS0915 ERROR YSYSTXS
)@@G@@M,RS0350    .     @A@@[[RS0915 EQU   0           . SYSERR   @A[@@@RS0920XT
)@@G@@ ERROR YDOMAI,RS0350    .     @A@@@@RS0925 ERROR YLENGT,RS0350    .     XU
)@@G@@@ @@[[RS0930 ERROR YRANK       .    @A@@@@RS0950 LX    X11,RSLINK       XV
)@@G@@.     @ @@@@       J     0,X11       .    @#@@@@       VARBLS .   @#@@@@XW
)@@G@@RSREGA RES   1 .  @#@@@@RSREGB RES   1 .  @#@@@@RSTMP2 RES   1 .  @ @@@@XX
)@@G@@RSLINK EQUF  RSTMP2,,H1  .    @ @@@@RSRCNT EQUF  RSTMP2,,H2  .    @#@@@@XY
)@@G@@RSERRC RES   1 .  @A@@@@RSAREG RES   1                .     @#@@@@      XZ
)@@G@@ VARCON .   @ @@@@RSDESC CBLOCK ZTPTMP,0,0,0  0 @B@@@@RSDIMD CBLOCK ZTPDYA
)@@G@@IM,ZMOHFI,ZRANKV,0  0   @ @@@@RSRDSC EQUF  RSDESC+1,,H2     @^@@@@/.    YB
)@@G@@INDEX GENERATOR-- @#@@@@       INSTRS .   @[@@@@.     @^@@@@INDGEN* SX  YC
)@@G@@ X11,INLINK @E@@@@       VERIFY  IN0900,IN0910,IN0999     . EXAMINE THE YD
)@@G@@ARG   @F@@@@       SA    A6,RITDSC   .   SAVE POINTER TO ARGUMENT FOR ERYE
)@@G@@ASEING@F@@@@       TE,U  A5,1        . IS IT LENGTH 1 (SCALAR OR 1-ELT VYF
)@@G@@ECTOR)@B@@@@       J     IN0920      . NO-RANK ERROR  @F@@@@       JNE,UYG
)@@G@@ A3,ZMOHFI IN0020 . IF NOT HALFINT, GO CHECK DOUBLE   @D@@@@IN0010 LA,H2YH
)@@G@@ A1,0,A0     . PICK UP VALUE AS IF HALFINT@B@@@@       TE,U  A4,ZRANKS  YI
)@@G@@ . IS IT A SCALAR?@D@@@@       LA,H1 A1,0,A0     . NO, GET 1ST EL OF ARRYJ
)@@G@@AY    @B@@@@       LA,XU A2,0,A1     . SIGN EXTEND IT @C@@@@       J    YK
)@@G@@ IN0040      . AND GO DO THE OP     @C@@@@IN0020 JE,U  A3,ZMODFL IN0030 YL
)@@G@@. CHECK FOR DOUBLE@F@@@@       JE,U  A3,ZMOCHR IN0930 . IF NOT DOUBLE, BYM
)@@G@@ETTER BE CHARACTER@B@[@@       ERROR  YSYSTM,IN0999   . OOPS- ERR @C@@[[YN
)@@G@@       J     IN0900      . IF NEITHER, SYSERR   @C[@@@IN0030 DL    A4,0,YO
)@@G@@A0     . GET DOUBLE VALUE     @C@@@@       FUZZDN            . CONVERT TYP
)@@G@@O INTEGER   @D@@@@       JNZ   A1,IN0930   . IF TOO BIG, DOMAIN ERROR   YQ
)@@G@@@C@@@@. NOW A2=LENGTH. GET SPACE AND GENERATE DATA    @E@@@@IN0040 JN   YR
)@@G@@ A2,IN0930   . NEGATIVE LENGTH IS DOMAIN ERR    @F@@@@       SA,H2 A2,INYS
)@@G@@DUMD   . SET LENGTH FIELD OF DUMMY DESCRIPTOR   @B@@@@       LA,U  A0,INYT
)@@G@@DUMD   . SET ADDR UP    @A@@@@       LA,U  A1,ZMOHFI   . ALSO MODE@B@@@@YU
)@@G@@       LMJ   X11,RESERV  . GET THE SPACE  @B@@@@       J     IN0999     YV
)@@G@@ . OOPS, ERROR    @C@@@@       PUSH  A2          . PUT DESCR INTO STACK YW
)@@G@@@E@@@@       LA,H2 A0,INDUMD   . RECOVER LENGTH FROM DUMMY DESCR  @E@@@@YX
)@@G@@       LA    A2,WSIXOR   . GET START VAL (=INDEX ORIGIN)    @C@@@@      YY
)@@G@@ LXI,U A1,1        . SET STEP TO RESULT   @B@@@@IN0060 JGD   A0,$+2     YZ
)@@G@@ . MORE TO DO?    @A@@@@       J     IN0070      . NO, QUIT @B@@@@      ZA
)@@G@@ SA,H1 A2,0,A1     . YES, STASH     @C@@@@       AA,U  A2,1        . ANDZB
)@@G@@ BUMP TO NEXT VAL @B@@@@       JGD   A0,$+2      . TEST AGAIN     @A@@@@ZC
)@@G@@       J     IN0070      . WE'RE OUT@A@@@@       SA,H2 A2,0,*A1    . NEXZD
)@@G@@T TRY @A@@@@       AA,U  A2,1        . BUMP     @B@@@@       J     IN006ZE
)@@G@@0      . AND CONTINUE   @ @@@@IN0070 LX    X11,INLINK  .    @B@@@@      ZF
)@@G@@ J     1,X11       . NORMAL EXIT    @[@@@@.     @B@[@@IN0900 ERROR YSYSTZG
)@@G@@M,IN0999 . STACKMARK    @A@@[[IN0900 EQU   0           . SYSERR   @C[@@@ZH
)@@G@@IN0910 ERROR YUNIMP,IN0999 . REDUCED OPERAND    @ @@@@IN0920 ERROR YLENGZI
)@@G@@T,IN0999 .  @ @@@@IN0930 ERROR YDOMAI,IN0999 .  @A@@@@IN0999 LX    X11,IZJ
)@@G@@NLINK . ERROR EXIT@^@@@@       J     0,X11 .    @#@@@@       VARBLS .   ZK
)@@G@@@#@@@@INLINK RES 1 .    @#@@@@       VARCON .   @A@@@@INDUMD CBLOCK ZTPTZL
)@@G@@MP,0,ZRANKV,0 .   @[@@@@/.    @G@@@@.                                   ZM
)@@G@@                       INDEX OF     @#@@@@       INSTRS     @B@@@@INDXOFZN
)@@G@@* SX   X11,IFLINK  . SAVE RETURN    @C@@@@       LMJ   X11,PIKTWO  . GO ZO
)@@G@@SET FETCH REGS    @B@@@@       J     IF0400      . ERROR RETURN   @F@@@@ZP
)@@G@@       LA,H2 A0,IFMODE,A3    . PICKUP POINTER TO TEST ROUTINE     @B@@@@ZQ
)@@G@@       JZ    A0,IF0450   . ERROR,DOMAIN   @E@@@@       SA    A0,IFTEST  ZR
)@@G@@ . STORE POINTER FOR TEST ROUTINE   @B@@@@       LA    A0,LFTRNK   . GETZS
)@@G@@ LEFT RANK  @D@@@@       TE,U  A0,ZRANKV   . INSURE LEFT ARG IS A VECTORZT
)@@G@@@B@@@@       J     IF0450      . DOMAIN ERROR   @B@@@@       LA,U  A0,RIZU
)@@G@@TDMY   . LOAD DISCRIPTOR@B@@@@       LA,U  A1,ZMOHFI   . AND RANK INFO  ZV
)@@G@@@B@@@@       LMJ   X11,PUTANS  . SET OUTPUT REGS@A@@@@       J     IF040ZW
)@@G@@0      . ERROR    @B@@@@       PUSH A6           . PUSH DESCRIPTOR@D@@@@ZX
)@@G@@       DL    A6,X4       . SAVE LEFT ARG POINTERS     @B@@@@       LR   ZY
)@@G@@ R1,A14      . AND LENGTH     @C@@@@IF0100 JGD   A15,$+2     . MORE RIGHZZ
)@@G@@T ARGS LEFT @C@@@@       J     IF0500      . RETURN IF WE ARE DONE@C@@@@AA
)@@G@@       LMJ   X6,0,X6     . GET NEXT RIGHT ARG   @B@@@@       DS    A4,R2AB
)@@G@@       . TEMP SAVE IT   @F@@@@       DS    A6,X4       . RESET LEFT ARG AC
)@@G@@FETCH REGS TO START     @D@@@@       LA    A14,R1      . SET COUNTER OVEAD
)@@G@@R LEFT ARG  @B@@@@IF0110 JGD   A14,$+2     . MORE LEFT ARGS @C@@@@      AE
)@@G@@ J     IF0120      . NO, GO OUTPUT INDEX  @C@@@@       LMJ   X4,0,X4    AF
)@@G@@ . PICKUP NEW LEFT ARG  @C@@@@       DL    A4,R2       . AND GET RIGHT AAG
)@@G@@RG    @C@@@@       LMJ   X11,*IFTEST . TEST ARGS FOR EQUAL  @B@@@@IF0115AH
)@@G@@ JNZ A2,IF0110     . IF UNEQUAL LOOP@C@@@@IF0120 LA    A1,R1       . GETAI
)@@G@@ ORIGINAL COUNT   @C@@@@       ANA   A1,A14      . SUBTRACT JGD COUNT   AJ
)@@G@@@E@@@@       TNZ   WSIXOR      . IF THE WORKSPACE ORGIN IS ZERO   @E@@@@AK
)@@G@@       ANA,U A1,1        .  THEN SUBTRACT ONE FROM RESULT   @C@@@@      AL
)@@G@@ DSL   A1,36       . SIGN EXTENDED IT     @C@@@@       LMJ   X2,0,X2    AM
)@@G@@ . AND STORE THE RESULT @A@@@@       J     IF0100      . LOOP     @D@@@@AN
)@@G@@IF0400 LX    X11,IFLINK  . EXTERNALY DETECTED ERROR   @ @@@@       J    AO
)@@G@@ 0,X11       .    @B@@@@IF0450 ERROR YDOMAI,IF0400  . DOMAIN ERROR@B@@@@AP
)@@G@@IF0500 LX    X11,IFLINK . NORMAL RETURN   @ @@@@       J     1,X11      AQ
)@@G@@ .    @C@@@@IF0600 FUZDIF  A4,A1     . FIND FUZZY DIFFERENCE@B@@@@      AR
)@@G@@ DJZ   A4,0,X11    . IF ZERO RETURN @E@@@@IF0610 LA,U  A2,11       . IF AS
)@@G@@NON ZERO FORCE A2 NONZERO     @B@@@@       J     0,X11       . NOW RETURAT
)@@G@@N     @A@@@@IF0650 DAN   A1,A4       . SUBTRACT @B@@@@       J     0,X11AU
)@@G@@       . NOW RETURN     @D@@@@IF0700 XOR   A1,A4       . XOR THE WORDS TAV
)@@G@@OGETHER     @E@@@@       LSSL  A2,27       . SHIFT ALL BUT CHAR POSITIONAW
)@@G@@S OUT @B@@@@       J     0,X11       . NOW RETURN     @#@@@@       CONSTAX
)@@G@@S     @F@@@@IFMODE JMPTBL 0 ZMODFL,IF0600 ZMOHFI,IF0650 ZMOCHR,IF0700 0,AY
)@@G@@0 ;   @G@@@@             ZMOINT,IF0610    . IF MIXED MODE, ALWAYS SIGNALAZ
)@@G@@ UNEQUAL    @#@@@@       VARBLS     @C@@@@IFLINK RES   1           .  REBA
)@@G@@TURN LINK STORAGE @D@@@@IFTEST RES   1           .  LOCATION OF TEST ROUBB
)@@G@@TINE  @ @@@@/. RAVEL (MAKE INTO A VECTOR) @#@@@@       INSTRS  .  @ @@@@BC
)@@G@@RAVEL* SX    X11,RALINK  .    @A@@@@       VERIFY RA0900,RA0910,RA0999 .BD
)@@G@@@D@@@@       SA    A6,RITDSC   . POST FOR GARBAGE COLLECTOR @F@@@@      BE
)@@G@@ JE,U  A4,ZRANKV RA0210 . IF ALREADY A VECTOR, GO DUPE IT   @E@@@@      BF
)@@G@@ JNE,U A4,ZRANKS RA0200 . IF NON-SCALAR, GO DO VECT   @^@@@@. SCALARS FABG
)@@G@@LL THRU HERE@E@@@@RA0100 LXI,H2 A1,0,A0    . GET DATA VAL (AS IF HALFINTBH
)@@G@@)     @B@@@@       TE,U  A3,ZMOHFI   . REALLY HALFINT?@B@@@@       DL   BI
)@@G@@ A1,0,A0     . NO, GET DOUBLE @C@@@@       DS    A1,RADATA   . STASH DATBJ
)@@G@@A VALUE     @C@@@@       LA,U  A0,RADATA   . SET DATA ADDRESS     @ @@@@BK
)@@G@@. ARRAYS COME DIRECTLY HERE   @C@@@@RA0200 RELADR A0         . GET REL DBL
)@@G@@ATA ADDR    @D@@@@       SA,H2 A0,RADESC+1 . STUFF INTO DUMMY DESCR     BM
)@@G@@@C@@@@       SA,H2 A5,RADESC   . SAVE LENGTH, TOO     @B@@@@       SA,S2BN
)@@G@@ A3,RADESC   . DITTO MODE     @C@@@@       LA,U  A6,RADESC   . NOW GET DBO
)@@G@@ESCR ADDR   @B@@@@       RELADR A6         . MAKE IT WUZREL @B@@@@RA0210BP
)@@G@@ LMJ   X11,DUPE    . GENERATE RESULT@ @@@@       J     RA0999      .    BQ
)@@G@@@C@@@@       PUSH  A2          . STACK THE ANSWER     @B@@@@       LX   BR
)@@G@@ X11,RALINK  . NORMAL EXIT    @ @@@@       J     1,X11       .    @[@@@@BS
)@@G@@.     @C@@@@RA0900 ERROR  YSYNTA,RA0999   . REDUCED OPERAND @B@[@@RA0910BT
)@@G@@ ERROR  YSYSTM,RA0999   . STACKMARK @A@@[[RA0910 EQU   0           . SYSBU
)@@G@@ERR   @B[@@@RA0999 LX     X11,RALINK      . ERR EXIT  @A@@@@       J    BV
)@@G@@  0,X11           .     @#@@@@       VARBLS .   @C@@@@RADATA RES   2    BW
)@@G@@  . TEMPSTO OF SCALARDATA VALS@#@@@@RALINK RES   1 .  @#@@@@       VARCOBX
)@@G@@N .   @F@@@@RADESC CBLOCK ZTPTMP,0,ZRANKV,0 0 . DUMMY DESCR TO FORCE VECBY
)@@G@@TORS  @C@@@@/. CATENATE-LAMINATE **** SUPERCOMMA!!! ****    @[@@@@.     BZ
)@@G@@@A@@@@       INSTRS                 .     @[@@@@.     @ @@@@CATEN* SX   CA
)@@G@@ X11,CALINK  .    @C@@@@       SZ    CALAMI      . CLEAR LAMINATION FLAGCB
)@@G@@@G@@@@       JZ    A2,CA0100   . IF COORD SELECTION NOT REQUESTED, GO CACC
)@@G@@TENATE@B@@@@       POP   A6          . GET LEFTARG    @C@@@@       SA   CD
)@@G@@ A6,LFTDSC   . TEMP SAVE DESCR ADDR @C@@@@       LMJ   X11,CRDPOP  . GETCE
)@@G@@ SELECTION EXPR   @ @@@@       J     CA0990      .    @G@@@@       SA   CF
)@@G@@ A0,CALAMI   . SET LAMINATE FLAG, DEPENDING ON INT/NONINT   @F@@@@      CG
)@@G@@ TZ    A0          . ARE WE LAMINATING (EXPR NON-INTEGER)?  @G@@@@      CH
)@@G@@ AA,U  A2,1        . YES-BUMP SELECTED COORD CAUSE WE ADD ONE     @F@@@@CI
)@@G@@       JG,U  A2,1 CA0900 . IF INDEX NOT AT LEAST 1, INDEX ERR     @E@@@@CJ
)@@G@@CA0010 LA    A6,LFTDSC   . RECOVER ORIGINAL LEFTARG DESCR   @D@@@@      CK
)@@G@@ PUSH  A6          . JAM IT BACK IN THE STACK   @[@@@@.     @G@@@@CA0100CL
)@@G@@ SA    A2,CACORD   . SAVE SELECTED COORDINATE INDEX (0=UNKNOWN)   @C@@@@CM
)@@G@@       LMJ   X11,PIKTWO  . INITIALIZE ARG FETCH @ @@@@       J     CA099CN
)@@G@@0      .    @G@@@@       JE,U  A3,ZMOINT CA0920 . IF MIXED MODE, GO SIGNCO
)@@G@@AL DOMAIN ERROR   @C@@@@       SA    A3,CARMOD   . POST MODE OF RESULT  CP
)@@G@@@D@@@@       SZ    CAXTEN      . CLEAR SCALAR EXTENSION FLAG@B@@@@      CQ
)@@G@@ TZ    RITRNK      . IS RITE SCALAR?@B@@@@       TNZ   LFTRNK      . NO-CR
)@@G@@IS LEFT?    @G@@@@       SX    X11,CAXTEN  . IF EITHER, TURN ON SCALAR ECS
)@@G@@XTENSION FLAG     @B@@@@       LA    A0,LFTRNK   . RANK OF LEFTARG@B@@@@CT
)@@G@@       ANA   A0,RITRNK   . LESS RIGHT RANK@C@@@@       SA    A0,CARDIF  CU
)@@G@@ . SAVE SIGNED RANK DIFF@G@@@@       JZ    A0,CA0120   . AND IF BOTH THECV
)@@G@@ SAME, GO LOOK FOR SCALARS    @E@@@@. ARG RANKS DIFFER- EITHER 1 IS A SCCW
)@@G@@ALAR, OR CAT WITH DIF=1 @D@@@@CA0110 TZ    CAXTEN      . IS SCALAR EXTENCX
)@@G@@D FLAG ON?  @D@@@@       J     CA0130      . YES-GO SET RESULT RANK     CY
)@@G@@@D@@@@       TZ    CALAMI      . NO-IS LAMINATION FLAG ON   @G@@@@      CZ
)@@G@@ J     CA0910      . YES-CANNOT LAM DIFFERENT RANKS- RANK ERR     @D@@@@DA
)@@G@@       LMA   A0,A0       . GET ABSVAL OF RANK DIF     @D@@@@       JNE,UDB
)@@G@@ A0,1 CA0910 . IF NOT UNITY, RANK ERR     @C@@@@. ARG RANKS EQUAL- CHECKDC
)@@G@@ FOR SCALAR LAMINATE    @C@@@@CA0120 TNZ   CAXTEN      . IS SCALAR EXTENDD
)@@G@@D ON? @G@@@@       J     CA0130      . NO, NEITHER IS SCALAR, GO CHECK CDE
)@@G@@OORD NUM    @G@@@@       SX    X11,CALAMI  . YES, SINCE EQUAL, BOTH ARE DF
)@@G@@SCAL, SET LAM ON  @C@@@@       LA,U  A0,1        . GET DUMMY COORD NO   DG
)@@G@@@E@@@@       SA    A0,CACORD   . AND LAM ALONG 1ST COORD OF RESULT@F@@@@DH
)@@G@@. SET UP RANK OF RESULT AND CHECK FOR SELECTED COORD IN RANGE     @C@@@@DI
)@@G@@CA0130 LA    A0,LFTRNK   . GET LEFTARG RANK     @E@@@@       TP    CARDIDJ
)@@G@@F      . WAS LEFTARG REALLY GTR RANK?     @C@@@@       LA    A0,RITRNK  DK
)@@G@@ . NO, GET RIGHT INSTEAD@C@@@@       TZ    CALAMI      . ARE WE LAMINATIDL
)@@G@@NG?   @C@@@@       AA,U  A0,1        . YES, ADD A COORDINATE@D@@@@      DM
)@@G@@ SA    A0,CARRNK   . AND POST RANK OF RESULT    @E@@@@       SA,H2 A0,CADN
)@@G@@DIMY   . WHICH IS ALSO LENGTH OF DIMVECTOR@F@@@@       TNZ   CACORD     DO
)@@G@@ . IS COORD TO BE USED ALREADY KNOWN?     @E@@@@       SA    A0,CACORD  DP
)@@G@@ . NO-SET TO LAST DIM OF RESULT     @D@@@@       LA    A1,CACORD   . GETDQ
)@@G@@ COORD NO TO SELECT ON  @G@@@@       JG    A0,A1 CA0900  . IF COORD NO (DR
)@@G@@A1) > RANK (A0), INDEX ERROR  @A@@@@. NOW CONSTRUCT DIMVECTOR OF RESULT DS
)@@G@@@G@@@@CA0200 SAVER  X4,WORDPT,4 . TEMP SAVE ARG FETCHREGS IN RANDAC SCRADT
)@@G@@TCH   @C@@@@       LMJ    X11,PIKLFD . SET LEFTARG DIM FETCH@C@@@@      DU
)@@G@@ LMJ    X11,PIKRID . AND RITEARG DIM FETCH@F@@@@       DL    A0,CADINS  DV
)@@G@@ . GET LMJ INSTRS TO LINK TO DIM FETCH    @D@@@@       TP    CARDIF     DW
)@@G@@ . WAS LEFTARG LARGER IN RANK?@F@@@@       DSC   A0,36       . NO, EXCHADX
)@@G@@NGE DIM FETCH INSTR ORDER     @G@@@@       DS    A0,CADPIK   . SAVE CALLDY
)@@G@@S TO DIM RTNES IN  XQT LOCATIONS    @F@@@@       LX    X3,(+1,RESDIM)   DZ
)@@G@@. RESULT DIM GOES TO RANDAC AREA    @F@@@@       LX,H2 X2,PUTARY+ZMOHFI EA
)@@G@@. USING NORMAL STASH RTNE IN LINEAR @F@@@@       LA,U  A6,1        . INIEB
)@@G@@TIALIZE LENGTH OF RESULT TO UNITY   @E@@@@       LA    A14,CARRNK  . ANDEC
)@@G@@ SET COUNTER OVER RESULT DIMS @F@@@@       ANU   A14,CACORD  . COMPUTE TED
)@@G@@EST VAL FOR SELECTED COORD    @A@@@@. NOW SCAN THRU DIMVECT OF RESULT   EE
)@@G@@@D@@@@CA0210 JNGD  A14,CA0300  . QUIT AFTER ALL RESULT DIMS @G@@@@      EF
)@@G@@ JE    A14,A15 CA0230   . IF THIS IS THE SELECTED COORD, GO DO IT @G@@@@EG
)@@G@@       EX    CADPIK      . ELSE GET NEXT DIM OF LARGER RANK ELEMENT     EH
)@@G@@@D@@@@       TNZ   CAXTEN      . IS SCALAR EXTENSION ON?    @D@@@@      EI
)@@G@@ J     CA0220      . NO-GO GET THE OTHER DIM    @E@@@@       TP    CARDIEJ
)@@G@@F      . YES, DID WE JUST GET LEFT DIM?   @F@@@@       DL    A1,A4      EK
)@@G@@ . NO RIGHT, MOVE IT OVER TO RESULT REG   @E@@@@       J     CA0270     EL
)@@G@@ . AND GO PUT IT INTO THE RESULT    @D@@@@CA0220 EX    CADPIK+1    . FETEM
)@@G@@CH DIM OF OTHER ARG     @F@@@@       JE    A2,A5 CA0270     . IF BOTH EQEN
)@@G@@UAL, GO FOLD INTO RESULT@E@@@@       ERROR  YLENGT,CA0990   . ELSE SIGNAEO
)@@G@@L LENGTH ERROR    @B@@@@. SPECIAL FARBLING FOR SELECTED COORDINATE@G@@@@EP
)@@G@@CA0230 SA    A6,CAMOVR   . SAVE CURRENT RES SIZE  TO COMPUTE MOVE FACTOREQ
)@@G@@@C@@@@       TNZ   CALAMI      . ARE WE LAMINATING?   @D@@@@       J    ER
)@@G@@ CA0240      . NO, GO CHECK LONGER DIM    @G@@@@       LA,U  A2,1       ES
)@@G@@ . YES, PRETEND LONGER ARG HAS A UNIT DIM HERE  @G@@@@       J     CA024ET
)@@G@@5      . AND GO MAKE THE SAME ASSUMPTION ABOUT OTHER  @E@@@@CA0240 EX   EU
)@@G@@ CADPIK      . FETCH NEXT DIM OF LONGER ARG     @E@@@@       TNZ   CARDIEV
)@@G@@F      . ARE BOTH ARGS OF EQUAL RANK?     @E@@@@       J     CA0250     EW
)@@G@@ . YES, GET THE OTHER FOR ADDITION  @E@@@@       TP    CARDIF      . NO-EX
)@@G@@DID WE JUST GET THE LEFTARG?  @E@@@@       DL    A1,A4       . NO, MOVE EY
)@@G@@VAL TO PRETEND WE DID   @G@@@@CA0245 SA    A2,CAMOVL   . SAVE CURRENT LOEZ
)@@G@@NG DIM FOR SCALAR MOVE COUNT  @F@@@@       LA,U  A5,1        . AND EXTENFA
)@@G@@D OTHER ARG WITH A UNIT DIM   @D@@@@       J     CA0260      . THEN ADD FB
)@@G@@THE DIMS TOGETHER @D@@@@CA0250 EX    CADPIK+1    . FETCH DIM OF THE OTHEFC
)@@G@@R ARG @E@@@@CA0260 AA    A2,A5       . LENGTH OF SELECTED=SUM OF ARGS   FD
)@@G@@@B@@@@. PLUG CURRENT LENGTH INTO RESULT DIM     @E@@@@CA0270 MSI   A6,A2FE
)@@G@@       . COMPUTE RUNNING LENGTH OF RESULT @F@@@@       LMJ   X2,0,X2    FF
)@@G@@ . AND THEN STASH CURRENT DIM IN DIMVECT  @C@@@@       J     CA0210     FG
)@@G@@ . GO BACK FOR THE NEXT @G@@@@. RESULT DIMVECTOR NOW BUILT- GET COUNTS FFH
)@@G@@OR ALTERNATE L AND R FETCHES  @C@@@@CA0300 SA    A6,CARSIZ   . SAVE SIZEFI
)@@G@@ OF RESULT  @D@@@@       LA    A0,LFTSIZ   . GET TOTAL SIZE OF LEFTARG  FJ
)@@G@@@E@@@@       JNZ   A0,CA0305   . IF NOT NULL, GO CHECK RIGHTARG   @E@@@@FK
)@@G@@       LA    A2,A6       . IF NULL, MOVE ALL FROM RIGHTARG  @D@@@@      FL
)@@G@@ J     CA0330      . AND GO POST MOVECOUNTS     @C@@@@CA0305 LA    A2,RIFM
)@@G@@TSIZ   . GET RIGHTARG SIZE    @F@@@@       JNZ   A2,CA0310   . IF NOT NUFN
)@@G@@LL, GO COMPUTE MOVEFACTORS    @F@@@@       LA    A0,A6       . BUT IF NUFO
)@@G@@LL, ALL ELS COME FROM LEFTARG @ @@@@       J     CA0330      .    @E@@@@FP
)@@G@@CA0310 DSL   A0,36       . PREPARE LEFTSIZE FOR DIVISION    @G@@@@      FQ
)@@G@@ DI    A0,CAMOVR   . AND FACTOR RESULT DIMS UP TO SELECTED COORD  @F@@@@FR
)@@G@@       DSL   A2,36       . REPEAT THE PROCESS FOR THE RIGHTARG    @ @@@@FS
)@@G@@       DI    A2,CAMOVR   .    @A@@@@. NOW CHECK FOR EXTENSION OF SCALARSFT
)@@G@@@C@@@@       TZ    LFTRNK      . WAS LWFTARG A SCALAR?@C@@@@       J    FU
)@@G@@ CA0320      . NO, GO CHECK RITEARG @C@@@@       TNZ   RITRNK      . YESFV
)@@G@@-IS RIGHT, TOO?   @D@@@@       J     CA0330      . YES-EXTENSION NOT NEEFW
)@@G@@DED,  @E@@@@       LA    A0,A2       . NO-SET NO OF LEFT SAME AS RIGHT  FX
)@@G@@@F@@@@       DSL   A0,36       . EXCEPT FOR LENGTH OF SELECTED COORD    FY
)@@G@@@D@@@@       DI    A0,CAMOVL   . WHICH MUST BE FACTORED OUT @F@@@@      FZ
)@@G@@ J     CA0330      . THEN WE CAN GO POST THE MOVE COUNTS    @E@@@@CA0320GA
)@@G@@ TZ    RITRNK      . LEFTARG NOT SCALAR, IS RIGHT?    @E@@@@       J    GB
)@@G@@ CA0330      . NO, GO POST COMPUTED MOVE COUNTS @G@@@@       LA    A2,A0GC
)@@G@@       . YES, EXTEND BY SETTING RIGHT MOVECT=LEFT     @F@@@@       DSL  GD
)@@G@@ A2,36       . AND THEN ACCOUNTING FOR SELECTED COORD @D@@@@       DI   GE
)@@G@@ A2,CAMOVL   . BY FACTORING OUT ITS LENGTH@G@@@@CA0330 SA    A0,CAMOVL  GF
)@@G@@ . SAVE NO LEFTELS TO MOVE BEFORE SWITCH TO RITE@F@@@@       SA    A2,CAGG
)@@G@@MOVR   . AND NO OF RITE BEFORE SWITCHING BACK   @C@@@@. ACQUIRE SPACE FOGH
)@@G@@R RESULT AND THEN MOVE TO IT  @E@@@@CA0400 LA,U  A0,CADIMY   . ADDR OF DGI
)@@G@@IMVECTOR DEXCRIPTOR     @ @@@@       RELADR A0         .    @C@@@@      GJ
)@@G@@ SA,H1 A0,CADUMY+1 . PUT INTO DUMMY DESCR @D@@@@       LA,U  A0,RESDIM  GK
)@@G@@ . ADDR OF DIMENSION DATA     @ @@@@       RELADR A0         .    @D@@@@GL
)@@G@@       SA    A0,CADIMY+1 . PUT INTO DIMVECT DESCRIPTOR@G@@@@       LA,U GM
)@@G@@ A0,CADUMY   . ADDR OF DESCR BLOK CONTAINING SHAPE DATA     @E@@@@      GN
)@@G@@ LA    A1,CARMOD   . AND MODE TO BE USED FOR RESULT   @D@@@@       LMJ  GO
)@@G@@ X11,PUTANS  . INITIALIZE RESULT STASHREGS@ @@@@       J     CA0990     GP
)@@G@@ .    @C@@@@       PUSH  A6          . STACK DESCR OF RESULT@C@@@@      GQ
)@@G@@ LOADR X4,WORDPT,4 . RESTORE ARG FETCHREGS@E@@@@       J     CA0420     GR
)@@G@@ . GO START INITIAL LEFTARG MOVE    @B@@@@. MOVE ALTERNATELY FROM LEFT AGS
)@@G@@ND RITE ARGS@F@@@@CA0410 AA,U  A13,1       . BUMP RESULT CT, NOTHING WASGT
)@@G@@ STASHED    @D@@@@CA0420 LA    A14,CAMOVL  . INITIALIZE LEFTARG MOVE CTRGU
)@@G@@@E@@@@CA0430 JNGD  A13,CA0460  . EXIT AFTER FILLING ALL OF RESULT @F@@@@GV
)@@G@@       JNGD  A14,CA0440  . WHEN LEFTARG EXHAUSTED, GO MOVE RIGHT  @C@@@@GW
)@@G@@       LMJ   X4,0,X4     . GET NEXT LEFTARG     @A@@@@       LMJ   X2,0,GX
)@@G@@X2     . STASH IT @B@@@@       J     CA0430      . LOOP TO NEXT EL@G@@@@GY
)@@G@@CA0440 AA,U  A13,1       . LEFTARG DONE-ADJUST FOR STORE WE DIDNT DO    GZ
)@@G@@@D@@@@       LA    A14,CAMOVR  . SET NO OF RITE VALS TO MOVE@D@@@@CA0450HA
)@@G@@ JNGD  A13,CA0460  . EXIT WHEN TARGET IS FULL   @F@@@@       JNGD  A14,CHB
)@@G@@A0410  . SWITCH BACK TO LEFT IF RITE EXHAUSTED  @B@@@@       LMJ   X6,0,HC
)@@G@@X6     . ELSE GET RIGHT @A@@@@       DL    A1,A4       . SET IT UP@A@@@@HD
)@@G@@       LMJ   X2,0,X2     . STASH IT @B@@@@       J     CA0450      . ANDHE
)@@G@@ CONTINUE   @ @@@@CA0460 LX    X11,CALINK  .    @ @@@@       J     1,X11HF
)@@G@@       .    @#@@@@. ERROR EXITS     @A@@@@CA0900 ERROR YINDEX,CA0990    HG
)@@G@@.     @A@@@@CA0910 ERROR YRANK,CA0990     .     @ @@@@CA0920 ERROR YDOMAHH
)@@G@@I,CA0990 .  @A@@@@CA0990 LX    X11,CALINK       .     @A@@@@       J    HI
)@@G@@ 0,X11            .     @ @@@@       VARBLS            .    @ @@@@CALINKHJ
)@@G@@ EQUF  $,,H1       .    @C@@@@CAXTEN EQUF  $,,H2       . SCALAR EXTEND FHK
)@@G@@LAG   @ @@@@       RES   1           .    @B@@@@CALAMI EQUF  $,,H1      HL
)@@G@@ . LAMINATE FLAG  @B@@@@CACORD EQUF  $,,H2       . SELECTED COORD @#@@@@HM
)@@G@@       RES   1 .  @D@@@@CARDIF RES   1 .         . SIGNED RANK DIFFERENCHN
)@@G@@E     @F@@@@CADPIK RES   2 .         . DIM FETCH INSTRS ARE EX'D FROM HEHO
)@@G@@RE    @F@@@@CAMOVL EQUF  $,,H1  . LENGTH SELECTED ARGDIM/LEFTARG MOVE COHP
)@@G@@UNT   @F@@@@CAMOVR EQUF  $,,H2  . PROD RESDIMS TO SELCOR/RITEARG MOVE COHQ
)@@G@@UNT   @^@@@@       RES   1      .   @#@@@@       VARCON .   @A@@@@CADUMYHR
)@@G@@ CBLOCK  ZTPTMP,0,0,0  0     .@ @@@@CARMOD EQUF  CADUMY,,S2  .    @ @@@@HS
)@@G@@CARRNK EQUF  CADUMY,,S3  .    @ @@@@CARSIZ EQUF  CADUMY,,H2  .    @B@@@@HT
)@@G@@CADIMY CBLOCK ZTPDIM,ZMOHFI,ZRANKV,0 0 .  @#@@@@       CONSTS  .  @E@@@@HU
)@@G@@CADINS LMJ   X4,0,X4     . INSTRS TO BE EX'D TO GET DIMS    @ @@@@      HV
)@@G@@ LMJ   X6,0,X6     .    @[@@@@/.    @F@@@@.                             HW
)@@G@@                   .*   DECODE *    @ @@@@       INSTRS            .    HX
)@@G@@@]@@@@DECODE* .   @B@@@@DC0010 SX    X11,DCLINK  . SAVE RETURN    @ @@@@HY
)@@G@@       LMJ   X11,PIKTWO  .    @A@@@@       J     DC0200      . ERROR    HZ
)@@G@@@G@@@@       JE,U  A3,ZMOINT DC0300 . MIXED MODE (CHAR+NUMERIC) IS DOMAIIA
)@@G@@N ERR @D@@@@       LR,U  R1,1        .  SET HALF INTEGER FLAG     @D@@@@IB
)@@G@@       TE,U  A3,ZMOHFI   .  IS FETCH MODE HALF INTEGER@F@@@@       LR,U IC
)@@G@@ R1,0        .  RESET HALF INT FLAG IF DOUBLE FLOAT   @E@@@@       SR   ID
)@@G@@ R1,DCFLAG    .   SAVE FLAG FOR PICKUP MODE     @F@@@@       LA,Q4 A0,DCIE
)@@G@@MODE,A3 .   INDEX ON PICKUP MODE INTO TABLE TO  @G@@@@       JZ    A0,DCIF
)@@G@@0300   .    FIND OUT IF MODE IS LEGAL FOR THIS OPP    @G@@@@       JZ   IG
)@@G@@ A14,DC0300  .  DOMAIN ERROR , UNLL VECTORS NOT ALLOWED     @G@@@@      IH
)@@G@@ JZ    A15,DC0300  .  DOMAIN ERROR , UNLL VECTORS NOT ALLOWED     @ @@@@II
)@@G@@       LA,U  A0,ZRANKV    .   @F@@@@       TG    A0,LFTRNK   . CHECK RANIJ
)@@G@@K OF LEFTARG LESS THAN ARRAY  @F@@@@       TNG   A0,RITRNK   . CHECK RANIK
)@@G@@K OF LEFTARG LESS THAN ARRAY  @C@@@@       J     DC0300      . FAIL DOMAIL
)@@G@@IN ERROR    @C@@@@       TNE   A14,A15     . DO LENGTHS MATCH     @B@@@@IM
)@@G@@       J     DC0020      . YES,  WERE OK  @C@@@@       TNE,U A14,1      IN
)@@G@@ .  NOPE, IS IT ONE     @C@@@@       J     DC0020      . YES WERE STILL IO
)@@G@@OK    @C@@@@       TE,U  A15,1       . NO, IS RIGHT ARG ONE @C@@@@      IP
)@@G@@ J     DC0300      . NO, DOMAIN ERRER     @E@@@@       LA    A15,A14    IQ
)@@G@@ . YES, DO LEFT ARG NO OF TIMES     @E@@@@DC0020 LA,U  A0,DCDESC   . LOAIR
)@@G@@D POINTER TO DUMMY DECRICTOR  @ @@@@       LA,U  A1,ZMOINT   .    @ @@@@IS
)@@G@@       LMJ   X11,PUTANS  .    @A@@@@       J     DC0200      . ERROR    IT
)@@G@@@D@@@@       PUSH  A6          .  PUSH ANSWER DESCRIPTOR    @C@@@@      IU
)@@G@@ DSL   A1,72       . DOUBLE SZ IN A1,A2   @ @@@@       DS    A1,DCRSLT  IV
)@@G@@ .    @F@@@@       J     DC0150      . GO TO BOTTOM OF LOOP FOR INITAL TIW
)@@G@@EST   @B@@@@DC0100 LMJ   X4,0,X4     . PICK UP L ARG  @ @@@@       LMJ  IX
)@@G@@ X6,0,X6     .    @B@@@@       TNZ   DCFLAG      . TEST MODE FLAG @E@@@@IY
)@@G@@       J     DC0110      .      JMP TO GO AROUND DFLOATS    @D@@@@      IZ
)@@G@@ DFLOAT A0,A1      . IF NOT THEN FLOAT THEM     @ @@@@       DFLOAT A3,AJA
)@@G@@4      .    @ @@@@DC0110 DFM   A1,DCRSLT   .    @ @@@@       DFA   A1,A4JB
)@@G@@       .    @ @@@@       DS    A1,DCRSLT   .    @B@@@@DC0150 JGD   A15,DJC
)@@G@@C0100  . ARE WE DONE    @F@@@@       TESTIN A0,DCRSLT  . IF RESULT IS HAJD
)@@G@@LF INTEGER CONVERT IT   @G@@@@       DL    A1,DCRSLT   . IF RESULT IS DFJE
)@@G@@LOAT RELOAD THE REGESTERS     @C@@@@       LMJ   X2,0,X2     .     STOREJF
)@@G@@ THE ANSWER @ @@@@       LX    X11,DCLINK  .    @ @@@@       J     1,X11JG
)@@G@@       .    @ @@@@DC0200 LX    X11,DCLINK  .    @ @@@@       J     0,X11JH
)@@G@@       .    @ @@@@DC0300 ERROR YDOMAI,DC0200  . @#@@@@       VARBLS     JI
)@@G@@@#@@@@DCLINK RES   1    @#@@@@DCRSLT RES   2    @ @@@@DCFLAG RES   1    JJ
)@@G@@       .    @ @@@@       CONSTS            .    @B@@@@DCDESC CBLOCK ZTPTJK
)@@G@@MP,ZMOUNK,ZRANKS,0 .    @D@@@@DCMODE JMPTBL 0 ZMOHFI,1 ZMODFL,1 ZMONUL,0JL
)@@G@@ ZMOCHR,0   @F@@@@/.                                                    JM
)@@G@@ MEMBERSHIP @[@@@@.     @#@@@@       INSTRS     @B@@@@MBRSHP* SX    X11,JN
)@@G@@MSLINK . SAVE RETURN    @C@@@@        LMJ   X11,PIKTWO . SET UP FETCH REJO
)@@G@@GS    @E@@@@        J     MS0310     .   EXTERNALY DETCTED ERROR RETURN JP
)@@G@@@G@@@@        LA,U  A0,MS0140  . A1 CONTAINS MODE INFO, HOW SHALL WE TESJQ
)@@G@@T?    @G@@@@        TNE,U A1,ZMODFL  . IS IT A DFLOATING NUMBER, IF NOTUJR
)@@G@@SE INTEGER  @E@@@@        LA,U  A0,MS0160  .  TEST, IF SO USE FLOATING TJS
)@@G@@EST   @C@@@@       TNE,U A1,ZMOINT   . UNLESS MIXED MODE    @D@@@@      JT
)@@G@@ LA,U  A0,MS0110   . WHEN WE NEVER HAVE A MATCH @E@@@@        SA    A0,MJU
)@@G@@STEST  . STORE  POINTER  TO PROPER TEST   @B@@@@.    SET UP DUMMY DESCRIJV
)@@G@@PTOR F OR ANSWER  @E@@@@        LA    A0,LFTSIZ  . NOW SET UP DESCRIPTORJW
)@@G@@ FOR ANSWER @C@@@@        SA,H2 A0,MSDSCD  .   PUT LENGTH INTO IT @A@@@@JX
)@@G@@        LA    A0,LFTDDS  . POINTER  @B@@@@        SA,H1 A0,MSDSCD+1 . TOJY
)@@G@@ DOPE VECTOR@A@@@@        LA    A0,LFTRNK   . AND RANK@B@@@@        SA,SJZ
)@@G@@3 A0,MSDSCD  .    INFORMATION @B@@@@        LA,U  A0,MSDSCD  .  INITALIZKA
)@@G@@E     @C@@@@        LA,U  A1,ZMOHFI  .   ANSWER REGISTERS   @ @@@@      KB
)@@G@@  LMJ   X11,PUTANS .    @A@@@@        J     MS0310     .  ERROR   @D@@@@KC
)@@G@@        PUSH  A6         . PUSH ADDRESS OF RESULT     @[@@@@.     @D@@@@KD
)@@G@@       DL     A6,X6      . SAVE RITE ARG POINTERS     @C@@@@       SA   KE
)@@G@@  A15,R3     .  AND LENGTH COUNT    @E@@@@       DSL    A4,72      .  LEKF
)@@G@@FT AND RIGHT ARE REGISTERS    @B@@@@MS0100 JGD   A14,$+2     . MORE T O KG
)@@G@@DO ?  @E@@@@       J     MS0300      . NORMAL EXIT NO MORE LE FT AR GS  KH
)@@G@@@G@@@@       DSL   A1,72       . CLEAR LEFT ARG REGS BEFORE PICKING NEW KI
)@@G@@ARG   @D@@@@       LMJ    X4,0,X4    . PICK UP NEXT LEFT ARGUMENT @A@@@@KJ
)@@G@@       DS     A1,R1      . SAVE IT  @D@@@@       DS     A6,X6      . RESKK
)@@G@@TORE RIGHT ARG POINTERS @C@@@@       LA     A15,R3     . AND LENGTH COUNKL
)@@G@@TER   @F@@@@MS0110 JGD    A15,MS0120 . IF THERE ARE MORE RIGHT ARGS CONTKM
)@@G@@INUE  @E@@@@       SZ     A2         . OTHERWISE THE ANSWER IS ZERO     KN
)@@G@@@ @@@@       J      MS0200     .    @B@@@@MS0120 LMJ    X6,0,X6    . FETKO
)@@G@@CH RIGHT ARG@D@@@@       J     *MSTEST     . GO AND COMPARE ARGUMENTS   KP
)@@G@@@[@@@@.     @F@@@@.                                                 INTEKQ
)@@G@@GER COMPARE @C@@@@MS0140 DTE    A1,A4      . ARE THEY THE SAME?   @C@@@@KR
)@@G@@       J      MS0110     . NO, KEEP ON LOOKING? @F@@@@       J      MS01KS
)@@G@@90     . YES, OUTPUT A ONE AND START NEXT SCAN  @F@@@@.                 KT
)@@G@@                                FLOATING COMPARE@C@@@@MS0160 FUZDIF A1,AKU
)@@G@@4      . COMPARE FLOATING     @G@@@@       DJZ    A1,MS0190  .  THEY WERKV
)@@G@@E EQUAL OUTPUT 1 AND START NEXT SCAN@G@@@@       DL     A1,R1      .  NOKW
)@@G@@ MATCH RELOAD LEFT ARG AND CONTINUE SCAN  @ @@@@       J      MS0110    KX
)@@G@@ .    @[@@@@.     @[@@@@.     @D@@@@MS0190 LA,U   A2,1       . OUTPUT A KY
)@@G@@1 (MATCH FOUND)   @D@@@@MS0200 LMJ    X2,0,X2    . OUTPUT NEXT WORD IN AKZ
)@@G@@NSWER @C@@@@       J      MS0100     . GET NEW LEFT ARGUMENT@[@@@@.     LA
)@@G@@@]@@@@MS0300 .    @ @@@@       LX     X11,MSLINK .    @ @@@@       J    LB
)@@G@@  1,X11      .    @E@@@@MS0310 LX     X11,MSLINK . EXTERNALY DETECTED ERLC
)@@G@@ROR EXIT    @ @@@@       J      0,X11      .    @[@@@@.     @[@@@@.     LD
)@@G@@@#@@@@       VARBLS     @#@@@@MSTEST RES    1   @ @@@@MSLINK RES    1   LE
)@@G@@       .    @#@@@@MSDSCD RES    2   @E@@@@/      INSTRS            .    LF
)@@G@@                    ENCODE    @#@@@@ENCODE*       .   @ @@@@       SX   LG
)@@G@@  X11,ENLINK .    @ @@@@       LMJ    X11,PIKTWO .    @ @@@@       J    LH
)@@G@@  EN0950     .    @B@@@@       SA     A3,ENMFLG  .    SAVE MODE   @G@@@@LI
)@@G@@       TE,U  A3,ZMOINT   . BE SURE NOT TO MIX CHAR AND NUMERIC DATA     LJ
)@@G@@@C@@@@       TNE,U  A3,ZMOCHR  .    MODE NOT CHARACTER@C@@@@       J    LK
)@@G@@  EN0920     .    NOPE, D0M ERROR   @D@@@@       JZ     A14,EN0730 .    LL
)@@G@@LEFT ARG NULL GO DUPE IT@ @@@@       LA,U   A0,1       .    @F@@@@      LM
)@@G@@ TG     A0,LFTRNK  .    MAKE SURE LEFT RANK=VECTOR OR SCALAR@D@@@@      LN
)@@G@@ TE     A15,A0     .    MAKE SURE RIGHT LENGTH=1@ @@@@       J      EN09LO
)@@G@@20     .    @A@@@@       LA     A0,LFTRNK  .    SET   @A@@@@       SA,S3LP
)@@G@@  A0,ENDDSC  .      UP  @C@@@@       SA,H2  A14,ENDDSC .        DUMMV DSLQ
)@@G@@C     @F@@@@       LA,U   A0,ENDDSC  .     LOAD ADDRESS OF DUMMY FOR PUTLR
)@@G@@ANS   @D@@@@       LA     A1,A3      .     PUT MODE INTO A1 FOR   @B@@@@LS
)@@G@@       LMJ    X11,PUTANS .     PUTANS     @ @@@@       J      EN0950    LT
)@@G@@ .    @D@@@@       PUSH   A6         .    PUT RESULT ONTO STACK   @D@@@@LU
)@@G@@       LA     A0,ENMFLG  .     GET MODE OF ARGUMENT   @E@@@@       LA,U LV
)@@G@@  A1,EN0550  .     GET ADDRESS OF HFI DIVIDE    @D@@@@       TE,U   A0,ZLW
)@@G@@MOHFI  .     CHECK MODE OF ARGUMENT @E@@@@       LA,U   A1,EN0600  .    LX
)@@G@@ GET ADDRESS OF DFP CIVIDE    @E@@@@       SA     A1,ENMFLG  .     SAVE LY
)@@G@@DIVIDE ROUTINE ADDRESS  @F@@@@       AA    A0,DYADS+ARESID .  ADD BASE OLZ
)@@G@@F OPPER. TABLE TO MODE  @ @@@@       LX     X11,0,A0   .    @ @@@@      MA
)@@G@@ ANX,U  X2,1       .    @ @@@@       ANX,U  X4,1       .    @D@@@@      MB
)@@G@@ LMJ    X6,0,X6    .     PICK UP RIGHT ARGUMENT @G@@@@EN0500 JNGD   A14,MC
)@@G@@EN0800 .    THIS SECTION IS COMMON TO  HI AND DF $B   @C@@@@       DS   MD
)@@G@@  A4,ENOLDR  .    SAVE OLD-REMAINDER@C@@@@       LMJ    X4,0,X4    .    ME
)@@G@@FETCH NEW LEFTARG @B@@@@       DS     A1,ENLEFT  .     SAVE IT    @D@@@@MF
)@@G@@       JP     A4,EN0520  .    IF  OLD-REMAINDER<0     @E@@@@       DJZ  MG
)@@G@@  A1,EN0920  .     AND LEFT ARG =0, DOMAIN ERROR@E@@@@EN0520 LMJ    X11,MH
)@@G@@0,X11  .    FIND OLD-RMAINDER MOD LARG    @A@@@@       J      EN0950    MI
)@@G@@ .     ERROR@E@@@@       LMJ    X2,0,X2    .    OUTPUT RESULT OF MOD FUNMJ
)@@G@@CT    @C@@@@       DL     A4,ENOLDR  .     GET OLD REMAINDER@F@@@@      MK
)@@G@@ J      *ENMFLG    .     JUMP TO CALCULATE NEW REMAINDER    @F@@@@.     ML
)@@G@@                        THIS SECTION IS FOR HI ENCODE ONLY  @ @@@@EN0550MM
)@@G@@ ANA    A5,A2      .    @ @@@@       LDSL   A4,36      .    @ @@@@      MN
)@@G@@ DSA    A4,36      .    @ @@@@       LA     A2,ENLEFT+1 .   @E@@@@      MO
)@@G@@ JZ     A2,EN0700  .   IF LEFT ARG=0 REST OF DIGITS=0 @ @@@@       DI   MP
)@@G@@  A4,A2      .    @ @@@@       DSA    A4,36      .    @D@@@@       J    MQ
)@@G@@  EN0500     .   NR= FLOOR(OLD-NEW)/LFTARG@[@@@@.     @F@@@@.           MR
)@@G@@                  THIS SECTION IS FOR DF ENCODE ONLY  @ @@@@EN0600 DFAN MS
)@@G@@  A4,A1      .    @ @@@@       DL     A1,ENLEFT  .    @ @@@@       DJZ  MT
)@@G@@  A1,EN0700  .    @ @@@@       DFD    A4,A1      .    @ @@@@       FUZZDMU
)@@G@@N            .    @ @@@@       JNZ    A1,EN0630  .    @ @@@@       JZ   MV
)@@G@@  A2,EN0630  .    @ @@@@       DFLOAT A0,A1      .    @ @@@@EN0630 DL   MW
)@@G@@  A4,A1      .    @ @@@@       J      EN0500     .    @[@@@@.     @C@@@@MX
)@@G@@EN0700 DSL    A1,72      .    IF ZERO LEFT ARG  @E@@@@EN0710 JNGD   A14,MY
)@@G@@EN0800 .     ALL THE REST OF  THE DIGITS  @C@@@@       LMJ    X2,0,X2   MZ
)@@G@@ .          ARE ZEROS   @ @@@@       J      EN0710     .    @[@@@@.     NA
)@@G@@@D@@@@EN0730 LA     A6,LFTDSC  .  DUPE LEFT ARG IF ITS NULL @ @@@@      NB
)@@G@@ LMJ    X11,DUPE   .    @ @@@@       J      EN0950     .    @ @@@@      NC
)@@G@@ PUSH   A2         .    @ @@@@       J      EN0800     .    @[@@@@.     ND
)@@G@@@ @@@@EN0800 LX     X11,ENLINK .    @ @@@@       J      1,X11      .    NE
)@@G@@@A@@@@EN0920 ERROR  YDOMAI,EN0950   .     @A@[@@EN0930 ER     ERR$      NF
)@@G@@      .     @A@@[[EN0930 EQU   0           . SYSERR   @B[@@@EN0950 LX   NG
)@@G@@ X11,ENLINK  .     ERROR EXIT @ @@@@       J      0,X11      .    @ @@@@NH
)@@G@@       VARBLS            .    @ @@@@ENOLDR RES    2          .    @ @@@@NI
)@@G@@ENLEFT RES    2          .    @ @@@@ENLINK RES    1          .    @ @@@@NJ
)@@G@@ENMFLG RES    1          .    @ @@@@       VARCON            .    @A@@@@NK
)@@G@@ENDDSC CBLOCK ZTPTMP,0,ZRANKV,0 .   @ @@@@       0                 .    NL
)@@G@@@G@@@@/.                                                                NM
)@@G@@  DEAL@[@@@@.     @ @@@@       INSTRS            .    @ @@@@DEAL*  SX   NN
)@@G@@ X11,DELINK  .    @C@@@@       LMJ   X11,PIKTWO  . PREPARE TO FETCH ARGSNO
)@@G@@@ @@@@       J     DE0999      .    @D@@@@       TNE,U A14,1       . IS NP
)@@G@@LEFTARG UNIT LENGTH?    @C@@@@       TE,U  A15,1       . YES, IS RIGHT ANQ
)@@G@@LSO?  @B@@@@       J     DE0900      . NO, LENGTH ERR @G@@@@       JE,U NR
)@@G@@ A3,ZMOHFI DE0020 . IF ARGS HALFINT, GO USE EXCHANGE RTNE   @F@@@@      NS
)@@G@@ JNE,U A3,ZMODFL DE0910 . IF NOT DFLOAT EITHER, DOMAIN ERR  @ @@@@. ARGSNT
)@@G@@ TO BE FETCHED DFLOAT-- @C@@@@DE0010 LMJ   X4,0,X4     . LEFTARG (LENGTHNU
)@@G@@)     @D@@@@       DJZ   A1,DE0400   . IF ZERO, RESULT IS NULLVECT@D@@@@NV
)@@G@@       JN    A1,DE0910   . BUT NEGATIVE IS DOMAIN ERR @C@@@@       DL   NW
)@@G@@ A4,A1       . PREPARE TO TRUNCATE  @ @@@@       FUZZDN            .    NX
)@@G@@@G@@@@       JNZ   A1,DE0920   . IF WON'T FIT IN HFI, TOO BIG--SAY WSFULNY
)@@G@@L     @E@@@@       SA,H2 A2,DEDUMY   . ELSE POST RESULT LENGTH INDESCR  NZ
)@@G@@@B@@@@       LMJ   X6,0,X6     . GET RITEARG    @E@@@@       JN    A4,DEOA
)@@G@@0910   . IT CANNOT BE NEGATIVE EITHER     @B@@@@       FUZZDN           OB
)@@G@@ . INTEGERIZE IT  @F@@@@       JNZ   A1,DE0300   . IF STILL FLOATING, GOOC
)@@G@@ USE SPECIAL RTNE @E@@@@       DL    A4,A1       . ELSE PUT BACK IN RITEOD
)@@G@@ARG REGS    @E@@@@       J     DE0030      . AND PRETEND IT WAS ALWAYS HOE
)@@G@@ALFINT@A@@@@. ARGS TO BE FETCHED IN HALFINT     @A@@@@DE0020 LMJ   X4,0,OF
)@@G@@X4     . GET LEFT @E@@@@       DJZ   A1,DE0400   . ZERO ALWAYS GIVES NULOG
)@@G@@L RESULT    @C@@@@       JN    A1,DE0910   . NEG IS DOMAIN ERR    @F@@@@OH
)@@G@@       SA,H2 A2,DEDUMY   . SAVE LENGTH OF RESULT IN DUMMY DESCR   @B@@@@OI
)@@G@@       LMJ   X6,0,X6     . GET RITEARG    @E@@@@       JN    A4,DE0910  OJ
)@@G@@ . WHICH HAD BETTER NOT BE NEGATIVE @C@@@@DE0030 TLE,H2 A5,DEDUMY  . IS OK
)@@G@@LENGTH .LE. DOMAIN@B@@@@       J     DE0910      . NO, DOMAIN ERR @C@@@@OL
)@@G@@       SA,H2 A5,DEDDMY   . YES, TEMP SAVE DOMAIN@D@@@@       LA,U  A0,ZMOM
)@@G@@OHFI   . RESULT MODE WILL BE HALFINT@C@@@@       SA,S2 A0,DEDUMY   . PUTON
)@@G@@ IT INTO THE DESCR@G@@@@. NOW SEE IF THERE'S ENUF ROOM IN THE WS TO USE OO
)@@G@@THE EXCHANGE ALGORITHM  @F@[@@DE0040 UNLNKL            . UNLINK THE LARGOP
)@@G@@EST FREE BLOCK IN THE WS@G@@[[DE0040  LMJ    X11,BFLARG     . GET SIZE OOQ
)@@G@@F LARGEST AVAILABLE FREE BLOCK@G[@@@       LA,H2 A2,DEDUMY   . GET DOMAIOR
)@@G@@N INTO WHICH RANDOM NOS ARE TO MAP  @A@@@@       AA,U  A2,1        . ROUOS
)@@G@@ND    @C@@@@       SSL   A2,1        . CONVERT TO WORDS     @E@@@@      OT
)@@G@@ TG    A2,A0       . NO WDS AVAIL (A0) .GT. NO NEEDED?@E@@@@       J    OU
)@@G@@ DE0200      . NO, MUST SEARCH FOR DUPLICATES   @D@[@@       LA,U  A0,0 OV
)@@G@@       . YES, SET NO WDS USED=0     @D@[@@       ALOCTB            . RESOW
)@@G@@TORE FREE STORAGE LIST  @[@[@@.     @[#@@@.     @F@@@@. EXCHANGE ALGORITOX
)@@G@@HM- GENERATES A VECTOR OF INTEGERS AND RANDOMLY @#@@@@. PERMUTES IT---  OY
)@@G@@@[@@@@.     @E@@@@DE0100 LA,U  A0,DEDDMY   . DUMMY DESCR WITH LENGTH=RITOZ
)@@G@@EARG  @A@@@@       LA,U  A1,ZMOHFI   . SET MODE @E@@@@       LMJ   X11,PPA
)@@G@@UTANS  . RESERVE THE SPACE WE'LL NEED     @ @@@@       J     DE0999     PB
)@@G@@ .    @D@@@@       PUSH  A6          . STACK RESULT DESCR ADDR    @ @@@@PC
)@@G@@       LA    A1,A6       .    @C@@@@       ABSADR A1         . GET ABSADPD
)@@G@@R OF DESCR  @G@@@@       LA,H2 A5,DEDUMY   . GET ACTUAL LENGTH OF RESULTPE
)@@G@@ AFTER EXCHANGING @D@@@@       SA,H2 A5,0,A1     . INTO RESULT DESCRIPTOPF
)@@G@@R     @F@@@@. NOW COMPUTE NO OF WDS WHICH ARE TO BE RELEASED WHEN WE'RE PG
)@@G@@DONE  @D@@@@       AA,U  A5,1        . ROUND NO ELS IN RESULT     @B@@@@PH
)@@G@@       SSL   A5,1        . CONVERT TO WDS @G@@@@       SA    A5,R2      PI
)@@G@@ . TEMP SAVE NO WDS ACTUALLY NEEDED FOR RESULT  @G@@@@       AA,U  A5,0,PJ
)@@G@@X3     . ADD ABSADR OF 1ST WD USED TO NO WDS USED     @G@@@@       RELADPK
)@@G@@R A5         . GIVES RELATIVE ADDR OF 1ST WD TO BE FREED    @D@@@@      PL
)@@G@@ SA    A5,R3       . POST FWA TO BE RELEASED    @G@@@@       LA,H2 A5,DEPM
)@@G@@DDMY   . VALUE OF RITEARG=NO ELS USED IN EXCHANGE     @A@@@@       AA,U PN
)@@G@@ A5,1        . ROUND    @G@@@@       SSL   A5,1        . CONVERT TO WDS PO
)@@G@@GIVING SIZE OF INITIAL RESERVE@F@@@@       ANA   A5,R2       . LESS NO APP
)@@G@@CTUALLY NEEDED=NO TO BE FREED @D@@@@       SA    A5,R2       . TEMP SAVEPQ
)@@G@@ NO WDS TO RELEASE@D@@@@       DL    A4,X2       . TEMP SAVE STASH POINTPR
)@@G@@ERS   @D@@@@. INITIALIZE RESULT TO VECTOR OF DESCENDING INTEGERS  @C@@@@PS
)@@G@@       LA,H2 A13,DEDDMY  . NO OF VALUES TO STASH@C@@@@DE0110 JNGD  A13,DPT
)@@G@@E0120  . OUT IF NO MORE TO DO @F@@@@       LA    A2,A13      . LOOP CTR PU
)@@G@@IS 1 LESS THAN NO LEFT TO DO  @E@@@@       AA    A2,WSIXOR   . ADDING THPV
)@@G@@E ORIGIN FIXES IT UP    @A@@@@       LMJ   X2,0,X2     . STASH IT @C@@@@PW
)@@G@@       J     DE0110      . GO BACK FOR NEXT     @G@@@@. NOW THAT WE'RE SPX
)@@G@@ET UP, WE EXCHANGE. EACH RANDOM NO IS MAPPED INTO THE @G@@@@. INTERVAL [PY
)@@G@@1,K] (WHERE K IS THE NO OF VALUES LEFT TO BE GENERATED),    @G@@@@. GIVIPZ
)@@G@@NG SOME RESULT M.  THE M'TH VALUE (COUNTING FROM THE RIGHT) IS    @G@@@@QA
)@@G@@. THEN EXCHANGED WITH THE LEFTMOST OF THE UNUSED VALUES, AND THEN K     QB
)@@G@@@G@@@@. IS REDUCED BY 1 (I.E. STEPPED TO THE RIGHT). THUS VALUES ARE TAKQC
)@@G@@EN    @G@@@@. RANDOMLY FROM THE RIGHT AND MOVED TO THE LEFT, WITH THE FIQD
)@@G@@NAL RESULT  @C@@@@. BEING CONSTRUCTED IN PLACE FROM LEFT TO RIGHT @[@@@@QE
)@@G@@.     @G@@@@DE0120 DS    A4,X2  . RESTORE STASH REGS (USED TO STORE EXCHQF
)@@G@@ANGED VALS) @E@@@@       LX,H2 X6,GRITBL+ZMOHFI . ADDR OF RITEARG FETCH QG
)@@G@@RTNE  @F@@@@       LX    X7,X3  . USE RITEARG FETCH TO GET NEXT EXCHANGEQH
)@@G@@ VAL  @E@@@@       LA,H2 A6,DEDDMY   . LENGTH OF WORKAREA (NO OF ELS)   QI
)@@G@@@F@@@@       LA,U  A7,0        . SET CONST AS IF RITEMOST EL IS IN H2   QJ
)@@G@@@C@@@@       TEP,U A6,1        . IS NO OF ELS ODD?    @G@@@@       LA,U QK
)@@G@@ A7,1        . YES, RESET CONST, RITEMOST DATUM IS IN H1    @C@@@@      QL
)@@G@@ ANA,U A6,1        . ROUND NO OF ELS DOWN @E@@@@       SSA   A6,1       QM
)@@G@@ . AND CONVERT TO NO WDS LESS 1     @G@@@@       AA,U  A6,0,X3     . PLUQN
)@@G@@S FWA=LAST WORD ADDRESS CONTAINING DATA   @G@@@@       LA,H2 A13,DEDDMY QO
)@@G@@ . SET COUNTER TO NO OF ELS LEFT TO BE DONE     @D@@@@. NOW WE START REAQP
)@@G@@LLY GENERATING AND EXCHANGING---    @D@@@@DE0130 JNGD  A13,DE0150  . IF QQ
)@@G@@NO MORE TO DO, GET OUT  @C@@@@       LA    A5,A13      . GET CURRENT COUQR
)@@G@@NTER  @F@@@@       AA,U  A5,1        . SET IT TO ACTUAL NO YET UNDONE (=QS
)@@G@@N)    @G@@@@       LMJ   A0,RANINT   . GENERATE INTEGER ON INTERVAL (0,NQT
)@@G@@-1) IN A2   @F@@@@       AA    A2,A7       . BUMP BY: 1 IF LENGTH ODD, 0QU
)@@G@@ IF EVEN    @C@@@@       DSL   A2,36       . ALIGN FOR DIVISION   @E@@@@QV
)@@G@@       DI,U  A2,2        . CONVERT TO WORD, HALFWORD INDICES@G@@@@      QW
)@@G@@ LNA   A2,A2       . NEGATE WORDCT, AS WE'RE COUNTING FROM RIGHT  @G@@@@QX
)@@G@@       AA    A2,A6       . PLUS LAST WORD ADDR=WORD TO EXCHANGE FROM    QY
)@@G@@@F@@@@       DS    A2,X4       . SET UP EXCHANGE WORD/HALFWORD POINTERS QZ
)@@G@@@F@@@@DE0140 EX    DERGET,X5   . FETCH RANDOMLY FROM THE RIGHT TO A1,A2 RA
)@@G@@@F@@@@       LMJ   X6,0,X6     . AND LINEARLY FROM THE LEFT TO A4,A5    RB
)@@G@@@F@@@@       EX    DERPUT,X5   . STORE OLD LEFT WHERE RIGHT CAME FROM   RC
)@@G@@@G@@@@       LMJ   X2,0,X2     . AND MAKE OLD RIGHT THE NEW SELECTED VALRD
)@@G@@UE    @C@@@@       J     DE0130      . THEN GO BACK FOR MORE@G@@@@. NOW RE
)@@G@@THAT EXCHANGE IS OVER, RELEASE UNUSED PART OF RITEARG DATA AREA   @D@@@@RF
)@@G@@DE0150 DL    A0,R2       . RECOVER PACKET SET UP ABOVE@D@@@@       JZ   RG
)@@G@@ A0,DE0500   . IF NOTHING TO FREE, QUIT   @D@@@@       FREE             RH
)@@G@@ . ELSE GET RID OF THE SPACE  @C@@@@       J     DE0500      . AND THEN RI
)@@G@@GET OUT     @[@@@@.     @F@@@@. DOMAIN HALFINT BUT NO ROOM FOR XCH-- CHERJ
)@@G@@CK DUPES BY SEARCHING   @[@@@@.     @E@@@@DE0200 LA,H2 A4,DEDDMY   . DOMRK
)@@G@@AIN TO MAP RENDOM VALUES INTO @A@@@@       DSL   A4,36       . EXTEND ITRL
)@@G@@@C@@@@       LA,U  A1,ZMOHFI   . SET MODE OF RESULT   @E@@@@       LA,U RM
)@@G@@ A0,RANINT   . ADDR OF RANDOM NO RTNE TO USE    @F@@@@       LX,U  X5,1 RN
)@@G@@       . SET POINTER FOR ORIGIN COMPENSATION    @E@@@@       J     DE031RO
)@@G@@0      . GO SET UP THE LOOP, AND DO IT    @[@@@@.     @E@@@@. RIGHT ARG RP
)@@G@@LARGE (DFLOAT) CHECK DUPLICATES BY SEARCHING    @[@@@@.     @F@@@@DE0300RQ
)@@G@@ DL    A4,A1       . MOVE FUZZED ARG BACK TO CORRECT REGS   @D@@@@      RR
)@@G@@ LA,U  A1,ZMODFL   . MODE OF RESULTS IS DFLOAT  @F@@@@       LA,U  A0,RARS
)@@G@@NFLT   . POST ADDR OF RANDOM NO RTNE TO USE     @G@@@@       LX,U  X5,2 RT
)@@G@@       . AND POINTER TO ORIGIN COMPENSATION INSTR     @B@@@@. SAVE PARAMRU
)@@G@@S, ALLOCATE SPACE FOR RESULT  @B@@@@DE0310 TNZ   WSIXOR      . ORIGIN ZERV
)@@G@@RO?   @F@@@@       LX,U  X5,0        . YES, CLEAR POINTER TO COMPENSATE RW
)@@G@@INSTR @G@@@@       SA,S2 A1,DEDUMY   . MODE TO DUMMY DESCR (AND IN REG FRX
)@@G@@OR PUTANS)  @G@@@@       DS    A4,DEMAPV   . SAVE VALUE INTO WHICH RANDORY
)@@G@@M NOS ARE MAPPED  @G@@@@       SA    A0,DERJMP   . POST ADDR OF RANDOM SRZ
)@@G@@UBROUTINE TO BE USED    @C@@@@       LA,U  A0,DEDUMY   . LOCN OF DUMMY DSA
)@@G@@ESCR  @C@@@@       LMJ   X11,PUTANS  . GET SPACE FOR RESULT @D@@@@      SB
)@@G@@ J     DE0999      . (MODE COMES BACK IN A3)    @D@@@@       PUSH  A6   SC
)@@G@@       . STACK POINTER TO RESULT    @G@@@@       LX,H2 X6,GRITBL,A3 . USSD
)@@G@@E RITEARG FETCHRTNE TO SCAN FOR DUPES     @F@@@@       LX    X7,X3      SE
)@@G@@ . WITH INITIAL ADDR SAME AS FOR STASH    @D@@@@       DL    A6,X6      SF
)@@G@@ . TEMP SAVE INITIAL FETCHREGS@E@@@@       LA,H2 A13,DEDUMY  . INITIALIZSG
)@@G@@E CT OF ELS TO BE DONE  @F@@@@       SZ    A14         . CLEAR COUNT OF SH
)@@G@@NO OF VALUES GENERATED  @G@@@@. NOW LOOP, GENERATING A VAL AND THEN CHECSI
)@@G@@KING IT AGAINST ALL PREVIOUSLY@A@@@@. GENERATED VALUES FOR DUPLICATES   SJ
)@@G@@@C@@@@DE0320 JNGD  A13,DE0500  . WHEN NO MORE, GET OUT@D@@@@DE0330 DL   SK
)@@G@@ A4,DEMAPV   . GET MAP VALUE (RITEARG) =N @G@@@@       LMJ   A0,*DERJMP SL
)@@G@@ . MAP NEXT RANDOM NO INTO INTERVAL (0,N-1)     @E@@@@       EX    DEADDSM
)@@G@@O,X5   . ADD INDES ORIGIN, IF NECESSARY   @D@@@@. LOOP OVER ALL PREVIOUSSN
)@@G@@ VALS, LOOKING FOR A DUPLICATE@C@@@@       DS    A6,X6       . SET UP FESO
)@@G@@TCHREGS     @D@@@@       LR    R1,A14      . NO OF ELS GENERATED SO FAR SP
)@@G@@@D@@@@DE0340 JNGD  R1,DE0350   . OUT WHEN ALL VALUES SCANNED@D@@@@      SQ
)@@G@@ LMJ   X6,0,X6     . GET NEXT VALUE TO A4,A5    @C@@@@       DTE   A4,A1SR
)@@G@@       . SAME AS NEW VAL?     @C@@@@       J     DE0340      . NO, CHECKSS
)@@G@@ NEXT ONE   @D@@@@       J     DE0330      . YES, DISCARD AND TRY AGAIN ST
)@@G@@@E@@@@DE0350 LMJ   X2,0,X2     . NEW VAL NOT A DUPE, STASH IT     @C@@@@SU
)@@G@@       AA,U  A14,1       . BUMP CT OF NO DONE   @C@@@@       J     DE032SV
)@@G@@0      . AND GO BACK FOR NEXT @[@@@@.     @A@@@@. LEFT ARG ZERO, RESULT SW
)@@G@@IS NULLVECT @[@@@@.     @C@@@@DE0400 LA,U  A0,ZMOHFI   . GET NULLVECTOR SX
)@@G@@TYPE  @B@@@@       SA,S2 A0,DEDUMY   . TO RESULT DESCR@B@@@@       SZ,H2SY
)@@G@@ DEDUMY      . CLEAR LENGTH   @B@@@@       LA,U  A6,DEDUMY   . ADDR OF DSZ
)@@G@@ESCR  @ @@@@       RELADR A6         .    @C@@@@       LMJ   X11,DUPE   TA
)@@G@@ . PUT NULL INTO WS     @ @@@@       J     DE0999      .    @C@@@@      TB
)@@G@@ PUSH  A2          . STACK THE RESULT     @[@@@@.     @#@@@@. NORMAL EXITC
)@@G@@T     @[@@@@.     @ @@@@DE0500 LX,H2 X11,DELINK  .    @ @@@@       J    TD
)@@G@@ 1,X11       .    @[@@@@.     @^@@@@. ERRORS IN DEALING     @[@@@@.     TE
)@@G@@@ @@@@DE0900 ERROR YLENGT,DE0999 .  @ @@@@DE0910 ERROR YDOMAI,DE0999 .  TF
)@@G@@@ @@@@DE0920 ERROR YWSFUL,DE0999 .  @[@@@@.     @ @@@@DE0999 LX,H2 X11,DTG
)@@G@@ELINK  .    @ @@@@       J     0,X11       .    @[@@@@.     @C@@@@. TABLTH
)@@G@@ES USED TO RANDOMLY.INDEX INTO THE ARG    @ @@@@DERGET LA,H2 A2,0,X4    TI
)@@G@@ .    @ @@@@       LA,H1 A2,0,X4     .    @ @@@@DERPUT SA,H2 A5,0,X4    TJ
)@@G@@ .    @^@@@@       SA,H1 A5,0,X4    @[@@@@.     @A@@@@. TABLE FOR ADDITITK
)@@G@@ON OF WS ORIGIN   @F@@@@DEADDO NOP   0,0         . FOR ORIGIN ZERO, NO ATL
)@@G@@DDITION NEEDED    @C@@@@       DA    A1,(+1D)    . ORIGIN 1, HALFINT    TM
)@@G@@@C@@@@       DFA   A1,(+1.0D)  . ORIGIN 1, DFLOAT     @#@@@@       VARBLTN
)@@G@@S .   @#@@@@DELINK RES   1 .  @E@@@@DERJMP RES   1           . INDIRECT TO
)@@G@@THRU HERE TO RANDOM RTNE@G@@@@DEMAPV RES   2           . TEMP STORAGE OFTP
)@@G@@ VAL TO MAP INTO (I.E.RITEARG)@ @@@@       VARCON            .    @G@@@@TQ
)@@G@@DEDUMY CBLOCK ZTPTMP,0,ZRANKV,0    . USED IF WORKAREA LENGTH=LEFTARG VALTR
)@@G@@@G@@@@DEDDMY CBLOCK ZTPTMP,0,ZRANKV,0    . USED IF IT'S RITEARG VAL (XCHTS
)@@G@@G)    @F@@@@/. I/O OPERATORS (EXCEPT EVALUATED INPUT, WHICH CAUSES RECURTT
)@@G@@SION) @[@@@@.     @#@@@@       INSTRS .   @C@@@@QQUADI* SX   X11,QQLINK TU
)@@G@@ . QUOTE-QUAD INPUT     @D@@@@       SX    X11,QESCAP  . SET FLAG: O-U-TTV
)@@G@@ IS ALLOWED @D@@@@       LMJ    X11,LINRES . RELOAD BUFFER REGISTERS    TW
)@@G@@@C@@@@       LA,U  A1,AEOL     . SET EOL FLAG INTO    @B@@@@       LMJ  TX
)@@G@@  X2,0,X2    . END OF BUFFER  @D@@@@       LMJ   X11,BUFILL  .  THEN GO TY
)@@G@@READ THE LINE     @B@@@@       J     QQ0900      . EOF ON INPUT   @F@@@@TZ
)@@G@@       TZ    QESCAP      . WAS ESCAPE SEQUENCE (O-U-T) DETECTED?  @F@@@@UA
)@@G@@       J     QQ0050      . YES, LEAVE FLAG SET FOR INTERP AND EXIT@B@@@@UB
)@@G@@. NOW SET UP DESCRIPTOR FOR DATA RECIEVED @B@@@@QQ0010 LA,U  A3,CIOBUF  UC
)@@G@@ . ADDR OF DATA   @ @@@@       RELADR A3         .    @G@@@@       LA   UD
)@@G@@  A0,A13     . GET NUMBER OF CHARACTERS FROM BUFFER HANDLER @E@@@@      UE
)@@G@@ ANA,U  A0,1       . SUBTRACT ONE FOR AEOL MARKING END@C@@@@       JNE,UUF
)@@G@@ A0,1 QQ0020 . IF NOT 1, THEN VECTOR@E@@@@       LA    A0,A3       . H2 UG
)@@G@@OF DESCR=DATA ADDR FOR SCALARS@B@@@@       LA,U  A1,ZRANKS   . CLEAR RANUH
)@@G@@K     @D@@@@       J     QQ0030      . AND GO INITIALIZE DESCR    @F@@@@UI
)@@G@@QQ0020 SA    A3,QQVDSC+1 . FOR VECTOR, DATA ADDR =WD 2 OF DESCR   @D@@@@UJ
)@@G@@       LA,U  A1,ZRANKV   . GET VECTOR RANK INDICATOR  @E@@@@QQ0030 SA,H2UK
)@@G@@ A0,QQVDSC   . SET ADDR/LENGTH  FOR SCAL/VECT   @A@@@@       SA,S3 A1,QQUL
)@@G@@VDSC   . SET RANK @ @@@@       LA,U  A6,QQVDSC   .    @ @@@@       RELADUM
)@@G@@R A6         .    @C@@@@       LMJ   X11,DUPE    . PUT DATA INTO WS     UN
)@@G@@@ @@@@       J     QQ0990      .    @C@@@@       PUSH  A2 QQ0910   . STAUO
)@@G@@CK RESULT DESCR   @H@@@@       .      SINCE WE HAVE STORED THE STUFF IN UP
)@@G@@THE BUFFER WE GET RID OF IT   @F@@@@       LMJ    X11,LINITL . RESET ALLUQ
)@@G@@ THE PONITERS TO THE BEGINING @ @@@@QQ0050 LX    X11,QQLINK  .    @B@@@@UR
)@@G@@       J     1,X11       . NORMAL EXIT    @[@@@@.     @^@@@@.     PRINT US
)@@G@@ALFABETIC   @[@@@@.     @F@@@@QQPRNT*   .         PRINT, TOP ITEM ON STAUT
)@@G@@CK BUT DO NOT FLUSH     @B@@@@       SX     X11,QQLINK . SAVE RETURN    UU
)@@G@@@E@@@@       SX     X11,QQFLAG . SET  FLAG DONT FLUSH STACK AT END@D@@@@UV
)@@G@@       LMJ    X11,LINRES . RELOAD LIN CONTROL REGS    @ @@@@       J    UW
)@@G@@  QQ0100     .    @C@@@@QUPRNT*   .        PRINT, TOP ITEM FLUSH STACK  UX
)@@G@@@B@@@@       SX     X11,QQLINK . SAVE RETURN    @E@@@@       SZ     QQFLUY
)@@G@@AG     . SET FLAG TO FLUSH STACK AT END   @B@@@@       LMJ    X11,LINRESUZ
)@@G@@ . PICK UP REGS   @B@@@@       LMJ    X11,LINSTR .  FLUSH BUFFER  @A@@@@VA
)@@G@@QQ0100 POP    A6         . POP STACK@ @@@@       PUSH   A6         .    VB
)@@G@@@ @@@@       TG,U   A6,0400000 .    @ @@@@       J      QQ0200     .    VC
)@@G@@@ @@@@       LMJ    X11,PRNTDS .    @ @@@@       J      QQ0990     .    VD
)@@G@@@ @@@@       LMJ    X11,LINSUS .    @B@@@@       TNZ    QQFLAG     . CHEVE
)@@G@@CK FLAG     @B@[@@       LMJ    X11,LINSTR . FLUSH LINE     @B@@][      VF
)@@G@@ LMJ    X11,LINFRS . FLUSH LINE     @ [@@@       LX    X11,QQLINK  .    VG
)@@G@@@ @@@@       J     1,X11       .    @ @[@@QQ0200 LA    A0,QQDESC   .    VH
)@@G@@@#@[@@       PUSH  A0   @A@[@@       ERROR YSYSTM,QQ0990    .     @F@[@@VI
)@@G@@QQ0900 ERROR YTERM,QQ0990     . UNEXPECTED EOF=TERMINATION ERROR  @A@@[[VJ
)@@G@@QQ0200 EQU   0           . SYSERR   @B@@[[. UNEXPECTED EOF; SIGN OFF IMMVK
)@@G@@EDIATELY    @A@@[[QQ0900  CALREP,SYSREP X11,SINOFF   .@A^@@@QQ0910 ERRORVL
)@@G@@ YWSFUL,QQ0990    .     @A@@@@QQ0990 LX    X11,QQLINK       .     @A@@@@VM
)@@G@@       J     0,X11            .     @#@@@@       VARBLS  .  @#@@@@QQLINKVN
)@@G@@ RES   1 .  @#@@@@QQADDR RES   1 .  @#@@@@QQFLAG RES   1   .@#@@@@QQDESCVO
)@@G@@ RES   1 .  @#@@@@       VARCON  .  @B@@@@QQVDSC CBLOCK  ZTPTMP,ZMOCHR,ZVP
)@@G@@RANKV,0 0 . @]@@@@       END .___0,1       . SUBTRACT ONE FOR AEOL MARKIVQ
)@@G@@NG END@C@@@@       JNE,U A0,1 QQ0020 . IF NOT 1, THEN VECTOR@E@@@@      VR
)@@G@@ LA    A0,A3       . H2 *[S@@@*SDFF*@G@@@@. ****************************VS
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUVT
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 VU
)@@G@@                                                    * @^@@@@       AXR$ VV
)@@G@@        .   @C@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@VW
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * VX
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               VY
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 VZ
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            WA
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACEWB
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL WC
)@@G@@BLOCK TYPES                 * @G@@@@.                                   WD
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  WE
)@@G@@                                        * @G@@@@. **********************WF
)@@G@@*********************************************** @[@@@@.     @E@@@@. THISWG
)@@G@@ POPS LEFT ARG: LENGTH ERROR IF ARRAY OF LENGTH > 2   @B@@@@.           WH
)@@G@@         DOM ERROR IF CHAR    @G@@@@.                  USES PIKRIU TO SEWI
)@@G@@T-UP PICK(IF DF, FORCED TO HALFINT) @ @@@@. POPS RIGHT ARG, USES SUBMIX WJ
)@@G@@@F@@@@.             DOM ERROR IF LEFT LENGTH NE 1 & NE RANK OF RIGHT    WK
)@@G@@@B@@@@. AT END, X6 AND X7 CONTAIN PIK STUFF     @[@@@@.     @#@@@@      WL
)@@G@@ INSTRS .   @ @@@@MIXPOP* SX   X11,MISAVE  .    @[@@@@.     @B@@@@.     WM
)@@G@@POP LEFT ARG, SET-UP PICK ROUTINE   @[@@@@.     @ @@@@       SA    A2,MIWN
)@@G@@TEMP   .    @F@@@@       VERIFY 0,,MI0999  . POP LEFTARG, REQUIRE DEFINEWO
)@@G@@D OPERAND   @E@@@@       SAVER A0,LFTDAD,8 . POST PARAMS IN LEFT ARG LOCWP
)@@G@@NS    @F@@@@       TZ    2,X11       . IF 0, DO NOT SAVE LEFT ARG DESCR WQ
)@@G@@ADDR  @G@@@@       SA    A6,*2,X11   . IF NON-ZERO, IS ADDR OF LOCATION WR
)@@G@@TO BE USED  @D@@@@       JZ    A5,MI0115   . IF NULL, SKIP ALL CHECKS   WS
)@@G@@@E@@@@       TZ,H2 1,X11       . SHOULD THERE BE A LENGTH CHECK   @ @@@@WT
)@@G@@       J     MI0110      . NO @D@@@@       JG,U  A4,2 MI0110 . TEST IF RWU
)@@G@@ANK IS LESS THAN 2@F@@@@       JNE,U A5,1 MI0960 . IF ARRAY, NOT UNIT LEWV
)@@G@@NGTH: LENGTH ERROR@E@@@@MI0110 JE,U  A3,ZMOCHR MI0930 . IF CHARACTER: DOWW
)@@G@@M ERROR     @C@@@@       TNE,U A3,ZMODFL   . TEST FOR DOUBLE FLOAT@D@@@@WX
)@@G@@       LA,U  A3,ZMODFI   . IF DF, FORCE TO HALFINT    @B@@@@MI0115 SA   WY
)@@G@@ A5,MILENG   . SAVE LENGTH    @C@@@@       LMJ   X11,PIKRIU  . SET-UP FOWZ
)@@G@@R FETCH     @B@@@@       J     MI0999      . ERROR RETURN   @B@@@@      XA
)@@G@@ SX    X6,MISAV6   . SAVE XREGS     @C@@@@       SX    X7,MISAV7   .    XB
)@@G@@      FROM PIKRIU @ @@@@       LA    A2,MITEMP   .    @D@@@@       LA   XC
)@@G@@ A0,MISAVE   . GET ADDR OF CALLING SEQ    @F@@@@       LX,U  X11,SUBMIX XD
)@@G@@ . PREPARE TO INIT WITHOUT SELECTED COORD @E@@@@       TZ,H1 1,A0       XE
)@@G@@ . IS THAT WHAT CALL SEQ REQUIRED?  @G@@@@       LX,U  X11,SUBSEL  . NO,XF
)@@G@@ PREPARE TO GET WITH SELECTED COORDINATE  @C@@@@       LMJ   X11,0,X11  XG
)@@G@@ . CALL THE ROUTINE     @ @@@@       J     MI0999      .    @B@@@@MI0130XH
)@@G@@ LA    A5,MILENG   . RELOAD LENGTH  @ @@@@       LX    X11,MISAVE  .    XI
)@@G@@@B@@@@       TZ,H2 1,X11       . LENGTH CHECK?  @ @@@@       J     MI014XJ
)@@G@@0      . NO @D@@@@       JE,U  A5,1 MI0140 . IF LENGTH=1, SKIP CHECK    XK
)@@G@@@G@@@@       JNE   A5,RESRNK MI0940 . IF LENGTH OF LEFT NE RANK OF RIT,DXL
)@@G@@OM ERR@B@@@@MI0140 LX    X6,MISAV6   . RELOAD THE     @B@@@@       LX   XM
)@@G@@ X7,MISAV7   .        XREGS   @A@@@@       LX    X11,MISAVE  . OK-RETURNXN
)@@G@@@ @@@@       J     3,X11       .    @ @@@@MI0910 ERROR YUNIMP,MI0999 .  XO
)@@G@@@ @@@@MI0930 ERROR YDOMAI,MI0999 .  @ @@@@MI0940 ERROR YLENGT,MI0999 .  XP
)@@G@@@B@@@@MI0960 ERROR YRANK,MI0999 . RANK ERROR    @ @@@@MI0999 LX    X11,MXQ
)@@G@@ISAVE  .    @B@@@@       J     0,X11       . ERROR RETURN   @#@@@@      XR
)@@G@@ VARBLS .   @#@@@@MITEMP RES 1   .  @#@@@@MILENG RES   1 .  @#@@@@MISAV6XS
)@@G@@ RES   1 .  @#@@@@MISAVE RES   1 .  @#@@@@MISAV7 RES   1 .  @[@@@@.     XT
)@@G@@@B@@@@. THIS CREATES CALLING SEQUENCE TO MIXPOP @[@@@@.     @#@@@@P     XU
)@@G@@ PROC .     @#@@@@MIXARG* NAME 0 .  @#@@@@MIXARN* NAME 1 .  @#@@@@      XV
)@@G@@ UNLI$T .   @ @@@@       LMJ   X11,MIXPOP  .    @ @@@@       J     P(1,1XW
)@@G@@)      .    @ @@@@       +     P(0,1), P(0,0)  .@^@@@@       DO P(2,1)=0XX
)@@G@@ , + 0@ @@@@       DO P(2,1)>0 , + P(2,1) @#@@@@       LI$T .     @]@@@@XY
)@@G@@       END .@[@@@@.     @#@@@@/. TAKE AND DROP  @#@@@@       INSTRS .   XZ
)@@G@@@D@@@@DROP*  SZ    DTTEST      . CLEAR TAKE/DROP INDICATOR  @ @@@@      YA
)@@G@@ J     TA0100      .    @ @@@@TAKE*  SX    X11,DTTEST  .    @ @@@@TA0100YB
)@@G@@ SX    X11,TDLINK  .    @A@@@@       MIXARG TA0999 . POP ARGS     @ @@@@YC
)@@G@@       LX,U  X2,ZMOHFI   .    @D@@@@       LX,H2 X2,PUTARY,X2 . ADDR OF YD
)@@G@@DIM STASH RTNE    @E@@@@       LX    X3,(+1,RESDIM) . INITIAL RESULT WORYE
)@@G@@D POINTER   @D@@@@       LA    A15,RESRNK  . LOAD THE RANK OF THE RESULTYF
)@@G@@@D@@@@       LA,U  A14,1       . INITIALIZE LENGTH COUNTER  @B@@@@      YG
)@@G@@ LX    X4,(1,0)    . DIM COUNTER    @[@@@@.     @ @@@@.     LOOP THROUGHYH
)@@G@@ LEFT ARG   @B@@@@.     TAKE:  ELEMCT = ABS(PICKED VAL)     @B@@@@.     YI
)@@G@@       WORDPT = 1 IF PICKED VAL IS +@E@@@@.                     ELEMCT -YJ
)@@G@@ PICKED + 1 IF PICKED VAL IS -@C@@@@.     DROP:  ELEMCT = ELEMCT - ABS(PYK
)@@G@@ICKED VAL)  @B@@@@.            WRODPT = PICKED VAL + 1 IF + @B@@@@.     YL
)@@G@@                1 IF PICKED VAL IS -@[@@@@.     @D@@@@. SCAN LEFTARG ANDYM
)@@G@@ SET ADDRESS MAP ARRAYS ACCORDINGLY @B@@@@TA0200 JNGD  A15,TA0300  . ANYYN
)@@G@@ MORE TO DO?@D@@@@       LMJ   X6,0,X6     . GET NEXT VALUE OF LEFT ARG YO
)@@G@@@E@@@@       JNZ   A4,TA0930   . DFLOAT IS TOO BIG.. DOMAIN ERR   @F@@@@YP
)@@G@@       LMA   A2,A5       . FORCE POSITIVE TO TEST AGAINST DIM     @F@@@@YQ
)@@G@@       JE,H1 A2,ELEMCT,X4  TA0205 . IF VALUE = NUM OF ELEMENTS, OK@E@@@@YR
)@@G@@       JNG,H1 A2,ELEMCT,X4 TA0930 . IF GTR, DOMAIN ERROR    @E@@@@. FOR YS
)@@G@@DROP, NO ELS TO FETCH IS TOT NO LESS NO BEING DROPPED @C@@@@TA0205 TZ   YT
)@@G@@ DTTEST      . ARE WE DOING DROP?   @E@@@@       J     TA0210      . NO,YU
)@@G@@ TAKE... GO SET UP FOR IT     @C@@@@       LA,H1 A2,ELEMCT,X4 . LOAD NO YV
)@@G@@OF ELEMENTS @E@@@@       ANMA  A2,A5       . LESS NO OF ELEMENTS TO BE DYW
)@@G@@ROPPED@F@@@@       LNA   A5,A5       . INVERT SIGN SO DROP LOOKS LIKE TAYX
)@@G@@KE    @G@@@@TA0210 SA,H1 A2,ELEMCT,X4 . POST COUNT OF NO OF ELEMENTS TO YY
)@@G@@BE FETCHED  @G@@@@       LMJ   X2,0,X2     . AND MAKE IT NEXT DIMENSION YZ
)@@G@@OF THE RESULT     @E@@@@       MSI   A14,A2      . COMPUTE RUNNING LENGTZA
)@@G@@H OF RESULT @G@@@@       ANA,U A2,1        . FOR INITIALIZATION, ASSUME ZB
)@@G@@WE GOT THE 1ST ONE@G@@@@       SA,H2 A2,ELEMCT,X4 . AND POST NUMBER REMAZC
)@@G@@INING TO BE FETCHED     @G@@@@       JZ    A5,TA0240   . IF NOTHING TO FZD
)@@G@@ETCH, STEP TO NEXT SUBSCRIPT  @G@@@@       JP    A5,TA0240   . DITTO IF ZE
)@@G@@FETCHING STARTS AT THE FAR LEFT     @E@@@@. NOT STARTING FROM LEFTMOST EZF
)@@G@@L, SO FIND OUT WHERE TO START @E@@@@TA0220 LA,H1 A1,INDESC,X4 . TOTAL LEZG
)@@G@@NGTH OF THIS DIMENSION  @G@@@@       ANA,H1 A1,ELEMCT,X4 . LESS NO TO FEZH
)@@G@@TCH GIVES NO TO BE SKIPPED    @E@@@@       JZ    A1,TA0240   . IF NONE, ZI
)@@G@@GO TO NEXT COORDINATE   @F@@@@       AA,U  A1,1        . PLUS 1=INDEX OFZJ
)@@G@@ 1ST ELEMENT TO GET     @F@@@@       SA,H1 A1,WORDPT,X4 . SET INITIAL VAZK
)@@G@@L TO USE IF WE RECYCLE  @G@@@@       AU,U  A1,1        . SET VALUE AS IFZL
)@@G@@ WE'VE ALREADY DONE ONE EL    @F@@@@       SA,H2 A2,WORDPT,X4 . AND POSTZM
)@@G@@ FOR INDEX COMPUTATION ROUTINE@C@@@@       TNZ   WSIXOR      . ZERO-ORIGZN
)@@G@@IN INDEXING?@G@@@@       ANA,U A1,1        . YES, DECREMENT ELEMENT NO OZO
)@@G@@F 1ST TO PICK UP  @G@@@@       SA,H2 A1,CURVAL,X4 . SET CURRENT (1ST) VAZP
)@@G@@L OF THIS SUBSCRIPT     @C@@@@TA0240 NOP   A1,0,*X4    . BUMP SUBSCRIPT ZQ
)@@G@@PT    @ @@@@       J     TA0200      .    @C@@@@TA0300 SA    A14,RESLNT ZR
)@@G@@ . STORE NEW LENGTH     @A@@@@       LMJ   X11,SUBMOV  . DO MOVE  @B@@@@ZS
)@@G@@       J     TA0999      .   ERROR RETURN @ @@@@       LX    X11,TDLINK ZT
)@@G@@ .    @ @@@@       J     1,X11       .    @ @@@@TA0930 ERROR YDOMAI,TA09ZU
)@@G@@99 .  @]@@@@. ERROR EXIT@ @@@@TA0999 LX    X11,TDLINK  .    @ @@@@      ZV
)@@G@@ J     0,X11       .    @#@@@@       VARBLS .   @#@@@@TDLINK RES   1 .  ZW
)@@G@@@C@@@@DTTEST RES   1 . = 0, IF DROP    NOT= 0, IF TAKE@C@@@@RESRNK EQUF ZX
)@@G@@ RESBLK,,S3  . RANK OF SUBSCRIPTAND @D@@@@RESLNT EQUF  RESBLK,,H2  . LENZY
)@@G@@GTH OF SUBSCRIPTAND     @ @@@@/. ROTATE ON FIRST COORDINATE @#@@@@      ZZ
)@@G@@ INSTRS .   @]@@@@ROTFIR* .   @D@@@@       TNE,U A2,0        . NO FLAG MAA
)@@G@@EANS REVERSE ON   @D@@@@       LA,U  A2,2        .       FIRST COORDINATAB
)@@G@@E     @ @@@@       J     ROTATE      .    @[@@@@.     @]@@@@. ROTATE    AC
)@@G@@@[@@@@.     @ @@@@ROTATE* SX   X11,RTLINK  .    @E@@@@       MIXARN,1 RTAD
)@@G@@0999   . POP ARGS AND SELECTED COORDINATE @E@@@@       SA    A1,RTTEMP  AE
)@@G@@ . SAVE SELECTED COORDINATE INDEX   @B@@@@       SX,H1 X6,ROTX6      . SAF
)@@G@@AVE XREGS   @B@@@@       SX,H1 X7,ROTX7     .    FROM PIKRIU@B@@@@      AG
)@@G@@ SA,H1 A5,ROTLEN     . SAVE LENGTH  @ @@@@       ANA,U A5,1        .    AH
)@@G@@@ @@@@       SA,H2 A5,ROTLEN   .    @ @@@@       LMJ   X6,0,X6     .    AI
)@@G@@@ @@@@       SX,H2 X6,ROTX6    .    @ @@@@       SX,H2 X7,ROTX7    .    AJ
)@@G@@@B@@@@       LA    A7,X7       . SAVE INCREMENT @ @@@@       SSL   A7,18AK
)@@G@@       .    @ @@@@       SA    A7,ROTINC   .    @ @@@@       SA    A5,ROAL
)@@G@@TCYC   .    @ @@@@       TLD   A1,ROTLEN   .    @ @@@@       TSTO  A1,RTAM
)@@G@@SAVE   .    @ @@@@       SA    A5,RTSAVE+3 .    @ @@@@       TSTO  A1,ROAN
)@@G@@TORG+1 .    @ @@@@       SA    A5,ROTORG   .    @G@@@@. NOW CHECK FOR COAO
)@@G@@NFORMABILITY-- LEFT DIMS MUST EQUAL RIGHT DIMS WITH   @C@@@@. SELECTED CAP
)@@G@@OORDINATE STRICKEN OUT OF RIGHTARG  @E@@@@RT0010 DL    A4,LFTRNK   . GETAQ
)@@G@@ RANK AND LENGTH OF LEFTARG   @G@@@@       JE,U  A5,1 RT0050 . UNIT LENGAR
)@@G@@TH LEFTARGS ARE EXTENDED, GO DO IT  @G@@@@       AA,U  A4,1        . BUMAS
)@@G@@P LEFT RANK TO ACCOUNT FOR REMOVED COORD  @G@@@@       JNE   A4,RITRNK RAT
)@@G@@T0960 . AND SIGNAL RANK ERR IF UNEQUAL TO RIGHT @D@@@@       LMJ   X11,PAU
)@@G@@IKLFD  . INITIALIZE LEFT DIM FETCH  @C@@@@       LMJ   X11,PIKRID  . ANDAV
)@@G@@ ALSO RIGHTARG    @C@@@@       LR    R1,A15      . SET UP LOOP COUNTER  AW
)@@G@@@F@@@@       ANA   A15,RTTEMP  . NO OF COORDS LESS INDEX OF SELECTED    AX
)@@G@@@G@@@@       ANA,U A15,1       . LESS 1 (FOR JGD) =CTR VAL AT SELECTED CAY
)@@G@@OORD  @E@@@@RT0020 JNGD  R1,RT0050   . EXIT AFTER ALL RITEDIMS SCANNED  AZ
)@@G@@@D@@@@       LMJ   X6,0,X6     . GET NEXT RIGHT ARG DIM     @G@@@@      BA
)@@G@@ JE    A15,R1 RT0020   . IF THIS IS THE SELECTED COORD, SKIP TEST @E@@@@BB
)@@G@@       LMJ   X4,0,X4     . ELSE GET CORRESPONDING LEFT DIM  @E@@@@      BC
)@@G@@ JE    A2,A5 RT0020     . IF THEY MATCH, CONTINUE     @D@@@@       ERRORBD
)@@G@@ YLENGT,RT0999    . ELSE SIGNAL RANK ERROR@]@@@@RT0050 .    @B@@@@      BE
)@@G@@ LA    A1,RTTEMP   . RELOAD COOR    @ @@@@       LXI,U X4,-1       .    BF
)@@G@@@ @@@@       LXM   X4,RESRNK   .    @ @@@@       NOP   A0,0,*X4    .    BG
)@@G@@@D@@@@       LA    A15,RESRNK  . LOAD RANK FOR LOOP CONTROL @B@@@@RT0100BH
)@@G@@ JNGD  A15,RT0200  . ANY MORE TO DO?@E@@@@       LA,H1 A5,INDESC,X4 . LEBI
)@@G@@NGTH=LENGTH OF CURRENT DIM    @G@@@@       JNE,U A5,1 RT0105 . IF LENGTHBJ
)@@G@@ = 1, DO NOT MODIFY PICK ROUTINES   @G@@@@       LA,H2 A5,CURVAL,X4 . IFBK
)@@G@@ SELECTED COOR, BE PREPARED TO SET RTREAL @ @@@@       J     RT0115     BL
)@@G@@ .    @]@@@@RT0105 .    @D@@@@       LX,U  X6,SB0340   . USE SPECIAL FETBM
)@@G@@CH ROUTINE  @B@@@@       LA,U  A2,0,X4     . LOAD LOWER HALF@C@@@@      BN
)@@G@@ TNE   A2,RTTEMP   . IS COOR ROTATED ON?  @G@@@@       LX,U  X6,SB0320  BO
)@@G@@ . YES, USE EVEN MORE SPECIAL FETCH ROUTINE     @#@@@@       LXI,U X7,1 BP
)@@G@@@ @@@@       LXM,H1 X7,WORDPT,X4 .  @C@@@@       LA,U  A4,ZRANKV   . FORBQ
)@@G@@CE RANK TO VECTOR @E@@@@. SET-UP TABLE ENTRIES FOR FETCHING VALS OF THISBR
)@@G@@ SUBSCR EXPR@B@@@@RT0110 SX,H1 X6,PARTPT,X4 . ALSO WORDPT   @ @@@@      BS
)@@G@@ LA,U  A0,0,X4     .    @ @@@@       LMJ   X6,0,X6     .    @ @@@@      BT
)@@G@@ SX,H2 X6,PARTPT,X4 .   @ @@@@       SA,H2 A5,CURVAL,X4 .   @]@@@@RT0115BU
)@@G@@ .    @B@@@@       LA,U  A2,0,X4     . LOAD LOWER HALF@C@@@@       TNE  BV
)@@G@@ A2,RTTEMP   . IS COOR ROTATED ON?  @B@@@@       SA    A5,RTREAL   . YESBW
)@@G@@,SAVE CURVAL@ @@@@RT0120 NOP   A0,0,*X4    .    @ @@@@       TLD   A1,RTBX
)@@G@@SAVE   .    @ @@@@       TSTO  A1,ROTLEN   .    @ @@@@       LA    A4,RTBY
)@@G@@SAVE+3 .    @A@@@@       TSTO  A1,ROTORG+1 . SET BASE @B@@@@       SA   BZ
)@@G@@ A4,ROTORG   .        VALUES  @ @@@@       SA    A4,ROTCYC   .    @ @@@@CA
)@@G@@       J     RT0100      .    @]@@@@RT0200    . @A@@@@       LA    A2,RTCB
)@@G@@REAL   . RESTORE  @B@@@@       LA    A1,RTTEMP   .     CORRECT    @D@@@@CC
)@@G@@       SA,H2 A2,CURVAL,A1 .         SEL-COOR CURVAL   @A@@@@       LMJ  CD
)@@G@@ X11,SUBMOV  . DO MOVE  @B@@@@       J     RT0999      . ERROR RETURN   CE
)@@G@@@ @@@@       LX    X11,RTLINK  .    @ @@@@       J     1,X11       .    CF
)@@G@@@B@@@@RT0960 ERROR YRANK,RT0999 . RANK ERROR    @]@@@@. ERROR EXIT@ @@@@CG
)@@G@@RT0999 LX    X11,RTLINK  .    @ @@@@       J     0,X11       .    @#@@@@CH
)@@G@@       VARBLS  .  @#@@@@RTLINK RES   1 .  @#@@@@RTTEMP RES   1 .  @#@@@@CI
)@@G@@RTSAVE RES   4 .  @#@@@@RTREAL RES   1 .  @#@@@@RTLEFT RES   1 .  @ @@@@CJ
)@@G@@/. REVERSE ON FIRST COORDINATE@[@@@@.     @#@@@@       INSTRS .   @D@@@@CK
)@@G@@REVFIR* TNE,U A2,0       . NO FLAG MEANS REVERSE ON   @C@@@@       LA,U CL
)@@G@@ A2,2        .     FIRST COORDINATE @ @@@@       J     REVERS      .    CM
)@@G@@@[@@@@.     @]@@@@. REVERSE   @[@@@@.     @ @@@@REVERS* SX   X11,RELINK CN
)@@G@@ .    @B@@@@       LMJ   X11,SUBSEL  . POP COOR, ARRAY@B@@@@       J    CO
)@@G@@ RE0999      . ERROR RETURN   @C@@@@RE0050 LA,H1 A0,ELEMCT,A1 . LOAD NUMCP
)@@G@@ OF ELEMENTS@ @@@@       JE,U  A0,1 RE0100 .    @C@@@@       TNZ   WSIXOCQ
)@@G@@R      . 1-ORIGIN INDEXING?   @D@@@@       ANA,U A0,1        . NO, ZERO.CR
)@@G@@ ADJUST INDEX VAL @ @@@@       SA,H2 A0,CURVAL,A1 .   @C@@@@       LA,H1CS
)@@G@@ A0,ELEMCT,A1 . LOAD NUM OF ELEMENTS@B@@@@       SA,H1 A0,WORDPT,A1 . MOCT
)@@G@@DIFY WORDPT @ @@@@       ANA,U A0,1        .    @ @@@@       SA,H2 A0,WOCU
)@@G@@RDPT,A1 .   @C@@@@       LNA,U A0,1        . LOAD NEW INCREMENT   @C@@@@CV
)@@G@@       SA,H1 A0,CURVAL,A1  . STORE INTO CURVAL  @]@@@@RE0100 .    @B@@@@CW
)@@G@@       LMJ   X11,SUBMOV  . MOVE THINGY    @B@@@@       J     RE0999     CX
)@@G@@ . ERROR RETURN   @B@@@@       LX    X11,RELINK  . NORMAL EXIT    @ @@@@CY
)@@G@@       J     1,X11       .    @B@@@@RE0999 LX    X11,RELINK  . ERROR EXICZ
)@@G@@T     @ @@@@       J     0,X11       .    @#@@@@       VARBLS .   @#@@@@DA
)@@G@@RELINK RES   1 .  @#@@@@RETEMP RES   1 .  @C@@@@RESRNK EQUF  RESBLK,,S3 DB
)@@G@@ . RANK OF SUBSCRIPTAND @ @@@@/. EXPAND ON FIRST COORDINATE @#@@@@      DC
)@@G@@ INSTRS .   @D@@@@EXPFIR* TNE,U A2,0       . NO FLAG MEANS EXPAND ON    DD
)@@G@@@C@@@@       LA,U  A2,2        .    FIRST COORDINATE  @[@@@@.     @]@@@@DE
)@@G@@. EXPAND    @[@@@@.     @D@@@@EXPAND* SX   X11,A8      . A8 CONTAINS EXPDF
)@@G@@AND FLAG    @ @@@@       J     EC0020      .    @[@@@@.     @ @@@@. COMPDG
)@@G@@RESS ON FIRST COORDINATE@[@@@@.     @D@@@@COMFIR* TNE,U A2,0       . NO DH
)@@G@@FLAG MEANS COMPRESS ON  @C@@@@       LA,U  A2,2        .    FIRST COORDIDI
)@@G@@NATE  @[@@@@.     @]@@@@.  COMPRESS @[@@@@.     @C@@@@COMPRS* SZ   A8   DJ
)@@G@@       . SET COMPRESS FLAG    @ @@@@EC0020 SX    X11,ECLINK  .    @B@@@@DK
)@@G@@       MIXARN,1 EC0999   . POP COOR, ARGS @A@@@@       SA    A1,ECTEMP  DL
)@@G@@ . SAVE COOR@C@@@@       SX    X6,ECSAV6   . SAVE LEFT ARG XREGS  @ @@@@DM
)@@G@@       SX    X7,ECSAV7   .    @C@@@@       SA    A5,ECLENG   . SAVE LEFTDN
)@@G@@ ARG LENGTH @E@@@@       JNZ   A8,EC0050   . IF EXPAND, SKIP LENGTH TESTDO
)@@G@@S     @E@@@@       JE,U  A5,1 EC0050 . IF LENGTH=1, SKIP LENGTH TESTS   DP
)@@G@@@G@@@@       JNE,H1 A5,INDESC,A1 EC0940 . LENGTH SHOULD EQUAL COOR LENGTDQ
)@@G@@H     @E@@@@EC0050 LA,H1 A7,INDESC,A1 . LOAD COOR LENGTH AS LOOP CONTROLDR
)@@G@@@C@@@@       TZ    A8          . IF COMPRESS, SKIP    @G@@@@       LA   DS
)@@G@@ A7,A5       . IF EXPAND, USE LEFT ARG LENGTH AS LOOP CNTRL @B@@@@      DT
)@@G@@ SZ    A14          . ZERO COUNTER  @ @@@@EC0100 JNGD  A7,EC0110   .    DU
)@@G@@@C@@@@       LMJ   X6,0,X6     . FETCH NEXT LEFT ARG  @F@@@@       JNZ  DV
)@@G@@ A4,EC0930   . IF UNABLE TO FORCE TO HFT, DOMAIN ERROR@C@@@@       JZ   DW
)@@G@@ A5,EC0100   . REPEAT LOOP IF ZERO  @E@@@@       JNE,U A5,1 EC0930 . IF DX
)@@G@@NOT LOGICAL MASK, DOMAIN ERR  @D@@@@       AA,U  A14,1       . BUMP COUNDY
)@@G@@T OF NO OF 1'S    @ @@@@       J     EC0100      .    @C@@@@EC0110 SA   DZ
)@@G@@ A14,ECNUM1   . STORE NUMBER OF 1'S @C@@@@       LX    X6,ECSAV6   . RELEA
)@@G@@OAD LEFT ARG XREGS@C@@@@       LX    X7,ECSAV7   . RELOAD LEFT ARG XREGSEB
)@@G@@@B@@@@       LA    A1,ECTEMP   . RELOAD COOR    @D@@@@       JZ    A8,ECEC
)@@G@@0120   . IF COMPRESS, SKIP NEXT     @D@@@@       LA,U  A5,1        . LOAED
)@@G@@D LITERAL 1 FOR COMPARE @E@@@@       JE    A5,SCRANK+1 EC0130 . SKIP TESEE
)@@G@@T IF RITE LENG = 1@G@@@@       JNE,H1 A14,INDESC,A1 EC0940 . IF NUM OF 1EF
)@@G@@'S NOT = RITE LENG, ERR @E@@@@EC0120 JE    A14,ECLENG EC0500 . IF LEFT AEG
)@@G@@RG ALL 1'S, DUPE  @]@@@@EC0130 .    @E@@@@       LA    A14,ECTEMP  . LOAEH
)@@G@@D SEL-COOR FOR LATER COMPARES @C@@@@       LX    X4,RESRNK   . USE X4 ASEI
)@@G@@ COOR PTR   @D@@@@       TNZ   X4          . TEST FOR NULL OR SCARLAR   EJ
)@@G@@@C@@@@       AX,U  X4,1        . ADD 1 TO RANK IF SO  @D@@@@       LA,U EK
)@@G@@ A7,1        . INITIALIZE LENGTH COUNTER  @#@@@@. LOOP THRU DIMS  @ @@@@EL
)@@G@@EC0200 JNGD X4,EC0240   .     @D@@@@       LA,H1 A6,INDESC,X4 . LOAD SUBEM
)@@G@@SCRIPT LENGTH     @D@@@@       JNE,H2 A14,X4 EC0220 . JUMP IF NOT SEL-COEN
)@@G@@OR    @D@@@@       LA    A6,ECNUM1   . USE NEW LENGTH IF SEL-COOR @C@@@@EO
)@@G@@       TZ    A8          . SKIP IF COMPRESS     @G@@@@       LA    A6,ECEP
)@@G@@LENG   . IF EXPAND, USE LEFT ARG LENGTH AS COOR LENGTH@C@@@@EC0210 SA   EQ
)@@G@@ A7,A13      . MOVE PRESENT LENGTH  @D@@@@       ANA,U A13,1       . SUBER
)@@G@@TRACT 1 FOR LATER LOOP  @C@@@@       SA    A13,ECLEFT  . SAVE FOR LATER ES
)@@G@@USE   @C@@@@       LA,U  A1,0,X4     . LOAD PRESENT COOR    @D@@@@      ET
)@@G@@ SZ    A0          . PREPARE TO MODIFY DIMVECTOR@ @@@@       DI,U  A0,2 EU
)@@G@@       .    @ @@@@       AA,U  A0,RESDIM   .    @C@@@@       EX    EC080EV
)@@G@@0,A1   . MODIFY DIMVECTOR     @D@@@@EC0220 MSI   A7,A6       . MULT IN LEW
)@@G@@ENGTH OF THIS SUB @ @@@@       J     EC0200      .    @B@@@@. SET-UP FOREX
)@@G@@ MOVE (LINEAR FETCH AND STORE)@B@@@@EC0240 SA    A7,RESLNT   . NEW LENGTEY
)@@G@@H     @D@@@@       LA,U  A0,RESDIM   . ADDR OF CREATED DIMVECT    @A@@@@EZ
)@@G@@       RELADR A0         . ADJUST IT@E@@@@       SA,H2 A0,RESDDB+1 . PUTFA
)@@G@@ INTO DUMMY DESCR OF DIMVECT  @B@@@@       LA    A0,SCRANK   . PICK UP RFB
)@@G@@ANK   @E@@@@       JNE,U A0,ZRANKS EC0260 . IF NON-SCALAR, DON'T FARBLE FC
)@@G@@@B@@@@       LA,U  A0,ZRANKV   . FORCE TO VECTOR@F@@@@       SA,S3 A0,REFD
)@@G@@SBLK   . PUT RANK INTO DUMMY DESCR FOR RESULT   @F@@@@EC0260 SA,H2 A0,REFE
)@@G@@SDDB   . PUT RANK INTO DIMVECT LENGTH FIELD     @C@@@@       LA,U  A0,REFF
)@@G@@SDDB   . LOC OF DIMVECT BLOK  @B@@@@       RELADR A0         . MAKE RELAFG
)@@G@@TIVE  @C@@@@       SA,H1 A0,RESBLK+1 . PUT INTO DUMMY DBLOK @A@@@@      FH
)@@G@@ LA    A0,SCDATA   . DATA ADDR@A@@@@       LA    A3,SCTYPE+1 . MODE     FI
)@@G@@@B@@@@       DL    A4,SCRANK   . RANK & LENGTH  @F@@@@       LMJ   X11,PFJ
)@@G@@IKLFU  . SET UP X4 & X5 FOR FETCH OF RITE ARG   @B@@@@       J     EC099FK
)@@G@@9      . ERROR RETURN   @D@@@@       LA,U  A0,RESBLK   . ADDR OF THE DUMFL
)@@G@@MY DBLOK    @D@@@@       LA    A1,A3       . MODE = MODE OF SUBSCRIPTEE FM
)@@G@@@F@@@@       LMJ   X11,PUTANS  . SET UP X2 & X3 FOR STASHING RESULT     FN
)@@G@@@B@@@@       J     EC0999      . ERROR RETURN   @E@@@@       SA    A2,REFO
)@@G@@SDSC   . SAVE RELADR OF RESULT DESCRIPTOR @^@@@@. NOW DO ACTUAL LOOP    FP
)@@G@@@ @@@@       LA    A7,RESLNT   .    @B@@@@       TNZ   A8          . SKIFQ
)@@G@@P IF EXPAND @G@@@@       LA    A7,SCRANK+1  . LOAD ORIG. RITE ARG LENGTHFR
)@@G@@, IF COMPRESS     @E@@@@       LA    A14,ECLEFT  . LOAD FOR LEFT LOOP PIFS
)@@G@@CK CONTROL  @C@@@@       LMJ   X6,0,X6     . FETCH INIT LEFT ARG  @B@@@@FT
)@@G@@       SA    A5,A15      . SAVE VALUE     @E@@@@       LR    R2,ECLENG  FU
)@@G@@ . LOAD INIT. LEFT ARG LOOP COUNTER @A@@@@       JGD   R2,$+1      . DECFV
)@@G@@REMENT@ @@@@EC0300 JNGD  A7,EC0530   .    @F@@@@       JNZ   A15,EC0340 FW
)@@G@@ . PRESENT LEFT ARG VALUE IS 1 - SKIP     @^@@@@. LEFT ARG VALUE = 0    FX
)@@G@@@B@@@@       JNZ   A8,EC0320   . JUMP IF EXPAND @D@@@@       LMJ   X4,0,FY
)@@G@@X4     . IF COMPRESS, DO FETCH ONLY @B@@@@       J     EC0360      . CHEFZ
)@@G@@CK LEFT ARG @B@@@@EC0320 DSL   A1,72       . ZERO A1 & A2   @B@@@@      GA
)@@G@@ TNE,U A3,ZMOCHR   . IF EQ CHR,     @B@@@@       LA,U  A1,ASPACE   .    GB
)@@G@@LOAD SPACE  @B@@@@       J     EC0350      . GO TO DO STORE @^@@@@. LEFTGC
)@@G@@ ARG VALUE = 1    @B@@@@EC0340 LMJ   X4,0,X4     . ACCESS LEFT    @B@@@@GD
)@@G@@EC0350 LMJ   X2,0,X2     . STORE RESULT   @F@@@@EC0360 JGD   A14,EC0300 GE
)@@G@@ . CHECK IF NEXT LEFT ARG IS TO BE PICKED @F@@@@       LA    A14,ECLEFT GF
)@@G@@ . RELOAD OVERALL LEFT ARG LOOP CNTRL     @B@@@@EC0370 JNGD  R2,EC0380  GG
)@@G@@ . LEFT ARG LOOP  @C@@@@       LMJ   X6,0,X6     . PICK NEXT LEFT ARG   GH
)@@G@@@B@@@@       SA    A5,A15      . SAVE VALUE     @ @@@@       J     EC030GI
)@@G@@0      .    @C@@@@EC0380 LX    X6,ECSAV6   . RELOAD LEFT ARGS     @ @@@@GJ
)@@G@@       LXM   X7,ECSAV7   .    @ @@@@       LR    R2,ECLENG   .    @ @@@@GK
)@@G@@       J     EC0370      .    @ @@@@EC0500 LA    A6,SCDESC   .    @B@@@@GL
)@@G@@       LMJ   X11,DUPE    . DUPE RITE ARG  @A@@@@       J     EC0999     GM
)@@G@@ . WSFULL   @ @@@@       J     EC0540      .    @D@@@@EC0530 LA    A2,REGN
)@@G@@SDSC   . GET DESCR ADDROF RESULTS   @A@@@@EC0540 PUSH  A2          . STAGO
)@@G@@CK IT @ @@@@EC0550 LX    X11,ECLINK .     @ @@@@       J     1,X11      GP
)@@G@@ .    @[@@@@.     @^@@@@. DIMVECTOR MODIFY TABLE@[@@@@.     @ @@@@EC0800GQ
)@@G@@ SA,H1 A6,0,A0     .    @ @@@@       SA,H2 A6,0,A0     .    @[@@@@.     GR
)@@G@@@#@@@@. ERROR EXITS     @[@@@@.     @ @@@@EC0930 ERROR YDOMAI,EC0999 .  GS
)@@G@@@ @@@@EC0940 ERROR YLENGT,EC0999 .  @ @@@@EC0999 LX    X11,ECLINK  .    GT
)@@G@@@ @@@@       J     0,X11       .    @#@@@@       VARBLS .   @#@@@@ECSAV6GU
)@@G@@ RES   1 .  @#@@@@ECSAV7 RES   1 .  @#@@@@ECLENG RES   1 .  @#@@@@ECNUM1GV
)@@G@@ RES   1 .  @#@@@@ECTEMP RES   1 .  @#@@@@ECLEFT RES   1 .  @#@@@@ECLINKGW
)@@G@@ RES   1 .  @^@@@@/. MONADIC TRANSPOSE    @#@@@@       INSTRS .   @ @@@@GX
)@@G@@TRALA* SX    X11,TRLINK  .    @B@@@@       LMJ   X11,SUBMIX  . POP RIGHTGY
)@@G@@ ARG  @B@@@@       J     TR0999      . ERROR RETURN   @ @@@@       LA   GZ
)@@G@@ A5,RESRNK   .    @D@@@@       JE,U  A5,1 TR0400 . IF NOT ARRAY, SKIP MOHA
)@@G@@DS    @B@@@@       LA    A1,(1,0)    . USE FOR COUNTER@ @@@@TL0020 JNGD HB
)@@G@@ A5,TL0040   .    @ @@@@       SA,Q2 A1,TRSORT,A1 .   @C@@@@       SA,H2HC
)@@G@@ A1,TRSORT,*A1 . STORE REL LOCATION @ @@@@       J     TL0020      .    HD
)@@G@@@C@@@@TL0040 LA,Q2 A2,TRSORT-2,A1 . SWITCH THINGS     @ @@@@       LA,Q2HE
)@@G@@ A3,TRSORT-1,A1 . @ @@@@       SA,Q2 A3,TRSORT-2,A1 . @ @@@@       SA,Q2HF
)@@G@@ A2,TRSORT-1,A1 . @C@@@@       LNA,U A3,1        . SET-UP SEARCH NUMBER HG
)@@G@@@B@@@@       LA    A8,RESRNK   . SET-UP COUNT   @C@@@@       J     TR007HH
)@@G@@0      . ENTER DYADIC TRANS   @]@@@@/. TRANSPOSE@#@@@@       INSTRS .   HI
)@@G@@@ @@@@TRANSP* SX   X11,TRLINK  .    @A@@@@       MIXARG TR0999     . POPHJ
)@@G@@ ARGS @G@@@@       JNE,U A5,1 TR0020 . IF LEFT ARG LENGTH NOT EQ 1, MIXAHK
)@@G@@RG DID CHECK@G@@@@       JNE,U A5,RESRNK TR0940 . IF RIT RANK NOT EQ LFTHL
)@@G@@ LENGTH, LNGTH ERR@B@@@@       LMJ   X6,0,X6     . GET LEFT ARG   @B@@@@HM
)@@G@@       JNZ   A4,TR0930   . DOMAIN ERROR   @C@@@@       JNE   A5,WSIXOR THN
)@@G@@R0930 . DOMAIN ERROR    @A@@@@       J     TR0400      . SKIP MODS@]@@@@HO
)@@G@@. INITIALIZE@C@@@@TR0020 SA    A5,A8       . SAVE LENGTH FOR REUSE@B@@@@HP
)@@G@@       LA    A1,(1,0)    . LOAD LOOP PTR  @C@@@@       LA    A7,A8      HQ
)@@G@@ . USE FORLOOP COUNTER  @#@@@@. LOAD LEFT ARG   @B@@@@TR0040 JNGD  A7,TRHR
)@@G@@0060   . LOOP CONTROL   @C@@@@       LMJ   X6,0,X6     . GET NEXT LEFT AHS
)@@G@@RG    @F@@@@       JNZ   A4,TR0930   . IF UNABLE TO SUOOSH TO HFINT, DOMHT
)@@G@@ ERR  @ @@@@       ANA   A5,WSIXOR   .    @B@@@@       SA,Q2 A5,TRSORT,AHU
)@@G@@1 . STORE HFINE   @C@@@@       SA,H2 A1,TRSORT,*A1 . STORE REL LOCATION HV
)@@G@@@ @@@@       J     TR0040      .    @#@@@@. READY TO GO     @C@@@@TR0060HW
)@@G@@ LNA,U A3,1        . LOAD FOR ERROR TEST  @C@@@@       LR    R1,A8      HX
)@@G@@ . PUT COUNT INTO R-REG @C@@@@       LA    A1,(1,TRSORT)  . LOAD DATA PTHY
)@@G@@R     @C@@@@       SLE,Q2 A3,0,*A1   . SEARCH FOR LOW VALUE @ @@@@      HZ
)@@G@@ J     $+2         . OK @A@@@@       J     TR0930      . DOM ERROR@A@@@@IA
)@@G@@       LA    A4,RESRNK   . LOAD RANK@ @@@@       AA    A4,A3       .    IB
)@@G@@@C@@@@       LR    R1,A8       . PUT COUNT INTO R-REG @C@@@@       LA   IC
)@@G@@ A1,(1,TRSORT)  . LOAD DATA PTR     @C@@@@       SG,Q2 A4,0,*A1    . SEAID
)@@G@@RCH FOR HIGH VALUE@ @@@@       J     $+2         . OK @ @@@@       J    IE
)@@G@@ TR0930      .    @C@@@@. GO THRU LEFT ARG (REFERRED TO BELOW AS 'DATA')IF
)@@G@@@B@@@@. PTRS TO DATA: X4-ORIGINAL, X6-PRESENT   @C@@@@. LENGTH OF SEARCHIG
)@@G@@: A8-ORIGINAL, R1-PRESENT     @A@@@@. DIM NUMBER BEING SEARCHED FOR: A3 IH
)@@G@@@A@@@@. NUMBER OF DIFFERENT VALUES: A7    @B@@@@. NUMBER OF TRANSFERS (DII
)@@G@@URING SORT): A5   @ @@@@. DUPLICATES: NUM IN SET-A6   @C@@@@.           IJ
)@@G@@  SHORTEST DIM LENGTH OF SET-A4     @^@@@@. RUNNING LENGTH: A13   @B@@@@IK
)@@G@@. DIM STASH ROUTINE: X2 AND X3 (A7=RESRNK)@B@@@@TR0070 . ENTRY POINT FORIL
)@@G@@ MONADIC TRANSPOSE@ @@@@       SZ    A14         .    @C@@@@       LX   IM
)@@G@@ X4,(1,-1)   . INITIALIZE DATA PTR  @C@@@@       AA,U  A3,1        . RESIN
)@@G@@ET INDEX-ORG COUNT@ @@@@       LA,U  A2,ZMOHFI   .    @D@@@@       LX,H2IO
)@@G@@ X2,PUTARY,A2 . ADDR OF DIM STASH ROUTINE @B@@@@       LXI,U X3,1       IP
)@@G@@ . INITIAL RESULT @A@@@@       LXM,U X3,RESDIM   . WORD PTR @D@@@@      IQ
)@@G@@ LA,U  A13,1       . INITIALIZE LENGTH COUNTER  @ @@@@       SZ    A4   IR
)@@G@@       .    @ @@@@       SZ    A5          .    @ @@@@       DS    A4,A6IS
)@@G@@       .    @E@@@@TR0080 JE    A14,RESRNK TR0200 . JUMP IF NO MORE TO SEIT
)@@G@@ARCH  @B@@@@       LR    R1,A8       . REPEAT COUNT   @A@@@@       LX   IU
)@@G@@ X6,X4       . DATA PTR @E@@@@TR0085 SE,Q2 A3,TRSORT+1,*X6 . SERACH FOR IV
)@@G@@NEXT DIM ENTRY    @A@@@@       J     TR0120      . NO-HIT   @[@@@@. HIT IW
)@@G@@@C@@@@       AA,U  A6,1        . ADD 1 TO DUP COUNT   @C@@@@       LA,U IX
)@@G@@ A1,0,X6     . LOAD INDEX VALUE     @F@@@@       JE,U  A1,1,X4 TR0090 . IY
)@@G@@JUMP IF EQ (I.E.: NO MOVE NEEDED)   @C@@@@       AA,U  A5,1        . ADDIZ
)@@G@@ 1 TO MOVE COUNT  @B@@@@       JNE,U A6,1 TR0100 . JUMP IF DUP    @D@@@@JA
)@@G@@       LA    A2,TRSORT,X6 . LOAD RECORD POINTED AT    @C@@@@       LA   JB
)@@G@@ A0,TRSORT+1,X4 . LOAD OTHER RECORD @A@@@@       SA    A0,TRSORT,X6 . SWJC
)@@G@@ITCH  @ @@@@       SA    A2,TRSORT+1,X4 . @ @@@@       J     TR0095     JD
)@@G@@ .    @D@@@@TR0090 JNE,U A6,1 TR0100 . JUMP IF DUP (DUP COJNT > 1)@]@@@@JE
)@@G@@TR0095 .    @A@@@@       NOP   0,0,*X4     . BUMP     @E@@@@       AA,U JF
)@@G@@ A7,1        . ADD 1 TO DIFFERENT VALUE COUNT   @B@@@@       LA,H1 A4,ELJG
)@@G@@EMCT,X6 . LOAD LENGTH   @F@@@@       JE,U  A1,0,X4 TR0085 . JUMP IF EQ (JH
)@@G@@I.E.: NO MOVE NEEDED)   @B@@@@       LA    A2,ELEMCT,X6 . SWITCH ELEMCT JI
)@@G@@@ @@@@       LA    A0,ELEMCT,X4 .   @ @@@@       SA    A2,ELEMCT,X4  .  JJ
)@@G@@@ @@@@       SA    A0,ELEMCT,X6 .   @C@@@@       J     TR0085      . RETJK
)@@G@@URN TO SEARCH     @[@@@@. DUP @^@@@@TR0100 . COMPARE LENGTHS@B@@@@      JL
)@@G@@ TG,H1 A4,ELEMCT,X6 . IF NOT GTR    @B@@@@       LA,H1 A4,ELEMCT,X6 . LOJM
)@@G@@AD LENGTH   @C@@@@       J     TR0085      . RETURN TO SEARCH     @[@@@@JN
)@@G@@. MISS@]@@@@TR0120 .    @D@@@@       JZ    A6,TR0930   . IF NO HITS, DOMJO
)@@G@@AIN ERROR   @C@@@@       MSI   A13,A4      . MULTIPLAY IN LENGTH  @C@@@@JP
)@@G@@       LA    A2,A4       . MOVE FOR DIM STASH   @A@@@@       LMJ   X2,0,JQ
)@@G@@X2     . STASH    @C@@@@       ANA,U A8,1        . CHANGE SEARCH POINTERJR
)@@G@@@C@@@@       AA,U  A3,1        . ADD 1 TO SEARCH VALUE@ @@@@       AA   JS
)@@G@@ A14,A6      .    @ @@@@       SZ    A4          .    @ @@@@       SZ   JT
)@@G@@ A6          .    @C@@@@       J     TR0080      . RETURN TO SEARCH     JU
)@@G@@@#@@@@. FINISHED LOOP   @B@@@@TR0200 JNZ   A5,TR0210   . IF NO MOVES    JV
)@@G@@@F@@@@       JE    A7,RESRNK TR0400 . AND NO DUPS-SKIP MODS REMAINING   JW
)@@G@@@]@@@@TR0210 .    @B@@@@       SA    A13,RESLNT  . NEW LENGTH     @A@@@@JX
)@@G@@       SA    A7,RESRNK   . NEW RANK @B@@@@       SA,H2 A7,NUMSIG   . MODJY
)@@G@@IFY NUMSIG  @^@@@@. MODIFY FETCH ROUTINES @ @@@@       LX    X4,(1,0)   JZ
)@@G@@ .    @ @@@@       LA    A7,SCRANK   .    @ @@@@TR0220 JNGD  A7,TR0400  KA
)@@G@@ .    @B@@@@       LX,U  X6,SB0700   . TRANSPOSE FETCH@C@@@@       SX,H1KB
)@@G@@ X6,PARTPT,X4 . MODIFY FETCH ADDR   @ @@@@       SX,H2 X6,PARTPT,*X4 .  KC
)@@G@@@ @@@@       J     TR0220      .    @A@@@@TR0400 LMJ   X11,SUBMOV  . DO KD
)@@G@@MOVE  @B@@@@       J     TR0999      . ERROR RETURN   @ @@@@       LX   KE
)@@G@@ X11,TRLINK  .    @ @@@@       J     1,X11       .    @B@@@@TR0930 ERRORKF
)@@G@@ YDOMAI,TR0999 . DOMAIN ERROR @B@@@@TR0940 ERROR YLENGT,TR0999 . LENGTH KG
)@@G@@ERROR @]@@@@. ERROR EXIT@ @@@@TR0999 LX    X11,TRLINK  .    @ @@@@      KH
)@@G@@ J     0,X11       .    @#@@@@       VARBLS .   @#@@@@TRLINK RES   1 .  KI
)@@G@@@]@@@@       END .___,U  A1,0,X6     . LOAD INDEX VALUE     @F@@@@      KJ
)@@G@@ JE,U  A1,1,X4 TR0090 . JUMP IF EQ (I.E.: NO MOVE NEEDED)   @C@@@@      KK
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************KL
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APKM
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         KN
)@@G@@                            * @^@@@@       AXR$         .   @C@@@@      KO
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINKP
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.KQ
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTKR
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONKS
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@KT
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * KU
)@@G@@@G@@@@.                                                                 KV
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                KW
)@@G@@          * @G@@@@. ****************************************************KX
)@@G@@***************** @[@@@@.     @[@@@@.     @ @@@@       INSTRS           KY
)@@G@@ .    @]@@@@ORIGIN .    @C@@@@.                          RANDOM NUMBER SKZ
)@@G@@TUFF  @F@@@@RANSED*                  . INITIALIZE RANDOM NUMBER GENERATOLA
)@@G@@R     @E@@@@       LA    A1,RANDST   . GET BEGINNING RANDOM NUMBER SEED LB
)@@G@@@E@@@@       SA    A1,WSRAND   . STORE SEED FOR USE BY RANDOM     @ @@@@LC
)@@G@@       J     0,A0        .    @[@@@@.     @D@@@@. CHANGE RANDOM NO SEED-LD
)@@G@@- (NEW VAL IS DFLOAT IN A1,A2)@[@@@@.     @C@@@@RANCHG* DJZ  A1,0,X11   LE
)@@G@@ . ZERO IS DOMAIN ERR   @D@@@@       JN    A1,0,X11    . AS IS A NEGATIVLF
)@@G@@E VALUE     @G@@@@       TG    A1,(+02000+36,04000,0) . IS VALUE IN RANGLG
)@@G@@E (<36 BITS)?     @F@@@@       J     0,X11       . NO, TOO BIG, THATS A LH
)@@G@@DOMAIN ERROR, TOO @D@@@@       DFU   A3,A1     . EXP TO A3, FRACT TO A4,LI
)@@G@@A5    @C@@@@       LNA   A3,A3       . NEGATE SHIFT COUNT   @E@@@@      LJ
)@@G@@ DSA   A4,02074,A3 . RIGHT JUSTIFY INTEGER ANSWER     @G@@@@       JN   LK
)@@G@@ A5,RC0010   . IF SIGN BIT ON, CODE ABOVE FAILED, SYSERR    @C@@@@      LL
)@@G@@ LA    A1,WSRAND   . PICK UP OLD SEED     @B@@@@       SA    A5,WSRAND  LM
)@@G@@ . POST NEW ONE   @C@@@@       DSA   A1,36       . SET UP CONVERSION    LN
)@@G@@@E@@@@       DFLOAT A0,A1      . MAKE OLD SEED DFLOAT FOR CALLER  @B@@@@LO
)@@G@@       J     1,X11       . NORMAL EXIT    @ @@@@RC0010 ERROR YSYSTM     LP
)@@G@@ .    @ @@@@       J     0,X11       .    @G@@@@.                       LQ
)@@G@@   USED TO OBTAIN 35 BIT RANDOM NUMBER IN A2    @D@@@@RANDOM*           LR
)@@G@@       . LINEAR CONGRUENTIAL METHOD @E@@@@       LA    A1,WSRAND   . NUMLS
)@@G@@BER SEED OR PREVIOUS IN PERILD@E@@@@       MI    A1,(+3141592621). COEFFLT
)@@G@@ IN KNUTH, V 2, P 24    @C@[@@       DA    A1,(+7560701253D). ADD CONSTALU
)@@G@@NT    @C@@][       DA    A1,(+14522134171D). ADD CONSTANT   @B@[@@      LV
)@@G@@ LMA   A2,A2       . MODULUS 2*35   @B@@[[        SSL    A2,1      . MODLW
)@@G@@ULUS 2*36   @D]@@@       SA    A2,WSRAND   . SAVE SEED FOR NEXT NUMBER  LX
)@@G@@@ @@@@       J     0,A0        .    @G@@@@.                          RESLY
)@@G@@ULT RANDOM INTEGER IN A2 SCALED BY (A5)   @[@@@@.     @F@@@@. GENERATE RLZ
)@@G@@ANDOM INTEGER ON INTERVAL (0,N-1) WHERE N IS IN A5--  @[@@@@.     @C@@@@MA
)@@G@@RANINT* SX,H2 A0,RALINK  . SAVE RETURN ADDR     @G@@@@       LMJ   A0,RAMB
)@@G@@NDOM   . GET 35 BIT RANDNO IN A2 (FRACT BINARY 1,35)  @G@@@@       MF   MC
)@@G@@ A2,A5       . MULT IN RANGE, ALIGN BINARY PT TO (36,36)    @C@@@@      MD
)@@G@@ J     *RALINK     . RETURN TO CALLER     @[@@@@.     @G@@@@. GENERATE RME
)@@G@@ANDOM FLT INTEGER IN RANGE (0,N-1), WHERE N IS IN A4,A5     @[@@@@.     MF
)@@G@@@ @@@@RANFLT* SX,H2 A0,RALINK  .    @E@@@@       LMJ   A0,RANDOM   . RANMG
)@@G@@DOM INT (BINARY PT 1,35) TO A2@E@@@@       LA,U  A1,0        . CLEAR UUPMH
)@@G@@ER HALF FOR CONVERSION  @F@@@@       LA,U  A0,02074-35 . EXPONENT WITH AMI
)@@G@@DJUSTED BINARY POINT    @G@@@@       DFP   A0,A1       . NOW A1,A2 IS RAMJ
)@@G@@NDOM FRACT .GE.0 AND .LT.1.0  @F@@@@       DFM   A4,A1       . MULT ORIGMK
)@@G@@INAL INTEGER BY THE FRACT     @F@@@@       FUZZDN            . TRUNCATE ML
)@@G@@THE RESULT, MOVING IT TO A1,A2@G@@@@       JNZ   A1,*RALINK  . IF TRUNCAMM
)@@G@@TION RESULT IS STILL DFLOAT, EXIT   @C@@@@       DFLOAT A0,A1      . OTHMN
)@@G@@ERWISE, CONVERT IT@A@@@@       J     *RALINK     . AND QUIT @ @@@@      MO
)@@G@@ CONSTS            .    @C@@@@RANDST +     16014       . RANDOM NUMBER SMP
)@@G@@EED   @#@@@@       VARCON .   @E@@@@RALINK +0,$-$            . INDIRECT MQ
)@@G@@LOCN FOR RETUNR ADDR    @ @@@@/.           FACTORIAL ROUTINE@A@@@@.     MR
)@@G@@       CALLED FROM INTERP     @ @@@@.            CALLS DGAMMA     @[@@@@MS
)@@G@@.     @ @@@@       INSTRS            .    @ @@@@FACTRL*                 MT
)@@G@@ .    @A@@@@       JNZ   A4,FA0100   . !0 = 1   @ @@@@       DL    A1,(+MU
)@@G@@1.0D)  .    @B@@@@       J     1,X11       . NORMAL RETURN  @B@@@@FA0100MV
)@@G@@ DFA   A4,(+1.0D)  . !B = GAMMA(B+1)@C@@@@       DS    A4,FAARG    . PUTMW
)@@G@@ ARG IN CALL SEQ  @A@@@@       SX    X11,FALINK  . SAVE X11 @B@@@@      MX
)@@G@@ LMJ   X11,DGAMMA  . CALL GAMMA     @A@@@@       +     FAARG       . ARGMY
)@@G@@ ADR  @B@@@@       +     FARES       . RESULT ADDRESS @B@@@@       J    MZ
)@@G@@ FA0110      . ERROR EXIT     @C@@@@       +     $-ORIGIN,FAWKBK    . WANA
)@@G@@LKBACK WORD @B@@@@       LX    X11,FALINK  . RESTORE X11    @B@@@@      NB
)@@G@@ DL    A1,FARES    . POSITION RESULT@B@@@@       J     1,X11       . NORNC
)@@G@@MAL RETURN  @B@@@@FA0110 LX    X11,FALINK  . RESTORE X11    @B@@@@      ND
)@@G@@ J     0,X11       . ERROR RETURN   @ @@@@       VARBLS            .    NE
)@@G@@@C@@@@FALINK RES   1           . TEMPORARY FOR X11    @C@@@@FAARG  RES  NF
)@@G@@ 2           . CALL SEQ ARG ADR     @C@@@@FARES  RES   2           . CALNG
)@@G@@L SEQ RES ADR     @B@@@@FAWKBK RES   1           . WALKBACK WORD  @B@@@@NH
)@@G@@/.           POWER ROUTINE  -  DFL * DFL  @A@[@@.            USES FORTRANI
)@@G@@N NEXPB$    @[[@@@.     @ @@@@.            A1-A2  -  BASE   @A@@@@.     NJ
)@@G@@       A4-A5  -  EXPONENT     @ @@@@.            A1-A2  -  RESULT @[@@@@NK
)@@G@@.     @ @@@@       INSTRS            .    @ @[@@POWER*                  NL
)@@G@@ .    @E@[@@       SZ    A0          . CLEAR NUMERATOR PARITY INDICATOR NM
)@@G@@@ @[@@       SA    A0,PWNUMP   .    @A@[@@       DS    A1,PWBASE   . SAVNN
)@@G@@E BASE@B@[@@       DS    A4,PWEXPN   . SAVE EXPONENT  @D@[@@       JNZ  NO
)@@G@@ A4,PW0010   . X * 0 = 1, ALSO 0 * 0 = 1  @ @[@@       DL    A1,(+1.0D) NP
)@@G@@ .    @ @[@@       J     1,X11       .    @A@[@@PW0010 TNZ   A1         NQ
)@@G@@ . 0 * X = 0@ @[@@       J     1,X11       .    @C@[@@       JP    A1,PWNR
)@@G@@0100   . BASE > 0, CALL NEXPB$@[@[@@.     @G@[@@.            BASE < 0, TNS
)@@G@@EST FOR RATIONAL EXPONENT WITH ODD DEMONINATOR  @[@[@@.     @ @[@@      NT
)@@G@@ DLM   A1,A1       .    @ @[@@       DS    A1,PWBASE   .    @E@[@@      NU
)@@G@@ DL    A1,(+1.0D)  . GET STARTING DENOMINATOR VALUE   @C@[@@PW0030 DFA  NV
)@@G@@ A1,(+2.0D)  . BUMP DENOMINATOR     @F@[@@       DS    A1,PWDNOM   . SAVNW
)@@G@@E CURRENT ODD DENOMINATOR VALUE     @C@[@@       DFAN  A1,PWDMAX   . LESNX
)@@G@@S ALLOWED MAXVAL  @D@[@@       JP    A1,0,X11    . IF .GT. MAX, FAILURE NY
)@@G@@EXIT  @C@[@@       DL    A4,PWEXPN   . GET CURRENT VALUE    @G@[@@      NZ
)@@G@@ DFM   A4,PWDNOM   . TIMES DENOMINATOR = NONINTEGER NUMERATOR     @C@[@@OA
)@@G@@       DS    A4,PWNUMR   . SAVE EXACT NUMERATOR @B@[@@       FUZZUP     OB
)@@G@@       . GET CEILING    @C@[@@       JNZ   A1,$+2      . IF DFL, CONTINUOC
)@@G@@E     @B@[@@       DFLOAT A0,A1      . ELSE FORCE IT  @C@[@@       DS   OD
)@@G@@ A1,R1       . TEMP SAVE CEILING    @C@[@@       DL    A4,PWNUMR   . GETOE
)@@G@@ EXACT NUMERATOR  @A@[@@       FUZDIF A1,A4      . PCT DIF  @C@[@@      OF
)@@G@@ DJZ   A1,PW0050   . IF ZERO, SUCCESS     @C@[@@       DL    A1,R1      OG
)@@G@@ . ELSE RECOVER CEILING @A@[@@       DFAN  A1,(+1.0D)  . GET FLOOR@D@[@@OH
)@@G@@       DS    A1,R1       . SAVE INTEGER NUMERATOR     @ @[@@       DL   OI
)@@G@@ A4,PWNUMR   .    @A@[@@       FUZDIF A1,A4      . PCT DIF  @C@[@@      OJ
)@@G@@ DJZ   A1,PW0050   . IF ZERO, SUCCESS     @E@[@@       DL    A1,PWDNOM  OK
)@@G@@ . ELSE GET CURRENT DENOMINATOR     @B@[@@       J     PW0030      . ANDOL
)@@G@@ GO BUMP IT @[@[@@.     @D@[@@.            TEST INTEGER NUMERATOR FOR ODOM
)@@G@@D OR EVEN   @[@[@@.     @C@[@@PW0050 DL    A0,R1       . GET INTEGER NUMON
)@@G@@ERATOR@ @[@@       DLM   A0,A0       .    @ @[@@       DFU   A0,A0      OO
)@@G@@ .    @C@[@@       TG,U  A0,02074    . IS INTEGER < 60 BITS?@C@[@@      OP
)@@G@@ J     PW0100      . NO, EVEN BY DEFAULT  @B@[@@       ANA,U A0,02000   OQ
)@@G@@ . ELIMINATE BIAS @ @[@@       LNA   A0,A0       .    @ @[@@       AA,U OR
)@@G@@ A0,60       .    @B@[@@       DSL   A1,0,A0     . SHIFT INTEGER  @B@[@@OS
)@@G@@       JNB   A2,PW0100   . IS LOW BIT = 0?@C@[@@       LA,U  A0,1       OT
)@@G@@ . NO, SET PARITY ODD   @ @[@@       SA    A0,PWNUMP   .    @A@[@@PW0100OU
)@@G@@ SX    X11,PWLINK  . SAVE X11 @G@[@@       SCALL NEXPB$,PWWALK,$-ORIGIN OV
)@@G@@PWBASE,PWEXPN . CALL FORTRAN NEXPB$ @B@[@@       LX    X11,PWLINK  . RESOW
)@@G@@TORE X11    @C@[@@       LA    A2,PWNUMP   . GET NUMERATOR PARITY @A@[@@OX
)@@G@@       TZ    A2          . TEST EVEN@D@[@@       DLN   A0,A0       . NO,OY
)@@G@@ GET NEGATIVE OF RESULT @B@[@@       DL    A1,A0       . POSITION RESULTOZ
)@@G@@@B@[@@       J     1,X11       . NORMAL RETURN  @ @[@@       CONSTS     PA
)@@G@@       .    @D@[@@PWDMAX +85.0D            . MAXIMUM DENOMINATOR VALUE  PB
)@@G@@@ @[@@       VARBLS            .    @E@[@@PWDNOM RES   2           . CURPC
)@@G@@RENT VALUE OF DENOMINATOR     @D@[@@PWNUMR RES   2           . CURRENT (PD
)@@G@@EXACT) NUMERATOR  @C@[@@PWNUMP RES   1           . NUMERATOR PARITY     PE
)@@G@@@B@[@@PWLINK RES   1           . TEMP FOR X11   @]@@[[POWER* .    @C@@[[PF
)@@G@@. SPECIAL CASE, X*0 = 1 FOR ALL X INCLUDING X=0 @B@@[[PW0010  DS     A4,PG
)@@G@@PWEXPN . SAVE EXPONENT  @C@@[[        DLM    A4,A4     . GET ITS MAGNITUPH
)@@G@@DE    @C@@[[        DFAN   A4,WSFUZZ . LESS FUZ CONSTANT    @E@@[[      PI
)@@G@@  JP     A4,PW0020 . IF EXP .GT. FUZZ, ITS NON-ZERO   @C@@[[        DL  PJ
)@@G@@   A1,UNITY  . ELSE FORCE RESULT ONE@A@@[[        J      1,X11     . ANDPK
)@@G@@ QUIT @F@@[[. ANOTHER SPECIAL CASE-- 0*N = 0 FOR ALL N (EXCEPT N=0, ABOVPL
)@@G@@E)    @A@@[[PW0020  DS     A1,PWBASE . SAVE BASE@C@@[[        DLM    A1,PM
)@@G@@A1     . FORCE IT POSITIVE    @F@@[[        DFAN   A1,WSFUZZ . SO WE CANPN
)@@G@@ COMPARE IT WITH FUZZY ZERO   @E@@[[        JP     A1,PW0030 . IF BIGGERPO
)@@G@@, GO TEST FOR INTEGER   @C@@[[        DSL    A1,72     . ELSE SET RESULTPP
)@@G@@ ZERO @A@@[[        J      1,X11     . AND QUIT @A@@[[. SPECIAL CHECK FOPQ
)@@G@@R INTEGER EXPONENT@C@@[[PW0030  SX     X11,PWLINK     . SAVE LINKAGE    PR
)@@G@@@D@@[[        DFAN   A4,PWR10+4     . (EXP-FUZZ) - 100.0D   @F@@[[      PS
)@@G@@  JP     A4,PW0100 . IF EXP .GT. 100, GO USE LOG ROUTINE    @D@@[[      PT
)@@G@@  DLM    A4,PWEXPN . ELSE GET ABSVAL OF EXPONENT@D@@[[        DL     A1,PU
)@@G@@A4     . COPY IT FOR TRUNCATION     @D@@[[        DFA    A1,(+02074D*/60PV
)@@G@@)    . TRUNCATE EXPONENT@D@@[[        FUZDIF A1,A4     . COMPARE WITH ORPW
)@@G@@IGINAL VALUE@F@@[[        JNZ    A1,PW0100 . IF NON-INTEGER, GO USE LOG PX
)@@G@@ROUTINE     @[@@[[.     @E@@[[. INTEGER EXPONENT-- INITIALIZE TO COMPUTEPY
)@@G@@ BY BRUTE FORCE   @[@@[[.     @D@@[[PW0040  DLM    A4,PWEXPN . RECOVER EPZ
)@@G@@XPONENT VALUE     @D@@[[        DFA    A4,(+02074D*/60)    . TRUNCATE ITQA
)@@G@@ AGAIN@A@@[[        DFU    A3,A4     . UNPACK   @E@@[[        LNA    A3,QB
)@@G@@A3     . MAKE EXPONENT NEG FOR SHIFTING   @D@@[[        DSA    A4,02030,QC
)@@G@@A3    . ALIGN INTEGER EXPONENT@D@@[[        ANA,U  A4,1      . COMPENSATQD
)@@G@@E FOR LOOP COUNT  @D@@[[        LR     R1,A4     . AND INITIALIZE LOOP CQE
)@@G@@OUNTER@C@@[[. IF NEGATIVE EXPONENT, USE INVERSE OF BASE--   @C@@[[PW0050QF
)@@G@@  TN     PWEXPN    . IS EXPONENT NEGATIVE @C@@[[        J      PW0060   QG
)@@G@@ . NO, GO DO THE LOOP   @B@@[[        DL     A0,UNITY  . NO, GET A ONE  QH
)@@G@@@D@@[[        DFD    A0,PWBASE . GET THE INVERSE OF THE BASE@E@@[[      QI
)@@G@@  DS     A0,PWBASE . AND USE THAT AS THE MULTIPLIER   @A@@[[. NOW DO THEQJ
)@@G@@ ACTUAL MULTIPLICATION  @C@@[[PW0060  DL     A1,PWBASE . GET VALUE TO MUQK
)@@G@@LTIPLY@C@@[[PW0070  JNGD   R1,PW0120 . QUIT IF LOOP DONE    @D@@[[      QL
)@@G@@  TZ     ERRITH    . HAS AN OVERFLOW OCCURED?   @D@@[[        J      PW0QM
)@@G@@900    . YES, DOMAIN ERROR EXIT     @C@@[[        DFM    A1,PWBASE . NO,QN
)@@G@@ FOLD IN NEXT TERM@C@@[[        J      PW0070    . AND KEEP LOOPING     QO
)@@G@@@[@@[[.     @C@@[[. NON-INTEGER EXPONENT-- USE EXP (B # LOG A)    @[@@[[QP
)@@G@@.     @E@@[[. IF THE BASE IS NEGATIVE, WE EXAMINE THE EXPONENT TO INSUREQQ
)@@G@@@E@@[[. THAT THE RESULT IS REAL.  SINCE  A*B <=> (&1*B)#($!A)*B   @F@@[[QR
)@@G@@. DEFINING Z<=>&1*B , THEN Z REAL IMPLIES A*B IS REAL. EXPRESSING @E@@[[QS
)@@G@@. Z AND &1 EXPONENTIALLY, WE GET Z=EXP(I#M#PI) WHERE M EVEN @F@@[[. IMPLQT
)@@G@@IES Z=+1, M ODD GIVES Z=&1 , AND &1=EXP(I#K#PI) WHERE K IS  @F@@[[. ODD.QU
)@@G@@  TAKING THE COMPLEX LOG OF BOTH SIDES AND CANCELLING THE   @C@@[[. I'S QV
)@@G@@AND PI'S, GIVES THE REALITY CONDITION:    @E@@[[.              B <=> M%KQW
)@@G@@       K ODD INTEGER, M ANY INTEGER @F@@[[. THE SUBROUTINE RATEST IS USEQX
)@@G@@D TO DETERMINE WHETHER B IS SUCH    @E@@[[. A RATIONAL NUMBER AND, IF SOQY
)@@G@@, THE PARITIES OF M AND K.    @D@@[[. IF B IS IRRATIONAL, THEN THE & SIGQZ
)@@G@@N IS ALWAYS USED. @E@@[[. IF B IS RATIONAL, BUT K IS EVEN, THEN NO REAL RA
)@@G@@ROOT EXISTS,@ @@[[. AND A DOMAIN ERROR OCCURS.  @[@@[[.     @D@@[[PW0100RB
)@@G@@  SZ     PWSIGN    . CLEAR SIGN FLAG TO POSITIVE@C@@[[        TN     PWBRC
)@@G@@ASE    . IS BASE POSITIVE?    @C@@[[        J      PW0110    . YES, NO PRD
)@@G@@ROBLEMS     @C@@[[        DLM    A2,PWEXPN . NO, GET EXPONENT     @E@@[[RE
)@@G@@        LMJ    X11,RATEST     . AND PERFORM RATIONALITY TEST@E@@[[      RF
)@@G@@  J      PW0900    . OOPS, EVEN DENOM IS DOMAIN ERR   @B@@[[        SA  RG
)@@G@@   A0,PWSIGN . POST SIGN FLAG @B@@[[        DLM    A0,PWBASE . RECOVER BRH
)@@G@@ASE   @C@@[[        DS     A0,PWBASE . AND FORCE IT POSITIVE@[@@[[.     RI
)@@G@@@C@@[[PW0110  LMJ    X11,DLOG  . USE LIBRARY LOG RTNE @B@@[[        +PWBRJ
)@@G@@ASE          . FOR LOG OF BASE@C@@[[        +0               . DUMMY WALRK
)@@G@@KBACK WORD  @C@@[[        DFM    A0,PWEXPN . LOG TIMES EXPONENT   @B@@[[RL
)@@G@@        TZ     ERRITH    . ANY OVERFLOW?  @D@@[[        J      PW0900   RM
)@@G@@ . YES, DOMAIN ERROR EXIT     @C@@[[        DS     A0,PWEXPN . NO, SAVE RN
)@@G@@IN ARG LOCN @C@@[[        LMJ    X11,DEXP  . AND EXPONENTIATE IT  @ @@[[RO
)@@G@@        +PWEXPN          .    @B@@[[        +0               . DUMMY WALRP
)@@G@@KBACK @E@@[[        DL     A1,A0     . MOVE TO STANDARD APL RESULT REG  RQ
)@@G@@@D@@[[        TZ     PWSIGN    . SHOULD RESULT BE POSITIVE  @D@@[[      RR
)@@G@@  DLN    A1,A1     . NO, GET NEGATIVE OF IT     @[@@[[.     @D@@[[PW0120RS
)@@G@@  LX     X11,PWLINK     . PICK UP RETURN ADDR   @B@@[[        J      1,XRT
)@@G@@11     . AND GO HOME    @[@@[[.     @F@@[[PW0900  LX     X11,PWLINK     RU
)@@G@@. NEG BASE, EXP=RATIONAL EVEN DENOM @D@@[[        J      0,X11     . SO RV
)@@G@@TAKE DOMAIN ERROR EXIT  @[@@[[.     @#@@[[        VARBLS .  @ @@[[PWLINKRW
)@@G@@  EQUF   $,,H1     .    @ @@[[PWSIGN  EQUF   $,,H2     .    @ @@[[      RX
)@@G@@  RES    1         .    @B_@@@PWBASE RES   2           . CALL SEQ LOC   RY
)@@G@@@B@@@@PWEXPN RES   2           . CALL SEQ LOC   @B@[@@PWWALK RES   1    RZ
)@@G@@       . WALKBACK WORD  @F@@[[/. THIS SUBROUTINE IS USED BY THE EXPONENTSA
)@@G@@IATOR TO CHECK WHETHER  @F@@[[. AN EXPONENT IS A RATIONAL WITH ODD DENOMSB
)@@G@@INATOR. IT DOES THIS    @F@@[[. BY ATTEMPTING TO FIND A CONTINUED FRACTISC
)@@G@@ON EXPANSION OF THE FORM@[@@[[.     @G@@[[.   F=1%B[0]+1%B[1]+1%B[2]+...SD
)@@G@@+1%B[K]  FOR SOME K, AND B[I]=INTEGER.    @[@@[[.     @B@@[[. NOTE THAT SE
)@@G@@WE CAN REWRITE THE ABOVE AS:  @[@@[[.     @C@@[[.  F=1%B[0]+C[1] WHERE CSF
)@@G@@[K]=1%(B[K]+C[K+1])     @[@@[[.     @G@@[[. SINCE B[I] MUST BE AN INTEGESG
)@@G@@R, WE CAN CHOOSE C[K+1] = THE FRACTIONAL  @G@@[[. PART OF 1%C[K] AND THUSH
)@@G@@S COMPUTE C[K+1] FROM C[K].  WE ADDITIONALLY    @F@@[[. NOTE THAT C[0]=FSI
)@@G@@ . THE ALGORITHM CONSISTS OF COMPUTING SUCCESIVE@G@@[[. VALUES OF C[K] USJ
)@@G@@NTIL WE FIND A K SUCH THAT C[K+1] CAN BE CONSIDERED   @E@@[[. NEGLIGIBLESK
)@@G@@, I.E. F[K] IS WITHIN FUZZING ERRORS OF F .     @F@@[[.     SINCE FOR THSL
)@@G@@IS APPLICATION, WE ARE CONCERNED ONLY WITH THE  @F@@[[. PARITIES OF THE SM
)@@G@@NUMERATOR AND DENOMINATOR OF F[K], WE NEED NOT  @G@@[[. EXPLICITLY SAVE SN
)@@G@@THE B[I] OR F[I], BUT INSTEAD KEEP RUNNING VALUES     @C@@[[. OF THE PARSO
)@@G@@ITIES.  THESE ARE COMPUTED FROM:    @[@@[[.     @E@@[[.      P[K+1]=P[K-SP
)@@G@@1].XOR.(P[K].AND.(B[K]=AN ODD NUMBER))    @[@@[[.     @G@@[[. FOR FURTHESQ
)@@G@@R INFORMATION, CONSULT SECTION 3.10 OF THE NBS HANDBOOK     @ @@[[. OF MSR
)@@G@@ATHEMATICAL FUNCTIONS.  @[@@[[.     @F@@[[. THIS ROUTINE EXPECTS THE VALSS
)@@G@@UE TO BE TESTED IN A2,A3. IT RETURNS@G@@[[. TO  0,X11 IF THERE WOULD BE ST
)@@G@@A DOMAIN ERROR (I.E. EVEN DENOMINATOR),   @G@@[[. AND 1,X11 OTHERWISE.  SU
)@@G@@AT NORMAL EXIT, A0=0,1 IF FINAL RESULT SHOULD   @ @@[[. BE POSITIVE OR NSV
)@@G@@EGATIVE.    @[@@[[.     @[@@[[.     @#@@[[        INSTRS .  @[@@[[.     SW
)@@G@@@D@@[[RATEST  DS     A2,RTCSUB . USE EXPONENT AS C SUB ZERO @C@@[[      SX
)@@G@@  LA,U   A0,0201   . INITIAL PARITY FLAGS @B@@[[        SA     A0,RTPWRDSY
)@@G@@ . STASH THEM     @D@@[[        LR,U   R1,10-1   . ALLOW 10 TERMS AT MOSSZ
)@@G@@T     @F@@[[        DL     A2,WSFUZZ . SET INITIAL ERROR LIMIT TO FUZZ CTA
)@@G@@ONST  @C@@[[. POST ERROR. IF CURRENT VALUE WITHIN IT, QUIT  @C@@[[RT0010TB
)@@G@@  DS     A2,RTEROR . SAVE ERROR VALUE     @C@@[[        DFAN   A2,RTCSUBTC
)@@G@@ . LESS CURRENT C-VALUE @F@@[[        JP     A2,RT0200 . IF ERROR EXCEEDTD
)@@G@@S VAL, WE'VE CONVERGED  @D@@[[        JGD    R1,RT0020 . ELSE COUNT THISTE
)@@G@@ ITERATION  @E@@[[        LA,U   A0,1      . MAX ITERATIONS, SET NEGATE TF
)@@G@@FLAG  @D@@[[        J      1,X11     . TAKE IRRATIONAL RETURN     @ @@[[TG
)@@G@@. COMPUTE NEXT TERM OF APPROX @ @@[[RT0020  DL     A4,UNITY  .    @C@@[[TH
)@@G@@        DFD    A4,RTCSUB . GET INVERSE OF C[I]  @D@@[[        DS     A4,TI
)@@G@@RTTEMP . SAVE TO COMPUTE NEW ERROR  @C@@[[        DL     A2,A4     . MOVTJ
)@@G@@E FOR TRUNCATION  @E@@[[        DFA    A2,(+02074D*/60)    . TRUNCATE GITK
)@@G@@VING B[I]   @E@@[[        DFAN   A4,A2     . FULL LESS INT GIVES FRACT PTL
)@@G@@ART   @B@@[[        DS     A4,RTCSUB . SAVE NEW C[I+1]@ @@[[. NOW COMPUTTM
)@@G@@E CURRENT PARITIES@E@@[[        DL     A4,A2     . RETRIEVE INTEGER PARTTN
)@@G@@ (B[I])     @F@@[[        DFA    A4,(+02075D*/60)    . DISCARD ITS LOW OTO
)@@G@@RDER BIT    @C@@[[        LA,U   A0,0      . ASSUME EVEN PARITY   @D@@[[TP
)@@G@@        DTE    A2,A4     . DID WE ACTUALLY LOSE A BIT @C@@[[        LA,UTQ
)@@G@@   A0,3      . YES, PARITY WAS ODD  @E@@[[        AND    A0,RTPKM1 . ANDTR
)@@G@@ WITH PARITY OF LAST ITERATION@E@@[[        XOR    A1,RTPARK . AND FOLD TS
)@@G@@IN ITERATION BEFORE THAT@F@@[[        LA     A0,RTPKM1 . RECOVER PARITY TT
)@@G@@FROM LAST ITERATION     @C@@[[        SA     A0,RTPARK . PUSH IT DOWN ONTU
)@@G@@E     @E@@[[        SA     A2,RTPKM1 . AND MAKE THIS THE NEW PARITY     TV
)@@G@@@ @@[[. COMPUTE NEW ERROR TERM--    @C@@[[        DL     A2,RTEROR . GETTW
)@@G@@ THIS ERROR TERM  @ @@[[        DFM    A2,RTTEMP .    @ @@[[        DFM TX
)@@G@@   A2,RTTEMP .    @ @@[[        DFA    A2,WSFUZZ .    @ @@[[        J   TY
)@@G@@   RT0010    .    @B@@[[. CONVERGENCE OBTAINED, CHECK PARITIES    @D@@[[TZ
)@@G@@RT0200  LA     A1,RTPKM1 . PARITIES FOR K'TH ITERATION@C@@[[        TOP,UA
)@@G@@U  A1,1      . IS DENOMINATOR ODD?  @C@@[[        J      0,X11     . NO,UB
)@@G@@ DOMAIN ERROR EXIT@D@@[[        LA,U   A0,1      . SET RETURN FOR NEG SIUC
)@@G@@GN    @C@@[[        TOP,U  A1,2      . IS NUMERATOR ODD?    @D@@[[      UD
)@@G@@  LA,U   A0,0      . NO SET SIGN FLAG POSITIVE  @B@@[[        J      1,XUE
)@@G@@11     . AND GO BYE-BYE @[@@[[.     @B@@[[. TEMP STORAGE FOR RATIONALITYUF
)@@G@@ TESTER     @[@@[[.     @#@@[[        VARBLS .  @[@@[[.     @C@@[[RTCSUBUG
)@@G@@  RES    2         . CURRENT VALUE OF C[I]@D@@[[RTEROR  RES    2        UH
)@@G@@ . CURRENT ERROR TOLERANCE    @ @@[[RTTEMP  RES    2         .    @C@@[[UI
)@@G@@RTPWRD  EQUF   $,,H2     . PARITIES ARE HERE    @D@@[[RTPARK  EQUF   $,,UJ
)@@G@@S5     . PARITY OF K'TH ITERATION   @D@@[[RTPKM1  EQUF   $,,S6     . PARUK
)@@G@@ITY OF ITERATION K-1    @D[@@@/.                         TRIG ROUTINES FUL
)@@G@@ROM CIRCULAR@[@@@@.     @ @@@@       INSTRS            .    @D@@@@.     UM
)@@G@@                     TRIG ROUTINE FOR A = -4    @ @@@@CIRC01*           UN
)@@G@@       .    @B@@@@       DL    A4,*0,X11   . PICK UP ARG    @A@@@@      UO
)@@G@@ DFM   A4,A4       . SQUARE B @ @@@@       DFAN  A4,(+1.0D)  .    @ @@@@UP
)@@G@@       J     CI0020      .    @D@@@@.                          TRIG ROUTUQ
)@@G@@INE FOR A = 0     @ @@@@CIRC02*                  .    @B@@@@       DL   UR
)@@G@@ A4,*0,X11   . PICK UP ARG    @A@@@@       DFM   A4,A4       . SQUARE B US
)@@G@@@ @@@@       DLN   A4,A4       .    @ @@@@       J     CI0010      .    UT
)@@G@@@D@@@@.                          TRIG ROUTINE FOR A = 4     @ @@@@CIRC03UU
)@@G@@*                  .    @B@@@@       DL    A4,*0,X11   . PICK UP ARG    UV
)@@G@@@A@@@@       DFM   A4,A4       . SQUARE B @ @@@@CI0010 DFA   A4,(+1.0D) UW
)@@G@@ .    @A@@@@CI0020 SX    X11,CIRXEL  . SAVE X11 @C@@@@       FCALL DSQRTUX
)@@G@@,CIRWBK,$-ORIGIN CIRARG .     @B@@@@       LX    X11,CIRXEL  . RESTORE XUY
)@@G@@11    @B@@@@       J     2,X11       . NORMAL RETURN  @ @@@@       VARBLUZ
)@@G@@S            .    @ @@@@CIRARG RES   2           .    @ @@@@CIRWBK RES  VA
)@@G@@ 1           .    @ @@@@CIRXEL RES   1           .    @F@@@@/.          VB
)@@G@@               APL ROUTINE FOR FORTRAN ERROR RETURNS  @[@@@@.     @E@@@@VC
)@@G@@       VARBLS            . PUT IN DBANK IN CASE OF SLUDGE   @[@@@@.     VD
)@@G@@@ @@@@NERR$* NOP               .    @ @@@@       J     NE0010      .    VE
)@@G@@@ @@@@MD$ERR* NOP              .    @ @@@@       J     NE0010      .    VF
)@@G@@@ @@@@MD$BLM* NOP              .    @ @@@@       J     NE0010      .    VG
)@@G@@@ @@@@NERR3$* NOP              .    @ @@@@       J     NE0010      .    VH
)@@G@@@ @@@@NERR4$* NOP              .    @ @@@@       J     NE0010      .    VI
)@@G@@@[@@@@.     @ @@@@       INSTRS            .    @B@@@@NE0010 LA,U  A0,02VJ
)@@G@@0      . GET ERROR CODE @D@@@@       SA,H2 A0,ERRITH   . PUT INTO INTERRVK
)@@G@@UPT LOCN    @D@@@@       SX,H1 X11,ERRITH  . ALSO LOCATION OF ERROR CALLVL
)@@G@@@E@@@@. NOW LOOK FOR EXIT POINT BY SCANNING ARGLIST FOR AN OPCODE @G@@@@VM
)@@G@@NE0020 TZ,S1 0,X11       . DOES CURRENT WORD HAVE A VALID FUNCTION CODE?VN
)@@G@@@C@@@@       J     0,X11       . YES, RETURN TO IT    @G@@@@       LX,U VO
)@@G@@ X11,1,X11   . NO PROBABLE ARG OR W.B. WD; BUMP SCAN ADDR   @D@@@@      VP
)@@G@@ J     NE0020      . GO BACK AND KEEP LOOKING   @ @@@@       END        VQ
)@@G@@       .    ___TIONALITY TESTER     @[@@[[.     @#@@[[        VARBLS .  VR
)@@G@@@[@@[[.     @C@@[[RTCSUB  RES    2         . CURRENT VALUE OF C[I]@D@@[[VS
)@@G@@*[S@@@*SDFF*@B@@@@.   FORTRAN V LIBRARY UNDER 1108 EXEC     @G@@@@.     VT
)@@G@@              NEXPB$ - EXPONENTIATION OF A DOUBLE PRECISION BASE  @D@@@@VU
)@@G@@.                   TO A DOUBLE PRECISION EXPONENT.   @H@@@@.           VV
)@@G@@        THERE IS ERROR TERMINATION IF THE BASE OR THE EXPONENT    @I@@@@VW
)@@G@@.                   IS UNNORMALIZED. NERR$ IS REFERENCED IF THE BASE EQUVX
)@@G@@ALS ZERO    @G@@@@.                   AND THE EXPONENT IS NON-POSITIVE. VY
)@@G@@THE PROPER SIGN IS@H@@@@.                   ATTACHED TO THE RESULT IF THVZ
)@@G@@E BASE IS NEGATIVE AND THE    @H@@@@.                   EXPONENT IS AN IWA
)@@G@@NTEGRAL VALUE. NERR$ IS REFERENCED IF THE @H@@@@.                   PRODWB
)@@G@@UCT OF EXPONENT AND THE LOGARITHM OF THE ABSOLUTE BASE@I@@@@.           WC
)@@G@@        OVERFLOWS. ERROR TERMINATION OCCURS FROM DEXP IF THE PRODUCT    WD
)@@G@@@H@@@@.                   DOES NOT OVERFLOW AND ITS ABSOLUTE VALUE EXCEEWE
)@@G@@DS 709.089. @I@@@@.                   NERR$ IS REFERENCED IF THE BASE ISWF
)@@G@@ NEGATIVE AND THE EXPONENT    @C@@@@.                   IS A NON-INTEGRAWG
)@@G@@L VALUE.    @H@@@@.                   THE RANGES OF THE BASE AND THE EXPWH
)@@G@@ONENT ARE OTHERWISE NOT @G@@@@.                   RESTRICTED. THE FUNCTIWI
)@@G@@ON RANGE IS THAT OF ALL DOUBLE@I@@@@.                   PRECISION VALUESWJ
)@@G@@. THE PREVIOUS VALUES OF THE OVERFLOW FLAGS     @D@@@@.                 WK
)@@G@@  ARE RESTORED ON NORMAL RETURN.    @ @@@@.                   REFERENCE:WL
)@@G@@@D@@@@.                   A         LMJ       X11,NEXPB$    @G@@@@.     WM
)@@G@@              A+1       +         LOC(BASE)    . ADDR OF D.P.BASE @H@@@@WN
)@@G@@.                   A+1       +         LOC(EXPON)   . ADDR OF D.P.EXPONWO
)@@G@@ENT   @G@@@@.                   A+2       +         SEQNO,NAMPRG . WALK WP
)@@G@@BACK WD.    @G@@@@.                   A+3                              .WQ
)@@G@@ NORMAL RETURN    @C@@@@.                   NUMBER OF INSTRUCTIONS:  50 WR
)@@G@@@C@@@@.                   DATA AREA :              9  @C@@@@.           WS
)@@G@@        TOTAL CORE REQUIREMENT:  59 @[@@@@.     @I@@@@.                 WT
)@@G@@  TIME FOR COMPUTATION IF BASE IS POSITIVE:  29.125 MICRO SEC.    @I@@@@WU
)@@G@@.                   TOTAL TIME (INCLUDING DLOG AND DEXP):     250.105 MIWV
)@@G@@CRO SEC.    @[@@@@.     @I@@@@.                   AVERAGE TIME REQUIRED WW
)@@G@@IF BASE NEGATIVE:    42.125 MICRO SEC.    @I@@@@.                   TOTAWX
)@@G@@L TIME (INCLUDING DLOG AND DEXP):     263.105 MICRO SEC.    @[@@@@.     WY
)@@G@@@[@@@@.     @^@@@@          AXR$      .   @#@@@@$(2)      LIT     @[@@@@WZ
)@@G@@$(1)  @ @@@@          NOP       0,NAME    @ @@@@NEXPB$*   SX,H2     X11,XA
)@@G@@NAME+1@^@@@@          SZ        A3  @ @@@@          LA,U      A2,*0,X11 XB
)@@G@@@B@@@@          LA,U      A3,*1,X11         .   @^@@@@          SZ      XC
)@@G@@  SIGN@D@@@@          DLM       A0,0,A2            . ABS(BASE)    @D@@@@XD
)@@G@@          DL        A4,0,A3            . EXPONENT     @A@@@@          TOXE
)@@G@@P       A4,(0400040,0)  @H@@@@          J         CHECK              . EXF
)@@G@@XPONENT IS ZERO OR UNNORMALIZED     @A@@@@LEGAL     TEP       A0,(040004XG
)@@G@@0,0)  @F@@@@          J         STORE              . BASE IS UNEQUAL ZERXH
)@@G@@O     @ @@@@          DJZ       A0,$+2    @F@@@@          J         NERRXI
)@@G@@$              . BASE IS UNNORMALIZED     @F@@@@          DJZ       A4,NXJ
)@@G@@ERR$           . BASE=0  ,  EXPONENT=0    @G@@@@          JN        A4,NXK
)@@G@@ERR$           . BASE=0  ,  EXPONENT IS NEGATIVE@G@@@@          J       XL
)@@G@@  3,X11              . BASE=0  ,  EXPONENT IS POSITIVE@E@@@@CHECK     DJXM
)@@G@@Z       A4,LEGAL           . EXPONENT IS LEGAL  @F@@@@          J       XN
)@@G@@  NERR$              . EXPONENT IS UNNORMALIZED @ @@@@STORE     DS      XO
)@@G@@  A0,BASE   @ @@@@          DS        A4,EXPON  @E@@@@          TN      XP
)@@G@@  0,A2               . HAS BASE POS. SIGN @F@@@@          J         REF XQ
)@@G@@               . YES, GO TO REFERENCE DLOG@H@@@@          L,U       A3,0XR
)@@G@@2074           . NO, TEST EXPONENT FOR INTEGRAL VALUE @ @@@@          LDXS
)@@G@@SL      A2,60     @G@@@@          DFA       A4,A2              . ELIMINAXT
)@@G@@TE FRACTION, IF ANY     @ @@@@          DAN       A4,EXPON  @ @@@@      XU
)@@G@@    DJZ       A4,$+2    @G@@@@          J         NERR$              . BXV
)@@G@@ASE IS NEGATIVE AND EXPONENT  @F@@@@                                    XW
)@@G@@   . IS A NON-INTEGRAL VALUE  @A@@@@          A         A2,(0100,0)     XX
)@@G@@@F@@@@          DFA       A2,EXPON           . ELIMINATE UNIT, IF ANY   XY
)@@G@@@ @@@@          DAN       A2,EXPON  @E@@@@          DJZ       A2,REF    XZ
)@@G@@         . EXPONENT IS EVEN   @E@@@@          SN        A0,SIGN         YA
)@@G@@   . EXPONENT IS ODD    @ @@@@REF       LMJ       X11,DLOG  @B@@@@      YB
)@@G@@    +         BASE              .   @A@@@@          +         $-NEXPB$-1YC
)@@G@@,NAME @ @@@@          LX,H2     X11,NAME+1@H@@@@          L         A2,NYD
)@@G@@CDOF$          . SAVE PREVIOUS VALUES OF OVERFL.INDIC.@ @@@@          SZYE
)@@G@@        NCDOF$    @ @@@@          DFM       A0,EXPON  @E@@@@          TZYF
)@@G@@,H1     NCDOF$             . TEST FOR OVERFLOW  @H@@@@          J       YG
)@@G@@  NERR$              . OVERFLOW, EXPON*DLOG(BASE) TOO LARGE @G@@@@      YH
)@@G@@    S         A2,NCDOF$          . RESTORE OVERFLOW INDICATORS    @ @@@@YI
)@@G@@          DS        A0,EXPON  @ @@@@          LMJ       X11,DEXP  @B@@@@YJ
)@@G@@          +         EXPON             .   @A@@@@          +         $-NEYK
)@@G@@XPB$-1,NAME @ @@@@          LX,H2     X11,NAME+1@G@@@@          TP      YL
)@@G@@  SIGN               . IS BASE NEG. AND EXPONENT ODD  @C@@@@          DLYM
)@@G@@N       A0,A0              . YES    @ @@@@          J         3,X11     YN
)@@G@@@[@@@@$(2)  @D@@@@BASE      RES       2                  . ABS(BASE)    YO
)@@G@@@^@@@@EXPON     RES       2   @^@@@@SIGN      +         0   @ @@@@NAME  YP
)@@G@@    +         'NEXPB$'  @ @@@@          +         3,$-$     @#@@@@      YQ
)@@G@@    END     ___      . EXPONENT IS ZERO OR UNNORMALIZED     @A@@@@LEGAL YR
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************YS
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APYT
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         YU
)@@G@@                            * @G@@@@       AXR$         .               YV
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSYW
)@@G@@EMBLY PARAMETERS                        * @G@@@@       APSYMB.     DEFINYX
)@@G@@E APL SYMBOL SET                              * @G@@@@       WSDEF.     YY
)@@G@@ DEFINE WORKSPACE                                   * @G@@@@WORKSP INFO YZ
)@@G@@ 2 20.      SET ASIDE THE SPACE                           * @G@@@@      ZA
)@@G@@ RUNCTL.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@ZB
)@@G@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE                      * ZC
)@@G@@@G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES             ZD
)@@G@@    * @G@@@@.                                                           ZE
)@@G@@          * @G@@@@. END OF STANDARD PROC BLOCK                          ZF
)@@G@@                * @G@@@@. **********************************************ZG
)@@G@@*********************** @[@@@@.     @[@@@@.     @[@@@@.     @E@@@@S     ZH
)@@G@@ PROC              . SPECIAL CHARACTER STASH PROCKS   @ @@@@OAEOL* NAME ZI
)@@G@@             .    @ @@@@CHAR   EQU   AEOL        .    @ @@@@       GO   ZJ
)@@G@@ HERE        .    @ @@@@OSPACE* NAME             .    @ @@@@CHAR   EQU  ZK
)@@G@@ ASPACE      .    @ @@@@       GO    HERE        .    @ @@@@HERE*  NAME ZL
)@@G@@             .    @ @@@@       UNLI$T            .    @ @@@@       LA,U ZM
)@@G@@ A1,CHAR     .    @ @@@@       STASH             .    @ @@@@       LI$T ZN
)@@G@@             .    @ @@@@       END               .    @ @@@@S      PROC ZO
)@@G@@             .    @ @@@@STASH* NAME              .    @ @@@@       LMJ  ZP
)@@G@@ X2,0,X2     .    @ @@@@       END               .    @^@@@@.        BREZQ
)@@G@@AK KEY TRAP @D@@@@.        IF  BREAK KEY IS DETECTED TAKE THE ERROR EXITZR
)@@G@@@E@@@@.        (PROC'ED BECAUSE CODE MAY CHANGE, IT ALWAYS DOES)  @ @@@@ZS
)@@G@@C      PROC              .    @E@@@@BREAKD* NAME             . USE:     ZT
)@@G@@BREAKD <ERROR RETURN>   @ @@@@       UNLI$T            .    @E@@@@      ZU
)@@G@@ TZ    CONSBR      .  IS THERE AN OUTSTANDING BREAK?  @D@@@@       J    ZV
)@@G@@ C(1,1)      .   YES, JUMP TO ERROR RETURN@ @@@@       LI$T             ZW
)@@G@@ .    @ @@@@       END               .    @[@@@@.     @ @@@@/      INSTRZX
)@@G@@S            .    @C@@@@PRSEND* SX   X11,PSLINK  . PRINT LITERAL ENTRY  ZY
)@@G@@@E@@@@       DS    A3,PSTEMP   .  SAVE NUMBER OF CHARS AND ADDRESS@D@@@@ZZ
)@@G@@       LMJ   X11,LNFLSH  . WHILE WE FLUSH THE BUFFER  @E@@@@       DL   AA
)@@G@@ A3,PSTEMP   . RELOAD THE COUNT AND LOCATION    @ @@@@       J     $+3  AB
)@@G@@       .    @ @@@@EDTLIT* SX   X11,PSLINK  .    @C@@@@       SZ    PSTEMAC
)@@G@@P      . SET EDIT ENTRY FLAG  @F@@@@       LXI,U A3,1        . SET INCREAD
)@@G@@MENT OF WORD POINTER TO 1     @F@@@@       SZ    A2          .  MAKE SURAE
)@@G@@E WE  FETCH A WORD FIRST TIME @G@@@@       J     PS0100      . JUNP TO BAF
)@@G@@OTTOM OF LOOP SO JGD COUNT COMES OUT@G@@@@PS0050 JNZ   A2,PS0060   . IF AG
)@@G@@WE HAVE MORE CHARACTERS  GET THE NEXT ONE @F@@@@       LA    A2,0,*A3   AH
)@@G@@ . FETCH THE NEXT WORD OF THE MESSAGE     @C@@@@PS0060 LDSL   A1,9      AI
)@@G@@ . GET NEXT CHARACTER   @ @@@@       STASH             .    @C@@@@PS0100AJ
)@@G@@ JGD   A4,PS0050   . LOOP IF MORE TO DO   @B@@@@       TZ    PSTEMP     AK
)@@G@@ . EDIT ENTRY?    @B@@@@       LMJ   X11,LINSTR  . NO, FLUSH LINE @ @@@@AL
)@@G@@       LX    X11,PSLINK  .    @ @@@@       J     0,X11       .    @#@@@@AM
)@@G@@       VARBLS     @#@@@@PSLINK RES   1    @#@@@@PSTEMP RES   2    @[@@@@AN
)@@G@@/.    @E@@@@.              PRINT CONTENTS OF A NAME BLOCK OR LITERAL    AO
)@@G@@@H@@@@. PRINT NAME WITH BOUNDARY ALIGNMENT-- A3,A4=RELADR OF NAME, ABSADAP
)@@G@@R OF WS     @[@@@@.     @D@@@@PBOUND EQU   8           . FIELD SIZE FOR AQ
)@@G@@ALIGNMENT   @[@@@@.     @ @@@@       INSTRS            .    @ @@@@PRALGNAR
)@@G@@* SX   X11,PNLINK  .    @D@@[[       SX    WSTAG,PNX1SV . SAVE BASE OF WAS
)@@G@@ORKSPACE    @E@@[[       LX    WSTAG,A4    . GET ABSOLUTE ADDR OF WORKSPAT
)@@G@@ACE   @C@@@@       ABSADR A3         . MAKE ADDR ABSOLUTE   @C@@@@      AU
)@@G@@ SA    A3,PNDESC   . AND TEMP SAVE IT     @E@@@@       JZ    A13,PN0003 AV
)@@G@@ . IF AT BEGIN OF LINE, NO PADDING  @E@@@@       LA    A0,A13      . GETAW
)@@G@@ NO CHARS LLREADY STASHED     @ @@@@       DSL   A0,36       .    @C@@@@AX
)@@G@@       DI,U  A0,PBOUND   . GET NO OF FIELDS USED@C@@@@       LA,U  A0,PBAY
)@@G@@OUND   . NO OF CHRS PER FIELD @F@@@@       ANA   A0,A1       . LESS REMAAZ
)@@G@@INDER=NO OF LEADING BLANKS    @D@@@@       AU    A0,A13      . PLUS CHARBA
)@@G@@S ALREADY STASHED @D@@@@       AA,Q2 A1,0,A3     . AND LENGTH OF THIS NABB
)@@G@@ME    @D@@@@       TLE   A1,WSWDTH   . WILL THIS FIT ON THIS LINE?@C@@@@BC
)@@G@@       J     PN0002      . YES, GO STASH BLANKS @E@@@@       LMJ   X11,LBD
)@@G@@NFLSH  . NO, RESET TO BEGINNING OF LINE   @C@@@@       J     PN0003     BE
)@@G@@ . AND GO STASH NAME    @ @@@@PN0002 JNGD  A0,PN0003   .    @ @@@@      BF
)@@G@@ OSPACE            .    @ @@@@       J     PN0002      .    @C@@@@PN0003BG
)@@G@@ LA    A0,PNDESC   . RECOVER NAMEBLOK ADDR@ @@@@       J     PN0005     BH
)@@G@@ .    @E@@@@. AT THIS ENTRY, ALWAYS ACTIVE WS, A6=RELADR OF NAMEBLOK    BI
)@@G@@@ @@@@PRTNAM* LA    A0,A6      .    @ @@@@       ABSADR A0         .    BJ
)@@G@@@D@@[[       SX    WSTAG,PNX1SV . SAVE BASE OF WORKSPACE    @ @@@@      BK
)@@G@@ SX    X11,PNLINK  .    @D@@@@PN0005 LA,S1 A1,0,A0     . GET BLOK TYPE FBL
)@@G@@ROM DESCR   @G@@@@       JNE,U A1,ZTPNAM PN0100      . IF NOT NAMEBLOK, BM
)@@G@@GO PRINT VALUE    @E@@@@       LA,Q2 A5,0,A0     . ELSE GET NO OF CHARS BN
)@@G@@IN THE NAME @G@@@@       LA    A2,2,A0     . PICK UP 1ST 4 CHARS OF NAMEBO
)@@G@@ FROM SYMBOL BLOCK@F@@@@       LA,U  A4,4        . AND SET NO OF CHARS IBP
)@@G@@N REG TO 1 WORD   @G@@@@       LA,H2 A6,0,A0     . GET RELADR OF SECONDABQ
)@@G@@RY NAMEBLOK, IF ANY     @E@@@@PN0010 JNGD  A5,PN0200   . WHEN NAME IS EXBR
)@@G@@HAUSETED, QUIT    @E@@@@       JGD   A4,PN0030   . ANY MORE CHARS IN LIVBS
)@@G@@E REGS?     @F@[@@       JZ    A6,PN0090   . NO, BE SURE ANOTHER SYMBOL BT
)@@G@@BLOK FOLLOWS@F@@[[       JZ    A6,0        . IF NO SYMBOL BLOCK FOLLOWS,BU
)@@G@@ SYSERR     @G[@@@       LA    A0,A6       . AND GET RELADR OF NEXT SYMBBV
)@@G@@OL TABLE BLOCK    @C@@@@       ABSADR A0         . MAKE ADDR ABSOLUTE   BW
)@@G@@@E@@@@       DL    A2,1,A0     . PICK UP NEXT 8 CHARS OF NAME     @F@@@@BX
)@@G@@       LA,H2 A6,0,A0     . AND RELADR OF BLOCK AFTER THIS ONE     @G@@@@BY
)@@G@@       LA,U  A4,7        . POST NO OF CHARS LEFT IN LIVEREGS (LESS 1ST) BZ
)@@G@@@G@@@@PN0030 JG    A13,WSWDTH PN0040     . IF ROOM FOR THIS CHAR, STASH CA
)@@G@@IT    @D@@@@       DS    A2,PSPILL   . ELSE SAVE WORKING REGS     @ @@@@CB
)@@G@@       DS    A4,PSPILL+2 .    @ @@@@       SA    A6,PSPILL+4 .    @D@@@@CC
)@@G@@       LMJ   X11,LINSTR  . CLEAR BUF, START NEW LINE  @ @@@@       LA,U CD
)@@G@@  A1,ASPACE  .    @B@@@@  DO 4 , STASH           . INDENT NEW LINE@C@@@@CE
)@@G@@       DL    A2,PSPILL   . RESTORE WORKING REGS @ @@@@       DL    A4,PSCF
)@@G@@PILL+2 .    @ @@@@       LA    A6,PSPILL+4 .    @ @@@@PN0040 LA,U  A1,0 CG
)@@G@@       .    @D@@@@       LTSL  A1,9        . BRING OUT NEXT CHAR OF NAMECH
)@@G@@@C@@@@       STASH             . PLUG INTO OUTBUF     @D@@@@       J    CI
)@@G@@ PN0010      . GO CHECK FOR MORE CHARS    @ @[@@PN0090 ERROR YSYSTM     CJ
)@@G@@ .    @ @[@@       J     0,X11       .    @ ]@@@PN0100 SX    X11,PNLINK CK
)@@G@@ .    @C@@@@       LA,S2 A2,0,A0     . GET MODE OUT OF DESCR@C@@@@      CL
)@@G@@ SA    A2,PSPILL   . AND TEMP SAVE IT     @C@@@@       LA,U  A1,AALFAN  CM
)@@G@@ . GET AN OPENING QUOTE @F@@@@       TNE,U A2,ZMOCHR   . ARE WE PRINTINGCN
)@@G@@ A CHARACTER CONSTANT?  @E@@@@       LMJ   X2,0,X2     . YES, PUT OPENINCO
)@@G@@G QUOTE IN LINE   @C@@@@       LMJ   X11,PRNTEC  . PRINT THE DATA VALUE CP
)@@G@@@]@@@@       NOP  @B@@@@       LA    A2,PSPILL   . RECOVER MODE   @E@@@@CQ
)@@G@@       LA,U  A1,AALFAN   . AND GET ANOTHER TRAILING QUOTE   @F@@@@      CR
)@@G@@ TNE,U   A2,ZMOCHR . DID WE JUST DO A CHARACTER CONSTANT?   @E@@@@      CS
)@@G@@ LMJ   X2,0,X2     . YES, STASH THE CLOSING QUOTE     @D@@@@       LMJ  CT
)@@G@@ X11,BFTRLB  . GO SURPRESS TRAILING BLANKS@ @[@@PN0200 LX    X11,PNLINK CU
)@@G@@ .    @D@@[[PN0200 LX    WSTAG,PNX1SV . RESTORE BASE OF WORKSPACE @B@@[[CV
)@@G@@       LX    X11,PNLINK  . GET RETURN LINK@ [@@@       J     1,X11      CW
)@@G@@ .    @#@@@@       VARBLS     @F@@[[PNX1SV EQUF  $,,H1       . BASE OF CCX
)@@G@@URRENT WORKSPACE SAVED HERE   @ @@[[       RES   1           .    @ @@@@CY
)@@G@@PNDESC EQUF  $,,H1       .    @ @@@@PNLINK EQUF  $,,H2       .    @ @@@@CZ
)@@G@@       RES   1           .    @ @@@@PSPILL RES   5           .    @[@@@@DA
)@@G@@/.    @#@@@@       INSTRS .   @ @@@@PRNTEC* .    ECHO MODE ENTRY  @C@@@@DB
)@@G@@       SX    X11,PRECHO  .  TURN ECHO FLAG ON   @A@@@@       J     PR190DC
)@@G@@0      . CONTINUE @A@@@@PRNTDS*  .   PRINT DEXCRIPTOR ENTRY @C@@@@      DD
)@@G@@ SZ    PRECHO      .  TURN ECHO FLAG OFF  @ @@@@PR1900 SX    X11,PRLINK DE
)@@G@@ .    @G@@@@       SZ    BFOLET      . TURN OFF ALLOW FLAG FOR PRINTBUF DF
)@@G@@OVERFLOW    @[@@@@.     @G@@@@PR2000 VERIFZ PR9500,,PR9500 . DECODE DATUDG
)@@G@@M, IGNORE STAKMARKS AND UNDEF @B@@@@       LMJ    X11,PIKRIU .  SET FETCDH
)@@G@@H REGS@D@@@@       J      PR9400     .  EXTERNALY DETECTED ERROR  @E@[@@DI
)@@G@@       JNZ   A15,PR2050  . IF ITEM IS NULL OUTPUT A BLANK   @F@[@@      DJ
)@@G@@ TZ    PRECHO      . ARE WE ECHOING A LINE OF LEXICAL TEXT? @D@[@@      DK
)@@G@@ J     PR9500      . YES, DON'T PRINT ANYTHING  @ @[@@       OSPACE     DL
)@@G@@       .    @B@[@@       J     PR9500      . THEN RETURN    @C@@[[      DM
)@@G@@ SA      A3,PRMDSV . SAVE MODE OF ITEM    @C@@[[       JZ      A15,PR950DN
)@@G@@0  . QUIT IF ITEM NULL  @E @@@. SET ADDR OF PROCESSING ROUTINE DEPENDINGDO
)@@G@@ ON VARIABLE MODE @F@@@@PR2050 LA,U  A0,0        . CLEAR XFER ADDR IN CADP
)@@G@@SE NO TEST PASSES @F@@@@       JNE,U A3,ZMOCHR PR2060 . IF NOT CHAR, GO DQ
)@@G@@TEST FOR NUMERIC  @G@@@@       LA,U  A0,PR5000   . ELSE GET ADDR OF RTNEDR
)@@G@@ FOR CHARACTER DATA     @C@@@@       J     PR2070      . AND GO LOOK AT DS
)@@G@@RANK  @G@@@@PR2060 SX    X11,BFOLET  . NOT CHAR, TURN ON PRINTBUF OFLO ADT
)@@G@@LLOW FLAG   @C@@@@       TNE,U A3,ZMOHFI   . IS DATUM HALFINT?    @E@@@@DU
)@@G@@       LA,U  A0,PR5500   . YES, GET PROCESSING ROUTINE ADDR @B@@@@      DV
)@@G@@ TNE,U A3,ZMODFL   . IS IT DFLOAT?  @E@@@@       LA,U  A0,PR6000   . YESDW
)@@G@@, GET ADDR OF DFLOAT ROUTINE  @G@@@@       JZ    A0,PR9400   . IF NONE ODX
)@@G@@F ABOVE TESTS PASSED, ERROR EXIT    @]@@@@. CHECK RANK@E@@@@PR2070 SA   DY
)@@G@@ A0,PRFORR   . SAVE PROCESSING ROUTINE ADDR     @H@@@@       JLE,U A4,2 DZ
)@@G@@  PR2100    . IF RANK ARRAY GO GET DOPE FROM DIM VECTOR     @E@@@@      EA
)@@G@@ DSL    A0,72      .  YES, SET ARRAY FORMAT STUFF OFF @ @@@@       DS   EB
)@@G@@  A0,PRECNT  .    @G@@@@       DS     A0,PRFRMI  .  AND SET FORMAT CONTREC
)@@G@@OL TO SCALAR-VECTOR .   @B@@@@       J      PR4000     .  OK, LETS DO ITED
)@@G@@@F@@@@PR2100 DSL    A4,1       . GEE, ITS ARRAY DIVIDE LENGTH BY TWO    EE
)@@G@@@F@@@@       ANA,U  A4,1       . SUBTRACT ONE, RESULT IS LENGTH IN WORDSEF
)@@G@@@E@@@@       AA     A1,A4      . ADD TO BASE ADDRESS OF DIM VECTOR@E@@@@EG
)@@G@@       DL    A2,0,A1     . GET TAIL END WORDS OF DIMVECT    @B@@@@      EH
)@@G@@ TP    A5          . WAS RANK EVEN? @G@@@@       LDSL  A2,18       . NO,EI
)@@G@@ ODD- ALIGN DIM VALUES OVER WORD BNDRY    @F@@@@       SSL   A3,36      EJ
)@@G@@ . CLEAR A3 SO ZERO GOES INTO A2 MODIFIER @G@@@@       LDSC  A2,18      EK
)@@G@@ . SET A2 INCR=LAST DIM, A3 MOD=NEXT-TO-LAST DIM@F@@@@       LXI,U A3,0,EL
)@@G@@A3     . DUPE NEXT-TO-LAST DIM IN INCR OF A3    @G@@@@       DS    A2,PREM
)@@G@@ECNT   . SAVE COUNTS AND RESET VALUES FOR PLANES, ETC.@D@@[[       LA   EN
)@@G@@   A3,PRMDSV . LOAD MODE OF ITEM FOR FSCAN@ @@@@       LMJ   X11,FORMS  EO
)@@G@@ .    @ @@@@       NOP               .    @B@@@@       DS     A0,PRFRMI EP
)@@G@@ .   SAVE THEM    @ @@@@       J       PR4000    .    @[@@@@/.    @]@@@@EQ
)@@G@@K      PROC @D@@@@KOUNT* NAME              . LINE AND PLANE COUNTER PROCER
)@@G@@@C@@@@LOC1   EQU    K(1,1)     . LOCATION OF COUNTER  @F@@@@LOC2   EQU  ES
)@@G@@  K(1,2)     . JUMP ADDRESS IF LINE (PLANE) NOT FULL  @#@@@@       UNLI$ET
)@@G@@T     @E@@@@       TNZ,H2 LOC1       . IS IT ZERO? (IS THINGIE FULL?)   EU
)@@G@@@F@@@@       J      FULL       . YES,GO RESET COUNTER AND FALL THROUGH  EV
)@@G@@@D@@@@       LA,H2  A0,LOC1    . NO, LOAD COUNT INTO REG.   @C@@@@      EW
)@@G@@ ANA,U  A0,1       .     DECREMENT COUNT  @B@@@@       SA,H2  A0,LOC1   EX
)@@G@@ .     SAVE IT    @C@@@@       J      LOC2       .     TAKE JUMP EXIT   EY
)@@G@@@D@@@@FULL   LA,H1  A0,LOC1    . FULL, GET INITIAL VALUE    @B@@@@      EZ
)@@G@@ ANA,U A0,1        . PATCH ALSO     @C@@@@       SA,H2  A0,LOC1    .    FA
)@@G@@   RESET COUNT    @C@@@@       LI$T              .       FALL THROUGH   FB
)@@G@@@ @@@@       END               .    @[@@@@.     @ @@@@       INSTRS     FC
)@@G@@       .    @C@@@@PR4000 JNGD    A15,PR9500     .    MORE TO DO?  @C@@@@FD
)@@G@@       TNZ    PRECNT     . YES,IS THIS AN ARRAY?@D@@@@       J     PR450FE
)@@G@@0      . NO, GO FETCH NEXT ITEM     @F@@@@       KOUNT  PRECNT,PR4500 . FF
)@@G@@ JUMP TO LOC2 IF LINE NOT FINISHED  @E@@@@       LMJ    X11,LINSTR .    FG
)@@G@@ LINE FINISHED, WRITE LINE    @G@@@@       KOUNT  PRLCNT,PR4500 .  IF PLFH
)@@G@@ANE NOT FINISHED JUMP TO END SECTION@A@@@@       OSPACE            . WRIFI
)@@G@@TE    @B@@@@       STASH             . TWO SPACES     @C@@@@       OAEOLFJ
)@@G@@             . FORCE  LINE TO PRINT @C@@@@       LMJ    X11,LINSTR . PRIFK
)@@G@@NT BLANK LINE     @C@@@@       J      PR4500     . NO, PRINT NEXT ITEM? FL
)@@G@@@A@@@@PR4500 LMJ    X6,0,X6    . GET DATA @A@@@@/. PRINT NEXT INDIVIDUALFM
)@@G@@ ELEMENT    @[@@@@.     @G@@@@PR4600 BREAKD PR9400     . IF USER HAS HITFN
)@@G@@ BREAK, NOTHING MORE TO DO    @F@@@@       J     *PRFORR     . ELSE GO TFO
)@@G@@O APPROPRIATE FORMTA ROUTINE  @[@@@@.     @#@@@@. CHARACTER DATA--@[@@@@FP
)@@G@@.     @G@@@@PR5000 JNE,U A4,ACRTRN PR5010 . IF NOT CARRIAGE RETURN, GO SFQ
)@@G@@TASH IT     @C@@@@       LMJ   X11,LINSTR  . ELSE CLEAR LINE BUF  @E@@@@FR
)@@G@@       J     PR4000      . AND GO GET NEXT CHAR OF ARRAY    @E@@@@PR5010FS
)@@G@@ LA    A1,A4       . MOVE CHAR FROM FETCH TO STASH REG@E@@@@       JNE,UFT
)@@G@@ A4,AALFAN PR5020 . IF NOT QUOTE, GO OUTPUT IT  @G@@@@       TZ    PRECHFU
)@@G@@O      . BUT FOR QUOTES, ARE WE ECHOING LEXICAL TEXT? @F@@@@       LMJ  FV
)@@G@@ X2,0,X2     . YES, PRINT THE FIRST QUOTE OF A PAIR   @B@@@@PR5020 LMJ  FW
)@@G@@ X2,0,X2     . PRINT THIS CHAR@E@@@@       J     PR4000      . AND LOOP FX
)@@G@@BACK FOR NEXT ELEMENT   @[@@@@.     @#@@@@. NUMERIC DATA--- @[@@@@.     FY
)@@G@@@]@@@@. INTEGER---@E@@@@PR5500 LX,U  X11,FORMI   . SET TARGET ADDR FOR FFZ
)@@G@@MT ROUTINE  @B@@@@       J     PR7000      . AND GO CALL IT @]@@@@. FLOAGA
)@@G@@TING  @F@@@@PR6000 LX,U  X11,FORMG   . SET ADDR TO GENERAL FLOATING ROUTGB
)@@G@@INE   @F@@@@       TZ    PRFRMI+1    . DO FORMAT INDICATORS SAY OTHERWISGC
)@@G@@E?    @E@@@@       LX,U  X11,FORMD   . YES, USE D-FORMAT ROUTINE INSTEADGD
)@@G@@@B@@@@. CALL FORMATS, CHECK FOR LINE OFLO, ETC  @D@@@@PR7000 DL    A0,PRGE
)@@G@@FRMI   . GET FORMATTING INDICATORS  @G@@@@       DS    A4,PRDATA   . IN GF
)@@G@@CASE OF LINE OVERFLOW, SAVE THIS DATA VAL @G@@@@       SA    A13,PRCOLN GG
)@@G@@ . AND SAVE CURRENT COLUMN NO FOR SAME REASON   @F@@@@       SX    X11,BGH
)@@G@@FOLET  . BE SURE BOF OFLO ALLOW SWITCH IS ON    @F@@@@       LMJ   X11,0GI
)@@G@@,X11   . AND CALL APPROPRIATE FORMAT ROUTINE    @E@@@@       ER    ERR$ GJ
)@@G@@       . NONE OF WHICH HAS AN ERROR RETURN@D@@@@       LA    A0,WSWDTH  GK
)@@G@@ . GET MAX LINE WIDTH ALLOWED @G@@@@       TG    A0,A13      . IS LAST CGL
)@@G@@OLUMN USED PAST NORMAL END OF LINE? @E@@@@       J     PR7010      . NO,GM
)@@G@@ GO OUTPUT A TRAILING SPACE   @G@@@@       LA    A0,PRCOLN   . YES, RECOGN
)@@G@@VER COL NO BEFORE WE TRIED TO PRINT @F@@@@       LMJ   X11,BFBAKN  . BACGO
)@@G@@K UP THE LINE BUF TO THAT COLUMN    @F@@@@       LMJ   X11,LINSTR  . ANDGP
)@@G@@ PRINT THE LINE UP TO THAT POINT    @B@@@@       LA,U  A1,ASPACE   . GETGQ
)@@G@@ A BLANK    @D@@@@ DO 4 , STASH   . AND INDENT THE NEW LINE BY 4 OF THEMGR
)@@G@@@G@@@@       DL    A4,PRDATA   . RECOVER THE DATA VAL WE TRIED TO PRINT GS
)@@G@@BEFORE@E@@@@       J     PR4600      . AND GO PUT IT ON THIS NEW LINE   GT
)@@G@@@B@@@@PR7010 LA,U  A1,ASPACE   . GET A BLANK    @G@@@@       LMJ   X2,0,GU
)@@G@@X2     . OUTPUT SINGLE TRAILING BLANK AFTER NUMBER    @F@@@@       J    GV
)@@G@@ PR4000      . AND GO GET NEXT ELEMENT OF THIS DATUM  @[@@@@/.    @]@@@@GW
)@@G@@PR9400 .    @ @@@@       LX    X11,PRLINK .     @G@@@@       SZ    BFOLEGX
)@@G@@T      . RESTORE PRINTBUF OVERFLOW ALLOW FLAG TO OFF  @B@@@@       J    GY
)@@G@@ 0,X11       . ERROR RETURN   @#@@@@. NORMAL EXIT     @C@@@@PR9500 TZ   GZ
)@@G@@ BFOLET      . WAS BUF OFLO ALLOWED?@G@@@@       LMJ   X11,BFTRLB  . YESHA
)@@G@@, WE DID NUMERIC; STRIP TRAILING BLANKS   @C@@@@       SZ    BFOLET     HB
)@@G@@ . CLEAR BOF OFLO FLAG  @ @@@@       LX    X11,PRLINK  .    @A@@@@      HC
)@@G@@ J     1,X11       . RETURN   @[@@@@/.    @ @@@@       VARBLS           HD
)@@G@@ .    @ @@@@PRECHO RES   1           .    @]@@@@PRLINK RES 1@ @@@@PRPNTRHE
)@@G@@ RES   2           .    @ @@@@PRDATA RES   2           .    @ @@@@PRECNTHF
)@@G@@ RES   2           .    @ @@@@PRLCNT EQU   PRECNT+1    .    @ @@@@PRFRMIHG
)@@G@@ RES   2           .    @G@@@@PRCOLN EQUF  $,,Q1       . COL NO BEFORE SHH
)@@G@@TART OF NUMERIC ITEM FORMAT   @ @@[[PRMDSV EQUF    $,,Q1     .    @#@@@@HI
)@@G@@       RES   1 .  @[@@@@.     @[@@@@.     @#@@@@       VARCON     @ @@@@HJ
)@@G@@PRFORR +0,$-$            .    @ @@@@       END               .    ___I  HK
)@@G@@ . SET TARGET ADDR FOR FMT ROUTINE  @B@@@@       J     PR7000      . ANDHL
)@@G@@ GO CALL IT @]@@@@. FLOATING  @F@@@@PR6000 LX,U *[S@@@*SDFF*@G@@@@. ****HM
)@@G@@***************************************************************** @G@@@@HN
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * HO
)@@G@@@G@@@@.                                                                 HP
)@@G@@    * @^@@@@       AXR$         .   @C@@@@       CONFIG  .    DEFINE ASSHQ
)@@G@@EMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINE WORKSPACE             HR
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACHS
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BHT
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEHU
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           HV
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 HW
)@@G@@                                                    * @G@@@@. END OF STAHX
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****HY
)@@G@@***************************************************************** @[@@@@HZ
)@@G@@.     @[@@@@.     @A@@@@       SKMARX . DEFINE STACK MARKS  @[@@@@.     IA
)@@G@@@ @@@@. TO WHOM IT MAY CONCERN:     @G@@@@.      WE ARE WELL AWARE OF THIB
)@@G@@E FACT THAT THE CODE IN THIS ELEMENT IS   @E@@@@. RATHER CRUDDY (TO PUT IC
)@@G@@IT MILDLY), DUE TO THE FACT THAT THE@F@@@@. ADDRESS MAPPING MECHANISM WEID
)@@G@@ CHOSE WAS NOT SO HOT.  PLEASE DON'T@F@@@@. BOTHER TRYING TO MODIFY ANY IE
)@@G@@OF THIS CODE, AS WE ARE COMPLETELY  @F@@@@. REWRITING ALL OF THE CODE INIF
)@@G@@ THIS ELEMENT, AND IN THE PARTS OF  @F@@@@. MIXED2 WHICH USE IT, TO USE IG
)@@G@@ADDRESS MAPPING LIKE THAT IN PHIL   @F@@@@. ABRAMS' THESIS--- PLEASE BE IH
)@@G@@PATIENT, AS WHEN IT IS DONE, WE HOPE@F@@@@. TO HAVE A PROGRAM WHICH NOT II
)@@G@@ONLY RUNS FASTER, BUT USES LESS CORE@[@@@@.     @D@@@@/. POP AND EXAMINEIJ
)@@G@@ A COORDINATE SELECTING EXPRESSION  @[@@@@.     @#@@@@       INSTRS .   IK
)@@G@@@ @@@@CRDPOP* SX   X11,CDLINK  .    @D@@@@       SZ    CDNONI      . CLEIL
)@@G@@AR NON-INTEGER FLAG     @D@@@@       LMJ   X11,PIKRIT  . SETUP TO FETCH IM
)@@G@@VARIABLE    @ @@@@       J     CD0990      .    @E@@@@       JNE,U A5,1 IN
)@@G@@CD0900 . IF NOT ONE-ELEMENT, LENGTH ERR   @F@@@@       JNE,U A3,ZMOHFI CIO
)@@G@@D0010 . IF NOT HALFINT, GO CHECK DFLOAT   @D@@@@       LMJ   X6,0,X6    IP
)@@G@@ . ELSE FETCH HALFINT VALUE   @B@@@@       DS    A4,CDCOOR   . SAVE VALUIQ
)@@G@@E     @B@@@@       J     CD0020      . AND GO EXIT    @E@@@@CD0010 JNE,UIR
)@@G@@ A3,ZMODFL CD0910 . IF NOT DFLOAT, DOMAIN ERR   @B@@@@       LMJ   X6,0,IS
)@@G@@X6     . PICK IT UP     @C@@@@       DS    A4,CDCOOR   . TEMP SAVE DFLOAIT
)@@G@@T VAL @C@@@@       FUZZDN            . AND TAKE ITS FLOOR   @D@@@@      IU
)@@G@@ JNZ   A1,CD0910   . IF TOO BIG, RANK ERROR     @E@@@@       DL    A4,CDIV
)@@G@@COOR   . RECOVER ORIGINAL FLOATING VALUE  @C@@@@       DS    A1,CDCOOR  IW
)@@G@@ . AND SAVE THE INTEGER @D@@@@       DFLOAT A0,A1      . CONVERT BACK TOIX
)@@G@@ FLOATING   @E@@@@       FUZDIF A1,A4      . AND COMPARE WITH ORIGINAL VIY
)@@G@@AL    @F@@@@       DJZ   A1,CD0020   . IF FUZZY DIF ZERO, VALUE WAS INTEIZ
)@@G@@GER   @E@@@@       SX    X11,CDNONI  . ELSE TURN ON NON-INTEGER FLAG    JA
)@@G@@@#@@@@. NORMAL EXIT     @F@@@@CD0020 LMJ   X11,ERASET  . FREE THE SPACE JB
)@@G@@USED TY THE COORD VALUE @ @@@@       J     CD0990      .    @B@@@@      JC
)@@G@@ SZ    RITDSC      . MARK IT ERASED @F@@@@       VERIFY CD0030,,CD0920  JD
)@@G@@. LOOK IN STACK FOR TRAILING BRACKET@C@@@@       J     CD0920      . IF JE
)@@G@@NONE, SYNTAX ERR  @F@@@@CD0030 TE,U  A6,SKMESL   . BE SURE STAKMARK WAS JF
)@@G@@FOR RITE BRACKET  @C@@@@       J     CD0920      . IF NOT, SYNTAX ERROR JG
)@@G@@@E@@@@       DL    A1,CDCOOR   . RECOVER INTEGER VAL OF COORD     @C@@@@JH
)@@G@@       LA    A0,CDNONI   . AND NON-INTEGER FLAG @C@@@@       TNZ   WSIXOJI
)@@G@@R      . ZERO ORIGIN INDEXING?@E@@@@       AA,U  A2,1        . YES BUMP JJ
)@@G@@VALUE INTO RANGE 1 TO N @ @@@@       LX    X11,CDLINK  .    @B@@@@      JK
)@@G@@ J     1,X11       . NORMAL EXIT    @[@@@@.     @A@@@@CD0900 ERROR YLENGJL
)@@G@@T,CD0990    .     @ @@@@CD0910 ERROR YRANK,CD0990    .@A@@@@CD0920 ERRORJM
)@@G@@ YSYNTA,CD0990    .     @ @@@@CD0990 LX    X11,CDLINK  .    @ @@@@      JN
)@@G@@ J     0,X11       .    @ @@@@       VARBLS            .    @ @@@@CDNONIJO
)@@G@@ EQUF  $,,H1       .    @ @@@@CDLINK EQUF  $,,H2       .    @#@@@@      JP
)@@G@@ RES   1 .  @ @@@@CDCOOR RES   2           .    @C@@@@/. INITIALIZE SUBSJQ
)@@G@@CRIPTING CONTROL ARRAYS---    @G@@@@.     THESE ROUTINES INITIALIZE THE JR
)@@G@@ARRAYS USED BY SUBUMP TO GET A SET  @G@@@@.     OF INDICES FOR THE NEXT JS
)@@G@@ELEMENT OF AN ARRAY BEING INDEXED INTO    @G@@@@.         IF THIS OPERATJT
)@@G@@ION IS SUBSCRIPTING, THE SUBSCRIPT DESCRIPTORS  @G@@@@.     ARE POPPED FJU
)@@G@@ROM THE STACK.  IF IT IS SOME OTHER MIXED OP, THE     @G@@@@.     SUBSCRJV
)@@G@@IPTS ARE ASSUMED TO RUN OVER THE DIMENSIONS OF THE ARRAY    @[@@@@.     JW
)@@G@@@#@@@@       INSTRS .   @[@@@@.     @F@@@@. THIS ENTRY IS USED TO INITIAJX
)@@G@@LIZE FOR MIXED OPERATORS WHICH CAN  @F@@@@. SELECT ALONG A COORDINATE.  JY
)@@G@@ENTRY CONDITIONS ARE SPECIFIED IN   @G@@@@. A2 : 0=LAST COORDINATE, 1=COJZ
)@@G@@ORD SPECIFIED IN STACK, 2=1ST COORD. AT   @F@@@@. EXIT, A1 WILL BE SET TKA
)@@G@@O INDEX (0 TO N-1) OF SELECTED COORDINATE @ @@@@SUBSEL* SX   X11,SULINK KB
)@@G@@ .    @D@@@@       SZ    SUIFLG      . TURN OFF INDEXING FLAG     @E@@@@KC
)@@G@@       ANA,U A2,1        . DECREMENT COORD FLAG FOR TESTING @G@@@@      KD
)@@G@@ JZ    A2,SU0030   . IF ZERO, GET SELECTED COORDINATE NO FROM STAK@C@@@@KE
)@@G@@       SA    A2,SUCORD   . ELSE SAVE AS A FLAG  @D@@@@       J     SU005KF
)@@G@@0      . AND GO LOOK AT THE RIGHTARG@F@@@@SU0030 LMJ   X11,CRDPOP  . POPKG
)@@G@@ AND EXAMINE COORD SEL EXPRESSION   @ @@@@       J     SU0999      .    KH
)@@G@@@E@@@@       JG,U  A2,1 SU0910 . IF POINTER .LT. 1, INDEX ERR     @F@@@@KI
)@@G@@       SA    A2,SUCORD   . ELSE SAVE COORD SELECTION INDICATOR    @D@@@@KJ
)@@G@@       J     SU0050      . AND GO EXAMINE THE RITEARG @[@@@@.     @F@@@@KK
)@@G@@. THIS ENTRY IS FOR SUBSCRIPTING OPERATIONS, WHERE STACK MUST BE  @E@@@@KL
)@@G@@. POPPED IN ORDER TO SET UP POINTERS TO SUBSCRIPT VALUES    @[@@@@.     KM
)@@G@@@G@@@@SUBIND* SX   X11,SULINK  . ENTRY IF THIS IS A TRUE INDEXING OPERATKN
)@@G@@ION   @C@@@@       SX    X11,SUIFLG  . TURN ON INDEXING FLAG@ @@@@      KO
)@@G@@ J     SU0045      .    @[@@@@.     @G@@@@. THIS ENTRY IS FOR MIXED OPERKP
)@@G@@ATORS WHERE ALL COORDS ARE TO BE SET UP   @D@@@@. IN 'NORMAL ORDER', I.EKQ
)@@G@@. AS IF THEY HAD BEEN ELIDED  @[@@@@.     @F@@@@SUBMIX* SX   X11,SULINK KR
)@@G@@ . ENTRY IF THIS IS A MIXED OPERATION     @D@@@@       SZ    SUIFLG     KS
)@@G@@ . TURN OFF INDEXING FLAG     @F@@@@SU0045 SZ    SUCORD      . TURN OFF KT
)@@G@@COORDINATE SELECTION FLAG     @[@@@@.     @C@@@@SU0050 SX    X8,SUX8SV  KU
)@@G@@ . TEMP SAVE WORK REG   @B@@@@       SZ    ROTCYC      . ZERO OUT ROTCYCKV
)@@G@@@G@@@@       VERIFY SU0950,,SU0999 . POP RIGEARG, REQUIRING IT TO BE DEFKW
)@@G@@INED  @D@@@@       SAVER A0,RITDAD,8 . SAVE ALL RITEARG PARAMS    @E@@@@KX
)@@G@@       JLE,U A4,2 SU0110 . IF ARRAY, GO USE ITS REAL PARAMS @G@@@@      KY
)@@G@@ SA,H1 A5,SUDUMV   . ELSE USE DUMMY DIMV, POSTING LENGTH IN IT    @E@@@@KZ
)@@G@@       LA,U  A1,SUDUMV   . GET DATA ADDR FOR DUMMY DIMVECT  @B@@@@SU0110LA
)@@G@@ SAVER A0,SCDATA,8 . SAVE ARG PARAMS@D@@@@. TEST IF SCALAR, IF IT IS  THLB
)@@G@@EN DO SPECIAL ROUTINE   @F@@@@       JNE,U A4,ZRANKS SU0140 . IF NOT SCALC
)@@G@@LAR, SET-UP SUBSCRIPTS  @F@@@@       TZ    SUIFLG      . SCALAR. IS THISLD
)@@G@@ AN INDEX-INTO OPERATION@G@@@@       J     SU0910      . YES, INDEX ERR,LE
)@@G@@ CANNOT SUBSCRIPT SCALARS     @ @@@@       LA,U  A5,2        .    @^@@@@LF
)@@G@@       SA,H1 A5,SUDUMV .@C@@@@       LA,U  A13,ZRANKV  . PRETEND IT'S A LG
)@@G@@VECTOR@C@@@@       LA,U  A7,1        . HAS LENGTH OF ONE    @ @@@@      LH
)@@G@@ SA,H1 A7,INDESC   .    @C@@@@       SZ    NUMSIG      . NO SUBSCRIPT VALI
)@@G@@RIES  @B@@@@       SA    A7,RESLNT   . LENGTH = 1     @B@@@@       SA,H1LJ
)@@G@@ A7,ELEMCT   . COUNT OF 1     @ @@@@       SA,H2 A7,ELEMCT   .    @C@@@@LK
)@@G@@       SZ    A5          . INITIALIZE CURVAL    @B@@@@       TNE,U A3,ZMLL
)@@G@@OHFI   . IF HALFINT     @A@@@@       AA,U  A5,1        .     ADD 1@C@@@@LM
)@@G@@       AA    A5,WSIXOR   . ADD IN INDEX ORIGIN  @ @@@@       SA    A5,CULN
)@@G@@RVAL   .    @ @@@@       SA,H1 A5,WORDPT   .    @ @@@@       SA,H2 A5,WOLO
)@@G@@RDPT   .    @ @@@@       J     SU0300      .    @G@@@@. INITIALIZE THE SLP
)@@G@@ETUP OF THE DIMVECT OF THE RESULT(OUTER PROD OF SUBS) @E@@@@SU0140 LA,U LQ
)@@G@@ A13,0       . TOTALIZER FOR RANK OF RESULT     @ @@@@       LA,U  A3,ZMLR
)@@G@@OHFI   .    @D@@@@       LX,H2 X2,PUTARY,A3 . ADDR OF DIM STASH RTNE    LS
)@@G@@@E@@@@       LX    X3,(+1,RESDIM) . INITIAL RESULT WORD POINTER   @C@@@@LT
)@@G@@. INITIALIZE FETCH OF DIMVECT OF THE SUBSCRIPTEE@C@@@@SU0150 LA    A0,A1LU
)@@G@@       . SET UP DATA ADDR     @F@@@@       LA    A5,A4       . LENGTH OFLV
)@@G@@ DIMVECT=RANK OF SUBSCRIPTEE  @B@@@@       LA,U  A4,ZRANKV   . RANK IS VLW
)@@G@@ECTOR @D@@@@       LMJ   X11,PIKLFU  . AND SET X4,X5 AS FETCHREGS @ @@@@LX
)@@G@@       J     SU0999      .    @G@@@@. NOW INITIALIZE TO ACTUALLY FETCH TLY
)@@G@@HE SUBSCRS AND SET UP THE CTRL BLOX @G@@@@SU0160 SZ    NUMSIG      . CLELZ
)@@G@@AR POINTER TO MOST RAPIDLY VARYING SUBSCR @D@@@@       LA,U  A7,1       MA
)@@G@@ . INITIALIZE LENGTH COUNTER  @ @@@@       SA    A7,RESLNT   .    @F@@@@MB
)@@G@@       LR,H2 R1,SCRANK   . SET COUNT OF NO OF SUBSCRS EXPECTED    @E@@@@MC
)@@G@@       LX    X8,(+1,0)   . SET POINTER TO CONTROL BLOCKS    @D@@@@. NOW MD
)@@G@@FETCH THE SUBSCRIPT EXPRESSIONS. ONE BY ONE     @E@[@@SU0200 JNGD  R1,SUME
)@@G@@0300   . ANY MORE SUBSCRIPTS EXPECTED     @G@@[[SU0200  SX     X8,SUNGOTMF
)@@G@@      . SAVE NO SUBSCRIPT EXPRS ACTUALLY GOTTEN @F@@[[        JNGD   R1,MG
)@@G@@SU0300      . COUNT NEXT, IF NO MORE GO CLEAN UP@E[@@@SU0210 LMJ   X4,0,MH
)@@G@@X4     . PICK UP NEXT DIM OF SUBSCRIPTEE  @F@@@@       SA,H1 A2,INDESC,XMI
)@@G@@8 . TEMP SAVE IN CONTROL BLOK, THIS SUBSCR@E@@@@       TNZ   SUIFLG     MJ
)@@G@@ . IS THIS A SUBSCRIPTING OPERATION?@G@@@@       J     SU0240      . NO,MK
)@@G@@ GO TREAT SUBSCR AS IF IT WERE ELIDED     @F@@@@SU0220 VERIFY SU0230,SU0ML
)@@G@@920,SU0999 . YES, POP NEXT SUBSCR EXPR    @C@@@@       SA    A1,SUDIMA  MM
)@@G@@ . SAVE DIM DATA ADDR   @F@@@@       SA,H2 A6,INDESC,X8. SAVE DESCR ADDRMN
)@@G@@ (FOR ERASE AT EXIT)    @E@@@@       JZ    A5,SU0225   . IF NULL, NO MODMO
)@@G@@E CHECK NEEDED    @E@@@@       JE,U  A3,ZMOCHR SU0930  . IF CHAR SUBSCR,MP
)@@G@@ DOMAIN ERR @E@@@@       TNE,U A3,ZMODFL   . IS SUBSCR EXPRESSION DFLOATMQ
)@@G@@?     @F@@@@       LA,U  A3,ZMODFI   . YES, SET FLAG TO FORCE IT TO INTEMR
)@@G@@GER   @F@@@@SU0225 LMJ   X11,PIKRIU  . SET RITEARG FETCH REGS FOR THIS SMS
)@@G@@UBSCR @ @@@@       J     SU0999      .    @C@@@@       J     SU0250     MT
)@@G@@ . GO STASH POINTERS    @E@@@@. STACKMARK HIT DURING SUBSCRIPT POP, CHECMU
)@@G@@K FOR ELIDED INDEX@D@@@@SU0230 TE,U  A6,SKMELX   . IS THERE AN ELIDED INMV
)@@G@@DEX?  @B@@@@       J     SU0910      . NO, INDEX ERR  @D@@@@. SET UP ELIMW
)@@G@@DED SUBSCR POINTERS AS IF IT WERE A VECTOR@E@@@@SU0240 LA,H1 A5,INDESC,XMX
)@@G@@8 . LENGTH=LENGTH OF CURRENT DIM    @D@@@@       LX,U  X6,SB0300   . USEMY
)@@G@@ SPECIAL FETCH RTNE     @E@@@@       LX    X7,(1,1)   . WITH VALUE COMPUMZ
)@@G@@TATION INITIALIZED@C@@@@       LA,U  A4,ZRANKV   . FORCE RANK TO VECTOR NA
)@@G@@@G@@@@       SZ,H2 INDESC,X8   . CLEAR DESCR PTR SO WE DON'T TRY TO ERASNB
)@@G@@E IT  @E@@@@. SET UP TABLE ENTRIES FOR FETCHING VALS OF THIS SUBSCR EXPRNC
)@@G@@@ @@@@SU0250 SA,H2 A4,CURVAL,X8 .   @C@@@@       SA    A1,SULDIM   . SAVND
)@@G@@E DIMVECT ADDR    @F@@@@       SZ    PARTPT,X8   . INHIBIT RUNNING FETCHNE
)@@G@@ OF SUBSCR VALUES @D@@@@       JZ    A5,SU0255   . IF NULL, GO SET UP FONF
)@@G@@R IT  @ @@@@       TE,U  A5,1        .    @F@@@@       J     SU0260     NG
)@@G@@ . NO, GO PREPARE TO FETCH IT ON THE FLY  @ @@@@       LA    A0,X8      NH
)@@G@@ .    @D@@@@       LMJ   X6,0,X6     . IMMEDIATELY FETCH THE VALUE@F@@@@NI
)@@G@@       JNZ   A4,SU0910   . IF NOT REALLY HALFINT, INDEX ERROR     @ @@@@NJ
)@@G@@       LA,H2 A4,CURVAL,X8 .   @ @@@@       SA    A5,CURVAL,X8 .   @B@@@@NK
)@@G@@       LA,U  A5,1        . RESTORE LENGTH @ @@@@SU0255 SA,H1 A5,ELEMCT,XNL
)@@G@@8 .   @ @@@@       SA,H1 A5,CURVAL,X8 .   @ @@@@       SZ,H2 ELEMCT,X8  NM
)@@G@@ .    @ @@@@       SX    X7,WORDPT,X8 .   @F@@@@       JE,U  A4,ZRANKS SNN
)@@G@@U0290 . IF SCALAR, GO BUMP X8 AND QUIT    @D@@@@       LA    A1,SULDIM  NO
)@@G@@ .    ELSE GET DIMVECT ADDR   @D@@@@       J     SU0270           . AND NP
)@@G@@GO FOLD IN DIMS   @D@@@@SU0260 SX,H1 X6,PARTPT,X8     . SAVE FETCH SUBR NQ
)@@G@@ADDR  @D@@@@       SX,H1 X7,WORDPT,X8     . ALSO WORD POINTER     @D@@@@NR
)@@G@@       SA,H1 A5,ELEMCT,X8     . AND NO OF ELEMENTS    @ @@@@       ANA,UNS
)@@G@@ A5,1        .    @ @@@@       SA,H2 A5,ELEMCT,X8    .@D@@@@       LA   NT
)@@G@@ A0,X7            . DUPE WORD POINTER     @C@@@@       SSL   A0,18      NU
)@@G@@      . ISOLATE STEP    @D@@@@       SA,H1 A0,CURVAL,X8     . AND SAVE SNV
)@@G@@TEP, ALSO   @D@@@@       LA,U  A2,1,X8     . GET INDEX OF CURRENT SUBSCRNW
)@@G@@@F@@@@       SA    A2,NUMSIG   . POST AS MOST RAPIDLY VARYING SUBSCR    NX
)@@G@@@ @@@@       LA    A0,X8       .    @ @@@@       LMJ   X6,0,X6     .    NY
)@@G@@@ @@@@       LA,H2 A4,CURVAL,X8 .   @ @@@@       SX,H2 X6,PARTPT,X8 .   NZ
)@@G@@@ @@@@       SX,H2 X7,WORDPT,X8 .   @ @@@@       SA,H2 A5,CURVAL,X8 .   OA
)@@G@@@ @@@@       LA,H1 A5,ELEMCT,X8 .   @B@@@@. ADJUST RESULT RANK, PREPARE OB
)@@G@@TO MOVE DIM @C@@@@SU0270 AA    A13,A4      . BUMP RESULT RANK     @ @@@@OC
)@@G@@       LA    A7,RESLNT   .    @C@@@@       MSI   A7,A5       . MULTIPLY OD
)@@G@@ BY LENGTH  @ @@@@       SA    A7,RESLNT   .    @D@@@@       TG,U  A13,MOE
)@@G@@AXSUB+1 . IS IT STILL WITHIN RANGE? @B@@@@       J     SU0940      . NO,OF
)@@G@@ LENGTH ERR @E@@@@       JNE,U A4,ZRANKV SU0280 . IF NOT VECT, GO COPY DOG
)@@G@@IMS   @E@@@@       LA    A2,A5       . MOVE VECTOR LENGTH TO DIM REG    OH
)@@G@@@D@@@@       LMJ   X2,0,X2     . STASH AS NEXT DIM OF RESULT@E@@@@      OI
)@@G@@ J     SU0290      . AND THEN STEP TO NEXT SUBSCR     @E@@@@SU0280 LX,H2OJ
)@@G@@ X6,GRITBL+ZMOHFI . SETUP HALFINT PICK SUBR ADDR@C@@@@       LX    X7,SUOK
)@@G@@DIMA   . SET UP DIM DATA ADDR @#@@@@       LXI,U X7,1 @F@@@@       LA   OL
)@@G@@ A15,A4      . REPEAT CT- NO OF DIMS= RANK OF ARRAY   @D@@@@. APPEND DIMOM
)@@G@@V OF CURRENT SUBSCR EXPR TO DIMV OF RESULT@B@@@@SU0285 JNGD  A15,SU0290 ON
)@@G@@ . MORE TO MOVE?  @D@@@@       LMJ   X6,0,X6     . PICK UP DIM OF SUBSCROO
)@@G@@ EXPR @B@@@@       LA    A2,A5       . MOVE FOR STASH @C@@@@       LMJ  OP
)@@G@@ X2,0,X2     . STORE IN DIMOF RESULT@C@@@@       J     SU0285      . GO OQ
)@@G@@MOVE NEXT HALF    @C@@@@SU0290 NOP   A0,0,*X8    . BUMP SUBSCR COUNTER  OR
)@@G@@@E@@@@       J     SU0200      . GO BACK FOR NEXT SUBSCR EXPR     @D@@@@OS
)@@G@@. ALL SUBSCRS HAVE BEEN INITIALIZED, NOW CLEAN UP     @B@@@@SU0300 SA   OT
)@@G@@ A13,RESRNK  . STORE RANK     @D@@@@       TNZ   SUIFLG      . IS THIS AOU
)@@G@@N INDEX-INTO OPN? @B@@@@       J     SU0320      . NO, GO EXIT    @A@@@@OV
)@@G@@       VERIFY  SU0310,SU0920,SU0999 @D@@@@       J     SU0910      . IF OW
)@@G@@NO STAKMARK, INDEX ERROR@G@@@@SU0310 TE,U  A6,SKMESL   . DOES STAKMARK IOX
)@@G@@NDICATE END OF SUBSCR LIST?   @B@@@@       J     SU0910      . NO, INDEXOY
)@@G@@ ERROR@C@@@@SU0320 LX    X8,SUX8SV   . YES-TAKE NORMAL EXIT @E@@@@      OZ
)@@G@@ LA    A1,SUCORD   . GET COORDINATE SELECTION FLAG    @G@@@@       TP   PA
)@@G@@ A1          . WAS COORD NO KNOWN AT TIME FLAG WAS SET?     @F@@@@      PB
)@@G@@ LA    A1,RESRNK   . NO, MUST HAVE BEEN LAST COORD; USE RANK@G@@@@      PC
)@@G@@ ANA,U A1,1        . DECREMENT COORD FOR INDEXING INTO CURVAL, ETC@D@@@@PD
)@@G@@       TG    A1,RESRNK   . SELECTED COOR TOO BIG?     @C@@@@       J    PE
)@@G@@ SU0910      . YES, INDEX ERROR     @E@@@@       SA    A1,SUCORD   . SAVPF
)@@G@@E COORDINATE INDEX POINTER    @ @@@@       LX    X11,SULINK  .    @ @@@@PG
)@@G@@       J     1,X11       .    @G@@@@/. ERASE TEMPORARY EXPRS USED AS SUBPH
)@@G@@SCRS.  THIS ROUTINE IS CALLED BY THE@G@@@@. SUBSCRIPTING ROUTINES WHEN TPI
)@@G@@HEY ARE DONE (OR ERROR) .  THE SUBSCR     @G@@@@. ROUTINES ARE THE ONLY PJ
)@@G@@ONES FOR WHICH ARBITRARY APL EXPRESSIONS COULD  @ @@@@. HAVE APPEARED ASPK
)@@G@@ SUBSCRIPTS @[@@@@.     @ @@@@SUBERS* SX   X11,SULINK  .    @ @[@@      PL
)@@G@@ LA    A4,SCRANK   .    @G@@[[        LA     A4,SUNGOT      . SET UP NO PM
)@@G@@OF SUBSCRS WE ACTUALLY GOT    @ [@@@       LA    A3,(1,0)    .    @C@@@@PN
)@@G@@. LOOP THRU INDESC, LOOKING FOR DBLOK ADDRESSES @ @@@@SU0600 JNGD  A4,SUPO
)@@G@@0610   .    @B@@@@       TNZ,H2 INDESC,*A3 . EQ TO ZERO?    @C@@@@      PP
)@@G@@ J     SU0600      . YES, NO DBLOK ADDR   @C@@@@       LA,H2 A6,INDESC-1PQ
)@@G@@,A3 . LOAD DBLOK ADDR   @D@@@@       DS    A3,SUREGS   . SAVE REGISTERS PR
)@@G@@FROM ERASET @C@@@@       LMJ   X11,ERASET  . ERASE SUBSCR EXP     @B@@@@PS
)@@G@@       J     SU0650      . ERROR RETURN   @G@@@@       DL    A3,SUREGS  PT
)@@G@@ . RECOVER REGS (COMPUTER TALK FOR REGISTERS)   @C@@@@       SZ    INDESPU
)@@G@@C-1,A3 . ZERO EXPRESSION OUT  @ @@@@       J     SU0600      .    @B@@@@PV
)@@G@@SU0610 LX    X11,SULINK  . NORMAL EXIT    @ @@@@       J     1,X11      PW
)@@G@@ .    @B@@@@SU0650 LX    X11,SULINK  . ERROR EXIT     @ @@@@       J    PX
)@@G@@ 0,X11       .    @[@@@@.     @[@@@@.     @G@@@@.         SPECIAL EXITS PY
)@@G@@FOR ERRORS FROM  VERIFYS WHICH SAVE OBJECT ON   @B@@@@.         STACK FOPZ
)@@G@@R ERASER ARE  SU09X5    @A@@@@SU0910 ERROR  YINDEX,SU0990   .     @ @@@@QA
)@@G@@SU0915 PUSH   A6         .    @A@@@@SU0920 ERROR  YSYSTM,SU0990   .     QB
)@@G@@@ @@@@SU0925 PUSH   A6         .    @A@@@@SU0930 ERROR  YDOMAI,SU0990   QC
)@@G@@.     @ @@@@SU0935 PUSH   A6         .    @A@@@@SU0940 ERROR  YLENGT,SU0QD
)@@G@@990   .     @ @@@@SU0945 PUSH  A6          .    @ @@@@SU0950 ERROR YSYNTQE
)@@G@@A,SU0990   .@[@@@@.     @[@@@@.     @D@@@@SU0990 .            ERASE TEMPQF
)@@G@@ORARIES USED FOR SUBSCRS@ @@@@SU0999 LX    X8,SUX8SV   .    @ @@@@      QG
)@@G@@ LX    X11,SULINK  .    @ @@@@       J     0,X11       .    @#@@@@      QH
)@@G@@ VARBLS .   @B@@@@SUREGS RES 2   . SAVE PLACE FOR A2 AND A3 @A@@[[SUNGOTQI
)@@G@@  EQUF   $,,H1          .     @A@@[[        RES    1              .     QJ
)@@G@@@D@@@@/. CONTROL TABLES USED TO RANDOMLY INDEX INTO AN ARRAY@[@@@@.     QK
)@@G@@@D@@@@.         :   1ST SUBSCRIPT : 2ND SUBSCRIPT : ETC     @A@@@@.     QL
)@@G@@    :.................:.......@G@@@@.  WORDPT : INITXW :  CURXW : INITXWQM
)@@G@@         =POINTER TO FIRST DATA WRD @G@@@@.  PARTPT : INITXP :  CURXP : QN
)@@G@@INITXP         =POINTER TO PICK-UP ROUTINE@G@@@@.  ELEMCT : INITCT :  CUQO
)@@G@@RCT : INITCT         =NUM OF VALUES IN SUB EXP  @G@@@@.  CURVAL : WRD INQP
)@@G@@C: CUR VAL: WRD INC        =WORDPT INCRE, CURRENT VAL @G@@@@.  INDESC :SQQ
)@@G@@UB LENG:DBLOK AD: SUB LENG       =SUB LENGTH, ADDR OF DBLOK @G@@@@.     QR
)@@G@@                                                     OF SUB EXP   @[@@@@QS
)@@G@@.     @F@@@@.     ONE WORD IS USED PER ENTRY (WORDPT,PARTPT,ETC) PER SUBQT
)@@G@@SCRIPT@[@@@@.     @F@@@@.     THE WORD AND PARTIAL WORD POINTERS ARE REGQU
)@@G@@ISTER VALUES WHICH@G@@@@.     POINT TO APPROPRITATE SUBROUTINES WHICH FEQV
)@@G@@TCH (OR GENERATE) THE   @F@@@@.     NEXT CURRENT SUBSCRIPT VALUE(X6 AND QW
)@@G@@X7 ARE USED FOR THIS)   @F@@@@.     PARTPT POINTS TO THE ROUTINE AND WORQX
)@@G@@DPT POINTS TO THE DATA  @[@@@@.     @F@@@@.     IF A SUBSCR IS AN ARRAY,QY
)@@G@@ THEN THE REGS POINT TO APPROPRIATE @F@@@@.     LINEAR FETCH RTNES IN THQZ
)@@G@@E ARRAY -- IF THE SUBSCR IS ELIDED  @D@@@@.     THEN THE ROUTINES GENERARA
)@@G@@TE THE SUBSCRIPT VALUES @F@@@@.     IF THE SUBSCR IS A FIXED SCALAR, PARRB
)@@G@@TPT=0, INDICATING NO    @ @@@@.     VALUE CHANGE IS NEEDED. @[@@@@.     RC
)@@G@@@E@@@@.     SEE SUBUMP (BELOW) FOR EXPLANATION OF HOW ROUTINES    @^@@@@RD
)@@G@@.     STEP THROUGH TABLE@[@@@@.     @G@@@@. IF SUBSCRIPT IS ELIDED, WORDRE
)@@G@@PT IS NOT USED AS A POINTER, BUT AS A     @G@@@@. DATA VALUE.  IT IS LOARF
)@@G@@DED INTO X7 AND INCREMENTED TO DIRECTLY COMPUTE @]@@@@. THE VALUE.@[@@@@RG
)@@G@@.     @G@@@@. NOTE: STORAGE BELOW MAY BE USED AS SCRATCH BY ROUTINES WHIRH
)@@G@@CH DO NOT   @^@@@@.       DO SUBSCRIPTING @[@@@@.     @#@@@@Z      PROC RI
)@@G@@.     @D@@@@ZERBLK* NAME . GENERATE BLOCKS OF ZEROED LOCATIONS    @#@@@@RJ
)@@G@@       UNLI$T .   @[@@@@* .   @F@@@@ DO Z(1,1)//8 , DO 8 , +0 . BOUNDARYRK
)@@G@@ ALIGN FOR READABLE DUMPS     @#@@@@       LI$T .     @]@@@@       END .RL
)@@G@@@[@@@@.     @#@@@@       VARCON .   @[@@@@.     @F@@@@. GENERALLY DESTRURM
)@@G@@CTABLE STORAGE USED BY LOTS OF OTHER ROUTINES   @[@@@@.     @F@@@@ERSABLRN
)@@G@@ RES   24          . STAGING AREA FOR NAMES (LEXCAN, SYMBOL)@E@[@@BUFF* RO
)@@G@@ RES   300         . I/O BUFFER FOR )SAVE, )LOAD, ETC.@E@@][BUFF*  RES  RP
)@@G@@ 448         . I/O BUFFER FOR )SAVE, )LOAD, ETC.@E@[@@       RES   ERSABRQ
)@@G@@L-$    . RESET TO BEGINNING OF ERASABLE   @C@@[[BSIZE   EQU    $-ERSABL RR
)@@G@@ . REMEMBER WHERE WE ARE@C@@[[        RES    0-BSIZE   . AND RESET TO STRS
)@@G@@ART   @[]@@@.     @A@@@@. TABLES USED DURING SUBSCRIPTING-- @[@@@@.     RT
)@@G@@@E@@@@WORDPT* ZERBLK MAXSUB . WORD POINTER, H1=INITIAL,H2=CURRENT @E@@@@RU
)@@G@@PARTPT* ZERBLK MAXSUB . PARTIAL WD POINTER, H1=INIT,H2=CUR  @E@@@@ELEMCTRV
)@@G@@* ZERBLK MAXSUB . ELEMENT COUNTER, H1=INIT,H2=CUR     @F@@@@CURVAL* ZERBRW
)@@G@@LK MAXSUB . CURRENT (INTEGER) VAL OF THIS SUBSCRIPT   @F@@@@INDESC* ZERBRX
)@@G@@LK MAXSUB      . LENGTH OF SUBSCR, PLUS DBLOK REL ADDR@F@@@@RESDIM* ZERBRY
)@@G@@LK MAXSUB//2   . AREA TO CREATE DIMVECT OF RESULTS    @D@@@@TRSORT* ZERBRZ
)@@G@@LK MAXSUB    . SORTING AREA FOR TRANSPOSE @[@@@@.     @#@[@@       VARBLSA
)@@G@@S .   @ [@@@SUX8SV RES   1 . STORE FOR X8 @#@@@@SULINK RES   1 .  @ @@@@SB
)@@G@@SUIFLG RES   1 . INDEXING FLAG@B@@@@SUDUMV RES   1 . DUMMY DIMVECT FOR VSC
)@@G@@ECTORS@#@@@@SULDIM RES   1 .  @A@@@@SUDIMA RES   1 .  DIM DATA ADDR     SD
)@@G@@@B@@@@SUTEMP RES   1 . TEMP STORAGE FOR FLAG    @[@@@@.     @B@@@@. TEMPSE
)@@G@@ STORAGE OF DECODED SUBSCRIPTEE DATA@#@@@@SCDATA* RES  2 .  @#@@@@SCTYPESF
)@@G@@* RES  2 .  @#@@@@SCRANK* RES  2 .  @#@@@@SCDESC* RES  2 .  @[@@@@.     SG
)@@G@@@F@@@@. AREA IN WHICH DESCRIPTOR OF ARRAY OF SUBSCRS IS CONSTRUCTED     SH
)@@G@@@[@@@@.     @[@@@@.     @B@@@@NUMSUB* RES  1 . ACTUAL NO OF SUBSCRIPTS  SI
)@@G@@@E@@@@NUMSIG* RES   1 . MOST RAPIDLY VARYING (NON-SCALAR) SUBSCR  @E@@@@SJ
)@@G@@RESDSC* RES  1 . REL ADDR OF DESCRIPTOR FOR SUBSCRPTAND     @F@@[[. BE SSK
)@@G@@URE LOC CTR IS AT MAX SIZE OF THE TWO BLOCKS WE DEFINED     @D@@[[TSIZE SL
)@@G@@  EQU    $-WORDPT  . COMPUTE WHERE WE ARE NOW   @G@@[[DSIZE   EQU    BSISM
)@@G@@ZE-TSIZE    . WHERE WE ARE LESS WHERE WE USED TO BE   @F@@[[ DO DSIZE>0 SN
)@@G@@, RES DSIZE . IF NECESSARY, ADJUST OUR LOCATION CTR   @D@@@@/. THIS ROUTSO
)@@G@@INE SETS UP SPACE TO STASH SUBSCRIPTAND   @A@@@@. MOVES SUBSCRIPTAND TO SP
)@@G@@SUBSCRIPTEE @F@@@@. IT MAY BE USED BY ANY ROUTINE WHICH CALLED SUBIND ORSQ
)@@G@@ SUBMIX     @#@@@@       INSTRS .   @ @@@@SUBMOV* SX   X11,SMLINK  .    SR
)@@G@@@D@@@@       LA,U  A0,RESDIM   . ADDR OF CREATED DIMVECT    @A@@@@      SS
)@@G@@ RELADR A0         . ADJUST IT@E@@@@       SA,H2 A0,RESDDB+1 . PUT INTO ST
)@@G@@DUMMY DESCR OF DIMVECT  @A@@@@       LA    A1,SCTYPE+1 . GET MODE @F@@@@SU
)@@G@@       LX,H2 X4,RANGET,A1 . INITIALIZE FETCHPOINTER FOR THIS MODE @B@@@@SV
)@@G@@       LA    A0,RESRNK   . PICK UP RANK   @E@@@@       JNE,U A0,ZRANKS SSW
)@@G@@M0050 . IF NON-SCALAR, DON'T FARBLE @F@@@@       TNE,U A1,ZMOCHR   . BUTSX
)@@G@@ IF SCALAR, IS IT ALSO CHARACTER?   @F@@@@       LA,U  A0,ZRANKV   . IF SY
)@@G@@BOTH, FORCE TO VECTOR *** TEMP ***  @F@@@@       SA,S3 A0,RESBLK   . PUTSZ
)@@G@@ RANK INTO DUMMY DESCR FOR RESULT   @D@@@@       LA,U  A0,1        . GETTA
)@@G@@ APPROPRIATE LENGTH     @E@@@@       SA,H2 A0,RESBLK   . TO LENGTH FIELDTB
)@@G@@ OF DUMMY DESCR   @G@@@@SM0050 SA,H2 A0,RESDDB   . RANK TO LENGTH FIELD TC
)@@G@@OF DIMVECT DESCRIPTOR   @A@@@@       LA    A0,SCRANK   . LOAD RANK@C@@@@TD
)@@G@@       JNE,U A0,ZRANKS SM0060 . IF NOT SCALAR   @B@@@@       LA,U  A0,ZRTE
)@@G@@ANKV   . FORCE TO VECTOR@C@@@@       SA    A0,SCRANK   . STORE INTO SCRATF
)@@G@@NK    @]@@@@SM0060 .    @C@@@@       LA,U  A0,RESDDB   . LOC OF DIMVECT TG
)@@G@@DBLOK @ @@@@       RELADR A0         .    @C@@@@       SA,H1 A0,RESBLK+1TH
)@@G@@ . PUT INTO DUMMY DBLOK @D@@@@       LA,U  A0,RESBLK   . ADDR OF THE DUMTI
)@@G@@MY DBLOK    @F@@@@       LMJ   X11,PUTANS  . SET UP X2 AND X3 FOR STASHITJ
)@@G@@NG RESULT   @B@@@@       J     SM0999      . OOPS, WS FULL  @E@@@@      TK
)@@G@@ SA    A2,RESDSC   . SAVE RELADR OF RESULT DESCRIPTOR @E@@@@       LA   TL
)@@G@@ A14,RESLNT  . GET LENGTH OF RESULT FOR COUNTING@B@@@@. NOW MOVE FROM SUTM
)@@G@@BSCRIPTEE TO SBSCRIPTAND@D@@@@SM0100 JNGD  A14,SM0110  . MORE TO DO? IF TN
)@@G@@NOT, EXIT   @D@@@@       LMJ   X4,0,X4     . YES, GO ACCESS SUBSCRIPTEE TO
)@@G@@@B@@@@       J     SM0990      . ERROR RETURN   @B@@@@       LMJ   X2,0,TP
)@@G@@X2     . STORE RESULT   @]@@@@SM0105 .    @D@@@@       LMJ   X11,SUBUMP TQ
)@@G@@ . BUMP TO NEXT SUBSCRIPT SET @B@@@@       J     SM0990      . ERROR EXITR
)@@G@@T     @ @@@@       J     SM0100      .    @#@@@@. ALL FINISHED    @D@@@@TS
)@@G@@SM0110 LA    A0,RESDSC   . GET DESCR ADDR OF RESULT   @A@@@@       PUSH TT
)@@G@@ A0          . STACK IT @ @@@@       LX    X11,SMLINK  .    @ @@@@      TU
)@@G@@ J     1,X11       .    @[@@@@.     @[@@@@.     @ @@@@SUBMOW* SX   X11,STV
)@@G@@MLINK   .   @ @@@@       J     SM0105      .    @]@@@@. ERROR EXIT@ @@@@TW
)@@G@@SM0900 ERROR YSYSTM,SM0990 .  @ @@@@. FREE ANY RESERVED SPACE     @B@@@@TX
)@@G@@SM0990 SA    A0,SMTEMP   . SAVE ERROR CODE@D@@@@       LA    A6,RESDSC  TY
)@@G@@ . GET DESCR ADDR OF RESLNT   @B@@@@       LMJ   X11,ERASET  . ERASE SPATZ
)@@G@@CE    @B@@@@       J     SM0999      . ERROR RETURN   @C@@@@       LA   UA
)@@G@@ A0,SMTEMP   . RELOAD ERROR CODE    @ @@@@SM0999 LX    X11,SMLINK  .    UB
)@@G@@@ @@@@       J     0,X11       .    @#@@@@       VARBLS .   @#@@@@SMTEMPUC
)@@G@@ RES   1 .  @#@@@@SMLINK RES   1 .  @F@@@@/.    THIS ROUTINE BUMPS THE AUD
)@@G@@RRAY OF SUBSCRS USED BY THE RANDOM  @F@@@@.     ACCESS ROUTINES TO THE NUE
)@@G@@EXT SET OF SUBSCRIPT VALUES. IT IS  @F@@@@.     BLISSFULLY UNAWARE OF THUF
)@@G@@E ACTUAL METHOD USED TO OBTAIN THE  @G@@@@.     VALUE OF THE NEXT SUBSCRUG
)@@G@@IPT - THAT IS DONE BY SUBROUTINES WHOSE   @G@@@@.     ADDRESSES ARE TABUUH
)@@G@@LATED IN THE 'PARTPT' ENTRY FOR EACH SUBSCRIPT. @G@@@@.     THIS ROUTINEUI
)@@G@@ MERELY GENERATES THE APPROPRIATE CALLS TO THESE RTNES@F@@@@.     IT ASSUJ
)@@G@@UMES THAT PARTPT, WORDPT, ETC HAVE BEEN INITIALIZED,  @F@@@@.     AND THUK
)@@G@@AT 'NUMSIG' CONTAINS THE SERIAL NO OF THE RIGHTMOST   @A@@@@.     SUBSCRUL
)@@G@@IPT TO BE CYCLED  .     @[@@@@.     @#@@@@P      PROC    .  @#@@@@PNTSAVUM
)@@G@@* NAME 0 .  @#@@@@OP     EQU   S .  @^@@@@       GO  P$NT01 .     @#@@@@UN
)@@G@@PNTLOD* NAME 1 .  @#@@@@OP     EQU   L .  @#@@@@P$NT01* NAME   .  @C@@@@UO
)@@G@@       OP,P(0,1)  R1,ELEMCT,A0 . SET ELEMENT CTR@#@@@@       UNLIST .   UP
)@@G@@@E@@@@       OP,P(0,1)  X6,PARTPT,A0 . ALSO FETCH SUBRTNE LINK    @D@@@@UQ
)@@G@@       OP,P(0,1)  X7,WORDPT,A0 . AND WORD POINTER     @F@@@@ DO P(0,0) ,UR
)@@G@@ LXI,H1 X7,CURVAL,A0   . AND IF LOAD, WORD INCREMENT  @#@@@@       LIST US
)@@G@@.     @#@@@@       END  .     @[@@@@.     @#@@@@P      PROC  .    @#@@@@UT
)@@G@@SUBGET* NAME .    @ @@@@       SA    A0,P(2,1)   .    @#@@@@       UNLISUU
)@@G@@T  .  @B@@@@       JNGD  R1,P(1,1)   . MORE TO DO?    @#@@@@       UNLISUV
)@@G@@T .   @B@@@@       LMJ  X6,0,X6 . YES, GO GET VALUE   @ @@@@       LA   UW
)@@G@@ A0,P(2,1)   .    @A@@@@       SA,H2 A5,CURVAL,A0 . STASH IT@#@@@@      UX
)@@G@@ LIST .     @#@@@@       END  .     @[@@@@.     @#@@@@       INSTRS .   UY
)@@G@@@G@@@@SUBUMP* S    X11,SBLINK  . NOTE: USE 'S' TO ACTIVATE IT IN ASM SMBUZ
)@@G@@L TBL @D@@@@       DL    A6,X6       . TEMP SAVE WORKREGS (X6,X7) @G@@@@VA
)@@G@@       L     A0,NUMSIG   . GET SEQNO OF RITEMOST SUBSCR TO BE STEPPED   VB
)@@G@@@E@@@@SB0100 JNGD  A0,SB0120   . IF NO MORE SUBSCRS TO VARY, EXIT @D@@@@VC
)@@G@@       TNZ   PARTPT,A0   . IS CURRENT SUBSCR A SCALAR?@F@@@@       J    VD
)@@G@@ SB0100      . YES, DON'T VARY IT; GET THE NEXT ONE   @E@@@@       PNTLOVE
)@@G@@D,H2         . NO, LOAD POINTERS FOR THIS SUBSCR@D@@@@       SUBGET SB01VF
)@@G@@10 SBSAVE  . GET NEXT VAL, IF ANY   @D@@@@       JNZ   A4,SB0900   . IF VG
)@@G@@VAL IS DFLOAT, INDEX ERR@E@@@@       PNTSAV,H2         . SAVE NEW POINTEVH
)@@G@@RS FOR THIS SUBSCR@A@@@@       J     SB0120      . AND EXIT @F@@@@. CURRVI
)@@G@@ENT SUBSCR HAS CYCLED.  RESET IT, AND GO TO THE NEXT ONE    @C@@@@SB0110VJ
)@@G@@ PNTLOD,H1         . GET INITIAL POINTERS @D@@@@       SUBGET SB0900 SBSVK
)@@G@@AVE  . FETCH INITIAL VALUE    @C@@@@       PNTSAV,H2         . SAVE CURRVL
)@@G@@ENT POINTERS@D@@@@       J     SB0100      . AND STEP TO NEXT SUBSCR    VM
)@@G@@@C@@@@SB0120 DS    A6,X6       . RESTORE WORKING REGS @C@@@@       LX   VN
)@@G@@ X11,SBLINK  . RECOVER EXIT ADDR    @B@@@@       J     1,X11       . ANDVO
)@@G@@ GO HOME    @[@@@@.     @ @@@@SB0900 DS    A6,X6       .    @ @@@@      VP
)@@G@@ ERROR YINDEX      .    @ @@@@       LX    X11,SBLINK  .    @ @@@@      VQ
)@@G@@ J     0,X11       .    @#@@@@       VARBLS  .  @#@@@@SBLINK RES   1 .  VR
)@@G@@@#@@@@SBSAVE* RES 1 .   @A@@@@/.    SELECTED COORDINATE GET RTNE .@F@@@@VS
)@@G@@.         THIS RTNE PICKS UP THE DATA VALUES BY STEPPING ALONG A  @G@@@@VT
)@@G@@.     COORDINATE WHICH IS BEING SELECTED UPON.  THE VALUE IS BROUGHT TO VU
)@@G@@@G@@@@.     A1,A2  BY  LMJ  X4,0,X4 (I.E. A STANDARD LEFTARG FETCH CALL)VV
)@@G@@, AND @G@@@@.     TAKES CARE OF SEQUENCING BOTH THE SELECTED AND THE OTHVW
)@@G@@ER COORDS.  @G@@@@.         RETURN CODE IN A0 IS: 0=OK; 1=END OF COORDINVX
)@@G@@ATE; 2=END ARRAY  @F@@@@.     ONLY IF A0=0 WAS A VALUE PICKED UP.  THE EVY
)@@G@@ND ARRAY EXIT HAS @A@@@@.     PRECEDENCE OVER END COORD     @[@@@@.     VZ
)@@G@@@#@@@@       INSTRS .   @E@@@@. INITIAL ENTRY (SUBSCR ARRAY ALREADY SET WA
)@@G@@TO 1ST ELEMENT)   @[@@@@.     @A@@@@SELGET* SX   X4,SGLINK        .     WB
)@@G@@@E@@@@SG0005 LA    A14,SCRANK+1. SET CT OF NO OF ELS TO BE FETCHED@G@@@@WC
)@@G@@       JGD   A14,SG0030       . DECREMENT CT OF ELS LEFT, PICK UP NEXT  WD
)@@G@@@F@@@@       ER    ERR$             . SHOULD NEVER HAVE NOTHING TO GET  WE
)@@G@@@^@@@@. NORMAL FETCH LOOP     @A@@@@SG0010 SX    X4,SGLINK        .     WF
)@@G@@@C@@@@       JNGD  A14,SG0050  . IF NO MORE, GET OUT  @F@@@@       LA   WG
)@@G@@ A0,SUCORD   . ELSE GET INDEX OF SELECTED COORDINATE  @F@@@@       PNTLOWH
)@@G@@D,H2              . INITIALIZE POINTERS SO WE CAN...  @F@@@@       SUBGEWI
)@@G@@T SG0040 SBSAVE   .    COMPUTE NEXT VAL OF THIS COORD @F@@@@       PNTSAWJ
)@@G@@V,H2              . THEN SAVE THE UPDATED POINTERS    @G@@@@SG0030 LMJ  WK
)@@G@@ X4,*SGRGET       . PICK UP THE DATA VAL VIA RANGET RTNES   @C@@@@      WL
)@@G@@ J     SG0900           . OOPS, INDEX ERR @D@@@@       LA,U  A0,0       WM
)@@G@@      . SET NORMAL EXIT FLAG  @A@@@@       LX    X4,SGLINK        .     WN
)@@G@@@B@@@@       LMJ   X4,1,X4          . RETURN    @D@@@@       J     SG001WO
)@@G@@0           . THEN GO GET NEXT VALUE@A@@@@. END OF COORDINATE ENCOUNTEREWP
)@@G@@D     @D@@@@SG0040 LMJ   X11,SUBUMP  . INCREMENT ALL SUBSCRIPTS   @ @@@@WQ
)@@G@@       J     SG0900      .    @D@@@@       LA    A0,SUCORD   . GET SELECWR
)@@G@@TED COORDINATE    @D@@@@       PNTLOD,H1         . RESET IN CASE SUBUMP WS
)@@G@@DIDN'T@C@@@@       SUBGET SG0900 SBSAVE . PICK UP 1ST VALUE @ @@@@      WT
)@@G@@ PNTSAV,H2         .    @G@@@@       AA,U  A14,1            . FIX UP THEWU
)@@G@@ COUNT OF REMAINING VALUES    @D@@@@       LA,U  A0,1        . END OF COWV
)@@G@@ORDINATE FLAG     @ @@@@       LX    X4,SGLINK   .    @B@@@@      LMJ   WW
)@@G@@ X4,1,X4     . NORMAL EXIT    @ @@@@       SX    X4,SGLINK   .    @F@@@@WX
)@@G@@       JGD   A14,SG0030  . SUBUMP HAS RESET INDICES, GO DO NEXT EL@B@@@@WY
)@@G@@SG0050 LA,U  A0,2        . END OF ARRAY   @A@@@@       LMJ   X4,1,X4    WZ
)@@G@@ . GET OUT  @D@@@@. IF WE COME BACK, WE MUST BE RECYCLING THRU THE ARRAYXA
)@@G@@@G@@@@SG0060 SX    X4,SBLINK   . SINCE EXIT(ABOVE) HAPPENS BEFORE BUMP..XB
)@@G@@.     @G@@@@       LMJ   X11,SUBUMP  . ... DO BUMP TO RESET ALL SUBSCRS XC
)@@G@@TO INITVALS @ @@@@       J     SG0900      .    @D@@@@       J     SG000XD
)@@G@@5      . GO BACK TO RESET LENGTH    @[@@@@.     @ @@@@SG0900 ERROR YINDEXE
)@@G@@X      .    @ @@@@       LX    X4,SGLINK   .    @ @@@@       J     0,X4 XF
)@@G@@       .    @ @@@@       VARBLS            .    @ @@@@SGLINK RES   1    XG
)@@G@@       .    @E@@@@SGRGET* RES  1           . ADDR OF RANGET RTNE TO BE UXH
)@@G@@SED   @ @@@@SGX11T RES   1           .    @E@@@@SUCORD RES   1          XI
)@@G@@ . INDEX OF SELECTED COORDINATE     @#@@@@       INSTRS .   @G@@@@/.    XJ
)@@G@@THE FOLLOWING RTNES ARE USED BY SUBUMP TO PICK UP THE NEXT VALUE  @A@@@@XK
)@@G@@.     OF A PARTICULAR SUBSCRIPT.    @[@@@@.     @A@@@@E      PROC .    BXL
)@@G@@UMP ELIDED INDICES@#@@@@ELXBMP* NAME   .  @#@@@@       UNLI$T  .  @D@@@@XM
)@@G@@       LA,U  A4,0,*X7    . BRING VAL TO RESULT REG    @C@@@@ELXEND TNZ  XN
)@@G@@ WSIXOR      . ZERO ORIGIN INDESING?@E@@@@       ANA,U A4,1        . YESXO
)@@G@@, DECREMENT COMPUTED INDEX    @G@@@@       DSA   A4,36       . SIGN EXTEXP
)@@G@@ND RESULT TO PROPER DOUBLE RESULT   @#@@@@       LI$T  .    @#@@@@      XQ
)@@G@@ END   .    @C@@@@P      PROC .  ROTATE MODIFICATIONS TO CURVAL   @#@@@@XR
)@@G@@ROTBMP* NAME .    @#@@@@       UNLI$T .   @C@@@@       LA    A1,SUCORD  XS
)@@G@@ . LOAD SELECTED COOR   @A@@@@       DO P(1,1)=A5 , GO RO0025 .   @E@@@@XT
)@@G@@       LA,H2 P(1,1),WORDPT,A1 . LOAD WORDPT OF SEL-COOR     @D@@@@      XU
)@@G@@ ANA,H1 P(1,1),CURVAL,A1 . SUBTRACT INCREMENT   @#@@@@RO0025* NAME .    XV
)@@G@@@E@@@@       AA    P(1,1),ROTCYC . ADD CURRENT ROTATION CYCLE     @A@@@@XW
)@@G@@       DO    P(1,1)=A5 , GO RO0050 .@B@@@@       TNZ   WSIXOR      . ZERXX
)@@G@@O-INDEXING  @B@@@@       ANA,U P(1,1),1    . YES, CORRECT   @#@@@@RO0050XY
)@@G@@* NAME .    @F@@@@       DSA   P(1,1),36   . PREPARE TO REDUCE MOD THIS XZ
)@@G@@DIMENSION   @B@@@@       DI,H1 P(1,1),ELEMCT,A1 . REDUCE    @D@@@@      YA
)@@G@@ LA    P(1,1),P(1,1)+1  . RECOVER REMAINDER     @D@@@@       TLE   P(1,1YB
)@@G@@),WSIXOR . IF LARGE ENOUGH, OKAY    @E@@@@       AA,H1 P(1,1),ELEMCT,A1 YC
)@@G@@. ELSE FORCE WITHIN RANGE     @#@@@@       LI$T .     @]@@@@       END .YD
)@@G@@@[@@@@.     @G@@@@.     DIRECT COMPUTE - USED FOR ELIDED INDICES (SUBSCRYE
)@@G@@IPTING OPNS), OR  @F@@@@.     WHEN SEQUENCING THROUGH FOR SPECIAL MIXED YF
)@@G@@OPS. NOTICE THAT A@F@@@@.     JUDICIOUS CHOICE OF THE ELEMCT AND STARTINYG
)@@G@@G WORDPT MAKE THIS@A@@@@.     ALSO USABLE FOR TAKE AND DROP @A@@@@SB0300YH
)@@G@@ ELXBMP  . BUMP ELIDED INDEX  @ @@@@       LMJ   X6,0,X6     .    @ @@@@YI
)@@G@@       J     SB0300      .    @[@@@@.     @D@@@@. STEP A COORDINATE BACKYJ
)@@G@@WARDS (USED IN REDUCTION)     @[@@@@.     @D@@@@SB0310* LA   A4,R1      YK
)@@G@@ . PICK UP CURRENT LOOP CTR   @F@@@@       AA    A4,WSIXOR   . BUMP TO CYL
)@@G@@OMPENSATE FOR PRECEDING JGD   @E@@@@       DSA   A4,36       . SIGN EXTEYM
)@@G@@ND TO DOUBLEWORD RESULT @ @@@@       LMJ   X6,0,X6     .    @^@@@@      YN
)@@G@@ J     SB0310     @C@@@@. CYCLE A COORDINATE WHICH IS BEING ROTATED UPONYO
)@@G@@@[@@@@.     @C@@@@SB0320* ELXBMP  . FIRST BUMP NORMAL COUNTER     @A@@@@YP
)@@G@@       TLD   A1,ROTORG   . RESTORE  @A@@@@       TSTO  A1,ROTCYC   .    YQ
)@@G@@ROTATE@B@@@@       LA    A1,ROTORG+3 .      VALUES    @ @@@@       SA   YR
)@@G@@ A1,ROTX7    .    @D@@@@       TNZ,H2 ELEMCT,A0  . SKIP ROTBMP, IF BEINGYS
)@@G@@ RESET@ @@@@       J     SB0330      .    @B@@@@       ROTBMP A5        YT
)@@G@@ . ROTATE BUMP    @]@@@@SB0330 .    @A@@@@       LMJ   X6,0,X6     . ANDYU
)@@G@@ EXIT @ @@@@       J     SB0320      .    @[@@@@.     @G@@@@. CYCLE COORYV
)@@G@@DINATES OTHER THAN THE ONE BEING ROTATED (ROTATE, REVERSE)  @[@@@@.     YW
)@@G@@@F@@@@SB0340* SX   X6,ROTSAV   . SAVE XREGS UNTIL AFTER LEFT ARG FETCH  YX
)@@G@@@ @@@@       SX    X7,ROTSAV+1 .    @B@@@@       TNZ,H2 ELEMCT,A0  .  SKYY
)@@G@@IP STUFF    @F@@@@       J     SB0355      .      IF COOR IS BEING RESETYZ
)@@G@@ IN SUBUMP  @E@@@@       LX,H2 X6,ROTX6    . SET POINTERS TO FETCH IN LEZA
)@@G@@FT ARG@ @@@@       LX,H2 X7,ROTX7    .    @ @@@@       LXI   X7,ROTINC  ZB
)@@G@@ .    @ @@@@       LR,H2 R2,ROTLEN   .    @C@@@@SB0350 JNGD  R2,SB0360  ZC
)@@G@@ . TEST IF END OF LOOP  @D@@@@       LMJ   X6,0,X6     . GO GE T NEXT VAZD
)@@G@@L OF LEFTARG@E@@@@       SA    A5,ROTCYC   . SAVE AS VALUE TO USE IN CYCZE
)@@G@@LING  @D@@@@       SX,H2 X6,ROTX6    . STASH NEW LINKREG VALS     @ @@@@ZF
)@@G@@       SX,H2 X7,ROTX7    .    @ @@@@       SR,H2 R2,ROTLEN   .    @B@@@@ZG
)@@G@@       ROTBMP A4         . ROTATE BUMP    @B@@@@       SA,H2 A4,CURVAL,AZH
)@@G@@1 . STORE CURVAL  @C@@@@       LA,U  A1,0,A0     . LOAD INDEX PART OF A1ZI
)@@G@@@G@@@@       TG    A1,SUCORD   . IF BUMPED COOR IS TO LEFT OF SEL-CCOOR,ZJ
)@@G@@ SKIP @F@@@@       J     SB0355      . OTHERWISE, SKIP UPDATING BASE VALZK
)@@G@@UES   @A@@@@       TLD   A4,ROTCYC   . UPDATE   @ @@@@       TSTO  A4,ROZL
)@@G@@TORG   .    @C@@@@       LA    A4,ROTX7    .       BASE VALUES    @ @@@@ZM
)@@G@@       SA    A4,ROTORG+3 .    @]@@@@SB0355 .    @B@@@@       LX    X6,ROZN
)@@G@@TSAV   . RELOAD XREGS   @ @@@@       LX    X7,ROTSAV+1 .    @C@@@@      ZO
)@@G@@ ELXBMP            . CYCLE THIS SUBSCRIPT @ @@@@       LMJ   X6,0,X6    ZP
)@@G@@ .    @ @@@@       J     SB0340      .    @ @@@@SB0360 LX,H1 X6,ROTX6   ZQ
)@@G@@  .   @ @@@@       LX,H1 X7,ROTX7     .   @ @@@@       LXI   X7,ROTINC  ZR
)@@G@@ .    @ @@@@       LR,H1 R2,ROTLEN     .  @ @@@@       J     SB0350     ZS
)@@G@@ .    @#@@@@       VARBLS .   @#@@@@ROTCYC* + 0  .    @#@@@@ROTLEN* RES ZT
)@@G@@ 1 .  @#@@@@ROTX6* RES  1 .   @#@@@@ROTX7* RES   1 .  @#@@@@ROTINC* RES ZU
)@@G@@ 1 .  @#@@@@ROTEMP RES   1 .  @#@@@@ROTORG* RES  4 .  @#@@@@ROTSAV RES  ZV
)@@G@@2 .   @[@@@@.     @^@@@@. CYCLING FOR TRANSPOSE @[@@@@.     @#@@@@      ZW
)@@G@@ INSTRS .   @A@@@@SB0700* ELXBMP           . BUMP     @E@@@@       SR   ZX
)@@G@@ R1,TRSAVR   . SAVE THE REEEAT COUNT OF SUBUMP  @E@@@@       LR    R1,SCZY
)@@G@@RANK   . GET READY TO STEP THRU TRSORT    @A@@@@       LA    A1,(1,-1)  ZZ
)@@G@@ . POINTER  @D@@@@       LA,Q2 A2,TRSORT,A0 . LOAD COMPARISON VALUE     AA
)@@G@@@D@@@@SB0720 SE,Q2 A2,TRSORT+1,*A1 . SEARCH FOR EQ VALUES   @A@@@@      AB
)@@G@@ J     SB0740      . FINISHED @E@@@@       LA,H2 A3,TRSORT,A1 . LOAD WHEAC
)@@G@@RE IT SHOULD BE PUT     @B@@@@       SA,H2 A5,CURVAL,A3 . PUT IT THERE  AD
)@@G@@@B@@@@       J     SB0720      . CONTINUE SEARCH@B@@@@SB0740 LR    R1,TRAE
)@@G@@SAVR   . RELOAD R COUNT @D@@@@       LA,H2 A5,CURVAL,A0 . MAKE SURE SUBUAF
)@@G@@MP WORKS OK @A@@@@       LMJ   X6,0,X6     . EXIT     @ @@@@       J    AG
)@@G@@ SB0700      .    @#@@@@       VARBLS .   @#@@@@TRSAVR RES 1 .    @#@@@@AH
)@@G@@       VARCON .   @E@@@@RESBLK* CBLOCK ZTPTMP,0,0,0 0 . DUMMY DESCR BLOKAI
)@@G@@ FOR RESULT @C@@@@RESRNK EQUF RESBLK,,S3   . RANK OF SUBSCRIPTAND @D@@@@AJ
)@@G@@RESLNT EQUF  RESBLK,,H2  . LENGTH OF SUBSCRIPTAND     @G@@@@RESDDB* CBLOAK
)@@G@@CK ZTPDIM,ZMOHFI,ZRANKV,0 0 . DUMMY DESCR FOR DUMMY DIMVECT @E@@@@/.    AL
)@@G@@STORE AND FETCH RTNES ARE HERE-- THEY ASSUME THAT THE @F@@@@.     INDICEAM
)@@G@@S OF THE DESIRED ELEMENT HAVE BEEN PRESET IN 'CURVAL',@G@@@@.     AND THAN
)@@G@@E ABS ADDRS OF ITS DATA AND DIMS ARE IN SCDATA SCDATA+1    .@G@@@@.     AO
)@@G@@THE NO OF SUBSCRS TO BE SCANNED IS THE RANK OF THE OPERAND, SCRANK@[@@@@AP
)@@G@@.     @^@@@@.     REG ASSIGNMENTS   @B@@@@.         X2 (X4)   LINK REG FAQ
)@@G@@OR PUT(GET) @E@@@@.         X11       SCAN POINTER FOR VECTOR OF SUBSCR AR
)@@G@@VALUES@E@@@@.         A3        SCAN POINTER FOR VECTOR OF DIMENSIONS   AS
)@@G@@@D@@@@.         A0        RESULT (LINEAR DISPLACEMENT) REG  @B@@@@.     AT
)@@G@@    A6        COMPUTATIONAL SCRATCH @A@@@@.         R1        COUNTER FOAU
)@@G@@R DIMS@[@@@@.     @E@@@@. FETCH ROUTINES-- LEFTARG REGS ARE USED (X4,X5,AV
)@@G@@ A1,A2)     @#@@@@       INSTRS .   @G@@@@RANGET* JMPTBL 0 ZMOHFI,RG0100AW
)@@G@@ ZMOINT,RG0200 ZMODFL,RG0300 ZMOCHR,RG0400@^@@@@.         HALFWORD FETCHAX
)@@G@@@B@@@@RG0100 LMJ   X11,LIDISP  . COMPUTE DISP   @B@@@@       J     0,X4 AY
)@@G@@       . OOPS, ERROR    @C@[@@       DSL   A0,36       . FINAL INDEX TO AZ
)@@G@@A1    @D@[@@       DI,U  A0,2        . CONVERT TO WORD/HALFWORD   @D@@[[BA
)@@G@@       DSL   A0,1        . ALIGN WORD INDEX IN A0     @D@@[[       SSL  BB
)@@G@@ A1,36-1     . AND HALFWORD FLAG IN A1    @D]@@@       AA    A0,SCDATA  BC
)@@G@@ . FOLD IN BASE ADDR OF ARRAY @C@@@@       EX    RG0110,A1   . PICK UP TBD
)@@G@@HE HALFWD   @B@@@@       LDSL  A1,54       . SIGN EXTEND IT @B@@@@      BE
)@@G@@ DSA   A1,54       . DATA LEFT IN A2@B@@@@       LMJ   X4,1,X4     . ANDBF
)@@G@@ RETURN     @ @@@@       J     RG0100      .    @ @@@@RG0110 LA,H1 A2,0,BG
)@@G@@A0     .    @ @@@@       LA,H2 A2,0,A0     .    @[@@@@.     @A@@@@.     BH
)@@G@@    HALFWORD TO FLOAT FETCH   @ @@@@RG0200 LMJ   X11,LIDISP  .    @ @@@@BI
)@@G@@       J     0,X4        .    @ @[@@       DSL   A0,36       .    @ @[@@BJ
)@@G@@       DI,U  A0,2        .    @D@@[[       DSL   A0,1        . ALIGN WORBK
)@@G@@D INDEX IN A0     @D@@[[       SSL   A1,36-1     . AND HALFWORD FLAG IN BL
)@@G@@A1    @ ]@@@       AA    A0,SCDATA   .    @ @@@@       EX    RG0210,A1  BM
)@@G@@ .    @ @@@@       LDSL  A1,54       .    @ @@@@       DSA   A1,54      BN
)@@G@@ .    @ @@@@       DFLOAT A0,A1      .    @ @@@@       LMJ   X4,1,X4    BO
)@@G@@ .    @ @@@@       J     RG0200      .    @ @@@@RG0210 LA,H1 A2,0,A0    BP
)@@G@@ .    @ @@@@       LA,H2 A2,0,A0     .    @[@@@@.     @^@@@@.     DOUBLEBQ
)@@G@@WORD FETCH  @ @@@@RG0300 LMJ   X11,LIDISP  .    @ @@@@       J     0,X4 BR
)@@G@@       .    @ @@@@       LSSL  A0,1        .    @ @@@@       AA    A0,SCBS
)@@G@@DATA   .    @ @@@@       DL    A1,0,A0     .    @ @@@@       LMJ   X4,1,BT
)@@G@@X4     .    @ @@@@       J     RG0300      .    @^@@@@.     QUARTERWORD BU
)@@G@@FETCH @ @@@@RG0400 LMJ   X11,LIDISP  .    @ @@@@       J     0,X4       BV
)@@G@@ .    @D@@@@       DSL   A0,2        . DIV BY 4 FOR WORD INDEX    @B@@@@BW
)@@G@@       SSL   A1,36-2     . ALIGN CHARACTER@ @@@@       AA    A0,SCDATA  BX
)@@G@@ .    @ @@@@       EX    RG0410,A1   .    @ @@@@       LMJ   X4,1,X4    BY
)@@G@@ .    @ @@@@       J     RG0400      .    @ @@@@RG0410 LA,Q1 A1,0,A0    BZ
)@@G@@ .    @ @@@@       LA,Q2 A1,0,A0     .    @ @@@@       LA,Q3 A1,0,A0    CA
)@@G@@ .    @ @@@@       LA,Q4 A1,0,A0     .    @#@@@@/. PUT ROUTINES   @[@@@@CB
)@@G@@.     @E@@@@O      PROC    . COMPUTE LINEAR OFFSET PAST START OF ARRAY  CC
)@@G@@@#@@@@OFFSET* NAME .    @#@@@@       UNLI$T .   @G@@@@       SX,H2 X2,RPCD
)@@G@@LINK   . IN CASE ERR ON LIDISP WIPES IT OUT, SAVE LINK@C@@@@       LMJ  CE
)@@G@@ X11,LIDISP  . COMPUTE DISPLACEMENT @B@@@@       J     *RPLINK     . OOPCF
)@@G@@S, ERROR    @#@@@@       LI$T .     @]@@@@       END .@[@@@@.     @[@@@@CG
)@@G@@.     @G@@@@RANPUT* JMPTBL 0 ZMOHFI,RP0100 ZMOINT,RP0200 ZMODFL,RP0300 ZCH
)@@G@@MOCHR,RP0400@^@@@@.     HALFINT PUT -     @#@@@@RP0100 OFFSET  .  @ @[@@CI
)@@G@@       DSL   A0,36       .    @ @[@@       DI,U  A0,2        .    @D@@[[CJ
)@@G@@       DSL   A0,1        . ALIGN WORD INDEX IN A0     @D@@[[       SSL  CK
)@@G@@ A1,36-1     . AND HALFWORD FLAG IN A1    @ ]@@@       AA    A0,SCDATA  CL
)@@G@@ .    @ @@@@       EX    RP0110,A1   .    @ @@@@       LMJ   X2,1,X2    CM
)@@G@@ .    @ @@@@       J     RP0100      .    @ @@@@RP0110 SA,H1 A2,0,A0    CN
)@@G@@ .    @ @@@@       SA,H2 A2,0,A0     .    @ @@@@.     HALFINT TO DOUBLE CO
)@@G@@PUT   @[@@@@.     @#@@@@RP0200 OFFSET  .  @ @@@@       LSSL  A2,18      CP
)@@G@@ .    @ @@@@       DSA   A2,54       .    @ @@@@       DFLOAT A1,A2     CQ
)@@G@@ .    @ @@@@       LSSL  A0,1        .    @ @@@@       AA    A0,SCDATA  CR
)@@G@@ .    @ @@@@       DS    A2,0,A0     .    @ @@@@       LMJ   X2,1,X2    CS
)@@G@@ .    @ @@@@       J     RP0200      .    @#@@@@.      DOUBLE PUT @#@@@@CT
)@@G@@RP0300 OFFSET  .  @ @@@@       LSSL  A0,1        .    @ @@@@       AA   CU
)@@G@@ A0,SCDATA   .    @ @@@@       DS    A1,0,A0     .    @ @@@@       LMJ  CV
)@@G@@ X2,1,X2     .    @ @@@@       J     RP0300      .    @^@@@@.      QUARTCW
)@@G@@ERWD PUT    @E@@@@RP0400 LA    A2,A1       . TEMP SAVE CHAR TO BE STASHECX
)@@G@@D     @#@@@@       OFFSET .   @ @[@@       DSL   A0,36       .    @ @[@@CY
)@@G@@       DI,U  A0,4        .    @C@@[[       DSL   A0,2        . LINE UP WCZ
)@@G@@ORD INDEX   @E@@[[       SSL   A1,36-2     . AND QUARTERWORD WITHIN THE DA
)@@G@@WORD  @ ]@@@       AA    A0,SCDATA   .    @ @@@@       EX    RP0410,A1  DB
)@@G@@ .    @ @@@@       LMJ   X2,1,X2     .    @ @@@@       J     RP0400     DC
)@@G@@ .    @ @@@@RP0410 SA,Q1 A2,0,A0     .    @ @@@@       SA,Q2 A2,0,A0    DD
)@@G@@ .    @ @@@@       SA,Q3 A2,0,A0     .    @ @@@@       SA,Q4 A2,0,A0    DE
)@@G@@ .    @#@@@@       VARCON .   @C@@@@RPLINK +0,$-$  . CAUTION-- INDIRECTIDF
)@@G@@ON THRU HERE@F@@@@/. SUBROUTINE TO TRANSFORM THE CURRENT STRING OF SUBSCDG
)@@G@@RIPT VALUES @G@@@@.      ( IN 'CURVAL') INTO A LINEAR OFFSET PAST THE ORDH
)@@G@@IGIN OF THE ARRAY @[@@@@.     @#@@@@L      PROC .     @#@@@@LNEXT* NAME DI
)@@G@@.     @C@@@@       JNGD  R1,L(1,1)   . IF FINISHED, EXIT    @C@@@@      DJ
)@@G@@ TNZ,L(0,1) 0,A3   . TEST IF DIM IS ZERO  @C@@@@       J     L(1,2)     DK
)@@G@@ . IF SO, INDEX ERROR   @D@@@@LN0010 LA,H2 A6,CURVAL,*X11   . GET VAL OFDL
)@@G@@ NEXT SUBSCR@F@@@@       ANA   A6,WSIXOR   . COMPENSATE FOR CURRENT INDEDM
)@@G@@X ORIGIN    @B@@@@       JZ    A6,LN0030   . IF ZERO OK     @D@@@@      DN
)@@G@@ JN    A6,L(1,2)   . BUT NEGATIVE IS INDEX ERROR@D@@@@       TG,L(0,1) ADO
)@@G@@6,0,A3 . IS SUBSCR WITHIN RANGE?    @B@@@@       J     L(1,2)      . NO,DP
)@@G@@ INDEX ERR  @G@@@@LN0030 I$  031,L(0,1),A0-A0,A3,2*(L(0,1)=H2),0 . MSI TDQ
)@@G@@HIS DIM INTO PROD @C@@@@       AA    A0,A6  . TOTALIZE THE DISPLACEMENT DR
)@@G@@@]@@@@       LIST.@]@@@@       END .@[@@@@.     @G@@@@. SUBROUTINE USED DS
)@@G@@TO COMPUTE LINEAR DISPLACEMENT GIVEN SUBSCRIPTS--     @#@@@@       INSTRDT
)@@G@@S  .  @ @@@@LIDISP SX    X11,LILINK  .    @D@@@@       LR    R1,SCRANK  DU
)@@G@@ . NO OF SUBSCRS TO BE SCANNED@D@@@@       LX    X11,(+1,0)  . CURRENT IDV
)@@G@@NDEX VALUE SCANNER@C@@@@       LA    A3,SCDATA+1 . DIMEN VECT SCANNER   DW
)@@G@@@ @@@@       LXI,U A3,1        .    @E@@@@       SZ    A0          . CLEDX
)@@G@@AR DISPLACEMENT TOTALIZER     @C@@@@LI0010 LNEXT,H1 LI0020,LI0900 . FOLDDY
)@@G@@ IN NEXT DIM@A@@@@       LNEXT,H2 LI0020,LI0900 .     @A@@@@       J    DZ
)@@G@@ LI0010           .     @C@@@@LI0020 LX    X11,LILINK       . NORMAL RETEA
)@@G@@URN   @A@@@@       J     1,X11            .     @ @@@@LI0900 ERROR YINDEEB
)@@G@@X      .    @ @@@@       LX    X11,LILINK  .    @A@@@@       J     0,X11EC
)@@G@@            .     @#@@@@       VARBLS  .  @#@@@@LILINK RES    1 . @]@@@@ED
)@@G@@       END .___,1,X2     .    @ @@@@       J     RP0200      .    @#@@@@EE
)@@G@@*[S@@@*SDFF*@G@@@@. ****************************************************EF
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APEG
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         EH
)@@G@@                            * @^@@@@       AXR$         .   @C@@@@      EI
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINEJ
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.EK
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTEL
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONEM
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@EN
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * EO
)@@G@@@G@@@@.                                                                 EP
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                EQ
)@@G@@          * @G@@@@. ****************************************************ER
)@@G@@***************** @[@@@@.     @[@[@@.     @E@[@@FASTAL EQU   1          ES
)@@G@@ . ALLOCATE SPACE IN A SINGLE PIECE @[@[@@.     @ #@@@/.     ENTRY CONDIET
)@@G@@TIONS --    @F@@@@.            DUPE - A6 = REL  DESCR ADDR OF ELEMENT TOEU
)@@G@@ BE DUPED   @G@@@@.            RESERV  A0 = ABS  DESCR ADDR OF ELEMENT WEV
)@@G@@HOSE SHAPE DATA   @F@@@@.                    WILL BE USED, A1 = MODE DESEW
)@@G@@IRED FOR RESULT   @[@@@@.     @E@@@@.      EXIT CONDITIONS -- A0 = ABSADEX
)@@G@@R OF INITIALIZED DESCR  @D@@@@.                         A1 = ABSADR OF DEY
)@@G@@ATA AREA    @D@@@@.                         A2 = RELADR OF DESCRIPTOR   EZ
)@@G@@@[@@@@.     @ @[@@.      THIS ENTRY TO DUPLICATE@^@[@@             INSTRFA
)@@G@@S .   @C@[@@DUPE*  SZ    RSNCPY      . CLEAR NO-COPY FLAG   @ @[@@      FB
)@@G@@ J     RS0010      .    @[@[@@.     @A@[@@. THIS ENTRY TO RESERVE SPACE FC
)@@G@@ONLY  @[@[@@.     @D@[@@RESERV* TNZ  A1          . IS DESIRED MODE FLAG FD
)@@G@@OK?   @ @[@@       ER    ERR$        .    @D@[@@       SA    A1, RSNCPY FE
)@@G@@ . YES, POST IT IN NOCOPY FLAG@G@[@@       DL    A2,0,A0     . GET DESCRFF
)@@G@@ (WHICH MAY BE INCOMPLETE DUMMY)    @#@@[[        INSTRS .  @D@@[[. THISFG
)@@G@@ ENTRY TO INITIALIZE A NAMED GLOBAL VARIABLE    @G@@[[DUPEG*  LA     A2,FH
)@@G@@(+0,-ZTPVAR)     . SET GLOBAL, INITIALIZE, NAMED FLAGS@A@@[[        J   FI
)@@G@@   RS0005         .     @D@@[[. THIS ENTRY TO INITIALIZE A NAMED LOCAL VFJ
)@@G@@ARIABLE     @G@@[[DUPEL*  LA     A2,(+1,-ZTPVAR)     . GET LOCAL, INITIAFK
)@@G@@LIZE, NAMED FLAGS @A@@[[        J      RS0005         .     @B@@[[. THISFL
)@@G@@ ENTRY TO INITIALIZE A TEMPORARY    @G@@[[DUPE*   LA     A2,(+1,-ZTPTMP)FM
)@@G@@     . GET LOCAL, INITIALIZE, TEMP FLAGS  @A@@[[        J      RS0005   FN
)@@G@@      .     @G@@[[. THIS ENTRY TO SET ASIDE SPACE FOR A TEMP, BUT NOT INFO
)@@G@@ITIALIZE VALUES   @G@@[[RESERV* LA     A2,(+1,+ZTPTMP)     . FLAGS LOCALFP
)@@G@@, NOINIT, TEMPORARY     @[@@[[.     @D@@[[RS0005  SX     X11,RSLINK     FQ
)@@G@@. REMEMBER RETURN ADDR  @D@@[[        SA     A2,RSETYP      . AND TYPE OFR
)@@G@@F ENTRY     @D@@[[        LSSL   A2,18          . ALIGN FLAGWORD SIGN   FS
)@@G@@@F@@[[        JN     A2,RS0010      . IF DUPE ENTRY, GO DECODE DESCR    FT
)@@G@@@G@@[[        DL     A2,0,A0        . ELSE GET (POSSIBLY UNINITIALIZED) FU
)@@G@@DESCR @DF@@@       DS    A2,RSDUMY   . PUT IN LOCAL DUMMY LOCATION@D@@@@FV
)@@G@@       SA,S2 A1,RSDUMY   . SO WE CAN FORCE ITS MODE   @D@@@@       LA,U FW
)@@G@@ A6,RSDUMY   . THEN GET LOCAL DUMMY ADDR  @F@@@@       RELADR A6        FX
)@@G@@ . AND RELATIVIZE IT FOR WHAT FOLLOWS     @ @[@@. BOTH ENTRIES CONVERGE FY
)@@G@@HERE  @C@[@@RS0010 SX    X11,RSLINK  . POST RETURN ADDR     @G@[@@      FZ
)@@G@@ VERIFW 0,RS0020   . UNDEF IS ALLOWED, STAKMARK=SYSERR (IGDM)     @D@[@@GA
)@@G@@       TG,U  A3,ZMOUNK+1 . IS MODE NULL OR UNDEFINED? @C@[@@       J    GB
)@@G@@ RS0100      . NO, DEFINED, GO DO IT@G@[@@. SPECIAL TREATMENT FOR UNDEFIGC
)@@G@@NED OPERANDS (TO BE USED AS LOCAL VBLES)  @F@[@@RS0020 ALLOCT,U 1 RS0610GD
)@@G@@ . GET SPACE FOR UNINITIALIZED THINGY     @C@[@@       LA    A2,A1      GE
)@@G@@ . ADDR TO RESULT REG   @ @[@@       ABSADR A1         .    @F@[@@      GF
)@@G@@ LA    A0,(+ZTPTMP,ZMOUNK,0,0,0,0) . SKEL FOR UNITIALIZED   @B@[@@      GG
)@@G@@ SA    A0,0,A1     . PUT INTO WS    @C@[@@       J     RS0530      . ANDGH
)@@G@@ TAKE NORMAL EXIT @G@@[[RS0010  VERIFW 0,0            . DECODE- SYSERR(IGI
)@@G@@GDM) IF UNDEF, STACKMARK@[G@@@.     @B@@@@. RESERVE SPACE FOR DEFINED OPGJ
)@@G@@ERANDS --   @[@@@@.     @D@@@@RS0100 SAVER A0,RSDCOD,6 . SAVE DECODED OPGK
)@@G@@ERAND PARAMS@A@[@@. COMPUTE SPACE NEEDED TO HOLD DATA @E@[@@RS0110 LSSL GL
)@@G@@ A5,1        . MULT LENGTH BY 2, ASSUMING DFLOAT@F@[@@       JE,U  A3,ZMGM
)@@G@@ODFL RS0130  . IF WE GUESSED RIGHT, WE'RE DONE  @F@[@@       JNE,U A3,ZMGN
)@@G@@OCHR RS0120  . IF NOT CHAR, GO CHECK PTR HALFINT@C@[@@       AA,U  A5,3*GO
)@@G@@/1     . FOR CHAR ROUND UP    @F@[@@       SSL   A5,2+1      . DIV BY 4+GP
)@@G@@THE EXTRA ONE WE DID ALREADY  @C@[@@       J     RS0130      . AND WE'REGQ
)@@G@@ FINISHED   @^@[@@. ASSUME HALFINT/POINTER@D@[@@RS0120 AA,U  A5,1*/1    GR
)@@G@@ . ADJUST FOR HALFWORD STORAGE@E@[@@       SSL   A5,1+1      . DIV BY 2 GS
)@@G@@PLUS THE DFLOAT SHIFT   @E@[@@       JNE,U A3,ZMOHFI RS0130  . IF NOT HAGT
)@@G@@LFINT WE(RE DONE  @D@[@@       TNE,U A4,ZRANKS   . IF THIS A HALFINT SCAGU
)@@G@@LAR?  @F@[@@       LA,U  A5,0        . YES, IT GETS NO SPACE (DESCR IS UGV
)@@G@@SED)  @B@[@@. NOW COMPUTE SPACE NEEDED FOR DESCRIPTOR @C@[@@RS0130 LA,U GW
)@@G@@ A0,1        . ONE WORD FOR SCALARS @B@[@@       TE,U  A4,ZRANKS   . IS GX
)@@G@@IT A SCALAR?@F@[@@       LA,U  A0,2        . NO-FOR VECTORS AND ARRAYS, GY
)@@G@@2 WORDS     @[@[@@.     @E@[@@. NOW DEPENDING ON AN ASSEMBLY PARAM, WE GGZ
)@@G@@ET SPACE IN EITHER@F@[@@. A SINGLE CONTIGUOUS ALLOCATION (FOR SPEED) OR HA
)@@G@@IN TWO PIECES     @ @[@@. (TO REDUCE FRAGMENTATION)   @[@[@@.     @C@[@@HB
)@@G@@RS0200 SA    A0,RSDSCS   . SAVE DESCRIPTOR SIZE @F@[@@       SA    A5,RSHC
)@@G@@DTAS   . AND DATA SIZE IN CASE A WSFULL OCCURS  @^@[@@. ONE-SHOT ALLOCATHD
)@@G@@ION   @ @[@@       ON    FASTAL      .    @C@[@@       AA    A0,A5      HE
)@@G@@ . COMBINE BOTH SIZES   @C@[@@       ALLOCT RS0210     . AND GIMME A BIGHF
)@@G@@ BLOCK@E@[@@       AU    A1,RSDSCS   . ADD DESCR SIZE TO ITS RELADR     HG
)@@G@@@B@[@@       SA    A2,RSDTAD   . SAVE DATA ADDR @D@[@@       J     RS030HH
)@@G@@0      . AND GO INITIALIZE THE DESCR@D@[@@. IF ONE SHOT ALLOCATION FAILEHI
)@@G@@D, TRY THE TWO-SHOT     @D@[@@RS0210 LA    A5,RSDTAS   . RECOVER DATA ARHJ
)@@G@@EA SIZE     @F@[@@                         . AND FALL THRU TO TWO-SHOT AHK
)@@G@@LLOCATION   @ @[@@       OFF   FASTAL      .    @[@[@@.     @E@[@@. GET HL
)@@G@@THE SPACE IN 2 SHOTS, DATA 1ST CUZ ITS PROBABLY LARGER@F@[@@RS0220 JZ   HM
)@@G@@ A5,RS0230   . IF NO DATA SPACE NEEDED, GO GET DESCR  @D@[@@       LA   HN
)@@G@@ A0,A5       . DATA AREA SPACE REQUIREMENT@D@[@@       ALLOCT RS0610    HO
)@@G@@ . YUM...EAT UP THAT WORKSPACE@C@[@@       SA    A1,RSDTAD   . SAVE REL HP
)@@G@@DATA ADDR   @C@[@@RS0230 LA    A0,RSDSCS   . GET NEEDED DESCR SIZE@F@[@@HQ
)@@G@@       ALLOCT RS0600     . IF NO DESCR SPACE, GO FREE DATA AREA   @E@[@@HR
)@@G@@                         . FALL THRU TO INITIALIZE DESCR    @[@[@@.     HS
)@@G@@@B@[@@. NOW INITIALIZE DESCR (RELADR IN A1)     @[@[@@.     @D@[@@RS0300HT
)@@G@@ LA    A0,A1       . SET UP TO ACCESS DESCR     @#@[@@       ABSADR A0  HU
)@@G@@@F@[@@       LOADR A2,RSDCOD+2,4  . RECOVER TYPE, MODE, RANK, LENGTH    HV
)@@G@@@D@[@@       LA,U  A2,ZTPTMP   . FORCE TYPE TO TEMPORARY    @G@@[[RS0110HW
)@@G@@  LMJ    X11,COMSPC     . COMPUTE SPACE NEEDED FOR DATA AND DIMS  @B@@[[HX
)@@G@@        TZ     A1             . ANY DIMS? @E@@[[        LXI,U  A1,2     HY
)@@G@@      . YES, SET DINVECT DESCR SIZE @F@@[[        LXI,U  A0,1           HZ
)@@G@@. ASSUME DESCR SIZE AS IF SCALAR    @D@@[[        TE,U   A4,ZRANKS      IA
)@@G@@. IS THIS A SCALAR?     @F@@[[        LXI,U  A0,2           . NO, SET DEIB
)@@G@@SCR SIZE FOR VECT, MTX  @F@@[[        LMA    A2,RSNAMT      . GET NAMEBLIC
)@@G@@OK TYPE (SET AT TNETY)  @C@@[[        TNE,U  A2,ZTPVAR      . NAMED VARIID
)@@G@@ABLE? @F@@[[        LXI,U  A0,3           . YES, FUDGE DESCR LENGTH TO 3IE
)@@G@@ WORDS@E@@[[        DS     A0,RSIZES      . SAVE THE VARIOUS SIZE VALUESIF
)@@G@@@D@@[[        NOP    0,0,*A0        . GET TOTAL DATA SIZE   @D@@[[      IG
)@@G@@  NOP    0,0,*A1        . COMPUTE TOTAL DINSIZE @F@@[[        LXI,U  A0,IH
)@@G@@0           . PURGE INCR FIELD ON DATA WORDS    @D@@[[        AA,U   A0,II
)@@G@@0,A1        . GET TOTAL SPACE NEEDED@G@@[[        TNZ    RSLOCL         IJ
)@@G@@. IS LOCAL VAR FLAG (SET AT TNTRY) UP?    @F@@[[        J      RS0120   IK
)@@G@@      . NO, GO ALLOCATE FROM GLOBAL POOL  @G@@[[        ALLOCT RS0610   IL
)@@G@@      . YES, ALLOCATE SPACE FROM STACKFRAME     @C@@[[        J      RS0IM
)@@G@@200         . AND CONTINUE    @F@@[[RS0120  ALGLOB RS0610         . ALLOIN
)@@G@@CATE SPACE FROM GLOBAL POOL   @G@@[[. NOW COMPUTE ADDRESSES OF THE VARIOIO
)@@G@@US ENTRIES IN THE DATUM. LAYOUT IS: @G@@[[.       PRIMARY DESCR; DIM DESIP
)@@G@@CR (IF ANY); DATA (IF ANY); DIMS ( IF ANY)@E@@[[RS0200  AU     A1,RSDSCLIQ
)@@G@@      . DESCR ADDR PLUS ITS LENGTH  @E@@[[        SA     A2,RSDIDA      IR
)@@G@@. SAVE RELAD OF DIM DESCR     @E@@[[        AA     A2,RSDIDL      . ADD IS
)@@G@@LENGTH OF DIM DESCR     @E@@[[        SA     A2,RSVALA      . POST ADDR IT
)@@G@@OF DATA VALUE     @E@@[[        AA     A2,RSVALL      . ADD LENGTH OF DAIU
)@@G@@TA VALUE    @E@@[[        SA     A2,RSDIVA      . GIVING DIMVECT VALUE AIV
)@@G@@DDR   @D@@[[RS0210  LA     A0,A1          . GET RELADR OF DESCR   @C@@[[IW
)@@G@@        ABSADR A0             . MAKE IT ABSOLUTE@E@@[[        DL     A4,IX
)@@G@@RSDCOD+4    . RECOVER RANK AND LENGTH     @C@@[[        TLE,U  A4,2     IY
)@@G@@      . AT LEAST MATRIX?@E@@[[        J      RS0300         . NO, GO INIIZ
)@@G@@TIALIZE DATA DESCR@A@@[[. FOR MTX OR HIGHER, SET UP DIMDESCR@G@@[[RS0220JA
)@@G@@  AU     A0,RSDSCL      . ABSADR OF DIN DESC = PRIMADR PLUS LENGTH@G@@[[JB
)@@G@@        DL     A2,RSDMSK      . GET DKELETON DIM DESCR, INCLUDING VALADRJC
)@@G@@@F@@[[        LXM    A2,A4          . SET DIMVECT LENGTH TO OVERALL RANKJD
)@@G@@@F@@[[        DS     A2,0,A1        . CRAM DINVECT DESCR INTO THE WS    JE
)@@G@@@E@@[[        LA     A1,RSDIDA      . GET REL ADDR OF DIM DESCR   @F@@[[JF
)@@G@@        SA,H1  A1,1,A0        . AND CRAM INTO PRIMARY DESCRIPTOR  @ @@[[JG
)@@G@@. INITIALIZE VALUES OF DIMVECT@F@@[[RS0230  LR     R1,RSDIVL      . GET JH
)@@G@@LENGTH OF DIM VALS IN WORDS   @F@@[[        LA     A1,RSDIVA      . GET JI
)@@G@@RELAD WHERE DIM VALS SHOULD GO@A@@[[        ABSADR A1             .     JJ
)@@G@@@B@@[[        LXI,U  A1,1           . SET STEP  @F@@[[        LA     A2,JK
)@@G@@RSDCOD+1    . RECOVER ABSADR OF SOURCE DIMS     @C@@[[        LXI,U  A2,JL
)@@G@@1           . SET INCREMENT   @G@@[[RS0240  JNGD   R1,RS0300      . WHENJM
)@@G@@ ALL DIMS COPIED, GO EXAMINE DESCR  @D@@[[        LX     X11,0,*A2      JN
)@@G@@. GET NEXT SOURCE WORD  @D@@[[        SX     X11,0,*A1      . JAM INTO WJO
)@@G@@ORKSPACE    @D@@[[        J      RS0240         . CONTINUE THE MARCH    JP
)@@G@@@[@@[[.     @D@@[[. NOW INITIALIZE PRIMARY DESCR AND (POSSIBLY) VALUES  JQ
)@@G@@@[@@[[.     @E@@[[RS0300  ANU,U  A0,0,WSTAG     . PUT RELAD OF DESCR INTJR
)@@G@@O A1  @F@@[[        LMA    A2,RSNAMT      . GET NAMEBLOK TYPE (NAMED, TEJS
)@@G@@MP)   @B3@@@       SA,S1 A2,0,A0     . PLUG IN TYPE   @C@@[[        LA  JT
)@@G@@   A3,RSDCOD+3    . RECOVER MODE    @A@@@@       SA,S2 A3,0,A0     . MODJU
)@@G@@E     @A@@@@       SA,S3 A4,0,A0     . RANK     @B@@@@       SA,H2 A5,0,JV
)@@G@@A0     . AND LENGTH     @B@@@@. POST DATA ADDR IN DESCR IF NECESSARY    JW
)@@G@@@E@@@@RS0310 SA    A1,A2       . SET UP REL DESCR ADDR FOR EXIT   @F@[@@JX
)@@G@@       TNZ   RSDTAS      . WAS ANY DATA SPACE ACTUALLY RESERVED?  @F@@][JY
)@@G@@       TNZ   RSVALL      . WAS ANY DATA SPACE ACTUALLY RESERVED?  @C[@@@JZ
)@@G@@       J     RS0400      . NO, CHECK DIMVECT    @E@[@@       LA    A1,RSKA
)@@G@@DTAD   . YES, PICK UP REL ADDR OF DATA    @E@@][       LA    A1,RSVALA  KB
)@@G@@ . YES, PICK UP REL ADDR OF DATA    @E[@@@       LA,U  A3,0,A0     . SETKC
)@@G@@ UP TO STORE IT INTO DESCR    @C@@@@       TZ,S3 0,A0        . IS THIS AKD
)@@G@@ SCALAR?    @E@@@@       LA,U  A3,1,A0     . NO , USE DESCR+1 INSTEAD OFKE
)@@G@@ DESCR@F@@@@       SA,H2 A1,0,A3     . PUT DATA ADDR INTO DESCR OR DESCRKF
)@@G@@+1    @[@@@@.     @G@[@@. AT THIS POINT, A0-A2 CONTAIN THEIR EXIT VALUESKG
)@@G@@.  TO MINIMIZE SAVING   @F@[@@. IF WE RECURSE, COPY THE DATA VALS BEFOREKH
)@@G@@ COPYING THE DIMVECT    @D@@[[. NOTE: AT THIS POINT, A0-A2 CONTAIN THEIRKI
)@@G@@ EXIT VALUES@[]@@@.     @G@@@@RS0400 ABSADR A1         . BE SURE DATA (DKJ
)@@G@@ESCR, IF SCALAR) ADDR IS ABS  @C@[@@       TZ    RSNCPY      . IS NO-COPKK
)@@G@@Y FLAG ON?  @G@@[[        TN     RSNAMT         . WAS ORIGINAL ENTRY ONLKL
)@@G@@Y TO RESERVE SPACE@F[@@@       J     RS0420      . YES, SKIP DATACOPY ANKM
)@@G@@D GO CHECK DIMVECT@E@@@@       LA    A3,RSDCOD   . GET ORIGINAL DECODED KN
)@@G@@DATA ADDR   @B@@@@       LA    A5,RSDCOD+3 . AND ALSO MODE  @C@@@@      KO
)@@G@@ TNE,U A4,ZRANKS   . WAS IT A SCALAR?     @C@@@@       TE,U  A5,ZMOHFI  KP
)@@G@@ . YES, AND HALFINT?    @E@@@@       J     RS0410      . IF NOT, GO MOVEKQ
)@@G@@ TO SEPERATE AREA @D@@@@       LA,H2 A3,0,A3     . YES, HALFINT SCALAR GKR
)@@G@@ET VAL@C@@@@       SA,H2 A3,0,A1     . PUT INTO THE DESCR   @G@@@@      KS
)@@G@@ J     RS0530      . SINCE NO DIM AND NOT POINTER, GET RIGHT OUT  @D@@@@KT
)@@G@@. DATA NOT IN DESCR SO MOVE TO SEPARATE DATA AREA     @B@[@@RS0410 LR   KU
)@@G@@ R1,RSDTAS   . NO WDS OF DATA @B@@][RS0410 LR    R1,RSVALL   . NO WDS OFKV
)@@G@@ DATA @C[@@@       LXI,U A1,1        . INCREMENT FOR 'TO'   @B@@@@      KW
)@@G@@ LXI,U A3,1        . AND 'FROM'     @A@@@@       BT    A1,0,*A3    . MOVKX
)@@G@@E IT  @F@[@@       LA    A1,RSDTAD   . RECOVER RELADR OF DATA WE JUST MOKY
)@@G@@VED TO@F@@][       LA    A1,RSVALA   . RECOVER RELADR OF DATA WE JUST MOKZ
)@@G@@VED TO@D[@@@       ABSADR A1         . AND FORCE BACK TO ABSOLUTE @[@[@@LA
)@@G@@.     @E@[@@. NOW CHECK FOR DIMVECT, AND IF NECESSARY RECURSE TO COPY ITLB
)@@G@@@[@[@@.     @D@[@@RS0420 TLE,U A4,ZRANKV+1 . IS RANK GTR THAN VECTOR?   LC
)@@G@@@B@[@@       J     RS0500      . NO, WE'RE DONE @F@[@@       SAVER A0,RCLD
)@@G@@REGP,3 . SAVE EXIT REGS IN REG PUSHDOWN AREA    @B@[@@       DL    A0,RCLE
)@@G@@POPD   . OLD SAVESTUFF  @C@[@@       DS    A0,RCPUSH   . TO PUSHDOWN ARELF
)@@G@@A     @D@[@@       LA    A6,A7       . SET UP RELADR OF DESCR     @D@[@@LG
)@@G@@       LMJ   X11,DUPE    . RECURSIVELY CALL OURSELVES @B@[@@       J    LH
)@@G@@ RS0430      . OOPS, WSFULL   @D@[@@       SA    A2,A7       . TEMP SAVELI
)@@G@@ DIM DESCR RELADR @ @[@@       ABSADR A2         .    @A@[@@       LA,U LJ
)@@G@@ A3,ZTPDIM   . GET TYPE @D@[@@       SA,S1 A3,0,A2     . PUT INTO DESCR LK
)@@G@@OF DIMVECT  @D@[@@       DL    A0,RCPUSH   . RECOVER PUSHED DOWN STUFF  LL
)@@G@@@A@[@@       DS    A0,RCPOPD   . POP IT   @D@[@@       LOADR A0,RCREGP,3LM
)@@G@@ . RESTORE RESULT REGISTERS   @F@[@@       SA,H1 A7,1,A0     . DESCR ADDLN
)@@G@@R OF DIMVECT TO RESULT DESCR  @D@[@@       J     RS0500      . GO CHECK LO
)@@G@@FOR REFCT UPDATING@D@[@@. NO ROOM FOR DIMVECT (NOTE: WSFULL ALREADY SIGNLP
)@@G@@ALLED)@B@[@@RS0430 DL    A0,RCPUSH   . OLD PUSHDOWN   @B@[@@       DS   LQ
)@@G@@ A0,RCPOPD   . MAKE IT POP UP @F@[@@       LA    A1,RCREGP   . DESCR ADDLR
)@@G@@R WAS IN A0 BEFORE RECURSION  @G@[@@       J     RS0620      . GO FREE DLS
)@@G@@ESCR, THEN DATA (WITHOUT SIGNAL)    @[@[@@.     @C@[@@. EXIT HERE AFTER LT
)@@G@@ALL COPYING HAS BEEN DONE     @[@[@@.     @D@[@@RS0500 TZ    RSNCPY     LU
)@@G@@ . WAS COPYING INHIBITED?     @E@[@@       J     RS0530      . YES, GET LV
)@@G@@OUT WITHOUT FURTHER ADO @F@[@@       LA,S2 A3,0,A0     . NO, WE COPIED, LW
)@@G@@GET MODE FROM DESCR     @E@[@@       JNE,U A3,ZMOPTR RS0530 . IF NOT POILX
)@@G@@NTER, WERE DONE   @F@[@@. A POINTER WAS COPIED.. BUMP REFCNT OF ALL OBJELY
)@@G@@CTS IT POINTS TO  @E@[@@RS0505 SAVER  X4,RSDCOD,2 A0,RSDCOD+2,3 . SAVE VLZ
)@@G@@OLATILE REGS@C@[@@       LR,H2 R1,0,A0     . GET LENGTH FROM DESCR@A@[@@MA
)@@G@@       TNZ,S3 0,A0       . SCALAR?  @D@[@@       LR,U  R1,1        . YESMB
)@@G@@, FORCE LENGTH UNITY    @F@[@@       LX    X5,A1       . SET UP DATA ADDMC
)@@G@@R FOR FETCH ROUTINE     @B@[@@       LXI,U X5,1        . AND INCREMENT  MD
)@@G@@@G@[@@       LX    X4,GLFTBL+ZMOHFI . USE HALFWORD FETCH RTNE IN ELEMNT ME
)@@G@@LINEAR@C@[@@RS0510 JNGD  R1,RS0520   . OUT WHEN ALL SCANNED @D@[@@      MF
)@@G@@ LMJ   X4,0,X4     . NEXT DESCR POINTER TO A1,A2@ @[@@       ABSADR A2  MG
)@@G@@       .    @D@[@@       LA,H1 A3,1,A2     . GET CURRENT REFERENCE COUNTMH
)@@G@@@A@[@@       AA,U  A3,1        . BUMP IT .@C@[@@       SA,H1 A3,1,A2    MI
)@@G@@ . REPLACE IN NAMEBLOK  @B@[@@       J     RS0510      . AND CONTINUE   MJ
)@@G@@@F@[@@RS0520 LOADR X4,RSDCOD,2 A0,RSDCOD+2,3  . RESTORE THE REGS WE USEDMK
)@@G@@@#@[@@. NORMAL EXIT     @ @[@@RS0530 LX    X11,RSLINK  .    @ @[@@      ML
)@@G@@ J     1,X11       .    @[@[@@.     @#@[@@. WSFULL EXITS--  @[@[@@.     MM
)@@G@@@E@[@@RS0600 ERROR YWSFUL,RS0630    . SIGNAL AND GO FREE DATA AREA@D@[@@MN
)@@G@@RS0610 ERROR YWSFUL,RS0640    . SIGNAL AND GET OUT    @#@[@@. FREE DESCRMO
)@@G@@ SPACE@F@[@@RS0620 LA    A0,RSDSCS   . GET DESCR SIZE (ADDR ALREADY IN AMP
)@@G@@1)    @#@[@@       FREE  .    @B@[@@. RELEASE DATA (NO DESCR SPACE AVAILMQ
)@@G@@ABLE) @C@[@@RS0630 LA    A0,RSDTAS   . GET DATA AREA SIZE   @C@[@@      MR
)@@G@@ JZ    A0,RS0640   . IF NONE, GET OUT     @C@[@@       LA    A1,RSDTAD  MS
)@@G@@ . ELSE GET DATA ADDR   @#@[@@       FREE  .    @ @[@@. EVERYTHING DONE-MT
)@@G@@- GET OUT   @ @[@@RS0640 LX    X11,RSLINK  .    @ @[@@       J     0,X11MU
)@@G@@       .    @ @[@@       VARBLS            .    @D@[@@. LOCNS WHICH ARE MV
)@@G@@PRESERVED OVER A RECURSIVE CALL     @C@[@@RCPOPD .   LABEL TO DEFINE POPMW
)@@G@@PED UP DATA AREA  @B@[@@RSLINK EQUF  $,,H1       . ENTRY POINTER  @E@[@@MX
)@@G@@RSNCPY EQUF  $,,S4       . COPY INHIBIT FLAG (ALSO=NEW MODE)@E@[@@RSDSCSMY
)@@G@@ EQUF  $,,S5       . DESCRIPTOR SIZE (1 OR 2 WORDS)   @ @[@@       RES  MZ
)@@G@@ 1           .    @D@[@@RSDTAS EQUF  $,,H1       . DATA AREA SIZE (WORDSNA
)@@G@@)     @C@[@@RSDTAD EQUF  $,,H2       . DATA AREA RELADR     @ @[@@      NB
)@@G@@ RES   1           .    @B@[@@. ABOVE DATA IS PUSHED DOWN INTO HERE--   NC
)@@G@@@C@[@@RCPUSH RES   2           . FOR THE 2 WORDS ABOVE@D@[@@RCREGP RES  ND
)@@G@@ 3           . REGISTER PUSHDOWN AREA     @F@[@@. THE FOLLOWING NEED NOTNE
)@@G@@ BE PRESERVED ACROSS A RECURSIVE CALL     @A@@[[RS0420 . FOR HYSTERICAL NF
)@@G@@REASONS     @[@@[[.     @A@@[[RS0530  . FOR HYSTORICAL REASONS    @B@@[[NG
)@@G@@RS0500  LX     X11,RSLINK     . GET RETURN@C@@[[        J      1,X11    NH
)@@G@@      . NORMAL EXIT     @[@@[[.     @B@@[[. WSFULL IS THE ONLY ERROR WE NI
)@@G@@CAN HAVE    @[@@[[.     @A@@[[RS0610  ERROR  YWSFUL         .     @A@@[[NJ
)@@G@@        LX     X11,RSLINK     .     @A@@[[        J      0,X11          NK
)@@G@@.     @#@@[[        VARBLS .  @A@@[[RSIZES  RES    2              .     NL
)@@G@@@E@@[[RSDSCL  EQUF   RSIZES,,H1     . DESCRIPTOR LENGTH (WORDS)   @G@@[[NM
)@@G@@RSVALL  EQUF   RSIZES,,H2     . VALUE LENGTH (NO WDS NEEDE FOR VALUE)   NN
)@@G@@@C@@[[RSDIDL  EQUF   RSIZES+1,,H1   . DIM DESCR LENGTH@E@@[[RSDIVL  EQUFNO
)@@G@@   RSIZES+1,,H2   . DIM DESCR VALUE AREA LENGTH @[@@[[.     @G@@[[RSDMSKNP
)@@G@@  CBLOCK ZTPDIM,ZMOHFI,ZRANKV,0 0 . SKELETON DESCR FOR DIMVECT    @F@@[[NQ
)@@G@@RSDIVA  EQUF   RSDMSK+1,,H2   . DATA ADDR FOR DIMVECT (IN WS)     @D@@[[NR
)@@G@@RSDIDA  EQUF   $,,H1          . DIM DESCR ADDR (IN WS)@C@@[[RSVALA  EQUFNS
)@@G@@   $,,H2          . DATA VALUE ADDR @A@@[[        RES    1              NT
)@@G@@.     @A@@[[RSLINK  EQUF   $,,H1          .     @A@@[[        RES    1  NU
)@@G@@            .     @F@@[[RSETYP  RES    1              . ENTRY TYPE, FLAGNV
)@@G@@S SET AT ENTRY    @F@@[[RSLOCL  EQUF   RSETYP,,H1     . LOCAL STORAGE ALNW
)@@G@@LOCATION TYPE FLAG@G@@[[RSNAMT  EQUF   RSETYP,,XH2    . NAME TYPE (NVAR,NX
)@@G@@TEMP); SIGN=COPY/NOCOPY @F_@@@RSDUMY EQU   $           . DUMMY DESCR KEPNY
)@@G@@T HERE BEFORE VERIFY    @F@@@@RSDCOD RES   6           . DECODED OPERANDNZ
)@@G@@ PARAMS (PER VERIFY)    @G@@[[/. COMPUTE SPACE NEEDED TO HOLD A GIVEN VAOA
)@@G@@RIABLE.  THIS RTNE ASSUMES    @G@@[[. A3,A5 CONTAIN MODE,RANK,LENGTH, ANOB
)@@G@@D RETURNS A0=NO WDS FOR DATA AREA,  @F@@[[. A1=NO OF WDS FOR DIMVECT , BOC
)@@G@@OTH EXCLUSIVE OF DIMVECTOR SPACE    @C@@[[. ALL REGS EXCEPT RESULG REGS OD
)@@G@@ARE PRESERVED     @#@@[[        INSTRS .  @D@@[[COMSPC* DSL    A0,72    OE
)@@G@@      . CLEAR BOTH TOTALS     @C@@[[        TNE,U  A3,ZMOHFI      . HALFOF
)@@G@@ INTEGER?   @F@@[[        JZ     A4,0,X11       . YES, IF SCALAR TOO, WEOG
)@@G@@'RE DONE    @D@@[[        TLE,U  A4,2           . MATRIX OR HIGHER RANK?OH
)@@G@@@D@@[[        J      CS0010         . NO, GO GET DATA SIZE  @C@@[[      OI
)@@G@@  LA     A1,A4          . YES, GET RANK   @D@@[[        AA,U   A1,1     OJ
)@@G@@      . BUMP IT FOR ROUNDING  @D@@[[        SSL    A1,1           . DIV OK
)@@G@@BY 2 GIVING WORDS @D@@[[CS0010  LA     A0,A5          . GET NO OF ELEMENOL
)@@G@@TS    @B@@[[        TE,U   A3,ZMOCHR      . CHARACTER?@F@@[[        LSSLOM
)@@G@@   A0,1           . NO, ALIGN FOR DFL, HFI ROUNDING   @B@@[[        TNE,ON
)@@G@@U  A3,ZMODFL      . DFLOAT?   @G@@[[        LSSL   A0,2           . YES,OO
)@@G@@ MORE ALIGNMENT SO ROUND IS VACUOUS @D@@[[        AA,U   A0,3           OP
)@@G@@. ROUND AS IF CHARACTER @E@@[[        SSL    A0,2           . GET TRUE NOQ
)@@G@@O OF WDS IN A0    @A@@[[        J      0,X11          .     @]@@@@      OR
)@@G@@ END .___ASONS    @B@@[[RS0500  LX     X11,RSLINK     . GET RETURN@C@@[[OS
)@@G@@        J      1,X11          . NORMAL EXIT     @[@@[[.     @B@@[[. WSFUOT
)@@G@@LL IS THE ONLY ERROR WE *[S@@@*SDFF*@G@@@@.  INITIALIZATION ELEMENT-- THOU
)@@G@@IS EL IS USED ONLY ONCE, AND THEN CONTROL @G@@@@. GOES TO XQTSUP.  THIS OV
)@@G@@EL IS THEN OVERLAID BY THE ACTIVE WORKSPACE     @[@@@@.     @G@@@@UNLI$TOW
)@@G@@ EQU   RES    . BECAUSE WE NEED LOCN CTR 20, THESE PROCS CANNOT   @C@@@@OX
)@@G@@LI$T   EQU   RES    . EFFECTIVE IN THIS ELEMENT @[@@@@.     @G@@@@. ****OY
)@@G@@***************************************************************** @G@@@@OZ
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * PA
)@@G@@@G@@@@.                                                                 PB
)@@G@@    * @G@@@@       AXR$         .                                       PC
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        PD
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        PE
)@@G@@                      * @G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLSPF
)@@G@@                            * @G@@@@       WSDEF.      DEFINE WORKSPACE PG
)@@G@@                                  * @G@@@@WORKSP INFO  2 20.      SET ASPH
)@@G@@IDE THE SPACE                           * @G@@@@       RUNCTL.     DEFINPI
)@@G@@E RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.PJ
)@@G@@      AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCPK
)@@G@@K            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.     PL
)@@G@@                                                                * @G@@@@PM
)@@G@@. END OF STANDARD PROC BLOCK                                          * PN
)@@G@@@G@@@@. ****************************************************************PO
)@@G@@***** @[@@@@.     @[@@@@.     @ @@@@       IODEF             .    @E@@[[PP
)@@G@@        BRIEF  . UOM ASSEMBLER ONLY, REMOVE AT OTHER SITES  @G@@@@/. BOOPQ
)@@G@@TSTRAP ROUTINE.  THIS ROUTINE RESIDES IN THE D-BANK, AND DOES ALL @G@@@@PR
)@@G@@. NECESSARY INITIALIZATION.  THE FIRST PORTION ESTABLISHES THE PROG     PS
)@@G@@@F@@@@. AS A REP, FORCING LOADING OF THE I-BANK.  THE SECOND PART THEN  PT
)@@G@@@#@@@@. FINISHES UP     @[@@@@.     @A@[@@PGVERS* EQU  5 . PROGRAM VERSIPU
)@@G@@ON    @A@@][PGVERS* EQU  6 . PROGRAM VERSION    @ [@@@PGLEVL* EQU  0 . APV
)@@G@@ND LEVEL    @[@@@@.     @[@@@@.     @E@@@@. LOCAL IC PROX TO FORCE ALL OPW
)@@G@@F THIS CODE INTO THE D-BANK   @[@@@@.     @#@@@@INSTRS EQU   RES .@#@@@@PX
)@@G@@CONSTS EQU   RES .@#@@@@VARBLS EQU   RES .@#@@@@VARCON EQU   RES .@]@@@@PY
)@@G@@$(20) LIT . @G@@@@$(20)  . ASSEMBLE EVERYTHING IN THE SAME COMMON BLOCK PZ
)@@G@@AS THE WORKSPACE  @C@@@@       RES   0-$         . INITIALIZE INST CTR  QA
)@@G@@@[@@@@.     @[@@@@.     @^@@@@/. PRIMARY ENTRY POINT  @#@@@@       INSTRQB
)@@G@@S .   @[@@@@APL* .@[@@@@.     @D@@@@. BOOTSTRAP.. SAVE SIGNON PARAMS, SEQC
)@@G@@T UP AS A REP     @[@@@@.     @G@[@@. NOTE--     WE SAVE THE DATE HERE BQD
)@@G@@ECAUSE THE EXEC HAS KINDLY LEFT IT  @G@[@@.      IN A REGISTER FOR US.  QE
)@@G@@SINCE OTHER INITIALIZATION MIGHT (AT SOME @G@[@@.      FUTURE TIME) NEEDQF
)@@G@@ I-BANK SUBROUTINES, NOTHING ELSE SHOULD EVER BE@G@[@@.      DONE AT THIQG
)@@G@@S POINT.  PLACE NEW CODE AFTER THE LABEL 'APINIT'.    @[@[@@.     @C@[@@QH
)@@G@@BS0010 LA    A2,R1       . GET DATA (FIELDATA)  @[@@[[.     @ @@[[. INITQI
)@@G@@IALIZE RUN CONTROL BLOCK@[@@[[.     @G@@[[BS0010  ER     TIME$          QJ
)@@G@@. FOR CPU/MEM TIME UPDATE, GET TIME NOW   @B@@[[        SA     A0,RCPUONQK
)@@G@@      . STASH IT  @D@@[[        SR     R2,TDATON      . SAVE TDATE$ AT SQL
)@@G@@IGNON @E@@[[        LA     A0,(+PCTRES,RCPCT)  . ACCESS WORD FOR PCT    QM
)@@G@@@F@@[[        ER     PCT$           . READ IT INTO RUN CONTROL BLOCK    QN
)@@G@@@G@@[[        SA     A4,RCDMND      . SAVE PROGRAM TYPE (4=DMND, 5,6=BATQO
)@@G@@CH)   @E@@[[        AND,XU A5,0-1*/('Z'-'S')   . TURN OFF TTY38 BIT     QP
)@@G@@@D@@[[        SA     A6,RCOPTW      . AND STASH OPTIONS WORD@F@@[[      QQ
)@@G@@  QWDON                 . BE SURE WE'RE IN QUARTERWORD MODE @B@@[[. CONVQR
)@@G@@ERT FIELDATA DATE TO DECIMAL YYMMDD @G@@[[        LA     A2,R1          QS
)@@G@@. GET DATE$ WHENCE EXEC LEFT IT AT ENTRY  @DA@@@       LR,U  R1,5       QT
)@@G@@ . PREPARE TO CONVERT 6 CHARS @ @@@@       SZ    A3          .    @ @@@@QU
)@@G@@BS0020 SZ    A1          .    @D@@@@       LDSL  A1,6        . SHIFT NEXQV
)@@G@@T CHAR FROM A2    @B@@@@       TNE,U A1,' '      . IS IT A BLANK? @E@@@@QW
)@@G@@       LA,U  A1,'0'      . YES, CHANGE IT TO FIELDATA ZERO  @D@@@@      QX
)@@G@@ ANA,U A1,'0'      . EDIT FIELDATA TO BINARY    @F@@@@       MSI,U A3,10QY
)@@G@@       . MAKE ROOM IN RUNNING SUM FOR THIS DIGIT@B@@@@       AA    A3,A1QZ
)@@G@@       . PLUG VALUE IN  @D@@@@       JGD   R1,BS0020   . GO BACK FOR NEXRA
)@@G@@T DIGIT     @G@@@@BS0030 SA    A3,RCDATE   . SAVE TODAY'S DATE (BINARY) RB
)@@G@@IN RUN CONTROL BLK@B@[@@       LNA,U A0,1        . GET FLAG VALUE @G@[@@RC
)@@G@@       SA    A0,DINDEX   . POST THAT FILE HAS NOT YET BEEN ASSIGNED     RD
)@@G@@@[@[@@.     @^@[@@. SET UP REP LINKAGE    @[@[@@.     @[@[@@.     @B@[@@RE
)@@G@@. GET PCT, DETERMINE AUTHORIZATION, ETC.  @[@[@@.     @F@[@@BS0200 J    RF
)@@G@@ BS0210      . SKIP OVER THE INPUT AREA FOR THE PCT   @G@[@@FILNAM EQU  RG
)@@G@@ 0110        . LOC IN PCT OF NAME OF PF WE'RE EXECUTING FROM@E@[@@ACTNUMRH
)@@G@@ EQU   023         . LOCN OF USER'S ACCT NO IN PCT    @^@[@@BSSIZE EQU  RI
)@@G@@ FILNAM+3   @E@[@@BSPCTB RES   BSSIZE      . SPACE INTO WHICH PCT IS REARJ
)@@G@@D     @[@[@@.     @C@[@@BS0210 LA    A0,(+BSSIZE,BSPCTB)   . BUFFER SIZERK
)@@G@@@A@[@@       ER    PCT$        . GET PCT  @G@[@@       DL    A0,BSPCTB+FRL
)@@G@@ILNAM . PICK UP NAME OF FILE WE'RE RUNNING FROM @E@@[[        SZ     RCPRM
)@@G@@TIF         . CLEAR PAPER TAPE INPUT FLAG @E@@[[        SZ     RCOUTI   RN
)@@G@@      . LOWER OUTPUT INHIBIT FLAG   @F@@[[        SZ     RCALTF         RO
)@@G@@. CLEAR ALT PRINT FILE IN USE FLAG  @D@@[[        LA,U   A0,LASTD$      RP
)@@G@@. GET LAST D-BANK ADDR  @G@@[[        SA     A0,RCLASD      . SET HERE IRQ
)@@G@@N CASE OF SYSERR BEFORE CORGET@[@@[[.     @G@@[[. TO PREVENT FALSE ALARMRR
)@@G@@S ON NUMBER IN USE (FOR SIGNON, )PORTS, ETC.)   @B@@[[. FIND OUT WHEN THRS
)@@G@@E LAST REBOOT WAS...    @[@@[[.     @E@@[[BS0100  LA     A0,(+1,1,0,0,0,RT
)@@G@@0)   . TDATE$ FOR 1 JAN 64    @G@@[[        TP,XU  EXEC8-26       . IS TRU
)@@G@@HIS A LEVEL 26 OR BETTER SYSTEM?    @D@@[[        J      BS0120         RV
)@@G@@. NO, CAN'T DO AN MCT?  @C@@[[        LA,U   A0,(+0,BUFF)   . SET UP PACRW
)@@G@@KET   @D@@[[        ER     MCT$           . AND READ MCT INTO BUFF@G@@[[RX
)@@G@@        LX     A3,(+1,BUFF+1) . SET POINTER TO WHERE WE PUT DATE/TINE   RY
)@@G@@@F@@[[        LA     A0,(+001700170017)  . GET MASK FOR DIGITS BITS     RZ
)@@G@@@D@@[[        LR,U   R1,1           . DO TWO WORDS WORTH    @E@@[[BS0110SA
)@@G@@  LA     A1,0,A3        . GET WORD TO BE CONVERTED    @D@@[[        AND SB
)@@G@@   A1,A0          . UNITS DIGITS TO A2    @E@@[[        SSL    A1,6     SC
)@@G@@      . ALIGN TENS DIGITS WITH MASK @D@@[[        AND    A0,A1          SD
)@@G@@. TENS DIGITS TO A1     @D@@[[        MSI,U  A1,10          . TENS DIGITSE
)@@G@@S TIMES TEN @G@@[[        AA     A1,A2          . PLUS UNITS DIGITS GIVESF
)@@G@@S BINARY VALUES   @G@@[[        SA     A1,0,*A3       . STASH BINARY VALSG
)@@G@@ BACK IN ORIGINAL LOCN  @C@@[[        JGD    R1,BS0110      . AND DO NEXSH
)@@G@@T WORD@B@@[[        LA,S2  A0,BUFF+2      . GET HOURS @F@@[[        MSI,SI
)@@G@@U  A0,60          . TIMES 60 MINS PER HR GIVES MINS   @C@@[[        AA,SSJ
)@@G@@4  A0,BUFF+2      . PLUS MINUTES    @F@@[[        MSI,U  A0,60          SK
)@@G@@. WHOLE MESS TIMES 60 GIVES SECONDS @E@@[[        AA,S6  A0,BUFF+2      SL
)@@G@@. PLUS SECONDS GIVES TIME PART@E@@[[        DSL    A0,18          . MOVESM
)@@G@@ TIME TO A1 HI-ORDER    @B@@[[        LA,Q4  A0,BUFF+1      . GET YEAR  SN
)@@G@@@E@@[[        ANA,U  A0,64          . LESS 1964 WHICH IS YEAR ZERO@B@@[[SO
)@@G@@        DSL    A0,6           . PACK IT IN@B@@[[        LA,S4  A0,BUFF+1SP
)@@G@@      . GET DAY   @D@@[[        DSL    A0,6           . PACK THAT IN, TOSQ
)@@G@@O     @D@@[[        LA,S2  A0,BUFF+1      . AND FINALLY MONTH     @D@@[[SR
)@@G@@        LDSL   A0,36-6        . ALIGN THE WHOLE RESULT@E@@[[BS0120  SA  SS
)@@G@@   A0,RCTBOO      . SAVE REBOOT IN TDATE$ FORMAT@[@@[[.     @E@@[[. FINDST
)@@G@@ OUT WHAT FILE WE'RE EXECUTING FROM (FO R RLIST$)     @D@@[[FILNAM  EQU SU
)@@G@@   0110           . LOC IN PCT OF FILENAME@D@@[[BS0200  DL     A0,RCPCT+SV
)@@G@@FILNAM     . GET NAME FROM PCT@EL@@@       DTE   A0,FACPKT   . IS THE FISW
)@@G@@LE NAME (INTERNAL) LIB$?@E@@@@       J     BS0220      . NO, GO CHECK FOSX
)@@G@@R AUTHORIZATION   @E@@@@       LA,U  A0,FACPKT   . YES, GO GET ADDR OF FSY
)@@G@@ACIL$ PACKET@E@@@@       ER    FACIL$      . AND FIND OUT MORE ABOUT THISZ
)@@G@@S FILE@E@@@@       DL    A0,FACPKT   . RECOVER INTERNAL NAME (I.E. LIB$)TA
)@@G@@@D@@@@       DTE   A0,FACPKT+2 . IS EXTERNAL NAME ALSO LIB$?@F@@@@      TB
)@@G@@ J     BS0250      . NO, HE HAS DONE A @USE WHICH IS ILLEGAL@B@@@@      TC
)@@G@@ DL    A2,FACPKT+4 . GET QUALIFIER  @C@@@@       DTE   A2,(+'SYS$       TD
)@@G@@ ')  . IS IT SYS$?@E@@@@       J     BS0250      . NO, BOY, IS THIS GUY TE
)@@G@@SNEAKY!!!   @G@@@@. FILE NAME IS SYS$*LIB$ - MAKE SURE HE'S NOT CHEATINGTF
)@@G@@ WITH A TEMP FILE @E@@@@       LA    A2,FACPKT+7 . GET ASG OPTIONS FOR TTG
)@@G@@HIS FILE    @D@@@@       AND   A2,(1*/('Z'-'A')) . IS FILE CATALOGGED?  TH
)@@G@@@E@@@@       JNZ   A3,BS0310   . IF CATALOGGED,OK.  GO GET I-BANK @G@@@@TI
)@@G@@       J     BS0250      . OTHERWISE, VERY SKEAKY...KILL..KILL..KILL    TJ
)@@G@@@D@@@@FACPKT 'LIB$        '    . PACKET FOR FACIL$ REQUEST  @ @@@@      TK
)@@G@@ RES   7           .    @[@@@@.     @E@@@@. NOT RUNNING FROM LIB$-- ONLYTL
)@@G@@ SPECIAL ACCOUNT CAN DO THIS--@[@@@@.     @#@@@@INSACT +INSTAL .  @#@@@@TM
)@@G@@       +INSTAM .  @D@@@@BS0220 DL    A2,INSACT    . GET ACCT NO IN CONFITN
)@@G@@G     @E@@@@       DTE   A2,(+'INSTALLATION')  . HAVE THEY CHANGED IT?  TO
)@@G@@@D@[@@       J     BS0240      . YES, GO LOOK AT THE PCT    @D@@][      TP
)@@G@@ J     BS0300      . YES, GO LOOK AT THE PCT    @[[@@@.     @G@@@@. CONFTQ
)@@G@@IG HAS NOT BEEN CHANGED FOR THIS INSTALLATION-- TELL THEM AND QUIT@[@@@@TR
)@@G@@.     @D@@@@BS0230 LA    A0,BCOCTL   . CONTROL WORD FOR MESSAGE   @A@@@@TS
)@@G@@       ER    PRINT$      . SEND IT  @D@[@@       J     BS0270      . GO TT
)@@G@@INHIBIT THEIR DUMPS     @B@@[[        ER     EXIT$          . GO AWAY   TU
)@@G@@@D[@@@PCTL   FORM  6,6,6,18    . PRINT CONTROL WORD FORMAT  @E@[@@BCONFMTV
)@@G@@ 'INSTALLATION ACCT NO NOT SET,  SEE SITECON/APL'     @E@@][BCONFM 'INSTTW
)@@G@@ALLATION ACCT NO NOT SET,  SEE SITEPAR/APL'     @A[@@@BCOCTL PCTL  0,1,$TX
)@@G@@-BCONFM,BCONFM   .@[@[@@.     @G@[@@. INSTALLATION HAS BEEN SET UP-- SEETY
)@@G@@ THAT THIS IS THE AUTHORIZED USER   @[@[@@.     @F@[@@BS0240 DTE   A2,BSTZ
)@@G@@PCTB+ACTNUM . DOES USER ACCT NO MATCH CONFIG?   @C@[@@       J     BS030UA
)@@G@@0      . NO, GO DESTROY HIM   @E@[@@       J     BS0300      . YES, LET UB
)@@G@@HIM DO SOME DEBUGGING   @[@[@@.     @D@[@@. SOMEBODY IS PLAYING GAMES-- UC
)@@G@@LET'S TEACH HIM A LESSON@[@[@@.     @]@[@@BS0250 .    @D@[@@       DTE  UD
)@@G@@ A0,(+'TPF$        ') . RUNNING FROM TPF$?@F@[@@       J     BS0260     UE
)@@G@@ . NO, GO DESTROY WHATEVER FILE IT IS--   @C@[@@       J     BS0270     UF
)@@G@@ . YES, GO GET RID OF IT@[@[@@.     @B@[@@. DESTROY THE FILE BEING EXECUUG
)@@G@@TED FROM--  @[@[@@.     @ @[@@BSFHIX '@FREE,D     '    .    @#@[@@BSFHISUH
)@@G@@ RES   2 .  @ @[@@       '  .   '          .    @ @[@@BSFHCW +$-BSFHIX,BUI
)@@G@@SFHIX  .    @ @[@@BS0260 DS    A0,BSFHIS   .    @ @[@@       LA    A0,BSUJ
)@@G@@FHCW   .    @ @[@@       ER    CSF$        .    @[@[@@.     @C@[@@. NOW UK
)@@G@@DESTROY HIS TEMPORARY PROGRAM FILE, TOO   @[@[@@.     @ @[@@BS0270 LA   UL
)@@G@@ A0,BSFTPF   .    @ @[@@       ER    CSF$        .    @[@[@@.     @C@[@@UM
)@@G@@. AND FINALLY DON'T LET HIM DUMP US, EITHER     @[@[@@.     @ @[@@BS0280UN
)@@G@@ LA    A0,BSCSFF   .    @ @[@@       ER    CSF$        .    @C@[@@      UO
)@@G@@ LA    A0,BSABOR   . GET AN ABORT INSTR   @F@[@@       SA    A0,FRSTD$  UP
)@@G@@ . DON'T LET HIM KNOW WHERE IT CAME FROM  @D@[@@       DSL   A0,72      UQ
)@@G@@ . CLEAR ANYTHING LEFT OVER   @C@[@@       DS    A0,X10      . AND ANY LUR
)@@G@@INKS, TOO   @D@[@@       J     FRSTD$      . AND DIE A HORRIBLE DEATH   US
)@@G@@@ @[@@BSABOR ER    ABORT$      .    @ @[@@BSFREE '@FREE,D  DIAG$   .   'UT
)@@G@@@C@[@@BSCSFF +$-BSFREE,BSFREE  . CONTROL WORD FOR CSF @ @[@@BSTFRE '@FREUU
)@@G@@E,D  TPF$  .  '   @C@[@@BSFTPF +$-BSTFRE,BSTFRE  . CONTROL WD FOR CSF   UV
)@@G@@@[:@@@.     @E@@@@. EXECUTING FROM OTHER THAN LIB$-- REGISTER I-BANK AS UW
)@@G@@A REP @[@@@@.     @]@@[[BS0250  .   @E@@@@BS0300 TNZ,U REPMAP      . WASUX
)@@G@@ THIS RE-ENTRANTLY MAPPED?    @E@@@@       J     BS0310      . NO, DON'TUY
)@@G@@ TRY TO REGISTER IT     @G@@@@       DS    A0,LJ$FIL   . FILENAME TO PACUZ
)@@G@@KET IN LIJ SIMULATION RTNE    @C@@@@       LA    A0,(+NIBANX,LJ$FIL)   .VA
)@@G@@ CTL WORD   @F@@[[        TZ      (+UOMED)      . HAS SITE IMPLEMENTED UVB
)@@G@@OM EDITOR?  @G@@[[       LXI,U A0,NIBANX+2 . YES, RESET NUMBER OF I-BANKVC
)@@G@@S TO BE REGISTERED@C@@@@       ER    RLIST$      . REGISTER THEM IBANKS VD
)@@G@@@ @@@@       SZ    LJ$FIL      .    @C@@@@       SZ    LJ$FIL+1    . CLEVE
)@@G@@AR PACKET AREA    @[@@@@.     @B@@@@. LINK TO THE I-BANK, WHEREVER IT ISVF
)@@G@@--    @[@@@@.     @G@@@@. BEFORE BECOMING A REP, START THE ACTIVITY WHICVG
)@@G@@H WILL DO THE COM$'S    @D@@@@BS0310 LA    A0,COFORK   . GET FORK$ CONTRVH
)@@G@@OL WORD     @C@@@@       LA    A2,A0       . DUPE FOR TESTING     @B@@@@VI
)@@G@@       ER    FORK$       . AND CRANK IT UP@D@@@@BS0315 TE    A2,COFORK  VJ
)@@G@@ . HAS HE NAMED HIMSELF YET?  @B@@@@       J     BS0317      . YES, CONTVK
)@@G@@INUE  @C@@@@       LA,U  A1,2        . NO, GET A LITTLE TIME@B@@@@      VL
)@@G@@ ER    TWAIT$      . WAIT FOR HIM   @C@@@@       J     BS0315      . ANDVM
)@@G@@ GO CHECK AGAIN   @E@[@@BS0317 TNZ,U REPMAP      . WERE WE RE-ENTRANTLY VN
)@@G@@MAPPED?     @D@[@@       J     APINIT      . NO, DON'T DO ANY LINK$ ' S VO
)@@G@@@F@[@@       CALREP,SYSREP X11,APINIT    . LOAD IBANK, KEEP INITIALIZINGVP
)@@G@@@[@[@@.     @C@[@@.     NOW FALL THRU TO NORMAL INITIALIZATION    @G@[@@VQ
)@@G@@/.     THE ENTRY POINT APL$ IS A DUMMY, WHICH RETURNS IMMEDIATELY HERE  VR
)@@G@@@G@[@@.      IF THIS IS NOT A REP ASSEMBLY, WE FALL THRU TO HERE DIRECTLVS
)@@G@@Y     @[@[@@.     @]@[@@APINIT .    @D@[@@       QWDON             . TURVT
)@@G@@N ON QUARTERWORD MODE   @E@[@@       TNZ,U PIPST       . IS INSTRUMENTATVU
)@@G@@ION TO BE USED?   @B@[@@       J     $+3         . NO, FORGET IT  @B@[@@VV
)@@G@@       LMJ   X11,PIPST   . YES, FIRE IT UP@G@[@@       +0               VW
)@@G@@ . DUMMY WALK-BACK, PIP IS FORTRAN CALLABLE     @E@[@@       LMJ   X11,CVX
)@@G@@OIALL  . REGISTER CONTINGENCY ROUTINE     @B@[@@       X$OFF            VY
)@@G@@ . TURN DUMPS OFF @[@[@@.     @D@[@@. PICK UP INITIAL TIMING PARAMETERS VZ
)@@G@@(AND READ PCT)    @[@[@@.     @G@[@@       LMJ   X11,CPUNOW  . GET CPU TWA
)@@G@@IME USED THUS FAR (AND READ PCT)    @E@[@@       DS    A1,RCPUON   . POSWB
)@@G@@T IT AS CPU TIME AT SIGNON    @C@[@@       LMJ   X11,TIMENW  . GET PRESEWC
)@@G@@NT REAL TIME@E@[@@       DS    A1,RCONTM   . AND MAKE IT THE PROG SIGN-OWD
)@@G@@N TIME@C@[@@       DSL   A1,72       . GENERATE DOUBLE ZERO @F@[@@      WE
)@@G@@ DS    A1,RCKEYT   . AND INITIALIZE ACCUMULATED KEYING TIME @A@@[[BS0317WF
)@@G@@ . FOR HISTORICAL REASONS     @[T@@@.     @E@@@@. NOW READ THE PROCESSORWG
)@@G@@ CALL CARD, AND GET LIBENO, IF ANY  @[@@@@.     @F@@@@AP0010 LA    A0,APWH
)@@G@@INFR   . GET CONTROL WORD TO READ INFOR TABLE   @^@@@@       ER    READ$WI
)@@G@@ .    @G@@@@       AND   A0,MASK30 . MASK ALL BUT INFOR CONTINUATION BITWJ
)@@G@@ (BIT 30)   @D@@@@       JNZ   A1,AP0020   . TOO MUCH TO CONTEND WITH   WK
)@@G@@@B@@@@       S     A0,APCNT    . SAVE WORD COUNT@E@[@@       J     AP010WL
)@@G@@0      . OTHERWISE, GO SET UP WSORG, ETC. @[@[@@.     @A@[@@. SET UP ORIWM
)@@G@@GIN OF WORKSPACE IN X1  @[@[@@.     @^@[@@AP0100 LXM,U X1,WSBASE  @[ @@@WN
)@@G@@.     @F@@@@. DETERMINE TYPE OF INPUT, SET FLAGS IN RUN CTL BLOK ACCORDIWO
)@@G@@NGLY. @[@@@@.     @D@@@@AP0200 LA    A0,APCALL   . GET 1ST WORD OF INFORWP
)@@G@@ TABLE@F@[@@       SA    A0,RCOPTW   . AND SAVE OPTION WORD IN RUN CTL BWQ
)@@G@@LOCK  @C@[@@       TOP   A0,(+1*/('Z'-'Q')) . Q- OPTION?    @ @[@@      WR
)@@G@@ J     AP0204      . NO @D@[@@       LA,U  A0,TREASC   . SPECIAL ASCII RWS
)@@G@@EAD ROUTINE @ @[@@       SA    A0,RCTREA   .    @D@[@@       LA,U  A0,WRWT
)@@G@@ITAS   . SPECIAL ASCII WRITE ROUTINE@ @[@@       SA    A0,RCWRIT   .    WU
)@@G@@@E@[@@       LA,U  A0,WRMKAS   . SPECIAL WRITE AND MARK ENTRY     @ @[@@WV
)@@G@@       SA    A0,RCWRMK   .    @ @[@@       J     AP0207      .    @D@[@@WW
)@@G@@AP0204 LA,U  A0,WRITFD   . FIELDATA WRITE ROUTINE     @C@[@@       SA   WX
)@@G@@ A0,RCWRIT. SAME FOR WRITE RTNE     @ @[@@       LA,U  A0,WRMKFD   .    WY
)@@G@@@D@[@@       SA    A0,RCWRMK   . SAME FOR WRITE AND MARK    @ @[@@      WZ
)@@G@@ LA,U  A0,TREAFD    .   @A@[@@       SA    A0,RCTREA        .     @B@[@@XA
)@@G@@AP0207 LA    A0,RCOPTW   . GET OPTION WORD@E@@[[        AND,XU A0,0-1*/(XB
)@@G@@'Z'-'S')   . PURGE TTY38 OPTION     @D@@[[        SA     A1,RCOPTW      XC
)@@G@@. SAVE OPTIONS WORD     @G@@[[        AND,U  A1,+1*/('Z'-'Q')+1*/('Z'-'RXD
)@@G@@') . ISOLATE ASCII OPTIONS    @G@@[[        JZ     A2,AP0202      . IF NXE
)@@G@@EITHER ON, GO INITIALIZE FIELDATA   @F@@[[        TZ,U   UOMASC         XF
)@@G@@. IS ASCII INSTALLED AT THIS SITE?  @F@@[[       J     AP0204      . YESXG
)@@G@@, GO SET UP ASCII I/O RTNE ADDR     @E@@[[. Q-OPTION REQUESTED, ASCII NOXH
)@@G@@T IMPLEMENTED IN THIS EXEC    @C@@[[       LA    A0,APNASC   . NO, GET AXI
)@@G@@CCESS WORD  @F@@[[       ER    PRINT$      . TELL THE USER WE'RE IGNORINXJ
)@@G@@G HIS OPTION@D@@[[       LA    A0,RCOPTW   . GET HIS REQUESTED OPTIONS  XK
)@@G@@@D@@[[       AND   A0,(+0777777776777)   . TURN OFF 'Q'     @D@@[[      XL
)@@G@@ SA    A1,RCOPTW   . SAVE MODIFIED OPTIONS WORD @A@@[[. INITIALIZE FIELDXM
)@@G@@ATA I/O RTNES     @A@@[[AP0202 LA,U  A0,WRITFD   . WRITE    @E@@[[      XN
)@@G@@ LA,U  A1,WRMKFD   . WRITE AND MARK ERROR POSITION    @A@@[[       LA,U XO
)@@G@@ A2,TREAFD   . TREAD$   @D@@[[       J     AP0206      . GO SAVE POINTERXP
)@@G@@S TO I/O    @A@@[[. INITIALIZE ASCII I/O ROUTINES     @E@@[[AP0204 LMJ  XQ
)@@G@@ X11,CHRDEF  . GET REQUESTED TRANSLATION TABLE  @B@@[[       ER    ERR$ XR
)@@G@@       . ERROR RETURN   @ @@[[       LA,U  A0,WRITAS   .    @ @@[[      XS
)@@G@@ LA,U  A1,WRMKAS   .    @ @@[[       LA,U  A2,TREASC   .    @F@@[[. STASXT
)@@G@@H POINTERS TO I/O RTNS TO USE, CHECK BATCH/DEMAND OPTIONS   @A@@[[AP0206XU
)@@G@@ SA    A0,RCWRIT   . WRITE    @B@@[[       SA    A1,RCWRMK   . WRITE ANDXV
)@@G@@ MARK @A@@[[       SA    A2,RCTREA   . TREAD$   @D@@[[       LA    A0,RCXW
)@@G@@OPTW   . RECOVER THE OPTIONS WORD   @GL@@@       TOP   A0,(+(1*/('Z'-'B'XX
)@@G@@))+(1*/('Z'-'D'))) . MODE OPTIONS GIVEN?  @G@@@@       J     AP0210     XY
)@@G@@ . NO, SET BATCH/DEMAND DEPENDING ON RUN STATUS @G@@@@. FORCE BATCH/DEMAXZ
)@@G@@ND PER USER REQUEST, REGARDLESS OF ACTUAL RUN STATUS  @C@@@@       TOP  YA
)@@G@@ A0,(+1*/('Z'-'B'))    . B-OPTION?  @F@@@@       J     AP0230      . NO,YB
)@@G@@ MUST BE D SO GO SET UP FOR DEMAND  @D@@@@       J     AP0220      . YESYC
)@@G@@, GO SET UP FOR BATCH   @G@@@@. NO (OR BOTH ) OPTS-- DEFAULT BATCH/DEMANYD
)@@G@@D TO ACTUAL STATUS OF RUN     @E@[@@AP0210 LA    A0,0136     . GET LEVELYE
)@@G@@ CONTROL WD OF EXEC     @A@[@@       AND,U A0,07700.  ISOLATE S5  @C@[@@YF
)@@G@@       TNE,U A1,00400.  IS THIS A DEMAND RUN?   @D@@[[AP0210  LA     A0,YG
)@@G@@RCDMND      . GET INITIAL PROG TYPE @D@@[[        TNE,U  A0,4           YH
)@@G@@. IS THIS A DEMAND RUN? @D#@@@       J     AP0230.    YES, GO SET UP FORYI
)@@G@@ DEMAND     @ @@@@AP0220.  SET UP FOR BATCH     @C@@@@       SZ    RCDMNYJ
)@@G@@D.         DEMAND FLAG OFF    @D@@@@       LA,U  A0,132.         LINE LEYK
)@@G@@NGTH=120 CHARS    @^@@@@       J     AP0240.    @ @@@@AP0230. SET UP FORYL
)@@G@@ DEMAND     @C@[@@       SX    X11,RCDMND.     DEMAND FLAG ON     @D@@[[YM
)@@G@@        LA,U   A0,1           . GET A NICE FLAG VALUE @E@@[[        SA  YN
)@@G@@   A0,RCDMND      . AND TURN ON DEMAND MODE FLAG@E[@@@       TZ,U  UOMTTYO
)@@G@@Y      . IS UOM CHARACTERSET IN TTY35?    @D@@@@       J     AP0235     YP
)@@G@@ . YES, GO SET LINE LENGTH    @D@@@@       LA,U  A0,'[$%'    . NO, GET AYQ
)@@G@@LTERNATE MULTIPLY @E@@@@       SA,H2 A0,FDTABL+AMULT  . ADJUST OUTPUT CHYR
)@@G@@AR IN TABLE @A@@@@       LA,U  A0,'[@T'    . ALSO TAKE@A@@@@       SA,H2YS
)@@G@@ A0,FDTABL+ATAKE  .     @A@@@@       LA,U  A0,'[@D'    . DROP     @A@@@@YT
)@@G@@       SA,H2 A0,FDTABL+ADROP  .     @A@@@@       LA,U  A0,'[$W'    . QUAYU
)@@G@@D     @A@@@@       SA,H2 A0,FDTABL+AQUAD  .     @C@@@@       LA,U  A0,'[YV
)@@G@@$H'    . AND FINALLY QUOTEQUAD@A@@@@       SA,H2 A0,FDTABL+AQQUAD .     YW
)@@G@@@C@@@@AP0235 LA,U  A0,72       . MAX WIDTH FOR TTY'S  @C@@@@AP0240 SA   YX
)@@G@@ A0,RCLSIZ   . POST MAX LINE WITH   @F@@[[        CALREP,SYSREP X11,AP02YY
)@@G@@50 . AND FINALLY PICK UP SOME IBANK @E@@[[. COMPLETE INITIALIZATION DEFEYZ
)@@G@@RRED BY ABSENCE OF I-BANK     @F@@[[AP0250  TZ,U   PIPST          . IS IZA
)@@G@@NSTRUMENTATION TO BE USED?    @C@@[[        LMJ    X11,PIPST      . YES,ZB
)@@G@@ FIRE IT UP @E@@[[        LMJ    X11,COIALL     . REGISTER CONTINGENCY RZC
)@@G@@TNE   @F@@[[        X$OFF                 . BE SURE DUMPS ARE INITIALLY ZD
)@@G@@OFF   @E@@[[        LA     A2,RCPUON      . GET  TIME$ WE DID AT SIGNON ZE
)@@G@@@G@@[[        LMJ    X11,CPUNOT     . COMPUTE CPU TIME WITHOUT PCT RE-REZF
)@@G@@AD    @E@@[[        LA     A0,RCPUON      . RECOVER THE TIME$ VALUE     ZG
)@@G@@@F@@[[        DS     A1,RCPUON      . AND STASH COMPUTER TIME AT SIGNON ZH
)@@G@@@F@@[[        LMJ    X11,TIMNOT     . CONVERT ORIGINAL TIME$ TO INTERNALZI
)@@G@@@E@@[[        DS     A1,RCONTM      . AND POST TIME OF SIGNON     @D@@[[ZJ
)@@G@@        DSL    A1,72          . GENERATE SOME ZEROES  @F@@[[        DS  ZK
)@@G@@   A1,RCKEYT      . AND INITIALIZE THE KEYING TIME    @E@@[[        LA  ZL
)@@G@@   A0,RCTBOO      . GET TDATE$ OF LAST REBOOT   @F@@[[        LMJ    X11ZM
)@@G@@,TIMTDF     . CONVERT TO SECONDS PAST 1 JAN 1964@E@@[[        SA     A2,ZN
)@@G@@RCBOOT      . AND SAVE IN THAT FORMAT, TOO@G@@[[        LX,U   WSTAG,APLZO
)@@G@@      . ESTABLISH BASE OF WS=START OF THIS EL   @C@@[[        J      AP0ZP
)@@G@@270         . AND GO CLEAR IT @[@@@@.     @G@@@@. BELOW THIS POINT, WE RZQ
)@@G@@EFERENCE THE LOWER LOCNS IN THE WS (FOR I/O)    @G@@@@. SINCE THIS COULDZR
)@@G@@ DESTROY THIS ELEMENT ITSELF, WE RESET THE ORIGIN     @[@@@@.     @E@[@@ZS
)@@G@@       J     AP0250      . AND JUMP AROUND THE UNUSED SPACE @G@[@@WFIXEDZT
)@@G@@ EQU   WSWORK**0777777 . ADDR OF START OF VARIABLE STUFF IN WS    @ @[@@ZU
)@@G@@  DO WFIXED>$ , RES WFIXED-$ .@B@[@@AP0250 . MARK END OF STUFF WE SKIPPEZV
)@@G@@D     @G@[@@       LMJ   X11,CLOWER  . CLEAR LOWER WS, AND INITIALIZE ALZW
)@@G@@L SUBROUTINS@F@@[[WFIXED  EQU    WSWORK-WSID+4  . FIXED OVERHEAD PLUS SAZX
)@@G@@FETY FACTOR @F@@[[ DO WFIXED>$ , RES WFIXED-$   . RESERE SPACE PAST STARZY
)@@G@@T OF WS     @[@@[[.     @E@@[[. MESSAGE USED IF FULL ASCII REQUESTED, BUZZ
)@@G@@T NOT INSTALLED   @D@@[[APNMSG 'Q-OPTION IGNORED, FULL ASCII NOT IMPLEMEAA
)@@G@@NTED' @A@@[[APNASC +0100+$-APNMSG,APNMSG  .     @F@@[[APCRLF  +0101,$+1 AB
)@@G@@            . PRINT$ CTL WD FOR ASCII SIGNON    @F@@[[       +0777,015,0AC
)@@G@@12,0177     . CR,LF,RO FOR Q-OPTION SIGNON LINE @[ @@@.     @#@@@@. SENDAD
)@@G@@ SIGNON MSG @[@@@@.     @A@@@@FDVERS EQU   ('0'+PGVERS)*/30 .     @A@@@@AE
)@@G@@FDLEVL EQU   ('0'+PGLEVL)*/18 .     @B@@@@VLTEMP EQU   '@.@   '++FDVERS+AF
)@@G@@+FDLEVL   . @E@@@@VERLEV EQU  ((VLTEMP++0D)*/36)**0777777777777000000000AG
)@@G@@000D  @E@@[[. THIS PROC SCANS THE INFOR FOR A SPEC AND STORES THE RESULTAH
)@@G@@@#@@[[P       PROC   .  @#@@[[GSPEC*  NAME   .  @G@@[[        LA,U   A0,AI
)@@G@@P(1,1)      . INFOR TYPE FOR DESIRED SPEC IS AN ARGUME@C@@[[        LMJ AJ
)@@G@@   X11,SEARCH     . LLOK FOR IT     @D@@[[ DO P(2)>0 , J P(2,1) . IF NOFAK
)@@G@@IND ADDR GIVEN, GO THERE@E@@[[ DO P(2)=0 , DL A0,('            ')  . ELSAL
)@@G@@E SET TO BLANKS   @G@@[[ DO P(1)>1 , DS A0,P(1,2) . IF RESULT LOC GIVEN,AM
)@@G@@ PLUG RESULT INTO IT    @#@@[[        END    .  @[@@[[.     @G@@[[AP0270AN
)@@G@@  LMJ    X11,CLOWER     . CLEAR LOWER WS, SET FLAGS LIKE WIDTH    @C@@[[AO
)@@G@@AP0300 LA    A0,APCRLF   . GET PRINT$ CTRL WORD @D@@[[       LA    A1,RCAP
)@@G@@OPTW   . AND USER'S OPTION WORD     @F@@[[        TEP,U  A1,+1*/('Z'-'Q'AQ
)@@G@@)+1*/('Z'-'R') . ASCII BITS ON?     @F@@[[       ER    PRINT$      . YESAR
)@@G@@, SKIP LINE OVER PROCESSOR CALL CARD@G@[@@AP0300 SEND  'U OF MARYLAN','DAS
)@@G@@ APL\1100-V',VERLEV++'@@@@@@      ' .     @G@@][       SEND  'U OF MARYLAT
)@@G@@AN','D APL\1100-V',VERLEV++'@@@@@@      ' .     @E@[@@       L,U     A0,AU
)@@G@@010106     . LOOK FOR LIB # ( SPEC 1 )    @ @[@@       LMJ     X11,SEARCAV
)@@G@@H .   @G@[@@       J       AP0330    . HE DIDNT SPECIFY IT, GO CALULATE AW
)@@G@@IT FOR HIM  @F@@[[        GSPEC  010102 AP0310  . SEE IF SPEC1 HAS A FILAX
)@@G@@E NAME IN IT@H@@[[        SEND   'SPEC 1 MAY N','OT BE A FILE','NAME'   AY
)@@G@@ . IT DOES, TSK,TSK     @B@@[[        J      AP0899         . GO AWAY   AZ
)@@G@@@G@@[[AP0310  SZ     APLIBS         . SET FLAG INDICATING LIBNO NOT SPECBA
)@@G@@IFIED @F@@[[        GSPEC  010106 AP0330  . LOOK FOR LIBNO (EL NAME IN SBB
)@@G@@PEC 1)@F@@[[        SX     X11,APLIBS     . RAISE FLAG THAT LIBNO WAS THBC
)@@G@@ERE   @C^@@@       DL      A4,A0     . TURN IT TO INTEGR    @ @@@@      BD
)@@G@@ LMJ     X11,UNVERT .   @E@@@@       J       AP0320    . IT WAS AN UGLY BE
)@@G@@LOOKING THING     @^@@@@       AND   A1,NMSK29  @C@@@@       TE    A1,A2BF
)@@G@@       . NUMBER OUT OF RANGE? @C@@@@       J     AP0320      . YES NUMBEBG
)@@G@@R NOT IN SYS@B@[@@       TLE,U   A1,1000   . #<1000 ILLEGAL @ @[@@      BH
)@@G@@ J       AP0320    .    @ @[@@AP0310 DSL   A1,36       .    @B@[@@      BI
)@@G@@ DFLOAT  A0,A1     . CONVERT TO D.F.@A@[@@       DS      A1,RCLIBN . SAVBJ
)@@G@@E IT  @A@[@@       J       AP0400    . CONTINUE @D@@[[       TG,U  A1,10BK
)@@G@@00     . DID HE TYPE A PUBLIC LIBNO?@F@@[[       J     AP0335      . NO,BL
)@@G@@ GO CONVERT HIS INPUT TO FLOATING   @CA@@@AP0320 SEND 'NUMBER NOT I','N BM
)@@G@@SYSTEM    ' .     @A@@@@       J     AP0899      . GO AWAY  @ @[@@AP0330BN
)@@G@@ DL      A0,RCQUAL .    @ @[@@       DL      A2,RCACNT .    @ @[@@      BO
)@@G@@ DSC     A2,36     .    @ @[@@       DA      A0,A2     .    @ @[@@      BP
)@@G@@ MSI   A0,A1       .    @C@[@@       AND   A0,NMSK29  . CUT MAX SIZE DOWBQ
)@@G@@N SOME@B@[@@       TLE,U   A1,1000   . #<1000 ILLEGAL @ @[@@       A,U  BR
)@@G@@   A1,1000   .    @ @[@@       J       AP0310    .    @[@[@@.     @D@[@@BS
)@@G@@. DECIDE WHETHER OR NOT HE WAS CONTINUED, LOAD HIS WS @[@[@@.     @]@[@@BT
)@@G@@AP0400.     @[@[@@.     @E@[@@. CHECK FOR ALTERNATE FILE SPECIFIED ON PRBU
)@@G@@OCESSOR CALL CARD @^@[@@. @APL  LIBNR,Q*F/R/W.  @[@[@@.     @E@[@@      BV
)@@G@@ L,U   A0,010206   . MAKE SURE HE TYPED IT WITH A '.' @ @[@@       LMJ  BW
)@@G@@ X11,SEARCH  .    @C@[@@       J     AP0408      . NO FIND, KEEP LOOKINGBX
)@@G@@@F@[@@       SEND  'ELEMENT NAME',' ILLEGAL    ' . SAY NASTY, NASTY     BY
)@@G@@@A@[@@       J     AP0899      . AND DIE  @C@[@@AP0408 L,U   A0,010202  BZ
)@@G@@ . ALTERNATE FILE NAME  @ @[@@       LMJ   X11,SEARCH  .    @F@[@@      CA
)@@G@@ J     AP0460      . DID NOT SPECIFY, DEFAULT TO COMMON FILE@B@[@@      CB
)@@G@@ DS      A0,LSFILE . SPECIFIED FILE @E@[@@       S     A0,ALTIO    . WE CC
)@@G@@ARE USING AN ALTERNATE FILE   @B@[@@       L,U   A0,010201   . LOOK FOR CD
)@@G@@QUAL  @ @[@@       LMJ   X11,SEARCH  .    @B@[@@       J     AP0410     CE
)@@G@@ . NONE GIVEN     @B@[@@       DS    A0,LSQUAL   . SPECIFIED QUAL @ @[@@CF
)@@G@@       J     AP0420      .    @]@[@@AP0410.     @D@[@@       DL    A0,('CG
)@@G@@            ') . CLEAR TO BLANKS    @ @[@@       DS    A0,LSQUAL   .    CH
)@@G@@@A@[@@AP0420 L,U   A0,010204   . READ KEY?@ @[@@       LMJ   X11,SEARCH CI
)@@G@@ .    @A@[@@       J     AP0430      . NONE     @ @[@@       S     A0,LSCJ
)@@G@@RKEY   .    @ @[@@       J     AP0440      .    @B@[@@AP0430 L     A0,FDCK
)@@G@@BLNK . SET NULL KEY     @ @[@@       S     A0,LSRKEY   .    @A@[@@AP0440CL
)@@G@@ L,U   A0,010205   . WRITE KEY@ @[@@       LMJ   X11,SEARCH  .    @A@[@@CM
)@@G@@       J     AP0450      . NO FIND  @ @[@@       S     A0,LSWKEY   .    CN
)@@G@@@ @[@@       J     AP0460      .    @C@[@@AP0450 L     A0,FDBLNK   . SETCO
)@@G@@ NULL WRITE KEY   @ @[@@       S     A0,LSWKEY   .    @[@[@@.     @F@[@@CP
)@@G@@. ONCE UPON A TIME, THE ACCT AND LODSAV FILES COULD BE DIFFERENT--@G@[@@CQ
)@@G@@. NEW THEY'RE ALWAYS THE SAME, BUT TO SAVE MODIFYING OLD CODE WHICH     CR
)@@G@@@F@[@@. DOESN'T KNOW IT, WE PUT A @USE NAME TO THE LODSAV FILE ALWAYS   CS
)@@G@@@[@[@@.     @D@[@@AP0460 LMJ   X11,LSASG   . ASSIGN THE LOAD-SAVE FILE  CT
)@@G@@@C@[@@       J     AP0899      . OOPS, COULDN'T GET IT@B@[@@       LA,U CU
)@@G@@ A0,ACUSE    . GET IMAGE ADDR @G@[@@       ER    CSF$        . AND USE FCV
)@@G@@UNNY NAME TO REFER TO ACCOUNT STUFF @E@[@@       TP    A0          . THECW
)@@G@@ @USE COULD NOT HAVE FAILED   @G@[@@       ER    ERR$        . BECAUSE WCX
)@@G@@E JUST ASSIGNED THE LOADSAVE FILE   @E@[@@       LA,U  A0,INIT     . PACCY
)@@G@@KET TO INITIALIZE LOCK SECTOR @A@[@@       ER    IOW$        . DO IT    CZ
)@@G@@@D@[@@       J     AP0465      . AND GO LOOK UP ACCOUNT NR  @[@[@@.     DA
)@@G@@@A@[@@. DATA FOR ACCOUNTING INITIALIZATION@[@[@@.     @F@[@@ACUSE  '@USEDB
)@@G@@ APL$ACCNTG.,APL$FILE. . '  . ALWAYS USE LODSAV FILE  @[@[@@.     @B@[@@DC
)@@G@@. PACKET TO INITIALIZE LOCK SECTOR (1791) @[@[@@.     @ @[@@INIT   'APL$DD
)@@G@@ACCNTG  '    .    @ @[@@       +     0           .    @B@[@@       +    DE
)@@G@@ W$,0,0      . WRITE FUNC     @B@[@@       +     28,BUFF     . RANDOM DADF
)@@G@@TA    @ @[@@       +     1791        .    @]@[@@AP0465.     @B@[@@      DG
)@@G@@ L,U   A0,ACCNT    . PUT INFO HERE  @C@[@@       DL    A5,RCLIBN   . GETDH
)@@G@@ # TO LOOK UP     @C@[@@       LMJ   X11,SACCNT  . GO DO ACCOUNT LOOK UPDI
)@@G@@@B@[@@       ER    ERR$        . ERROR IN ACCNTG@C@[@@       DO AUTO=0 ,DJ
)@@G@@ J AP0320 . # NOT IN SYSTEM   @B@[@@       DO AUTO>0 , J AP0900 . ENTER DK
)@@G@@#     @G@[@@       S     A0,DINDEX   . SAVE DRUM POINTER FOR LATER UPDATDL
)@@G@@E CALLS     @]@[@@AP0470.     @F@[@@       L,U   A0,010107   . SEE IF HEDM
)@@G@@ HAD A KEY ON HIS SIGN-ON     @ @[@@       LMJ   X11,SEARCH  .    @C@[@@DN
)@@G@@       DL    A0,FDBLNK   . NO FIND = BLANK KEY  @ @[@@       DS    A0,KEDO
)@@G@@YIN    .    @F@[@@       INCNV,U KEYIN,KEYOUT,8 AP0320 . CONVERT KEY TO DP
)@@G@@INTERNAL    @ @[@@       DL    A0,KEYOUT   .    @C@[@@       DTE   A0,ACDQ
)@@G@@KEY    . IS IT THE RIGHT ONE  @C@@[[. USER DID NOT SPECIFY LIBNO, COMPUTDR
)@@G@@E IT FOR HIM@C@@[[AP0330 DL    A0,RCQUAL   . QUALIFIER FROM PCT   @B@@[[DS
)@@G@@       DL    A2,RCACNT   . ACCOUNT NUMBER @C@@[[       LA    A4,RCRUNI  DT
)@@G@@ . AND ORIGINAL RUNID   @E@@[[       LMJ   X11,LIBNOC  . COMPUTE LIBNO UDU
)@@G@@SING I-BEAM CODE  @B@@[[. FLOAT THE USER'S LIBNO AND STASH IT     @ @@[[DV
)@@G@@AP0335 DSL   A1,36       .    @ @@[[       DFLOAT A0,A1      .    @E@@[[DW
)@@G@@       DS    A1,RCLIBN   . SAVE LIBNO IN RUN CONTROL BLOCK  @^@@[[. FINDDX
)@@G@@ KEY FIELD, IF ANY@F@@[[AP0340  GSPEC  010107,KEYFD   . STASH FIELDATA KDY
)@@G@@EY (OR BLANKS)    @F@@[[        INCNV,U KEYFD,KEYAPL,8 AP0320   . CONVERDZ
)@@G@@T KEY TO APLCHARS @[@@[[.     @E@@[[. LOOK FOR POSSIBLE ALTERNATE FILE SEA
)@@G@@PECIFIED AS SPEC 2--    @[@@[[.     @F@@[[AP0400  GSPEC  010206 AP0405  EB
)@@G@@. IS AN ELEMENT GIVEN ON SPEC 2?    @H@@[[        SEND   'SPEC 2 MAY N',EC
)@@G@@'OT SPECIFY A','N ELEMENT NA','ME  '      .     @A@@[[        J      AP0ED
)@@G@@899         .     @F@@[[AP0405  GSPEC  010202,APFILN AP0410     . LOOK FEE
)@@G@@OR A FILE NAME    @F@@[[        GSPEC  010201,APQUAL  . IF WE GOT ONE, GEF
)@@G@@ET QUALIFIER, TOO @B@@[[        GSPEC  010204,APRKEY  . READ KEY  @B@@[[EG
)@@G@@        GSPEC  010205,APWKEY  . WRITE KEY @B@@[[. NOW ASK LODSAV TO GET EH
)@@G@@US THE FILE--     @F@@[[        LA,U   A0,APQUAL      . SET POINTER TO FEI
)@@G@@ILENAME PACKET    @C@@[[        J      AP0420         . GO DO THE ASSIGNEJ
)@@G@@@G@@[[AP0410  LA,U   A0,0           . IF NO FILE IN SPEC 2, CLEAR PKT POEK
)@@G@@INTER @C@@[[AP0420  SA     A0,APSPC2      . SAVE SPEC2 FLAG @D@@[[      EL
)@@G@@  LA,U   A1,KEYFD       . GET POINTER TO KEY    @G@@[[        LA     A2,EM
)@@G@@APLIBS      . GET FLAG FOR EXPLICIT/IMPLICIT LIBNO    @B@@[[        LMJ EN
)@@G@@   X11,LSASG      . WHIRR     @E@@[[        J      AP0899         . COULEO
)@@G@@DN'T GET IT, SO DIE     @F@@[[        SA     A0,APPERM      . SAVE PERMIEP
)@@G@@SSIONS BASED ON FILES   @D@@[[        TOP,U  A0,ACLOKB      . DID WE GETEQ
)@@G@@ ALL FILES? @F@@[[        J      AP0460         . YES, GO INITIALIZE ACCER
)@@G@@OUNT DATA   @F@@[[        TNZ    APSPC2         . DID USER SPECIFY A FILES
)@@G@@E IN SPEC2? @D@@[[        J      AP0430         . NO, GO SAY LOCKED OUT ET
)@@G@@@F@@[[        SEND   'SPEC2 ERROR ','READ/WRITE P','ERMISSIONS N',;     EU
)@@G@@@C@@[[               'OT BOTH AVAI','LABLE   '     .  @C@@[[        J   EV
)@@G@@   AP0899         . GO TERMINATE    @E@@[[. FILE ASSIGNMENT SAYS LOCKED EW
)@@G@@OUT AND SPEC2 WAS NOT GIVEN   @D@@[[AP0430  TZ,U   ONEFIL         . FILEEX
)@@G@@-PER-USER SITE?   @G@@[[        ER     EABT$          . NO, CAN'T GET HEEY
)@@G@@RE AT SINGLE FILE SITES @G@@[[        J      AP0320         . YES, MISSIEZ
)@@G@@NG KEY. SAY # NOT IN SYST     @B@@[[. TEMP LOCNS TO HOLD SCANNED FILENAMFA
)@@G@@E, ETC@A@@[[APQUAL  RES    2              .     @A@@[[APFILN  RES    2  FB
)@@G@@            .     @F@@[[APRKEY  RES    1              . CAUTION-- PROC DFC
)@@G@@OES A DOUBLE STORE@G@@[[APWKEY  RES    2              . WRITE KEY MUST BFD
)@@G@@E STORED AFTER READ KEY @D@@[[KEYFD   RES    2              . FIELDATA KFE
)@@G@@EY AREA     @C@@[[KEYAPL  RES    3              . APL KEY AREA    @F@@[[FF
)@@G@@APLIBS  EQUF   $,,H1          . FLAG SET IF LIBNO TYPED AS SPEC 1 @G@@[[FG
)@@G@@APPERM  EQUF   $,,H2          . PERMISSIONS BASED ON FILE ASSIGNMENT    FH
)@@G@@@A@@[[        RES    1              .     @A@@[[APSPC2  EQUF   $,,H1    FI
)@@G@@      .     @A@@[[        RES    1              .     @[@@[[.     @B@@[[FJ
)@@G@@. INITIALIZE ACCOUNTING DATA, PERMISSIONS @[@@[[.     @G@@[[AP0460  LA,UFK
)@@G@@   A0,1           . SET FLAG CAUSING AUTO ENTRY OF NUMBER   @G@@[[      FL
)@@G@@  TZ     APLIBS         . WAS LIBNO SPECIFIED ON PROCESSOR CALL?  @F@@[[FM
)@@G@@        LA,U   A0,0           . YES, INHIBIT AUTOMATIC ENTRY OF IT@G@@[[FN
)@@G@@        DL     A1,KEYAPL      . PICK UP USER SPECIFIED KEY (OR BLANKS)  FO
)@@G@@@D@@[[        LMJ    X11,SACCNT     . SEARCH FOR THIS USER  @G@@[[      FP
)@@G@@  J      AP0320         . ERROR . FOR NOW, SAY NO NOT IN SYST     @E@[@@FQ
)@@G@@       J     AP0320      . BAD KEY, NUMBER NOT IN SYSTEM    @ @[@@      FR
)@@G@@ L     A0,ACPERM   .    @D@[@@. * * * * T E M P * * * *        (NEXT THRFS
)@@G@@EE LINES)   @D@[@@       TZ    RCMASF      . DO THIS ONLY FOR MASCON    FT
)@@G@@@C@[@@       TNZ,U REPMAP      . AND NOT A DEBUG RUN  @ @[@@       J    FU
)@@G@@ AP0476      .    @B@[@@       TOP,U A0,1*/2     . #IN USE BIT ON?@C@[@@FV
)@@G@@       J     AP0476      . NO, FORGET THIS STUPH@D@[@@       TP,XU EXEC8FW
)@@G@@-26    . IS THIS  EXEC 26 OR BETTER?@D@[@@       J     AP0600      . NO,FX
)@@G@@ TOO BAD, LEAVE#IN USE  @C@[@@       LA,U  A1,WSWORK   . GET START OF USFY
)@@G@@ER WS @E@[@@       SA    A1,APMCTP   . MAKE IT A PLACE TO PUT THE MCT   FZ
)@@G@@@C@[@@       LA,U  A0,APMCTP   . PACKET ADDR FOR MCT$ @D@[@@       ER   GA
)@@G@@ MCT$        . PUT CONFIG TABLE IN WS     @E@[@@       LA    A0,2,A1    GB
)@@G@@ . GET TIME OF LAST BOOT (DATE$ FMT)@D@[@@       AND   A0,(01700170017) GC
)@@G@@. CONVERT TO TDATE$ FMT @C@[@@       SA    A1,A2       . SAVE UNITS DIGIGD
)@@G@@T     @C@[@@       SSL   A0,6        . ALLIGN TENS DIGIT    @C@[@@      GE
)@@G@@ AND   A0,(01700170017) . PICK THEM OUT   @B@[@@       MSI,U A1,10      GF
)@@G@@ . MULT BY 10     @B@[@@       AT    A1,A2       . ADD IN UNITS   @A@[@@GG
)@@G@@       DSL   A1,24       . HRS RJZF @A@[@@       DSL   A2,24       . MINGH
)@@G@@S RJZF@A@[@@       SSL   A3,24       . SECS     @B@[@@       MSI,U A1,36GI
)@@G@@00     . HRS TO SECS    @B@[@@       MSI,U A2,60       . MINS TO SECS   GJ
)@@G@@@B@[@@       AA    A1,A2       . ADD THEM ALL UP@D@[@@       AA    A1,A3GK
)@@G@@       . TO GIVE SECS PAST MIDNITE  @D@[@@       TG,H2 A1,ACLAST   . LASGL
)@@G@@T REF BEFORE LAST BOOT? @E@[@@       J     AP0475      . YES, GOT INTERVGM
)@@G@@ENING SYS CRASH   @C@[@@       ER    TDATE$      . PERHAPS, CHECK DATES GN
)@@G@@@A@[@@       SSL   A0,18       . ALLIGN   @B@[@@       TNE,H1 A0,ACLAST GO
)@@G@@ . LAST REF TODAY?@B@[@@       J     AP0600      . YES, #IN USE   @E@[@@GP
)@@G@@AP0475 LA    A0,ACPERM   . NO, OK, RELOAD PERMISSION WORD   @B@[@@AP0476GQ
)@@G@@ TEP,U A0,1*/1     . # LOCKED OUT?  @A@[@@       J     AP0700      . YESGR
)@@G@@, EXIT@B@[@@       OR,U  A0,1*/2     . SET IN USE BIT @ @[@@       S    GS
)@@G@@ A1,ACPERM   .    @C@[@@       TEP,U A0,1*/3     . CONTINUED LAST TIME? GT
)@@G@@@C@[@@       J     AP0800      . YES, )LOAD CONTINUE  @ @[@@       ACOFFGU
)@@G@@             .    @F@[@@       MOVE  3,APCLEA,CIOBUF . SIMULATE USER'S SGV
)@@G@@ENDING ')CLEAR'   @]@[@@AP0500.     @ @[@@       ACON              .    GW
)@@G@@@D@[@@       L     A0,DINDEX   . GET ADDRESS OF MY NUMBER   @ @[@@      GX
)@@G@@ LMJ   X11,UPDATE  .    @ @[@@       ER    ERR$        .    @ @[@@      GY
)@@G@@ ACOFF             .    @D@[@@       LMJ   X11,XQT     . GO TO EXECUTIONGZ
)@@G@@ SUPERVISOR @B@[@@       ER    ERR$        . NEVER TO RETURN@ @[@@      HA
)@@G@@ ACON              .    @A@[@@AP0600 SEND  'NUMBER IN US','E   ' .@B@[@@HB
)@@G@@       J     AP0899      . SO LONG, FOLKS @B@[@@AP0700 SEND  'NUMBER LOCHC
)@@G@@KE','D OUT' .     @A@[@@       J     AP0899      . SAYONARA @[@[@@.     HD
)@@G@@@B@[@@.      PROBLEMS ASSIGNING ACCOUNT FILE    @[@[@@.     @]@[@@AP0850HE
)@@G@@.     @G@[@@       SEND    'ACCOUNT ','FILE NOT','AVAILAB','LE TRY, ','LHF
)@@G@@ATER.  ' .  @C@[@@AP0899 CALREP,SYSREP X11,SINOFF    . GO AWAY    @C@[@@HG
)@@G@@AP0800 MOVE  5,APLOAD,CIOBUF   . )LOAD CONTINUE @ @[@@       L     A0,ACHH
)@@G@@PERM   .    @C@[@@       AND,XU A0,-1*/3   . CLEAR CONTINUE BIT   @ @[@@HI
)@@G@@       S     A1,ACPERM   .    @ @[@@       J     AP0500      .    @A@[@@HJ
)@@G@@KEYIN  RES   2           . KEY IN FD@B@[@@KEYOUT RES   3           . KEYHK
)@@G@@ IN ITERNAL @B@[@@APMCTP +     0           . PACKET FOR MCT$@ @[@@      HL
)@@G@@ AUTON             .    @[@[@@.     @C@[@@.      PUT # IN ACCOUNT FILE IHM
)@@G@@F IT WASNT THERE  @[@[@@.     @]@[@@AP0900.     @C@[@@       L,U   R1,14HN
)@@G@@       . TRANSFER ASSUMED INFO@ @[@@       L     A0,(1,ASSUMD)    @ @[@@HO
)@@G@@       L     A1,(1,ACCNT)     @ @[@@       BT    A1,0,*A0    .    @A@[@@HP
)@@G@@       ER    TDATE$      . GET NOW  @ @[@@       S     A0,ACLAST   .    HQ
)@@G@@@ @[@@       DL    A0,RCLIBN   .    @ @[@@       DS    A0,ACLIBN   .    HR
)@@G@@@ @[@@       DL    A0,RCQUAL   .    @ @[@@       DS    A0,ACQUAL   .    HS
)@@G@@@ @[@@       DL    A0,RCACNT   .    @D@[@@       DS    A0,ACACNT   . ANDHT
)@@G@@ ADD HIS STUFF TO IT    @B@[@@       L,U   A3,ACCNT    . INFO IS HERE   HU
)@@G@@@B@[@@       LMJ   X11,ENTER   . GO ENTER IT    @ @[@@       ER    ERR$ HV
)@@G@@       .    @G@[@@       S     A0,DINDEX   . SAVE DRUM POINTER FOR LATERHW
)@@G@@ UPDATE CALLS     @A@[@@       J     AP0470      . CONTINUE @ @[@@      HX
)@@G@@ AUTOFF            .    @ @[@@       ACOFF             .    @E@@[[      HY
)@@G@@  DL     A0,ACMCON      . GET LIBNUM OF MASTER CONSOLE@C@@[[        LA,UHZ
)@@G@@   A2,1           . ASSUME I'M HE   @F@@[[        DTE    A0,RCLIBN      IA
)@@G@@. DOES THIS USER'S LIBNO MATCH GOD'S@D@@[[        LA,U   A2,0           IB
)@@G@@. NO, CLEAR THE FLAG    @E@@[[        SA     A2,RCMASF      . POST MASTEIC
)@@G@@R CONSOLE FLAG    @[@@[[.     @C@@[[. IF USER IS LOCKED OUT, DON'T LET HID
)@@G@@IM SIGN ON  @[@@[[.     @F@@[[AP0470  LA     A0,ACPERM      . GET PERMISIE
)@@G@@SIONS SET BY ACCOUNTING @F@@[[        OR     A0,APPERM      . FOLD IN THIF
)@@G@@OSE FROM FILE ASSIGNMENT@F@@[[        SA     A1,ACPERM      . AND POST CIG
)@@G@@OMBINED PERMISSIONS     @D@@[[        TOP,U  A1,ACLOKB      . IS LOCKED IH
)@@G@@OUT BIT ON? @E@@[[        J      AP0480         . NO, GO CHECK NUMB IN UII
)@@G@@SE    @G@@[[        SEND   'NUMBER LOCKE','D OUT   '     . TELL USER WHAIJ
)@@G@@T'S GOING ON@D@@[[        J      AP0899         . AND TERMINATE HIM     IK
)@@G@@@[@@[[.     @G@@[[. PROTECT ABAINST MULTIPLE UPDATING OF LIBRARIES AND AIL
)@@G@@CCOUNTING DATA BY @G@@[[. WARNING A USER WHOSE LIBNUMBER IS ALREADY MARKIM
)@@G@@ED IN USE.  NOTE, THIS  @B@@[[. MAY HAPPEN IF THE USER DID A BREAK-X    IN
)@@G@@@[@@[[.     @E@@[[AP0480  LA     A1,ACPERM      . GET PERMS (MERGED ABOVIO
)@@G@@E)    @D@@[[        TOP,U  A1,ACINUB      . IS NO IN USE BIT ON?  @E@@[[IP
)@@G@@        J      AP0500         . NO, NOTHING TO WORRY ABOUT  @F@@[[      IQ
)@@G@@  LA     A0,ACLAST      . YES, GET TDATE$ OF LAST REFERENCE @E@@[[      IR
)@@G@@  LMJ    X11,TIMTDF     . CONVERT TO SECS SINCE 1/1/64@G@@[[        TLE IS
)@@G@@   A2,RCBOOT      . DID LAST BOOT PRECEDE LAST REFERENCE?   @C@@[[      IT
)@@G@@  J      AP0500         . NO, FLASE ALARM @F@@[[        SEND   'WARNING:IU
)@@G@@ NUM','BER IN USE  '      . WARN THIS GUY @D@@[[                        IV
)@@G@@      . BUT LET HIM RUN ANYWAY@[@@[[.     @A@@[[. CHECK FOR AUTOLOAD OF IW
)@@G@@CONTINUE WS @[@@[[.     @G@@[[AP0500  LA     A0,TDATON      . GET TDATE$IX
)@@G@@ AT PROCESSOR INITIALIZTION   @F@@[[        SA     A0,ACLAST      . MAKEIY
)@@G@@ IT TIME OF LAST REFERENCE    @E@@[[        LA     A0,ACPERM      . RECOIZ
)@@G@@VER PERMISSION BITS     @D@@[[        AND,U  A0,ACCONB      . CHECK 'CONJA
)@@G@@TINUED' BIT @B@@[[        TZ     A1             . IS IT ON? @D@@[[      JB
)@@G@@  LA,U   A1,1           . YES, GET FLAG VALUE   @F@@[[        SA     A1,JC
)@@G@@APCONF      . POST )CONTINUE FLAG FOR LATER     @D@@[[        AND,XU A0,JD
)@@G@@-ACCONB     . TURN CONTINUE BIT OFF @D@@[[        OR,U   A1,ACINUB      JE
)@@G@@. TURN ON IN USE BIT    @F@@[[        SA     A2,ACPERM      . AND PUST UJF
)@@G@@PDATED PERMISSIONS BIT  @C@@[[        LMJ    X11,UPDATE     . AND UPDATEJG
)@@G@@ IT   @A@@[[        ER     ERR$           .     @C@@[[. SET CONTROL FLAGJH
)@@G@@S VOR VARIABLE SIZE WORKSPACES@G@@[[AP0520  LA     A0,ACMXWS      . GET JI
)@@G@@MAX WS INDEX ALLOWED FOR THIS USER  @D@@[[        LSSL   A0,12          JJ
)@@G@@. MPY BY 4096 WORDS     @A@@[[        LXI    A0,ACMXWS      .     @G@@[[JK
)@@G@@        SA     A0,RCMXWS      . POST MAX WORKSPACE SIZE WD FOR THIS USERJL
)@@G@@@G@@[[        TG     A0,APDFWS      . DOES DEFAULT )CLEAR EXCEED USER'S JM
)@@G@@MAX?  @G@@[[        LA     A0,APDFWS      . NO, SET HIS DEFAULT TO SYSTEJN
)@@G@@M DEFAULT   @H@@[[        SA     A0,RCDFWS      . POST DESCRIPTION OF DEJO
)@@G@@FAULT CLEAR WS SIZE     @[@@[[.     @D@@[[. SET UP INITIAL COMMAND AND TJP
)@@G@@RANSFER TO MAINLINE     @[@@[[.     @G@@[[AP0530  MOVE   3,APCLEA,CIOBUFJQ
)@@G@@     . PUT )CLEAR COMMAND IN INPUT BUF    @D@@[[        TNZ    APCONF   JR
)@@G@@      . IS )CONTINUE FLAG UP? @D@@[[        J      AP0540         . NO, JS
)@@G@@)CLEAR WAS CORRECT@G@@[[        MOVE   5,APLOAD,CIOBUF     . YES, 1ST CMJT
)@@G@@ND SHOULD )LOAD CONTINUE@G@@[[AP0540  LMJ    X11,XQT        . PASS CONTRJU
)@@G@@OL TO EXECUTION SUPERVISOR    @E@@[[        ER     ERR$           . WHICJV
)@@G@@H WILL NEVER RETURN HERE@[@@[[.     @C@@[[AP0899  CALREP,SYSREP X11,SINOJW
)@@G@@FF   . GO AWAY    @[@@[[.     @C@@[[APCONF  EQUF   $,,S1          . CONTJX
)@@G@@INUE FLAG   @#@@[[        +0     .  @E@@[[TDATON  RES    1              JY
)@@G@@. TDATE$ AT SIGNON (FROM R3)  @E@@[[APDFWS  +WSSIND,WSSIZE        . CLEAJZ
)@@G@@R WS DEFAULT MAX SIZE   @[_@@@.     @^@@@@APCLEA APLBCI ')CLEAR  '@ @@@@KA
)@@G@@       +AEOL,AEOL,AEOL,AEOL . @ @[@@       ACON              .    @B[@@@KB
)@@G@@APLOAD APLBCI ')LOAD CONTIN','UE  ' .     @A@@@@       +     AEOL,AEOL,AKC
)@@G@@EOL,AEOL    @ @[@@       ACOFF             .    @[[@@@.     @[@@@@.     KD
)@@G@@@H@@@@. ROUTINE TO SEARCH INFOR TABLE  A0 = SPEC TO FIND, SPEC RETURNED KE
)@@G@@IN A0,A1    @B@@@@. RETURN 0,X11 = NO FIND.. 1,X11 OTHERWISE@[@@@@.     KF
)@@G@@@B@@@@SEARCH L,U   A2,APCALL+1 . START HERE     @B@@@@       L,H2  A3,APKG
)@@G@@CNT    . WORD COUNT     @C@@@@SE0010 L,H1  A1,0,A2     . GET NEXT DESCRIKH
)@@G@@PTOR  @D@@@@       TNE   A0,A1       . IS IT THE ONE WE WANTD     @ @@@@KI
)@@G@@       J     SE0020      . YES@C@@@@       A,S6  A2,0,A2     . MOVE ON TKJ
)@@G@@O NEXT ONE  @ @@@@       A,U   A2,1        .    @B@@@@       TG,U  A2,APKK
)@@G@@CALL,A3      . DONE?    @B@@@@       J     0,X11       . YES, NO FIND   KL
)@@G@@@B@@@@       J     SE0010      . KEEP GOING     @B@@@@SE0020 DL    A0,1,KM
)@@G@@A2     . GET THINGY     @E@@@@       L,S6  A3,0,A2     . GET WORD COUNT KN
)@@G@@FOR THIS THINGY   @ @@@@       TNE,U A3,1        .    @I@@@@       L    KO
)@@G@@ A1,FDBLNK   . MAKE SECOND WORD BLANK IF FIELD WAS ONLY 1 WORD LONG     KP
)@@G@@@A@@@@       J     1,X11       . RETURN   @[@@@@.     @A@@@@APINFR +    KQ
)@@G@@ AP0020,APCALL         .@D@@@@AP0020 ER    ERR$        . EOF ON PROCESSOKR
)@@G@@R CALL READ @C@@@@APCALL RES   28          . INFOR TABLE GOES HERE@D@@@@KS
)@@G@@APCNT  +     0           . WORD COUNT FROM INFOR READ @[@@@@.     @C@@@@KT
)@@G@@. CONVERT FIELD DATA IN A4 & A5 TO BINARY IN A1 @B@@@@. IGNORE BLANKS, EKU
)@@G@@RROR RETURN OTHERWISE   @[@@@@.     @C@@@@UNVERT L,U   R1,11       . LOOKV
)@@G@@P FOR 12 CHAR     @ @@@@       SZ    A2          .    @ @@@@UN0010 SZ   KW
)@@G@@ A3          .    @C@@@@       LTSL  A3,6        . SHIFT IN NEXT CHAR   KX
)@@G@@@ @@@@       TNE,U A3,' '      .    @C@@@@       J     UN0020      . BLAKY
)@@G@@NKS ARE IGNORED   @ @@@@       TG,U  A3,'0'      .    @ @@@@       TG,U KZ
)@@G@@ A3,'9'+1    .    @F@@@@       J     0,X11       . CHARS OUT OF RANGE GELA
)@@G@@T ERROR RETURNS   @ @@@@       L     A0,A2       .    @C@@@@       MI,U LB
)@@G@@ A0,10       . PROMOTE OLD NUMBER   @D@@@@       JNZ   A0,0,X11    . OVELC
)@@G@@RFLOW = ERROR RETURN    @C@@@@       A     A1,A3       . ADD IN CURRENT LD
)@@G@@CHAR  @B@@@@       ANU,U A1,'0'      . DELETE BIAS    @ @@@@UN0020 JGD  LE
)@@G@@ R1,UN0010   .    @D@@@@       L     A1,A2       . LEAVE IT IN RIGHT REGLF
)@@G@@ISTR  @B@@@@       J     1,X11       . NORMAL RETURN  @[@@@@.     @ @@@@LG
)@@G@@MASK30 +     1*/30       .    @ @@@@NMSK29 +     1*/29-1     .    @G@@@@LH
)@@G@@FDBLNK +     '            '        . PUT LITS HERE RATHER THAN END OF WSLI
)@@G@@@#@@@@       END  .     ___E FLAG   @#@@[[        +0     .  @E@@[[TDATONLJ
)@@G@@  RES    1              *[S@@@*SDFF*@G@@@@. ****************************LK
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLULL
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 LM
)@@G@@                                                    * @G@@@@       AXR$ LN
)@@G@@        .                                                 * @G@@@@      LO
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@LP
)@@G@@       WSDEF.      DEFINE WORKSPACE                                   * LQ
)@@G@@@G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                       LR
)@@G@@    * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                  LS
)@@G@@          * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE      LT
)@@G@@                * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK LU
)@@G@@TYPES                 * @G@@@@.                                         LV
)@@G@@                            * @G@@@@. END OF STANDARD PROC BLOCK        LW
)@@G@@                                  * @G@@@@. ****************************LX
)@@G@@***************************************** @[@@@@.     @ @@@@G      PROC LY
)@@G@@. HALFINT FETCH   @[@@@@.     @ @@@@. G(1,1)=SOURCE REG OF INDEX  @ @@@@LZ
)@@G@@. G(1,2)=DEST REG OF VALUE    @A@@@@. G(1,3)=LOC OF BASE ADDR OF DATA   MA
)@@G@@@[@@@@.     @#@@@@HFETCH* NAME .    @#@@@@       UNLI$T .   @C@@@@      MB
)@@G@@ DSL   G(1,1),36   . INDEX TO G(1,1)+1    @C@@@@       DI,U  G(1,1),2   MC
)@@G@@ . CONVERT TO HALFINT   @D@@@@       AA    G(1,1),G(1,3) . FOLD IN BASE MD
)@@G@@ADDR OF DATA@C@@@@       EX    HF0100,G(1,1)+1 . PICK UP HALWD    @B@@@@ME
)@@G@@       LDSL  G(1,1)+1,54 . SIGN EXTEND IT @C@@@@       DSA   G(1,1)+1,54MF
)@@G@@ . DATA IN G(1,1)+2     @D@@@@       SA    G(1,1)+2,G(1,2) . PUT DATA INMG
)@@G@@ OUTPUT REG @A@@@@HF0100 LA,H1 G(1,1)+2,0,G(1,1) .    @A@@@@       LA,H2MH
)@@G@@ G(1,1)+2,0,G(1,1) .    @#@@@@       LI$T .     @]@@@@       END .@A@@@@MI
)@@G@@G      PROC . DOUBLE-FLOAT FETCH    @[@@@@.     @ @@@@. G(1,1)=SOURCE REMJ
)@@G@@G OF INDEX  @C@@@@. G(1,2)=DEST REG OF VALUES (ALSO G(1,2)+1)     @A@@@@MK
)@@G@@. G(1,3)=LOC OF BASE ADDR OF DATA   @[@@@@.     @#@@@@DFETCH* NAME .    ML
)@@G@@@#@@@@       UNLI$T .   @D@@@@       LSSL  G(1,1),1    . CONVERT TO DOUBMM
)@@G@@LE-WORD     @D@@@@       AA    G(1,1),G(1,3) . ADD IN BASE ADDR OF ARRAYMN
)@@G@@@B@@@@       DL    G(1,2),0,G(1,1) . LOAD DATA  @#@@@@       LI$T .     MO
)@@G@@@]@@@@       END .@ @@@@/. GRADE-UP AND GRADE-DOWN    @#@@@@       INSTRMP
)@@G@@S .   @A@@@@GRADWN* SX   X11,GRLINK  . SAVE LINK@G@@@@       SZ    GRFLAMQ
)@@G@@G      . FLAG FOR GRADE-DOWN (NON-ZERO IF GRADE-UP)   @C@@@@       J    MR
)@@G@@ GR0010      . JUMP INTO GRADE-UP   @[@@@@.     @[@@@@.     @A@@@@GRADUPMS
)@@G@@* SX   X11,GRLINK  . SAVE LINK@F@@@@       SX    X11,GRFLAG  . FLAG FOR MT
)@@G@@GRADE-UP (ZERO IF GRADE-DOWN) @G@@@@GR0010 VERIFY GR0925,GR0915,GR0999 .MU
)@@G@@ DOMAIN,UNIMP,ERROR (POP ARGUMENT)  @D@@@@       SA    A0,GRRITE   . ADDMV
)@@G@@R OF RITE DATA ADDR     @F@@@@       SA    A6,RITDSC   . SAVE ADDR OF RIMW
)@@G@@TE ARG FOR LATER ERASE  @D@@@@       JE,U  A3,ZMOCHR GR0930 . IF CHAR-DOMX
)@@G@@MAIN ERROR  @D@@@@       JNE,U A4,1 GR0960 . IF NOT VECTOR, RANK ERROR  MY
)@@G@@@D@@@@       LA,U  A0,GRBLK    . LOAD DUMMY DBLOCK ADDR     @A@@@@      MZ
)@@G@@ LA,U  A1,ZMOHFI   . LOAD MODE@G@@@@       LA,U  A6,0        . INITIALIZNA
)@@G@@E INDEX (WILL PT TO SORT ROUTINE)   @A@@@@       TE,U  A3,ZMOHFI   . HALNB
)@@G@@FINT? @C@@@@       AA,U  A6,1        . NO, DOUBLE FLOAT     @ @@@@      NC
)@@G@@ SA    A6,GRTYPE   .    @B@@@@       SA,H2 A5,GRBLK    . SAVE LENGTH    ND
)@@G@@@F@@@@       JNG,U A5,2 GR0020 . IF LENGTH > 1, DO REGULAR GRADE-STUFF  NE
)@@G@@@#@@@@. LENGTH OF 0 OR 1@E@@@@.       = 1, OUTPUT VECTOR WITH VALUE EQUANF
)@@G@@L INDEX ORIGIN    @A@@@@.       = 0, OUTPUT NULL VECTOR     @B@@@@      NG
)@@G@@ LMJ   X11,RESERV  . CREATE VECTOR  @B@@@@       J     GR0999      . ERRNH
)@@G@@OR RETURN   @B@@@@       TNZ,H2 GRBLK      . CHECK LENGTH   @C@@@@      NI
)@@G@@ J     GR0015      . ZERO, NULL VECTOR    @F@@@@       LA    A3,WSIXOR  NJ
)@@G@@ . LOAD INDEX ORG TO STORE INTO ANSWER    @C@@@@       SA,H1 A3,0,A1    NK
)@@G@@ . AND STORE INTO ANSWER@]@@@@GR0015 .    @E@@@@       LA    A0,A2      NL
)@@G@@ . MOVE DESCRIPTOR ADDR FOR PUSH    @A@@@@       J     GR0250      . EXINM
)@@G@@T     @ @@@@. DO GRADE-UP AND GRADE-DOWN  @B@@@@GR0020 LMJ   X11,PUTANS NN
)@@G@@ . RESERVE SPACE  @B@@@@       J     GR0999      . ERROR RETURN   @E@@@@NO
)@@G@@       SA    A2,GRDSC    . SAVE RELADDR OF RESULT DESCR     @D@@@@      NP
)@@G@@ SX    X2,GRANRT   . SAVE STORE ROUTINE ADDR    @B@@@@       SX    X3,GRNQ
)@@G@@ANSW   . SAVE DATA ADDR @B@@@@       LXI,U A3,1        . LOAD INCREMENT NR
)@@G@@@G@@@@       LXM   A3,WSIXOR   . LOAD DATA THINGY(INITIALIZES ANSWER VECNS
)@@G@@TOR)  @B@@@@       LA,H2 A5,GRBLK    . RE-LOAD LENGTH @^@@@@. INITIALIZENT
)@@G@@ ANSWER     @B@@@@GR0030 JNGD  A5,GR0040   . LENGTH COUNTER @F@@@@      NU
)@@G@@ LA,U  A2,0,*A3    . LOAD VALUE (0,1,...,N-1)-USED AS INDEX @D@@@@      NV
)@@G@@ LMJ   X2,0,X2     . STORE INTO ANSWER VECTOR   @A@@@@       J     GR003NW
)@@G@@0      . REPEAT   @]@@@@. DO SORT   @C@@@@GR0040 SZ    GRCNT       . ZERNX
)@@G@@O LOOP COUNTER    @B@@@@       LA,H2 A15,GRBLK   . LOAD LENGTH    @F@@@@NY
)@@G@@       ANA,U A15,1       . SUBTRACT 1 TO OBTAIN FIRST SEARCH COUNT@C@@@@NZ
)@@G@@       LA    A3,GRTYPE   . 0-HFINT, 1-DFLOAT    @D@@@@       LX    X6,SOOA
)@@G@@RTAB,A3 . LOAD ADDR OF SORT ROUTINE @D@@@@GR0080 LR    R1,A15      . USEOB
)@@G@@ R1 AS LOOP COUNTER     @D@@@@       LX,H2 X4,GLFTBL+ZMOHFI . LOAD FETCHOC
)@@G@@ ROUTINE    @D@@@@       LX    X5,GRANSW   . LOAD ADDR OF ANSWER VECTOR OD
)@@G@@@B@@@@       LXI,U X5,1        . LOAD INCREMENT @D@@@@       LX    X2,GROE
)@@G@@ANRT   . LOAD STORE ROUTINE ADDR    @B@@@@       LX    X3,GRANSW   . LOAOF
)@@G@@D DATA ADDR @B@@@@GR0100 JNGD  R1,GR0120   . LOOP COUNTER   @C@@@@      OG
)@@G@@ LMJ   X4,0,X4     . GET NEXT INDEX VALUE @C@@@@       LA    A14,A2     OH
)@@G@@ . SAVE PICKED VALUE    @G@@@@       DL    A6,X4       . SAVE INDEX REGSOI
)@@G@@ SO AS TO ONLYBMOVE 1 VALUE   @D@@@@       LMJ   X4,0,X4     . GET SECONOJ
)@@G@@D INDEX VALUE     @C@@@@       DS    A6,X4       . RESTORE INDEX REGS   OK
)@@G@@@C@@@@       LA    A13,A2      . SAVE 2ND PICKED VALUE@C@@@@       ANA  OL
)@@G@@ A2,WSIXOR   . CORRECT FOR INDEX-ORG@B@@@@       LMJ   X6,0,X6     . DO OM
)@@G@@SORT STEP   @C@@@@       J     GR0100      . REPEAT SORT STEP     @C@@@@ON
)@@G@@GR0120 TZ    GRCNT       . IF COUNT=0, FINISHED @G@@@@       JGD   A15,GOO
)@@G@@R0080  . DECREASE SORT LENGTH BY 1, REPEAT IF > 0     @D@@@@GR0200 LA   OP
)@@G@@ A0,GRDSC    . LOAD RESULT DESCR ADDR     @B@@@@GR0250 PUSH  A0         OQ
)@@G@@ . STACK RESULT   @ @@@@       LX    X11,GRLINK  .    @ @@@@       J    OR
)@@G@@ 1,X11       .    @[@@@@.     @#@@@@. ERROR EXITS     @[@@@@.     @ @@@@OS
)@@G@@GR0915 PUSH  A6          .    @ @@@@       ERROR YSYSTM,GR0999 .  @ @@@@OT
)@@G@@GR0925 PUSH  A6          .    @ @@@@GR0930 ERROR YDOMAI,GR0999  . @ @@@@OU
)@@G@@GR0960 ERROR YRANK,GR0999 .   @ @@@@GR0999 LX    X11,GRLINK  .    @ @@@@OV
)@@G@@       J     0,X11       .    @[@@@@.     @[@@@@.     @#@@@@       CONSTOW
)@@G@@S .   @ @@@@SORTAB +     HFSORT      .    @ @@@@       +     DFSORT     OX
)@@G@@ .    @[@@@@.     @[@@@@.     @]@@@@. HALF-INT  @#@@@@       INSTRS .   OY
)@@G@@@ @@@@HFSORT SX    X6,HFSAVE   .    @D@@@@       HFETCH A2,A7,GRRITE  . OZ
)@@G@@2ND VALUELEFT IN A7     @ @@@@       LA    A2,A14      .    @C@@@@      PA
)@@G@@ ANA   A2,WSIXOR   . CORRECT FOR INDEX-ORG@D@@@@       HFETCH A2,A8,GRRIPB
)@@G@@TE . 1ST VALUE LEFT IN A8     @D@@@@       TNZ   GRFLAG      . CHECK FORPC
)@@G@@ SORT-UP OF DOWN  @C@@@@       DSC   A7,36       . DOWN, SWITCH OPERANDSPD
)@@G@@@B@@@@       TG    A7,A8       . TEST FOR SWITCH@F@@@@HF0005 DSC   A13,3PE
)@@G@@6      . SHIFT SO INDEXES GO BACK CORRECTLY     @D@@@@HF0010 LA    A2,A1PF
)@@G@@3      . PREPARE TO REVERSE INDICES @A@@@@       LA    A6,GRCNT    . ADDPG
)@@G@@ 1    @A@@@@       AA,U  A6,1        .   TO     @B@@@@       SA    A6,GRPH
)@@G@@CNT    . SWITCH COUNT   @D@@@@       LMJ   X2,0,X2     . STORE 2ND INDEXPI
)@@G@@, FIRST     @G@@@@       DL    A6,X2       . SAVE INDEX REGS SO AS TO ONPJ
)@@G@@LY MOVE 1 VALUE   @ @@@@       LA    A2,A14      .    @D@@@@       LMJ  PK
)@@G@@ X2,0,X2     . STORE 1ST INDEX, SECOND    @C@@@@       DS    A6,X2      PL
)@@G@@ . RESTORE INDEX REGS   @ @@@@       LX    X6,HFSAVE   .    @A@@@@      PM
)@@G@@ TZ    GRTYPE      . IF DFLOAT@C@@@@       J     DR0020      .     EXIT PN
)@@G@@FROM THERE  @]@@@@HF0020 .    @A@@@@       LMJ   X6,0,X6     . EXIT     PO
)@@G@@@ @@@@       J     HFSORT      .    @#@@@@       VARBLS .   @#@@@@HFSAVEPP
)@@G@@ RES 1 .    @#@@@@       INSTRS .   @#@@@@. DOUBLE-FLOAT    @D@@@@DFSORTPQ
)@@G@@ DFETCH A2,A7,GRRITE . 2ND VALUE LEFT IN A7,A8  @ @@@@       LA    A2,A1PR
)@@G@@4      .    @C@@@@       ANA   A2,WSIXOR   . CORRECT FOR INDEX-ORG@D@@@@PS
)@@G@@       DFETCH A2,A3,GRRITE . 1ST VLUAE LEFT IN A3,A4  @C@@@@       TZ   PT
)@@G@@ GRFLAG      . TEST IF GRAD-DOWN    @ @@@@       J     DF0010      . NO PU
)@@G@@@C@@@@       DS    A3,A5       . SHIFT AROUND FOR TEST@B@@@@       DL   PV
)@@G@@ A3,A7       .  A3&A4 TO A7&A8@B@@@@       DS    A5,A7       .  AND VICEPW
)@@G@@-VERSA@A@@@@DF0010 SX    X6,HFSAVE   . SAVE LINK@B@@@@       DTG   A7,A3PX
)@@G@@       . TEST FOR SWITCH@D@@@@       J     HF0005      . NO SWITCH, FINIPY
)@@G@@SH ROUTINE  @B@@@@       J     HF0010      . GO TO SWITCH   @A@@@@DR0020PZ
)@@G@@ LMJ   X6,0,X6     . EXIT     @ @@@@       J     DFSORT      .    @#@@@@QA
)@@G@@       VARBLS .   @^@@@@GRLINK RES   1 . LINK   @F@@@@GRFLAG RES   1 . FQB
)@@G@@LAG FOR GRADE-UP(NON-ZERO), GRADE-DWN(ZERO)     @D@@@@GRBLK  CBLOCK ZTPTQC
)@@G@@MP,ZMOHFI,ZRANKV,0 0 . DUMMY DESCR  @B@@@@GRRITE RES   1 . ADDR OF RIGHTQD
)@@G@@ ARG ADDR   @C@@@@GRANSW RES   1 . ADDR OF DATA ADDT OF ANSWER    @A@@@@QE
)@@G@@GRTYPE RES   1 . INDEX INTO SORT-TAB@B@@@@GRDSC  RES   1 . RELADDR OF REQF
)@@G@@SULT DESCR  @B@@@@GRANRT RES   1 . ANSWER STORE ROUTINE ADDR@D@@@@GRCNT QG
)@@G@@ RES 1 . COUNT OF SWITCHES DURING A SORT PASS   @ @@@@       END        QH
)@@G@@       .    ___    CONSTS .   @ @@@@SORTAB +    *[S@@@*SDFF*@G@@@@. ****QI
)@@G@@***************************************************************** @G@@@@QJ
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * QK
)@@G@@@G@@@@.                                                                 QL
)@@G@@    * @^@@@@       AXR$         .   @C@@@@       CONFIG  .    DEFINE ASSQM
)@@G@@EMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINE WORKSPACE             QN
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACQO
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BQP
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEQQ
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           QR
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 QS
)@@G@@                                                    * @G@@@@. END OF STAQT
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****QU
)@@G@@***************************************************************** @[@@@@QV
)@@G@@.     @[@@@@.     @B@@@@       POPDEF  . DEFINE STACK REG SYMBOLS @#@@@@QW
)@@G@@       STATEV .   @[@@@@.     @E@@@@SBLSIZ EQU   STKNRG//4   . NO OF WORQX
)@@G@@DS IN W.S. STACK BLOCK  @G@@@@SBLNEN EQU   2*SBLSIZ    . NO OF STACK ENTQY
)@@G@@RIES (I.E. REGS) IN WS BLOK   @[@@@@.     @#@@@@S      PROC .     @#@@@@QZ
)@@G@@SAVE*  NAME .     @ @@@@       SX    X11,STLINK  .    @#@@@@       UNLISRA
)@@G@@T .   @ @@@@       DS    A0,STTEMP   .    @ @@@@       DS    A2,STTEMP+2RB
)@@G@@ .    @ @@@@       DL    A0,R1       .    @ @@@@       DS    A0,STTEMP+4RC
)@@G@@ .    @#@@@@       LIST .     @]@@@@       END .@[@@@@.     @#@@@@R     RD
)@@G@@ PROC .     @#@@@@RESTOR* NAME .    @ @@@@       DL    A0,STTEMP+4 .    RE
)@@G@@@#@@@@       UNLIST .   @ @@@@       DS    A0,R1       .    @ @@@@      RF
)@@G@@ DL    A2,STTEMP+2 .    @ @@@@       DL    A0,STTEMP   .    @ @@@@      RG
)@@G@@ LX    X11,STLINK  .    @#@@@@       LIST .     @]@@@@       END .@G@@@@RH
)@@G@@/. EXECUTE TIME STACK RTNES- FOR CALL SEQS, SEE PROX 'PUSH'AND 'POP'    RI
)@@G@@@A@@@@. REGS FULL- PUSH STACK INTO WS     @G@@@@.     STACK BLOCKS ARE ARJ
)@@G@@LWAYS 'SBLSIZ' WORDS, ALTHOUGH THEY MIGHT NOT BE@G@@@@.     FILLED.  THERK
)@@G@@ ACTUAL NO OF ENTRIES IN A BLOK IS IN Q2 OF THE HEADER@G@@@@.     WORD, RL
)@@G@@AND ALTHO A FULL COMPLEMENT OF REGS IS ALWAYS LOADED AND    @G@@@@.     RM
)@@G@@STORED, THE STACK POINTER, X10 WILL BE PROPERLY ADJUSTED TO POINT @F@@@@RN
)@@G@@.     TO THE CORRECT PLACE.  DURING EXECUTION, X10 ALWAYS CONTAINS@F@@@@RO
)@@G@@.     THE ACTUAL NUMBER OF R-REGS WHICH CONTAIN LIVE STACK VALUES.@G@@@@RP
)@@G@@.     BECAUSE THESE ROUTINES ARE CALLED FROM PROCS WHICH HAVE ALREADY   RQ
)@@G@@@D@@@@.     UPDATED X10, WE COMPENSATE IT BY 1 INTERNALLY.  @[@@@@.     RR
)@@G@@@#@@@@       INSTRS .   @E@@@@.  THIS ENTRY TO FLUSH ENTIRE LIVE STACK (RS
)@@G@@USED TO SUSPEND)  @#@@@@STKFLU* SAVE .    @[@@@@.     @D@@@@SF0010 LA,U RT
)@@G@@ A0,0,X10    . GET NO OF REGS NOW IN USE  @B@@@@       JZ    A0,ST0200  RU
)@@G@@ . IF NONE, EXIT  @C@@@@       TG,U  A0,SBLNEN   . MORE THAN ONE BLOCK? RV
)@@G@@@F@@@@       LA,U  A0,SBLNEN   . YES, SET NO TO BE SAVED TO ONE BLOCK   RW
)@@G@@@F@@@@       LMJ   X11,ST0010  . GO SAVE NO OF REGS SPECIFIED IN A0     RX
)@@G@@@ @@@@       J     ST0300      .    @F@@@@       J     SF0010      . CONRY
)@@G@@TINUE UNTIL LIVE STACK IS EMPTY     @[@@@@.     @C@@@@.  THIS ENTRY FROMRZ
)@@G@@ 'PUSH' PROC AT STACK OVERFLOW@[@@@@.     @#@@@@STKPSH* SAVE .    @F@@@@SA
)@@G@@       JGD   X10,$+1     . REPAIR DAMAGE DONE BY TLEM IN PUSH     @F@@@@SB
)@@G@@       LA,U  A0,SBLNEN   . SET NO OF REGS TO SAVE TO ONE FULL BLOK@C@@@@SC
)@@G@@       LMJ   X11,ST0010  . GO SAVE THE REGS     @^@@@@       J     ST000SD
)@@G@@5 .   @F@@@@       NOP   0,0,*X10    . SET POINTER AS PUSH WOULD HAVE DOSE
)@@G@@NE    @B@@@@       J     ST0200      . AND RETURN     @B@@@@ST0005 NOP  SF
)@@G@@ 0,0,*X10    . RESTORE X10    @ @@@@       J     ST0300      .    @E@@@@SG
)@@G@@/.  THIS IS WHERE THE R-REGS ARE ACTUALLY PUSHED INTO THE WS@[@@@@.     SH
)@@G@@@G@@@@ST0010 SA    A0,STNSAV   . TEMP SAVE NO OF REGS TO BE PUT INTO BLOSI
)@@G@@CK    @C@@@@       SX    X11,STLNK2  . AND RETURN ADDR, TOO @C@@@@      SJ
)@@G@@ ALLOCT,U SBLSIZ+1 ST0070 . GET SPACE     @F@@@@        SA,H2 A1,STBLAD SK
)@@G@@ . SAVE INDIRECT STACK BLOCK POINTER-     @D@@@@        AA,U A1,0,WSTAG SL
)@@G@@ . ABS ADDR OF STAK BLOK TO A1@ @@@@. INITIALIZE LINK WD, ETC     @ @@@@SM
)@@G@@ST0020 LA    A0,STSKEL   .    @ @@@@       SA    A0,0,A1     .    @C@@@@SN
)@@G@@       LA,H2 A0,WSSTAK   . CURRENT STACK POINTER@B@@@@       SA,H2 A0,0,SO
)@@G@@A1     . INTO WORD 1    @D@@@@       LA    A0,STNSAV   . NO OF REGS ACTUSP
)@@G@@ALLY SAVED  @D@@@@       SA,Q2 A0,0,A1     . POST IN BLOCK HEADER WORD  SQ
)@@G@@@C@@@@       LA,H2 A0,STBLAD   . ADDR OF THIS BLOK    @C@@@@       SA,H2SR
)@@G@@ A0,WSSTAK   . INTO WS STACK POINTER@C@@@@. NOW PACK AND MOVE FROM R-REGSS
)@@G@@S TO STACK BLOCK  @#@@@@S      PROC .     @#@@@@SPACK* NAME .     @D@@@@ST
)@@G@@       DL   A2,STKLFT+2*(K-1) . GET NEXT 2 R-REGS     @#@@@@       UNLISSU
)@@G@@T .   @B@@@@       LSSL A3,18   . PACK INTO ONE WORD  @^@@@@       LDSL SV
)@@G@@A2,18   .   @A@@@@       SA   A2,K,A1 . PUT IN WS BLOK@#@@@@       LIST SW
)@@G@@.     @]@@@@       END. @]@@@@ST0030 .    @C@@@@K DO SBLSIZ , SPACK . MOSX
)@@G@@VE FROM R-REGS TO WS    @D@@@@. MOVE REMAINING R-REGS TO LOW PORTION, RESY
)@@G@@SET X10.    @E@@@@ST0040 LA    A0,STNSAV   . RECOVER NO OF LIVE REGS SAVSZ
)@@G@@ED    @D@@@@       TNE,U A0,SBLNEN   . DID WE SAVE A FULL BLOCK?  @E@@@@TA
)@@G@@       J     ST0050      . YES, GO MOVE THE UNSAVED REGS    @D@@@@      TB
)@@G@@ LXM,U X10,0       . NO, SET THE STACK TO EMPTY @A@@@@       J     ST006TC
)@@G@@0      . AND EXIT @]@@@@ST0050 .    @D@@@@K DO STKNRG-SBLNEN , LR STKLFTTD
)@@G@@+K-1,STKLFT+K-1+SBLNEN  @D@@@@       LNA   A0,STNSAV   . NEG OF NO OF RETE
)@@G@@GS SAVED    @D@@@@       AA,U  A0,0,X10    . PLUS NO ORIGINALLY FILLED  TF
)@@G@@@E@@@@       LXM,U X10,0,A0    . GIVES NO NOW CONTAINING LIVE DATA@A@@@@TG
)@@G@@ST0060 LX    X11,STLNK2  . RETURN   @ @@@@       J     1,X11       .    TH
)@@G@@@ @@@@ST0070 LX    X11,STLNK2  .    @ @@@@       J     0,X11       .    TI
)@@G@@@[@@@@/.    @[@@@@.     @B@@@@. REGS EMPTY-- REFILL THEM FROM WS---     TJ
)@@G@@@[@@@@.     @ @@@@STKPOP* SAVE             .    @E@@@@ST0100 LA,H2 A1,WSTK
)@@G@@STAK   . GET CURRENT WS STACK POINTER     @F@@@@       JZ    A1,ST0300  TL
)@@G@@ . IF ZERO, STACK EMPTY. TAKE ERROR RETURN@B@@@@       SA,H2 A1,STBLAD  TM
)@@G@@ . SAVE BLOK ADDR @C@@@@       AA,U  A1,0,WSTAG  . MAKE IT ABSOLUTE     TN
)@@G@@@A@@@@. MOVE FROM STACK BLOCK TO REGS     @#@@@@S      PROC .     @#@@@@TO
)@@G@@SUNPAK* NAME .    @B@@@@       LA    A2,K,A1 . GET NEXT BLOK ENTRY@#@@@@TP
)@@G@@       UNLIST .   @B@@@@       DSL   A2,18   . UNPACK TO TWO WORDS@^@@@@TQ
)@@G@@       SSL   A3,18   .  @D@@@@       DS    A2,STKLFT+2*(K-1) . MOVE TO STR
)@@G@@TACKREG     @#@@@@       LIST .     @#@@@@        END   .   @]@@@@ST0110TS
)@@G@@ .    @^@@@@K DO SBLSIZ , SUNPAK .  @B@@@@. NOW RELEASE STACK BLOCK TO FTT
)@@G@@REE STORAGE @E@@@@ST0120 LA,H2 A0,0,A1     . GET CHAIN POINTER OF THIS BTU
)@@G@@LOCK  @D@@@@       SA,H2 A0,WSSTAK   . INTO WORKSP STACK POINTER  @F@@@@TV
)@@G@@       LXM,Q2 X10,0,A1   . GET NO OF FILLED REGS FROM HEADER WORD @B@@@@TW
)@@G@@       LA,U  A0,SBLSIZ+1 . SIZE OF BLOCK  @B@@@@       LA,H2 A1,STBLAD  TX
)@@G@@ . ADDR OF BLOCK  @B@@@@       FREE              . RELEASE IT     @G@@@@TY
)@@G@@       JGD   X10,ST0200 . COMPENSATE POINTER AS 'POP' WOULD HAVE DONE   TZ
)@@G@@@^@@@@. TAKE NORMAL RETURN    @B@@@@. SET POINTER TO NEXT EMPTY REG, RETUA
)@@G@@URN   @B@@@@ST0200 RESTOR            .  RESET REGS    @B@@@@       J    UB
)@@G@@1,X11        .  NORMAL RETURN @B@@@@. ERROR RETURN-- WS FULL, OR STACK EUC
)@@G@@MPTY  @ @@@@ST0300 RESTOR            .    @ @@@@       J     0,X11      UD
)@@G@@ .    @[@@@@.     @#@@@@       VARBLS .   @#@@@@STBLAD RES   1 .  @#@@@@UE
)@@G@@STLINK RES   1 .  @#@@@@STTEMP RES   6 .  @D@@@@STNSAV RES   1          UF
)@@G@@ . NO OF REGS TO BE SAVED     @E@@@@STLNK2 RES   1           . LINK USEDUG
)@@G@@ DURING REG SAVE/FLUSH  @#@@@@       CONSTS .   @ @@@@STSKEL CBLOCK ZTPSUH
)@@G@@TA,0,0,0 .  @[@@@@.     @C@@@@. INITIAL SETUP OF STACK TO 'CLEAR' (I.E. UI
)@@G@@EMPTY)@[@@@@.     @#@@@@       INSTRS .   @F@@@@STCLEA* SZ   WSSTAK     UJ
)@@G@@ . THERE ARE NO STACK BLOCKS IN CORE...   @G@@@@        LX    X10,(+1,0)UK
)@@G@@ . AND THERE IS NOTHING IN THE R-REGS, EITHER   @E@@@@       SZ    STVSTUL
)@@G@@K      . FLAG EMPTY STACK IN STATEVECTOR  @ @@@@        J     0,X11     UM
)@@G@@ .    @]@@@@       END .___M,U X10,0       . NO, SET THE STACK TO EMPTY UN
)@@G@@@A@@@@       J     ST006*[S@@@*SDFF*@G@@@@. ****************************UO
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUUP
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 UQ
)@@G@@                                                    * @G@@@@       AXR$ UR
)@@G@@        .                                                 * @G@@@@      US
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@UT
)@@G@@       WSDEF.      DEFINE WORKSPACE                                   * UU
)@@G@@@G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                       UV
)@@G@@    * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                  UW
)@@G@@          * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE      UX
)@@G@@                * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK UY
)@@G@@TYPES                 * @G@@@@.                                         UZ
)@@G@@                            * @G@@@@. END OF STANDARD PROC BLOCK        VA
)@@G@@                                  * @G@@@@. ****************************VB
)@@G@@***************************************** @[@@@@.     @[@@@@.     @D@@@@VC
)@@G@@/.    EXECUTE TIME SET/GETVAL  OF TRACE/STOP VECTORS  @[@@@@.     @#@@@@VD
)@@G@@       INSTRS .   @G@@@@.                                               VE
)@@G@@      SET STOPVECTOR    @E@@@@SETSTP* SZ   STINDX      . SET TRACE/STOP VF
)@@G@@INDEX TO STOP     @^@@@@       J     ST0010     @G@@@@.                 VG
)@@G@@                                    SET TRACEVECTOR   @D@@@@SETTRC* LA,UVH
)@@G@@ A0,1        . GET INDEX VAL FOR TRACE    @F@@@@       SA    A0,STINDX  VI
)@@G@@ . POST TRACE/STOP INDEXING FLAG FOR TRACE@[@@@@.     @ @@@@ST0010 SX   VJ
)@@G@@ X11,STLINK  .    @E@@@@       LMJ   X11,TSINIT  . INITIALIZE POINTERS TVK
)@@G@@O FUNCTABLE @ @@@@       J     ST0999      .    @D@@@@. BEFORE SETTING NVL
)@@G@@EW BITS, CLEAR ALL THE OLD ONES     @F@@@@ST0100 LA    A0,STINDX   . PICVM
)@@G@@K UP INDEX VALUE FOR TRACE/STOP     @G@@@@       LA    A2,TSTBAS   . GETVN
)@@G@@ BASE ADDR OF FUNCTBL, WITH INCREMENT     @E@[@@       LR    R1,TSNLIN  VO
)@@G@@ . NO OF LINES (EXCLUDING HEADER)   @F@@[[        LR     R1,TSNLIN      VP
)@@G@@. GET TOT NO LINES (INCL HEADER)    @D@@[[        TZ     STINDX         VQ
)@@G@@. DOING STOPVECTOR?     @F@@[[        JGD    R1,$+1         . NO, TRACE.VR
)@@G@@ DON'T COUNT LINE ZERO  @C[@@@ST0110 JNGD  R1,ST0200   . IF NO MORE, GETVS
)@@G@@ OUT  @F@@@@       EX    ST0120,A0   . CLEAR APPROPRIATE 6TH WD OF TABLEVT
)@@G@@ ENTRY@C@@@@       J     ST0110      . AND GO DO NEXT LINE  @B@[@@ST0120VU
)@@G@@ SZ,S2 1,*A2       . CLEAR STOPBIT  @B@[@@       SZ,S3 1,*A2       . CLEVV
)@@G@@AR TRACEBIT @C@@[[ST0120  SZ,S2  0,*A2          . CLEAR STOPBIT   @F@@[[VW
)@@G@@        SZ,S3  1,*A2          . CLEAR TRACEBIT (BYPASS LINE ZERO) @C]@@@VX
)@@G@@. NOW SET UP TO FETCH RITEARG AND TURN BITS ON  @C@@@@ST0200 VERIFY ST09VY
)@@G@@00,,ST0910  . DECODE RITEARG  @F@@@@       SA    A6,RITDSC        . POSTVZ
)@@G@@ ADDR FOR GARBAGE COLLECTOR   @B@@@@       LA    A15,A5      . SET COUNTWA
)@@G@@ER    @B@@@@       JZ    A5,ST0300   . IF NULL, EXIT  @F@@@@       JG,U WB
)@@G@@ A4,ZRANKV+1 ST0210    . BE SURE RANK IS SCAL OR VECT @A@@@@       ERRORWC
)@@G@@ YRANK,ST0999     .     @E@@@@ST0210 JE,U  A3,ZMOHFI ST0220 . IF HALFINTWD
)@@G@@, GO SET UP FETCH @F@@@@       JNE,U A3,ZMODFL ST0920 . IF NOT DFL EITHEWE
)@@G@@R, DOMAIN ERR     @G@@@@       LA,U  A3,ZMODFI        . SET MODE FLAG TOWF
)@@G@@ FORCE HALFFINT FETCH   @D@@@@ST0220 LMJ   X11,PIKRIU       . INITIALIZEWG
)@@G@@ FETCHREGS  @A@@@@       J     ST0999           .     @E@@@@. LOOP OVER WH
)@@G@@RITEARG, SETTING BITS IN THE REQUIRED STMNTS    @E@@@@ST0230 JNGD  A15,SWI
)@@G@@T0300  . WHEN RITEARG EXHAUSTED, GET OUT  @D@@@@       LMJ   X6,0,X6    WJ
)@@G@@ . GET NEXT VALUE TO A4,A5    @C@@@@       JNZ   A4,ST0230   . IF NOT HAWK
)@@G@@LFINT, SKIP @E@[@@       DJZ   A4,ST0230   . DON'T FLAG FUNC HEADER LINEWL
)@@G@@S     @B@[@@       TNE   A5,TSNLIN   . =LAST LINE?    @C@[@@       J    WM
)@@G@@ ST0240      . YES, GO TURN BIT ON  @D@[@@       TG,U  A5,1        . NO,WN
)@@G@@ IS LINENO AT LEAST 1?  @D@@[[        TZ     STINDX         . SETTING STWO
)@@G@@OPVECTOR?   @G@@[[        DJZ    A4,ST0230      . NO, DON'T SET TRACE ONWP
)@@G@@ FUNC HDR LINE    @E@@[[        TG,U   A5,0           . IS LINE NO AT LEWQ
)@@G@@AST ZERO?   @E^@@@       TG    A5,TSNLIN   . YES, DOES IT EXCEED LAST LIWR
)@@G@@NENO  @C@@@@       J     ST0230      . OUT OF RANGE, SKIP IT@C@@@@ST0240WS
)@@G@@ LA    A2,A5       . LINENO TO WORKREG    @D@@@@       LA,U  A4,1       WT
)@@G@@ . SET UP A BIT TO BE STORED  @C@@@@       LA    A0,STINDX   . GET TRACEWU
)@@G@@/STOP INDEX @G@@@@       AA    A2,TSLIN0   . LINENO+LINEZERO=ADDR OF ENTWV
)@@G@@RY FOR THIS LINE  @C@@@@       EX    ST0250,A0   . SET BIT ON FROM A4   WW
)@@G@@@C@@@@       J     ST0230      . GO BACK FOR NEXT LINE@B@@@@ST0250 SA,S2WX
)@@G@@ A4,0,A2     . STOPBIT ON     @B@@@@       SA,S3 A4,0,A2     . TRACEBIT WY
)@@G@@ON    @#@@@@. NORMAL EXIT     @C@@@@ST0300 LA    A6,RITDSC   . DESCR OF WZ
)@@G@@RITEARG     @A@@@@       LMJ   X11,DUPE    . COPY IT  @ @@@@       J    XA
)@@G@@ ST0999      .    @C@@@@       PUSH  A2          . STACK RESULT OF FUNCTXB
)@@G@@@ @@@@       LX    X11,STLINK  .    @B@@@@       J     1,X11       . NORXC
)@@G@@MAL RETURN  @]@@@@. ERRORS--  @D@@@@ST0900 ERROR YSYNTA,ST0999    . RITEXD
)@@G@@ARG IS STAKMARK   @B@@@@ST0910 ERROR YVALUE,ST0999    . RITEARG   @D@@@@XE
)@@G@@ST0920 ERROR YDOMAI,ST0999    . RITEARG NOT NUMERIC   @[@@@@.     @A@@@@XF
)@@G@@ST0999 LX    X11,STLINK       .     @A@@@@       J     0,X11            XG
)@@G@@.     @[@@@@.     @#@@@@       VARBLS  .  @ @@@@STINDX EQUF  $,,Q1      XH
)@@G@@ .    @ @@@@STLINK EQUF  $,,H2       .    @ @@@@       RES   1          XI
)@@G@@  .   @A@@@@/. GET CURRENT VALUE OF STOP/TRACE  @[@@@@.     @#@@@@      XJ
)@@G@@ INSTRS  .  @E@@@@GETSTP* SZ   STINDX      . SET TRACE/STOP INDEX TO STOXK
)@@G@@P     @ @@@@       J     GT0010      .    @[@@@@.     @ @@@@GETTRC* LA,UXL
)@@G@@ A0,1        .    @C@@@@       SA    A0,STINDX   . SET FLAG TO TRACE    XM
)@@G@@@[@@@@.     @C@@@@GT0010 SX    X11,STLINK  . SAVE RETURN ADDR     @E@@@@XN
)@@G@@       LMJ   X11,TSINIT  . INITIALIZE FUNCTABLE PARAMETERS  @ @@@@      XO
)@@G@@ J     ST0999      .    @C@@@@       LA    A13,TSNLIN  . NO OF LINES IN XP
)@@G@@FUNC  @F@@@@       SA,H2 A13,GTDUMY  . PUT IN LENGTH FIELD OF DUMMY DESCXQ
)@@G@@R     @D@@@@. ACQUIRE ENOUGH SPACE TO HOLD ALL LINES OF THIS FUNC @C@@@@XR
)@@G@@GT0100 LA,U  A0,GTDUMY   . DUMMY DESCR ADDR     @B@@@@       LA,U  A1,ZMXS
)@@G@@OHFI   . MODE IS HALFINT@D@@@@       LMJ   X11,PUTANS  . INITIALIZE TO SXT
)@@G@@TASH RESULT @ @@@@       J     ST0999      .    @D@@@@       PUSH  A6   XU
)@@G@@       . STACK RESULT DESCR ADDR    @D@@@@       LX    X6,A0       . TEMXV
)@@G@@P SAVE ABSADR OF DESCR  @D@@@@       LX    X7,X3       . AND ADDR OF 1STXW
)@@G@@ DATA WORD  @C@@@@       LX    X4,STINDX   . SET STOP/TRACE INDEX @F@@@@XX
)@@G@@       LX    X5,TSLIN0   . SET ADDR OF ENTRY FOR LINE 0 OF FUNC   @G@@@@XY
)@@G@@       LXI,U X5,1        . AND STEP THRU LINE TBL IN 1 WD INCREMENTS    XZ
)@@G@@@E@@@@       SSL   A14,36      . CLEAR CT OF NO LINES WITH BITS ON@C@[@@YA
)@@G@@       LDSL  A1,72       . CLEAR LINENO CTR     @F@@[[        LNA,U  A2,YB
)@@G@@1           . BE SURE LINENUM AFTER BUMP IS ZERO@E[@@@GT0110 JNGD  A13,GYC
)@@G@@T0130  . EXIT AFTER SCANNING ALL LINES    @F@@@@       AA,U  A2,1       YD
)@@G@@ . BUMP CT OF LINE CURRENTLY BEING SCANNED@D@@@@       EX    GT0120,X4  YE
)@@G@@ . IS BIT ON IN THIS LINE?    @C@@@@       J     GT0110      . NO, GO TOYF
)@@G@@ NEXT ONE   @C@@@@       LMJ   X2,0,X2     . YES-STASH LINE NO    @E@@@@YG
)@@G@@       AA,U  A14,1       . BUMP CT OF TRUE LENGTH OF VECT   @D@@@@      YH
)@@G@@ J     GT0110      . AND GO BACK FOR NEXT LINE  @B@[@@GT0120 TNZ,S2 1,*XYI
)@@G@@5      . CHECK STOPBIT  @B@@][GT0120 TNZ,S2 0,*X5      . CHECK STOPBIT  YJ
)@@G@@@B@[@@       TNZ,S3 1,*X5      . CHECK TRACEBIT @B@@][       TNZ,S3 0,*XYK
)@@G@@5      . CHECK TRACEBIT @C]@@@. NOW VECT HAS BEEN CREATED-- FREE UNUSED YL
)@@G@@SPACE @F@@@@GT0130 SA,H2 A14,0,X6    . ADJUST LENGTH OF VECT IN ITS DESCYM
)@@G@@R     @B@@@@       AA,U  A14,1       . ROUND UP LENGTH@C@@@@       SSL  YN
)@@G@@ A14,1       . AND GET NO WORDS USED@D@@@@       LA,U  A1,0,X7     . RECYO
)@@G@@OVER FWA OF DATA AREA   @ @@@@       RELADR A1         .    @E@@@@      YP
)@@G@@ AA    A1,A14      . PLUS NO WDS USED =FWA TO FREE    @G@@@@       LA   YQ
)@@G@@ A0,TSNLIN   . NO OF ELS IN ORIGINAL RESERVE WAS NO OF LINES@A@@@@      YR
)@@G@@ AA,U  A0,1        . ROUND    @D@@@@       SSL   A0,1        . CONVERT TYS
)@@G@@O WDS RESERVED    @D@@@@       ANA   A0,A14      . LESS NO WDS USED=NO TYT
)@@G@@O FREE@C@@@@       JZ    A0,GT0140   . IF NONE, GET OUT     @D@@@@      YU
)@@G@@ FREE              . ELSE RELEASE THE SPACE     @ @@@@GT0140 LX    X11,SYV
)@@G@@TLINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    @#@@@@      YW
)@@G@@ VARCON .   @B@@@@GTDUMY CBLOCK ZTPTMP,ZMOHFI,ZRANKV,0  .   @G@@@@/.    YX
)@@G@@INITIALIZE PARAMETERS TO ACCESS FUNCTBL (NAMEBLOK ADDR IN A2)     @#@@@@YY
)@@G@@       INSTRS  .  @ @@@@TSINIT SX    X11,TILINK  .    @C@@@@       ABSADYZ
)@@G@@R A2         . ABSADR OF NAMEBLOK   @D@@@@       LA,H2 A0,1,A2     . DESZA
)@@G@@CR POINTER FROM NAMEBLOK@G@@@@TS0010 JZ    A0,TS0030   . IF NOTHING CHAIZB
)@@G@@NED, FUNC DOESN'T EXIST, VALER@E@@@@       ABSADR A0         . GET ADDR ZC
)@@G@@OF 'NEXT' DESCRIPTOR    @E@@@@       LA,U  A3,ZTPFUN   . GET FUNCTYPE FOZD
)@@G@@R COMPARISONS     @D@@@@       TNE,S1 A3,0,A0    . IS THIS DESCR A FUNCBZE
)@@G@@LOK?  @D@@@@       J     TS0020      . YES, GO SET ITS TABLES UP  @C@@@@ZF
)@@G@@       LA,H2 A0,2,A0     . NO, GET FWD POINTER  @D@@@@       J     TS001ZG
)@@G@@0      . AND GO EXAMINE NEXT DESCR  @A@@@@. A0=ABSADR OF DESCR FOR THIS ZH
)@@G@@FUNC  @D@@@@TS0020 LA,H2 A1,0,A0     . GET NO LINES   FROM DESCR  @E@[@@ZI
)@@G@@       ANA,U A1,1        . DON'T COUNT THE FUNC HEADER LINE @A[@@@      ZJ
)@@G@@ SA    A1,TSNLIN   . TEMP SAVE@F@@@@       LA,H2 A2,1,A0     . GET BASE ZK
)@@G@@ADDR OF FUNCTBL FROM DESCR    @G@@@@       LA,U  A2,1,A2     . BUMP PASTZL
)@@G@@ BLOK HDR TO POINT AT LINE 0 OF TBL @ @@@@       ABSADR A2         .    ZM
)@@G@@@C@@@@       SA    A2,TSLIN0   . SAVE BASE ADDR OF TBL@ @[@@       LX,H2ZN
)@@G@@ X11,TILINK  .    @ @@][       LX    X11,TILINK  .    @ [@@@       J    ZO
)@@G@@ 1,X11       .    @B@@@@TS0030 ERROR YDEFN       . FUNC NOT FOUND @ @[@@ZP
)@@G@@       LX,H2 X11,TILINK  .    @ @@][       LX    X11,TILINK  .    @ [@@@ZQ
)@@G@@       J     0,X11       .    @ @@@@       VARBLS            .    @#@[@@ZR
)@@G@@TILINK RES   1  . @B@[@@TSNLIN RES   1  . NO LINES (NOT INCL HDR) @A@@[[ZS
)@@G@@TILINK  EQUF   $,,H1          .     @F@@[[TSNLIN  EQUF   $,,H2          ZT
)@@G@@. TOT NO LINES (INCLUDING HEADER)   @A@@[[        RES    1              ZU
)@@G@@.     @#]@@@       VARCON  .  @G@@@@TSTBAS  +1,$-$      . INCREMENT FOR ZV
)@@G@@LOADING XREG TO STEP THRU FUNCTBL   @E@@@@TSLIN0 EQUF  TSTBAS,,H2  . BASZW
)@@G@@E ADDR (LINE 0 ) OF FUNCTABLE @]@@@@       END .___4,0,X6    . ADJUST LEZX
)@@G@@NGTH OF VECT IN ITS DESC*[S@@@*SDFF*@G@@@@. ****************************ZY
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUZZ
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 AA
)@@G@@                                                    * @G@@@@       AXR$ AB
)@@G@@        .                                                 * @G@@@@      AC
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@AD
)@@G@@       WSDEF.      DEFINE WORKSPACE                                   * AE
)@@G@@@G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                       AF
)@@G@@    * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                  AG
)@@G@@          * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE      AH
)@@G@@                * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK AI
)@@G@@TYPES                 * @G@@@@.                                         AJ
)@@G@@                            * @G@@@@. END OF STANDARD PROC BLOCK        AK
)@@G@@                                  * @G@@@@. ****************************AL
)@@G@@***************************************** @[@@@@.     @D@@@@       FILDEAM
)@@G@@F            . DEFINE TAGS FOR FILE SYSTEM@[@@@@.     @[@@@@.     @F@@@@AN
)@@G@@WSFRAD EQU   WSFREE**0777777  . REL ADDR OF FREE LIST HEAD POINTER@E@@@@AO
)@@G@@       IODEF             . DEFINE LOCN WITH PERMISSION BITS @G@@@@.     AP
)@@G@@ DEBUGGING PARAMS TO CONTROL CLEARING OF FREED SPACE TO ZEROES    @D@@@@AQ
)@@G@@ZEROIT EQU   0           . SET 1 TO FORCE CLEARING    @ @@@@ZERON  PROCSAR
)@@G@@W ZEROIT     .    @ @@@@ZEROFF ENDSW  ZEROIT     .    @G@[@@OLD    EQU  AS
)@@G@@ 0           . CONTROL ASM OF 'OLD' OR 'NEW' VERSION OF FREE@E[@@@/. PROAT
)@@G@@CS TO SEARCH THRU FREE LIST USING ABSOLUTE ADDRESSES  @[@@@@.     @#@@@@AU
)@@G@@A      PROC .     @F@@@@AFBGE* NAME 1 . FIND BLOK .GE.  EXITS: NOHIT GTRAV
)@@G@@  = FALLS THRU    @#@@@@       UNLI$T .   @D@@@@       LA,U  A1,WSFREE  AW
)@@G@@ . ABSADR OF HEAD OF FREE LIST@D@@@@AF0010 LA    A2,A1       . MAKE OLD AX
)@@G@@BLOK NEW ANCESTOR @E@@@@       LA,H2 A1,0,A2     . GET FWD POINTER FROM AY
)@@G@@ANCESTOR    @D@@@@       JZ    A1,A(1,1),A(1,2) . IF NONE, END OF CHAIN AZ
)@@G@@@D@@@@       ABSADR A1         . ELSE PREPARE TO LOOK AT IT @C@@@@      BA
)@@G@@ TLE,H1 A0,0,A1    . IS BLOK .GT. NEEDED? @D@@@@       J     A(2,1),A(2,BB
)@@G@@2)    . YES, GO BREAK IT DOWN @E@@@@       TE,H1 A0,0,A1     . IS IT EXABC
)@@G@@CTLY THE RIGHT SIZE?    @C@@@@       J     AF0010      . NO, KEEP LOOKINBD
)@@G@@G     @#@@@@       LI$T    .  @]@@@@       END .@B@@@@/. DYNAMIC STORAGEBE
)@@G@@ ALLOCATION ROUTINES    @G@@@@.      FREE SPACE IS MAINTAINED AS A SORTEBF
)@@G@@D LIST, THE FIRST WD OF EACH  @F@@@@.      FREE BLOCK CONTAINING THE BLKBG
)@@G@@SIZ (H1) AND FWD POINTER (H2) @G@@@@.      BLOCKS ARE ALLOCATED OF EXACTBH
)@@G@@LY THE SIZE REQUESTED, BY SPLITTING @G@@@@.      LARGER BLOCKS, IF NECESBI
)@@G@@SARY. WHEN BLOX ARE FREED, THEY ARE THEN  @D@@@@.      RECOMBINED ON THEBJ
)@@G@@ LEFT AND RIGHT, IF POSSIBLE. @[@@@@.     @E@[@@F      PROC . BLOCK FINDBK
)@@G@@ER PROC--STEPS THRU THE FREE LIST.  @F@[@@FBGE*  NAME  1 . FIND BLOK.GE.BL
)@@G@@ A0 (FOR ALLOCATION) . NOHIT,EQ,GT  @F@[@@FBGT*  NAME  2 . FIND BLOK.GT.BM
)@@G@@ A0 (FOR FREEING)    . NOHIT,GT     @F@[@@FLSIB* NAME  3 . FIND LEFT  SIBN
)@@G@@BLING OF 'BROTHR'--  NOHIT,LEFT     @F@[@@FRSIB* NAME  4 . FIND RIGHT SIBO
)@@G@@BLING OF 'BROTHR'--  NOHIT,RIGHT    @G@[@@FSIB*  NAME  5 . FIND ANY SIBLBP
)@@G@@ING OF 'BROTHR' --   NOHIT,LEFT,RIGHT     @D@[@@TYPE   EQU   F(0,0)     BQ
)@@G@@ . SET NAME LINE ENTRY TYPE   @[@[@@.     @D@[@@LOOP   LA,H2 A1,*FATHER BR
)@@G@@ . PICK UP ADDR OF NEXT SON   @#@[@@       UNLIST.    @C@[@@       JZ   BS
)@@G@@ A1,F(1,1)   . IF NONE, END OF SCAN @ @[@@       SA,H2 A1,SON     .     BT
)@@G@@@G@[@@ DO   TYPE>2 , GO FB$020 . IF LOOKING FOR SIBLINGS BYPASS THIS CODBU
)@@G@@E     @[@[@@.     @B@[@@. SEARCH FOR INSERTION/DELETION POINT     @[@[@@BV
)@@G@@.     @E@[@@       TLE,H1 A0,*SON    . IS CURRENT SON .LE. WHAT WE WANT BW
)@@G@@@F@[@@       J     F(1,4-TYPE) . NO, GRTR. WE'RE DONE (PARENT IS FATHER)BX
)@@G@@@G@[@@ DO TYPE=2 , GO FB$040 . IF ONLY LOOKING FOR GT, DON'T ASSEMBLE = BY
)@@G@@TEST  @C@[@@       TNE,H1 A0,*SON    . IS IT EXACTLY RIGHT? @C@[@@      BZ
)@@G@@ J     F(1,2)      . YES-TAKE EQUALS EXIT @B@[@@ GO FB$040 .  ASSEMBLE SCA
)@@G@@KIP TO NEXT BLOK  @[@[@@.     @B@[@@. TAKE CARE OF FREEING - TEST FOR SICB
)@@G@@BLINGS@[@[@@.     @#@[@@FB$020* NAME .    @F@[@@       TG,H1 A0,*SON    CC
)@@G@@ . IS CURRENT SON .GT. BLOCK BEING FREED? @G@[@@       SA,H2 A1,MOTHER  CD
)@@G@@ . NO, SMALLER.  SON PRECEDES, MIGHT BE MOTHER  @F@[@@ DO TYPE=3 , GO FBCE
)@@G@@$030 . IF ONLY SEEKING LEFT, SKIP RIGHT TEST    @D@[@@       TNE   A1,R1CF
)@@G@@       . IS SON THE RIGHT SIB ?     @E@[@@       J     F(1,TYPE-2) . YESCG
)@@G@@, TAKE RIGHT SIB HIT EXIT     @F@[@@ DO TYPE=4 , GO FB$040 . IF ONLY SEECH
)@@G@@KING RIGHT, SKIP LEFT TEST    @D@[@@FB$030* NAME .           . ASSEMBLE CI
)@@G@@LEFT SIBLING TEST @D@[@@       AA,H1 A1,*SON     . ADD SIZE OF SON TO ITCJ
)@@G@@S LOC @F@[@@       TNE,H2 A1,FRATER  . IS BROTHER TO IMMEDIATE RIGHT OF CK
)@@G@@SON?  @D@[@@       J     F(1,2)      . YES, SON IS LEFT SIBLING   @E@[@@CL
)@@G@@       LA,H2 A1,*FATHER  . NO, RECOVER RELATIVE ADDR OF SON @#@[@@FB$040CM
)@@G@@* NAME  .   @C@[@@       SA,H2 A1,FATHER  . OLD SON IS NEW FATHER @B@[@@CN
)@@G@@LAST   J     LOOP        . GO TRY AGAIN   @]@[@@       LIST.@]@[@@      CO
)@@G@@ END. @[@[@@.     @#@[@@       PROC  .    @#@[@@UNLINK* NAME .    @ @[@@CP
)@@G@@       LA,H2 A1,*SON    .     @#@[@@       UNLIST.    @ @[@@       SA,H2CQ
)@@G@@ A1,*FATHER .     @]@[@@       LIST.@ @[@@       END              .     CR
)@@G@@@#@[@@L      PROC  .    @#@[@@LINK*  NAME  .    @D@[@@       LA,H2 A1,*LCS
)@@G@@(1,1)  . GET SUCCESSOR OF PARENT    @#@[@@       UNLIST.    @E@[@@      CT
)@@G@@ SA,H2 A1,*FRATER  . MAKE IT SUCCESSOR OF BROTHER     @B@[@@       LA,H2CU
)@@G@@ A1,FRATER   . ADDR OF BROTHER@B@[@@       SA,H2 A1,*L(1,1)  . PUT INTO CV
)@@G@@PARENT@]@[@@       LIST.@ @[@@       END               .    @B@@[[. ALLOCW
)@@G@@CATE THE LARGEST AVAILABLE BLOCK -- @#@@[[        INSTRS .  @A@@[[BALARGCX
)@@G@@* SX     X11,BALINK     .     @F@@[[        LA,U   A1,WSFREE      . GET CY
)@@G@@ADDR OF 1ST POINTER TO EXAMINE@F@@[[BL0010  LA,H2  A0,0,A1        . GET CZ
)@@G@@FWD LINK FROM CURRENT POINTER @G@@[[        JZ     A0,BL0020      . IF NDA
)@@G@@ONE, A1 POINTS TO LARGEST BLOCK     @F@@[[        LA     A2,A1          DB
)@@G@@. ELSE TEMP SAVE POINTER TO ANCESTOR@D@@[[        AU,U   A0,0,WSTAG     DC
)@@G@@. MAKE POINTER ABSOLUTE @E@@[[        J      BL0010         . AND GO EXADD
)@@G@@MINE NEXT BLOCK   @E@@[[BL0020  TZ,H2  WSGARB         . ANY GARBAGE LAYIDE
)@@G@@NG AROUND?  @C@@[[        LMJ    X11,GARBAG     . YES, COLLECT IT @D@@[[DF
)@@G@@        LX     X11,BALINK     . RESTORE OUR LINKAGE   @F@@[[        SZ  DG
)@@G@@   WSFFWA         . CLEAR BOUNDARIES OF UNLIKED BLOCK @A@@[[        SZ  DH
)@@G@@   WSFLWA         .     @G@@[[        TNZ,H2 WSFREE         . IS THERE ADI
)@@G@@NYTHING WHICH CAN BE UNLINKED?@F@@[[        J      0,X11          . NO, DJ
)@@G@@EXIT LEAVING POINTERS ZERO    @F@@[[        SZ,H2  0,A2           . NO, DK
)@@G@@CLEAR FWD PTR OF ANCESTOR     @E@@[[        ANU,U  A1,0,WSTAG     . GET DL
)@@G@@REL ADDR OF TARGET BLOCK@F@@[[        SA     A2,WSFFWA      . POST 1ST WDM
)@@G@@D ADDR OF UNLINKED BLOCK@E@@[[        AA,H1  A2,0,A1        . ADD ITS SIDN
)@@G@@ZE TO ITS ADDR    @E@@[[        ANA,U  A2,1           . GET TRUE LAST WODO
)@@G@@RD ADDR     @B@@[[        SA     A2,WSFLWA      . POST IT   @C@@[[      DP
)@@G@@  J      0,X11          . NORMAL EXIT     @[@@[[.     @G@@[[. GET SIZE ODQ
)@@G@@F LARGEST AVAILABLE BLOCK-- USED WHEN AN INTERNAL CHOICE OF @G@@[[. ALGODR
)@@G@@RITHMS IS TO BE MADE DEPENDING ON HOW MUCH SPACE IS AVAILABLE     @[@@[[DS
)@@G@@.     @A@@[[BFLARG* SX     X11,BALINK     .     @E@@[[        TZ,H2  WSGDT
)@@G@@ARB         . ANY GARBAGE TO BE COLLECTD? @C@@[[        LMJ    X11,GARBADU
)@@G@@G     . YES, COLLECT IT @C@@[[        LX     X11,BALINK     . RESTORE LIDV
)@@G@@NKAGE @D@@[[        LA,U   A0,0           . SET INITIAL SIZE ZERO @D@@[[DW
)@@G@@        LA,H2  A1,WSFREE      . GET STARTING POINTER  @E@@[[BG0010  JZ  DX
)@@G@@   A1,0,X11       . EXIT IF NO MORE POINTERS    @F@@[[        ABSADR A1 DY
)@@G@@            . ELSE GET ADDR OF TARGET BLOCK     @C@@[[        LA,H1  A0,DZ
)@@G@@0,A1        . PICK UP ITS SIZE@D@@[[        LA,H2  A1,0,A1        . GET EA
)@@G@@ITS FOWARD LINK   @F@@[[        J      BG0010         . AND GO SEE IF ITEB
)@@G@@S THE LAST BLOK   @[;@@@.     @D@@@@. ***** ALLOCATE A BLOK.  A0=SIZE, LEC
)@@G@@OC RETURNED IN A1 @[@@@@.     @#@[@@       INSTRS .   @ @[@@BALLOC* SA  ED
)@@G@@ A2,A2SAVE   .    @G@@[[BALLOG* SA     A0,BAGLOF      . SET FLAG TO ALLOEE
)@@G@@CATE FROM GLOBAL POOL   @A@@[[        J      BA0005         .     @E@@[[EF
)@@G@@BALLOC* SZ     BAGLOF         . LOWER GLOBAL ALLOCATION FLAG@A@@[[BA0005EG
)@@G@@  SA     A2,A2SAVE      .     @E@[@@       AFBGE  0,X11 BA0100    . LOOKEH
)@@G@@ FOR BLOK .GE. REQUIRED @E@[@@       LR,H2 R1,0,A1     . FOUND IT-- GET EI
)@@G@@ITS FOWARD LINK   @E@@[[        AFBGE  BA0020 BA0100  . LOOK FOR BLOCK .EJ
)@@G@@GE. RQUIRED @C@@[[. A BLOCK OF THE EXACT SIZE HAS BEEN FOUND --   @C@@[[EK
)@@G@@BA0010  LR,H2  R1,0,A1        . GET ITS FWD LINK@C^@@@       SR,H2 R1,0,EL
)@@G@@A2     . PUT INTO ITS ANCESTOR@F@@@@       RELADR A1         . SET ADDR EM
)@@G@@OF BLOK FOUND TO RELATIVE     @ @@@@       LA    A2,A2SAVE   .    @B@@@@EN
)@@G@@       J     1,X11       . AND GO HOME    @E@@[[. NO BLOCK LARGE ENOUGH EO
)@@G@@EXISTS, TRY TO MCORE$ FOR MORE SPACE@D@@[[BA0020  SA     A0,BARSIZ      EP
)@@G@@. SAVE REQUEST SIZE     @F@@[[        SA     A2,BALAST      . AND ADDR OEQ
)@@G@@F LAST BLOK ON CHAIN    @G@@[[        AA,U   A0,4095        . ROUND UP RER
)@@G@@EQUEST SIZE TO AN ALLOCATION  @E@@[[        DSL    A0,12+36       . CONVES
)@@G@@ERT TO AN INDEX IN A1   @E@@[[        LXI    A0,A1          . BUILD LEFTET
)@@G@@ HALF OF SIZE WORD@F@@[[        LSSL   A1,12          . MPY INDEX BY 409EU
)@@G@@6 GIVING WORDS    @G@@[[        SA     A1,BAXSIZ      . SAVE NO WDS REQUEV
)@@G@@ESTED FOR EXPANSION     @F@@[[        LXM    A0,A1          . COMPLETE OEW
)@@G@@CNSTRUCTION OF SIZE WORD@G@@[[        AA     A0,WSASIZ      . REQUEST PLEX
)@@G@@US PRESENT SIZE = NEW TOTAL   @E@@[[        ANU    A0,WSMSIZ      . LESSEY
)@@G@@ MAX EXPANSION ALLOWED  @E@@[[        TG,U   A1,1           . CAN WE EXPEZ
)@@G@@AND THIS MUCH     @E@@[[        J      BA0210         . NO, GO TAKE WSFUFA
)@@G@@LL EXIT     @A@@[[. EXPANSION IS ALLOWED, TRY TO DO IT@C@@[[BA0030  SX  FB
)@@G@@   X11,BALINK     . SAVE LINKAGE    @F@@[[        SA     A3,BASVA3      FC
)@@G@@. AND REG WHICH CORGET MAY TRASH    @F@@[[        SA     A0,BASREQ      FD
)@@G@@. SAVE PARAM SPECIFYING REQUEST SIZE@D@@[[        LMJ    X11,CORGET     FE
)@@G@@. TRY TO ACQUIRE IT     @E@@[[        J      BA0200         . IF NOGO, TFF
)@@G@@AKE WSFULL EXIT   @D@@[[. WE'VE GOT THE CORE, SET WS POINTERS ACCORDINGLFG
)@@G@@Y     @G@@[[BA0040  LA,U   A1,WSWORK      . GET ADDR OF NOMINAL START OFFH
)@@G@@ FRE E SPACE@G@@[[        AA,H2  A1,WSASIZ      . PLUS OLD SIZE GIVES LWFI
)@@G@@A+1 = NEW BLOK ADR@E@@[[        LA     A0,BAXSIZ      . GET NO WDS WE EXFJ
)@@G@@PANDED BY   @B@@[[        LSSL   A0,18          . LINE UP   @E@@[[      FK
)@@G@@  SA     A0,0,A1        . CRAM INTO HEADER OF NEW BLOK@F@@[[        LA  FL
)@@G@@   A2,BALAST      . LAST BLOK IS ANCEST OF THIS ONE   @D@@[[        RELAFM
)@@G@@DR A1             . GET RELAD OF THIS BLOK@E@@[[        SA,H2  A1,0,A2  FN
)@@G@@      . AND STUFF LINK INTO ANCEST  @F@@[[        ABSADR A1             FO
)@@G@@. CHG NEW BLOK ADDR BACK TO ABSOLUTE@D@@[[        LA     A0,BASREQ      FP
)@@G@@. GET REQUEST SIZE WORD @E@@[[        SA     A0,WSASIZ      . MAKE IT NEFQ
)@@G@@W ACTUAL SIZE     @C@@[[        LX     X11,BALINK     . RECOVER LINKAGE FR
)@@G@@@D@@[[        LA     A3,BASVA3      . AND WORK REGISTER     @E@@[[      FS
)@@G@@  LA     A0,BARSIZ      . GET SIZE OF ORIGINAL REQUEST@F@@[[        TNE,FT
)@@G@@H1 A0,0,A1        . DID WE MCORE$ EXACTLY ENOUGH?     @C@@[[        J   FU
)@@G@@   BA0010         . YES, GO PROCESS @F@@[[                              FV
)@@G@@. NO, FALL THRU TO SPLIT THE BLOK   @D@@@@. FOUND BLOK .GT. NEEDED-- RELFW
)@@G@@EASE UNUSED PORTION     @E@@@@BA0100 SA    A1,R1       . TEMP SAVE ADDR FX
)@@G@@OF FOUND BLOCK    @E@@@@       ANA,H1 A0,0,A1    . DESIRED SIZE LESS FOUFY
)@@G@@ND SIZE     @G@@@@       LMA   A0,A0       . GIVES SIZE OF BLOK TO REPLAFZ
)@@G@@CE ON FREE LIST   @D@@@@       LA,H2 A1,0,A1     . FWD POINTER FROM FOUNGA
)@@G@@D BLOK@G@@@@       SA,H2 A1,0,A2      . STUFF INTO ANCESTOR OF BLOK WE JGB
)@@G@@UST FOUND   @C@@@@. NOW SEARCH FOR INSERTION POINT OF SPLIT BLOK  @ @@@@GC
)@@G@@       AFBGE BA0110 BA0110 .  @G@@[[. NOW ALLOCATE FROM LEFT OR RIGHT SIGD
)@@G@@DE DEPENDING ON GLOBAL/LOCAL FLAG   @F@@@@BA0110 LA    A1,R1       . RECGE
)@@G@@OVER ADDR OF PREVIOUSLY FOUND BLOK  @G@@[[        AA     A1,BAGLOF      GF
)@@G@@. IF GLOBAL, MOVE TO RIGHT SIDE OF BLOCK  @G@@@@       SA,H1 A0,0,A1    GG
)@@G@@ . SET SIZE OF NEWLY FREED BLOK IN ITS HDR WD   @D@@@@       LR,H2 R1,0,GH
)@@G@@A2     . GET FWD LINK FROM ANCESTOR @E@@@@       SR,H2 R1,0,A1     . SETGI
)@@G@@ FWD LINK OF BLOK BEING FREED @E@@@@       RELADR A1         . REL ADDR GJ
)@@G@@OF BLOK BEING FREED     @E@@@@       SA,H2 A1,0,A2     . TO POINTER FIELGK
)@@G@@D OF ANCESTOR     @G@[@@       AA    A1,A0       . ADDR OF ALLOCATED BLOGL
)@@G@@K=FREED PLUS ITS SIZE   @E@@[[        TZ     BAGLOF         . IS THIS A GM
)@@G@@LOCAL ALLOCATION? @F@@[[        LNA    A0,BAGLOF      . NO GLOBAL. GET AGN
)@@G@@DDR ADJUSTMENT VAL@G@@[[        AA     A1,A0          . ADJUST FREBLK ADGO
)@@G@@R GIVING ALLOCATED ADR  @ [@@@       LA    A2,A2SAVE   .    @B@@@@      GP
)@@G@@ J     1,X11       . SO LONG....    @[@[@@.     @D@[@@. ***** TO FREE A GQ
)@@G@@BLOCK... SET A0=SIZE, A1=BLOCK LOC  @[@[@@.     @#@[@@       PROC .     GR
)@@G@@@D@[@@LSIB*  NAME  . COMBINE LEFT SIBLING (SON) WITH BROTHER@D@[@@      GS
)@@G@@ UNLINK      . REMOVE IT FROM THE FREE LIST     @#@[@@       UNLIST.    GT
)@@G@@@E@[@@       AA,H1 A0,*SON . ADD SIZE OF SON TO SIZE OF BROTHER   @D@[@@GU
)@@G@@       SA,H1 A0,*SON . SAVE SIZE OF COMBINED BLOCK    @#@[@@       ZERONGV
)@@G@@ .    @D@[@@       SZ    *FRATER     . CLEAR CTL WD OF OLD BROTHER@#@[@@GW
)@@G@@       ZEROFF .   @G@[@@       LA,H2 A1,FATHER   . OLD FATHER PRECEDED SGX
)@@G@@ON, SO MUST BE SMALLER  @G@[@@       SA,H2 A1,MOTHER   . HENCE IT ALSO PGY
)@@G@@RECEDES THE COMBINED BLOCK    @G@[@@       LA,H2 A1,SON      . SINCE SONGZ
)@@G@@ WAS LEFT BLOK, MAKE IT BROTHER     @^@[@@       SA,H2 A1,FRATER  @]@[@@HA
)@@G@@       LIST.@]@[@@       END .@#@[@@       PROC .     @E@[@@RSIB*  NAME HB
)@@G@@ . COMBINE RIGHT SIBLING (SON) WITH BROTHER     @#@[@@       UNLINK .   HC
)@@G@@@#@[@@       UNLIST.    @B@[@@       AA,H1 A0,*SON     . ADD SIZE OF SONHD
)@@G@@@E@[@@       SA,H1 A0,*FRATER  . TO BROTHER, GIVING NEW TOTAL SIZE@G@[@@HE
)@@G@@       LA,H2 A1,FATHER   . OLD FATHER PRECEDED SON, SO MUST BE SMALLER  HF
)@@G@@@G@[@@       SA,H2 A1,MOTHER   . HENCE IT ALSO PRECEDES THE COMBINED BLOHG
)@@G@@CK    @#@[@@       ZERON .    @D@[@@       SZ    *SON        . CLEAR POIHH
)@@G@@NTER OF OLD SON   @#@[@@       ZEROFF .   @]@[@@       LIST.@]@[@@      HI
)@@G@@ END .@[@[@@.     @H@[@@. THE CODE BELOW HAS BEEN IN THIS PROGRAM SINCE HJ
)@@G@@DAY 1, AND BECAUSE OF THE     @G@[@@. INDIRECT ADDRESSING, SHOULD RUN SLHK
)@@G@@OWER THAN CODE WHICH EXECUTED USING @G@[@@. ONLY REGISTERS.  FOR REASONSHL
)@@G@@ WHICH ARE PRESENTLY A MYSTERY, IT SEEMS  @F@[@@. THAT IT ACTUALLY RUNS HM
)@@G@@FASTER THAN THE REGISTER VERSION, WHICH IS@G@[@@. PRESERVED FOR HISTORICHN
)@@G@@AL REASONS BELOW.  PERHAPS THE 'NEW' CODE (WHICH@G@[@@. IS, OF COURSE, PHO
)@@G@@ROCCED OUT, HAS SOME EXTRA INSTRUCTIONS I CANT FIND   @H@[@@. NOW.  IN AHP
)@@G@@NY EVENT, WE KEEP BOTH VERSIONS AROUND, BUT USE THE OLDER ONE     @D@[@@HQ
)@@G@@. UNTIL WE FIGURE WHY THE NEW ONE RUNS SLOWER......   @[@[@@.     @ @[@@HR
)@@G@@       ON    OLD         .    @[@[@@.     @]@[@@BLFREE* .   @E@[@@      HS
)@@G@@ SA,H2 A1,FRATER   . SAVE ADDR OF BLOK BEING RELEASED @E@[@@       TG,U HT
)@@G@@ A0,1        . IS AT LEAST 1 WORD TO BE FREED?  @G@[@@       TLE,U A1,WSHU
)@@G@@YTBL**0777777    . IS ADDR TO BE FREED REASONABLE?    @F@[@@       ER   HV
)@@G@@ ERR$        . NO, TRYING TO FREE PERMANENT STUFF!!   @C@[@@       SA,H1HW
)@@G@@ A0,*FRATER  . SAVE ITS SIZE ALSO   @E@[@@       ZERON            . NO NHX
)@@G@@EED TO CLEAR UNLESS DEBUGGING @C@[@@BR0005 AA    A1,WSTAG    . GET ABS AHY
)@@G@@DDR OF BLOCK@C@[@@       LXI,U A1,1        . STEP ONE WD AT A TME @E@[@@HZ
)@@G@@       ANA,U A0,1        . COMPENSATE BLK SIZE FOR HEADER WD@F@[@@      IA
)@@G@@ J     $+2         . AND START CLEARING ALL BUT THE HDR     @D@[@@      IB
)@@G@@ SZ    1,*A1       . CLEAR ALL BUT HEADER WORD  @ @[@@       JGD   A0,$-IC
)@@G@@1      .    @E@[@@       LA,H2 A1,FRATER   . RECOVER RELATIVE ADDR OF BLID
)@@G@@OCK   @C@[@@       LA,H1 A0,*FRATER  . AND ITS SIZE ALSO    @#@[@@      IE
)@@G@@ ZEROFF  .  @D@[@@       AA    A1,A0       . ADD SIZE TO ADDR OF BROTHERIF
)@@G@@@F@[@@       SA    A1,R1       . TEMP SAVE ADDR OF RIGHT HAND SIBLING   IG
)@@G@@@F@[@@. SCAN FREE LIST FOR LEFT/RIGHT SIBLINGS AND POSITION OF THIS BLOKIH
)@@G@@@F@[@@       LA,U  A1,WSFRAD   .  START SEARCH AT START OF FREE LIST    II
)@@G@@@^@[@@       SA,H2 A1,FATHER  @G@[@@       SA,H2 A1,MOTHER   . SAVE MOTHIJ
)@@G@@ER IN CASE BLOK HAS NO SIBLINGS     @E@[@@BR0010 FSIB  BR0400,BR0100,BR0IK
)@@G@@200 . FIND SIBLINGS, IF ANY   @E@[@@. THE LEFT SIBLING HAS BEEN FOUND (IIL
)@@G@@T IS THE CURRENT SON)   @E@[@@BR0100 LSIB              . COMBINE LEFT SIIM
)@@G@@B AND BROTHER     @C@[@@       FRSIB BR0400,BR0110  . FIND RIGHT SIBLINGIN
)@@G@@@F@[@@BR0110 RSIB              . COMBINE RIGHT SIBLING WITH BROTHER     IO
)@@G@@@G@[@@       J     BR0300      . BOTH SIBS FOUND, GO INSERT COMBINED BLOIP
)@@G@@CK    @F@[@@. RIGHT SIBLING FOUND ... COMBINE IT, AND KEEP LOOKING FOR LIQ
)@@G@@EFT   @F@[@@BR0200 RSIB              . COMBINE RIGHT SIBLING WITH BROTHEIR
)@@G@@R     @C@[@@       FLSIB BR0400,BR0210  . FIND LEFT SIBLING @E@[@@BR0210IS
)@@G@@ LSIB              . COMBINE LEFT SIB AND BROTHER     @F@[@@. BOTH SIBS IT
)@@G@@FOUND.. INSERT COMBINED BLOCK (BROTHER) IN FREE LIST  @E@[@@BR0300 FBGT IU
)@@G@@ BR0310,BR0310 . SRCH FOR BLOK .GT. THIS, IF ANY@E@[@@BR0310 LINK  FATHEIV
)@@G@@R      . LINK THIS BLOCK AFTER FATHER     @#@[@@       J     0,X11@C@[@@IW
)@@G@@. SIBLING SRCH HAS EXHAUSTED LIST- LINK AND EXIT@F@[@@BR0400 TLE,H1 A0,*IX
)@@G@@FATHER . DOES THIS BLOCK FOLLOW THE CHAIN END+  @C@[@@       J     BR041IY
)@@G@@0      . NO, GO INSERT IT     @G@[@@       LINK  FATHER      . YES, ADD IZ
)@@G@@THIS BLOK TO EXTREME END OF CHAIN   @A@[@@       J     0,X11       . ANDJA
)@@G@@ QUIT @G@[@@BR0410 LINK  MOTHER      . IMBED BLOK SOMWHERE IN INTERIOR OJB
)@@G@@F CHAIN     @ @[@@       J     0,X11        .   @[@[@@.     @#@[@@      JC
)@@G@@ VARCON  .  @ @[@@FATHER J     0,WSTAG     .    @ @[@@SON    J     0,WSTJD
)@@G@@AG     .    @ @[@@MOTHER J     0,WSTAG     .    @ @[@@FRATER J     0,WSTJE
)@@G@@AG     .    @#@[@@       VARBLS .   @ @[@@A2SAVE RES   1            .   JF
)@@G@@@#@[@@       OFF   .    @]@@[[. WS FULL --@A@@[[BA0200  LX     X11,BALINJG
)@@G@@K     .     @A@@[[        LA     A3,BASVA3      .     @A@@[[        LA  JH
)@@G@@   A0,BASREQ      .     @A@@[[BA0210  LA     A2,A2SAVE      .     @A@@[[JI
)@@G@@        J      0,X11          .     @#@@[[        VARBLS    @A@@[[BASVA3JJ
)@@G@@  RES    1              .     @E@@[[BASREQ  RES    1              . CTL JK
)@@G@@WD FOR GLOBAL REQUEST   @D@@[[BAXSIZ  EQUF   $,,H1          . NO OF WDS JL
)@@G@@OF EXPANSION@D@@[[BARSIZ  EQUF   $,,H2          . ORIGINAL REQUEST SIZE JM
)@@G@@@A@@[[        RES    1              .     @A@@[[BALINK  EQUF   $,,H1    JN
)@@G@@      .     @A@@[[BALAST  EQUF   $,,H2          .     @A@@[[        RES JO
)@@G@@   1              .     @G@@[[BAGLOF  EQUF   $,,XH2         . CAUTION, SJP
)@@G@@IGN EXTENSION IS REQUIRED     @A@@[[        RES    1              .     JQ
)@@G@@@[_@@@/.    @G@@@@. THIS IS THE RECODED VERSION OF THE FREE ROUTINE WHICJR
)@@G@@H, BY ALL RIGHTS  @F@@@@. SHOULD RUN FASTER THAN THE CODE ABOVE, BUT IT JS
)@@G@@DON'T. WHAAAA?????@G@@@@. (NOTE.. IT IS DEBUGGED, AND DOES THE RIGHT THIJT
)@@G@@NGS, IT JUST DOES THEM  @]@@@@. SLOWLY)   @[@@@@.     @E@@@@       ON   JU
)@@G@@1-OLD        . TURN ON SUPPOSEDLY FASTER CODE   @[@@@@.     @#@@@@B     JV
)@@G@@ PROC  .    @G@@@@BSRCH* NAME  0           . SEARCH FREE LIST FOR BUDDIEJW
)@@G@@S ON RITE/LEFT    @ @@@@       UNLI$T            .    @D@@@@BLEFT  EQU  JX
)@@G@@ B(1,2)+0    . STRIP OFF ASTERISK, IF ANY @ @@@@BRITE  EQU   B(1,3)+0   JY
)@@G@@ .    @E@@@@LOOP   JZ    A2,B(1,1)   . EXIT IF NO MORE BLOCKS TO SCAN   JZ
)@@G@@@G@@@@       ABSADR A2         . ELSE SET UP TO EXAMINE CURRENT CANDIDATKA
)@@G@@E     @D@@@@ DO B(1,*3) , JE A2,R1 BRITE  . TEST FOR RIGHT BUDDY  @E@@@@KB
)@@G@@ DO 1-B(1,*2) , GO BI$010     . SETUP FOR LEFT BUDDY TEST   @G@@@@      KC
)@@G@@ AU,H1 A2,0,A2     . ADD SIZE OF BLOK TO ITS ADR, GIVING RITE SIDE@E@@@@KD
)@@G@@       JE    A3,A1 BLEFT      . OUT IF THIS IS LEFT BUDDY   @E@@@@BI$010KE
)@@G@@* NAME . STEP TO NEXT BLOK, TEST FOR INSERTION POINT  @D@@@@       LX   KF
)@@G@@ X11,A2      . SAVE ADDR FOR FWD SCAN     @G@@@@       TG,H1 A0,0,X11   KG
)@@G@@ . IS SIZE OF CANDIDATE .GT. BLOK BEING FREED?  @E@@@@       SX    X11,AKH
)@@G@@NCEST  . NO, IT PRECEDES, SO SAVE ITS ADDR@F@@@@       LA,H2 A2,0,X11   KI
)@@G@@ . PICK UP FWD LINK FROM NEW CANDIDATE    @D@@@@       J     LOOP       KJ
)@@G@@ . AND CONTINUE SEARCHING     @#@@@@       LI$T  .    @#@@@@       END  KK
)@@G@@ .    @[@@@@.     @G@@@@       PROC  . COMBINE BLOCK WHOSE ADDR IS IN A2KL
)@@G@@ WITH BLOK BEING FREED  @ @@@@COMB*  NAME  0           .    @ @@@@      KM
)@@G@@ UNLI$T            .    @F@@@@       AA,H1 A0,0,A2     . PUT ITS SIZE INKN
)@@G@@TO CORRENT TOTAL SIZE   @C@@@@       LA,H2 A2,0,A2     . GET ITS FWD LINKO
)@@G@@K     @B@@@@       SA,H2 A2,0,X11    . CLOSE THE CHAIN@G@@@@       SX   KP
)@@G@@ X11,ANCEST  . SAVE CURRENT ANCESTOR FOR INTERIOR IMBEDDING @#@@@@      KQ
)@@G@@ LI$T  .    @#@@@@       END   .    @[@@@@.     @ @@@@       INSTRS     KR
)@@G@@       .    @E@@@@BLFREE* TG,U A0,1        . IS AT LEAST 1 WD TO BE FREEKS
)@@G@@D?    @E@@@@       TLE,U A1,WSYTBL**0777777    . IS ITS ADDR REASONABLE?KT
)@@G@@@ @@@@       ER    ERR$        .    @C@@@@       SX,H2 X11,BFLINK  . SAVKU
)@@G@@E RETURN ADDR     @D@@@@       DS    A2,A2SAVE   . TEMP SAVE WORKING REGKV
)@@G@@S     @E@@@@       ABSADR A1         . MAKE ADDR OF BLOK BEING FREED ABSKW
)@@G@@@G@@@@       AU    A1,A0       . ADD SIZE GIVING ADDR OF BLOK TO ITS RIGKX
)@@G@@HT    @E@@@@       SA    A2,R1       . TEMP SAVE ADDR OF RIGHT BUDDY    KY
)@@G@@@A@@@@. INITIALIZE POINTERS FOR SEARCH    @E@@@@BF0010 LX,U  X11,WSFREE KZ
)@@G@@ . ABS ADDR OF START OF FREE LIST   @F@@@@       SX    X11,ANCEST  . MAKLA
)@@G@@E ANCESTOR FOR INTERNAL INSERTION   @E@@@@       LA,H2 A2,0,X11    . PICLB
)@@G@@K UP ADDR OF BLOK POINTED TO  @[@@@@.     @F@@@@BF0100 BSRCH BF0500,*BF0LC
)@@G@@200,*BF0300     . SEARCH FOR EITHER BUDDY @G@@@@. SCAN HAS DETECTED LEFTLD
)@@G@@ BUDDY-- SET LINKS, CONTINUE SEARCH FOR RIGHT   @F@@@@BF0200 LA    A1,A2LE
)@@G@@       . MAKE BUDDY ADDR FWA OF BLOK BEING FREED@F@@@@       COMB       LF
)@@G@@       . COMBINE ITS SIZE, STEP TO NEXT LINK    @G@@@@       BSRCH BF050LG
)@@G@@0,,*BF0210  . CONTINUE SEARCH FOR RIGHT BUDDY ONLY    @F@@@@BF0210 COMB LH
)@@G@@             . COMBINE FOUND RIGHT BUDDY AND STEP     @E@@@@       J    LI
)@@G@@ BF0400      . GO FWD SCAN FOR INSERTION POINT  @G@@@@. SCAN HAS DETECTELJ
)@@G@@D RIGHT BUDDY-- LINK AND CONTINUE SEARCH FOR LEFT ONE @F@@@@BF0300 COMB LK
)@@G@@             . COMBINE RITE WITH CURRENT, SCAN NEXT   @G@@@@       BSRCHLL
)@@G@@ BF0500,*BF0310,0 . TEST CURRENT BLOK FOR LEFT BUDDY ONLY   @F@@@@BF0310LM
)@@G@@ LA    A1,A2       . LEFT BUDDY IS FWA OF BLOK BEING FREED  @E@@@@      LN
)@@G@@ COMB              . FOLD INTO FREEBLOK, STEP FWD     @E@@@@       J    LO
)@@G@@ BF0400      . AND GO FWD SRCH FOR INSERT POINT @F@@@@. BOTH BUDDIES HITLP
)@@G@@ AND COMBINED-- CONTINUE SCAN TO INSERTION POINT@F@@@@       SA    A2,ANLQ
)@@G@@CEST   . CURRENT BLOK NOT GTR, MAKE IT ANCESTOR @ @@@@       LX,H2 A2,0,LR
)@@G@@A2     .    @G@@@@BF0400 JZ    A2,BF0500   . IF NO FWD LINK, USE MOST RELS
)@@G@@CENT ANCESTOR     @F@@@@       ABSADR A2         . ELSE SET UP TO LOOK ALT
)@@G@@T CURRENT BLOCK   @G@@@@       TG,H1 A0,0,A2     . IS CURRENT BLOK .GT. LU
)@@G@@THE ONE BEING FREED?    @C@@@@       J     BF0400-2    . NO, KEEP LOOKINLV
)@@G@@G     @F@@@@. END OF LIST HIT DURING BUDDY SEARCH-- INSERT BLOK IN FREE LW
)@@G@@LIST  @F@@@@BF0500 LA    A2,ANCEST   . ADDR OF BLOK WHICH PRECEDES THIS LX
)@@G@@ONE   @G@@@@       SA,H1 A0,0,A1     . POST SIZE OF NEWLY FREED BLOK IN LY
)@@G@@ITS HEADER  @D@@@@       LA,H2 A0,0,A2     . GET FWD LINK OF ANCESTOR   LZ
)@@G@@@D@@@@       SA,H2 A0,0,A1     . PUT INTO NEWLY FREED BLOCK @D@@@@      MA
)@@G@@ RELADR A1         . ADDR OF BLOK BEING FREED   @B@@@@       SA,H2 A1,0,MB
)@@G@@A2     . TO ANCESTOR    @C@@@@       DL    A2,A2SAVE   . RECOVER SAVED RMC
)@@G@@EGS   @A@@@@       J     *BFLINK     . AND EXIT @ @@@@       VARBLS     MD
)@@G@@       .    @D@@@@A2SAVE RES   2           . TEMP STORAGE OF A2 AND A3  ME
)@@G@@@G@@@@ANCEST RES   1           . ADDR OF LAST BLOK SMALLER THAN BLOK TO MF
)@@G@@FREE  @ @@@@       VARCON            .    @G@@@@BFLINK +0,$-$           MG
)@@G@@ . RETURN ADDR (CAUTION-- INDIRECTION THRU HERE)@]@@@@       OFF  @F@@[[MH
)@@G@@GARBAF* . DUMMY RTNE USED UNTIL NEW GARBAGE COLLECTOR IS TURNED ON@D@@[[MI
)@@G@@GARBAG  SZ     WSGARB         . CLEAR GARBAGE LIST PTR@A@@[[        J   MJ
)@@G@@   0,X11          . EXIT@G@@@@/. CLEAR ALL FREE BLOCKS TO ZERO-- NEEDED MK
)@@G@@IN PRODUCTION VERSIONS OF APL @G@@@@. SO THAT )SAVE ROUTINE WILL BE ABLEML
)@@G@@ TO COMPACT IDENTICAL LOCATIONS     @G@@@@. CONTAINING ZEROES.  REDUNDANMM
)@@G@@T IN DEBUGGING ASSEMBLIES (UOM NON-ZERO), @G@@@@. AS THEN BLOCKS ARE ZERMN
)@@G@@OED EACH TIME THEY ARE FREED (FOR PRETTY DUMPS) @[@@@@.     @#@@@@      MO
)@@G@@ INSTRS  .  @E@@@@ZRFREE* LA,U A4,0        . GET A ZERO TO BE BROADCASTEMP
)@@G@@D     @G@@@@       LA,U  A3,A4       . MAKE 'FROM' REG POINT TO THE ZEROMQ
)@@G@@ WE JUST GOT@D@@@@       LXI,U A2,1        . 'TO' REG INCR IS ONE WORD  MR
)@@G@@@G@@@@       LA,U  A0,WSFREE   . SET ADDR OF LAST BLOK HDR = HEAD OF LISMS
)@@G@@T     @C@@@@. LOOP OVER ALL BLOCKS ON FREE STORAGE LIST     @F@@@@ZF0010MT
)@@G@@ LA,H2 A0,0,A0     . RELADR OF NEXT BLOK FROM LAST BLOK     @D@@@@      MU
)@@G@@ JZ    A0,1,X11    . IF NO MORE BLOX, GET OUT   @E@@@@       ABSADR A0  MV
)@@G@@       . HDR WD ADDR OF BLOK TO BE CLEARED@D@@@@       LA,H1 A1,0,A0    MW
)@@G@@ . GET BLOK SIZE FROM HDR WD  @D@@@@       JZ    A1,ZF0900   . ZERO BLOCMX
)@@G@@K SIZE IS SYSERR  @D@@@@       TLE,U A1,2        . IS BLOCK AT LEAST 2 WMY
)@@G@@DS?   @C@@@@       J     ZF0010      . NO, NOTHING TO CLEAR @E@@@@      MZ
)@@G@@ ANA,U A1,1        . YES, DON'T COUNT HEADER WORD     @D@@@@       LR   NA
)@@G@@ R1,A1       . SET NO OF WDS TO BE CLEARED@E@@@@       LXM,U A2,1,A0    NB
)@@G@@ . FWA TO CLEAR IS WORD AFTER HEADER@E@@@@       BT    A2,0,*A3    . BRONC
)@@G@@ADCAST ZEROES FROM A4 TO WS   @D@@@@       J     ZF0010      . GO BACK FND
)@@G@@OR NEXT BLOCK     @F@[@@ZF0900 ERROR YSYSTM      . FREE LIST BUSTED (ZERNE
)@@G@@O LENGTH BLOCK)   @ @[@@       J     0,X11       .    @[@[@@.     @D@@[[NF
)@@G@@ZF0900  EQU    0              . SYSERR IS JUMP TO IGDM@E#@@@/.    GLOBALNG
)@@G@@ CORE MGMNT RTNES-- HANDLE MCORE$/LCORE$ FOR    @G@@@@.     MASTER TERMINH
)@@G@@NALS, )COPY CMNDS, )LOAD OR )CLEAR OF VARIABLE SIZE WS@G@@[[. THE ONE-WONI
)@@G@@RD COMMON BLOCKS BELOW ARE 'IN'NED IN THE MAP SO AS TO LIE  @G@@[[. AT TNJ
)@@G@@HE START OF THE MASTER CONSOLE AND INITIALIZATION CODE BLOCKS.    @G@@[[NK
)@@G@@. THIS GETS US SOME DEFINED TAGS WE CAN USE AS BASE ADDRESSES FOR LCORE$NL
)@@G@@@[@@[[.     @#@@[[        MASTER    @A@@[[MCORIG  '**MC**'              NM
)@@G@@.     @E@@[[STMAST  INFO   2 MCINFO       . DEFINE MASTER CONSOLE BLOCK NN
)@@G@@@#@@[[        INITAL .  @A@@[[INORIG  '**IN**'              .     @E@@[[NO
)@@G@@STINIT  INFO   2 ININFO       . DEFINE INITIALIZATION BLOCK @[@@@@.     NP
)@@G@@@G@@@@.     CORE INITIALIZATION-- SET UP FOR DEFAULT SIZE WS, MASTER CONNQ
)@@G@@SOLE  @G@@[[. THIS CODE IS CALLED FROM THE BEGINNING OF XQTSUP (AFTER A NR
)@@G@@SYSERR) AND @F@@[[. FROM SETUP (AT INITIAL SIGNON).  THE LOWER WS POINTENS
)@@G@@RS HAVE BEEN@F@@[[. ALREADY INITIALIZED, AND THE UPPER WORKSPACE IS ALL NT
)@@G@@FREE SPACE  @[@@@@.     @ @@@@       INSTRS            .    @A@@@@CORININU
)@@G@@* SX,H2 X11,COLINK      .     @E@[@@       LA,U  A0,WSID     . CURRENT SNV
)@@G@@ETTING OF BASE OF WS    @E@[@@       SA    A0,RCAFWA   . POST FIRST WORDNW
)@@G@@ ADDR OF ACTIVE WS@G@[@@       LA,U  A0,WSLAST   . LAST LOCN IN DEFAULT NX
)@@G@@(ASSEMBLY PARAMETER) WS @E@[@@       SA    A0,RCALWA   . SAVE LAST WORD NY
)@@G@@ADDR OF ACTIVE WS @F^@@@       LA,U  A0,LASTD$   . LAST LOCATION ASSIGNENZ
)@@G@@D BY COLLECTOR    @D@@@@       SA    A0,RCLASD   . SAVE FINAL D-BANK ADDOA
)@@G@@R     @G@@@@       SZ    RCCFWA      . CLEAR ORIGIN OF COPY WS(IT DOES NOB
)@@G@@OT EXIST)   @A@@@@. CHECK FOR MASTER CONSOLE, ETC     @G@[@@CI0010 LA,U OC
)@@G@@ A0,LSASG    . GET BASE ADDR TO ZAP INITIALIZATION CODE     @G@@][CI0010OD
)@@G@@ LA,U  A0,INORIG   . GET BASE ADDR TO ZAP INITIALIZATION CODE     @D[@@@OE
)@@G@@       TNZ   RCMASF      . ARE WE A MASTER CONSOLE?   @E@[@@       LA,U OF
)@@G@@ A0,IBMAST   . NO, WE CAN ZAP THAT CODE, TOO    @E@@][       LA,U  A0,MCOG
)@@G@@ORIG   . NO, WE CAN ZAP THAT CODE, TOO    @D@[@@       SA    A0,X11     OH
)@@G@@ . TEMP SAVE NEW WS BASE ADDR @F@[@@       TG,U  A0,WSID     . ARE WE REOI
)@@G@@ALLY MOVING TO A LOWER ADDR?  @D@[@@       TNE,U A0,WSID     . NO-- IS IOJ
)@@G@@T THE SAME PLACE? @C@[@@       J     $+2         . IF EITHER, WE'RE OK  OK
)@@G@@@E@[@@       ER    EABT$       . ELSE SYSERR (WE CANNOT MOVE UP)  @F@@[[OL
)@@G@@        SA     A0,RCAFWA      . POST NEW START ADDR OF WORKSPACE  @DA@@@OM
)@@G@@       LXI,U A0,1        . SET INCREMENT OF TO-ADDR   @G@@@@       LXI,UON
)@@G@@ X1,1        . SET INCR OF FROM-ADDR (COLLECTED WS ORG)     @E@[@@      OO
)@@G@@ LA    A1,RCALWA   . LAST LOCN IN CURRENT ACTIVE WS   @D@[@@       ANA  OP
)@@G@@ A1,RCAFWA   . LESS ORIGIN=NO WDS LESS 1  @D@[@@       LR,U  R1,1,A1    OQ
)@@G@@ . PLUS 1=NO OF WDS TO MOVE   @D@[@@       BT    A0,0,*X1    . MOVE THE OR
)@@G@@ENTIRE WS DOWN    @D@[@@       LX,U  X1,0,X11    . RESET BASE OF ACTIVE OS
)@@G@@WS    @C@[@@       SX    X1,RCAFWA   . POST FWA OF ACTIVE WS@D@[@@      OT
)@@G@@ AA,U  A1,0,X1     . ADD FWA TO OLD  SIZE-1     @D@[@@       LA,U  A0,0,OU
)@@G@@X1     . X1 IS BASE OF ACTIVE WS    @F@@[[        LA     A1,WSFREE      OV
)@@G@@. GET WS REL ADDR OF 1ST FREE WORD  @G@@[[        LR,U   R1,1+1+2,A1    OW
)@@G@@. PLUS 1ST WD, LAST WD, AND FUDGE FACTOR  @F@@[[        BT     A0,0,*X1 OX
)@@G@@      . MOVE FIXED POINTER AREW OF WS DOWN@G@@[[        LX     X1,RCAFWAOY
)@@G@@      . NOW ESTABLISH BASE FOR NEWLY MOVED WS   @G@@[[        LA     A0,OZ
)@@G@@RCAFWA      . PUT IT WHERE WE CAN COMPUTE WITH IT     @FC@@@       SA   PA
)@@G@@ A0,RCFFWA   . AND ALSO 1ST WD OF FILE CTL TABLES     @ @@@@       ANA,UPB
)@@G@@ A0,1        .    @D@@@@       SA    A0,RCFLWA   . MARK LAST WORD OF FILPC
)@@G@@ES    @D@@@@       SZ    RCNFIL      . CLEAR NO OF ASSIGNED FILES @C@@@@PD
)@@G@@       LA,U  A0,FCTSIZ   . NO OF WORDS PER FCT  @A@@@@       SA    A0,RCPE
)@@G@@FSIZ   . POST IT  @E@[@@       J     CSHRNK      . AND GO TRY TO SHRINK PF
)@@G@@THE D-BANK  @G@@[[        LA,U   A1,WSWORK      . GET ADDR OF NOMINAL STPG
)@@G@@ART OF FREE SPACE @F@@[[        AA     A1,WSNSIZ      . POUS NOMINAL SIZPH
)@@G@@E IN WDS = LWA+1  @E@@[[        ANA,U  A1,1           . COMPENSATE TO GEPI
)@@G@@T TRUE LWA  @G@@[[        J      CSHGRO         . GO SEE IF WE SHOULD SHPJ
)@@G@@RINK ORG GROW     @[[@@@.     @C@@@@. ***** PROCS TO ADJUST POINTERS FORPK
)@@G@@ MOVED WS'S @[@@@@.     @C@@@@P      PROC  . ADJUST BASEREGS FOR MOVED WPL
)@@G@@S     @A@@@@XBASEI* NAME 0           . INCREMENT@A@@@@XBASED* NAME 1    PM
)@@G@@       . DECREMENT@ @@@@       UNLI$T            .    @C@@@@ DO P(0,0) ,PN
)@@G@@K DO P(1) , ANX P(1,K),RCFSIZ    .  @C@@@@ DO 1-P(0,0) ,K DO P(1) , AX PPO
)@@G@@(1,K),RCFSIZ   .  @#@@@@       LI$T  .    @#@@@@       END   .    @[@@@@PP
)@@G@@.     @C@@@@P      PROC  . ADJUST POINTERS IN LIVE CORE     @ @@@@ARBASIPQ
)@@G@@* NAME 0           .    @ @@@@ARBASD* NAME 1           .    @#@@@@      PR
)@@G@@ PROC  .    @#@@@@Q*     NAME  .    @ @@@@       AU    A1,P(1,K)   .    PS
)@@G@@@ @@@@       SA    A2,P(1,K)   .    @#@@@@       END   .    @ @@@@      PT
)@@G@@ UNLI$T            .    @A@@@@ DO 1-P(0,0) , LA  A1,RCFSIZ  .     @A@@@@PU
)@@G@@ DO P(0,0)   , LNA A1,RCFSIZ  .     @ @@@@K DO P(1) , Q            .    PV
)@@G@@@#@@@@       LI$T  .    @#@@@@       END   .    @[@@@@.     @D@@@@. ACQUPW
)@@G@@IRE AN FCT BUFFER (DIRECTLY BELOW ACTIVE WS)    @[@@@@.     @ @@@@COGFCTPX
)@@G@@* SX   X11,COLINK  .    @D@@@@       LA    A0,RCALWA   . LWA OF CURRENT PY
)@@G@@ACTIVE WS   @D@@@@       AA    A0,RCFSIZ   . PLUS NO OF WDS/FCT BUF     PZ
)@@G@@@D@@@@       LA    A5,A0       . TEMP SAVE NEW END ADDR     @D@@@@      QA
)@@G@@ LA,U  A0,2,A0     . BOOST IT FOR GOOD LUCK     @A@[@@       ER    MCOREQB
)@@G@@$      . AND GIMME@E@@[[        SZ     ERRCOR         . CLEAR MCORE$ FAIQC
)@@G@@LURE FLAG   @B@@[[        ER     MCORE$         . AND GIMME @F@@[[      QD
)@@G@@  TZ     ERRCOR         . DOD WE GAT AN MCORE$ CONTINGENCY? @C@@[[      QE
)@@G@@  J      CO0999         . YES, GDUNGE     @C[@@@. NOW MOVE ACTIVE WS UP QF
)@@G@@OUT OF THE BUF SPACE    @D@@@@CF0010 LA    A2,RCALWA   . CURRENT END OF QG
)@@G@@WS IS 'FROM'@E@@@@       ANU   A2,RCFLWA   . LESS LWA OF SPACE USED FOR QH
)@@G@@FCT'S @E@@@@       LR,U  R1,0,A3     . SET UP NO OF WORDS TO BE MOVED   QI
)@@G@@@C@@@@       LXI,XU A2,-1      . SET INCR OF 'FROM'   @C@@@@       LA   QJ
)@@G@@ A1,A5       . NEW END OF WS IS 'TO'@C@@@@       LXI,XU A1,-1      . SETQK
)@@G@@ ITS INCREMENT    @B@@@@       BT    A1,0,*A2    . AND PUSH WS UP @A@@@@QL
)@@G@@. ADJUST PTRS TO REFLECT MOVED WS   @B@@@@CF0020 LA    A1,RCNFIL   . NO QM
)@@G@@OF FILES    @A@@@@       AA,U  A1,1        . BUMP IT  @C@@@@       SA   QN
)@@G@@ A1,RCNFIL   . POST UPDATED FILE CT @E@@@@       LA,U  A0,0,X1     . BUFQO
)@@G@@ LOC IS WHERE WS USED TO BE   @F@@@@       XBASEI X1,X3,X5,X7,X9  . BUMPQP
)@@G@@ LIVE XREGS FOR NEW WS LOCNS  @F@@@@       ARBASI RCAFWA,RCALWA,RCFLWA,LQQ
)@@G@@FTDAD,RITDAD,LFTDMD,RITDMD    @E@@@@       J     CORXIT      . RETURN LEQR
)@@G@@AVING BUF ADDR IN A0    @[@@@@.     @B@@@@. FREE AN FCT BUFFER (BUF ADDRQS
)@@G@@ IN A0)     @[@@@@.     @ @@@@COFFCT* SX   X11,COLINK  .    @C@@@@      QT
)@@G@@ LXI,U A0,1        . SET INCR OF 'TO' CTRL@D@@@@       AU    A0,RCFSIZ  QU
)@@G@@ . BUMP TO GET 'FROM' ADDR    @E@@@@       LA    A2,RCALWA   . END OF WSQV
)@@G@@ IS LAST LOCN TO MOVE   @C@@@@       ANA,U A2,0,A1     . LESS 1ST TO MOVQW
)@@G@@E     @D@@@@       LR,U  R1,1,A2     . SET NO WDS TO BE MOVED     @D@@@@QX
)@@G@@       BT    A0,0,*A1    . MOVE WS AND TABLE BOTH DOWN@E@@@@       LA   QY
)@@G@@ A1,RCNFIL   . UPDATE NO OF ALLOCATED FCT'S     @ @@@@       ANA,U A1,1 QZ
)@@G@@       .    @ @@@@       SA    A1,RCNFIL   .    @A@@@@. DECREMENT POINTERA
)@@G@@RS INTO THE WS    @A@@@@       XBASED X1,X3,X5,X7,X9  .     @F@@@@      RB
)@@G@@ ARBASD RCAFWA,RCALWA,RCFLWA,LFTDAD,RITDAD,LFTDMD,RITDMD .  @E@@@@      RC
)@@G@@ LA    A1,RCALWA   . GET ADDR FOR USE BY SHRINK RTNE  @D@[@@       J    RD
)@@G@@ CSHRNK      . AND GO GET RID OF THE CORE @[@[@@.     @E@[@@. ESTABLISH RE
)@@G@@A NEW ACTIVE WS OF VARIABLE SIZE (NO WDS IN A0) @C@[@@.         (INVOKEDRF
)@@G@@ BY )CLEAR AND/OR )LOAD )     @ @[@@CORACT* SX   X11,COLINK  .    @C@[@@RG
)@@G@@       LA    A2,RCALWA   . CURRENT ENDING ADDR  @D@[@@       ANA   A2,RCRH
)@@G@@AFWA   . LESS START=NO WDS LESS 1   @E@[@@       TNE,U A0,1,A2     . IS RI
)@@G@@PRESENT SPACE ALLOCATION OK?  @C@[@@       J     CORXIT      . YES, NORMRJ
)@@G@@AL EXIT     @E@[@@       AU,U  A0,WSID     . NEW NO WDS+CURRENT BASE=LWARK
)@@G@@+1    @E@[@@       ANA,U A1,1        . COMPUTE ACTUAL LWA FOR NEW WS    RL
)@@G@@@D@[@@       TLE,U A0,1,A2     . IS OLD WS SMALLER THAN NEW?@E@[@@      RM
)@@G@@ J     CSHRNK      . NO GRTR, GO SHRINK TO NEW SIZE   @E@[@@       SA   RN
)@@G@@ A1,RCALWA   . POST NEW ENDING ADDR OF ACTIVE WS@E@[@@       J     CGROWRO
)@@G@@       . AND GO MCORE$ TO WHAT WE NEED    @[@[@@.     @C@[@@. ESTABLISH RP
)@@G@@A COPY WS  (SIZE IN WORDS IN A0)    @[@[@@.     @ @[@@CORCPY* SX,H2 X11,RQ
)@@G@@COLINK .    @D@[@@       TZ    RCCFWA      . IS THERE ALREADY A COPY WS?RR
)@@G@@@B@[@@       J     CO0900      . YES, SYSERR    @D@[@@       LA    A1,RCRS
)@@G@@ALWA   . LWA OF CURRENT ACTIVE WS   @F@[@@       AA,U  A1,2        . DONRT
)@@G@@'T BE HALF-SAFE--ADD A FEW EXTRA WDS@D@[@@       SA    A1,RCCFWA   . POSRU
)@@G@@T BASE ADDR OF COPY WS  @E@[@@       AA,U  A1,0,A0     . PLUS NO WDS NEERV
)@@G@@DED=LWA PLUS 1    @F@[@@       ANA,U A1,1        . DECREASE TO GET ACTUARW
)@@G@@L LWA OF COPY WS  @D@[@@       SA    A1,RCCLWA   . POST LAST WORD OF COPRX
)@@G@@Y WS  @C@[@@       J     CGROW       . GO EXPAND THE D-BANK @E@@[[      RY
)@@G@@  J      CK0010         . AND GO SHRINK DOWN TO IT    @E@@[[/. GET CORE RZ
)@@G@@FOR 'CURRENT' WORKSPACE-- A0=SIZE INDEX WORD    @[@@[[.     @A@@[[CORGETSA
)@@G@@* SX     X11,COLINK     .     @G@@[[        LA,U   A0,0,A0        . ISOLSB
)@@G@@ATE NOMINAL FREE SPACE IN WORDS     @G@@[[        AU,U   A0,WSWORK-WSID SC
)@@G@@. PLUS WDS OF OVERHEAD = TOT SIZE IN A1   @E@@[[        LA,U   A0,WSID  SD
)@@G@@      . GET BASE ADDR OF CURRENT WS @F@@[[        AA     A1,A0          SE
)@@G@@. ADD FWA TO SIZE GIVING LWA + 1    @E@@[[        ANA,U  A1,1           SF
)@@G@@. ADJUST GIVING EXACT LWA     @F@@[[        TNE    A0,RCCFWA      . IS WSG
)@@G@@S TO ALLOCATE THE COPY WS?    @C@@[[        J      CS0100         . YES,SH
)@@G@@ GO DO IT   @E@@[[        TE     A0,RCAFWA      . NO, IS IT THE ACTIVE WSI
)@@G@@S?    @G@@[[        ER     ERR$           . IF NOT, A RANDOM NUMBER GOT SJ
)@@G@@INTO A0     @F@@[[        TNZ    RCCFWA         . YES, DOES A COPY WS ALSK
)@@G@@SO EXIST?   @F@@[[        J      CSHGRO         . NO, GO SET UP FOR ACTISL
)@@G@@VE WS ONLY  @[@@[[.     @G@@[[. EXPAND ACTIVE WS UNDERNEATH A COPY WS-- SM
)@@G@@NOTE: WHEN COPY WS WAS ESTAB- @G@@[[. LISHED (SEE BELOW), WE ACQUIRED THSN
)@@G@@E NEEDED EXTRA SPACE IN ADVANCE     @[@@[[.     @G@@[[CS0010  TG     A1,SO
)@@G@@RCCFWA      . ARE WE TRYING TO EXPAND INTO THE COPY WS@G@@[[        J   SP
)@@G@@   CO0999         . YES, CANT DO THAT SO TAKE WSFULL EXIT   @F@@[[      SQ
)@@G@@  SA     A1,RCALWA      . NO, POST NEW LWA FOR ACTIVE WS    @D@@[[      SR
)@@G@@  J      CORXIT         . AND GRACEFULLY EXIT   @[@@[[.     @G@@[[. ALLOSS
)@@G@@CATE FOR A COPY WS.  IN ORDER TO AVOID HAVING TO ATTEMPT TO MOVE  @G@@[[ST
)@@G@@. THE COPY WS DURING THE COPY (WITH SUBSEQUENT INVALIDATION OF LIVE     SU
)@@G@@@G@@[[. GLOBAL POINTERS INTO IT), WE PUT THE START OF THE COPY WS HIGH ESV
)@@G@@NOUGH @G@@[[. SO THAT THE ACTIVE WS CAN EXPAND TO ITS MAXIMUM BENEATH ITSW
)@@G@@ WITHOUT    @F@@[[. SUBSEQUENT MCORE$S OR MOVEMENT OF THE COPY WS OUT OTSX
)@@G@@ THE WAY.   @[@@[[.     @F@@[[CS0100  SA     A1,RCCLWA      . SAVE TENTASY
)@@G@@TIVE END ADDR OF COPY WS@E@@[[        LX     X1,RCAFWA      . RESET BASESZ
)@@G@@ TO ACTIVE WS     @F@@[[        LA,U   A0,WSWORK      . GET NOMINAL FREETA
)@@G@@ SPACE START ADDR @F@@[[        AA,H2  A0,WSMSIZ      . PLUS MAX IT CAN TB
)@@G@@EXPAND TO =LWA+1  @F@@[[        AA,U   A0,2           . FUDGE GIVING NEWTC
)@@G@@ FWA FOR COPY WS  @E@@[[        TLE    A0,RCALWA      . IS ACTIVE WS ALRTD
)@@G@@EADY THERE? @E@@[[        ER     ERR$           . YES, A MONUMENTAL FAILTE
)@@G@@URE   @F@@[[        ANU    A0,RCCFWA      . NO, GET NEW START LESS OLD STF
)@@G@@TART  @E@@[[        AA     A1,RCCLWA      . PLUS OLD END GIVES NEW END  TG
)@@G@@@C@@[[        SA     A0,RCCFWA      . POST NEW FWA    @C@@[[        SA  TH
)@@G@@   A1,RCCLWA      . AND NEW LWA     @F@@[[        LX     X1,RCCFWA      TI
)@@G@@. REESTABLISH BASEREG FOR COPY WS   @E@@[[        J      CG0010         TJ
)@@G@@. AND GO DO THE ALLOCATION    @D@@[[. SHRINK OR GROW ACTIVE WS TO ENDINGTK
)@@G@@ ADDR IN A1--     @C@@[[CSHGRO  SA     A1,RCALWA      . POST NEW LWA    TL
)@@G@@@E@@[[CG0010  TG     A1,RCLASD      . DO WE HAVE MORE THAN ENUF?  @D@@[[TM
)@@G@@        J      CGROW          . NO, BETTER GO GROW    @D@@[[        J   TN
)@@G@@   CK0010         . YES, GO GIVE SOME UP  @[W@@@.     @A@@@@. GET RID OFTO
)@@G@@ THE CURRENT COPY WS    @[@@@@.     @ @@@@CORCEN* SX,H2 X11,COLINK .    TP
)@@G@@@F@@@@       TNZ   RCCFWA      . IS THERE REALLY ONE TO GET RID OF?     TQ
)@@G@@@B@@@@       J     CO0900      . NO, SYSERR     @E@@@@       SZ    RCCFWTR
)@@G@@A      . YES, POST THE FACT THAT IT'S GONE@C@@@@       LA    A1,RCALWA  TS
)@@G@@ . GET END OF ACTIVE WS @D@[@@       J     CSHRNK      . AND GO CUT IT DTT
)@@G@@OWN TO SIZE @D@@[[                              . FALL THRU TO SHRINK ITTU
)@@G@@@[[@@@.     @C@@@@. SHRINK THE D-BANK (LAST ACTIVE WS ADDR IN A1) @[@@@@TV
)@@G@@.     @E@@@@CSHRNK SA    A1,RCALWA   . SAVE NEW LAST ADDR OF ACTIVE WS  TW
)@@G@@@E@[@@       LA,U  A0,EXEC8    . GET CURRENT EXEC8 BASE LEVEL     @E@@][TX
)@@G@@CK0010 LA,U  A0,EXEC8    . GET CURRENT EXEC8 BASE LEVEL     @D[@@@      TY
)@@G@@ TLE,U A0,26       . IS IT AT LEAST LEVEL 26?   @D@@@@       J     CORXITZ
)@@G@@T      . NO, DON'T TRY TO LCORE     @G@@@@       LA,U  A0,2,A1 . A BIT EUA
)@@G@@XTRA IN CASE OF DL/DS INSTRS AT END OF WS @D@@@@       SA    A0,RCLASD  UB
)@@G@@ . POST NEW LAST D-BANK LOCN  @A@@@@       ER    LCORE$      . SHRINK   UC
)@@G@@@C@@@@       J     CORXIT      . TAKE NORMAL EXIT     @[@@@@.     @G@@@@UD
)@@G@@. EXPAND THE D-BANK (LAST CORE ADDR IN A1-MAY BE ACTIVE OR COPY WS)     UE
)@@G@@@[@@@@.     @E@@@@CGROW LA,U  A0,2,A1 . EXTRA SPACE TO BE ON THE SAFE SIUF
)@@G@@DE    @C@@@@       SA    A0,RCLASD   . SAVE NEW LAST-D LOCN @D@[@@      UG
)@@G@@ ER    MCORE$      . GLOMB ONTO THE NEEDED SPACE@F@@[[        SZ     ERRUH
)@@G@@COR         . CLEAR MCORE$ CONTINGENCY FLAG     @C@@[[        ER     MCOUI
)@@G@@RE$         . GLOMB THE SPACE @C@@[[        TZ     ERRCOR         . DID UJ
)@@G@@WE GET IT?  @D@@[[        J      CO0999         . NO, TAKE FAILURE EXIT UK
)@@G@@@A[@@@. COMMON EXIT FOR ALL CORE FUNCTIONS@ @@@@CORXIT LX,H2 X11,COLINK UL
)@@G@@ .    @ @@@@       J     1,X11       .    @[@@@@.     @E@@@@. ERROR EXITUM
)@@G@@ (INCORRECT ATTEMP TO MAKE/DESTROY COPY WS)     @[@@@@.     @ @[@@CO0900UN
)@@G@@ ERROR YSYSTM      .    @G@@[[CO0900  EQU    0              . JUMP HERE UO
)@@G@@TO GENERATE SYSERR (I.E. IGDM)@ @[@@       LX,H2 X11,COLINK  .    @ @@][UP
)@@G@@CO0999 LX,H2 X11,COLINK  .    @ ]@@@       J     0,X11       .    @ @@@@UQ
)@@G@@       VARBLS            .    @ @@@@COLINK RES   1           .    @]@@@@UR
)@@G@@       END. ___NEW END  @C@@[[        SA     A0,RCCFWA      . POST NEW FUS
)@@G@@WA    @C@@[[        SA     A1,RCCLWA      . AND *[S@@@*SDFF*@G@@@@. ****UT
)@@G@@***************************************************************** @G@@@@UU
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * UV
)@@G@@@G@@@@.                                                                 UW
)@@G@@    * @^@@@@       AXR$         .   @C@@@@       CONFIG  .    DEFINE ASSUX
)@@G@@EMBLY PARAMETERS  @G@@@@       WSDEF.      DEFINE WORKSPACE             UY
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACUZ
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BVA
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEVB
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           VC
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 VD
)@@G@@                                                    * @G@@@@. END OF STAVE
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****VF
)@@G@@***************************************************************** @[@@@@VG
)@@G@@.     @[@@@@.     @C@@@@       SKMARX            . DEFINE STACK MARKS   VH
)@@G@@@G@@@@/. THIS ROUTINE SUPERVISES SEQUENCING THRU THE ELEMENTS OF A SUBSCVI
)@@G@@RIPTED@G@@@@.  ARRAY-- IT BOTH STORES INTO AND REFERENCES INTO SUBSCRIPTVJ
)@@G@@ED STUFF    @[@@@@.     @A@@@@. REG USAGE DURING SCAN OF SUBSCRS--@E@@@@VK
)@@G@@.      X6,X7 POINTERS TO (SEQUENTIALLY SCANNED) SUBSCRIPTAND@F@@@@.     VL
)@@G@@ X3    POINTER TO ROUTINE TO RANDOMLY ACCESS SUBSCRIPTEE    @G@@@@.     VM
)@@G@@ X4,X5 FETCH POINTERS FOR MOST RAPIDLY VARYING SUBSCRIPT EXPR     @D@@@@VN
)@@G@@.      X2    SCANNER ACROSS SUBSCRIPT EXPRESSIONS     @[@@@@.     @D@@@@VO
)@@G@@. THIS ENTRY TO CREATE A TEMPORARY BY SUBSCRIPTING--- @[@@@@.     @#@@@@VP
)@@G@@       INSTRS .   @G@@@@SUBTMP* S    X11,SULINK  .           ++2        VQ
)@@G@@   +2 424 2  7  C 0O-KS @E@@@@       LMJ   X11,SUBIND  . INITIALIZE SUBSVR
)@@G@@CRIPTING POINTERS @ @@@@       J     SU0999      .    @B@@@@SU0010 LMJ  VS
)@@G@@ X11,SUBMOV  . MOVE TO TEMP   @B@@@@       J     SU0999      . ERROR RETVT
)@@G@@URN   @B@@@@       J     SU0420      . NORMAL EXIT    @[@@@@.     @C@@@@VU
)@@G@@. THIS ENTRY TO STORE INTO A SUBSCRIPTED ARRAY--@[@@@@.     @ @@@@SUBSTOVV
)@@G@@* SX   X11,SULINK  .    @F@@@@       LMJ   X11,SUBIND  . POP UP THE ARRAVW
)@@G@@Y AND ITS SUBSCRIPTS    @ @@@@       J     SU0999      .    @E@@@@      VX
)@@G@@ TZ    SCRANK+1    . TRYING TO STORE INTO A NULL?     @B@@@@       J    VY
)@@G@@ SU0100      . NO, CONTINUE   @B@@@@       ERROR YLENGT,SU0999 . YES, KIVZ
)@@G@@LL IT @D@@@@. NOW EXAMINE THE RIGHT HAND SIDE OF THE STORE ARROW  @D@@@@WA
)@@G@@SU0100 LMJ   X11,PIKRIT  . INITIALIZE RIGHTARG SCAN   @ @@@@       J    WB
)@@G@@ SU0999      .    @D@@@@       SA    A6,RESDSC   . SAVE DESCR FOR PUSH AWC
)@@G@@T EXIT@F@@@@       SA    A6,RITDSC   . AND SAVE FOR GARBAGE COLLECTOR, TWD
)@@G@@OO    @G@@@@       JE,U  A5,1 SU0200 . IF OPERAND HAS UNIT LENGTH, SKIP WE
)@@G@@RANK TESTS  @D@@@@       SA    A3,RITMOD   . TEMP SAVE THE RITEARG MODE WF
)@@G@@@E@@@@SU0110 TNE   A5,RESLNT   . DOES LENGTH MATCH SUBSCRIPTS?    @A@@@@WG
)@@G@@       J     SU0120           .     @A@@@@       ERROR YLENGT,SU0999    WH
)@@G@@.     @B@@@@SU0120 TE,U  A4,ZRANKS   . IS IT SCALAR?  @C@@@@       TNE,UWI
)@@G@@ A4,ZRANKV   . NO, HOW ABOUT VECTOR?@E@@@@       J     SU0200      . NEIWJ
)@@G@@THER- DON'T MATCH DIMVECTS    @C@@@@. COMPARE DIMS OF SUBSCR EXPR WITH RWK
)@@G@@IGHT ARG    @E@@@@SU0130 SX    X4,SUX4SV   . TEMP SAVE LEFTARG PICKUP REWL
)@@G@@GS    @ @@@@       SX    X5,SUX5SV   .    @G@@@@       LX    X4,GLFTBL+ZWM
)@@G@@MOHFI . AND USE THEM TO SCAN DIMS OF SUBSCR EXPR@F@@@@       LX    X5,(+WN
)@@G@@1,RESDIM)   . WHICH WERE SET UP BY RANDAC FOR US@ @@@@       LA    A14,RWO
)@@G@@ESRNK  .    @E@@@@       SX    X6,SUX6SV   . SAVE RITEARG PICKUP REGS , WP
)@@G@@TOO   @ @@@@       SX    X7,SUX7SV   .    @G@@@@       LX    X6,GRITBL+ZWQ
)@@G@@MOHFI . AND USE THEM TO SCAN THE RIGHT ARG DIMS @G@@@@       LX    X7,A1WR
)@@G@@       . GETTING ADDR OF DIMS FROM WHERE VERIFY PUT IT@ @@@@       LXI,UWS
)@@G@@ X7,1        .    @G@@@@       LA    A15,A4      . WHERE NO OF DIMS IS EWT
)@@G@@QUAL TO RITEARG RANK    @F@@@@SU0140 JNGD  A14,SU0144  . CHECK FOR SUBSCWU
)@@G@@RIPT ARRAY EXHAUSTED    @E@@@@       LMJ   X4,0,X4     . IT AIN'T, GET NWV
)@@G@@EXT SUBSCR VALUE  @E@@@@       JE,U  A2,1 SU0140 . IGNORE DIMENSIONS OF WW
)@@G@@UNIT LENGTH @E@@@@SU0142 JNGD  A15,SU0146  . TEST FOR ANY DIMS LEFT IN RWX
)@@G@@ITEARG@E@@@@       LMJ   X6,0,X6     . IF SOMETHING IS LEFT, GET IT     WY
)@@G@@@D@@@@       JE,U  A5,1 SU0142 . IGNORE IT IF IT'S UNITY    @H@@@@      WZ
)@@G@@ JE    A2,A5 SU0140     . BE SURE IT MATCHES THE CURRENT SUBSCR DIM     XA
)@@G@@@C@@@@       ERROR YRANK,SU0999 . ELSE WIPE HIM OUT   @F@@@@SU0144 JNGD XB
)@@G@@ A15,SU0150  . SUBSCRS EXHAUSTED-- ANY MORE RITEARG?  @C@@@@       LMJ  XC
)@@G@@ X6,0,X6     . YES, GET NEXT ONE    @E@@@@       JE,U  A5,1 SU0144 . WHOXD
)@@G@@SE VALUE CAN ONLY BE UNITY    @C@@@@       ERROR YRANK,SU0999     . OR EXE
)@@G@@LSE WE BUST @G@@@@SU0146 JNGD  A14,SU0150  . RITEARG EXHAUSTED-- ANY MORXF
)@@G@@E DIMS IN SUBSCR? @C@@@@       LMJ   X4,0,X4     . YES, GET NEXT ONE    XG
)@@G@@@E@@@@       JE,U  A2,1 SU0146 . WHICH HAD DAMN SURE BETTER BE ONE@ @@@@XH
)@@G@@       ERROR YRANK,SU0999 .   @A@@@@. RANKS MATCH-- RESTORE EVERYTHING  XI
)@@G@@@ @@@@SU0150 LX    X4,SUX4SV   .    @ @@@@       LX    X5,SUX5SV   .    XJ
)@@G@@@ @@@@       LX    X6,SUX6SV   .    @ @@@@       LX    X7,SUX7SV   .    XK
)@@G@@@ @@@@       LA    A3,RITMOD   .    @D@@@@. RANKS AND LENGTHS MATCH--NOWXL
)@@G@@ CHECK FOR MODE CHANGES @C@@@@SU0200 TNE   A3,SCTYPE+1 . ARE THEY IDENTIXM
)@@G@@CAL?  @C@@@@       J     SU0300      . YES, GO START MOVING @E@@@@      XN
)@@G@@ TNE,U A3,ZMOCHR   . NO, IS RIGHT SIDE CHARACTER?     @B@@@@       J    XO
)@@G@@ SU0920      . YES, MODE ERROR@D@@@@       TE,U  A3,ZMOHFI   . IS RIGHT XP
)@@G@@SIDE HALFINT?     @C@@@@       J     SU0240      . NO, GO CHECK DOUBLE  XQ
)@@G@@@E@@@@. MODE CHG, RIGHT SIDE=HALFINT, LEFT HAD BETTER BE DOUBLE   @D@@@@XR
)@@G@@SU0210 LA    A3,SCTYPE+1 . GET MODE OF SUBSCRIPTEE    @B@@@@       TE,U XS
)@@G@@ A3,ZMODFL   . IS IT DFLOAT?  @C@@@@       J     SU0920      . NO- ILLEGXT
)@@G@@AL MODE CHG @ @@@@. MOVE HALFINT TO DOUBLE--    @B@@@@SU0220 LA,U  A3,ZMXU
)@@G@@OINT   . HFINT TO FLOAT @C@@@@       LX,H2 X2,RANPUT,A3 . SET UP STORE RXV
)@@G@@OUTINE@ @@@@       LA    A14,RESLNT  .    @D@@@@SU0230 JNGD  A14,SU0400 XW
)@@G@@ . MORE TO DO ? IF NOT, EXIT  @F@@@@       LMJ   X6,0,X6     . YES, FETCXX
)@@G@@H NEXT FROM RIGHT OPERAND     @C@@@@       LA    A2,A5       . MOVE TO AXY
)@@G@@1 FOR STASH @D@@@@       LMJ   X2,0,X2     . AND STASH IN SUBSCRIPTEE   XZ
)@@G@@@A@@@@       J     SU0999      . ERROR    @C@@@@       LMJ   X11,SUBUMP YA
)@@G@@ . BUMP TO NEXT SUBSCR  @A@@@@       J     SU0400      . ALL DONE @A@@@@YB
)@@G@@       J     SU0230      . CONTINUE @A@@@@. RIGHT SIDE NOT CHAR OR HALFIYC
)@@G@@NT    @F@@@@SU0240 JNE,U A3,ZMODFL SU0900 . IF NOT DOUBLE EITHER, BIG TRYD
)@@G@@OUBLE @D@@@@       LA    A3,SCTYPE+1 . GET MODE OF SUBSCRIPTEE    @B@@@@YE
)@@G@@       TE,U  A3,ZMOHFI   . IS IT HALFINT? @D@@@@       J     SU0920     YF
)@@G@@ . NO- ILLEGAL MODE CHANGE    @C@@@@. SUBSCRIPTEE MUST BE CONVERTED TO DYG
)@@G@@OUBLE---    @D@@@@SU0250 LA    A0,SCRANK+1 . GET LENGTH OF SUBSCRIPTEE  YH
)@@G@@@D@@@@       LSSL  A0,1        . CONVERT  TO DOUBLEWORDS    @C@@@@      YI
)@@G@@ ALLOCT  SU0930    . ACQUIRE NEW SPACE    @D@@@@       LA    A0,SCDESC  YJ
)@@G@@ . DESCR ADDR OF SUBSCRIPTEE  @ @@@@       ABSADR A0         .    @C@@@@YK
)@@G@@       SA,H2 A1,1, A0    . PLUG NEW DATA ADDR IN@E@@@@       ABSADR A1  YL
)@@G@@       . SET UP TO SCAN NEW DATA AREA     @ @@@@       LXI,U A1,2       YM
)@@G@@ .    @D@@@@       LA    A0,SCDATA   . DITTO FOR OLD DATA AREA    @ @@@@YN
)@@G@@       LXI,U A0,1        .    @B@@@@       LA    A14,SCRANK+1 . SET REPEYO
)@@G@@AT CNT@A@@@@. NOW MOVE EL BY EL  FROM OLD TO NEW@D@@@@SU0260 JNGD  A14,SYP
)@@G@@U0270  . MORE TO DO? IF NOT, EXIT   @B@@@@       LA,H1 A5,0,A0     . GETYQ
)@@G@@ FROM OLD   @B@@@@       LDSL  A4,54       . SIGN EXTEND    @ @@@@      YR
)@@G@@ DSA   A4,54       .    @A@@@@       DFLOAT A3,A4      . FLOAT    @A@@@@YS
)@@G@@       DS    A4,0,*A1    . AND STASH@D@@@@       JNGD  A14,SU0270  . MORYT
)@@G@@E TO DO? IF NOT, EXIT   @ @@@@       LA,H2 A5,0,*A0    .    @ @@@@      YU
)@@G@@ LDSL  A4,54       .    @ @@@@       DSA   A4,54       .    @ @@@@      YV
)@@G@@ DFLOAT A3,A4      .    @ @@@@       DS    A4,0,*A1    .    @ @@@@      YW
)@@G@@ J     SU0260      .    @E@@@@. WE HAVE FINISHED CONVERTING--NOW RESET TYX
)@@G@@HE PARAMETERS     @B@@@@SU0270 LA    A0,SCDESC   . DESCR ADDR     @A@@@@YY
)@@G@@       ABSADR A0         . ABS IT   @B@@@@       LA,U  A1,ZMODFL   . NEWYZ
)@@G@@ MODE FLAG  @B@@@@       SA,S2 A1,0,A0     . PUT INTO DESCR @E@@@@      ZA
)@@G@@ LA,H2 A0,1,A0     . NEW RELATIVE DATA ADDR FROM DESCR@B@@@@       ABSADZB
)@@G@@R A0         . MAKE IT ABS    @B@@@@       LA    A1,SCDATA   . OLD DATA ZC
)@@G@@ADDR  @B@@@@       SA    A0,SCDATA   . SAVE NEW ONE   @C@@@@       LA   ZD
)@@G@@ A0,SCRANK+1 . LENGTH OF SUBSCRIPTEE@B@@@@       AA,U  A0,1        . CONZE
)@@G@@VERT TO WDS @ @@@@       SSL   A0,1        .    @E@@@@       RELADR A1  ZF
)@@G@@     . MAKE ADDR OF BLOK TO FREE RELATIVE @F@@@@       FREE             ZG
)@@G@@ . RELEASE SPACE FORMERLY USED FOR DATA   @A@@@@       LA,U  A3,ZMODFL  ZH
)@@G@@ . SET MODE @ @@@@. STORE WITHOUT MODE CHANGE-- @D@@@@SU0300 LX,H2 X2,RAZI
)@@G@@NPUT,A3 . SET UP STORE RTNE ADDR    @C@@@@       LA    A14,RESLNT       ZJ
)@@G@@. AND LOOP CT     @D@@@@SU0310 JNGD  A14,SU0400  . MORE TO DO? IF NOT,EXZK
)@@G@@IT    @F@@@@       LMJ   X6,0,X6          . YES, FETCH FROM RIGHT OPERANZL
)@@G@@D     @C@@@@       DL    A1,A4       . MOVE TO A1 FOR STASH @A@@@@      ZM
)@@G@@ LMJ   X2,0,X2     . PUT AWAY @B@@@@       J     SU0999           . ERROZN
)@@G@@R     @C@@@@       LMJ   X11,SUBUMP  . BUMP SUBSCRIPT ARRAY @B@@@@      ZO
)@@G@@ J     SU0400      . NO MORE TO DO  @B@@@@       J     SU0310           ZP
)@@G@@. CONTINUE  @D@@@@SU0400 LA    A6,RESDSC   . GET DESCR ADDR OF RESULT   ZQ
)@@G@@@D@@@@       LMJ   X11,DUPE    . REPRODUCE INTO A TEMPORARY @D@@@@      ZR
)@@G@@ J     SU0999      . ERROR RETURN FROM REPRO    @C@@@@       SA    A2,REZS
)@@G@@SDSC   . STORE REL DBLOK ADDR @D@@@@SU0410 LA    A0,RESDSC   . GET DESCRZT
)@@G@@ ADDR OF RESULT   @A@@@@       PUSH  A0          . STACK IT @E@@@@SU0420ZU
)@@G@@ LMJ   X11,SUBERS  . GO ERASE ANY TEMPORARY SUBSCRIPTS@ @@@@       J    ZV
)@@G@@ SU0999      .    @ @@@@       LX,H2 X11,SULINK  .    @ @@@@       J    ZW
)@@G@@ 1,X11       .    @[@@@@.     @E@@@@SU0900 ERROR YSYSTM,SU0999 . NOTHINGZX
)@@G@@ TO RIGHT OF EQUALS     @D@@@@SU0910 ERROR YSYNTA,SU0999 . REDUCED SUBSCZY
)@@G@@RIPTAND     @D@@@@SU0920 ERROR YVALUE,SU0999 . ILLEGAL MODE CHANGE, ETC.ZZ
)@@G@@@C@@@@SU0930 ERROR YWSFUL,SU0999 . UNDEFINED MODE     @[@@@@.     @F@@@@AA
)@@G@@SU0999 LMJ   X11,SUBERS  . GET RID OF TEMPORARIES USED FOR SUBSCRS@#@@@@AB
)@@G@@       NOP     .  @ @@@@       LX,H2 X11,SULINK  .    @ @@@@       J    AC
)@@G@@ 0,X11       .    @ @@@@       J     0,X11       .    @#@@@@       VARBLAD
)@@G@@S .   @#@@@@SULINK RES   1 .  @#@@@@INLINK RES   1 .  @#@@@@SUX4SV RES  AE
)@@G@@ 1 .  @#@@@@SUX5SV RES   1 .  @#@@@@SUX6SV RES   1 .  @#@@@@SUX7SV RES  AF
)@@G@@ 1 .  @#@@@@       VARCON .   @D@@@@RESLNT EQUF  RESBLK,,H2  . LENGTH OFAG
)@@G@@ SUBSCRIPTAND     @C@@@@RESRNK EQUF RESBLK,,S3   . RANK OF SUBSCRIPTAND AH
)@@G@@@]@@@@       END .___   *[S@@@*SDFF*@G@@@@. ****************************AI
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUAJ
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 AK
)@@G@@                                                    * @G@@@@       AXR$ AL
)@@G@@        .                                                 * @G@@@@      AM
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@AN
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * AO
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               AP
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 AQ
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            AR
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACEAS
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL AT
)@@G@@BLOCK TYPES                 * @G@@@@.                                   AU
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  AV
)@@G@@                                        * @G@@@@. **********************AW
)@@G@@*********************************************** @[@@@@.     @ @@@@.     AX
)@@G@@STRUCTURE OF T-STRING-- @[@@@@.     @F@@@@.      1ST WD=HEADER-- S1=ZTPTAY
)@@G@@XT, H2=NO WDS (INCLUDING HEADER WD) @G@@@@.      REMAINING WORDS ARE HALAZ
)@@G@@FWORDS (EXCEPT LITS, COMMENTS-- SEE BELOW)@[@@@@.     @B@@@@. STRUCTURE BA
)@@G@@OF HALFWORD ENTRIES IS------- @G@@@@.           ITEM TYPE         1ST OCBB
)@@G@@TAL DIGIT     REMAINING 15 BITS     @G@@@@. ............................BC
)@@G@@..........................................@G@@@@.      PRIMITIVE OPR/SYMBD
)@@G@@BOL      LEXOPR           APLBCI CODE FOR OPR   @G@@@@.      FUNC/VBLE NBE
)@@G@@AME            LEXNAM           LOCN IN SYMBOL TABLE  @G@@@@.      STOPVBF
)@@G@@ECTOR NAME           LEXSTP           LOCN IN SYMBOL TABLE  @G@@@@.     BG
)@@G@@ TRACEVECTOR NAME          LEXTRC           LOCN IN SYMBOL TABLE  @G@@@@BH
)@@G@@.      LIT CONST FLAGWD          LEXLIT           NO WDS USED BY LIT    BI
)@@G@@@[@@@@.     @G@@@@.      LITERAL CONSTANTS HAVE THEIR DESCRIPTORS AND VABJ
)@@G@@LUES EMBEDDED     @G@@@@. DIRECTLY IN THE T-STRING, PRECEDED BY A LIT COBK
)@@G@@NST FLAGWD, AS ABOVE.   @G@@@@. THE DESCRIPTOR ALWAYS FALLS ON A FULLWORBL
)@@G@@D; IF THE FLAGWD FALLS IN H1, @F@@@@. THE REMAINDER OF THAT WORD IS PADDBM
)@@G@@ED WITH NULL (ALL ZEROS).     @G@@@@.      THE END OF THE EXECUTABLE TEXBN
)@@G@@T IS SIGNALED BY EITHER AN 'AEOL'   @G@@@@. OR 'ALAMP', STORED AS AN OPEBO
)@@G@@RATOR.  IF A LAMP APPEARS, THEN COMMENTS  @G@@@@. ARE PACKET IN THE SUCCBP
)@@G@@EEDING QUARTERWORDS, WITH THE END OF THE COMMENT@E@@@@. MARKED BY AN 'AEBQ
)@@G@@OL' CHARACTER, STORED AS A QUATRERWD CHAR.@[@@@@.     @[@@@@.     @E@@@@BR
)@@G@@/. ROUTINES TO STORE T-STRINGS (LEXICALLY ANALYZED TEXT)    @#@@@@      BS
)@@G@@ INSTRS  .  @G@@@@. INITIALIZATION-- ACQUIRE BLOCK INTO WHICH T-STRIMG WBT
)@@G@@ILL BE STORED     @[@@@@.     @C@@@@TEXSTO* SX   X11,TXLINK  . INITIALIZBU
)@@G@@ATION ENTRY @E@@@@       UNLNKL       . UNLINK THE LARGEST BLOCK IN THE BV
)@@G@@WS    @D@@@@       SX    X11,TXTOPN  . POST A T-STRING IS OPEN    @[@@@@BW
)@@G@@.     @E@@@@. NOW SAVE LIMITS OF BLOK INTO WHICH T-STRING WILL BE STOREDBX
)@@G@@@B@@@@TX0010 LA    A0,WSFLWA   . LAST WD OF BLOK@G@@@@       ANA,U A0,2 BY
)@@G@@  . CHEAT A BIT SO THERE'S ALWAYS ROOM FOR AN EOL     @G@@@@       TLE  BZ
)@@G@@ A0,WSFFWA   . IS THERE ENOUGH ROOM FOR ANYTHING AT ALL?    @B@@@@      CA
)@@G@@ J     TX0140      . NO, WSFULL     @F@@@@       ABSADR A0         . YESCB
)@@G@@,GET ABSOLUTE ADDR OF END OF BLOK   @E@@@@       SA    A0,TXTLWA   . SAVCC
)@@G@@E IT ABS FOR WS FULL CHECKING @C@@@@       LA    A0,WSFFWA   . 1ST ADDR CD
)@@G@@OF BLOK     @ @@@@       ABSADR A0         .    @C@@@@       SA    A0,TXCE
)@@G@@TFWA   . SAVE FOR USE AT EXIT @D@@@@       LX,U  X7,0,A0     . AND POST CF
)@@G@@AS 1ST STORE ADDR @ @@@@       LXI,U X7,1        .    @D@@@@       LA   CG
)@@G@@ A0,(+ZTPTXT*/30) . SKELETON BLOK HDR WD  @A@@@@       SA    A0,0,*X7   CH
)@@G@@ . POST IT  @C@@@@       SZ    TXMODE      . CLEAR OLD MODE FLAG  @G@@@@CI
)@@G@@       LA    A1,TXHFLG   . GET FLAGWD TO ESTABLISH HALFWORD STORAGE     CJ
)@@G@@@E@@@@       J     TX0130      . AND INITIALIZE REGS FOR THIS MODE@[@@@@CK
)@@G@@.     @C@@@@. ENTRY POINTS TO FORCE STORAGE MODE CHANGE     @[@@@@.     CL
)@@G@@@ @@@@TEXQWD* LA   A1,TXQFLG   .    @ @@@@       J     TX0100      .    CM
)@@G@@@ @@@@TEXHWD* LA   A1,TXHFLG   .    @ @@@@       J     TX0100      .    CN
)@@G@@@ @@@@TEXFWD* LA   A1,TXWFLG   .    @ @@@@       J     TX0100      .    CO
)@@G@@@ @@@@TEXDWD* LA   A1,TXDFLG   .    @[@@@@.     @ @@@@TX0100 SX    X11,TCP
)@@G@@XLINK  .    @E@@@@       LA,U  A0,0        . GET NULL IN CASE WE NEED TOCQ
)@@G@@ PAD  @C@@@@       LA    A2,TXMODE   . GET CURRENT MODE     @C@@@@      CR
)@@G@@ JE,U  A2,2 TX0120 . IF HALFWORD, DO 1 PAD@E@@@@       JNE,U A2,4 TX0130CS
)@@G@@ . IF NOT QWD, NO PADDING NEEDED    @D@@@@TX0110 LMJ   X6,0,X6     . QUACT
)@@G@@RTERWORD GETS 3 PADS    @D@@@@       J     TX0130      . IGNORE WSFULL ICU
)@@G@@F PADDING   @ @@@@       LMJ   X6,0,X6     .    @ @@@@       J     TX013CV
)@@G@@0      .    @ @@@@TX0120 LMJ   X6,0,X6     .    @]@@@@       NOP  @B@@@@CW
)@@G@@. PADDING COMPLETE, ESTABLISH NEW MODE    @F@@@@TX0130 LX,U  X6,0,A1    CX
)@@G@@ . ADDR OF NEW FETCHRTNE FROM CTLWORD     @C@@@@       SSL   A1,18      CY
)@@G@@ . ALIGN NEW MODE FLAG  @A@@@@       SA,Q4 A1,TXMODE   . STASH IT @E@@@@CZ
)@@G@@       SSL   A1,9        . ALIGN REGISTER INCR FOR THIS MODE@B@@@@      DA
)@@G@@ LXI,U X7,0,A1     . AND SET IT     @ @@@@       LX    X11,TXLINK  .    DB
)@@G@@@B@@@@       J     1,X11       . NORMAL EXIT    @ @@@@. NO ROOM TO EVEN DC
)@@G@@START--     @C@@@@TX0140 LA,U  A0,0        . SET NO WDS USED ZERO @B@@@@DD
)@@G@@       ALOCTB TX0900     . FREE THE BLOK  @D@@@@       SZ    TXTOPN     DE
)@@G@@ . TURN OFF T-STRING OPEN FLAG@B@@@@       ERROR YWSFUL      . SIGNAL ERDF
)@@G@@ROR   @ @@@@       LX,H2 X11,TXLINK  .    @A@@@@       J     0,X11      DG
)@@G@@ . AND QUIT @[@@@@.     @C@@@@. ENTRIES TO TERMINATE STORAGE OF T-STRINGDH
)@@G@@S     @[@@@@.     @A@@@@TEXCLO* SX   X11,TTLINK  . TEMP SAVE@G@@@@      DI
)@@G@@ LMJ   X11,TEXDWD  . USE DOUBLEND INITIALIZATION TO FORCE PADDING @ @@@@DJ
)@@G@@       NOP               .    @E@@@@TX0200 LA    A1,TXTFWA        . GET DK
)@@G@@ADDR OF 1ST WORD USED   @G@@@@       LA,U  A0,0,X7          . AND ADDR ODL
)@@G@@F NEXT WD TO BE STORED INTO   @D@@@@       ANA   A0,A1            . DIFFDM
)@@G@@=NO OF WDS USED   @E@@@@       SA,H2 A0,0,A1     . NO OF WDS USED TO BLODN
)@@G@@K HDR WORD  @G@@@@       ALOCTB TX0900     . POST ALLOCATED BLOK IN OLD-DO
)@@G@@STYLE FREELIST    @D@@@@       SZ    TXTOPN      . TURN OFF T-STRING OPEDP
)@@G@@N FLAG@E@@@@       LA    A0,TXTFWA   . RECOVER FWA OF THE BLOK WE USED  DQ
)@@G@@@ @@@@       RELADR A0         .    @ @@@@       LX    X11,TTLINK  .    DR
)@@G@@@ @@@@       J     1,X11       .    @[@@@@.     @G@@@@. ERASE T-STRING--DS
)@@G@@NOTE THAT THIS SCANS THE STRING TO ERASE NAME REFS    @[@@@@.     @ @@@@DT
)@@G@@TEXERS* SX   X11,TXLINK  .    @ @@@@       LA    A1,WSDBUG   .    @C@@@@DU
)@@G@@       TEP,U A1,4        . IS ERASING INHIBITED?@B@@@@       J     1,X11DV
)@@G@@       . YES, FORGET IT @D@@@@       SA    A0,TXTFWA   . TEMP SAVE BLOCKDW
)@@G@@ HDR ADDR   @D@@@@       LA    A2,A0       . SET IT UP FOR FETCH ROUTINEDX
)@@G@@@ @@@@       ABSADR A0         .    @B@@@@       LA,H2 A1,0,A0     . GETDY
)@@G@@ BLOCK SIZE @E@@@@       JG,U  A1,2 TE0120 . IF NO TEXT WAS STORED, GO FDZ
)@@G@@REE IT@D@@@@       LMJ   X11,LEXGET  . INITIALIZE TO FETCH IT     @ @@@@EA
)@@G@@       ER    ERR$       .     @D@@@@TE0100 LMJ   X4,0,X4     . BRING NEXEB
)@@G@@T LEXITEM TO A0,A1@ @@@@       ER    ERR$        .    @G@@@@       JE,U EC
)@@G@@ A1,LEXNAM TE0110 . IF NAME, GO DECREMENT REFERENCE COUNT   @F@@@@      ED
)@@G@@ JNE,U A1,LEXOPR TE0100 . IF NOT OPERATOR, KEEP SCANNING    @D@@@@      EE
)@@G@@ TE,U  A0,AEOL     . IS OPERATOR END OF LINE?   @D@@@@       TNE,U A0,ALEF
)@@G@@AMP    . OR BEGINNING OF COMMENTS?  @C@@@@       J     TE0120      . YESEG
)@@G@@, GO CLEAN UP     @C@@@@       J     TE0100      . NO, KEEP SCANNING    EH
)@@G@@@E@@@@TE0110 LMJ   X11,SYMERS  . ERASE SYMBOLIC NAME REFERENCE    @C@@@@EI
)@@G@@       J     TE0100      . AND KEEP SCANNIMG    @E@@@@TE0120 LA    A1,TXEJ
)@@G@@TFWA   . RECOVER RELADR OF TEXT BLOCK     @#@@@@       ABSADR A1 .@C@@@@EK
)@@G@@       LA,H2 A0,0,A1     . PICK UP SIZE OF BLOCK@E@@@@       LA    A1,TXEL
)@@G@@TFWA   . RECOVER RELADR OF TEXT BLOCK     @D@@@@       FREE             EM
)@@G@@ . PUT ON OLD-STYLE FREE LIST @ @@@@       LX    X11,TXLINK  .    @ @@@@EN
)@@G@@       J     1,X11       .    @A@@@@/. ACTUAL STORAGE RTNES ARE HERE--- EO
)@@G@@@[@@@@.     @#@@@@       CONSTS  .  @B@@@@MCHFLG FORM  9,9,18 .    STEP,EP
)@@G@@MODE,ADDR   @ @@@@TXQFLG MCHFLG 1,4,TXQUAR .    @ @@@@TXHFLG MCHFLG 1,2,EQ
)@@G@@TXHALF .    @ @@@@TXWFLG MCHFLG 1,1,TXWORD .    @ @@@@TXDFLG MCHFLG 2,0,ER
)@@G@@TXDBLE .    @[@@@@.     @#@@@@       INSTRS .   @[@@@@.     @C@@@@. RTNEES
)@@G@@S USED TO STORE INTO TEXSTRING AREA--     @[@@@@.     @#@@@@W      PROC ET
)@@G@@   .  @C@@@@WFCHEK* NAME   .  CHECK FOR WSFULL CONDITION    @ @@@@      EU
)@@G@@ UNLI$T            .    @D@@@@       LA,U  A4,0,X7     . ADDR OF WORD TOEV
)@@G@@ BE USED    @G@@@@       TG    A4,TXTLWA   . DOES IT PRECEDE THE LAST AVEW
)@@G@@AILABLE WORD?     @D@@@@       J     TX0840      . NO, GO TAKE WSFULL EXEX
)@@G@@IT    @ @@@@       LI$T              .    @ @@@@       END              EY
)@@G@@ .    @[@@@@.     @#@@@@. HALFWORD STORAGE@[@@@@.     @#@@@@TX0800 WFCHEEZ
)@@G@@K  .  @ @@@@       SA,H1 A0,0,X7     .    @ @@@@       LMJ   X6,1,X6    FA
)@@G@@ .    @ @@@@       SA,H2 A0,0,*X7    .    @ @@@@       LMJ   X6,1,X6    FB
)@@G@@ .    @ @@@@TXHALF J     TX0800      .    @G@@@@. FORCE AN EOL AS NEXT HFC
)@@G@@ALFWD (WHEN WSFULL AT H1 WHILE STASHING OPRS)   @C@@@@TXHEOL* LA,U A0,AEFD
)@@G@@OL     . GET END OF LINE FLAG @G@@@@       SA,H1 A0,0,*X7    . PUT IN SAFE
)@@G@@FETY VALVE WD, STEP CT OF WDS USED  @ @@@@       J     0,X11       .    FF
)@@G@@@[@@@@.     @^@@@@. QUARTERWORD STORAGE   @[@@@@.     @E@@@@TX0810 JE,U FG
)@@G@@ A0,AEOL  TX0815  . EOL'S ARE ALWAYS STASHED    @D@@@@       WFCHEK     FH
)@@G@@       . OTHERWISE, CHECK FOR WSFULL@ @@@@TX0815 SA,Q1 A0,0,X7     .    FI
)@@G@@@ @@@@       LMJ   X6,1,X6     .    @ @@@@       SA,Q2 A0,0,X7     .    FJ
)@@G@@@ @@@@       LMJ   X6,1,X6     .    @ @@@@       SA,Q3 A0,0,X7     .    FK
)@@G@@@ @@@@       LMJ   X6,1,X6     .    @ @@@@       SA,Q4 A0,0,*X7    .    FL
)@@G@@@ @@@@       LMJ   X6,1,X6     .    @ @@@@TXQUAR J     TX0810      .    FM
)@@G@@@[@@@@.     @]@@@@. FULLWORDS @[@@@@.     @ @@@@TX0820 WFCHEK           FN
)@@G@@ .    @ @@@@       SA    A0,0,*X7    .    @ @@@@       LMJ   X6,1,X6    FO
)@@G@@ .    @ @@@@TXWORD J     TX0820      .    @[@@@@.     @#@@@@. DOUBLEWORDFP
)@@G@@S     @[@@@@.     @ @@@@TX0830 WFCHEK            .    @ @@@@       DS   FQ
)@@G@@ A2,0,*X7    .    @ @@@@       LMJ   X6,1,X6     .    @ @@@@TXDBLE J    FR
)@@G@@ TX0830      .    @#@@@@. EXIT FOR WSFULLS@C@@@@TX0840 LMJ   X6,0,X6    FS
)@@G@@ . TAKE WSFULL EXIT     @G@@@@       LMJ   X6,0,X6     . IF HE TRIES TO FT
)@@G@@PAD, GIVE HIM ANOTHER CHANCE  @E@@@@       ER    ERR$        . BUT DON'TFU
)@@G@@ LET THE PROGRAM LOOP   @[@@@@.     @ @@@@TX0900 ERROR YSYSTM      .    FV
)@@G@@@ @@@@       LX    X11,TXLINK  .    @ @@@@       J     0,X11       .    FW
)@@G@@@ @@@@       VARBLS            .    @#@@@@TXMODE RES   1 .  @#@@@@TXLINKFX
)@@G@@ RES   1 .  @#@@@@TXTLWA RES   1 .  @#@@@@TXTFWA RES   1 .  @#@@@@TTLINKFY
)@@G@@ RES   1 .  @#@@@@       VARCON .   @C@@@@TXTOPN* +0     . NON-ZERO IF AFZ
)@@G@@ T-STRING IS OPEN @[@@@@.     @G@@@@/.     COPY A LINE OF TEXT-- USED BYGA
)@@G@@ )COPY, OR TO RE-OPEN AN OLD FUNC   @F@@@@.           ENTER WITH A0=ABSAGB
)@@G@@DR OF 'FROM' WS; A1=RELADR OF TEXT  @C@@@@.           EXIT WITH A0=RELADGC
)@@G@@R OF COPIED LINE  @[@@@@.     @ @@@@       INSTRS            .    @ @@@@GD
)@@G@@TEXCPY* SX   X11,TCLINK  .    @D@@@@       SA    A0,TCBASF   . SAVE BASEGE
)@@G@@ ADDR OF 'FROM' WS@G@@@@       AA,U  A1,0,A0     . COMPUTE ABS ADDR OF BGF
)@@G@@EGINNING OF T-STRING    @C@@@@       SA,H2 A1,TSADDR   . SAVE T-STRING AGG
)@@G@@DDRESS@E@@@@. FIRST, ACQUIRE SPACE AND MOVE ENTIRE STRING IN ONE WHACK  GH
)@@G@@@D@@@@TC0010 LA,H2 A0,0,A1     . GET NO WDS FROM BLOK HEADER@C@@@@      GI
)@@G@@ ALLOCT TC0900     . ACQUIRE THE SPACE    @D@@@@       SA    A1,TCNUBL  GJ
)@@G@@ . SAVE RELADR OF NEW BLOCK   @ @@@@       ABSADR A1         .    @B@@@@GK
)@@G@@       LXI,U A1,1        . SET INCR FOR BT@D@@@@       LX    X7,A1      GL
)@@G@@ . AND INITIALIZE SCANNER, TOO@D@@@@       LXI,U A1,1        . SET UP 'TGM
)@@G@@O' ADDR FOR BT    @C@@@@       LA    A2,TSADDR   . AND 'FROM' POINTER   GN
)@@G@@@F@@@@       LR,H2 R1,0,A2     . GET SIZE FROM HDR WD OF 'FROM' BLOCK   GO
)@@G@@@E@@@@       BT    A1,0,*A2    . COPY BLOCK TO ITS NEW LOCATION   @G@@@@GP
)@@G@@. NOW SCAN THE NEWLY COPIED BLOCK AND ADJUST SYMBOL TABLE REFERENCES    GQ
)@@G@@@ @@@@TC0100 LX,U  X6,TCSCAN   .    @C@@@@       LMJ   X6,0,X6     . GETGR
)@@G@@ FIRST HALFWORD   @C@@@@TC0110 DSL   A0,18-3     . LINE UP TYPE DIGIT   GS
)@@G@@@B@@@@       SSL   A1,36-15    . AND DATA FIELD @G@@@@       COMJMP A0,TGT
)@@G@@C0910 LEXLIT,TC0120 LEXNAM,TC0130 LEXTRC,TC0130 ;     @E@@@@            GU
)@@G@@             LEXSTP,TC0130 LEXOPR,TC0140   .    @C@@@@. LIT ENCOUNTERED-GV
)@@G@@- BUMP WORDREG TO BYPASS IT   @ @@@@TC0120 AX,U  X7,0,A1     .    @G@@@@GW
)@@G@@       J     TC0100      . GO MAKE SURE FETCH STARTS AT H1 OF NEXT WD   GX
)@@G@@@C@@@@. NAME ENCOUNTERED-- PUT IT IN SYMBOL TABLE     @B@@@@TC0130 SA   GY
)@@G@@ A0,TCNTYP   . SAVE NAME TYPE @D@@@@       LA    A0,TCBASF   . GET ABS AGZ
)@@G@@DDR OF 'FROM' WS  @C@@@@       LMJ   X11,SYCOPY  . COPY NAME INTO NEW WSHA
)@@G@@@B@@@@       J     TC0200      . OOPS, TROUBLE  @C@@@@       LA    A0,TCHB
)@@G@@NTYP   . RECOVER NAME TYPE    @B@@@@       LSSL  A1,36-15    . REALIGN NHC
)@@G@@AME   @E@@@@       LDSL  A0,15       . REPACK NAME POINTER AND TYPE     HD
)@@G@@@C@@@@       LMJ   X6,0,X6     . STORE OLD, FETCH NEXT@C@@@@       J    HE
)@@G@@ TC0110      . GO ANALYZE NEXT ITEM @^@@@@. OPERATOR ENCOUNTERED--@C@@@@HF
)@@G@@TC0140 TE,U  A1,AEOL     . IF EOL, WE'RE DONE   @B@@@@       TNE,U A1,ALHG
)@@G@@AMP    . DITTO IF LAMP- @B@@@@       J     TC0150      . GO CLEAN UP    HH
)@@G@@@E@@@@       LMJ   X6,1,X6     . NOT DONE, SKIP TO NEXT LEX ITEM  @C@@@@HI
)@@G@@       J     TC0110      . AND GO DECODE IT     @ @@@@. GENERAL CLEANUP HJ
)@@G@@AND EXIT    @C@@@@TC0150 LA    A0,TCNUBL   . GET ADDR OF BLOCK    @ @@@@HK
)@@G@@       LX,H2 X11,TCLINK  .    @ @@@@       J     1,X11       .    @C@@@@HL
)@@G@@. TROUBLE PUTTING A NAME IN THE SYMBOL TABLE--  @D@@@@TC0200 LA,U  A0,+LHM
)@@G@@EXOPR*/30+AEOL   . GET END FLAG     @F@@@@       LMJ   X6,0,X6     . FORHN
)@@G@@CE IT IN SO ERASER STOPS PROPERLY   @C@@@@       LA    A0,TCNUBL   . GETHO
)@@G@@ BLOCK ADDRESS    @F@@@@       LMJ   X11,TEXERS  . ERASE AND UN-TABULATEHP
)@@G@@ ANY OLD NAMES    @ @@@@       ER    ERR$        .    @B@@@@       J    HQ
)@@G@@ TC0999      . TAKE ERROR EXIT@[@@@@.     @F@@@@TC0900 ERROR YWSFUL,TC09HR
)@@G@@99    . CAN'T GET SPACE FOR THE STRING    @ @@@@TC0910 ERROR YSYSTM,TC09HS
)@@G@@99 .  @ @@@@TC0999 LX,H2 X11,TCLINK  .    @B@@@@       J     0,X11      HT
)@@G@@ . ERROR EXIT     @[@@@@.     @[@@@@.     @D@@@@. SCAN ROUTINE TO FETCH HU
)@@G@@WITH BACKTRACKING STORE--     @[@@@@.     @F@@@@TCSCAN LA,H1 A0,1,*X7   HV
)@@G@@ . NOTE-- X7 LAGS BY 1 BEFORE THIS INSTR  @A@@@@       LMJ   X6,0,X6    HW
)@@G@@ . RETURN   @G@@@@       SA,H1 A0,0,X7     . STORE BACK INTO LAST HALFWOHX
)@@G@@RD FETCHED FROM   @C@@@@       LA,H2 A0,0,X7     . GET NEXT HALFWORD    HY
)@@G@@@A@@@@       LMJ   X6,0,X6     . RETURN   @D@@@@       SA,H2 A0,0,X7    HZ
)@@G@@ . STORE IN LAST HALFWORD     @D@@@@       J     TCSCAN      . AND GO FEIA
)@@G@@TCH FROM NEXT WORD@[@@@@.     @ @@@@       VARBLS            .    @ @@@@IB
)@@G@@TCLINK RES   1           .    @E@@@@TCBASF RES   1           . BASE ADDRIC
)@@G@@ OF 'FROM' WS (ABSOLUTE)@D@@@@TCNUBL RES   1           . ADDR OF 'NEW' TID
)@@G@@EXTBLOCK    @ @@@@TCNTYP RES   1           .    @ @@@@       VARCON     IE
)@@G@@       .    @F@@@@TSADDR +1,$-$            . BT PARAMETER: ABSADR OF 'FRIF
)@@G@@OM' T-STRING@C@@@@/.    FETCH TEXT FROM BLOX CREATED BY ABOVE--   @[@@@@IG
)@@G@@.     @[@@@@.     @#@@@@F      PROC    .  @C@@@@FLAGET* NAME   . SET REGIH
)@@G@@ TO LEXANL TYPE FLAGS   @B@@@@       LA,U  A1,0        . CLEAR FLAGREG  II
)@@G@@@ @@@@       UNLIST            .    @B@@@@       LDSC  A0,21       . FLAIJ
)@@G@@GBITS TO A1 @D@@@@       SSL   A0,21       . REALIGN REMAINDER OF WD    IK
)@@G@@@C@@@@       LA   A2,LGCOUN    . CURRENT ITEM COUNT   @F@@@@       AA,U IL
)@@G@@A2,1         . BUMP IT, LEAVING VAL IN A2 FOR COMPILER@D@@@@       SA   IM
)@@G@@A2,LGCOUN    . AND STASH IT FOR NEXT TIME @#@@@@       LIST .     @#@@@@IN
)@@G@@       END  .     @[@@@@.     @#@@@@G      PROC .     @#@@@@GOBACK* NAMEIO
)@@G@@ .    @#@@@@       UNLI$T .   @F@@@@       DS    A0,LGLAST   . SAVE EXITIP
)@@G@@ PARAMS IN CASE OF BACKUP     @B@@@@       J     GETOUT      . AND RETURIQ
)@@G@@N     @E@@@@GETBAK DL    A0,LGLAST   . IF BACKING UP, GET OLD STUFF     IR
)@@G@@@ @@@@       LA    A2,LGCOUN   .    @B@@@@GETOUT LMJ   X4,1,X4     . NORIS
)@@G@@MAL EXIT    @F@@@@BAKCNT*(1) EQU $-GETBAK  . COUNT USED TO CHANGE X4 FORIT
)@@G@@ BACKUP     @#@@@@       LI$T .     @]@@@@       END .@[@@@@.     @F@@@@IU
)@@G@@.     INITIALIZATION ENTRY    ( INITIAL BLOK ADDR SHOULD BE IN A2)@[@@@@IV
)@@G@@.     @#@@@@       INSTRS  .  @^@@@@LEXGET* SX   X11,LGLINK @E@@@@      IW
)@@G@@ SZ    LGCOUN      . CLEAR COUNT OF ITEMS SCANNED     @C@@@@       JZ   IX
)@@G@@ A2,LG0900   . IF NO BLOCK, ERROR   @ @@@@       ABSADR A2         .    IY
)@@G@@@F@@@@       LXM,U X5,1,A2     . SET POINTER TO WORD AFTER BLOCK HEADER IZ
)@@G@@@ @@@@       LXI,U X5,1        .    @ @@@@       LX,U  X4,LGPICK   .    JA
)@@G@@@B@@@@       J     1,X11       . AND ESCAPE     @ @@@@. FETCHING IS DONEJB
)@@G@@ HERE--     @ @@@@LG0100 GOBACK            .    @C@@@@LGPICK LA,H1 A0,0,JC
)@@G@@X5     . GET NEXT T-ENTRY     @C@@@@       JZ    A0,LG0110   . IF NULL, JD
)@@G@@SKIP IT     @E@@@@       FLAGET            . ISOLATE  A0=OP, A1=FLAG BITJE
)@@G@@S     @C@@@@       TNE,U A1,LEXLIT   . IS THIS LITERAL?     @H@@@@      JF
)@@G@@ JMGI  X5,LG0120   . YES, SET ADDR POINTER TO 1ST WD AND PROCESS IT     JG
)@@G@@@D@@@@       JNE,U A1,LEXOPR LG0105 . IF NOT OPR, RETURN    @F@@@@      JH
)@@G@@ JE,U  A0,ALAMP  LG0200 . IF LAMP, GO SETUP TO GET COMMENTS @ @@@@LG0105JI
)@@G@@ GOBACK            .    @G@@@@LG0110 LA,H2 A0,0,*X5    . GET NEW SETTINGJJ
)@@G@@ FOR POINTER(AT END OF LIT)   @B@@@@       JZ    A0,LG0100   . SKIP NULLJK
)@@G@@S     @B@@@@       FLAGET            . DECODE T-ENTRY @E@@@@       JNE,UJL
)@@G@@ A1,LEXOPR LG0115 . IF NOT OPR, GO CHECK LIT    @G@@@@       JE,U  A0,ALJM
)@@G@@AMP  LG0210 . IF OPR IS LAMP, GO SET UP FOR COMMENTS  @D@@@@LG0115 JNE,UJN
)@@G@@ A1,LEXLIT LG0100 . IF NOT LIT, RETURN    @E@@@@. THE ITEM IS AN IMBEDDEJO
)@@G@@D LITERAL--(A0=NO OF WDS USED BY IT)@C@@@@LG0120 AU,U  A0,0,X5     . GETJP
)@@G@@ ADDR OF LIT DESCR@E@@@@       LA,U  A0,0,X5     . AND NEW POINTER IS ATJQ
)@@G@@ END OF LIT @E@@@@       RELADR A0         . MAKE IT REL FOR USE BY COMPJR
)@@G@@ILER  @F@@@@       LXM,U X5,0,A1     . SET NEXT FETCH POINTER TO AFTER LJS
)@@G@@ITERAL@D@@@@       LA,U  A1,LEXLIT   . RESTORE LITERAL COSNT FLAG @F@@@@JT
)@@G@@       J     LG0100      . AND SHIP THE POINTER TO THE COMPILER   @[@@@@JU
)@@G@@.     @A@@@@. PREPARE TO START FETCHING COMMENTS@D@@@@LG0200 GOBACK     JV
)@@G@@       . LAMP WAS IN H1,  RETURN IT @D@@@@       J     LG0230      . STAJW
)@@G@@RT COMMENT FETCH AT Q3  @D@@@@LG0210 GOBACK            . LAMP WAS IN H2-JX
)@@G@@-- RETURN IT@ @@@@. START COMMENT FETCH AT Q1   @ @@@@LG0220 LA,Q1 A0,0,JY
)@@G@@X5     .    @C@@@@       TZ    A0          . IF NULL, SKIP IT     @ @@@@JZ
)@@G@@       LMJ   X4,1,X4     .    @ @@@@       LA,Q2 A0,0,X5     .    @C@@@@KA
)@@G@@       TZ    A0          . IF NULL, SKIP IT     @ @@@@       LMJ   X4,1,KB
)@@G@@X4     .    @ @@@@LG0230 LA,Q3 A0,0,X5     .    @C@@@@       TZ    A0   KC
)@@G@@       . IF NULL, SKIP IT     @ @@@@       LMJ   X4,1,X4     .    @ @@@@KD
)@@G@@       LA,Q4 A0,0,*X5    .    @C@@@@       TZ    A0          . IF NULL, KE
)@@G@@SKIP IT     @ @@@@       LMJ   X4,1,X4     .    @ @@@@       J     LG022KF
)@@G@@0      .    @G@@@@LGBACK* ANX,U X4,BAKCNT(1) . EXECUTE THIS TO BACK UP TKG
)@@G@@HE SCANNER 1 ITEM @[@@@@.     @ @@@@LG0800 ERROR YSYSTM,LG0890  . @[@@@@KH
)@@G@@.     @C@@@@LG0890 J     0,X4        . TOO BAD !!!!!!!!!!!  @[@@@@.     KI
)@@G@@@ @@@@LG0900 ERROR YSYSTM,LG0990 .  @[@@@@.     @ @@@@LG0990 LX    X11,LKJ
)@@G@@GLINK  .    @ @@@@       J     0,X11       .    @#@@@@       VARBLS  .  KK
)@@G@@@#@@@@LGLINK RES   1 .  @D@@@@LGLAST RES   2           . TEMP SAVE OF BAKL
)@@G@@CKUP PARAMS @G@@@@LGCOUN RES   1           . COUNTER OF LEXITEMS (NEEDEDKM
)@@G@@ FOR ERROR ECHO)  @]@@@@       END  ___@@@LG0100 GOBACK            .    KN
)@@G@@@C@@@@LGPICK LA,H1 A0,0,*[S@@@*SDFF*@G@@@@. ****************************KO
)@@G@@***************************************** @G@@@@. STANDARD PROCS - INCLUKP
)@@G@@DED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * @G@@@@.                 KQ
)@@G@@                                                    * @G@@@@       AXR$ KR
)@@G@@        .                                                 * @G@@@@      KS
)@@G@@ CONFIG  .    DEFINE ASSEMBLY PARAMETERS                        * @G@@@@KT
)@@G@@       APSYMB.     DEFINE APL SYMBOL SET                              * KU
)@@G@@@G@@@@       WSDEF.      DEFINE WORKSPACE                               KV
)@@G@@    * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACE                 KW
)@@G@@          * @G@@@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)            KX
)@@G@@                * @G@@@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACEKY
)@@G@@                      * @G@@@@       CBLOCK            . DEFINE CONTROL KZ
)@@G@@BLOCK TYPES                 * @G@@@@.                                   LA
)@@G@@                                  * @G@@@@. END OF STANDARD PROC BLOCK  LB
)@@G@@                                        * @G@@@@. **********************LC
)@@G@@*********************************************** @[@@@@.     @F@@@@IBCOMNLD
)@@G@@ EQU   11 . CTR FOR I-BANK SHARED CODE (IN ROOT SEGMENT)    @[@@@@.     LE
)@@G@@@D@@@@       STATEV            . DEFINE STATEVECT PARAMETERS@#@@@@      LF
)@@G@@ SKMARX .   @[@@@@.     @G@@@@A      PROC    .    ACCEPT NEXT INPUT LINELG
)@@G@@ AND LEXICALLY ANALYZE IT     @C@@@@ACCEPT* NAME 0 . PARAMS-- SYSCMD,EDCLH
)@@G@@MD ERR EOF  @#@@@@       UNLI$T  .  @E@@@@       SZ    STVLXT      . CLELI
)@@G@@AR STORED LEXICAL TEXT FLAG   @E@@@@AC0005 LMJ   X11,LNFLSH  . CLEAR OUTLJ
)@@G@@PUT BUF, JUST IN CASE   @A@@@@       LA,U  A3,SIXBLX   . SETUP    @D@@@@LK
)@@G@@       LA,U   A4,7       . EDIT SIX BLANKS AND AN EOL @B@@@@       LMJ  LL
)@@G@@  X11,EDTLIT . INTO CIOBUF    @C@@@@       LMJ   X11,BUFILL  . AND READ LM
)@@G@@NEW DATA    @ @@@@       J     A(2,2) . EOF EXIT@C@@@@       LMJ    X11,LN
)@@G@@LINITL . RESET CIOBUF POINTERS@B@@@@       LMJ   X11,LEXINI  . INITIALIZLO
)@@G@@E     @ @@@@       GO    A$CP01      .    @D@@@@ACCUNQ* NAME 1          LP
)@@G@@ . ACCEPT INPUT FOR UNQUOTE   @ @@@@       UNLI$T            .    @D@@@@LQ
)@@G@@       LMJ   X11,LEXUNQ  . INITIALIZE LEX SCANNER     @#@@@@A$CP01* NAMELR
)@@G@@ .    @B@@@@       LMJ   X11,LEXANL  . SCAN AND STORE @ @@@@       J    LS
)@@G@@ A(2,1)      .    @G@@@@       COMJMP A1,AC0010 0,AC0030 1,A(1,1) 2,AC00LT
)@@G@@20 3,AC0015 4,AC0005    @D@@@@AC0010 ERROR YSYSTM,A(2,1)    . ILLEGAL RELU
)@@G@@TURN CODE   @F@@@@AC0015 ERROR YSYNTA,A(2,1)    . ED CMNDS ILLEGAL, NOT LV
)@@G@@IN DEFN MODE@F@@@@ DO A(0,0) ,AC0005 EQU AC0015 . MULL LINES CANNOT BE ULW
)@@G@@NQUOTED     @F@@@@. LOCK / FUNC -- SINCE WE'RE NOT IN DEFN MODE, NO TEXTLX
)@@G@@ MAY PRECEDE@ @@@@AC0020 JZ    A2,A(1,2)   .    @D@@@@       SA    A2,STLY
)@@G@@VLXT   . ELSE POST ADDR FOR ERASURE @B@@@@       ERROR YDEFN,A(2,1)  . ALZ
)@@G@@ND GE T OUT @ @@@@. NORMAL EXIT FOR END OFLINE  @E@@@@AC0030 JZ    A2,ACMA
)@@G@@0005   . BE CAREFUL IF LINE WAS EMPTY     @D@@@@       SA    A2,STVLXT  MB
)@@G@@ . ELSE SAVE ADDR OF TEXT     @#@@@@       LI$T .     @#@@@@       END  MC
)@@G@@   .  @#@@@@       CONSTS     @B@@@@SIXBLX  +ASPACE,ASPACE,ASPACE,ASPACEMD
)@@G@@    . @B@@@@        +ASPACE,ASPACE,AEOL,AEOL        . @[@@@@.     @D@@@@ME
)@@G@@C      PROC    . COMPILE STMNT INDICATED IN STATEVECT @A@@@@COMPIL* NAMEMF
)@@G@@   .   PARAMS: ERRXIT   @#@@@@       UNLI$T .   @D@@@@       LA    A2,STMG
)@@G@@VLXT   . GET ADDR OF LEXICAL TEXT   @ @@@@       LMJ   X11,COMPIL  .    MH
)@@G@@@ @@@@       J     C(1,1)      .    @F@@@@       SA    A0,STVCCL   . SAVMI
)@@G@@E LEFT WORD ADDR OF COMPILED CODE   @D@@@@       LA,U  A1,1,A0     . ADDMJ
)@@G@@R OF 1ST WD AFTER HEADER@D@@@@       SA    A1,STVICT   . STASH IN CURRENMK
)@@G@@T INSTR CTR @ @@@@       LI$T              .    @ @@@@       END        ML
)@@G@@       .    @[@@@@.     @E@@@@.                        EXECUTE STMNT MARMM
)@@G@@KED IN STATEVECT  @[@@@@.     @^@@@@R      PROC         .   @F@@@@RUN*  MN
)@@G@@ NAME    . GOTO,XQTFUN,EVALIN,UNQUOT   BREAK,ERR,SICLEAR    @ @@@@      MO
)@@G@@ UNLI$T            .    @ @@@@       LMJ   X11,ICLOAD  .    @ @@@@      MP
)@@G@@ J     R(2,2)      .    @B@@@@       LMJ   X11,INTERP  . EXECUTE STMNT  MQ
)@@G@@@ @@@@       J     R(2,2)      .    @G@@@@       COMJMP  A0,RU0010 0,RU0MR
)@@G@@020 1,R(1,1) 2,R(1,2) 3,R(1,3) 4,R(1,4) ; @C@@@@                        MS
)@@G@@ 5,R(2,1) 6,R(2,3)   .  @A@@@@RU0010 ERROR YSYSTM,R(2,2)         .@]@@@@MT
)@@G@@RU0020 .    @#@@@@       LI$T .     @#@@@@       END  .     @D@@@@/.  THMU
)@@G@@E FOLLOWING PROCS FARBLE WITH STACKED RESULTS   @[@@@@.     @F@@@@A     MV
)@@G@@ PROC .      SUSP OR FUNC MODES: PRINT RESULTS LEFT IN STACK@E@@@@ANSPRTMW
)@@G@@* NAME             . THE ONLY ARG IS THE ERROR EXIT   @#@@@@       UNLI$MX
)@@G@@T .   @E@@@@       LMJ   X11,APRINT  . GO TO THE IMPLIED PRINT ROUTINE  MY
)@@G@@@C@@@@       J     A(1,1)      . BREAK DURING PRINT   @#@@@@       LI$T MZ
)@@G@@.     @]@@@@       END .@[@@@@.     @[@@@@.     @G@@@@A      PROC       NA
)@@G@@  . SHUFFLE ANSWERS IN STAK AFTER QUADIN, FUNC, UNQUOT@^@@@@ANSTAK* NAMENB
)@@G@@        .   @^@@@@       UNLI$T       .   @ @@@@       LMJ   X11,AN0010 NC
)@@G@@ .    @ @@@@       +A(1,1)           .    @ @@@@       LI$T             ND
)@@G@@ .    @ @@@@       END               .    @A@@@@. SUBROUTINE INVOKED BY NE
)@@G@@ABOVE PROC--@#@@@@       INSTRS .   @ @@@@AN0010 SX,H2 X11,ANLINK  .    NF
)@@G@@@C@@@@       POP   A6          . GET TOP OF STACK     @C@@@@       TG,U NG
)@@G@@ A6,0400000  . IS IT A STAKMARK?    @C@@@@       J     AN0020      . YESNH
)@@G@@, VALUE ERROR     @C@@@@       LA    A0,A6       . DUPE DESCRIPTOR ADDR NI
)@@G@@@ @@@@       ABSADR A0         .    @D@@@@       LA,S1 A1,0,A0     . GETNJ
)@@G@@ TYPE OF THIS VARIABLE  @E@@@@       JNE,U A1,ZTPLIT AN0015 . IF NOT A LNK
)@@G@@IT, FORGET IT     @G@@@@       LMJ   X11,DUPE    . OTHERWISE MAKE IT TEMNL
)@@G@@P SO LEX WON'T ERASE IT @B@@@@       J     AN0025      . OOPS, NO ROOM  NM
)@@G@@@E@@@@       LA    A6,A2       . SET UP ADDR OF NEW DESCRIPTOR    @D@@@@NN
)@@G@@AN0015 POP   A5          . LOOK UNDER THE VALUE WE GOT@C@@@@       TNE,UNO
)@@G@@ A5,SKMRHS   . END OF STMNT MARKER? @B@@@@       J     AN0030      . YESNP
)@@G@@, WE'RE OK  @B@@@@       PUSH  A5          . NO, REPLACE IT @E@@@@AN0020NQ
)@@G@@ PUSH  A6          . STUFF OLD TOP OF STACK BACK IN   @C@@@@       ERRORNR
)@@G@@ YVALUE      . SIGNAL VALUE ERROR   @ @@@@AN0025 LX,H2 X11,ANLINK  .    NS
)@@G@@@B@@@@       J     *0,X11      . ERROR EXIT     @D@@@@AN0030 PUSH  A6   NT
)@@G@@       . PUSH THE ANSWER BACK IN    @F@@@@       SZ    STVSTK      . CLENU
)@@G@@AR STACKED RESULT FLAG FOR THIS MODE@ @@@@       LX,H2 X11,ANLINK  .    NV
)@@G@@@B@@@@       J     1,X11       . NORMAL EXIT    @#@@@@       VARCON .   NW
)@@G@@@ @@@@ANLINK +0,$-$            .    @[@@@@.     @F@@@@.     PURGE STACK NX
)@@G@@OF ENTRIES CREATED BY A BAD STMNT EXECUTION     @[@@@@.     @#@@@@P     NY
)@@G@@ PROC .     @#@@@@PURGE* NAME .     @#@@@@       UNLI$T  .  @E@@@@      NZ
)@@G@@ TNZ   STVSTK      . ANYTHING STACKED IN THIS STATE?  @B@@@@       J    OA
)@@G@@ PU0030      . NO, GET OUT    @A@@@@PU0010 POP   A6     . TOP OF STACK  OB
)@@G@@@C@@@@       TG,U  A6,0400000  . IS IT A DESCRIPTOR?  @D@@@@       J    OC
)@@G@@ PU0020      . NO , GO SEE IF WE'RE DONE  @E@@@@       LMJ   X11,ERASET OD
)@@G@@ . YES, GET RID OF THIS VARIABLE    @ @@@@       J     P(1,1)      .    OE
)@@G@@@E@@@@       J     PU0010      . AND KEEP LOOKING FOR THE END     @D@@@@OF
)@@G@@PU0020 TE,U  A6,SKMRHS   . IS THIS STAKMARK THE END?  @B@@@@       J    OG
)@@G@@ PU0010      . NO, KEEP TRYING@E@@@@       SZ    STVSTK      . SET FLAG OH
)@@G@@THAT STACK IS EMPTY     @]@@@@PU0030 .    @ @@@@       LI$T             OI
)@@G@@ .    @ @@@@       END               .    @D@@@@E      PROC  .          OJ
)@@G@@ ERASE COMPILED CODE BLOCKS   @#@@@@ERSCOD* NAME .    @ @@@@       UNLI$OK
)@@G@@T            .    @ @@@@       LA    A0,STVCCL   .    @E@@@@       JZ   OL
)@@G@@ A0,DONE     . IF ALREADY ERASED, FORGET IT     @ @@@@       LMJ   X11,COM
)@@G@@ODERS  .    @ @@@@       J     E(1,1)      .    @ @@@@       SZ    STVCCON
)@@G@@L      .    @[@@@@DONE .@#@@@@       LI$T  .    @#@@@@       END   .    OO
)@@G@@@E@@@@E      PROC  .           ERASE LEXICALLY ANALYZED TEXT BLOX @#@@@@OP
)@@G@@ERSLEX* NAME .    @ @@@@       UNLI$T            .    @ @@@@       LA   OQ
)@@G@@ A0,STVLXT   .    @E@@@@       JZ    A0,ERSXIT   . IF NOTHING TO ERASE, OR
)@@G@@GET OUT     @ @@@@       LMJ   X11,TEXERS  .    @ @@@@       J     E(1,1OS
)@@G@@)      .    @ @@@@       SZ    STVLXT      .    @]@@@@ERSXIT .    @#@@@@OT
)@@G@@       LI$T  .    @#@@@@       END   .    @[@@@@.     @ @@@@.      CHANGOU
)@@G@@E TO NEW STATE    @[@@@@.     @#@@@@N      PROC  .    @#@@@@NUSTAT* NAMEOV
)@@G@@ .    @ @@@@       UNLI$T            .    @C@@@@       LMJ   X11,SUSPEN OW
)@@G@@ . PUSH OLD STATE DOWN  @ @@@@       J     N(1,1)      .    @B@@@@      OX
)@@G@@ LA,U  A0,N(0,1)   . NEW STATE FLAG @D@@@@       SA    A0,STVCUR   . INTOY
)@@G@@O CURRENT STATE NDICATOR@#@@@@       LI$T  .    @#@@@@       END   .    OZ
)@@G@@@[@@@@.     @#@@@@L      PROC .     @#@@@@LOGERR* NAME .    @A@@@@. THISPA
)@@G@@ PROC IS NO LONGER NEEDED     @]@@@@       END .@[@@@@.     @#@@@@B     PB
)@@G@@ PROC .     @F@@@@BRKCHK* NAME 0           . CHECK FOR II KEYINS OR ATTNPC
)@@G@@ SIGNALS    @F@@@@ATTCHK* NAME 1           . CHECK FOR USER ATTN (TTY BRPD
)@@G@@EAK) ONLY   @ @@@@       UNLI$T            .    @^@@@@ DO B(0,0) , GO ATPE
)@@G@@N$01 .@F@@@@       LMJ   X11,CINSRV  . GO CHECK FOR COMMUNICATIONS INTERPF
)@@G@@RUPTS @E@@@@       J     B(1,1)      . IF MSG WAS POSTED, GO SUSPEND    PG
)@@G@@@#@@@@ATN$01* NAME .    @D@@@@ATTNCK LA    A0,CONSBR   . GET TTY BREAK KPH
)@@G@@EY FLAG     @C@@@@       SZ    CONSBR      . POST IT SERVICED     @E@@@@PI
)@@G@@       JNZ   A0,B(1,1)   . AND IF IT WAS ON, GO SUSPEND     @#@@@@      PJ
)@@G@@ LI$T .     @]@@@@       END .@[@@@@.     @D@@@@E      PROC  .          PK
)@@G@@ ECHO STATEMENTS BACK TO USER @F@@@@ECHOL* NAME    0         . SEND LINEPL
)@@G@@ NUMBER AND FUNC NAME ONLY    @D@@@@ECHOS* NAME  1           . ECHO TEXTPM
)@@G@@ OF ENTURE LINE   @D@@@@ECHOLN* NAME 2 . ECHO LINE AND NAME, DON'T FLUSHPN
)@@G@@ BUF  @#@@@@       UNLI$T .   @E@@@@       LMJ   X11,ECHEAD  . PRINT FUNPO
)@@G@@CTION NAME AND LINENO   @ @@@@       J     XQ0890      .    @ @@@@ DO E(PP
)@@G@@0,0)=2 , GO ECH010 .    @D@@@@ DO E(0,0) , LMJ X11,ECTEXT . PRINT TEXT, PQ
)@@G@@IF REQUESTED@ @@@@ DO E(0,0) , J   XQ0890     . @B@@@@       LMJ   X11,LPR
)@@G@@NFLSH  . CLEAR BUFFER   @]@@@@EC0010 .    @#@@@@ECH010* NAME .    @#@@@@PS
)@@G@@       LI$T .     @#@@@@       END   .    @F@@@@/. SUPERVISE COMPILE, INPT
)@@G@@STRUCTION COUNTER, STATE VECTOR, ETC...   @G@@@@. THE CODE BELOW (DESK CPU
)@@G@@ALC RECOGNITION OF STMNT TYPE) IS IN BOTH IBANKS@G@@@@. AND MAY BE EXECUPV
)@@G@@TED FROM EITHER.  IN THIS WAY WE MINIMIZE UNNECESSARY @G@@@@. BANK SWITCPW
)@@G@@HING-- E.G. A SERIES OF SYS COMMANDS WILL KEEP US IN THE    @F@@@@. SYSCPX
)@@G@@MD I-BANK, SWITCHING ONLY WHEN AN EXECUTABLE STMNT IS HIT   @[@@@@.     PY
)@@G@@@C@@@@$(IBCOMN)      . ESTABLISH AS I-BANK COMMON     @G@[@@XQTR*  LMJ  PZ
)@@G@@ X11,CLOWER  . IF SYSERR RECOVERY, CLEAR WS SO LEXCAN GOES  @E@[@@XQT*  QA
)@@G@@ . BUT AT NORMAL ENTRY, SETUP HAS ALREADY DONE IT     @E@@[[XQT*    LMJ QB
)@@G@@   X11,CLOWER     . INITIALIZE LOWER WS POINTERS@G]@@@       LMJ   X11,CQC
)@@G@@ORINI  . INITIALIZE D-BANK CORE LIMITS TO DEFAULT SIZE@ @@@@       ER   QD
)@@G@@ EABT$       .    @G@@@@. AT THIS POINT, CALLER HAS LEFT EITHER )CLEAR OQE
)@@G@@R )LOAD CONTINUE IN     @B@@@@. THE INPUT BUFFER.  START PROCESSING IT  QF
)@@G@@@ @@@@       LMJ   X11,LEXINI  .    @ @@@@       LMJ   X11,LEXANL  .    QG
)@@G@@@D@@@@       ER    ERR$        . WE SHOULD NEVER COME HERE  @D@@@@      QH
)@@G@@ JE,U  A1,1 XQ0250 . IF SYSTEM COMMAND, GO DO IT@E@@@@       ER    ERR$ QI
)@@G@@       . OTHERWISE, SOMETHING IS AMISS    @[@@@@ .    @[@@@@.     @G@@@@QJ
)@@G@@. DESK CALCULATOR LEVEL-- THIS CODE CAN BE EXECUTED FROM EITHER IBANK   QK
)@@G@@@[@@@@.     @F@@@@XQ0100 NUSTAT,STSUSP XQ0190        . ESTABLISH SUSEPNDQL
)@@G@@ED STATE    @#@@@@. GET NEXT LINE   @#@[@@XQ0110 WSDUMP  .  @D@@[[XQ0110QM
)@@G@@  TZ     EABFLG         . IS ABORT FLAG UP?     @E@@[[        J      XQ0QN
)@@G@@999         . YES, GO FOLD UP THE TENT    @D@@[[        WSDUMP          QO
)@@G@@      . NO, DO OPTIONAL DUMP  @C[@@@       BRKCHK XQ0115     . SERVICE BQP
)@@G@@REAK KEY    @F@@@@XQ0115 ACCEPT XQ0250,XQ0200 XQ0195,XQ0720    . READ NEQQ
)@@G@@XT LINE     @F@@@@. WE HAVE A STMNT TO EXECUTE-- BE SURE WE HAVE THE CORQR
)@@G@@RECT IBANK  @A@@@@       CALREP,XQTREP X11,XQ0117    .@F@@@@. THIS CODE QS
)@@G@@IS REACHED ONLY WHEN WE'RE IN THE EXECUTION IBANK     @D@@@@       INSTRQT
)@@G@@S  . SO DON'T BOTHER MAKING IT COMMON     @C@@@@XQ0117 COMPIL  XQ0810   QU
)@@G@@ . AND THEN COMPILE IT  @B@@@@. RUN (OR RESUME RUNNING) CURRENT STMNT . QV
)@@G@@@F@@@@XQ0120 RUN   XQ0300,XQ0400,XQ0500,XQ0600  XQ0830,XQ0800,XQ0870    QW
)@@G@@@A@@@@. END OF CURRENT STMNT, CLEAN IT UP @E@@@@XQ0130 ANSPRT XQ0820    QX
)@@G@@ . PRINT STACKED RESULTS, IF ANY    @D@@@@       ERSCOD XQ0920     . GETQY
)@@G@@ RID OF COMPILED CODE   @^@@@@       ERSLEX XQ0920 .  @^@@@@       J    QZ
)@@G@@ XQ0110 .   @F@@@@. ERRORS.  BEFORE SERVICING, BE SURE WE HAVE THE CORRERA
)@@G@@CT I-BANK   @G@@@@$(IBCOMN)    . BE SURE TO SET CTR FOR CODE EXECUTED FRRB
)@@G@@OM EITHER IBANK   @C@@@@XQ0190 CALREP,XQTREP X11,XQ0730    . DEPTH ERRORRC
)@@G@@@A@@@@XQ0195 CALREP,XQTREP X11,XQ0820    .@[@@@@.     @#@@@@. OPEN FUNC-RD
)@@G@@-     @[@@@@.     @A@@@@XQ0200 CALREP,FUNREP X11,FUNDEF    .@A@@@@      RE
)@@G@@ J     XQ0210      . OOPS     @G@@@@       J     XQ0260      . GO CHECK RF
)@@G@@STATE IN CASE )CMND CAUSED EXIT     @^@@@@. ERR IN FUNDEF MODE    @B@@@@RG
)@@G@@XQ0210 LA,U  A0,STSUSP   . FOR GOOD LUCK  @C@@@@       SA    A0,STVCUR  RH
)@@G@@ . MARK SI AS DESKCALC  @G@@@@       J     XQ0110      . BUT STAY IN THIRI
)@@G@@S I-BANK FOR NEXT STATEMENT   @[@@@@.     @ @@@@. EXECUTE SYSTEM COMMANDRJ
)@@G@@ --   @[@@@@.     @E@@@@XQ0250 CALREP,SYSREP X11,SYSCMD    . LOAD BANK ARK
)@@G@@ND GO DO IT @A@@@@       J     XQ0270      . OOPS     @E@@@@. CHECK MODERL
)@@G@@ BECAUSE SYSCMNDS SUCH AS  )LOAD CAN CHANGE IT  @B@@@@XQ0260 LA    A0,STRM
)@@G@@VCUR   . CURRENT MODE   @F@@@@       JE,U  A0,STSUSP XQ0110 . IF SUSPENDRN
)@@G@@ED, STAY IN THIS IBANK  @F@@@@       CALREP,XQTREP X11,XQ0265    . ELSE RO
)@@G@@RELOAD EXECUTION IBANK  @F@@@@XQ0265 JE,U  A0,STEVAL XQ0510 . EVAL INPUTRP
)@@G@@ HAS SPECIAL TREATMENT  @B@@@@       ER    ERR$        . ELSE CRASH     RQ
)@@G@@@[@@@@.     @#@@@@. ERR IN SYS MODE @[@@@@.     @#@@@@       INSTRS .   RR
)@@G@@@F@@@@XQ0270 CALREP,XQTREP X11,XQ0275    . FORCE EXECUTION IBANK IN     RS
)@@G@@@C@@@@XQ0275 LA    A1,STVCUR   . GET CURRENT STATE    @C@@@@       TE,U RT
)@@G@@ A1,STEVAL   . IT CAN BE EVALIN     @B@@@@       TNE,U A1,STSUSP   . OR RU
)@@G@@SUSPENDED   @D@@@@       J     XQ0820      . IN WHICH CASE WE SUSPEND   RV
)@@G@@@C@@@@       ER    ERR$        . OTHERWISE WE GO DOWN @[@@@@/.    @A@@@@RW
)@@G@@. TRANSFER TO STATEMENT NO IN A1,A2 @[@@@@.     @#@@@@       INSTRS  .  RX
)@@G@@@F@@@@XQ0300 SA,H2 A2,XQSTMN   . TEMP SAVE STATEMENT NO TO BE XQT'D     RY
)@@G@@@D@@@@       PURGE             . GET RID OF THIS STATEMENT  @ @@@@      RZ
)@@G@@ ERSCOD            .    @ @@@@       ERSLEX            .    @E@@@@      SA
)@@G@@ TNZ   STVCHN      . IS THERE A STATE UNDER THIS?     @E@@@@       J    SB
)@@G@@ XQ0110      . NO, IGNORE THIS OP COMPLETELY    @B@@@@       LMJ   X11,USC
)@@G@@NPEND  . YES, POP IT UP @C@@@@       J     XQ0890      . IF TROUBLE, SYSSD
)@@G@@ERR   @B@@@@       LA    A0,STVCUR   . GET NEW STATE  @E@@@@       JNE,USE
)@@G@@ A0,STFUNX XQ0890 . IF ITS NOT FUNC, SYSERR     @C@@@@       LA    A0,STSF
)@@G@@VFNN   . GET NAMEBLOK ADDR    @D@@@@       LA,H2 A2,XQSTMN   . AND STMNTSG
)@@G@@ TO RESUME AT     @E@@@@       SA    A2,STVSTN   . NEXT STATEMENT NO TO SH
)@@G@@STATEVECTOR @G@@@@       J     XQ0427      . SINCE PENDANT FUNCS CAN BE SI
)@@G@@EDITED, RESET SV  @[@@@@.     @ @@@@/.    FUNC  EXECUTION MODE    @[@@@@SJ
)@@G@@.     @F@@@@L      PROC    . POST LOC OF LEXTEXT FOR CURRENT (NUMBERED) SK
)@@G@@STMNT @#@@@@LXPOST* NAME 1 .  @#@@@@       UNLI$T .   @C@@@@       LA   SL
)@@G@@ A0,STVSTN   . LINENO TO BE EXECUTED@B@@@@       TG,U  A0,1        . IS SM
)@@G@@IT .LE.0?   @F@@@@       TG    A0,STVFNL   . NO, DOES IT EXCEED THE END SN
)@@G@@OF TABLE?   @E@@@@       J     L(1,1)      . IF EITHER, GO EXIT FROM FUNSO
)@@G@@C     @E@@@@       AA    A0,STVFTA   . ELSE ADD ADDR OF ENTRY FOR LINE 0SP
)@@G@@@^@@@@       GO    LP$010 .   @C@@@@LZPOST* NAME 0 . ENTRY TO POST ADDR SQ
)@@G@@OF LINE ZERO@#@@@@       UNLI$T .   @F@@@@       LA    A0,STVFTA   . PICSR
)@@G@@K UP LINE ZERO ADDR FROM STATEVECT  @#@@@@LP$010* NAME .    @ @@@@      SS
)@@G@@ ABSADR A0         .    @E@@@@       LA,H2 A1,0,A0     . PICK UP ADDR OFST
)@@G@@ LEXICAL TEXT     @C@@@@       SA    A1,STVLXT   . PUT INTO STATEVECTOR SU
)@@G@@@E@[@@ DO 1-L(0,0) , LA,U A1,0 . IF LINE ZERO, CLEAR TRACE/STOP   @G@[@@SV
)@@G@@ DO   L(0,0) , LA,H1 A1,0,A0 . OTHERWISE, GET TRACE/STOP FLAGS FROM TBL SW
)@@G@@@D@[@@       SA    A1,STVTRC   . GET 6TH WORD FOR TRACE     @D@@[[      SX
)@@G@@  LA,H1  A1,0,A0        . GET TRACE/STOP FLAGS  @F@@[[ DO L(0,0) , SA A1SY
)@@G@@,STVTRC     . IF NOT FUNC HDR, SET TRACE FLAG   @ #@@@       SSL   A1,6 SZ
)@@G@@       .    @B@@@@       SA    A1,STVSTP   . DITTO FOR STOP @#@@@@      TA
)@@G@@ LI$T    .  @#@@@@       END     .  @[@@@@.     @#@@@@       INSTRS .   TB
)@@G@@@D@@@@XQ0400 SA   A1,XQFNMB    . TEMP SAVE ADDR OF NAMEBLOK @C@@@@      TC
)@@G@@ ABSADR A1         . ADDR OF NAME BLOK    @D@@@@       LA,H2 A0,1,A1    TD
)@@G@@ . GET RELAD OF NEXT DESCR    @E@@@@       LA,U  A2,ZTPFUN   . AND VALUETE
)@@G@@ FOR TYPE COMPARISONS   @D@@@@. SEARCH CHAIN OF DESCRS ON THIS NAME FOR TF
)@@G@@FUNC DESCR  @G@@@@XQ0410 JZ    A0,XQ0490   . IF CAN'T FIND FUNC, MAYBE ETG
)@@G@@RASED. VALUE ERR  @B@@@@       LA    A1,A0       . DUPE DESCR ADDR@ @@@@TH
)@@G@@       ABSADR A1         .    @E@@@@       JE,S1 A2,0,A1 XQ0415   . IF DTI
)@@G@@ESCR IS FUNC, WE'RE DONE@D@@@@       LA,H2 A0,2,A1     . OTHERWISE, GET TJ
)@@G@@FWD POINTER @C@@@@       J     XQ0410      . AND KEEP LOOKING     @B@@@@TK
)@@G@@XQ0415 TNZ,H2 2,A1       . IS DEF CLOSED? @F@@@@       TNZ,H2 1,A1      TL
)@@G@@ . AND IS THERE A CLOSED TABLE OF LINENOS?@C@@@@       J     XQ0920     TM
)@@G@@ . IF NEITHER, SYSERR   @E@@@@. EVERYTHING CHECKS OUT-- ESTABLISH THE FUTN
)@@G@@NC EXECUTION STATE@ @@@@XQ0420 NUSTAT,STFUNX XQ0730 . @G@@@@       LA   TO
)@@G@@ A0,STVDPT   . CURRENT STATEVECTOR DEPTH OF FUNC NESTING    @B@@@@      TP
)@@G@@ TG,U  A0,0777     . WITHIN RANGE?  @D@@@@       J     XQ0491      . NO,TQ
)@@G@@ STATEVECTOR OVERFLOW   @A@@@@       AA,U  A0,1        . BUMP     @D@@@@TR
)@@G@@       SA    A0,STVDPT   . POST NEW STATEVECTOR DEPTH @E@@@@       LA   TS
)@@G@@ A0,XQFNMB   . RECOVER RELADR OF FUNC NAMEBLOK  @E@@@@       SA    A0,STTT
)@@G@@VFNN   . AND PUT IT IN THE NEW STATEVECTOR@G@@@@       LMJ   X11,XQ0480 TU
)@@G@@ . THEN INITIALIZE TABLE ADDRESSES IN STATEVECT @G@@@@       SZ    STVSTTV
)@@G@@N      . SET NEXT LINE TO EXECUTE TO LINE ZERO (HDR)  @D@@@@       LZPOSTW
)@@G@@T            . POST ADDR OF LEXICAL TEXT  @F@@@@       LA    A2,STVLXT  TX
)@@G@@ . GET ADDR OF LEXICAL TEXT FROM STATEVECT@F@@@@       LMJ   X11,FUNCST TY
)@@G@@ . GO EXECUTE ENTRY TO FUNC (HEADER LINE) @ @@@@       J     XQ0470     TZ
)@@G@@ .    @C@@@@       LA    A0,STVFTA   . BASE ADDR OF FUNC TBL@F@@@@      UA
)@@G@@ LMJ   X11,FUNLBC  . AND GO CREATE LABEL VARIABLES, IF ANY  @ @@@@      UB
)@@G@@ J     XQ0800      .    @E@@@@       J     XQ0430      . THEN START EXECUC
)@@G@@UTING THE FUNC    @ @@@@. RESUMING PENDANT FUNCTION   @B@[@@XQ0427 LXPOSUD
)@@G@@T XQ0460     . POST TEXT DATA @B@@][XQ0427 LXPOST XQ0459     . POST TEXTUE
)@@G@@ DATA @G[@@@       SZ    STVSTP      . BE SURE STOPVECT FLAG IS OFF, ELSUF
)@@G@@E WE'LL LOOP@ @@@@       J     XQ0445      .    @ @@@@. NOW EXECUTE THRUUG
)@@G@@ LINENO TBL @B@@@@XQ0430 LA    A2,STVSTN   . LAST STMNT NO  @A@@@@      UH
)@@G@@ AA,U  A2,1        . BUMP IT  @ @@@@       SA    A2,STVSTN   .    @F@@@@UI
)@@G@@. NOTE: GOTO LEAVES STMNTNO (INT) IN A2 AND COMES DIRECTLY HERE   @E@@@@UJ
)@@G@@XQ0440 LXPOST XQ0460     . POST TEXT ADDR, STOP/TRACE DATA  @ @@@@XQ0445UK
)@@G@@ WSDUMP            .    @ @@@@       BRKCHK XQ0830     .    @D@@@@      UL
)@@G@@ TZ    STVSTP      . IS STOPVECTOR FLAG ON?     @B@@@@       J     XQ085UM
)@@G@@3      . YES, GO SUSPEND@C@@@@       COMPIL XQ0810     . COMPILE THIS STUN
)@@G@@MNT   @B@@@@. RUN (OR RESUME RUNNING) PRESENT STMNT   @F@@@@XQ0450 RUN  UO
)@@G@@ XQ0455,XQ0400,XQ0500,XQ0600 XQ0830,XQ0800,XQ0870     @C@@@@       ERSCOUP
)@@G@@D XQ0920     . PURGE COMPILED CODE  @G@@@@       ANSPRT XQ0820     . PRIUQ
)@@G@@NT ANSWER, IF NECESSARY (WITH TRACE CHK)  @C@@@@       J     XQ0430     UR
)@@G@@ . GO DO NEXT STMNT     @B@@@@. GO TO ENCOUNTERED (STMNT NO IS IN A2)   US
)@@G@@@ @[@@XQ0455 SA    A2,STVSTN   .    @F@[@@       ERSCOD XQ0920     . GETUT
)@@G@@ RID OF COMPILED CODE, THIS STMNT   @E@[@@       PURGE             . GETUU
)@@G@@ RID OF ANY STACKED GARBAGE   @F@[@@       J     XQ0440      . AND EXECUUV
)@@G@@TE THE DESTINATION STATEMNT   @F@@[[XQ0455  SA     A2,XQSTMN      . TEMPUW
)@@G@@ SAVE STATEMNT WE'LL GO TO    @G@@[[        ERSCOD XQ0920         . GET UX
)@@G@@RID OF COMPILED CODE FOR THIS STMNT @F@@[[        TNZ    STVTRC         UY
)@@G@@. IS THIS STATEMENT BEING TRACED?   @D@@[[        J      XQ0456         UZ
)@@G@@. NO, GO PURGE THE STACK@D@@[[        ANSPRT XQ0820         . YES, PRINTVA
)@@G@@ ITS RESULT @A@@[[        J      XQ0457         .     @F@@[[XQ0456  PURGVB
)@@G@@E                 . NO TRACE; CLEAR GARBAGE IN STACK  @E@@[[XQ0457  LA  VC
)@@G@@   A2,XQSTMN      . RECOVER TARGET LINENUMBER   @E@@[[        SA     A2,VD
)@@G@@STVSTN      . POST IT IN THE STATEVECTOR  @C@@[[        J      XQ0440   VE
)@@G@@    . AND LEAP TO IT    @C@@[[. GO TO LINE ZERO RESUMPTION OF PENDANT FUVF
)@@G@@NC--  @D@@[[XQ0459  SZ     STVSTN         . SET TARGET LINENUMBER @D@@[[VG
)@@G@@        LZPOST                . FIND STATEMENT TEXT   @F@@[[        SZ  VH
)@@G@@   STVSTP    . SINCE WE'RE RESUMING, WE CAN'T STOP    @C@@[[        J   VI
)@@G@@   XQ0465         . SO GO EXECUTE   @B^@@@. LINENO OUT OF RANGE, TAKE FUVJ
)@@G@@NC EXIT     @E@@@@XQ0460 SZ    STVSTN      . GET SET TO AGAIN EXECUTE LIVK
)@@G@@NE 0  @F@@@@       LZPOST            . POST ADDR OF LEXTEXT OF HEADER LIVL
)@@G@@NE    @E@[@@       LA    A2,STVLXT   . GET LEXICAL TEXT ADDR FOR SCANNERVM
)@@G@@@C@@[[        TZ     STVSTP    . IS STOPVECTOR SET?   @E@@[[        J   VN
)@@G@@   XQ0853         . YES, GO SUSPEND EXECUTION   @G@@[[XQ0465  LA     A2,VO
)@@G@@STVLXT      . NO, GET TEXT ADDR FOR EXECUTION RTNE    @G[@@@       LMJ  VP
)@@G@@ X11,FUNCEX  . TAKE EXIT PROCESSING OPTION OF HEADER LINE   @ @@@@      VQ
)@@G@@ J     XQ0920      .    @C@@@@       LA    A0,STVFTA   . GET FUNCTBL ADDVR
)@@G@@R     @E@@@@       LMJ   X11,FUNLBE  . AND ERASE LOCAL VARIABLES, IF ANYVS
)@@G@@@ @@@@       J     XQ0920      .    @C@@@@       LMJ   X11,UNPEND  . POPVT
)@@G@@ PREVIOUS STATE UP@ @@@@       J     XQ0920      .    @B@@@@       J    VU
)@@G@@ XQ0700      . AND RESUME IT  @[@@@@.     @G@@@@. ERROR DURING FUNC HEADVV
)@@G@@ER INITIALIZATION- SINCE HEADERS SHOULD NOT BE  @E@@@@. PRINTED, POP STAVW
)@@G@@TE TO CALLER BEFORE SIGNALLING THE ERROR  @[@@@@.     @F@@@@XQ0470 LA   VX
)@@G@@ A2,STVLXT   . RECOVER TEXT POINTER FOR LINE ZERO     @]@@@@  WSDUMP .  VY
)@@G@@@F@@@@       LMJ   X11,FUNCLR  . BE SURE NO LOCALS ARE PARTIALLY CREATEDVZ
)@@G@@@ @@@@       ER    ERR$        .    @C@@@@       LMJ   X11,UNPEND  . POPWA
)@@G@@ STATEVECT UP     @ @@@@       J     XQ0920      .    @ @@@@       J    WB
)@@G@@ XQ0800      .    @[@@@@.     @G@@@@. FUNC INITIALIZATION-- SET UP STATEWC
)@@G@@ VECTOR PARAMETERS FOR FUNCS.  USED @G@@@@. BOTH WHEN ENTERING AND ALSO WD
)@@G@@WHEN LEAVING (IN CASE PENDANT FUNC WAS    @]@@@@. EDITED)   @[@@@@.     WE
)@@G@@@]@@@@$(IBCOMN)   @E@@@@XQ0480 LA    A0,STVFNN   . GET NAMEBLOK ADDR FROWF
)@@G@@M STATEVECT @D@@@@       ABSADR A0         . PREPARE TO EXAMINE NAMEBLOKWG
)@@G@@@D@@@@       LA,H2 A1,1,A0     . GET DESCRIPTOR ADDR FROM IT@D@@@@      WH
)@@G@@ SA    A1,STVFND   . DESCR ADDR TO STATEVECT    @E@@@@       ABSADR A1  WI
)@@G@@       . PREPARE TO EXAMINE DESCRIPTOR    @F@@@@       LA,S1 A0,0,A1    WJ
)@@G@@ . JUST TO BE SAFE, GET THE BLOK TYPE     @D@@@@       JNE,U A0,ZTPFUN 0WK
)@@G@@      . IF NOT FUNC, SYSERR   @E@@@@       LA,H2 A0,1,A1     . GET ADDR WL
)@@G@@OF LINENO TBL FROM DESCR@G@@@@       LA,U  A0,1,A0     . STEP TABLE ADDRWM
)@@G@@ PAST 1ST (BLOK HEADER) WORD  @F@@@@       SA    A0,STVFTA   . SAVE FUNCWN
)@@G@@ TABLE (LINE ZERO) ADDRESS    @G@@@@       LA,H2 A0,0,A1     . FROM DESCWO
)@@G@@R, GET NO OF LINES (INCL LINE ZERO) @G@@@@       SA    A0,STVFNL   . SAVWP
)@@G@@E LAST LINENO+1 FOR OUT OF RANGE TESTS    @C@@@@       J     0,X11      WQ
)@@G@@ . RETURN TO CALLER     @#@@@@       INSTRS .   @[@@@@.     @ @@@@XQ0490WR
)@@G@@ ERROR YVALUE,XQ0800 .  @ @@@@XQ0491 ERROR YDEPTH,XQ0860 .  @[@@@@.     WS
)@@G@@@#@@@@       VARBLS .   @F@@@@XQSTMN RES   1           . NEXT STMNT ($GNWT
)@@G@@ FROM KEYBOARD LEVEL)   @#@@@@XQFNMB RES   1 .  @^@@@@/. EVALUATED INPUTWU
)@@G@@ STATE@[@@@@.     @#@@@@       INSTRS .   @D@@@@XQ0500 NUSTAT,STEVAL XQ0WV
)@@G@@730 . POST EVAL INPUT STATE   @ @@@@. GET INPUT LINE FROM TERMINAL@D@@@@WW
)@@G@@XQ0510 PRINT 8,WSSFEI    . SOLICIT INPUT FROM USER    @E@@@@       BRKCHWX
)@@G@@K XQ0510     . SERVICE BREAK AND RETRY INPUT    @B@@@@       ACCEPT XQ02WY
)@@G@@50,XQ0550 XQ0820,XQ0720 @ @@@@       COMPIL XQ0810      .   @B@@@@. RUN WZ
)@@G@@(OR RESUME RUNNING) CURRENT STMNT   @F@@@@XQ0520 RUN   XQ0552,XQ0400,XQ0XA
)@@G@@500,XQ0600 XQ0830,XQ0800,XQ0870 .   @D@@@@       ERSCOD XQ0810     . GETXB
)@@G@@ RID OF COMPILED CODE   @C@@@@       ANSTAK XQ0525     . PLACE RESULT INXC
)@@G@@ STACK@D@@@@       ERSLEX XQ0820     . GET RID OF LEXICAL TEXT    @F@@@@XD
)@@G@@       LMJ   X11,UNPEND  . RECOVER STMNT WHICH REQUESTED THE INPUT@ @@@@XE
)@@G@@       J     XQ0820      .    @D@@@@       J     XQ0700      . RESUME POXF
)@@G@@PPED UP STATE     @F@@@@. RESULT NOT PROPERLY STACKED, SIGNAL VAL ERR INXG
)@@G@@ CALLING STATE    @F@@@@XQ0525 ERSLEX            . GET RID OF PREVIOUS SXH
)@@G@@TATEMENT TEXT     @D@@@@       LMJ   X11,UNPEND  . RECOVER PREVIOUS STATXI
)@@G@@E     @ @@@@       J     XQ0820      .    @ @@@@       ERROR YVALUE,XQ08XJ
)@@G@@00 .  @#@@@@. ERROR CODES     @E@@@@XQ0550 ERROR YSYNTA,XQ0820    . EDITXK
)@@G@@ CMND ON INPUTTED LINE  @D@@@@XQ0552 ERROR YSYNTA,XQ0800    . GOTO DURINXL
)@@G@@G EXECUTION @[@@@@/.    @^@@@@.     UNQUOTE STATE---  @[@@@@.     @#@@@@XM
)@@G@@       INSTRS .   @D@@@@XQ0600 SA    A1,XQUQDT   . SAVE DATA ADDR FOR LEXN
)@@G@@XCAN  @C@@@@       SA    A5,XQUQCT   . SAVE CHARACTER COUNT @F@@@@      XO
)@@G@@ SA    A6,XQUQDS   . SAVE DESCRIPTOR ADDR FOR LATER ERASE   @#@@@@      XP
)@@G@@ WSDUMP .   @E@@@@       ATTCHK XQ0830     . IF USER HAS SIGNALED ATTN, XQ
)@@G@@ESCAPE@ @@@@       NUSTAT,STUNQU XQ0730 . @E@@@@       LA    A0,XQUQDS  XR
)@@G@@ . GET DESCR ADDR OF UNQUOTED STRING@D@@@@       SA    A0,STVFNN   . TREXS
)@@G@@AT IT AS NEW FUNCNAME   @B@@@@       LA    A0,XQUQDT   . GET DATA ADDR  XT
)@@G@@@C@@@@       LA    A5,XQUQCT   . GET CHARACTER COUNT  @F@@@@       ACCUNXU
)@@G@@Q XQ0630,XQ0630 XQ0820,XQ0720 . GET AND ANALYZE TEXT  @B@@@@       COMPIXV
)@@G@@L XQ0810     . COMPILE IT     @B@@@@. RUN (OR RESUME RUNNING) CURRENT STXW
)@@G@@MNT   @F@@@@XQ0610 RUN   XQ0552,XQ0400,XQ0500,XQ0600 XQ0830,XQ0800,XQ087XX
)@@G@@0     @E@@@@       ERSCOD XQ0920     . GET RID OF CODE FOR THIS STMNT   XY
)@@G@@@B@@@@       ANSTAK XQ0615     . RECOVER ANSWER @C@@@@       ERSLEX XQ09XZ
)@@G@@20     . AND ALSO LEXICAL TEXT@F@@@@       LA    A6,STVFNN   . RECOVER DYA
)@@G@@ESCRADDR OF UNQUOTED STRING   @B@@@@       LMJ   X11,ERASET  . GET RID OYB
)@@G@@F IT  @ @@@@       J     XQ0800      .    @F@@@@       LMJ   X11,UNPEND YC
)@@G@@ . GO BACK TO STATE WHICH CALLED UNQUOTE  @ @@@@       J     XQ0920     YD
)@@G@@ .    @D@@@@       J     XQ0700      . GO RESUME POPPED STATE     @F@@@@YE
)@@G@@. ERROR IN STAKPOP OF RESULT. SIGNAL VALUE ERR IN INVOKING STATE  @C@@@@YF
)@@G@@XQ0615 ERSLEX            . GET RID OF STMNT TEXT@D@@@@       LMJ   X11,UYG
)@@G@@NPEND  . POP PRECEDING STATE BACK UP@ @@@@       J     XQ0800      .    YH
)@@G@@@ @@@@       ERROR YVALUE,XQ0800 .  @ @@@@. SYSCMD OR EDIT CMND DETECTEDYI
)@@G@@@C@@@@XQ0630 LMJ   X11,UNPEND  . RECOVER CALLING STATE@ @@@@       J    YJ
)@@G@@ XQ0920      .    @D@@@@       ERROR YDOMAI,XQ0800    . POST DOMAIN ERROYK
)@@G@@R     @#@@@@       VARBLS .   @ @@@@XQUQDT RES   1           .    @#@@@@YL
)@@G@@XQUQDS RES   1 .  @B@@@@XQUQCT RES   1 . NO OF CHARS IN STRING    @A@@@@YM
)@@G@@/.    STATE-CHANGING OPERATIONS     @D@@@@.      RESUME EXECUTION OF A SYN
)@@G@@TATE WE HAVE POPPED UP  @[@@@@.     @#@@@@       INSTRS .   @A@@@@XQ0700YO
)@@G@@ LA    A0,STVCUR   . GET STATE@D@@@@       COMJMP A0,XQ0920 STSUSP,XQ012YP
)@@G@@0 STEVAL,XQ0520 ; @C@@@@                   STUNQU,XQ0610 STFUNX,XQ0450 .YQ
)@@G@@@[@@@@.     @C@@@@. END FILE WITHOUT )OFF CARD.  WIPE OUT THIS RUN@[@@@@YR
)@@G@@.     @G@@@@XQ0720 CALREP,SYSREP X11,SINOFF    . SIGNOFF CODE IS IN COMMYS
)@@G@@AND MODULE  @ @@@@. NO SPACE FOR NEW STATEVECTOR@ @@@@XQ0730 ERROR YDEPTYT
)@@G@@H,XQ0870 .  @[@@@@.     @[@@@@.     @F@@@@/.    EXECUTION SUSPENSION (ERYU
)@@G@@RORS AND/OR BREAKS AND/OR SVCLEAR)  @ @@@@.     *** ERROR ENTRIES ***   YV
)@@G@@@A@@@@.                   ***** XQT ERR   @C@@@@XQ0800 SX    X11,XQECHO YW
)@@G@@ . TURN ON ECHO FLAG    @C@@@@       LA,U  A0,0,X9     . CURRENT IC (ABSYX
)@@G@@OLUTE)@F@@@@       ANA,U A0,1        . ADJUST TO POINT TO LAST INSTR EXEYY
)@@G@@CUTED @D@@@@       RELADR A0         . MAKE IT RELATIVE TO THE WS @G@@@@YZ
)@@G@@       SA    A0,STVICT   . AND POST LOC N WHERE WE BUSTED IN STATEVECT  ZA
)@@G@@@B@@@@       J     XQ0840      . GO CLEAR STACK @B@@@@.                 ZB
)@@G@@  ***** COMPILATION ERR @C@@@@XQ0810 SX    X11,XQECHO  . TURN ON ECHO FLZC
)@@G@@AG    @B@@@@       LOGERR            . SEND ERROR MSG @C@@@@       ECHOSZD
)@@G@@             . PRINT THE BAD STMNT  @C@@@@       J     XQ0850      . GO ZE
)@@G@@TEST FOR POPUP    @A@@@@.                   ***** LEX ERR   @C@@@@XQ0820ZF
)@@G@@ SX    X11,XQECHO  . TURN ON ECHO FLAG    @A@@@@       LOGERR           ZG
)@@G@@ . SEND MSG @B@@@@       J     XQ0850      . GO START POPUP @C@@@@.     ZH
)@@G@@****  BREAK (OR O-U-T) DURING STMNT XQT-- @C@@@@XQ0830 SZ    XQECHO     ZI
)@@G@@ . TURN OF ECHO FLAG    @D@@@@.     GET RID OF THE TRACES OF AN EXECUTINZJ
)@@G@@G STATEMENT @D@@@@XQ0840 TNZ   XQECHO      . SHOULD WE ECHO THIS STMNT? ZK
)@@G@@@C@@@@       J     XQ0845      . NO, GO CLEAR STACK   @G@@@@       TZ   ZL
)@@G@@ CONSBR      . HAS HE GOTTEN TIRED OF LOOKING AT THIS STUFF?@E@@@@      ZM
)@@G@@ J     XQ0845      . YES, FORGET ABOUT PRINTING IT    @B@@@@       ECHOSZN
)@@G@@             . YES, DO IT     @B@@@@XQ0845 PURGE             . CLEAR STAZO
)@@G@@CK    @D@@@@       ERSCOD            . GET RID OF COMPILED CODE   @ @@@@ZP
)@@G@@. CHECK WHETHER WE'RE DONE    @C@@@@XQ0850 LA    A0,STVCUR   . GET CURREZQ
)@@G@@NT STATE    @E@@@@       JNE,U A0,STFUNX XQ0855 . IF NOT FUNC, GO SEE WHZR
)@@G@@AT    @C@@@@       TZ    XQECHO      . IS ECHO FLAG OFF     @G@@@@      ZS
)@@G@@ J     XQ0861      . NO, ON. WE'RE DONE, GO ESTABLISH KBD MODE    @F@@@@ZT
)@@G@@       TZ    CONSBR      . DOES HE REALLY WANT TO SEE THIS STUFF? @E@@@@ZU
)@@G@@       J     XQ0861      . NO-- QUIT WITHOUT PRINTING IT    @F@@@@XQ0853ZV
)@@G@@ ECHOL             . YES, WE HAVEN'T ECHOED, SO SEND LINE NO@E@@@@      ZW
)@@G@@ J     XQ0861      . AND GO ESTABLISH KEYBOARD MODE   @E@@@@XQ0855 ERSLEZX
)@@G@@X            . NOT FUNC, SO ERASE LEXICAL TEXT  @C@@@@       LA    A0,STZY
)@@G@@VCUR   . GET CURRENT STATE    @F@@@@       COMJMP A0,XQ0890 STSUSP,XQ086ZZ
)@@G@@4 STEVAL,XQ0866  STUNQU,XQ0860@C@@@@. UNQUOTE- CAN'T STOP HERE, SO KEEP AA
)@@G@@POPPING     @ @@@@XQ0860 LMJ   X11,UNPEND  .    @ @@@@       J     XQ089AB
)@@G@@0      .    @ @@@@       J     XQ0840      .    @[@@@@.     @B@[@@XQ0861AC
)@@G@@ LA    A0,STVCUR   . GET STATE VECT @D@[@@       JNE,U A0,STFUNX XQ0862 AD
)@@G@@IF NOT FUNC GO FINISH UP@ @[@@       LA    A0,STVFND   .    @ @@][XQ0861AE
)@@G@@ LA    A0,STVFND   .    @ #@@@       ABSADR A0         .    @C@@@@      AF
)@@G@@ TZ,S1 1,A0        . IS FUNCTION LOCKED?  @G@@@@       J     XQ0863     AG
)@@G@@ . YES- GO POP 1, CAN'T SUSP IN LOCKED FUNC     @F@[@@XQ0862 SZ    CONSBAH
)@@G@@R      . POPED UP INTO FUNC- CLEAR BREAK KEY    @F@@][       SZ    CONSBAI
)@@G@@R      . POPED UP INTO FUNC- CLEAR BREAK KEY    @F[@@@       SZ    STVSTAJ
)@@G@@P      . FOR GOOD LUCK, CLEAR STOP INDICATOR    @F@@@@       J     XQ010AK
)@@G@@0      . AND GO PUSH SUSP MODE ON TOP OF FUNC   @E@@@@XQ0863 PURGE      AL
)@@G@@       . GET RID OF CURRENT STATEMENT     @ @@@@       ERSCOD           AM
)@@G@@ .    @E@@@@       LZPOST            . PREPARE TO XQT LINE 0 OF FUNC    AN
)@@G@@@D@@@@       LA    A2,STVLXT   . GET ADDR OF HDR LINE TEXT  @E@@@@      AO
)@@G@@ LMJ   X11,FUNCLR  . GO CLEAR PUSHED DOWN VARIABLES   @C@@@@       J    AP
)@@G@@ XQ0890      . ERROR EXIT - SYS ERR @C@@@@       LA    A0,STVFTA   . GETAQ
)@@G@@ ADDR OF FUNCTABLE@D@@@@       LMJ   X11,FUNLBE  . ERASE ANY LOCAL LABELAR
)@@G@@S     @C@@@@       J     XQ0890      . ERROR EXIT - SYS ERR @ @@@@      AS
)@@G@@ LMJ   X11,UNPEND  .    @C@@@@       J     XQ0890      . ERROR EXIT - SYAT
)@@G@@S ERR @E@[@@       J     XQ0861      . GO SEE WHAT WE HAVE UNCOVERED    AU
)@@G@@@E@@][       J     XQ0845      . GO SEE WHAT WE HAVE UNCOVERED    @E[@@@AV
)@@G@@XQ0864 SZ    CONSBR      . POPPED UP INTO SUSEPNDED STATE-- @B@@@@      AW
)@@G@@ J     XQ0110      . GO RESUME IT   @E@@@@XQ0866 SZ    CONSBR      . POPAX
)@@G@@PED UP INTO EVAL INPUT STATE  @D@@@@       J     XQ0510      . GO TRY AGAY
)@@G@@AIN FOR INPUT     @[@@@@/.    @A@@@@.     ***** STATEVECTOR CLEAR OPN   AZ
)@@G@@@E@@@@XQREST* SX   X11,XQPEND  . SAVE RETURN AND SET )RESET FLAG  @ @@@@BA
)@@G@@       SX    X11,XQFPOP  .    @ @@@@       J     XQ0880      .    @D@@@@BB
)@@G@@XQ0870 SX    X11,XQFPOP  . TURN ON '1ST TIME' FLAG    @[@@@@.     @D@@@@BC
)@@G@@       SZ    XQPEND      . SET FLAG TO DO $G CODE     @E@@@@XQ0880 PURGEBD
)@@G@@             . GET RID OF CURRENT STATEMEMENT   @ @@@@       ERSCOD     BE
)@@G@@       .    @B@@@@       LA    A0,STVCUR   . CURRENT STATE  @E@@@@      BF
)@@G@@ JE,U  A0,STFUNX XQ0883      . IF FUNCTION, GO POP    @F@@@@       ERSLEBG
)@@G@@X            . ELSE GET RID OF LEXICALLY ANALYZED TEXT@C@@@@       LA   BH
)@@G@@ A0,STVCUR   . RECOVER CURRENT STATE@E@@@@       JNE,U A0,STSUSP XQ0883 BI
)@@G@@. IF NOT KEYBOARD, GO POP     @D@@@@       TZ    XQFPOP      . KEYBOARD:BJ
)@@G@@ IS THIS 1ST TIME?@E@@@@       TNZ   STVCHN      . NO, IS THERE A STATE BK
)@@G@@UNDER THIS  @A@@@@       J     XQ0888      . GET OUT  @F@@@@XQ0883 JNE,UBL
)@@G@@ A0,STFUNX XQ0885 . IF NOT FUNC, GO ERASE LEXTEXT     @F@@@@       LZPOSBM
)@@G@@T            . ELSE PREPARE TO XQT LINE 0 OF FUNC     @E@@@@       LA   BN
)@@G@@ A2,STVLXT   . GET ADDR OF HEADER LINE TEXT     @E@@@@       LMJ   X11,FBO
)@@G@@UNCLR  . GO CLEAR PUSHED DOWN VARIABLES   @ @@@@       J     XQ0890     BP
)@@G@@ .    @C@@@@       LA    A0,STVFTA   . GET ADDR OF FUNCTABLE@D@@@@      BQ
)@@G@@ LMJ   X11,FUNLBE  . ERASE ANY LOCAL LABELS     @ @@@@       J     XQ089BR
)@@G@@0      .    @B@@@@       J     XQ0886      . CONTINUE POPUP @E@@@@XQ0885BS
)@@G@@ ERSLEX            . NOT FUNC, SO PURGE LEXICAL TEXT  @^@@@@XQ0886 TNZ  BT
)@@G@@ XQPEND     @ @@@@       SZ    XQFPOP      .    @ @@@@       LMJ   X11,UBU
)@@G@@NPEND  .    @ @@@@       J     XQ0890      .    @D@@@@       J     XQ088BV
)@@G@@0      . GO BACK AND KEEP POPPING   @C@@@@XQ0888 TNZ   XQPEND      . FINBW
)@@G@@ISH UP SEQUENCE   @F@@@@       J     XQ0110      . RESUME AT KEYBOARD LEBX
)@@G@@VEL IN XQTSUP     @ @@@@       LX    X11,XQPEND  .    @D@@@@       J    BY
)@@G@@ 1,X11       . RETURN TO SYSCMD  )RESET   @[@@@@.     @ @[@@XQ0890 ERRORBZ
)@@G@@ YSYSTM      .    @ @[@@       LOGERR            .    @ @[@@       ER   CA
)@@G@@ ERR$        .    @[@[@@/.    @[@[@@.     @F@[@@. AT THIS POINT, WE WILLCB
)@@G@@ CLEAR THE STACK, ERASE TEMPORARIES, ETC. @ @[@@XQ0900 J     XQ0990     CC
)@@G@@ .    @ @[@@XQ0920 ERROR YSYSTM,XQ0910 .  @D@[@@XQ0910 LMJ   X11,ERRMSG CD
)@@G@@  . PRINT THE ERROR MESSAGE   @[@[@@.     @D@[@@XQ0990 J     XQ0110     CE
)@@G@@ . CONTINUE IN SUSPENDED MODE @A@@[[XQ0890 EQU   0           . SYSERR   CF
)@@G@@@A@@[[XQ0920 EQU   0           . SYSERR   @[@@[[.     @B@@[[. THIS IS WHCG
)@@G@@ERE WE GO DOWN THE TUBE...    @[@@[[.     @F@@[[XQ0999  LXI,U  X11,SYSRECH
)@@G@@P     . TERMINATION CODE IS IN SYSTEM REP @D@@[[        LIJ    X11,ERROFCI
)@@G@@F     . GO THERE AND DISAPPEAR@[@@[[.     @#F@@@       VARBLS .   @#@@@@CJ
)@@G@@XQLINK RES   1 .  @#@@@@XQECHO RES   1 .  @#@@@@XQFPOP RES   1 .  @#@@@@CK
)@@G@@XQPEND RES   1 .  @F@@@@/.   CLEAR STACK WITH IMPLIED PRINT (CALLED BY PCL
)@@G@@ROC ANSPRT, ABOVE)@[@@@@.     @#@@@@       INSTRS .   @ @@@@APRINT SX   CM
)@@G@@ X11,APLINK  .    @ @@@@       SZ    APPRNT      .    @D@@@@       LA   CN
)@@G@@ A0,STVCUR   . CURRENT EXECUTION STATE    @C@@@@       TNE,U A0,STFUNX  CO
)@@G@@ . EXECUTING A FUNCTION?@D@@@@       TNZ   STVTRC      . YES- IS TRACE FCP
)@@G@@LAG ON?     @F@@@@       J     AP0010      . NO, DON'T BOTHER PRINTING FCQ
)@@G@@UNC NAME    @C@@@@       LMJ   X11,LNFLSH  . FLUSH THE BUFFER AND @B@@@@CR
)@@G@@       SX    X11,APPRNT  . MARK IT FLUSHED@E@@@@       ECHOLN           CS
)@@G@@ . PUT LINENO IN BUF WITHOUT FLUSH  @D@@@@       SZ    STVTRC      . MARCT
)@@G@@K TRACE REQUEST SERVICED@D@@@@       SZ,H1 STOFLG      . TURN PRINT INHICU
)@@G@@BIT OFF     @C@@@@AP0010 TNZ   STVSTK      . IS ANYTHING STACKED? @A@@@@CV
)@@G@@       J     AP0040      . NO, EXIT @C@@@@AP0020 POP   A6          . GETCW
)@@G@@ NEXT DATA ITEM   @C@@@@       JZ    A6,AP0020   . IF NULL, IGNORE IT   CX
)@@G@@@C@@@@       TEP,U A6,0400000  . IS STACKMARK BIT OFF?@E@@@@       J    CY
)@@G@@ AP0030      . NO, GO EXAMINE THIS STACKMARK    @D@@@@       SA    A6,APCZ
)@@G@@ERAS   . SAVE POINTER FOR ERASURE   @E@@@@       TNZ,H1 STOFLG     . IS DA
)@@G@@PRINTING INHIBITED BY A STORE?@E@@@@       J     AP0025      . NO, GO PRDB
)@@G@@INT THE STACH CONTENTS  @E@@@@       POP   A5          . YES, PEEK UNDERDC
)@@G@@NEATH THIS DATUM  @E@@@@       PUSH  A5          . BUT BE SURE IT STAYS DD
)@@G@@STACKED     @E@@@@       TNE,U A5,SKMRHS   . IS IT END OF STATEMENT MARKDE
)@@G@@ER?   @E@@@@       J     AP0027      . YES, FORGET ABOUT PRINTING THIS  DF
)@@G@@@G@@@@       SZ,H1 STOFLG      . NO DISABLE PRINT INHIBIT (PROBABLE SEMIDG
)@@G@@COLON)@ @@@@AP0025 TNZ   APPRNT      .    @ @@@@       LMJ   X11,LNFLSH DH
)@@G@@ .    @D@@@@       SX    X11,APPRNT  . MARK THE BUFFER FLUSHED    @D@@@@DI
)@@G@@       LMJ   X11,PRNTDS  . AND PRINT CURRENT DATUM    @D@@@@       J    DJ
)@@G@@ AP0050      . OOPS, BREAK WHILE PRINTING @C@@@@AP0027  LA    A6,APERAS DK
)@@G@@  . RECOVER DESCRIPTOR  @ @@@@       LMJ   X11,ERASET  .    @C@@@@      DL
)@@G@@ J     XQ0890      . ERASE ERR IS SYSERR  @D@@@@       J     AP0020     DM
)@@G@@ . GO BACK FOR NEXT DATUM     @E@@@@AP0030 TE,U  A6,SKMRHS   . IS STACKMDN
)@@G@@ARK END OF STATEMENT?   @B@@@@       J     AP0020      . NO, IGNORE IT  DO
)@@G@@@D@@@@       SZ    STVSTK      . YES, SET STACK EMPTY FLAG  @ @@@@AP0040DP
)@@G@@ TZ    APPRNT      .    @C@[@@       LMJ   X11,LINSTR  . FLUSH OUTPUT BUDQ
)@@G@@FFER  @C@@][       LMJ   X11,LINFRS  . FLUSH OUTPUT BUFFER  @ [@@@      DR
)@@G@@ LX,H2 X11,APLINK .     @C@@@@       J     1,X11       . AND TAKE NORMALDS
)@@G@@ EXIT @D@@@@AP0050 LA    A6,APERAS   . BREAK-- GET LAST DATUM     @B@@@@DT
)@@G@@       LMJ   X11,ERASET  . GET RID OF IT  @ @@@@       J     XQ0890     DU
)@@G@@ .    @D@@@@       PURGE             . CLEAR REMAINDER OF STACK   @F@@@@DV
)@@G@@       LMJ   X11,LINITL  . FORCE BUF POINTERS TO EMPTY BUF STATE  @ @@@@DW
)@@G@@       LX    X11,APLINK  .    @C@@@@       J     0,X11       . TAKE EXITDX
)@@G@@ FOR BREAK  @#@@@@       VARBLS .   @#@@@@APLINK RES   1 .  @ @@@@APPRNTDY
)@@G@@ EQUF  APLINK,,H1  .    @#@@@@APERAS RES   1 .  @E@@@@/. MANAGE INSTRUCTDZ
)@@G@@ION COUNTER IN STMNTS OF SIMULATED MACHINE@[@@@@.     @A@@@@.           EA
)@@G@@             LOAD IC    @D@@@@$(IBCOMN) . IBANK COMMON, USED YB  )CLEAR EB
)@@G@@COMMAND     @E@@@@ICLOAD LX    X9,STVICT   . CURRENT STATEVECTOR INSTR CEC
)@@G@@TR    @ @@@@       ABSADR X9         .    @A@@@@       LXI,U X9,1       ED
)@@G@@ . SET STEP @D@@@@       LX,U  X8,IC0010   . AND POINTER FOR INST FETCH EE
)@@G@@@ @@@@       J     1,X11       .    @C@@@@. ACTUAL INSTRUCTION FETCHING EF
)@@G@@IS DONE HERE--    @#@@@@       INSTRS .   @A@@@@IC0010 LA,H2 A0,0,*X9   EG
)@@G@@ . NEXT INST@C@@@@       JZ    A0,IC0010   . IF NULL, SKIP IT     @B@@@@EH
)@@G@@       LMJ   X8,0,X8     . ELSE RETURN    @ @@@@       J     IC0010     EI
)@@G@@ .    @#@@@@. SAVE INST CTR---@ @@@@ICSAVE LA,U  A0,0,X9     .    @ @@@@EJ
)@@G@@       RELADR A0         .    @C@@@@       SA    A0,STVICT   . STASH IN EK
)@@G@@STATEVECT   @A@@@@       J     1,X11       . RETURN   @ @@@@/.  ECHO LINEL
)@@G@@ES FOR SUSPENSION @#@@@@       INSTRS .   @ @@@@ECHEAD SX,H2 X11,ECLINK EM
)@@G@@ .    @C@@@@       LMJ   X11,LNFLSH  . CLEAR OUT BUFFER     @C@@@@      EN
)@@G@@ LA    A0,STVCUR   . GET CURRENT STATE    @F@@@@       JE,U  A0,STFUNX EEO
)@@G@@C0010 . IF FUNC EXECUTION, GO PRINT NAME  @B@@@@       LA,U  A1,ASPACE  EP
)@@G@@ . ELSE GET BLANK @B@@@@ DO 6 , LMJ X2,0,X2      . AND INDENT     @ @@@@EQ
)@@G@@       J     EC0020      .    @B@@@@EC0010 LA    A6,STVFNN   . NAMEBLOK ER
)@@G@@ADDR  @C@@@@       LMJ   X11,PRTNAM  . CONVERT TO CHARACR   @ @@@@      ES
)@@G@@ J     *ECLINK     .    @C@@@@       LA,U  A1,ALBRAK   . OPENING LEFT BRET
)@@G@@ACKET @C@@@@       LMJ   X2,0,X2     . DUMP INTO OUTBUF     @E@@@@      EU
)@@G@@ DSL   A0,72       . INITIALIZE REGS FOR FORMAT RTNE  @D@@@@       LA   EV
)@@G@@ A4,STVSTN   . GET CURRENT STATEMENT NO   @B@@@@       DSL   A4,36      EW
)@@G@@ . SIGN EXTEND IT @A@@@@       LMJ   X11,FORMI   . PRINT IT @ @@@@      EX
)@@G@@ J     *ECLINK     .    @D@@@@       LA,U  A1,ARBRAK     . CLOSING RIGHTEY
)@@G@@ BRACKET    @A@@@@       LMJ   X2,0,X2     . PRINT IT @C@@@@       LA,U EZ
)@@G@@ A1,ASPACE   . GET TRAILING SPACE   @F@@@@ DO 2 , LMJ X2,0,X2      . ANDFA
)@@G@@ FILL 2 IN CASE TRACE OUTPUT FOLLOWS@E@@@@EC0020 LMJ   X11,LINSUS  . POSFB
)@@G@@T CURRENT BUFFER POINTERS     @ @@@@       LX,H2 X11,ECLINK  .    @B@@@@FC
)@@G@@       J     1,X11       . NORMAL EXIT    @[@@@@.     @ @@@@. ENTRY TO PFD
)@@G@@RINT TEXT LINE--  @[@@@@.     @ @@@@ECTEXT SX,H2 X11,ECLINK  .    @G@@@@FE
)@@G@@       TNZ   STVLXT      . IS THERE ANY LEXICAL TEXT TO BE PRINTED?     FF
)@@G@@@C@@@@       J     EC0100      . NO, FORGET THIS STUFF@B@@@@       LA   FG
)@@G@@ A0,STVCUR   . CURRENT STATE  @G@@@@       JNE,U A0,STFUNX EC0030 . IF NFH
)@@G@@OT EXECUTING A FUNC, GO PRINT IT    @D@@@@       LA    A0,STVFND   . ELSFI
)@@G@@E GET FUNC DESCR ADDR   @ @@@@       ABSADR A0         .    @C@@@@      FJ
)@@G@@ TZ,S1 1,A0        . IS FUNC UNLOCKED?    @F@@@@       J     EC0100     FK
)@@G@@ . NO, LOCKED-- EXIT WITHOUT PRINTING IT  @E@@@@EC0030 LMJ   X11,LINSUS FL
)@@G@@ . POST CURRENT LINE BUF POINTERS   @D@@@@       LA    A2,STVLXT   . GETFM
)@@G@@ ADDR OF LEXICAL TEXT   @G@@@@       LA,U  A1,0        . TURN OFF FLAG MFN
)@@G@@ARKING LOC IN TEXT OF ERROR   @G@@@@       TNZ   STVCCL      . IS THERE FO
)@@G@@ANY COMPILED CODE LEAYING AROUND?   @E@@@@       J     EC0050      . NO,FP
)@@G@@ WE CAN'T LOCATE THE ERROR    @D@@@@       LA    A1,STVICT   . YES, GET FQ
)@@G@@INSTR COUNTER     @D@@@@       JZ    A1,EC0050   . IF NULL, DONWT MARK EFR
)@@G@@ITHER @F@@@@       ABSADR A1         . LOCATE THE COMPILDE WORD WE DIED FS
)@@G@@ON    @E@@@@       LA,H1 A1,0,A1     . AND GET LEXICAL ITEMNO FROM IT   FT
)@@G@@@F@@@@EC0050 LNA,U A4,1        . POST FLAG INHIBITING ECHO OF LINE NUM  FU
)@@G@@@D@@@@       SZ    A3          . ZERO TO LABEL PRINT CONTROL@C@@@@      FV
)@@G@@ LMJ   X11,LEKOWF  . GO PRINT THE TEXT    @ @@@@       J     *ECLINK    FW
)@@G@@ .    @ @@@@EC0100 LX    X11,ECLINK  .    @B@@@@       J     1,X11      FX
)@@G@@ . NORMAL EXIT    @#@@@@       VARCON .   @]@@@@ECLINK +0 . @B@@@@/.    FY
)@@G@@MAKE STATES PENDANT AND UN-PENDANT  @[@@@@.     @#@@@@       INSTRS  .  FZ
)@@G@@@ @@@@SUSPEN* SX   X11,SPLINK  .    @C@@@@       LMJ   X11,STKFLU  . FLUGA
)@@G@@SH STACK TO CORE  @ @@@@       J     SP0990      .    @D@@@@       LMJ  GB
)@@G@@ X11,ICSAVE  . SAVE CURRENT INSTR COUNTER @^@@@@       J     SP0990     GC
)@@G@@@G@@@@SP0010 ALLOCT,U WSSVSI SP0900 . GET SPACE TO PUSH DOWN OLD STAKBLOGD
)@@G@@K     @F@@@@       SA    A1,A2       . TEMP SAVE REL BLOK ADDR FOR CHAINGE
)@@G@@ING   @C@@@@       ABSADR A1         . SET UP 'TO' ADDR     @ @@@@      GF
)@@G@@ LXI,U A1,1        .    @C@@@@       LA,U  A0,WSTATE   . SET UP 'FROM' AGG
)@@G@@DDR   @ @@@@       LXI,U A0,1        .    @ @@@@       LR,U  R1,WSSVSI  GH
)@@G@@ .    @D@@@@       BT    A1,0,*A0    . MOVE OLD STAKBLOK TO WS    @D@@@@GI
)@@G@@       SA    A2,STVCHN   . STASH NEW CHAIN POINTER    @E@@@@       SZ   GJ
)@@G@@ STVSTK      . POST STACK EMPTY FOR THIS STATE  @D@@@@       SZ    STVICGK
)@@G@@T      . CLEAR INSTRUCTION COUNTER  @D@@@@       SZ    STVLXT      . ADDGL
)@@G@@RESS OF LEXICAL TEXT    @E@@@@       SZ    STVCCL      . AND ADDRESS OF GM
)@@G@@COMPILED CODE     @G@@@@.  ....... NOTE:  BUT DON'T FARBLE WITH FUNCTIONGN
)@@G@@ NESTING DEPTH COUNTER  @ @@@@SP0100 LX    X11,SPLINK  .    @B@@@@      GO
)@@G@@ J     1,X11       . NORMAL EXIT    @A@@@@SP0900 ERROR YWSFUL,SP0990    GP
)@@G@@.     @[@@@@.     @F@@@@. ****** CODE BELOW IS I-BANK COMMON BECAUSE )SYGQ
)@@G@@S REP MAY USE IT  @]@@@@$(IBCOMN) . @[@@@@.     @D@@@@.     WAKEUP PENDIGR
)@@G@@NG PROCESSES (I.E. ONE-LEVEL POPUP) @C@@@@SVCLEA* SZ   STVCHN      . SETGS
)@@G@@ CLEAR INDICATOR  @ @@@@UNPEND* SX   X11,SPLINK  .    @C@@@@       LA   GT
)@@G@@ A1,STVCHN   . GET LAST BLOK POINTER@C@@@@       JZ    A1,UP0020   . IF GU
)@@G@@NONE, GO CLEAR    @F@@@@UP0010 LA    A0,A1       . OTHERWISE USE AS A 'FGV
)@@G@@ROM' ADDR FOR BT  @E@@@@       ABSADR A0         . SET 'FROM' ADDR=ABS OGW
)@@G@@F LAST BLOK @B@@@@       LXI,U A0,1        . AND INCR=1 WD  @^@@@@      GX
)@@G@@ J     UP0030     @E@@@@UP0020 LA,U  A0,A1       . SET TO XFER FROM REG GY
)@@G@@WITHOUT INCR@E@@@@UP0030 LA,U  A2,WSTATE   . SET 'TO' ADDR TO CURRENT BLGZ
)@@G@@OK    @ @@@@       LXI,U A2,1        .    @C@@@@       LR,U  R1,WSSVSI  HA
)@@G@@ . NO OF WDS TO MOVE    @F@@@@       BT    A2,0,*A0    . MOVE FROM WS ORHB
)@@G@@ REG TO CURRENT STATE   @C@@@@       JZ    A1,UP0100   . IF WE CLEARED, HC
)@@G@@EXIT  @C@@@@UP0040 LA,U  A0,WSSVSI   . ELSE GET BLOCK SIZE  @D@@@@      HD
)@@G@@ FREE              . AND RELEASE OLD STAKBLOK   @B@@@@. CHECK FOR RESUMPHE
)@@G@@TION OF PENDANT FUNC    @C@@@@UP0050 LA    A0,STVCUR   . GET CURRENT STAHF
)@@G@@TE    @E@@@@       TNE,U A0,STFUNX   . IS THIS FUNC EXECUTION MODE?     HG
)@@G@@@E@@@@       TZ    STVCCL      . YES, IS THERE COMPILED CODE?     @F@@@@HH
)@@G@@       J     UP0090      . DONE IF FUNC COULD NOT HAVE BEEN EDITED@F@@@@HI
)@@G@@       LMJ   X11,XQ0480  . OTHERWISE, RESET TABLES IN STATEVECTOR @[@@@@HJ
)@@G@@.     @B@@@@UP0090 LMJ   X11,ICLOAD  . RESTORE IC     @ @@@@       J    HK
)@@G@@ UP0990      .    @B@@@@UP0100 LX    X11,SPLINK  . NORMAL EXIT    @ @@@@HL
)@@G@@       J     1,X11       .    @[@@@@.     @]@@@@SP0990 .    @B@@@@UP0990HM
)@@G@@ LX    X11,SPLINK  . ERROR EXIT     @A@@@@       J     0,X11       . RETHN
)@@G@@URN   @[@@@@.     @#@@@@       VARBLS  .  @#@@@@SPLINK RES   1 .  @ @@@@HO
)@@G@@       END               .    ___@@@       SA    A1,A2       . TEMP SAVEHP
)@@G@@*[S@@@*SDFF*@ @@@@@HDG CULL EXTERNAL REFERENCES @#@@@@@CULL,IWX ASM/72  HQ
)@@G@@@#@@@@  PROC AXR$ RES I$@ @@@@@HDG  CULL ALL REFERENCES     @#@@@@@CULL,HR
)@@G@@I ASM/72    @#@@@@  PROC AXR$ RES I$@E@@@@ INSTRS CONSTS VARBLS VARCON JHS
)@@G@@NGD JE JNE JG JNG JLE JOP JEP @F@@@@  TSC LTSC TSL LTSL TSTO TLD TSA DTGHT
)@@G@@ DTLE WSDEF PSUDOP SKMARX     @[@@@@@HDG  ___@@@*[S@@@*SDFF*@G@@@@$: TESHU
)@@G@@T DATA USING WORKSPACE 1 ADVANCEDEX (FROM BACK OF APL/360 MANUAL) @^@@@@HV
)@@G@@     )LOAD 1 ADVANCEDEX @]@@@@     )FNS   @]@@@@     )VARS  @#@@@@     DHW
)@@G@@ESCRIBE     @]@@@@     DPACK  @#@@@@     $FPACK["]$F  @#@@@@     $FUNPACHX
)@@G@@K["]$F@ @@@@     +P$SPACK 2314 7 17 68    @#@@@@      UNPACK P    @ @@@@HY
)@@G@@     UNPACK PACK 2311 9 21 72 @ @@@@     PACK UNPACK 92137142     @#@@@@HZ
)@@G@@     PACK 1 1 31 1@#@@@@     UNPACK 3000  @]@@@@     DHILB  @#@@@@     $IA
)@@G@@FHILB["]$F  @]@@@@     HILB 3 @]@@@@     DINV   @#@@@@     $FINV["]$F   IB
)@@G@@@#@@@@     $FINVP["]$F  @^@@@@     +N$SINV M $S HILB 3@]@@@@     M+.#N  IC
)@@G@@@]@@@@  )CLEAR    ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ID
)@@G@@*[S@@@*SDFF*@A@@@@           WHENEVER X.GE.R/2,N=N+R  @]@@@@   )CLEAR   IE
)@@G@@@E@@@@           WHENEVER X(0).NE.0.,XLOG=.434*ELOG.(.ABS.X(0))   @C@@@@IF
)@@G@@           02  FILLER PICTURE X(8) VALUE SPACE. @G@@@@           WHENEVEIG
)@@G@@R X(NDATA).NE.0., XNLOG=.434*ELOG.(.ABS.X(NDATA))     @[@@@@GO    @#@@@@IH
)@@G@@007146     02  SE @#@@@@           N=H*R  @^@@@@   374    27    16    32II
)@@G@@@ @@@@ 5470 IF Y2 = 26 THEN 5440    @E@@@@           02  AS  PICTURE X(1IJ
)@@G@@4) VALUE 'ACCOUNT STATUS'.    @I@@@@020030     02 ITIMEX               PIK
)@@G@@ICTURE 9(6).                        M6300280    @#@@@@          AXR$    IL
)@@G@@@ @@@@           GO TO BLOCK-6.     @I@@@@060190     MOVE IETIMEX TO IETIM
)@@G@@IME.                                      M6301020    @A@@@@      CALL GIN
)@@G@@EN(LX,0,WREG,0,WREG)    @E@@@@           IF ACT-EXP LESS THAN BUD-ALLOW IO
)@@G@@GO TO BLOCK-5.    @#@@@@      ANMB=NOIN-2 @I@@@@040200     02 ILTIME USAIP
)@@G@@GE COMPUTATIONAL SYNCHRONIZED RIGHT             M6300740    @I@@@@060200IQ
)@@G@@     MOVE IUTIMEX TO IUTIME.                                      M63010IR
)@@G@@30    @ @@@@      WRITE (F1,N,NFACTORIAL)$@I@@@@001060 SOURCE-COMPUTER. IS
)@@G@@IBM-7094.                                       PROBLEM2    @^@@@@   589IT
)@@G@@    36    10    27@B@@@@27    ADDR(CODE(B1)) = ORIGIN + I + 1     @I@@@@IU
)@@G@@002200     MOVE GRTST-NO TO DIS-1.                                      IV
)@@G@@PROBLEM2    @H@@@@010050 OBJECT-COMPUTER. UNIVAC-1108.                  IW
)@@G@@                  UNIVAC@E@@@@           SUBTRACT TOT-UNDER FROM TOT-OVEIX
)@@G@@R GIVING DIFF.    @I@@@@060250     RETURN VIA 'READR'.                  IY
)@@G@@                        M6301090    @^@@@@   631    35    12    29@A@@@@IZ
)@@G@@      V2=359.*((W2/28.8)+(W4/18.8)) @G@@@@           DISPLAY '          JA
)@@G@@                            ' UPON SYSOU1.@]@@@@      I=I+1 @A@@@@      JB
)@@G@@CALL GEN(LX,0,WREG,REL,0)     @#@@@@           X=N-H*R@E@@@@C  CHECK FORJC
)@@G@@ SUBSCRIPTED VARIABLES WITH SIMPLE CONSTANT OR  @^@@@@           D'N A(1JD
)@@G@@31)   @^@@@@   LIB  FORMATSCANNR*Z. @#@@@@$F INITIALIZE     @#@@@@DO $S JE
)@@G@@'X1DO $S B' @G@@@@           DISPLAY 'NET EXCESS OF ACTUAL OVER BUDGET (JF
)@@G@@MINUS SIGN INDICAT@ @@@@ 5070 REM NO SPECIAL SITUATION@^@@@@          + JG
)@@G@@        0   @#@@@@DFREN    2BUTOR   @ @@@@          +         W$,0,0    JH
)@@G@@@H@@@@DGEOG411 1HISTORICAL GEOGRAPHY OF NORTH AMERICA AFTER 1800 (03) (PJI
)@@G@@-F) /129/   @]@@@@$COMPILE MAD@D@@@@       BLOCK-3A. COMPUTE RUN-OVER = JJ
)@@G@@BUD-ALLOW * 0.    @C@@@@           COMPUTE RUN-UNDER = ACT-EXP * 0.     JK
)@@G@@@#@@@@      GO TO 200   @A@@@@           EXTERNAL FUNCTION (N,R)  @I@@@@JL
)@@G@@060230     MOVE IRESTX TO IREST.                                        JM
)@@G@@M6301060    @C@@@@ OUT:     WRITE ('N= ',I,'N FACTORIAL= ',NFACT) @ @@@@JN
)@@G@@           W'R .NOT. C(13)    @D@@@@           02  FILLER               JO
)@@G@@   PICTURE X(6).  @D@@@@           02  ACCT-NUM                PICTURE XJP
)@@G@@(5).  @#@@@@A $S 2 2 2 $R $I 8@#@@@@$IBJOB         GO @A@@@@       WORKIJQ
)@@G@@NG-STORAGE SECTION.     @I@@@@030040     02 IRESTO               PICTUREJR
)@@G@@ X(8).                        M6300540    @ @@@@      DATA IN/1H@,13*1H JS
)@@G@@/     @^@@@@      DIMENSION PKT(3)  @#@@@@         00000    @#@@@@      JT
)@@G@@   2750J    @#@@@@         63482    @#@@@@         37519    @#@@@@G98453JU
)@@G@@505034000   @^@@@@   393    23    13    34@ @@@@      DATA PKT/0,17K6,62JV
)@@G@@K6/   @^@@@@      DIMENSION OUT(3)  @B@@@@      DATA OUT/6HENTER ,6HSTATJW
)@@G@@EM,6HENT   /@G@@@@           VECTOR VALUES BLUR2=$ S30, 8HXBAR IS ,F12.6JX
)@@G@@,S40,8HYBAR IS  , @^@@@@          1    F12.6//*$@E@@@@      CALL GEN(J,0JY
)@@G@@,0,0,UA1) @INDIRECT JUMP THRU LABEL TABLE @ @@@@    66     0     0     0JZ
)@@G@@     0@ @@@@    50     0     0     0     0@ @@@@    46     0     0     0KA
)@@G@@     0@I@@@@002040 77  NO-OF-NOS     PICTURE  99, VALUE ZERO.           KB
)@@G@@            PROBLEM2    @I@@@@002050 77  SUM-OF-NOS    PICTURE  S99999V9KC
)@@G@@9, VALUE ZERO.                PROBLEM2    @A@@@@           MOVE TOT-OVERKD
)@@G@@ TO DIS.    @B@@@@ 5030 LET A1 = R0(I1,A1)  @FROM TABLE     @A@@@@      KE
)@@G@@COMMON/G2/TOKEN,PROD,CONSCT   @ @@@@ 5480 IF Y2 <> 27 THEN 5510   @C@@@@KF
)@@G@@           02  FILLER             PICTURE X(5). @G@@@@PROBLM   1 3  4 2 KG
)@@G@@0 0 0  2  2  2                                       1@I@@@@002010 WORKIKH
)@@G@@NG-STORAGE SECTION.                                         PROBLEM2    KI
)@@G@@@I@@@@002030 77  LEAST-NO      PICTURE  S999V99, VALUE ZERO.            KJ
)@@G@@      PROBLEM2    @A@@@@       X$DUMP ECSAV6,7,'O','XAR'    @I@@@@002060KK
)@@G@@ 77  MEAN-OF-NOS   PICTURE  S999V99, VALUE ZERO.                  PROBLEKL
)@@G@@M2    @B@@@@          JGD       EA3,L($-3)        .   @D@@@@          SSKM
)@@G@@C       A1,1              . SHIFT PATTERN @A@@@@      FLD(18,18,PKT(2))=KN
)@@G@@LOC(OUT)    @E@@@@           THROUGH A10, FOR VALUES OF I=2,3,5,7,11,13,KO
)@@G@@17,19 @A@@@@A10        C(I)=MOD.(CNTRL,I).NE.0  @A@@@@           C(8)=MOKP
)@@G@@D.(CNTRL,23).NE.0 @[@@@@$F SIM@[@@@@'HI!' @ @@@@CGEOG411 HIST GEOG OF N KQ
)@@G@@AMER  @A@@@@      FLD(18,18,PKT(3))=LOC(IN(2))  @C@@@@           WHENEVEKR
)@@G@@R Y(I).L. YSMALL, YSMALL=Y(I) @]@@@@2 1 $R ' '  @]@@@@INITIALIZE  @I@@@@KS
)@@G@@040110     02 CODE2 USAGE COMPUTATIONAL SYNCHRONIZED RIGHT PICTURE 9.   KT
)@@G@@M6300650    @D@@@@          J         L(LOOP)           . DO IT AGAIN   KU
)@@G@@@F@@@@SUBPRO   2                                          YES  YES  YES KV
)@@G@@@#@@@@'WHICH ONE$Q'     @E@@@@7.560000E+00  0.0000    2.016294E+010.0029KW
)@@G@@40E+001.260000E+01@I@@@@003200     CLOSE DATA-FILE-1. STOP RUN.         KX
)@@G@@                        PROBLEM2    @B@@@@EA0       EQU       108       KY
)@@G@@        .   @A@@@@           LABEL RECORD OMITTED.    @I@@@@002141     AKZ
)@@G@@DD 1 TO NO-OF-NOS.                                          PROBLEM2    LA
)@@G@@@ @@@@      CALL PLOTC(1.0,0.0,-3)  @B@@@@      CALL RECT(1.0,0.0,5.0,2.LB
)@@G@@0,32.0)     @B@@@@      CALL PAR( 1.0,0.0,5.,.25,32.0,8)    @ @@@@      LC
)@@G@@CALL PLOTC(10.0,5.0,-3) @#@@@@100   BIG=0.0     @^@@@@      DO 150  I=1,LD
)@@G@@NPLT  @E@@@@       FILE-CONTROL.  SELECT TRANS-FILE ASSIGN TO SYSIN1.   LE
)@@G@@@C@@@@           MOVE SPACE TO ACCT-ANALYSIS-WORK.    @I@@@@003060     DLF
)@@G@@ISPLAY '     '  UPON SYSOU1.                                PROBLEM2    LG
)@@G@@@E@@@@      SUBROUTINE GVESZE(REF,NPLT,NSECT,XMAX,XMIN,SCALE)     @#@@@@LH
)@@G@@           N'R    @^@@@@MEMPAR    LSL       EA3 @#@@@@      GO TO 21    LI
)@@G@@@]@@@@AGAIN:RESET @[@@@@DOIT  @C@@@@           WHENEVER  Y(I).G. YLARGE,LJ
)@@G@@ YLARGE=Y(I)@A@@@@           MOVE DIFF TO PCT-UNDER.  @A@@@@           MLK
)@@G@@OVE ZERO TO PCT-OVER.   @^@@@@       WRITE-TOTALS.    @C@@@@           CLL
)@@G@@LOSE TRANS-FILE, BUDGET-ANALYSIS.   @B@@@@      IF(TCODE(TRIP).EQ.63) SULM
)@@G@@BPT =SUBPT-1@^@@@@       DATA DIVISION.   @^@@@@       FILE SECTION.    LN
)@@G@@@^@@@@       END-ROUTINE.     @]@@@@'X3:  ';X3I @I@@@@020040     02 ICTILO
)@@G@@MEX              PICTURE 9(5).                        M6300290    @ @@@@LP
)@@G@@           END OF CONDITIONAL @I@@@@020150 01  OUTREC.                  LQ
)@@G@@                                    M6300400    @B@@@@             PERFOLR
)@@G@@RM ACT-UNDER-BGT-ROUTINE@G@@@@           ELSE MOVE SPACE TO ACCOUNT-STATLS
)@@G@@US, MOVE ZERO TO PCT-OVER,    @^@@@@           YLARGE=Y(0)  @C@@@@      LT
)@@G@@     THROUGH ORDER, FOR I=0,1,I.GE.NDATA  @H@@@@005056      02  CCC     LU
)@@G@@           PICTURE X.                           000169@G@@@@       77  TLV
)@@G@@OT-OVER                    PICTURE 99999V99 VALUE ZERO.     @B@@@@150   LW
)@@G@@IF(XREF(I,2).GT.BIG)  BIG=XREF(I,2) @^@@@@    5 B(J)=ZT(J)+ZTA    @A@@@@LX
)@@G@@      X=XREF(I,J)+DEL*FLOAT(I-1)    @B@@@@      WRITE(6,151) (B(J),C(J),LY
)@@G@@J=1,KP)     @^@@@@       F2=FUNC2(X,G)    @A@@@@           WHENEVER X(I)LZ
)@@G@@.G.X(I+1)   @ @@@@       ENVIRONMENT DIVISION.  @I@@@@070110     MOVE IDMA
)@@G@@ME TO IDMEO.                                          M6301200    @D@@@@MB
)@@G@@           THROUGH ORDER, FOR Z=0,1,Z.G.NDATA.OR.CHECK@^@@@@END: 'HOW MAMC
)@@G@@NY YEARS'   @#@@@@ENDDOIT: $: OUTPUT@E@@@@1 9 $R ' T ','Y1 ','Y2 ','Y3 'MD
)@@G@@,'Y4 ','X1 ','X2 ','X3 ','X4 '@[@@@@*END  @#@@@@ [HDG,J,K,1]&     @B@@@@ME
)@@G@@      SUBROUTINE  NWPLTR(XREF,NPLT,NUMPLT)@[@@@@*.    @[@@@@*.    @I@@@@MF
)@@G@@       TZE     *+2                                                      MG
)@@G@@.719.GWB    @I@@@@       TPL     OUT1                                   MH
)@@G@@                  .719.GWB    @I@@@@       TZE     OUT1+2               MI
)@@G@@                                    .719.GWB    @I@@@@       CLA     I  MJ
)@@G@@                                                      .719.GWB    @[@@@@MK
)@@G@@OUT   @I@@@@       LXA     J,2                                          ML
)@@G@@            .719.GWB    @I@@@@       CLA     HOLD,2                     MM
)@@G@@                              .719.GWB    @I@@@@       TMI     BACK2    MN
)@@G@@                                                .719.GWB    @I@@@@      MO
)@@G@@ TSX     SWITCH,4                                                 .719.GMP
)@@G@@WB    @^@@@@          LDSL      A0,6@F@@@@C-- BACK COUNT IS THE NUMBER OMQ
)@@G@@F BLOCKS-1 THAT THE VARIABLE IS     @B@@@@$G C4 #$I((($EINP[2])<1) $O(($MR
)@@G@@EINP[2])>4))@^@@@@CHANGE[1] $S INP[1]     @A@@@@$GINY#$I($A/'YES'=(3^INPMS
)@@G@@,'   '))    @]@@@@'TRY AGAIN' @[@@@@$G TOP@[@@@@T $S 1@]@@@@*EDIT OFF   MT
)@@G@@@[@@@@*LOOP @[@@@@$(1). @ @@@@           END OF CONDITIONAL @[@@@@*LOOP MU
)@@G@@@^@@@@*PROCESS PROCESS ALG    @[@@@@$F    @G@@@@15060 DATA 6,5,4,1,-2,-2MV
)@@G@@,2600,-3,-2,-4,-3,-5,-5,-7,-7704,2702,-5,-2107  @[@@@@*.    @ @@@@      MW
)@@G@@     W'R .NOT. FLAG1    @[@@@@*SDFF*@#@@@@*DEFINE PROCESS   @^@@@@TGEOG4MX
)@@G@@11 0101MULLER     @B@@@@           T'H BLACK, FOR I=0,1,I.G. NDATA@E@@@@MY
)@@G@@*. GENERATE FIELDS TO BE USED ON PROCESSOR CALL CARDS FOR   @ @@@@      MZ
)@@G@@    DS        A0,*0,X11 @#@@@@LABEL      C'E    @I@@@@       TTR     OUTNA
)@@G@@1+2                                                   .719.GWB    @[@@@@NB
)@@G@@START.@#@@@@PRINT      C'E    @G@@@@ILLEGAL CHARACTER TO LEFT OF POSSIBLNC
)@@G@@E IDENTIFIER OR NUMBER (ERROR 6)    @I@@@@OUT2   CLA     =1             ND
)@@G@@                                          .719.GWB    @I@@@@       TTR  NE
)@@G@@   *+3                                                      .719.GWB    NF
)@@G@@@[@@@@*LOOP @I@@@@20    WRITE (6,200)                                   NG
)@@G@@                  M6301620    @I@@@@       CLA     I                    NH
)@@G@@                                    .719.GWB    @F@@@@       BLOCK-1. OPNI
)@@G@@EN INPUT TRANS-FILE, OUTPUT BUDGET-ANALYSIS.    @#@@@@   ***      &     NJ
)@@G@@@F@@@@15110 DATA 29,11,17,8,12,2606,9,5,7,3,1,2,7714,2704,14,13,10,9    NK
)@@G@@@G@@@@15120 DATA 2607,6,5,1,0,2,2600,-3,-1,-4,-3,-5,-4,-7,-6,2705,2199,-NL
)@@G@@2102  @I@@@@BACK3  CLA     I                                            NM
)@@G@@            .719.GWB    @I@@@@       PAX     ,1                         NN
)@@G@@                              .719.GWB    @I@@@@STA3   STO     ,1       NO
)@@G@@                                                .719.GWB    @^@@@@STRINGNP
)@@G@@ CHAR(80),C(1);   @I@@@@       ADD     =1                               NQ
)@@G@@                        .719.GWB    @^@@@@N         +         0   @#@@@@NR
)@@G@@QUAL      GETCHR  @E@@@@      COMMON/G4/CURBLK,CHKBLK,VAR1,VAR2,CON1,C0NNS
)@@G@@2,LAB1,LAB2 @ @@@@200   CALL PLOTC(X,-11.0,-3)  @ @@@@      IF(NAX.LT.2)NT
)@@G@@  GO TO 200 @F@@@@  3 01  01  01  01  01  03  04  05  08  10  11  12  13NU
)@@G@@  14  15    @F@@@@           WHENEVER .ABS. (XPOS-X(I)).L.XGR2.OR.XPOS-XNV
)@@G@@(I).E.XGR2  @ @@@@           PRINT COMMENT $1$  @B@@@@           PRINT CNW
)@@G@@OMMENT $            X   @#@@@@          1  F(X)$@B@@@@      WRITE(6,151)NX
)@@G@@ (B(J),W(J),C(J),J=U,KP)@ @@@@          ER        PRINT$    @B@@@@      NY
)@@G@@   I REPRESENTS ANY LEGAL IDENTIFIER@A@@@@   1.155    E+04     2.29   E+NZ
)@@G@@01    @B@@@@           WHENEVER C(3), TRANSFER TO A1  @G@@@@C          TOA
)@@G@@HE PREVIOUSLY DECODES COMMAND CARD. IF THE CALUE OF NA IS   @[@@@@C     OB
)@@G@@@C@@@@           COMPUTE RUN-OVER = BUD-ALLOW * 0.    @G@@@@           DOC
)@@G@@ISPLAY '                                      ' UPON SYSOU1.@^@@@@ 5160 OD
)@@G@@PRINT 'FUMBLE...' @C@@@@       FD  TRANS-FILE DATA RECORD TRANS-RCD     OE
)@@G@@@^@@@@      REGTOP=REGTOP+1   @D@@@@       01  ACCT-ANALYSIS          PIOF
)@@G@@CTURE X(132).     @D@@@@           SELECT BUDGET-ANALYSIS ASSIGN TO SYSOOG
)@@G@@U1.   @^@@@@       DATA DIVISION.   @D@@@@C-- IS THE LINE NUMBER IN WHICOH
)@@G@@H THE ITEM APPEARS.     @[@@@@C     @]@@@@CONTINUE    @^@@@@      REQUESOI
)@@G@@T COM,PKT   @ @@@@ 5330 GOSUB 12500    @TIME    @^@@@@15040 REM 5 MAN, 0OJ
)@@G@@-69   @D@@@@         BUFFER OUT(IDT,1) LLINE(1,K),LLINE(LEN+1,J)  @C@@@@OK
)@@G@@           02  FILLER PICTURE X(4) VALUE SPACES.@D@@@@           02  ACTOL
)@@G@@ PICTURE X(7)  VALUE 'ACT EXP'.     @I@@@@003110     DISPLAY 'THE GREATEOM
)@@G@@ST NUMBER IS  ' DIS-1 UPON SYSOU1.        PROBLEM2    @#@@@@      B1 = ION
)@@G@@-1    @C@@@@           02  FILLER PICTURE X(4) VALUE SPACE. @]@@@@      OO
)@@G@@P=0.0 @A@@@@ 5260 IF ABS(Y2) <> 27 THEN 5300    @#@@@@      REQUEST EXITOP
)@@G@@@E@@@@           SUBTRACT ACT-EXP FROM BUD-ALLOW GIVING RUN-UNDER.@G@@@@OQ
)@@G@@           COMPUTE PCT-UNDER ROUNDED = ((BUD-ALLOW - ACT-EXP) / BUD-    OR
)@@G@@@F@@@@      CALL SPLNCP(NDATA,N3,XLN,YDATA,XJLN,NCEND,XTX,XTY,ERR,E,W)  OS
)@@G@@@ @@@@       ENVIRONMENT DIVISION.  @G@@@@       77  TOT-UNDER          OT
)@@G@@         PICTURE 99999V99 VALUE ZERO.     @]@@@@      END   @B@@@@      OU
)@@G@@    L         A3,EA0            .   @A@@@@  91   FORMAT (3X,F4.1,F10.6,/OV
)@@G@@6)    @]@@@@'Y1:  Y1I   @D@@@@          S         A1,0,A3           . FIOW
)@@G@@LL UP CORE  @[@@@@$G    @]@@@@'X4:  ';X4I @]@@@@      END   @]@@@@'Y2  'OX
)@@G@@;Y2I  @[@@@@$G R4 @G@@@@15240 DATA 4,3,2,-1,0,-1,0,-2602,-4,-6,-5,-7,-7,OY
)@@G@@-8,7702,2703,-2105,-2206@[@@@@C     @^@@@@      WRITE (3,100)IN   @^@@@@OZ
)@@G@@100   FORMAT (14A6)     @F@@@@           DISPLAY 'TOTAL BUDGET ALLOWANCEPA
)@@G@@, ' DIS-B UPON SYSOU1.  @^@@@@     1 LABTBL(MXLABS)   @C@@@@ 5050 GOSUB PB
)@@G@@13500    @  PRINT YARDAGE RESULT    @#@@@@       WSDUMP .   @I@@@@050040PC
)@@G@@     PICTURE 9(5).                                                M63008PD
)@@G@@10    @^@@@@           CHECK=1B     @ @@@@     0     0-   32     0     0PE
)@@G@@@ @@@@    72     0     0     0     0@#@@@@           C(4)=0B@ @@@@      PF
)@@G@@     YBAR=YBAR/10.P.YLOG@ @@@@     0-   32     0     0     0@#@@@@      PG
)@@G@@     C(6)=1B@E@@@@           WHENEVER MULT .E.0 .OR. NDATA.E.0.OR. CNTRLPH
)@@G@@.E.0  @#@@@@R3:'EXPRESSIONS$Q'@E@@@@           PRINT COMMENT $ EMPLOT. NPI
)@@G@@OT CALLED CORRECTLY $   @ @@@@   106     0     0     0     0@#@@@@      PJ
)@@G@@ENDFILE 3   @ @@@@    62     0     0     0     0@I@@@@070100     MOVE UNPK
)@@G@@AME TO UNAMEO.                                        M6301190    @ @@@@PL
)@@G@@    74     0     0     0     0@B@@@@150   IF(XREF(I,2).GT.BIG)  BIG=XREFPM
)@@G@@(I,2) @ @@@@           FUNCTION RETURN    @ @@@@       LI$T             PN
)@@G@@ .    @^@@@@           CHECK=0B     @ @@@@ 5060 IF Y2 <> 0 THEN 5120    PO
)@@G@@@]@@@@      IBIT=0@#@@@@      REGTOP=28   @D@@@@C  TEMPORARY CODE TO PRIPP
)@@G@@NT OUT GENERATED CODE IN OCTAL@^@@@@        DEF(OPN(X))     @I@@@@003070PQ
)@@G@@     DISPLAY '     '  UPON SYSOU1.                                PROBLEPR
)@@G@@M2    @I@@@@003080     DISPLAY '     '  UPON SYSOU1.                    PS
)@@G@@            PROBLEM2    @I@@@@003090     DISPLAY 'THE NUMBER OF NUMBERS PT
)@@G@@IS  ' DIS-3 UPON SYSOU1.      PROBLEM2    @I@@@@003100     DISPLAY '    PU
)@@G@@ '  UPON SYSOU1.                                PROBLEM2    @[@@@@C     PV
)@@G@@@I@@@@020220     02 ICTIMEO              PICTURE 9(5).                  PW
)@@G@@      M6300470    @ @@@@          L,U       A0,WEF    @#@@@@           CPX
)@@G@@(6)=0B@ @@@@ 5450 IF R3 = 2 THEN 11500    @I@@@@003030     '  ISM 101  -PY
)@@G@@  PROBLEM 2    '  UPON SYSOU1.                  PROBLEM2    @^@@@@      PZ
)@@G@@ FILE SECTION.    @#@@@@      ENDFILE 3   @A@@@@      REQUEST CSF,'@ADD QA
)@@G@@ 3.  .  '   @ @@@@   102     0     0     0     0@^@@@@          ER      QB
)@@G@@  IOW$@ @@@@    50     0     0     0     0@#@@@@       WSDUMP .   @B@@@@QC
)@@G@@ 5020 LET A1 = R1(T,A1) @ FROM RUNNER     @#@@@@           XLOG=0 @#@@@@QD
)@@G@@105   FORMAT(K    @ @@@@           END OF CONDITIONAL @#@@@@ 5460  GO TOQE
)@@G@@ 1000 @ @@@@           000091800018000    @#@@@@CONDEL1111211     @^@@@@QF
)@@G@@   569    37    14    30@^@@@@   376    27    16    34@#@@@@YI $S 20 20 QG
)@@G@@20 20 @I@@@@070090     MOVE CODE1 TO CODE1O.                            QH
)@@G@@            M6301180    @^@@@@      SUBROUTINE CHG    @C@@@@      CALL MQI
)@@G@@VECR (LA(K),1,IA(J),1,IBUFR(NWORD)) @]@@@@1 0 1 \$I2  @A@@@@      DEFINEQJ
)@@G@@ FFIELD=FLD(0,6,CODE(I))@A@@@@      DEFINE JFIELD=FLD(6,4,CODE(I))@E@@@@QK
)@@G@@0.004450E+00  0.0000    1.063870E+011.063425E+01  0.0000    @]@@@@'ANYMOQL
)@@G@@RE$Q' @#@@@@$G R3 # $I(INPUT) @[@@@@$F    @]@@@@$F RESET;INP@C@@@@R1:'DOQM
)@@G@@ YOU WANT TO SEE ANYTHING$Q (YES OR NO)'  @#@@@@$G R2 # $I(INPUT) @#@@@@QN
)@@G@@'INITIAL VALUES'  @F@@@@      DIMENSION RAN(40),DECK(60,6),PLAY(10),X(15QO
)@@G@@),Y(10),SUM(10)   @D@@@@       TG    A0,A1        . DO WE STAY IN THIS BQP
)@@G@@LOCK ?@I@@@@020240     02 ILTIMEO              PICTURE 9(5).            QQ
)@@G@@            M6300490    @ @@@@           000071600006000    @ @@@@      QR
)@@G@@     000081700005000    @#@@@@      IFIELD=IBIT @B@@@@          L       QS
)@@G@@  A2,0235           .   @#@@@@           XNLOG=0@#@@@@           YLOG=0 QT
)@@G@@@#@@@@ 5210 LET I1 = 4  @I@@@@020230     02 IATIMEO              PICTUREQU
)@@G@@ 9(5).                        M6300480    @ @@@@          ER        EXITQV
)@@G@@$     @[@@@@C     @I@@@@070190     MOVE ITTIME TO ITTIMEO.              QW
)@@G@@                        M6301280    @#@@@@       CCCCEFCSFSS@#@@@@$IBJOBQX
)@@G@@         GO @#@@@@      HFIELD=HBIT @^@@@@           A(I)=A(I+1)  @D@@@@QY
)@@G@@           02  BUD-ALLOW               PICTURE 999V99.@ @@@@           EQZ
)@@G@@ND OF CONDITIONAL @#@@@@ 5150 REM FUMBLE  @ @@@@       INPUT-OUTPUT SECTRA
)@@G@@ION.  @I@@@@060170     MOVE IATIMEX TO IATIME.                          RB
)@@G@@            M6301000    @^@@@@$F DOIT;COUNT;DTEMP     @]@@@@COUNT $S 1  RC
)@@G@@@B@@@@LOOP: OUT[COUNT;] $S T,(,Y[T;]),(,X[T;])  @B@@@@           VECTOR RD
)@@G@@VALUES PAGEUP=$ 1H1 * $ @^@@@@S4         CONTINUE     @#@@@@G55553050026RE
)@@G@@050   @^@@@@   546    30    10    27@]@@@@DT $S 1     @#@@@@           ERF
)@@G@@'L    @^@@@@XI $S 20 100 80 100     @]@@@@Y3 $S Y3I   @^@@@@   563    20RG
)@@G@@    14    34@I@@@@010110 DATA DIVISION.                                 RH
)@@G@@                  M6300150    @I@@@@080090     COMPUTE INDEX = SWITCH1 -RI
)@@G@@ TEST1.                             M6301430    @[@@@@C     @^@@@@S9    RJ
)@@G@@     CONTINUE     @ @@@@  91   FORMAT (3X,F4.1,4X,FU  @^@@@@OUT       'BRK
)@@G@@OOTAPE'     @C@@@@006102     02  BSEQ-NO                  PICTUEE @^@@@@RL
)@@G@@006100     02  BSDC-NO  @D@@@@007010          03  MAX-SETS            PIRM
)@@G@@CTURE 9(3). @A@@@@   20 CALL SQUARE(0.0,0.0,3.0,P)    @E@@@@       77  DRN
)@@G@@IS                         PICTURE --,--9.99.   @B@@@@006020      LABEL RO
)@@G@@REOCRDS ARE STANDARD    @#@@@@'INPUT YES OR NO' @C@@@@           THROUGHRP
)@@G@@ LOOP, FOR A=0,1,I*9.G.360    @A@@@@           X(A)=((9*I*6.28318)/360) RQ
)@@G@@@E@@@@C-- THIS SUBROUTINE CHANGES A TERMINAL INTO A FORM WHICH IS @#@@@@RR
)@@G@@         5001J    @#@@@@         73214    @I@@@@001120 FD  DATA-FILE-1 LRS
)@@G@@ABEL RECORDS OMITTED DATA RECORD IS NO-RCD.     PROBLEM2    @I@@@@060110RT
)@@G@@     MOVE CODE2X TO CODE2.                                        M63009RU
)@@G@@40    @D@@@@15140 DATA 99,6,13,4,9,3,7,3,5,2,0,1,2711,2,10,9,8,7  @ @@@@RV
)@@G@@140   FORMAT('1  ERROR 1')    @ @@@@       CONFIGURATION SECTION. @#@@@@RW
)@@G@@           N'R    @B@@@@           Y(A)=COS.((9*I*6.28318)/360)   @#@@@@RX
)@@G@@           E'L    @I@@@@       PAX     ,2                               RY
)@@G@@                        .719.GWB    @D@@@@#I=(((((I+N)*((I*N+N)/N)+(I+N)RZ
)@@G@@*N)/N)+(I/N))+I*I)#     @]@@@@Y2I$S 20    @^@@@@     RECOGNIZE := FALSE;SA
)@@G@@@[@@@@*END  @]@@@@*IF [Q]>0   @]@@@@*SET S TO 1 @[@@@@$F SIM@[@@@@'HI!' SB
)@@G@@@I@@@@070140     MOVE ICTIME TO ICTIMEO.                                SC
)@@G@@      M6301230    @I@@@@       SUB     HOLD                             SD
)@@G@@                        .719.GWB    @I@@@@       TZE     *+2            SE
)@@G@@                                          .719.GWB    @I@@@@       TPL  SF
)@@G@@   BACK5                                                    .719.GWB    SG
)@@G@@@B@@@@      IF(TCODE(TRIP).EQ.31) GO TO 402     @^@@@@RPAREN := OPERS[5,SH
)@@G@@1];   @^@@@@BRACKET := OPERS[6,1];  @A@@@@START: READ(INPUT,CHAR,DONE,DOSI
)@@G@@NE);  @]@@@@  )CLEAR    @#@@@@   )SYMBOLS 500   @A@@@@   10 CALL PAR2(0.SJ
)@@G@@0,P,0.6,0.2,Q)    @E@@@@*. IF TEXT SUPPLIED ( [HDG]>0 ) IT IS ADDED BY TSK
)@@G@@HE LOOP     @A@@@@*. @DOC,SDF DOC/VERSION,DOC/VERSION @#@@@@           ESL
)@@G@@'L    @[@@@@$I 0  @[@@@@$I 0  @H@@@@DGEOG372 1INTERPRETATION OF TOPOGRAPSM
)@@G@@HIC MAPS AND AERIAL PHOTOGRAPHS (03) (P-F)@I@@@@070210     MOVE IREST  TSN
)@@G@@O IRESTO.                                       M6301300    @I@@@@020070SO
)@@G@@     02 IETIMEX              PICTURE 9(5).                        M63003SP
)@@G@@20    @D@@@@          J         0,X2              . KEEP GOING    @I@@@@SQ
)@@G@@       CLA     HOLD,2                                                   SR
)@@G@@.719.GWB    @I@@@@       SUB     HOLD,1                                 SS
)@@G@@                  .719.GWB    @[@@@@$F    @G@@@@1                       ST
)@@G@@                                          6   30@F@@@@C-- VARIABLE, 35 =SU
)@@G@@ UNDECLARED VARIABLE, 33 = LABEL REFERENCE,     @ @@@@    77     0     0SV
)@@G@@     0     0@^@@@@*. PDP PDP,L ELT VER    @^@@@@*. DOC DOC,SDF ELT1     SW
)@@G@@@F@@@@            E;   COMMENT COMING FROM THE RIGHT, WE HIT 'E' FIRST; SX
)@@G@@@#@@@@     GO TO RETURN;@ @@@@    56     0     0     0     0@#@@@@    FNSY
)@@G@@D: END;     @^@@@@PROCEDURE IDENTIFIER;   @I@@@@060130     MOVE IDMEX TOSZ
)@@G@@ IDME.                                          M6300960    @[@@@@B $S 5TA
)@@G@@@I@@@@       TMI     BACK6                                              TB
)@@G@@      .719.GWB    @I@@@@       TZE     BACK6                            TC
)@@G@@                        .719.GWB    @ @@@@#I=I+(I*I-I*N/I+((I+N)-I))#   TD
)@@G@@@#@@@@*IF [[#1],I,3]>0  @#@@@@/[[#1],I,3,1]&    @]@@@@'X3:  ';X3DO@]@@@@TE
)@@G@@$F CONTINUE @F@@@@           MOVE SPACE TO ACCOUNT-STATUS, PCT-OVER, PCTTF
)@@G@@-UNDER.     @^@@@@           X(I+1)=HOLD  @]@@@@$F DOIT     @#@@@@ 6040 TG
)@@G@@GO TO 5040  @[@@@@C     @E@@@@0.330000E+00  0.0000    3.895354E+010.6235TH
)@@G@@40E+003.800000E+01@]@@@@ LIB U/     @^@@@@   409    26    16    36@[@@@@TI
)@@G@@C     @]@@@@#I+N*I#     @#@@@@#I=(I+I)(I/N)#    @F@@@@           DISPLAYTJ
)@@G@@ 'ACTUAL EXPENSES INCURRED, ' DIS-A UPON SYSOU1.@D@@@@007020          03TK
)@@G@@  SEARS-TAKEN         PICTURE 9(3). @I@@@@       TSX     SWITCH,4       TL
)@@G@@                                          .719.GWB    @I@@@@       TTR  TM
)@@G@@   BACK6                                                    .719.GWB    TN
)@@G@@@^@@@@   577    40    13    35@^@@@@ 5010 LET A1 = ROLL2    @E@@@@      TO
)@@G@@    LSSL      A1,18             . AND PUT IT THERE    @#@@@@B84542750025TP
)@@G@@000   @#@@@@100   BIG=0.0     @]@@@@X1 $S X1I   @I@@@@RETURN AXT     ,4 TQ
)@@G@@                                                      .719.GWB    @I@@@@TR
)@@G@@       TRA     1,4                                                      TS
)@@G@@.719.GWB    @]@@@@      RETURN@ @@@@    AOK: RECOGNIZE := TRUE;   @^@@@@TT
)@@G@@     CHAR := CHAR + 1;  @]@@@@'X4:  ';X4DO@D@@@@DELETE ALPHABET *LETTER/TU
)@@G@@'1'* =          /F(BEGIN)     @A@@@@      SUBROUTINE GOT(TRIP,WREG)     TV
)@@G@@@^@@@@           TEMP=TEMP-5  @^@@@@   574    27    16    36@^@@@@   387TW
)@@G@@    30    15    35@]@@@@RETURN: END;@D@@@@FORMAT REJECT(S80,A1,' IS AN ITX
)@@G@@LLEGAL STRING',A1.1);   @F@@@@FORMAT ACCEPT(S80,A1,' IS ACCEPTED AS A VATY
)@@G@@LID STRING.',A1.1);     @I@@@@SWITCH CAL     HOLD,1                     TZ
)@@G@@                              .719.GWB    @I@@@@080180 XXX. STOP RUN.   UA
)@@G@@                                                M6301520    @D@@@@005094UB
)@@G@@      02  P-BATCH -NO             PICTURE 9(3). @H@@@@  91   FORMAT (3X,UC
)@@G@@F4.1,F10.6,/6/3X,F4.1,4X,F10.6/3X,F4.1,4X,F10.6/3X,F4.1,    @ @@@@      UD
)@@G@@     CHANGE=CHANGE-5    @I@@@@       LDQ     HOLD,2                     UE
)@@G@@                              .719.GWB    @I@@@@       STQ     HOLD,1   UF
)@@G@@                                                .719.GWB    @E@@@@      UG
)@@G@@CALL GEN (LX,0,X2,0,X4) @X2 PTS TO NEW CURRENT BLK    @D@@@@           0UH
)@@G@@2  FILLER                  PICTURE X(74). @D@@@@       FD  BUDGET-ANALYSUI
)@@G@@IS DATA RECORD ACCT-ANALYSIS  @ @@@@          TNW       A7,A1     @^@@@@UJ
)@@G@@     VALUE N; INTEGER N;@ @@@@              THE GRAMMAR:    @I@@@@      UK
)@@G@@ SLW     HOLD,2                                                   .719.GUL
)@@G@@WB    @^@@@@            S ::= #V=E# @E@@@@       BLOCK-4. MOVE 'ACTUAL OUM
)@@G@@VER BUDGET' TO ACCOUNT-STATUS.@F@@@@       PRI = SPAN('(') $LPAR  *****$UN
)@@G@@('EXP' N)  SPAN(')') $RPAR    @I@@@@STA4   CLA     ,2                   UO
)@@G@@                                    .719.GWB    @I@@@@STA5   LDQ     ,1 UP
)@@G@@                                                      .719.GWB    @I@@@@UQ
)@@G@@STA6   STO     ,1                                                       UR
)@@G@@.719.GWB    @I@@@@STA7   STQ     ,2                                     US
)@@G@@                  .719.GWB    @B@@@@           PRINT FORMAT BLUR2, XBAR,UT
)@@G@@ YBAR @I@@@@       CLA     HOLD,1                                       UU
)@@G@@            .719.GWB    @I@@@@       TMI     OUT3                       UV
)@@G@@                              .719.GWB    @#@@@@           J=J+1  @A@@@@UW
)@@G@@           MARGIN=MARGIN+CHANGE     @I@@@@020090     02 ITTIMEX         UX
)@@G@@     PICTURE 9(5).                        M6300340    @[@@@@*.    @^@@@@UY
)@@G@@           T'O READ     @I@@@@       CLA     I                          UZ
)@@G@@                              .719.GWB    @I@@@@       TRA     1,4      VA
)@@G@@                                                .719.GWB    @I@@@@      VB
)@@G@@ END                                                              .719.GVC
)@@G@@WB    @I@@@@       TTR     *+2                                          VD
)@@G@@            .719.GWB    @I@@@@BACK4  CLA     J                          VE
)@@G@@                              .719.GWB    @#@@@@           E'M    @]@@@@VF
)@@G@@'Y1:  ';Y1DO@#@@@@        ELSE BEGIN@[@@@@EXIT: @]@@@@      I=I+1 @E@@@@VG
)@@G@@COMMENT    FUNCTION TO IDENTIFY VARIABLE NAMES AND NUMBERS. @]@@@@  J :=VH
)@@G@@ 0;   @F@@@@  FOR I := 1,1,1,1,1,0,0,0,0,0,0,0,0,0,0 DO BEGIN J := J + 1VI
)@@G@@;     @^@@@@LPAREN := OPERS[7,1];   @D@@@@  TERMINAL[J] := IF I EQL 1 THVJ
)@@G@@EN FALSE ELSE TRUE; END;@^@@@@EQUAL := OPERS[8,1];    @^@@@@POINT := OPEVK
)@@G@@RS[9,1];    @]@@@@  J := 0;   @[@@@@*.    @]@@@@          R @G@@@@      VL
)@@G@@     W'R WORD(0).E.$ORWHEN$.OR.(WORD(0).A.MASK).E.$O'R@@@$.OR.    @F@@@@VM
)@@G@@           WHENEVER YSMALL.NE.0., YLOG=.434*ELOG.(.ABS.YSMALL)    @G@@@@VN
)@@G@@       77  ACT-TOT                     PICTURE 99999V99 VALUE ZERO.     VO
)@@G@@@E@@@@      CALL GEN(ANX,U,X4,BLKREF(OFFSET(TRIPLE(NEXT,2))),0)   @ @@@@VP
)@@G@@  TYPE := 'SVETPIN+-*/()=#';  @D@@@@           02  PCT-UNDER            VQ
)@@G@@   PICTURE ZZ9.99.@C@@@@NEW    ALPHABET *LETTER/'1'* =          /F(NEXT)VR
)@@G@@@F@@@@*CREATE SGS: PRC ELT,L ASM,S COB,SBE RALPH,S ALG,S MAP,S DOC,SF ; VS
)@@G@@@^@@@@MINUS := OPERS[1,1];    @[@@@@#N=I# @A@@@@ ELT,L ELT,L PDP,L PDP,CVT
)@@G@@L PDP,FL    @G@@@@  FOR I := 15,2,14,3,15,6,4,8,9,5,10,11,6,7,12,3,13 DOVU
)@@G@@ BEGIN J := J + 1;@C@@@@       $LETTER ANCHOR()  '0'            /S(NEW) VV
)@@G@@@]@@@@        END;@#@@@@  GO TO START;    @]@@@@$ SNOBOL    @G@@@@START VW
)@@G@@ SAVE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ=,$.(*)/0123456789+- ' QUOTE   @ @@@@VX
)@@G@@       OSG = '+'/'-'/NULL     @#@@@@$G R3 # $I(INPUT) @]@@@@$COMPILE MADVY
)@@G@@@D@@@@READ       READ FORMAT $(72A1)*$,CARD(0)...CARD(71)   @#@@@@SHIFT VZ
)@@G@@     C'E    @]@@@@Y2 $S Y2I   @[@@@@*.    @#@@@@         45445    @ @@@@WA
)@@G@@      PARAMETER MXVARS = 100  @ @@@@           W'R CARD(10).E.$R$ @A@@@@WB
)@@G@@   1.2850   E+04     2.79   E+01    @C@@@@           W'R .NOT. C(17) .ANWC
)@@G@@D. I .NE. 101     @B@@@@           THROUGH ST3, FOR J=0,1,J.G.I   @^@@@@WD
)@@G@@ST3        ROW(J)=CHAR  @A@@@@           WHENEVER MOD.(Z,5).E.0   @ @@@@WE
)@@G@@ 5170 IF Y2 < 0 THEN 5350     @D@@@@      A(2,8)=-XOLD(3)-XOLD(4)-2.*XOLWF
)@@G@@S(5)+2./XOLD(7)   @A@@@@     .50E+02     .10E+01    .200E+03@#@@@@      WG
)@@G@@     E'L    @B@@@@           THROUGH S2, FOR Z=0,1,Z.G.M50  @ @@@@      WH
)@@G@@IF(Y.EQ.X(I))GO TO 1    @^@@@@$G NEXT1 # $I(INPUT)    @]@@@@'X1:  ';X1I WI
)@@G@@@E@@@@      DIMENSION DECK(52), DDK(52), PH(6,7), HPC(14) SPC(14),@A@@@@WJ
)@@G@@       X$DUMP ECSAV6,7,'O','XAR'    @#@@@@W99882101017070   @F@@@@15030 WK
)@@G@@DATA 8,7,6,2,-1,-1,0,-2602,-1,-3,-2,-4,-3,-6,7703,-2,-4,2218@#@@@@Y1DO $WL
)@@G@@S 'T+19'    @#@@@@         1768Q    @ @@@@           000202800023000    WM
)@@G@@@I@@@@002145     MOVE NO-1 TO GRTST-NO.  MOVE NO-1 TO LEAST-NO.         WN
)@@G@@      PROBLEM2    @#@@@@ 5390 LET I1 = 4  @ @@@@      READ (6,2) X(I),I=WO
)@@G@@1,N)  @G@@@@'TYPE IN XI[N] OR YI[N], WHERE N IS THE ONE YOU WANT; OR A, WP
)@@G@@B OR DT'    @#@@@@R4:INP $S $E $"   @#@@@@         52211    @A@@@@      WQ
)@@G@@ SOURCE-COMPUTER. IBM-7094.   @ @@@@      DO 300 III=1,IRESET     @I@@@@WR
)@@G@@002120 PROCEDURE DIVISION.                                              WS
)@@G@@PROBLEM2    @I@@@@002130 PAR-1.  OPEN INPUT DATA-FILE-1.                WT
)@@G@@                  PROBLEM2    @]@@@@NEXT: $I 0  @[@@@@$F    @E@@@@      WU
)@@G@@     IF ACT-EXP GREATER THAN BUD-ALLOW GO TO BLOCK-4. @I@@@@002140 PAR-2WV
)@@G@@.  READ DATA-FILE-1 AT END GO TO PAR-9.                     PROBLEM2    WW
)@@G@@@A@@@@       OBJECT-COMPUTER. IBM-7094.   @ @@@@ 200   WRITE (6,300) F(YWX
)@@G@@)     @[@@@@C     @[@@@@$I2   @I@@@@070010 P4. ENTER COBOL.             WY
)@@G@@                                    M6301100    @C@@@@    IF C EQL DIVIDWZ
)@@G@@E OR C EQL TIMES THEN BEGIN   @#@@@@           C(4)=1B@ @@@@           XXA
)@@G@@BAR=XBAR/10.P.XLOG@A@@@@           XGRID=XGRID/10.P.XLOG    @ @@@@      XB
)@@G@@     END OF CONDITIONAL @F@@@@           EXECUTE EMPLOT.(X,Y,40,XGRID,YGXC
)@@G@@RID,XBAR,YBAR,1,1155)   @F@@@@15020 DATA 32,13,2621,10,15,8,12,6,9,4,2,3XD
)@@G@@,18,6,25,2614,11,10     @A@@@@           PRINT RESULTS X(A),Y(A)  @ @@@@XE
)@@G@@           000061500022000    @A@@@@           YHI = YBAR + 50.*YGRID   XF
)@@G@@@A@@@@           YLO = YBAR - 50.*YGRID   @C@@@@           THROUGH LIMITXG
)@@G@@,FOR I=0,1, I.G. NDATA  @E@@@@      SUBROUTINE GVESZE(REF,NPLT,NSECT,XMAXH
)@@G@@X,XMIN,SCALE)     @^@@@@      WRITE (6,11) [    @ @@@@      CALL PLOTC(6XI
)@@G@@.0,-11.0,-3)@ @@@@ 5440 GOSUB 12500   @TIME     @ @@@@      CALL PLOTC(0XJ
)@@G@@,0,999)     @B@@@@          AAIJ      L($+1)            .   @ @@@@      XK
)@@G@@ CONFIGURATION SECTION. @A@@@@           XPOS = XBAR-XGRID*(M25-Z)@[@@@@XL
)@@G@@RE    @G@@@@           ALLOW * 100, ON SIZE ERROR DISPLAY 'OVERFLOW UPONXM
)@@G@@ SYSOU1.    @D@@@@           PRINT FORMAT MKLINE,XPOS,ROW...ROW(100)    XN
)@@G@@@]@@@@'X2:  ';X2I @#@@@@T16161005015550   @[@@@@C     @E@@@@      SUBROUXO
)@@G@@TINE XAXIS(XSCALE,XREF,YREF,NPLT,NAX,NSIDE)     @I@@@@002190 PAR-7.  COMXP
)@@G@@PUTE MEAN-OF-NOS = SUM-OF-NOS / NO-OF-NOS.            PROBLEM2    @^@@@@XQ
)@@G@@   521    44    14    26@#@@@@        FETCH;    @^@@@@      DIMENSION INXR
)@@G@@(14)  @^@@@@FORMAT INPUT(A1,S80);   @]@@@@ACCEPT: END;@]@@@@PROCEDURE E;XS
)@@G@@@]@@@@GO TO SET;  @C@@@@  BOOLEAN ARRAY TERMINAL(1:15), STRUCT(1:17);   XT
)@@G@@@#@@@@     PROCEDURE V; @ @@@@           000152300014000    @ @@@@      XU
)@@G@@     000162400012000    @^@@@@Y2DO $S '50 $L X2 % X4' @F@@@@           EXV
)@@G@@XECUTE EMPLOT.(X,Y,40,XGRID,YGRID,XBAR,YBAR,2,1155)   @G@@@@    IF NOT OXW
)@@G@@PERATOR THEN ERROR(6); COMMENT IS THIS THING TERMINATED BY  @ @@@@SOURCEXX
)@@G@@ := SUCCESSOR[SOURCE];  @ @@@@      CALL PLOTC(0.0,0.5,-3)  @]@@@@      XY
)@@G@@P=0.0 @A@@@@           MOVE ZEROES TO PCT OVER. @#@@@@      Y3=S+Y2     XZ
)@@G@@@E@@@@       ANA,U A0,3        . ASSUME LAST ENTRY IN SAME BLOCK  @A@@@@YA
)@@G@@      AINDX=(  X -AMIN)/(AMAX-AMIN) @^@@@@      DIMENSION R(1000) @^@@@@YB
)@@G@@      CALL BEGIN(R)     @C@@@@COMMENT FUNCTION TO FIT  E::= E+T \ E-T \ YC
)@@G@@T;    @I@@@@060040     PROVIDE IPRONO, CODE1, CODE2, UNAME, IDME, IDATE,YD
)@@G@@ ITIME,     M6300870    @ @@@@      INDX=AINDX*ANMB+2.5     @C@@@@      YE
)@@G@@            WHENEVER.NOT.C(13) , T'O S5   @E@@@@0.241000E+00  0.0000    YF
)@@G@@1.643949E+000.002949E+001.400000E+00@B@@@@IGNORE    LPS       L(PSR)    YG
)@@G@@        .   @ @@@@      IF (NO.GT.2) GO TO 23   @B@@@@      JADDR((2)= NYH
)@@G@@WORDS-JADDR(1)*LSECT+1  @#@@@@ 5080 LET B=B + Y1@ @@@@ 5090 IF R3 = 1 THYI
)@@G@@EN 1000     @ @@@@   30 CALL PLOTC(X3,Y3,2)     @^@@@@   50 CALL PLOTC(WYJ
)@@G@@,Z,3) @]@@@@      RETURN@E@@@@END       RES       02000-$           . FIYK
)@@G@@LL OUT BOOT BLOCK @[@@@@$(0). @^@@@@           OTHERWISE    @[@@@@$CBENDYL
)@@G@@@[@@@@$DATA @I@@@@070050     IATIME, ILTIME, IETIME, IUTIME, ITTIME, JOBYM
)@@G@@NO, IREST.        M6301140    @F@@@@ 20   FORMAT 637X,'@ S.T.P.',5X,'@ OYN
)@@G@@UTLET TEMP',12X,'WT 0/0',//)  @E@@@@           SUBTRACT ACT-EXP FROM BUDYO
)@@G@@-ALLOW GIVING DIFF.     @C@@@@          1  18HY GRID SIZE IS     F12.6/ YP
)@@G@@  *$  @ @@@@      DDELT     A4    4  4    @^@@@@ST5        ROW(J)=CHAR  YQ
)@@G@@@[@@@@C     @[@@@@C     @#@@@@           START=0@]@@@@    BEGIN   @^@@@@YR
)@@G@@          IDENTIFIER;   @^@@@@          1FUNCTION$    @I@@@@070200     MYS
)@@G@@OVE JOBNO  TO JOBNOO.                                       M6301290    YT
)@@G@@@A@@@@ 5180 REM OFFENSIVE TEAM RECOVERS   @^@@@@Y3DO $S ' .25 # X3'     YU
)@@G@@@^@@@@   617    34    12    27@^@@@@   533    39    12    27@B@@@@ 5190 YV
)@@G@@PRINT 'PICKED UP BY '; N(T); ' FOR';@I@@@@040010 WORKING-STORAGE SECTIONYW
)@@G@@.                                         M6300550    @B@@@@       133  YX
)@@G@@     242       382       497  @#@@@@      X=BIG+6.0   @E@@@@           CYY
)@@G@@OMPUTE TOT-UNDER ROUNDED = TOT-UNDER + DIFF.    @]@@@@GO TO SET;  @D@@@@YZ
)@@G@@           COMPUTE DIFF = DIFF / BUD-ALLOW * 100.     @ @@@@       B = SZA
)@@G@@PAN(' ') / NULL   @A@@@@           YGRID=YGRID/10.P.YLOG    @^@@@@ 5200 ZB
)@@G@@LET B = B + Y1    @]@@@@$F RESET    @#@@@@      GO TO 410   @B@@@@'DO YOZC
)@@G@@U WANT TO SEE THE INITIAL VALUES $Q'@G@@@@      DIMENSION SCALE(NPLT,2),ZD
)@@G@@XRATE(NPLT),REF(NPLT,3),DIG(100),X(200)   @ @@@@  WRITE(O,ERRORS[ABS(N)]ZE
)@@G@@);    @C@@@@       ANA,U A1,1        . NO, SO GET BKWRD LINK@ @@@@C     ZF
)@@G@@DBDS=(BETA-PBTA)/DS     @C@@@@XDO[2;] $S 'A# (DT%B) #(+/Y[1;T-B+$I10],10ZG
)@@G@@ $R0)'@I@@@@020250     02 IETIMEO              PICTURE 9(5).            ZH
)@@G@@            M6300500    @F@@@@  3 10  10  10  20  20  20                ZI
)@@G@@                  10    @A@@@@      AA(75,17)=AA(75,17)*60.*24.   @D@@@@ZJ
)@@G@@           02  ACTUAL             PICTURE $$$$.99.    @^@@@@LOOP:Y1N $S ZK
)@@G@@$E Y1DO     @E@@@@6.830000E+021.402353E+036.906834E+020.003400E+007.6800ZL
)@@G@@00E+00@B@@@@D     WRITE(6,1234) (CODE(II),II=0,TRPTOP)@E@@@@       77  EZM
)@@G@@D-OVER                     PICTURE $ZZ,ZZZ.99.  @^@@@@           UPON SYZN
)@@G@@SOU1. @F@@@@       AA,U  A1,2        . COMPUTE FIRST ENTRY FOR THIS BLOCZO
)@@G@@K     @B@@@@     1  EQ( SIZE(LPAR), SIZE(RPAR) )/ SOR @ @@@@          1 ZP
)@@G@@ROW(XLOG) .E. CHAR@#@@@@      GO TO 200   @I@@@@020020     02 IDATEX    ZQ
)@@G@@           PICTURE 9(6).                        M6300270    @#@@@@100   ZR
)@@G@@CONTINUE    @]@@@@Y4 $S Y4I   @G@@@@           DISPLAY '                ZS
)@@G@@                      ' UPON SYSOU1.@[@@@@$F    @ @@@@    70     0     0ZT
)@@G@@     0     0@D@@@@NEXT: IF RECOGNIZE(LOOKFOR[GOAL]) THEN GO TO TEST;    ZU
)@@G@@@]@@@@X4 $S X4I   @D@@@@TAST: IF ALTERNATE[SOURCE] EQL 0 THEN GO TO POP2ZV
)@@G@@;     @F@@@@  5.015391  3.650046     0.908       1.345       0.546554   ZW
)@@G@@ 0.386@[@@@@C     @A@@@@     .50E+02     .10E+01    .200E+03@B@@@@C THE ZX
)@@G@@FOLLOWING IS A TABLR GIVING THE     @C@@@@IF ALTERNATE[SOURCE] EQL -1 THZY
)@@G@@EN GO TO POP3;    @]@@@@Y1 $S Y1I   @G@@@@  0.173     1.10        0.500 ZZ
)@@G@@       0.03       0.14          0.165     @B@@@@XDO[3;] $S'X[3;T-1]+DT#(AA
)@@G@@Y[2;T]-Y[3;T])'   @#@@@@  STRING TYPE(15);@E@@@@  0.00569+00  0.0000    AB
)@@G@@  3.38072+00  3.37503+00  0.000     @I@@@@      IF (I1 . EQ. 99999999) GAC
)@@G@@O TO 20                                   M6301600    @^@@@@           YAD
)@@G@@LARLG=0     @B@@@@           T'H FILL,FOR I=1,1,I.G.76K     @E@@@@      AE
)@@G@@                              A LEGAL CHARACTER?;     @B@@@@C     IF STAAF
)@@G@@CK IS EMTY  AND NOT ALL OF THE@I@@@@C     THE TREE IN SY SYMMETRIC ORDERAG
)@@G@@; THE ROOT OF THE TREE GOES NEAR THE THE RIG    @]@@@@      Q=0.0 @]@@@@AH
)@@G@@        T;  @B@@@@          DO 0400-$ , LMJ X1,L(IGNORE)    @C@@@@START AI
)@@G@@    LPS       L(PSR)            . SET PSR @^@@@@ 30   FORMAT (F3.0)     AJ
)@@G@@@I@@@@060160     MOVE ICTIMEX TO ICTIME.                                AK
)@@G@@      M6300990    @ @@@@           000011100001000001 @ @@@@           0AL
)@@G@@00021100008000    @#@@@@         8399L    @^@@@@        GO TO ACCEPT;   AM
)@@G@@@F@@@@  INTEGER ARRAY LOOKFOR(1:15), TYPECODE(1:17),SUCCESSOR(1:17);    AN
)@@G@@@E@@@@ST2        THROUGH ST2, FOR I=0,1,I.G.100.OR.ROW(I).E.CHAR  @A@@@@AO
)@@G@@  INTEGER ARRAY ALTERNATE(1:17);    @#@@@@       EX0 = BAL  @]@@@@      AP
)@@G@@ N = 0@I@@@@200   FORMAT (17H0EXIT WAS CALLED.)                         AQ
)@@G@@            M6301650    @I@@@@070130     MOVE ITIME TO ITIMEO.          AR
)@@G@@                              M6301220    @D@@@@          S         A2,1AS
)@@G@@,A0           . MEM 1 FAULT   @F@@@@ 20   FORMAT (57X,'@ S.T.P.',3X,'@ OAT
)@@G@@UTLET TEMP',7X,'WT 0/0',//)   @B@@@@           XHI = XBAR + MULT*25.*XGRAU
)@@G@@ID    @B@@@@           XLO = XBAR - MULT*25.*XGRID    @B@@@@      DIMENSAV
)@@G@@ION REF(NPLT,3),SCALE(NPLT,2) @G@@@@      DIMENSION  AX(NR,NC),AY(NR,NC)AW
)@@G@@,NP(NC),XSCALE(NC,2),YSCALE(NC,2)   @C@@@@           02  FILLER PICTURE AX
)@@G@@X(7) VALUE SPACE. @A@@@@C  DEFINE INTERNAL SUBROUTINE GOT   @#@@@@1 0 1 AY
)@@G@@0 / $I4     @^@@@@   436    35    16    36@#@@@@      J= J+NWORDA @]@@@@AZ
)@@G@@  2    10   @F@@@@      SUBROUTINE PLOTER(AX,AY,NP,NR,NC,XSCALE,YSCALE,XBA
)@@G@@REF,YREF,F) @^@@@@SOURCE := LOOKFOR[GOAL];@[@@@@END;  @]@@@@ACCEPT:     BB
)@@G@@@]@@@@PROCEDURE T;@C@@@@COMMENT    FUNCTION TO FIT T ::= T*P \ T/P \ P ;BC
)@@G@@@[@@@@BEGIN @E@@@@    P;     COMMENT  MUST HAVE AT LEAST THE THIRD ALTERBD
)@@G@@NATE; @^@@@@           D'N CARD(71) @C@@@@TEST: IF STRUCT[SOURCE] THEN GBE
)@@G@@O TO FUNNYBOX;    @^@@@@ PROCEDURE ERROR(N);    @F@@@@          HJ      BF
)@@G@@  L($+1)            . STOP WIT H ADD IN SLR     @ @@@@          LPS     BG
)@@G@@  L(PSR)    @I@@@@020190     02 IDMEO                PICTURE X(6).      BH
)@@G@@                  M6300440    @ @@@@X1DO $S 'X1 + 1 # (Y1N-Y4N)'  @#@@@@BI
)@@G@@X2DO $S '100'     @ @@@@       01  ACCT-ANALYSIS-WORK.@D@@@@C-- ALL THESBJ
)@@G@@E ITEMS ARE PUT TOGETHER TO FORM A TOKEN. @#@@@@      IBIT = 1    @[@@@@BK
)@@G@@C     @I@@@@080130     PERFORM 10.                                      BL
)@@G@@            M6301470    @#@@@@           I=0    @I@@@@010190        03 CBM
)@@G@@ODE2X           PICTURE 9.                            M6300240    @C@@@@BN
)@@G@@           WHENEVER XLOG.G.4 .OR. XLOG.L.-3     @^@@@@           ENTRY TBO
)@@G@@O MOD.@G@@@@           PRINT COMMENT $1THE FOLLOWING SHOULD BE A PLOT OFBP
)@@G@@ THE COSINE @A@@@@30    CALL GEN(LMJ,0,X11,EOJ,0)     @F@@@@       FD  TBQ
)@@G@@RANS-FILE DATA RECORD TRANS-RCD LABEL RECORD OMITTED. @^@@@@           ZBR
)@@G@@=X-Y*(X/Y)  @G@@@@YDO[2;] $S '(50#(1-TEMP1))+(20#TEMP#TEMP1$S50>TEMP$SX[BS
)@@G@@2;T-1]%X[4;T-1])' @ @@@@YDO[3;] $S '.25 # X[3;T-1]'   @A@@@@      Y=YREFBT
)@@G@@(I,J)+DEL*FLOAT(K-1)    @^@@@@           A(131)=A(0)  @A@@@@      DEFINEBU
)@@G@@ FJFLD=FLD(0,10,CODE(I))@ @@@@           FUNCTION RETURN    @B@@@@      BV
)@@G@@DEFINE AFIELD=FLD(10,4,CODE(I))     @ @@@@BOOLEAN PROCEDURE OPERATOR;   BW
)@@G@@@A@@@@    COMMENT   FIRST TWO ALTERNATES; @F@@@@COMMENT    LOGICAL FUNCTBX
)@@G@@ION TO DETERMINE IF THE CHARACTER IN 'C'  @#@@@@IS AN OPERATOR;   @]@@@@BY
)@@G@@    FETCH;  @[@@@@BEGIN @C@@@@           02  FILLER             PICTURE BZ
)@@G@@X(5). @ @@@@           000172500019000    @ @@@@           0001826000250CA
)@@G@@00    @ @@@@           000192700029000    @^@@@@15070 REM 6-7 MAN, 0-69 CB
)@@G@@@]@@@@  GOTO L2>  @E@@@@0.005662E+00  0.0000    3.382629E+003.376967E+00CC
)@@G@@  0.0000    @I@@@@010070 INPUT-OUTPUT SECTION.                          CD
)@@G@@                  M6300110    @H@@@@C THIS PROGRAM WAS WRITTEN FOR CMSC CE
)@@G@@120.  IT INTERPOLATES A NUMBER FROM A TA  @^@@@@       F1=FUNC1(X,G)    CF
)@@G@@@B@@@@      FUNC2=FUNC1-ALPHA/2.0/PI*(T5+T6)    @C@@@@START     SA      CG
)@@G@@  A0,A1          .SAVE IT     @I@@@@010160     02 IPRONOX             PICH
)@@G@@CTURE 9(8).                         M6300210    @^@@@@  400  WRITE (L,50CI
)@@G@@0)    @ @@@@      CALL PLOTC(X2,Y2,2)     @^@@@@          AAIJ      0,X1CJ
)@@G@@@I@@@@010200        03 RESTUX           PICTURE X(9).                   CK
)@@G@@      M6300250    @^@@@@   607    23    12    26@#@@@@           E'L    CL
)@@G@@@C@@@@           W'R .NOT. C(19) .AND. I .NE. 101     @B@@@@           TCM
)@@G@@'H ST5, FOR J=I+1,1,J.G.XLOG  @I@@@@020140     DATA RECORD IS OUTREC.   CN
)@@G@@                                    M6300390    @ @@@@           0002129CO
)@@G@@00022000    @#@@@@      CA=COS(F)   @#@@@@      SA=SIN(F)   @G@@@@      CP
)@@G@@IF ((SA.GE.0.0).AND.(CA.GE.0.0).OR.(SA.LT.0.0).AND.(CA.LT.0.0))   @I@@@@CQ
)@@G@@060020 P1. ENTER LINKAGE-MODE.                                          CR
)@@G@@M6300850    @B@@@@          JGD       EA3,L($-2)        .   @B@@@@      CS
)@@G@@    L         A3,EA0            .   @F@@@@          TE        A1,0,A3   CT
)@@G@@        . IS IT WHAT WE PUT HTERE   @^@@@@   23 DO 30 IT=3, NO    @#@@@@CU
)@@G@@      X4=X4+R     @I@@@@050060     02 IREST PICTURE X(8) SYNCHRONIZED LECV
)@@G@@FT.                     M6300830    @E@@@@           INTEGER MULT, NDATACW
)@@G@@, CNTRL, Z, I, ROW, J, START  @D@@@@           INTEGER M25, M50, XLOG, YCX
)@@G@@LOG, XNLOG, YLARLG@I@@@@020050     02 IATIMEX              PICTURE 9(5).CY
)@@G@@                        M6300300    @D@@@@BACKUP* NAME             . THACZ
)@@G@@T POINTED TO BY FBPNTR  @I@@@@080050     GO TO P3.                      DA
)@@G@@                              M6301390    @F@@@@                  FOR I=DB
)@@G@@PRT-1 STEP -1 UNTIL 1 DO TOT=TOT*FACT[I]  @E@@@@       BLOCK-2. READ TRADC
)@@G@@NS-FILE, AT END GO TO END-ROUTINE.  @C@@@@      IF(INDX.GT.NOIN.OR.INDX.DD
)@@G@@LT.1)  INDX=NOIN  @ @@@@      IF (P.LE.19.0) GO TO 10 @ @@@@           GDE
)@@G@@O TO BLOCK-2.     @A@@@@           MOVE ACT-EXP TO ACTUAL.  @C@@@@      DF
)@@G@@     IF ACT-EXP IS GREATER THAN BUD-ALLOW @#@@@@ 5340 GO TO 5090  @A@@@@DG
)@@G@@ 5350 REM DEFENSIVE TEAM RECOVERS   @^@@@@ST4        ROW(J)=CHAR  @[@@@@DH
)@@G@@C     @#@@@@         55705    @#@@@@      NDIV=NUSE-1 @^@@@@   639    18DI
)@@G@@    12    26@#@@@@      Y4=S+Y1     @]@@@@IN POSTAP   @B@@@@'DO YOU WANTDJ
)@@G@@ TO SEE PRESENT EQUATIONS$Q'  @I@@@@060010 PROCEDURE DIVISION.          DK
)@@G@@                                    M6300840    @D@@@@ANYWAY: IF SUCCESSDL
)@@G@@OR[SOURCE] EQL 0 THEN GO TO POP2;   @^@@@@ INTEGER N; VALUE N;    @]@@@@DM
)@@G@@CONTINUE    @C@@@@       LA    A0,FBPNTR   . GET CURRENT ENTRY    @B@@@@DN
)@@G@@XDO[1;] $S 'X[1;T-1]+DT#(Y[1;T] - Y[4;T])'@B@@@@      ENTRY PAR2(X1,Y1,SDO
)@@G@@IDEL,SIDEW,ANGLE) @^@@@@           INTEGER  CHAR@ @@@@           BOOLEANDP
)@@G@@ CHECK, C   @ @@@@           ENTRY TO EMPLOT.   @ @@@@ 5240 IF Y2 = 0 THDQ
)@@G@@EN 5075     @]@@@@      END   @B@@@@             PERFORM ACT-OVER-BGT-RODR
)@@G@@UTINE @D@@@@           ELSE IF ACT-EXP IS LESS THAN BUD-ALLOW     @I@@@@DS
)@@G@@010020 PROGRAM-ID. COBOL READ WRITE ROUTINE FOR BLOCKED I/O.            DT
)@@G@@M6300060    @I@@@@   80  FORMAT (5I5)                                   DU
)@@G@@                  ********    @A@@@@LPS2           Y(I)=Y(I)/10.P.YLOG  DV
)@@G@@@I@@@@020200     02 IDATEO               PICTURE 9(6).                  DW
)@@G@@      M6300450    @A@@@@ BEGIN STRING ARRAY ERRORS(50:1:10);@I@@@@040070DX
)@@G@@ 01  READM.                                                       M63006DY
)@@G@@10    @I@@@@*      PROGRAM AUTHOR - GEORGE W. BALTZ                     DZ
)@@G@@            .719.GWB    @I@@@@*                                         EA
)@@G@@                              .719.GWB    @I@@@@       ENTRY   EESORT   EB
)@@G@@                                                .719.GWB    @I@@@@      EC
)@@G@@ ASSIGN  I,J                                                      .719.GED
)@@G@@WB    @^@@@@        GO TO ACCEPT;   @G@@@@   IF TERMINAL[I] AND NOT ALPHEE
)@@G@@ABETIC(TYPE[I]) AND TYPE[I] EQL CARD[CHAR]@I@@@@       TPL     OUT1+2   EF
)@@G@@                                                .719.GWB    @]@@@@      EG
)@@G@@RETURN@F@@@@                  FOR I= PRT-1 STEP -1 UNTIL 0  DO TOT=TOT*FEH
)@@G@@ACT[I:@C@@@@160   CALL GEN(LX,U,X5,OFFSET(TRIPLE(NEXT,2)),0)@ @@@@    IFEI
)@@G@@ I LSS 0 THEN ERROR(7); @[@@@@END;  @[@@@@$F    @[@@@@C     @C@@@@      EJ
)@@G@@     02  FILLER             PICTURE X(5). @ @@@@       AUTHOR. ARNOLD KAEK
)@@G@@PLAN. @]@@@@9999  RETURN@#@@@@      SPS(J)=0    @ @@@@       PROGRAM-ID.EL
)@@G@@ PROBLEM-2. @ @@@@       01  ACCT-ANALYSIS.     @I@@@@001080 INPUT-OUTPUEM
)@@G@@T SECTION.                                            PROBLEM2    @I@@@@EN
)@@G@@001090 FILE-CONTROL.  SELECT DATA-FILE-1 ASSIGN TO SYSIN1.              EO
)@@G@@PROBLEM2    @[@@@@$G R7 @^@@@@            V ::= I     @B@@@@          EREP
)@@G@@        TDATE$            .   @C@@@@  1 10  05  05  05  05  05  05  0   EQ
)@@G@@10  30  20  @^@@@@MAXYR $S MAXYR + INITYR @G@@@@      DIMENSION  AX(NR,NER
)@@G@@C),AY(NR,NC),NP(NC),XSCALE(NC,2),YSCALE(NC,2)   @B@@@@$G BAD $I # $N((A[ES
)@@G@@1]='X') $O A[1]='Y')    @#@@@@      S=SIDEW*CA  @I@@@@060070 A1. ADD 1 TET
)@@G@@O SWITCH. IF SWITCH = 1 OPEN INPUT INFILE.            M6300900    @A@@@@EU
)@@G@@C  DEFINE INTERNAL SUBROUTINE GEN   @A@@@@ 5220 GOSUB 13000 @ RETURN RESEV
)@@G@@ULT   @E@@@@      CALL GEN(LA,0,A1,UA3,0) @SAVE A3 AS PTR TO LABEL TABLEEW
)@@G@@@D@@@@      CALL GEN(AA,0,A1,X5,0) @LOCATE PROPER LABEL     @]@@@@(18X,3EX
)@@G@@F1.0) @F@@@@B      PROC              . PROC TO GET POINTER TO ENTRY AHEAEY
)@@G@@D OF  @^@@@@$G BAD $I #(3$> $E A[2])@A@@@@      IF (JPC(J).GT.21) GO TO EZ
)@@G@@109   @F@@@@  FOR I := 0,0,0,0,1,1,1,0,0,1,0,0,1,1,0,0,1 DO BEGIN J := JFA
)@@G@@ + 1; @^@@@@LOCAL PROCEDURE ERROR;  @#@@@@LOCAL LABEL START;@A@@@@*INCREFB
)@@G@@MENT K FROM 2 TO [HDG,CARD]   @#@@@@5360 LET T = 3 -T @^@@@@ 5365 LET B FC
)@@G@@=B + Y1     @#@@@@/[[#1],[#2],3,1]& @F@@@@           W'R WORD(0).E.$THROFD
)@@G@@UG$.OR.(WORD(0).A.MASK).E.$T'H@@@$  @#@@@@           E'L    @I@@@@040040FE
)@@G@@     77 TEST                 PICTURE 9(6).                        M63005FF
)@@G@@80    @#@@@@      GO TO 801   @^@@@@        C EQL LPAREN OR @^@@@@      FG
)@@G@@  C EQL EQUAL OR  @A@@@@        C EQL BRACKET THEN BEGIN    @ @@@@      FH
)@@G@@      OPERATOR := TRUE; @^@@@@            GO TO FND;  @[@@@@ END  @I@@@@FI
)@@G@@       TZE     *+2                                                      FJ
)@@G@@.719.GWB    @I@@@@       TPL     OUT2                                   FK
)@@G@@                  .719.GWB    @I@@@@       LXA     I,1                  FL
)@@G@@                                    .719.GWB    @I@@@@       CLA     HOLFM
)@@G@@D,1                                                   .719.GWB    @I@@@@FN
)@@G@@       TPL     OUT1+2                                                   FO
)@@G@@.719.GWB    @I@@@@       TTR     *+3                                    FP
)@@G@@                  .719.GWB    @I@@@@BACK1  CLA     I                    FQ
)@@G@@                                    .719.GWB    @I@@@@       ADD     =1 FR
)@@G@@                                                      .719.GWB    @G@@@@FS
)@@G@@THIS ROUTINE COMBINES THE SEARCHES FOR THE QUASI-TERMINALS I AND N;     FT
)@@G@@@]@@@@     BEGIN  @B@@@@       TERM = PRI B ARBNO('**' B PRI B )  @C@@@@FU
)@@G@@       AEX = TERM B ARBNO(('+'/'-') B TERM B )  @B@@@@       BEX = AEX BFV
)@@G@@ ARBNO( ROP B AEX B)    @#@@@@           J=0    @ @@@@           CHANGE=FW
)@@G@@CHANGE+5    @C@@@@           SPRAY.($ $,SQUASH(0)...SQUASH(12))   @E@@@@FX
)@@G@@           T'H SQUISH, FOR I=11,1,CARD(I).E.$,$.OR.I.G.71   @#@@@@,[[#1]FY
)@@G@@,I,2,1]&    @ @@@@*. DOC DOC,SDF DOC VERSION    @#@@@@           J=J+1  FZ
)@@G@@@^@@@@           W'R FLAG     @#@@@@C     TME(T))     @H@@@@020130     LGA
)@@G@@ABEL RECORDS ARE LAB-1                                      UNIVAC@ @@@@GB
)@@G@@           PRINT FORMAT PAGEUP@#@@@@    C := CHAR[I]; @#@@@@    I := I-1GC
)@@G@@;     @^@@@@          E$DIT     EPKT@D@@@@  STRUCT[J] := IF I EQL 0 THENGD
)@@G@@ FALSE ELSE TRUE; END;  @]@@@@  J := 0;   @A@@@@      IF(NUMPLT.GT.1)  GGE
)@@G@@O TO 100    @[@@@@$G TRY@[@@@@BEGIN @B@@@@ 5400 GOSUB 13000    @  RETURNGF
)@@G@@ RESULT     @C@@@@    T;    COMMENT 'T' PRECEEDED BY AN OPERATOR; @ @@@@GG
)@@G@@ 5100 IF R3 = 2 THEN 11500    @^@@@@ 5105 IF L = 0 THEN 1000@]@@@@CHAR :GH
)@@G@@= 1;  @]@@@@GO TO QUERY;@G@@@@  RECUR:  IF STACK(PTR) EQL 3  THEN  GOTO GI
)@@G@@EQUL0  ELSE  IF STACK(PTR)    @#@@@@SAVE       C'E    @G@@@@15150 DATA 5GJ
)@@G@@,4,2603,0,-1,-4,0,-5,-3,-6,-2604,-7,-6,-9,2703,-5,2109,-2   @^@@@@15160 GK
)@@G@@REM  7 MAN,10-30  @^@@@@      WRITE (F1,M,ANS)$ @#@@@@INP $S $E CHANGE  GL
)@@G@@@A@@@@'NEW EXPRESSION IS '; $E CHANGE[$I7]@^@@@@DESCRIBE $S 'TYPE SIM'  GM
)@@G@@@[@@@@$I/   @[@@@@$F    @#@@@@$F CHANGEDO;INP   @]@@@@      STOP  @ @@@@GN
)@@G@@      CALL PLOTC(5.0,0.0,-3)  @]@@@@'Y3:  ';Y3I @]@@@@'Y4:  ';Y4I @D@@@@GO
)@@G@@NEXT1:'DO YOU WANT TO CHANGE ANY INITIAL VALUES $Q'   @E@@@@15170 DATA 9GP
)@@G@@9,4,9,2,2606,1,4,1,2,1,-1,0,7707,1,7,6,4,2604   @[@@@@C     @B@@@@      GQ
)@@G@@SUBROUTINE GEN(F1,J1,AA1,U1,XX1)    @B@@@@PSRFRM    FORM      9,9,2,7,9 GR
)@@G@@        .   @]@@@@'THINKING'  @I@@@@001100 DATA DIVISION.               GS
)@@G@@                                    PROBLEM2    @^@@@@   369    19    12GT
)@@G@@    27@I@@@@040230     PICTURE 9(5).                                    GU
)@@G@@            M6300770    @B@@@@ 5420 GOSUB 13500  @PRINT YARDAGE RESULT  GV
)@@G@@@ @@@@          J         2,X11     @^@@@@*PROCESS PROCESS PDP    @^@@@@GW
)@@G@@*PROCESS PROCESS RALPH  @I@@@@050010     02 IUTIME USAGE COMPUTATIONAL SGX
)@@G@@YNCHRONIZED RIGHT             M6300780    @#@@@@          END     @F@@@@GY
)@@G@@           DISPLAY 'EXCESSES OF BUDGET OVER ACTUAL, ' ED-UNDER    @#@@@@GZ
)@@G@@L*        FUNC    @[@@@@KJN   @ @@@@OUT    SA    A0,FSPNTR   .    @^@@@@HA
)@@G@@'TYPE IN X1-X4 OR Y1-Y4'@#@@@@$F INITIALIZE     @#@@@@      A(1,1)=.5   HB
)@@G@@@ @@@@          END  L(1)-BEGIN     @^@@@@*PROCESS PROCESS DOC    @^@@@@HC
)@@G@@*PROCESS PROCESS ELT    @]@@@@        END;@G@@@@    IF C EQL LPAREN THENHD
)@@G@@ GO TO ACCEPT;  COMMENT OR 'T' PRECEEDED BY '(';@E@@@@    IF C EQL EQUALHE
)@@G@@ THEN GO TO ACCEPT;   COMMENT OR BY '=';  @ @@@@       AUTHOR. FEE JING HF
)@@G@@MON.  @A@@@@          L         A0,(0305,IMAGE) @^@@@@   586    37    08HG
)@@G@@    22@#@@@@  2 40  30  30    @F@@@@           V'S YSCALE=$1H8,S40,H+Y VHH
)@@G@@ALUES SCALED BY A FACTOR + ,  @^@@@@   559    20    09    29@[@@@@4 $Y 4HI
)@@G@@@^@@@@               READ I;  @^@@@@$EXECUTE       IBJOB    @^@@@@      HJ
)@@G@@WRITE (6,175)     @ @@@@STRING ALPHA(26),BLANK(1);    @#@@@@STRING NUM(1HK
)@@G@@0);   @]@@@@INTEGER I;  @#@@@@  BOOLEAN NUMBER; @#@@@@LOCAL PROCEDURE T;HL
)@@G@@@#@@@@     Y := Y - 1;  @]@@@@  J := 0;   @G@@@@  FOR I := -1,-1,-1,-1,-HM
)@@G@@1,-1,-1,9,0,-1,12,0,14,15,-1,-1,-1 DO BEGIN     @B@@@@  J := J + 1; ALTEHN
)@@G@@RNATE[J] := I; END;     @^@@@@       EX1 = EVAL( EX)  @^@@@@          + HO
)@@G@@        N   @[@@@@*END  @I@@@@002100 77  DIS-4         PICTURE  +ZZ,ZZ9.HP
)@@G@@99.                           PROBLEM2    @C@@@@           02  ACCOUNT-SHQ
)@@G@@TATUS     PICTURE A(20).@C@@@@           02  FILLER             PICTURE HR
)@@G@@X(5). @#@@@@C48993070035500   @B@@@@          AXR$                      HS
)@@G@@   .  @^@@@@          L,U       R3,9@[@@@@*END  @ @@@@ABCDEFGHIJKLMNOPQRHT
)@@G@@STUVWXYZ    @#@@@@      Y4=Y4+S     @I@@@@001010 IDENTIFICATION DIVISIONHU
)@@G@@.                                         PROBLEM2    @B@@@@ 5230 GOSUB HV
)@@G@@13500    @PRINT YARDAGE RESULT@H@@@@      A(4,8)=28837.*XOLD(1)+139009.*HW
)@@G@@XOLD(2)+78213.*XOLD(3)-18927.*XOLD(4)     @I@@@@001020 PROGRAM-ID.  PROBHX
)@@G@@LEM-2.                                          PROBLEM2    @#@@@@'OK$Q HY
)@@G@@(YES OR NO)'@[@@@@FINISH@]@@@@      A(4,Z @^@@@@    5 B(J)=ZT(J)+ZTA    HZ
)@@G@@@[@@@@BEGIN @ @@@@    IF C EQL 'I' THEN BEGIN   @^@@@@     GYOYO[Y]:=GOAIA
)@@G@@L;    @^@@@@     SYOYO[Y]:=SOURCE;  @^@@@@     CYOYO[Y]:=CHAR;    @]@@@@IB
)@@G@@GO TO START;@[@@@@BEGIN @ @@@@    IF C EQL RPAREN THEN BEGIN@C@@@@      IC
)@@G@@  FETCH;     COMMENT THIRD ALTERNATE;     @D@@@@           W'R THRUS(PLAID
)@@G@@CE,I).NE.CARD(I),FLAG1=1B     @#@@@@          E$TIME  @^@@@@CAT       '@IE
)@@G@@CAT,PR    &'@A@@@@          L         A0,(0305,IMAGE) @^@@@@        NUMBIF
)@@G@@ER := FALSE;@[@@@@END;  @^@@@@PROCEDURE POPUP(N);     @^@@@@     VALUE NIG
)@@G@@; INTEGER N;@C@@@@         (NOTE:  THE SCAN IS FROM THE RIGHT);   @[@@@@IH
)@@G@@BEGIN @A@@@@     THEN OPERATOR := LOOKFOR[I];   @[@@@@  END;@]@@@@      II
)@@G@@ N = 1@^@@@@   420    20    14    29@F@@@@       ROP = '.GT.' / '.LT.' /IJ
)@@G@@ '.EQ.' / '.GE.' / '.LE.'  / '.NE.' @A@@@@           W'R .NOT. C( 7), P'IK
)@@G@@T XG  @A@@@@           W'R .NOT. C(11), P'T YG  @ @@@@           PRINT FIL
)@@G@@ORMAT PAGEUP@B@@@@           THROUGH S1, FOR I=0,1,I.G.10   @E@@@@1.7578IM
)@@G@@50E+001.016904E-011.124576E+019.487910E+00  0.0000    @ @@@@901   FORMATIN
)@@G@@(' BM=',E14.8)    @B@@@@  150 FORMAT(//,10X,4HBETA,20X,4HDBDS,//) @ @@@@IO
)@@G@@      COMMON / KEEP /FUNC1    @ @@@@      COMMON / KEEP /FUNC1    @B@@@@IP
)@@G@@           MOVE TOT-UNDER TO ED-UNDER.    @^@@@@$G NEXT2 # $I(INPUT)    IQ
)@@G@@@ @@@@            IF N EQL 1 THEN   @]@@@@C2:INP $S $"@^@@@@       EX2 =IR
)@@G@@ EVAL( EX)  @^@@@@$G C1 $I(INP[1] $= ' ') @^@@@@      DO 912 J=2,KP     IS
)@@G@@@#@@@@           E'L    @^@@@@      INDX=INDX*MDIV+2  @E@@@@C-- DECLAREDIT
)@@G@@ IN WHICH ARE SUPERIOR TO THIS BLOCK.  OFFSET IS@^@@@@$IBCBC ISM101  NODIU
)@@G@@ECK   @ @@@@*INCREMENT Z FROM S TO [Q]    @[@@@@$F    @]@@@@#I=I+I*N#   IV
)@@G@@@C@@@@           02  FILLER             PICTURE X(51).@]@@@@$F REDO     IW
)@@G@@@^@@@@          E$CHAR    '*' @ @@@@          ER        PRINT$    @ @@@@IX
)@@G@@*IF [Q,Z,3,1]=5 OR [Q,Z,3,1]=6@[@@@@*ELSE @ @@@@          L,U       R4,1IY
)@@G@@1     @I@@@@003040                            DISPLAY '                 IZ
)@@G@@           'PROBLEM2    @B@@@@      CALL PAR(0.0,-3.0,6.0,1.5,0.0,5)    JA
)@@G@@@B@@@@      CALL PAR(6.0,-3.0,6.0,1.5,90.0,5)   @#@@@@C3:'TRY AGAIN$Q'  JB
)@@G@@@#@@@@$G C4 # $I(INPUT) @[@@@@$F    @I@@@@003050     '                REJC
)@@G@@ID ELLIS  SECTION 7  '  UPON SYSOU1.      PROBLEM2    @ @@@@           PJD
)@@G@@RINT COMMENT $ $  @^@@@@      DO 912 J=1,KP     @ @@@@       INPUT-OUTPUJE
)@@G@@T SECTION.  @E@@@@       FILE-CONTROL. SELECT TRANS-FILE ASSIGN TO SYSINJF
)@@G@@1.    @#@@@@X3N $S $E X3DO    @#@@@@X4N $S $E X4DO    @I@@@@       STA  JG
)@@G@@   STA1                                                     .719.GWB    JH
)@@G@@@I@@@@       STA     STA2                                               JI
)@@G@@      .719.GWB    @I@@@@       CLA     2,4                              JJ
)@@G@@                        .719.GWB    @I@@@@       STA     STA3           JK
)@@G@@                                          .719.GWB    @#@@@@ 5410 LET L=JL
)@@G@@0     @[@@@@ END; @]@@@@     BEGIN  @I@@@@       STA     STA4           JM
)@@G@@                                          .719.GWB    @I@@@@       STA  JN
)@@G@@   STA5                                                     .719.GWB    JO
)@@G@@@I@@@@       STA     STA6                                               JP
)@@G@@      .719.GWB    @I@@@@       STA     STA7                             JQ
)@@G@@                        .719.GWB    @I@@@@       STO     I              JR
)@@G@@                                          .719.GWB    @I@@@@       SUB  JS
)@@G@@   HOLD                                                     .719.GWB    JT
)@@G@@@I@@@@080040     CLOSE INFILE.                                          JU
)@@G@@      M6301380    @B@@@@          L,U       A10,'Z'            .  @[@@@@JV
)@@G@@C     @C@@@@  1 05  10  10  10  10  10  10  10  10  10  05  @#@@@@  2 50JW
)@@G@@  25  25    @ @@@@ 5075 GOSUB 12500    @TIME    @[@@@@*.    @[@@@@*.    JX
)@@G@@@F@@@@*. THE OPTIONS OF /Q , HEADINGS , AND START 'N' CAN BE INTERMIXED JY
)@@G@@@^@@@@CHANGE[5] $S INP[2]     @#@@@@$GR6#$I(INPUT)    @#@@@@'WHICH ONE$QJZ
)@@G@@'     @B@@@@           THROUGH L1, FOR I=0,1,I.G.NDATA@I@@@@002148     AKA
)@@G@@DD 1 TO NO-OF-NOS.                                          PROBLEM2    KB
)@@G@@@B@@@@          LMJ       A0,L($+1)         .   @F@@@@      DIMENSION XRKC
)@@G@@EF(NC,3),YREF(NC,3),F(NC),XTEST(100),YTEST(100) @ @@@@           END OF KD
)@@G@@FUNCTION    @A@@@@           MOVE DIFF TO PCT-OVER.   @I@@@@020180     0KE
)@@G@@2 UNAMEO               PICTURE X(10).                       M6300430    KF
)@@G@@@^@@@@15100 REM 5 MAN,10-30   @ @@@@C     INDX=INDX*(NUSE+1)+2    @E@@@@KG
)@@G@@15000 REM     RUNNING PLAYS 2 CARDS PER LINE PER YARDAGE    @]@@@@X3 $S KH
)@@G@@X3I   @^@@@@           STOP RUN.    @]@@@@3 1 $R ' '  @[@@@@*.    @A@@@@KI
)@@G@@          1 H+OF 10 TO THE  +, I3*$ @^@@@@     GOAL:=GYOYO[Y];    @B@@@@KJ
)@@G@@          L,U       A7,'0'-1           .  @ @@@@      DIMENSION ARRAY(10KK
)@@G@@00)   @ @@@@C1    THIS ALGORITH OUTPUTS OM@A@@@@       SOURCE-COMPUTER. KL
)@@G@@IBM-7094.   @A@@@@       OBJECT-COMPUTER. IBM-7094.   @B@@@@           SKM
)@@G@@PRAY.($ $,OUT(0)...OUT(71))   @]@@@@I := 80;    @]@@@@TEST: FETCH;@A@@@@KN
)@@G@@IF C NEQ BLANK THEN GO TO CALL;     @G@@@@IF I LEQ 4 THEN GO TO START; CKO
)@@G@@OMMENT LESS THAN SHORTEST POSSIBLE STRING;@]@@@@GO TO TEST; @E@@@@6.8300KP
)@@G@@00E+021.402353E+036.906834E+020.003400E+007.680000E+00@[@@@@C     @G@@@@KQ
)@@G@@PROBLMOV   3  4 2        2  2  2                                       1KR
)@@G@@@I@@@@070120     MOVE IDATE TO IDATEO.                                  KS
)@@G@@      M6301210    @#@@@@F11804505045050   @#@@@@A20405005054000   @I@@@@KT
)@@G@@020060     02 ILTIMEX              PICTURE 9(5).                        KU
)@@G@@M6300310    @#@@@@         BUFFER P @ @@@@           END OF CONDITIONAL KV
)@@G@@@ @@@@      SUBROUTINE BEGIN(ARRAY) @[@@@@$(0). @@@@@@@C@@@@      IF(J.EKW
)@@G@@Q.1) DUM(J)=-(B(1)-B(2))/TANH(DS)   @ @@@@           W'R CARD(I).NE.$ $ KX
)@@G@@@A@@@@*. ELT ASM COB RALPH ALG MAP DOC PDP@A@@@@C         SINGLE VARIABLKY
)@@G@@E SUBSCRIPTS@D@@@@END OF CARD ENCOUNTERED BEFORE END OF STRING (ERROR 7)KZ
)@@G@@@E@@@@MISMATCHED PARENTHESES--TOO MANY RIGHT PARENTHESES (ERROR 8)@B@@@@LA
)@@G@@         N REPRESENTS ANY LEGAL NUMBER;   @ @@@@           PRINT COMMENTLB
)@@G@@ $8 $ @[@@@@*.    @[@@@@*.    @I@@@@070060 P6. ENTER COBOL.             LC
)@@G@@                                    M6301150    @#@@@@G18119300094000   LD
)@@G@@@ @@@@C4:'INPUT EXPRESSION FOR ';INP@G@@@@1                             LE
)@@G@@                                    8   20@]@@@@      I=I+1 @^@@@@      LF
)@@G@@    +         0   @I@@@@HOLD   ERAS    1000                             LG
)@@G@@                        .719.GWB    @I@@@@EESORT CLA     1,4            LH
)@@G@@                                          .719.GWB    @I@@@@       SXA  LI
)@@G@@   RETURN,4                                                 .719.GWB    LJ
)@@G@@@]@@@@       N = 2@C@@@@NEXT     EQ( STRING, '69' )       :S(END) F(IN) LK
)@@G@@@I@@@@STA1   CLA     **                                                 LL
)@@G@@      .719.GWB    @I@@@@       STO     HOLD                             LM
)@@G@@                        .719.GWB    @I@@@@       PXA     ,,             LN
)@@G@@                                          .719.GWB    @A@@@@      CALL GLO
)@@G@@OT(TRIPLE(NEXT,3),UA2)  @B@@@@2     ADDR(CODE(B1)) = ORIGIN + I + 1     LP
)@@G@@@#@@@@      ANMB=NOIN-2 @C@@@@  1 10  05  05  05  05  05  05  0   10  30LQ
)@@G@@  20  @D@@@@           02  PCT-UNDER          PICTURE ZZZ.99.     @F@@@@LR
)@@G@@           DISPLAY 'NUMBER    ', 'STATUS                   ',     @#@@@@LS
)@@G@@      GO TO 1     @I@@@@      WRITE (6,100) NAME, IDATE, ITIME          LT
)@@G@@                        M6301590    @E@@@@       77  RUN-UNDER          LU
)@@G@@         PICTURE 99999V99.    @^@@@@   440    34    12    29@I@@@@      LV
)@@G@@ TTR     *+2                                                      .719.GLW
)@@G@@WB    @I@@@@BACK2  CLA     J                                            LX
)@@G@@            .719.GWB    @#@@@@$IBJOB         GO @#@@@@    ERROR(4);     LY
)@@G@@@ @@@@      CALL PLOTS(ARRAY,1000)  @ @@@@      CALL PLOTC(6.0,-11.0,-3)LZ
)@@G@@@^@@@@A5         CONTINUE     @^@@@@           Y(I)=Y(I+1)  @G@@@@  FOR MA
)@@G@@I := 2,3,4,5,0,0,8,7,7,11,10,10,0,0,16,17,0 DO BEGIN J := J + 1;  @A@@@@MB
)@@G@@           EXTERNAL FUNCTION (X,Y)  @I@@@@070020 P5. ENTER LINKAGE-MODE.MC
)@@G@@                                          M6301110    @D@@@@TYPE I ANOVAMD
)@@G@@.      RECALL SCORES      B IS 1SE VS 3ME @@@@@@@I@@@@003140     DISPLAYME
)@@G@@ '     '  UPON SYSOU1.                                PROBLEM2    @I@@@@MF
)@@G@@003150     DISPLAY '     '  UPON SYSOU1.                                MG
)@@G@@PROBLEM2    @#@@@@X2N $S $E X2DO    @G@@@@      DIMENSION SCALE(NPLT,2),MH
)@@G@@XRATE(NPLT),REF(NPLT,3),DIG(100),X(200)   @B@@@@           XLOG=(Y(I)-YBMI
)@@G@@AR)/YGRID+50.5    @ @@@@BLACK       ROW(XLOG)=CHAR    @ @@@@ INTEGER PROMJ
)@@G@@CEDURE IDENTIFIER;@#@@@@ BEGIN INTEGER I; @#@@@@ BEGIN INTEGER I; @[@@@@MK
)@@G@@$G C2 @#@@@@'INPUT YES OF NO' @I@@@@002110 77  DIS-5         PICTURE  +ZML
)@@G@@Z9.99.                              PROBLEM2    @[@@@@$F    @E@@@@      MM
)@@G@@     MOVE 'ACTUAL OVER BUDGET' TO ACCOUNT-STATUS.     @]@@@@PROCEDURE P;MN
)@@G@@@I@@@@060090 A2. MOVE IPRONOX TO IPRONO.                                MO
)@@G@@      M6300920    @ @@@@ 5540 GOSUB 12500    @TIME    @ @@@@STRING ARRAYMP
)@@G@@ MSG(80:1:9);     @C@@@@COMMENT   FUNCTION TO FIT  P::= I \ N \ (E);    MQ
)@@G@@@ @@@@       PROCEDURE DIVISION.    @[@@@@*.    @I@@@@      GO TO 10    MR
)@@G@@                                                      M6301610    @^@@@@MS
)@@G@@$G LOOP# $I(DTEMP=4)    @ @@@@           END OF FUNCTION    @#@@@@      MT
)@@G@@CALL ENDPLT @ @@@@           FUNCTION RETURN Z  @ @@@@  SUCCESSOR[J] := MU
)@@G@@I; END;     @#@@@@PROCEDURE FETCH;  @^@@@@     SOURCE:=SYOYO[Y];  @F@@@@MV
)@@G@@*. THE /Q IN SPEC 2 SPECIFIES THAT ALL ELEMENTS IN TPF$ ARE TO BE @E@@@@MW
)@@G@@*. LOOKED AT.  IF IT IS DESIRED TO DO ONLY CERTAIN ELEMENTS @#@@@@      MX
)@@G@@     H=N/R  @D@@@@           DISPLAY 'TOTAL OVER IS ' DIS UPON SYSOU1.  MY
)@@G@@@^@@@@$IBCBC ISM101  NODECK   @[@@@@*.    @]@@@@*EDIT ON    @ @@@@      MZ
)@@G@@    +         WEF$,0,0  @#@@@@'HOW ABOUT THAT!' @B@@@@           W'R C(4NA
)@@G@@), P'T XSCALE, XLOG*(-1)@ @@@@       PROGRAM-ID.  PROGRAM-2.@I@@@@      NB
)@@G@@ ADD     =1                                                       .719.GNC
)@@G@@WB    @I@@@@060100     MOVE CODE1X TO CODE1.                            ND
)@@G@@            M6300930    @#@@@@       IF (Y ,    @^@@@@C--- REPAIR "IF" BNE
)@@G@@RANCH @]@@@@$G NEXT     @ @@@@TEN       L,U       R4,11     @ @@@@C1: $GNF
)@@G@@ C3 # $I(($R INP) > 2)  @#@@@@BAD: 'TRY AGAIN'  @D@@@@           V'S AXING
)@@G@@S=$1H9,S23,10(10HI+++++++++),1HI * $@F@@@@           V'S XB=$1H ,S50,H+ NH
)@@G@@EMPLOT HAS CALCULATED XBAR  +*$     @#@@@@$*  PLOT AFTER RUN@[@@@@C     NI
)@@G@@@#@@@@X[$IT;] $S XI     @#@@@@Y[$IT;] $S YI     @I@@@@010080 FILE-CONTRONJ
)@@G@@L.                                                    M6300120    @C@@@@NK
)@@G@@  1 25                  50                  25  @#@@@@  2 20  20  60    NL
)@@G@@@ @@@@OUT $S (MAXYR-INITYR+1,9) $R 0@[@@@@$F    @I@@@@040150     02 ITIMNM
)@@G@@E USAGE COMPUTATIONAL SYNCHRONIZED RIGHT PICTURE 9(6).M6300690    @C@@@@NN
)@@G@@           P'T $(1H ,72A1)*$,CARD(0)...CARD(71) @B@@@@YDO[4;] $S '35 $L NO
)@@G@@X[1;T-1] $L X[4;T-1]'   @[@@@@$F    @#@@@@      X3=R+X2     @^@@@@      NP
)@@G@@     T'O READ     @^@@@@       EX3 = EVAL( EX)  @[@@@@A $S 5@]@@@@B $S 1NQ
)@@G@@0     @^@@@@      FORMAT(3F6.0)     @^@@@@X3DO$S 'X3+1#(Y2N-Y3N)' @ @@@@NR
)@@G@@X4DO $S 'X4 + 1 # (Y3N-Y4N)'  @^@@@@           M25=MULT*25  @^@@@@      NS
)@@G@@     M50=MULT*50  @ @@@@           CHAR=676060606060K @I@@@@060080     RNT
)@@G@@EAD INFILE AT END MOVE ALL '9' TO IPRONOX AND GO TO A2.     M6300910    NU
)@@G@@@]@@@@$F REDO     @F@@@@C  INCREMENT THE POINTER TO THE NEXT WORD IN THENV
)@@G@@ GENERATED CODE   @[@@@@T $S 1@E@@@@       NAME = SPAN('ABCDEFGHIJKLMNOPNW
)@@G@@QRSTUVWXYZ1234567890.-')@[@@@@C     @ @@@@      CODE(I)=OFFSET(TRIP)    NX
)@@G@@@#@@@@         58036    @A@@@@           MOVE ZERO TO PCT-UNDER.  @^@@@@NY
)@@G@@           A(I+77K)=A(I)@B@@@@           ADD RUN-UNDER TO TOT UNDER.    NZ
)@@G@@@A@@@@    IF NOT OPERATOR THEN ERROR(9);  @^@@@@  FORMAT O(S50,A1.1);   OA
)@@G@@@A@@@@           WRITE ACCT-ANALYSIS.     @I@@@@002070 77  DIS-1        OB
)@@G@@ PICTURE  +ZZ9.99.                              PROBLEM2    @I@@@@002080OC
)@@G@@ 77  DIS-2         PICTURE  +ZZ9.99.                              PROBLEOD
)@@G@@M2    @]@@@@       N = 3@C@@@@           WHENEVER YLOG.G.4  .OR. YLOG.L.OE
)@@G@@-3    @C@@@@           THROUGH LPS2, FOR I=0,1,I.G.NDATA    @^@@@@      OF
)@@G@@DO 912 J=1,KP     @^@@@@   487    35    15    31@#@@@@ 5290 GO TO 5170  OG
)@@G@@@[@@@@-29   @]@@@@      NO=2  @]@@@@,2;590.     @G@@@@1                 OH
)@@G@@                                                7   60@B@@@@C     DECREAOI
)@@G@@SE THE PREDECESSOR COUNT BY 1 @H@@@@SGEOG411 0101030000030MWF11         OJ
)@@G@@                Q   209              03   @A@@@@       WORKING-STORAGE SOK
)@@G@@ECTION.     @^@@@@   541    18    10    23@^@@@@   340    34    13    33OL
)@@G@@@ @@@@       ACT-UNDER-BGT-ROUTINE. @E@@@@           MOVE 'ACTUAL UNDER OM
)@@G@@BUDGET' TO ACCOUNT-STATUS.    @I@@@@080140 T2. EXIT.                    ON
)@@G@@                                    M6301480    @#@@@@      GO TO 10    OO
)@@G@@@#@@@@      GO TO 410   @ @@@@402   CALL GEN(LMJ,0,X11,0,X1)@A@@@@C  GENOP
)@@G@@ERATE CODE FOR END OF JOB     @F@@@@  3 10  05  05  05  05  05  20  05  OQ
)@@G@@05  05  05  05  05  05  10    @D@@@@       FD  BUDGET-ANALYSIS DATA RECOOR
)@@G@@RD ACCT-ANALYSIS  @D@@@@           02  FILLER                  PICTURE XOS
)@@G@@(5).  @D@@@@           02  ACCOUNT-STATUS          PICTURE A(20). @F@@@@OT
)@@G@@      DIMENSION YSCALE(NPLT,2),YREF(NPLT,3),XREF(NPLT,3),NSIGN(2) @A@@@@OU
)@@G@@       X$DUMP ECSAV6,7,'O','XAR'    @I@@@@080030     DISPLAY ' '.       OV
)@@G@@                                          M6301370    @ @@@@L2         YOW
)@@G@@BAR=YBAR+Y(I)     @ @@@@           YBAR=YBAR/NDATA    @^@@@@SGEOG202 030OX
)@@G@@101040000040@#@@@@CGEOL100 GEOLOGY  @E@@@@0.241000E+00  0.0000    1.6439OY
)@@G@@38E+000.002938E+001.400000E+00@B@@@@A2         WHENEVER C(7), TRANSFER TOZ
)@@G@@O A3  @]@@@@)DEBUG 0    @A@@@@           LABEL RECORD OMITTED.    @^@@@@PA
)@@G@@TFREN    0101MONCHOUX   @F@@@@           V'S XG=$1H ,S50,H+ EMPLOT HAS CPB
)@@G@@ALCULATED XGRID +*$     @F@@@@           V'S YG=$1H ,S50,H+ EMPLOT HAS CPC
)@@G@@ALCULATED YGRID +*$     @G@@@@           EXTERNAL FUNCTION(X,Y,NDATA,XGRPD
)@@G@@ID,YGRID,XBAR,YBAR,MULT,CNTRL)@B@@@@           DIMENSION H(20), ROW(101)PE
)@@G@@,C(20)@A@@@@$G BAD # $I($A/'YES'=(3^A,'   ')    @I@@@@040180     02 IATIPF
)@@G@@ME USAGE COMPUTATIONAL SYNCHRONIZED RIGHT             M6300720    @I@@@@PG
)@@G@@070230 11. IF IPRONO = 99999999, GO TO THATS-ALL ELSE GO TO B2.         PH
)@@G@@M6301320    @^@@@@    IF C EQL MINUS OR   @^@@@@        C EQL PLUS OR   PI
)@@G@@@A@@@@           ADD RUN-OVER TO TOT-OVER.@C@@@@          NOP       . WAPJ
)@@G@@IT FOR IT TO HAPPEN     @C@@@@          HJ        L($+1)            . STPK
)@@G@@OP    @C@@@@           XGRID =(X(NDATA)-X(0)) /(MULT*50.)   @D@@@@      PL
)@@G@@ BEQ = BEX B ARBNO(('.AND.' / '.OR.') B BEX B   @ @@@@A3         W'R C(1PM
)@@G@@1), T'O A4  @#@@@@         TG,U     @A@@@@           V'S MASK=7777770000PN
)@@G@@00K   @C@@@@C   COPY A FAKE HEADER LABEL WHICH WILL BE REL  @F@@@@      PO
)@@G@@    LMJ       A1,L($+1)         . GET LEFT HALF OF PATTERN  @ @@@@CHANGEPP
)@@G@@ $S 'XDO[1;] $S $"'     @#@@@@100   CONTINUE    @ @@@@      CALL PLOTC(XPQ
)@@G@@3,Y3,I)     @ @@@@      CALL PLOTC(X4,Y4,2)     @ @@@@      IF (P.LT.360PR
)@@G@@.0) GO TO 20@^@@@@      DO 100  I=2,NAX   @A@@@@          1 H+OF 10 TO TPS
)@@G@@HE +, I3*$  @B@@@@$ID    MON,FEEJING *356/18/752*10S*NODECK$@#@@@@FILL  PT
)@@G@@     C'E    @ @@@@    69     0     0     0     0@G@@@@007110 01  C-T-HOLPU
)@@G@@D                     PICTURE X(20), VLAUE IS SPACE.  @#@@@@      CODE(IPV
)@@G@@)=0   @#@@@@      REL=ORIGIN+I@G@@@@           DISPLAY '                PW
)@@G@@                      ' UPON SYSOU1.@ @@@@           B'N FLAG,FLAG1     PX
)@@G@@@[@@@@B $S 1@^@@@@   414    38    12    35@I@@@@080150 ZZ. DISPLAY 'MERGPY
)@@G@@E TAPE NOW COMPLETE ON A3'.                     M6301490    @ @@@@BOOT  PZ
)@@G@@    L,U       A0,OUT    @A@@@@401   CALL GEN(LX,0,WREG,REGTOP,0)  @F@@@@QA
)@@G@@C-- THE POSITION IN THE RUN-TIME DISPLAY OF THE VARIABLE.  LINE   @E@@@@QB
)@@G@@       77  DIFF                        PICTURE 99999V99.    @B@@@@      QC
)@@G@@    TE,U      A3,L(END)         .   @I@@@@070160     MOVE ILTIME TO ILTIQD
)@@G@@MEO.                                      M6301250    @F@@@@       77  TQE
)@@G@@OT-OVER               PICTURE 99999V99 VALUE ZERO.    @E@@@@0.008362E+00QF
)@@G@@  0.0000    2.717015E+002.708653E+00  0.0000    @B@@@@ 5380 PRINT 'PICKEQG
)@@G@@D UP BY ;N(T); ' FOR';  @]@@@@      I=I+1 @ @@@@      CALL GEN(TNE,0,A1,QH
)@@G@@UA2,0)@ @@@@      CALL GEN(J,0,0,0,0)     @^@@@@  151 FORMAT(2F20.10)   QI
)@@G@@@A@@@@           C(14)=.NOT.C(2).AND.C(13)@ @@@@XDO $S YDO $S 4 72 $R ' QJ
)@@G@@'     @B@@@@EA3       EQU       EA0+2             .   @I@@@@100   FORMATQK
)@@G@@ (1H , A6, A5, I8, I8)                                      M6301640    QL
)@@G@@@^@@@@   10 CALL WHERE(W,Z)   @ @@@@      CALL PLOTC(X1,Y1,3)     @ @@@@QM
)@@G@@      F=3.14159/180.0*ANGLE   @I@@@@010140     DATA  RECORD IS INREC.   QN
)@@G@@                                    M6300190    @G@@@@1                 QO
)@@G@@                                                6   20@[@@@@IF    @[@@@@QP
)@@G@@C     @I@@@@001110 FILE SECTION.                                        QQ
)@@G@@            PROBLEM2    @]@@@@C--- GO TO  @I@@@@003170     DISPLAY '    QR
)@@G@@ '  UPON SYSOU1.                                PROBLEM2    @I@@@@003180QS
)@@G@@     DISPLAY '     '  UPON SYSOU1.                                PROBLEQT
)@@G@@M2    @C@@@@          AAIJ      0,X1              . CONTINUE@^@@@@ 5370 QU
)@@G@@LET B = 100 - B   @I@@@@003210 PAR-9.  DISPLAY 'YOU FORGOT THE DATA, DUMQV
)@@G@@MY ' UPON SYSOU1.       PROBLEM2    @B@@@@               IF N EQL 1 THENQW
)@@G@@ FACT=1 ELSE@[@@@@$DATA @#@@@@C  CONSTANT TABLE @E@@@@      SUBROUTINE GQX
)@@G@@VRATE(SCALE,REF,NPLT,NSECT,XMIN,XRATE)    @G@@@@      DIMENSION SCALE(NPQY
)@@G@@LT,2),XRATE(NPLT),REF(NPLT,3),DIG(100),X(200)   @E@@@@      SUBROUTINE GQZ
)@@G@@VESZE(REF,NPLT,NSECT,XMAX,XMIN,SCALE)     @B@@@@ 5510 GOSUB 11000   @ ANRA
)@@G@@ALYZE PENALTY     @H@@@@010090     SELECT INFILE ASSIGN TO UNISERVO D.  RB
)@@G@@                        UNIVAC@^@@@@           A(I)=I.LS.30 @I@@@@020100RC
)@@G@@     02 JOBNOX               PICTURE X(5).                        M63003RD
)@@G@@50    @I@@@@050030     02 ITTIME USAGE COMPUTATIONAL SYNCHRONIZED RIGHT RE
)@@G@@            M6300800    @G@@@@C     THIS ALGORITH OUTPUTS ONE PIECE OF IRF
)@@G@@NFORMATION PER LINE, TRAVEF   @H@@@@C     THIS ALGORITH OUTPUTS ONE PIECRG
)@@G@@E OF INFORMATION PER LINE, TRAVERSING     @E@@@@          DO 3 , LMJ X1,RH
)@@G@@L(MEMPAR)     . MER 2,3,4 FAULTS    @^@@@@      DO 912 J=1,KP     @I@@@@RI
)@@G@@040090-    .                                                            RJ
)@@G@@M6300630    @C@@@@P=1,2,3,4,5,6,7,8,9,10,Q=1,2,3,4,5,6,7,8,9,10*  @[@@@@RK
)@@G@@END;  @]@@@@        END;@ @@@@SOURCE := ALTERNATE[SOURCE];  @]@@@@GO TO RL
)@@G@@SET;  @#@@@@  INTEGER CODE;   @I@@@@040120     02 UNAME PICTURE X(10) SYRM
)@@G@@NCHRONIZED LEFT.                    M6300660    @B@@@@      SUBROUTINE  RN
)@@G@@NWPLTR(XREF,NPLT,NUMPLT)@I@@@@050050     02 JOBNO PICTURE X(5) SYNCHRONIRO
)@@G@@ZED LEFT.                     M6300820    @D@@@@15080 DATA 55,22,2611,4,RP
)@@G@@7,3,5,2,3,2,0,1,9,2602,8,8,5,5@G@@@@15090 DATA 3, 3,2602,0,-3,-3,0,-4,-3RQ
)@@G@@,-5,-5,-6,-2607,-8,2701,2705,-6,2199@D@@@@       77  DIS                RR
)@@G@@    PICTURE $$$$$$.99.  @#@@@@      I = I+1     @]@@@@      RETURN@#@@@@RS
)@@G@@S10002050030000   @I@@@@010170     02 CODE1X              PICTURE X.    RT
)@@G@@                        M6300220    @[@@@@*.    @F@@@@*. HEADINGS ARE PRRU
)@@G@@ODUCED FOR EACH ELEMENT.  IF IT IS DESIRED THAT @G@@@@*. TEXT BE INCLUDERV
)@@G@@D FOR CERTAIN ELEMENTS, PREPARE AN ELEMENT OF THE     @]@@@@*. FORM:    RW
)@@G@@@I@@@@002210     MOVE LEAST-NO TO DIS-2.                                RX
)@@G@@      PROBLEM2    @I@@@@002220     MOVE NO-OF-NOS TO DIS-3.             RY
)@@G@@                        PROBLEM2    @I@@@@002230     MOVE SUM-OF-NOS TO RZ
)@@G@@DIS-4.                                    PROBLEM2    @I@@@@003010     MSA
)@@G@@OVE MEAN-OF-NOS TO DIS-5.                                   PROBLEM2    SB
)@@G@@@I@@@@003020     DISPLAY '                                              SC
)@@G@@     'PROBLEM2    @ @@@@           END OF PROGRAM     @D@@@@          ANSD
)@@G@@        A0,A1          .SET A0 = INDEX    @ @@@@     DDELT=   -A(3,KF)-BSE
)@@G@@(3,KF)@I@@@@040080     02 IPRONO USAGE COMPUTATIONAL SYNCHRONIZED RIGHT SF
)@@G@@PICTURE 9(8)M6300620    @ @@@@      CALL PLOTC(X1,Y1,I)     @E@@@@      SG
)@@G@@ 77  ED-UNDER                    PICTURE $ZZ,ZZZ.99.  @ @@@@      ADIV=ASH
)@@G@@NMB/FLOAT(NDIV)   @]@@@@X3 $S X3N   @]@@@@X4 $S X4N   @#@@@@      CODE(ISI
)@@G@@)=0   @#@@@@      REL=ORIGIN+I@^@@@@           D'N OUT(71)  @ @@@@C     SJ
)@@G@@TME(T)( UNITS LATER.    @]@@@@PUSHDOWN;   @ @@@@       INT = SPAN(123456SK
)@@G@@7890) @^@@@@ 8    FORMAT (1H0,(     @I@@@@010030 ENVIRONMENT DIVISION.  SL
)@@G@@                                          M6300070    @^@@@@006100     0SM
)@@G@@2  BSEC-N/  @^@@@@006060      02  RECR    @^@@@@      MDIV=ADIV+0.5     SN
)@@G@@@B@@@@           W'R .NOT. C(8) .AND. I.NE. 101 @E@@@@C  CHECK IF DESIRESO
)@@G@@D ITEM IS A CONSTANT AND THEREFORE IN THE @A@@@@T;'   ';X1;X2;X3;X4;Y1;YSP
)@@G@@2;Y3;Y4     @]@@@@T $S T+1    @ @@@@      CALL PLOTC(X4,Y4,3)     @ @@@@SQ
)@@G@@$G LOOP # $I (T $> MAXYR)     @^@@@@   384    29    12    25@^@@@@   439SR
)@@G@@    36    12    34@ @@@@           PRINT COMMENT $ $  @]@@@@  GOTO L2>  SS
)@@G@@@ @@@@           GO TO READ-A-REC.  @B@@@@BAD       LSL       EA3       ST
)@@G@@        .   @]@@@@$COMPILE MAD@]@@@@#I=I+N#     @^@@@@ 5320 LET B = B + SU
)@@G@@P8    @[@@@@C     @A@@@@           MOVE BUD-ALLOW TO BUDGET.@E@@@@      SV
)@@G@@COMMON/G3/VARTBL(MXVARS),BACKCN,OFSET,BLKTBL(MXBLKS), @D@@@@ST9        TSW
)@@G@@'H ST9, FOR XLOG=101,-1,XLOG.L.1 .OR.     @#@@@@           E'L    @ @@@@SX
)@@G@@           START = START +1   @H@@@@SGEOG202 0301040000040TUTH8-9.15    SY
)@@G@@                Q   210              03   @A@@@@      SUBROUTINE NWPLTR SZ
)@@G@@(X,NUMPLT)  @A@@@@      EM=(RML*RML-RMP*RMP)/(2.0*RML)@I@@@@040170     PTA
)@@G@@ICTURE 9(5).                                                M6300710    TB
)@@G@@@ @@@@16    TRIPLE(NEXT,1)=I+ORIGIN @#@@@@           I=I+1  @^@@@@LOOP  TC
)@@G@@     CONTINUE     @B@@@@           D'N THRUS((0...500)*(0...5))   @[@@@@TD
)@@G@@#N=I# @I@@@@040220     02 IETIME USAGE COMPUTATIONAL SYNCHRONIZED RIGHT TE
)@@G@@            M6300760    @]@@@@TOP:A $S $" @#@@@@$G OK # $I(4>$RA) @[@@@@TF
)@@G@@$I 0  @B@@@@           T'H ST4, FOR J=1,1,J.G.XLOG    @^@@@@      Y2=SIDTG
)@@G@@EL*SA+Y1    @A@@@@          DO 16 , LMJ X1,L(IGNORE)  @[@@@@$I 0  @ @@@@TH
)@@G@@LPS        X(I)=X(I)/10.P.XLOG@D@@@@          LMJ       X2,L(BAD)       TI
)@@G@@  . GO DISPLAY ADD@B@@@@           YGRID = (YLARGE-YSMALL)/101.   @^@@@@TJ
)@@G@@    A4     CONTINUE     @ @@@@      READ (6,2) X(I) I=1,N   @A@@@@*. HDGTK
)@@G@@ ELEMENTNAME TEXT TEXT TEXT...@^@@@@#I=I+(((I*N+N)/I)+N#    @[@@@@BEGIN TL
)@@G@@@#@@@@LOCAL LABEL EOF;  @^@@@@   424    21    14    32@^@@@@PROCEDURE ERTM
)@@G@@ROR(N);     @]@@@@    END;    @#@@@@  IDENTIFIER := 0;@B@@@@   FOR I := TN
)@@G@@1 STEP 1 UNTIL CODE DO BEGIN  @]@@@@      I=I+1 @E@@@@           SUBTRACTO
)@@G@@T BUD-ALLOW FROM ACT-EXP GIVING DIFF.     @C@@@@      IF(INDX.GT.NOIN.ORTP
)@@G@@.INDX.LT.1)  INDX=NOIN  @[@@@@$DATA @F@@@@  3 10  05  05  05  05  05  20TQ
)@@G@@  05  05  05  05  05  05  05  10    @#@@@@         68110    @B@@@@      TR
)@@G@@     T'H SHIFT,FORI=0,1,I.G.130     @]@@@@Y1 $X Y1N   @I@@@@040160     0TS
)@@G@@2 ICTIME USAGE COMPUTATIONAL SYNCHRONIZED RIGHT             M6300700    TT
)@@G@@@B@@@@*. HDG ELEMENTNAME1 TEXT TEXT TEXT TEXT...@[@@@@$G TOP@A@@@@OK: $GTU
)@@G@@ 0 #$I($A/'NO '=(3^A,'   ')   @I@@@@080100     IF INDEX = 0 GO TO ZZ ELSTV
)@@G@@E NEXT SENTENCE,                    M6301440    @B@@@@           XBAR = TW
)@@G@@ROUND.(XBAR, XGRID)     @A@@@@           YBAR = ROUND.(YBAR,YGRID)@I@@@@TX
)@@G@@080120 T1. MOVE 99999999 TO IPRONOO.                                    TY
)@@G@@M6301460    @A@@@@           MOVE NUMBER TO ACCT-NUM. @]@@@@$G NEXT1    TZ
)@@G@@@]@@@@        END;@D@@@@    IDENTIFIER;     COMMENT FIRST TWO ALTERNATESUA
)@@G@@;     @ @@@@INTEGER GOAL, SOURCE,CHAR,Y;  @]@@@@NEXT2: REDO @[@@@@$CBENDUB
)@@G@@@^@@@@007010          03  MS  @^@@@@006200         03  S    @E@@@@0.3300UC
)@@G@@00E+00  0.0000    3.895154E+010.621540E+003.800000E+01@A@@@@           MUD
)@@G@@OVE TOT-UNDER TO DIS.   @I@@@@003190     DISPLAY 'THE MEAN OF NUMBERS ISUE
)@@G@@      ' DIS-5 UPON SYSOU1.    PROBLEM2    @#@@@@      GO TO 50    @]@@@@UF
)@@G@@      X=6.0 @#@@@@    RETURN: END;  @]@@@@#I=N*+I#    @#@@@@ 5550 GO TO UG
)@@G@@1000  @#@@@@      GO TO 1     @D@@@@INTEGER ARRAY GYOYO(1:100),SYOYO(1:1UH
)@@G@@00),CYOYO(1:100); @ @@@@SET: GOAL := TYPECODE[SOURCE];@#@@@@         CT=UI
)@@G@@CY    @I@@@@060220     MOVE JOBNOX TO JOBNO.                            UJ
)@@G@@            M6301050    @F@@@@          IF N(THE ERROR NUMBER) IS NEGATIUK
)@@G@@VE, THE ROUTINE RETURNS,@^@@@@   457    26    14    34@B@@@@          OTUL
)@@G@@HERWISE IT GOES TO START;     @ @@@@     1  QUOTE  BREAK(QUOTE)   @]@@@@UM
)@@G@@X2 $S X2N   @^@@@@          END       BOOT@^@@@@      DATA  NUMPLT/0/   UN
)@@G@@@F@@@@-     DIMENSION XREF(ND,3),YREF(ND,3),F(ND),XTEST(100),YTEST(100) UO
)@@G@@@D@@@@#I=(((((I+N)*((I*N+N)/N)+(I+N)*N)/N)+(I/N))+I*I)#     @E@@@@LOOP  UP
)@@G@@    JK        1,L(START)        . GO CHANGE PATTERN   @G@@@@     1     LUQ
)@@G@@     N,9X,18H WAVE FUNCTION    ,16H DEFECT FUNCTION    )    @#@@@@      UR
)@@G@@   4281R    @I@@@@020080     02 IUTIMEX              PICTURE 9(5).      US
)@@G@@                  M6300330    @F@@@@      DIMENSION XREF(NC,3),YREF(NC,3UT
)@@G@@),F(NC),XTEST(100),YTEST(100) @E@@@@       77  DIS-A                    UU
)@@G@@   PICTURE $ZZ,ZZ9.99.  @#@@@@H94553402033580   @I@@@@002170 PAR-4.  COMUV
)@@G@@PUTE SUM-OF-NOS = SUM-OF-NOS + NO-1.                  PROBLEM2    @I@@@@UW
)@@G@@002180     GO TO PAR-3.                                                 UX
)@@G@@PROBLEM2    @]@@@@(3F6.0)     @G@@@@           COMPUTE PCT-OVER ROUNDED UY
)@@G@@= ((ACT-EXP - BUD-ALLOW) / BUD-ALLOW@B@@@@PSR PSRFRM   0300,0,0,037,040 UZ
)@@G@@        .   @#@@@@      G= -2.0     @I@@@@040190     PICTURE 9(5).      VA
)@@G@@                                          M6300730    @^@@@@006060      VB
)@@G@@02 RECORD   @F@@@@           ) * 100, ON SIZE ERROR DISPLAY 'OVERFLOW' UVC
)@@G@@PON SYSOU1. @G@@@@      DIMENSION  BS(5,5,5), AM(10,10), BM(10,10), KS(5VD
)@@G@@,5,5),X(10,1)     @I@@@@080070     COMPUTE TEST = SWITCH1 / 10.         VE
)@@G@@                        M6301410    @B@@@@      DEFINE XFIELD=FLD(14,4,CVF
)@@G@@ODE(I))     @B@@@@      DEFINE HFIELD=FLD(18,1,CODE(I))     @I@@@@080080VG
)@@G@@     COMPUTE TEST1 = TEST *  10.                                  M63014VH
)@@G@@20    @B@@@@          LMJ       A1,L($+1)         .   @F@@@@C  TO THE DRVI
)@@G@@IVER ROUTINE SO AS TO BEGIN NEXT COMPLIATION IF ANY   @A@@@@      CALL GVJ
)@@G@@EN(LX,0,WREG,REL,0)     @^@@@@CGEOG4   SEM GEOG AFRICA@^@@@@ 5000 REM RUVK
)@@G@@NNING PLAY  @C@@@@OPN      OPN = X / NULL              :(RETURN)  @[@@@@VL
)@@G@@*.    @B@@@@           T'H SQUEEZ, FOR I=11,1,I.G.71  @#@@@@           EVM
)@@G@@'L    @F@@@@           WHENEVER YLARGE.NE.0., YLARLG=.434*ELOG. (.ABS.YLVN
)@@G@@ARGE) @[@@@@*.    @[@@@@*.    @[@@@@*.    @#@@@@            FETCH;@^@@@@VO
)@@G@@  WRITE(ACCEPT,CARD);   @G@@@@       77  BUD-TOT                     PICVP
)@@G@@TURE 99999V99 VALUE ZERO.     @C@@@@           WHENEVER XNLOG.G.XLOG, XLVQ
)@@G@@OG=XNLOG    @ @@@@    51     0     0     0     0@ @@@@    59     0     0VR
)@@G@@     0     0@^@@@@$G END # $I (INPUT)     @#@@@@F88112500020000   @C@@@@VS
)@@G@@          R AND NOW FOLKS WE INCLUDE BADPLT.    @H@@@@010060 SOURCE-COMPVT
)@@G@@UTER. UNIVAC-1108.                                    UNIVAC@ @@@@      VU
)@@G@@     FUNCTION RETURN N  @E@@@@*. THIS SAYS TO START LOOKING AT THE ELEMEVV
)@@G@@NT WITH SEQUENCE  @I@@@@080170     GO TO B2.                            VW
)@@G@@                        M6301510    @C@@@@           THROUGH S4, FOR I=SVX
)@@G@@TART,1,I.G. NDATA @C@@@@  1.79120+00  1.01927-01  1.12776+01  9.48640+00VY
)@@G@@@[@@@@/     @I@@@@001070 OBJECT-COMPUTER. IBM-7094.                     VZ
)@@G@@                  PROBLEM2    @ @@@@           CHANGE=CHANGE-5    @#@@@@WA
)@@G@@/[[#1],I,3,1]&    @G@@@@*. PROCESS GENERATES PROCESSOR CALL CARDS FOR EAWB
)@@G@@CH TYPE (DOC, ASM...)   @C@@@@NEXT       T'H MATCH, FOR I=0,1,I.G.5.OR.FWC
)@@G@@LAG1  @F@@@@           W'R WORD(0).E.$ENDOFC$.OR.(WORD(0).A.MASK).E.$E'LWD
)@@G@@@@@$  @#@@@@       READ-A-REC.@A@@@@*. CALL IS *PROCESS PROCESS TYPE    WE
)@@G@@@]@@@@'Y4:  ';Y4DO@I@@@@001140     02  FILLER    PICTURE  X(9).         WF
)@@G@@                        PROBLEM2    @#@@@@  77  FORMAT(F8.5)@[@@@@*.    WG
)@@G@@@B@@@@  10   IF((ABS Y-I) .LE. .1E-8) GO TO 200 @D@@@@           'PCT OVWH
)@@G@@ER   ', 'PCT UNDER'UPON SYSOU1.     @H@@@@  91   FORMAT (3X,F4.1,4X,F10.WI
)@@G@@6/3X,F491,4X,F10.6/3X,F4.1,4X,F10.6/3X,F4.1,    @^@@@@      WRITE(F1,M,AWJ
)@@G@@NS)$  @[@@@@*.    @[@@@@*END  @D@@@@           02  ACT-EXP            PIWK
)@@G@@CTURE 999V99.     @I@@@@001160     02  FILLER    PICTURE  X(66).        WL
)@@G@@                        PROBLEM2    @#@@@@X95231261515020   @ @@@@    75WM
)@@G@@     0     0     0     0@E@@@@      CALL BAMWRD (JND,IBUFR(2),MXENT,LENTWN
)@@G@@,NFLE,,NFSCTD,IND)@ @@@@    39     0     0     0     0@I@@@@002020 77  GWO
)@@G@@RTST-NO      PICTURE  S999V99, VALUE ZERO.                  PROBLEM2    WP
)@@G@@@#@@@@    ERROR(3);     @A@@@@        IF NUMBER THEN ERROR(5);    @D@@@@WQ
)@@G@@           T'H FILLIN, FOR I=MARGIN+TEMP,1,I.G.71     @A@@@@           WWR
)@@G@@'R I.G.J,CARD(I)=$ $    @]@@@@    END;    @F@@@@           W'R WORD(0).EWS
)@@G@@.$WHENEV$.OR.(WORD(0).A.MASK).E.$W'R@@@$  @^@@@@           FLAG1=0B     WT
)@@G@@@]@@@@GO TO TAST; @F@@@@*. @SSG   SKEL,,,,,,SGS/1,Q*F.E   (THE HEADING SWU
)@@G@@PECIFICATIONS     @ @@@@    82     0     0     0     0@^@@@@FUNNYBOX: GOWV
)@@G@@ TO ANYWAY; @#@@@@C  REGISTER STACK @]@@@@ANS $S 1    @#@@@@TOP: INP $S WW
)@@G@@$"    @A@@@@$G 0 # $I($A/'NO '=(3^INP,'   '))   @^@@@@           TEMP=TEWX
)@@G@@MP-5  @^@@@@*PROCESS HDG [#1] [*I]  @#@@@@FORMAT DIG(A,S10);@[@@@@*END  WY
)@@G@@@#@@@@           J=J+1  @I@@@@010150 01  INREC.                         WZ
)@@G@@                              M6300200    @I@@@@C      MAIN PROGRAM TO 'XA
)@@G@@TALK' WITH COBOL BLK-IO ROUTINE.                M6301550    @ @@@@      XB
)@@G@@     W'R CARD(I).NE.$ $ @ @@@@           WORD(1)=CARD(I)    @ @@@@      XC
)@@G@@     FILL.(WORD(0))     @ @@@@           OUT(I)=CARD(J)     @#@@@@      XD
)@@G@@     J=J+1  @H@@@@010130     LABEL RECORDS ARE LAB-1                    XE
)@@G@@                  UNIVAC@F@@@@RUNID MIKE   FILE PU@000MIKE   PART NO 000XF
)@@G@@ DATE 111870 UNIT CP1   @D@@@@           COMPUTE TOT-OVER ROUNDED = TOT-XG
)@@G@@OVER + DIFF.@^@@@@*. IN ANY COMBINATION.  @^@@@@           CHANGE=0     XH
)@@G@@@]@@@@     V;     @[@@@@*.    @B@@@@COMMENT -- QUICK AND DIRTY INITIALIZXI
)@@G@@ATION;@#@@@@#I=I+(I*N-N)+I*I# @C@@@@        IF C EQL BRACKET THEN GO TO XJ
)@@G@@ACCEPT;     @]@@@@'Y2:  ';Y2DO@^@@@@$EXECUTE       IBJOB    @I@@@@050020XK
)@@G@@     PICTURE 9(5).                                                M63007XL
)@@G@@90    @C@@@@       PART1 = ( $LETTER * '10000' ) / TOTAL    @D@@@@      XM
)@@G@@ $LETTER = '0'                    /(DELETE)     @C@@@@BEGIN  TEXT = SYSPXN
)@@G@@IT                    /F(END) @G@@@@*. SGS                              XO
)@@G@@   SPEC7 AND 8 ARE ALWAYS OPTIONAL) @#@@@@         00554    @^@@@@      XP
)@@G@@ TEXT = FILLER    @C@@@@       FLAG = '0'                       /(IN1)  XQ
)@@G@@@^@@@@NEXT   ALPHABET = SAVE  @#@@@@       TOTAL = '0'@#@@@@           EXR
)@@G@@'L    @#@@@@IN     FLAG = '1' @]@@@@#I=I+I*N#   @#@@@@    ACCEPT: END;  XS
)@@G@@@#@@@@LOCAL LABEL DONE; @]@@@@GO TO TEST; @ @@@@*INCREMENT I FROM 1 TO [XT
)@@G@@[#1]] @E@@@@       J     OK          . YES, GO SET NEW ENTRY POINTER    XU
)@@G@@@^@@@@FORMAT INPUT(A,S80);    @D@@@@FORMAT AOK(S80,A1,' IS AN ACCEPTABLEXV
)@@G@@ STRING.',A1.2);  @[@@@@C     @A@@@@*. THE PROCESSOR CALL CARD, I.E.    XW
)@@G@@@B@@@@           PRINT FORMAT SCALE, H...H(10)  @D@@@@EC0120 NOP     . *XX
)@@G@@***** TEMP ****** TO TEST ALGORITHM @I@@@@      STOP                    XY
)@@G@@                                          M6301630    @[@@@@*.    @C@@@@XZ
)@@G@@*. COPY EVERYTHING YOU WANT LISTED INTO TPF$    @B@@@@ 5300 GOSUB 11000 YA
)@@G@@   @ ANALYZE PENALTY    @#@@@@          END     @I@@@@060210     MOVE ITYB
)@@G@@TIMEX TO ITTIME.                                      M6301040    @I@@@@YC
)@@G@@       SUB     HOLD                                                     YD
)@@G@@.719.GWB    @ @@@@IN     STRING = TRIM(INPUT)   @I@@@@       TZE     *+2YE
)@@G@@                                                      .719.GWB    @B@@@@YF
)@@G@@          E$MSG     CAT               .   @C@@@@        E;       COMMENTYG
)@@G@@ PRECEEDED BY AN 'E';   @#@@@@      JFIELD=J1   @B@@@@           WHENEVEYH
)@@G@@R  X(I).L.XLO,X(I)=XLO  @^@@@@*IF [[#1],[#2],3]>0     @C@@@@            YI
)@@G@@       THROUGH S3, FOR I=0,1,I.G.100@B@@@@           THROUGH ST1, FOR I=YJ
)@@G@@10,10,I.G.99@^@@@@   641    29    09    22@A@@@@       IDENTIFICATION DIYK
)@@G@@VISION.     @ @@@@ 5250 IF Y2 = 26 THEN 5075    @ @@@@$*  RELEASE TAPE AYL
)@@G@@FTER PLOT   @^@@@@$G BAD $I # (3 $> $R A) @E@@@@          HJ        L($+YM
)@@G@@1)            . GET MAX ADDRESS     @^@@@@   449    31    12    28@F@@@@YN
)@@G@@*. IF IT IS NOT DESIRED TO START AT THE BEGINNING OF TPF$. THE    @ @@@@YO
)@@G@@Y4DO $S '35 $L (X1 $L X4)'    @B@@@@*. STARTING ELEMENT CAN BE SPEICFIEDYP
)@@G@@.     @I@@@@002090 77  DIS-3         PICTURE  99.                       YQ
)@@G@@            PROBLEM2    @[@@@@C     @ @@@@      DIMENSION  XREF(NPLT,3) YR
)@@G@@@^@@@@           W'R C(13)    @#@@@@         3472Q    @#@@@@         792YS
)@@G@@0Q    @#@@@@'WHICH ONE$Q'     @E@@@@'INPUT ''THING TO BE CHANGE IMMEDIATYT
)@@G@@ELY FOLLOWED BY AN I''' @G@@@@1                                         YU
)@@G@@                        6   10@I@@@@060030     ENTRY POINT IS 'READR'   YV
)@@G@@                                    M6300860    @]@@@@#I=I*N)#    @]@@@@YW
)@@G@@#I+N*I#     @#@@@@            FETCH;@]@@@@C1    THIS  @#@@@@BAD:'TRY AGAYX
)@@G@@IN'   @#@@@@#I=(I+I)(I/N)#    @D@@@@           DISPLAY 'TOTAL UNDER IS 'YY
)@@G@@ DIS UPON SYSOU1. @]@@@@#I=(I+N)I#  @[@@@@#I=I  @E@@@@      SUBROUTINE YYZ
)@@G@@AXIS(YSCALE,YREF,XREF,NPLT,NAX,NSIDE)     @ @@@@            GO TO RETURNZA
)@@G@@;     @#@@@@            END;  @#@@@@#I=I+(I*N-N)+I*I# @#@@@@           PZB
)@@G@@LACE=0@#@@@@      CODE(I)=0   @E@@@@           WRITE ACCT-ANALYSIS FROM ZC
)@@G@@ACCT-ANALYSIS-WORK.     @A@@@@       NBEX = OPN('.NOT.')  B BEQ   @I@@@@ZD
)@@G@@001050 CONFIGURATION SECTION.                                           ZE
)@@G@@PROBLEM2    @I@@@@020110     02 IRESTX               PICTURE X(8).      ZF
)@@G@@                  M6300360    @I@@@@      WRITE (6,80)   IN,IX,ITEM     ZG
)@@G@@                                    ********    @G@@@@1                 ZH
)@@G@@                                                5   10@C@@@@  1 25      ZI
)@@G@@            50                  25  @#@@@@  2 20  20  60    @I@@@@003220ZJ
)@@G@@     CLOSE DATA-FILE-1.  STOP RUN.                                PROBLEZK
)@@G@@M2    @[@@@@$CBEND@#@@@@      XFIELD=XX1  @^@@@@         WRITE(N,TOT)>  ZL
)@@G@@@F@@@@       77  TOT-UNDER              PICTURE 99999V99 VALUE ZERO.    ZM
)@@G@@@#@@@@    ERROR(5);     @[@@@@$DATA @B@@@@      DIMENSION REF(NPLT,3),SCZN
)@@G@@ALE(NPLT,2) @B@@@@XDO[4;] $S 'X[4;T-1] + DT#(Y[3;T]-Y[4;T])'@C@@@@YDO[1;ZO
)@@G@@] $S '((T=15)#30) + (T $= 15) # T+ 19'    @C@@@@           W'R C(11).ANDZP
)@@G@@.C(7), TRANSFER TO A5   @^@@@@           YSMALL=Y(0)  @E@@@@  0.33000+00ZQ
)@@G@@  0.0000      3.89535+01  0.62350+00  3.80000+01@B@@@@      DIMENSION REZR
)@@G@@F(NPLT,3),SCALE(NPLT,2) @D@@@@       NUM = OSG OPN( 'E' INT )  OPN( 'E' ZS
)@@G@@OSG INT )   @I@@@@080160     CLOSE OUTFILE.                             ZT
)@@G@@                  M6301500    @#@@@@      P=P+11.25   @B@@@@          HJZU
)@@G@@        L(START)          .   @^@@@@WEF       'BOOTAPE'     @#@@@@      ZV
)@@G@@GO TO 5     @[@@@@15    @I@@@@060140     MOVE IDATEX TO IDATE.          ZW
)@@G@@                              M6300970    @C@@@@           THROUGH LPS, ZX
)@@G@@FOR I=0,1,I.G.NDATA     @^@@@@   529    38    11    23@^@@@@   496    20ZY
)@@G@@    12    25@[@@@@B $S 0@D@@@@'AND FOLLOW THAT WITH $S AND THE NEW INITIZZ
)@@G@@AL VALUE'   @[@@@@$E $" @^@@@@           ROW(J)=CHAR  @#@@@@ 5500 GO TO AA
)@@G@@5170  @ @@@@           000142200016000    @#@@@@#I=I+(I*N-N)+(I*I#@[@@@@AB
)@@G@@#I=N# @]@@@@    VALUE N;@B@@@@S3                ROW(I)=600000000000K    AC
)@@G@@@[@@@@-45,48@A@@@@           ADD BUD-ALLOW TO BUD-TOT.@D@@@@       77  DAD
)@@G@@IFF                   PICTURE 999V9999.   @#@@@@    INTEGER N;    @]@@@@AE
)@@G@@Y2 $X Y2N   @]@@@@Y3 $S Y3N   @A@@@@     THEN IDENTIFIER := LOOKFOR[I]; AF
)@@G@@@D@@@@           02  FILLER                  PICTURE X(5).  @^@@@@      AG
)@@G@@     XGR2=XGRID/2.@#@@@@         0751K    @G@@@@15180 DATA 2,2,-1,-2,-6,AH
)@@G@@0,-7,-2604,-8,-6,-9,-8,-11,7701,-4,-2103,-2203  @#@@@@      X3=X3+R     AI
)@@G@@@#@@@@      Y3=Y3+S     @F@@@@  3 10  05  05  05  05  05  20  05  05  05AJ
)@@G@@  05  05  05  05  10    @#@@@@      X4=R+X1     @]@@@@Y4I $S 20   @]@@@@AK
)@@G@@X1I $S 20   @F@@@@           VECTOR VALUES MKLINE=$1H9,S12,F8.3,3H --,10AL
)@@G@@1C1,3H--  *$@]@@@@   END;     @G@@@@1                                   AM
)@@G@@                              6   10@E@@@@           VECTOR VALUES LINE=AN
)@@G@@$1H9,S22,1H+,101C1,1H+, *$    @ @@@@           END OF CONDITIONAL @^@@@@AO
)@@G@@ORDER      CONTINUE     @]@@@@Y4 $S Y4N   @G@@@@    IF TERMINAL[I] AND AAP
)@@G@@LPHABETIC(TYPE[I]) AND TYPE[I] EQL CARD[CHAR]   @^@@@@        GO TO ACCEAQ
)@@G@@PT;   @]@@@@    END;    @A@@@@    IF N GTR 0 THEN GO TO START;    @ @@@@AR
)@@G@@           D'N SQUASH(12)     @^@@@@       EX4 = EVAL( EX)  @]@@@@X2I $SAS
)@@G@@ 100  @#@@@@'INPUT YES OR NO' @#@@@@$G NEXT# $I(INPUT)@]@@@@'X1:  ';X1DOAT
)@@G@@@I@@@@070040     RECEIVE IPRONO, CODE1, UNAME, IDME, IDATE, ITIME, ICTIMAU
)@@G@@E,    M6301130    @#@@@@       BLOCK-6.   @A@@@@           ADD ACT-EXP TAV
)@@G@@O ACT TOT.  @#@@@@      INTEGER N$  @I@@@@020170     02 CODE1O          AW
)@@G@@     PICTURE X.                           M6300420    @ @@@@    IF C EQLAX
)@@G@@ 'N' THEN BEGIN   @^@@@@        NUMBER := TRUE; @^@@@@           STOP RUAY
)@@G@@N.    @#@@@@B28882005021015   @I@@@@030010     02 IUTIMEO              PAZ
)@@G@@ICTURE 9(5).                        M6300510    @^@@@@15250 REM 9 MAN,0-BA
)@@G@@9     @I@@@@020120 FD  OUTFILE BLOCK CONTAINS 10 RECORDS,               BB
)@@G@@            M6300370    @C@@@@  1                         10  10  50  20BC
)@@G@@  10  @ @@@@      WRITE (F1,N,FACTORIAL)  @[@@@@C     @[@@@@-52   @#@@@@BD
)@@G@@      N1 = J/5+1  @ @@@@   122     0     0     0-   32@^@@@@15190 REM 7 BE
)@@G@@MAN,0-9     @ @@@@       R = SIZE(PART1) - '2'  @A@@@@       PART1 *WHOLBF
)@@G@@E/R* *PART/'2'*   @F@@@@C-- USED DURING THE REMAINDER OF THE PROCESS.  CBG
)@@G@@ODE INDICATES     @#@@@@           J=3    @]@@@@'Y3:  ';Y3DO@B@@@@      BH
)@@G@@     W'R I.E.72,CHANGE=CHANGE+5     @ @@@@    42     0     0     0     0BI
)@@G@@@B@@@@$ID    ELLIS,REID  *403/15/102*10S*NODECK$@#@@@@POP2: POPUP(2);   BJ
)@@G@@@A@@@@IF SOURCE EQL 0 THEN GO TO EXIT;    @ @@@@D1234 FORMAT(5X,9(O12,1XBK
)@@G@@))    @I@@@@040210     PICTURE 9(5).                                    BL
)@@G@@            M6300750    @B@@@@ 11   FORMAT (1H0,'ITERATION     ',I2,/)  BM
)@@G@@@E@@@@      COMMON/G1/CLASS,SYMBOL,POINT,ZEND,CARD(80),SRCLIN     @A@@@@BN
)@@G@@      Y=YREF(I,J)+DEL*FLOAT(I-1)    @ @@@@           END OF FUNCTION    BO
)@@G@@@#@@@@           J=J-1  @#@@@@           J=0    @]@@@@A1 $S 10    @A@@@@BP
)@@G@@*. @SSG  SKEL,/Q,,,,,SGS/1,FILE.EL  @ @@@@           W'R J.LE.0,T'O QUITBQ
)@@G@@@#@@@@           TEMP=0 @ @@@@   102     0     0     0     0@ @@@@      BR
)@@G@@IMPLICIT INTEGER (A-Z)  @#@@@@      UFIELD=U1   @[@@@@  2   @#@@@@      BS
)@@G@@     FLAG=0B@#@@@@        FETCH;    @^@@@@  WRITE(REJECT,CARD);   @#@@@@BT
)@@G@@  GO TO START;    @ @@@@      CODE(I)=BCKCNT(TRIP)    @]@@@@      I=I+1 BU
)@@G@@@ @@@@      CODE(I)=OFFSET(TRIP)    @A@@@@ELAPD     'ELAPSED TIME IS NOWBV
)@@G@@ : &' @#@@@@        ERROR(2); @]@@@@        END;@F@@@@       SYSPOT = '0BW
)@@G@@ THE CHARACTER ' LETTER ' APPEARED  ' $LETTER   @D@@@@           READ TRBX
)@@G@@ANS-FILE AT END GO TO WRITE-TOTALS. @[@@@@BEGIN @A@@@@    IF C NEQ BRACKBY
)@@G@@ET THEN ERROR(1)  @]@@@@       N = 4@^@@@@$G NEXT # $I (INPUT)    @A@@@@BZ
)@@G@@ 5040 GOSUB 12000   @ANALYZE PLAY   @ @@@@          JGD       R4,FILE   CA
)@@G@@@[@@@@*.    @B@@@@          +         N                  .  @#@@@@R91118CB
)@@G@@507590000   @E@@@@.      ' TIMES, OR ' WHOLE '.' PART ' PERCENT.'  /(NEWCC
)@@G@@)     @ @@@@    84     0     0     0     0@A@@@@           MOVE NUMBER TCD
)@@G@@O ACCT-NUM. @]@@@@END    START@#@@@@MATCH      C'E    @A@@@@*. GENERATE CE
)@@G@@CONTROL CARDS BY TYPE   @[@@@@*.    @[@@@@*.    @ @@@@          END     CF
)@@G@@  START     @ @@@@          E$MSGR    TRAILR    @B@@@@#[[#1],I,1,1],[[#1CG
)@@G@@],I,1,2] [[#1],I,2,1]&  @B@@@@          TE,U      A3,L(END)         .   CH
)@@G@@@#@@@@POP3: POPUP(3);   @B@@@@           T'H PRINT ,FOR J=0,1,I.G.130000CI
)@@G@@@#@@@@           E'L    @ @@@@   114     0     0     0     0@D@@@@      CJ
)@@G@@     02  BUD-ALLOW          PICTURE 999V99.     @^@@@@       01  TRANS-RCK
)@@G@@CD.   @I@@@@070150     MOVE IATIME TO IATIMEO.                          CL
)@@G@@            M6301240    @I@@@@003130     DISPLAY 'THE LEAST NUMBER IS   CM
)@@G@@  ' DIS-2 UPON SYSOU1.        PROBLEM2    @^@@@@*PROCESS PROCESS MAP    CN
)@@G@@@#@@@@      READ(5,30) P@H@@@@SGEOG476 0101018000018MWF1                CO
)@@G@@          Q   232              03   @ @@@@      PARAMETER MXCONS = 100  CP
)@@G@@@]@@@@*. NUMBER 7.@]@@@@PROCEDURE S;@[@@@@C     @ @@@@      IF(NAX.LT.2)CQ
)@@G@@  GO TO 200 @#@@@@D44221000010000   @^@@@@IN1    ALPHABET = SAVE  @#@@@@CR
)@@G@@      GO TO 1     @F@@@@  3 10  05  05  05  05  05  20  05  05  05  05  CS
)@@G@@05  05  05  10    @C@@@@SCAN   ALPHABET *LETTER/'1'* =          /S(BACK)CT
)@@G@@@I@@@@$ ASSEMBLE                                                      EECU
)@@G@@SOR001.719.GWB    @E@@@@       FLAG    '0'                      /S(PRINTCV
)@@G@@)F(BEGIN)   @^@@@@           HOLD=Y(I)    @I@@@@9999        9999        CW
)@@G@@            9999                    9999            9999    @@@@@@@^@@@@CX
)@@G@@   630    27    12    25@^@@@@FORMAT BET(A,S26,S1);   @F@@@@          HJCY
)@@G@@        L($+1)            . GET RIGHT HALF OF PATTERN @ @@@@       SYSPOCZ
)@@G@@T  = '0' TEXT     @C@@@@       TEXT    *FILLER* '_'             /F(IN)  DA
)@@G@@@E@@@@COMMA      T'H COMMA, FOR I=15,1,I.G.71.OR.CARD(I).E.$,$    @C@@@@DB
)@@G@@BACK   TEXT  LETTER =                   /F(SCAN)@^@@@@       SYSPOT = '1DC
)@@G@@'     @^@@@@           INTEGER I,A  @^@@@@       EX = AEX / NBEX  @ @@@@DD
)@@G@@$G R8 # $I(INITYR $<MAXYR)    @^@@@@'TRY YEARS INPUT AGAIN' @[@@@@$G R6 DE
)@@G@@@[@@@@C     @[@@@@C     @ @@@@            END OF CONDITIONAL@^@@@@   351DF
)@@G@@    22    12    31@B@@@@COMMENT    PROCEDURE FOR S ::= #V=E#;     @I@@@@DG
)@@G@@060150     MOVE ITIMEX TO ITIME.                                        DH
)@@G@@M6300980    @#@@@@      GO TO 10    @[@@@@*.    @[@@@@00718 @]@@@@C THE DI
)@@G@@FOO   @A@@@@       X$DUMP ECSAV6,7,'O','XAR'    @A@@@@           T'H SAVDJ
)@@G@@E, FOR I=0,1,I.G.5@#@@@@GETCHR*   PROC    @#@@@@*IF [START]>0     @^@@@@DK
)@@G@@*SET S TO [START,1,1,1] @F@@@@           P'T $(1H ,72A1)*$,CARD(0)...CARDL
)@@G@@D(10),OUT(11)...OUT(71) @[@@@@*.    @ @@@@    91     0     0     0     0DM
)@@G@@@E@@@@          1WORD(0).E.$OTHERW$.OR.(WORD(0).A.MASK).E.$O'E@@@$@^@@@@DN
)@@G@@          +         0   @#@@@@           E'L    @I@@@@060050     ICTIME,DO
)@@G@@ IATIME, ILTIME, IETIME, IUTIME, ITTIME, JOBNO, IREST.M6300880    @#@@@@DP
)@@G@@*. WILL GENERATE: @C@@@@      ENTRY PAR(X1,Y1,SIDEL,SIDEW,ANGLE,NO)     DQ
)@@G@@@C@@@@*. @HDG ** DOC/VERSION **  < TEXT IF SUPPLIED > @^@@@@           TDR
)@@G@@EMP=TEMP-5  @B@@@@          E$DIT     EPKT               .  @#@@@@SQUISHDS
)@@G@@     C'E    @^@@@@  151 FORMAT(2F20.10)   @#@@@@FILLIN     C'E    @]@@@@DT
)@@G@@    5 I=3   @]@@@@      END   @B@@@@    COMMENT THEN '=', PRECEEDED BY 'DU
)@@G@@V';   @ @@@@    IF C EQL EQUAL THEN BEGIN @F@@@@       SOR = INT / NUM /DV
)@@G@@ NAME '(' ******$('EXP' N) ')' / NAME /   @ @@@@            PTR=TOT=FACTDW
)@@G@@[0:=1>@]@@@@R8: REDO    @]@@@@  GO L2;    @B@@@@      DEFINE IFIELD=FLD(DX
)@@G@@19,1,CODE(I))     @]@@@@DO[] $S A   @B@@@@      DEFINE UFIELD=FLD(20,16,DY
)@@G@@CODE(I))    @]@@@@'ANYMORE$Q' @#@@@@$G R2#$I(INPUT)   @ @@@@FOR I := 1 SDZ
)@@G@@TEP 1 UNTIL 9 DO  @ @@@@           WORD(0)=$      $   @F@@@@ILLEGAL CHAREA
)@@G@@ACTER TO LEFT OF POSSIBLE SUB-EXPRESSION(ERROR 9)     @^@@@@$F ANS $S INEB
)@@G@@PUT;INP     @#@@@@           O'E    @A@@@@           ROW(J)=600000000000EC
)@@G@@K     @E@@@@      SUBROUTINE GVRATE(SCALE,REF,NPLT,NSECT,XMIN,XRATE)    ED
)@@G@@@]@@@@-+/*)#(=    @[@@@@*END  @^@@@@    OPERATOR := FALSE;  @ @@@@*. GENEE
)@@G@@ERATE HEADING CARDS     @^@@@@           INTEGER X,Y,Z@ @@@@          ANEF
)@@G@@D,U     A0,077    @^@@@@      DO 150  I=1,NPLT  @E@@@@0.005690E+00  0.00EG
)@@G@@00    3.380728E+003.375038E+00  0.0000    @ @@@@  IF N GTR 0 THEN GO TO EH
)@@G@@EOF;  @E@@@@0.004440E+00  0.0000    1.064234E+011.063790E+01   0.0000   EI
)@@G@@@^@@@@        C EQL DIVIDE OR @^@@@@READ(BET,ALPHA,BLANK);  @^@@@@      EJ
)@@G@@DO 100  I=2,NAX   @[@@@@*.    @]@@@@$G AGAIN    @^@@@@PROCEDURE PUSHDOWNEK
)@@G@@;     @]@@@@        END;@]@@@@      NO=2  @E@@@@      IF(BLKREF(OFFSET(TEL
)@@G@@RIPLE(NEXT,2))).LE.1) GO TO 160     @B@@@@       DN = NAME '(' *** $( 'EEM
)@@G@@XP' N) ')'  @A@@@@DOES COMPUTER WORK DRIVE YOU CRAZY? @[@@@@*.    @#@@@@EN
)@@G@@*. @SSG SKEL,/Q   @^@@@@  TYPECODE[J] := I; END;@ @@@@           SQUASH(EO
)@@G@@J)=CARD(I)  @C@@@@           02  FILLER             PICTURE X(5). @]@@@@EP
)@@G@@          R @#@@@@      DBDS=-0.76  @ @@@@ 5130 IF Y2 = 26 THEN 5075    EQ
)@@G@@@#@@@@READ(DIG,NUM);    @^@@@@15220 REM  8 MAN,0-9    @F@@@@*. SCAN TPF$ER
)@@G@@ AND GENERATE SGS'S FOR ELEMENTS IF SPEC 2 PRESENT    @[@@@@*.    @ @@@@ES
)@@G@@          TW        A9,A1     @F@@@@           V'S YB=$1H ,S50,H+ EMPLOTET
)@@G@@ HAS CALCULATED YBAR  +*$     @ @@@@C--- REPAIR "ELSE" BRANCH     @#@@@@EU
)@@G@@         57244    @#@@@@         60849    @C@@@@  1 05  10  10  10  10  EV
)@@G@@10  10  10  10  10  05  @#@@@@  2 50  25  25    @]@@@@     BEGIN  @B@@@@EW
)@@G@@    IF IDENTIFIER EQL N THEN GO TO AOK;   @]@@@@*IF [HDG]>0 @[@@@@*END  EX
)@@G@@@^@@@@           INTEGER H    @ @@@@C  DO FINAL LABEL TABLE REPAIR@ @@@@EY
)@@G@@           ENTRY TO ROUND.    @#@@@@      P=P+1.0     @#@@@@      Q=Q+45EZ
)@@G@@.0    @^@@@@      IF(NOP.GE.4) NN=1 @#@@@@$IBJOB         GO @ @@@@$IBFTCFA
)@@G@@ CALLPL  NODECK,M94,XR7 @ @@@@      PARAMETER MXLABS = 100  @I@@@@010010FB
)@@G@@ IDENTIFICATION DIVISION.                                         M63000FC
)@@G@@50    @[@@@@BEGIN @H@@@@THE FIRST NON-BLANK CHARACTER ON THE RIGHT HAND FD
)@@G@@END OF THE STRING IS NOT #    @D@@@@ABNORMAL LEFT END TERMINATION OF STRFE
)@@G@@ING (ERROR 2)     @A@@@@           W'R .NOT. C( 3), P'T XB  @D@@@@*IF COFF
)@@G@@LUMN SEARCH FROM HDG,1,1,1 FOR [[#1],[#2],2,1]  @#@@@@          E$CHAR  FG
)@@G@@@I@@@@10    CALL READR(I1, I2, I3, NAME, I4, IDATE, ITIME, I5, I6, I7, IFH
)@@G@@8,    M6301570    @G@@@@1                                               FI
)@@G@@                  4   30@I@@@@060240 P3. ENTER LINKAGE-MODE.            FJ
)@@G@@                              M6301080    @#@@@@#I=I+(I*N-N)+(I*I#@ @@@@FK
)@@G@@    READ(INPUT,MSG[1,80:I]);  @#@@@@READ(INPUT,OPERS);@[@@@@*.    @[@@@@FL
)@@G@@*.    @[@@@@ END; @B@@@@ 6030 LET A1 = P0(I1,A1)     @ FROM TABLE @F@@@@FM
)@@G@@15210 DATA 5,4,3,0,0,0,0,-1,-2603,-5,-4,-6,-5,-7,-7704,4,2107,-4  @B@@@@FN
)@@G@@  150 FORMAT(//,10X,4HBETA,20X,4HDBDS,//) @]@@@@X2 $S X2I   @I@@@@      FO
)@@G@@ ADD     =1                                                       .719.GFP
)@@G@@WB    @I@@@@       STO     J                                            FQ
)@@G@@            .719.GWB    @I@@@@       PAX     ,2                         FR
)@@G@@                              .719.GWB    @I@@@@       CLA     HOLD,2   FS
)@@G@@                                                .719.GWB    @I@@@@      FT
)@@G@@ TMI     BACK3                                                    .719.GFU
)@@G@@WB    @C@@@@           P'T $(1H ,132A1)*$,A(0)...A(131)     @I@@@@020010FV
)@@G@@     02 IDMEX                PICTURE X(6).                        M63002FW
)@@G@@60    @E@@@@1.606782E+012.614842E+012.387630E+017.808480E+00  0.0000    FX
)@@G@@@@@@@@@F@@@@          AN,U      A0,2              . DONT WIPE LAST ADDR-FY
)@@G@@1     @ @@@@*. LISTINGS INVOKED BY SPEC 2 @B@@@@          E$MSG     ELAPFZ
)@@G@@D             .   @E@@@@15230 DATA 99,99,2605,3,3,2,3,1,2,0,-1,0,7704,1,GA
)@@G@@6,2606,5,5  @^@@@@   511    40    16    37@ @@@@#I=I+(I*I-I*N/I+((I+N)-IGB
)@@G@@))#   @E@@@@       77  DIS-B                       PICTURE $ZZ,ZZ9.99.  GC
)@@G@@@]@@@@X1 $S X1N   @^@@@@           Y(I+1)=HOLD  @[@@@@C     @ @@@@      GD
)@@G@@CALL IOLINK(7,CODE(3))  @ @@@@           000031200607000    @ @@@@      GE
)@@G@@     000041300020000    @A@@@@ 5280 PRINT 'ANOTHER FUMBLE!!!'     @A@@@@GF
)@@G@@TRAILR    '(+1).,F/2/POS/2 . &'     @]@@@@        E;  @B@@@@            GG
)@@G@@IF N EQL 0 THEN FAC=1 ELSE    @ @@@@           000051400021000    @E@@@@GH
)@@G@@0.000200E+00  0.0000    4.212489E+000.012289E+004.200000E+00@D@@@@      GI
)@@G@@     SELECT BUDGET-ANALYSIS ASSIGN TO SYSOU1.   @F@@@@  3 10  10  10  20GJ
)@@G@@  20  20                                  10    @ @@@@L1         XBAR=XBGK
)@@G@@AR+X(I)     @A@@@@ 5490 PRINT 'ANOTHER FUMBLE...'     @^@@@@   21 X2=SIDGL
)@@G@@EL*CA+X1    @F@@@@DGEOG498C/TOPICAL INVESTIGATIONS - GEOGRAPHY OF ISRAELGM
)@@G@@ IN THE     @ @@@@           XBAR=XBAR/NDATA    @ @@@@          L,U     GN
)@@G@@  R2,99     @#@@@@      X=BIG+6.0   @[@@@@$PAUSE@ @@@@          L,U     GO
)@@G@@  A8,'9'    @G@@@@          LMJ       X11,RANDOM         . INITIALIZE RAGP
)@@G@@NDOM ROUNTINNEOID @#@@@@  CODE := 15;     @[@@@@*.    @[@@@@*.    @C@@@@GQ
)@@G@@  1 10  20  17  16  10  08  06  06  04  02  01  @I@@@@070030     ENTRY PGR
)@@G@@OINT IS 'WRITER'                                      M6301120    @[@@@@GS
)@@G@@END;  @#@@@@STRING CARD(80);  @@@@@@@ @@@@ INTEGER PROCEDURE OPERATOR;  GT
)@@G@@@]@@@@Y3I $S 20   @^@@@@           CHECK=0B     @E@@@@           'ES BUDGU
)@@G@@GET EXCEEDS ACTUAL), $' DIS UPON SYSOU1.  @ @@@@      WRITE (6,153) HPC(GV
)@@G@@J)    @^@@@@       OUTPUT = STRING  @B@@@@A1         WHENEVER C(5), TRANGW
)@@G@@SFER TO A2  @#@@@@           YBAR=0.@I@@@@040020     77 SWITCH          GX
)@@G@@     PICTURE 9(7), VALUE ZERO.            M6300560    @[@@@@$(1)  @#@@@@GY
)@@G@@  2 30  40  30    @F@@@@  3 01  01  01  01  01  03  04  05  08  10  11  GZ
)@@G@@12  13  14  15    @A@@@@  138 IF (STDPT(NH).EQ.0) GO TO 141 @A@@@@  119 HA
)@@G@@IF (WC9EQ.1) WRITE (6,167)    @D@@@@           02  PCT-OVER           PIHB
)@@G@@CTURE ZZZ.99.     @B@@@@           THROUGH L2, FOR I=0,1,I.G.NDATA@I@@@@HC
)@@G@@003120     DISPLAY '     '  UPON SYSOU1.                                HD
)@@G@@PROBLEM2    @B@@@@ RECUR: IF PTR EQL N THEN GOTO UNSTAK;    @A@@@@      HE
)@@G@@    +         02000,BEGIN     @#@@@@'WHCIH ONE $Q'    @^@@@@   20 R=SIDEHF
)@@G@@W*(-SA)     @I@@@@040130     02 IDME  PICTURE X(6) SYNCHRONIZED LEFT.   HG
)@@G@@                  M6300670    @F@@@@      DIMENSION XSCALE(NPLT,2),XREF(HH
)@@G@@NPLT,3),YREF(NPLT,3),NSIGN(2) @^@@@@ 5310 IF P8 = 0 THE 5075@ @@@@      HI
)@@G@@ UNLI$T            .    @D@@@@           02  ACT-EXP                 PICHJ
)@@G@@TURE 999V99.@#@@@@       PAR-OPEN.  @I@@@@070220 10. WRITE OUTREC.      HK
)@@G@@                                          M6301310    @I@@@@     $I9, I1HL
)@@G@@0, I11, IREST)                                              M6301580    HM
)@@G@@@#@@@@FILE      GETCHR  @#@@@@         N=PRT-1> @A@@@@        IF C EQL LHN
)@@G@@PAREN THEN BEGIN  @A@@@@             MOVE ZERO TO PCT-UNDER.@F@@@@      HO
)@@G@@SUBROUTINE PLOTER(AX,AY,NP,NR,NC,XSCALE,YSCALE,XREF,YREF,F) @E@@@@      HP
)@@G@@ 77  RUN-OVER                    PICTURE 99999V99.    @E@@@@           VHQ
)@@G@@ECTOR VALUES SCALE=$1H9,S19,11(F8.3,S2)  *$     @E@@@@C  BUILD AN 1108 IHR
)@@G@@NSTRUCTION ACCORDING TO PROPER FORMAT     @ @@@@      IF(TRIP.LT.0) GO THS
)@@G@@O 401 @A@@@@           MOVE ZEROES TO PCT-UNDER.@E@@@@           OPEN INHT
)@@G@@PUT TRANS-FILE OUTPUT BUDGET-ANALYSIS.    @C@@@@           WRITE ACCT-ANHU
)@@G@@ALYSIS FROM HEADING.    @^@@@@ 6000 REM PLUNGE PLAY   @C@@@@DGEOG372 2AEHV
)@@G@@RIAL PHOTOGRAPHS (03) (P-F) /156/   @F@@@@C-- 32 = STRING, 31 = INTEGER,HW
)@@G@@ 1 - 29 = OPERATOR.  TYPE EQUALS    @[@@@@20.   @^@@@@          E$DIT   HX
)@@G@@  EPKT@ @@@@          JGD       R3,TEN    @ @@@@          E$MSG     ELAPHY
)@@G@@D     @[@@@@C     @ @@@@          ER        TDATE$    @ @@@@          ERHZ
)@@G@@        PRINT$    @^@@@@       WRITE-A-REC.     @F@@@@           DISPLAYIA
)@@G@@ 'EXCESSES OF ACTUAL OVER BUDGET, ' ED-OVER     @F@@@@      SUBROUTINE PIB
)@@G@@LOTER(AX,AY,NP,NR,NC,XSCALE,YSCALE,XREF,YREF,F) @[@@@@*END  @ @@@@      IC
)@@G@@     GO TO BLOCK-6.     @F@@@@       BLOCK-5. MOVE 'ACTUAL UNDER BUDGET'ID
)@@G@@ TO ACCOUNT-STATUS.     @F@@@@C-- ZERO EXCEPT IN THE CASE OF NON-TERMINAIE
)@@G@@LS, WHICH HAVE TYPE = 1.@H@@@@*CREATE SGS: [PRC,1,TYPE,1] [PRC,1,TYPE,1]IF
)@@G@@,[PRC,1,TYPE,2] [Q,Z,1,1] [Q,Z,2,1] @I@@@@-++++0///-AAAAAAAAAAAAAAAAAAAAIG
)@@G@@AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA    @A@@@@            IH
)@@G@@E ::= E+T \ E-T \ T     @[@@@@C     @]@@@@T $S INITYR @D@@@@COMMENT   ROII
)@@G@@UTINE TO STEP BACK THRU A CARD IMAGE.     @[@@@@*ELSE @^@@@@*SET TYPE TOIJ
)@@G@@ [Q,Z,3,1]+8@G@@@@      DIMENSION  AX(NR,NC),AY(NR,NC),NP(NC),XSCALE(NC,IK
)@@G@@2),YSCALE(NC,2)   @D@@@@           W'R C(17) .AND.C(19) .AND.C(8), T'O SIL
)@@G@@9     @^@@@@X $S Y $S(MAXYR,4)$R 0  @I@@@@SCALE    6.94303   1          IM
)@@G@@                                          CYCLE  2    @ @@@@      IF(F1.IN
)@@G@@GT.70K) GO TO 800 @#@@@@      FFIELD=F1   @ @@@@ 5140 IF ABS(Y2) <> THENIO
)@@G@@ 5300 @#@@@@    8 L(I)=J(I)   @]@@@@HUNDRD.     @#@@@@           XBAR=0.IP
)@@G@@@F@@@@C  CHECK IF THE DESIRED ITEM IS A TRIPLE WHOSE VALUE IS IN THE    IQ
)@@G@@@ @@@@200   CALL PLOTC(X,-11.0,-3)  @]@@@@  GOTOL2;   @I@@@@001130 01  NIR
)@@G@@O-RCD.                                                      PROBLEM2    IS
)@@G@@@C@@@@  1                         10  10  50  20  10  @ @@@@      CALL GIT
)@@G@@EN(LMJ,0,X11,0,X1)@]@@@@$F CONTINUE @I@@@@070070 B1. ADD 1 TO SWITCH1. IIU
)@@G@@F SWITCH1 = 1 OPEN OUTPUT OUTFILE.        M6301160    @^@@@@           UIV
)@@G@@PON SYSOU1. @^@@@@       01  HEADING.     @B@@@@'DO YOU WANT TO DO IT AGIW
)@@G@@AIN$Q (YES OR NO)'@C@@@@           02  FILLER PICTURE X(3) VALUE SPACE. IX
)@@G@@@]@@@@B $S $"     @B@@@@S1         H(10-I)=YBAR-10.*(I-5)*YGRID   @#@@@@IY
)@@G@@$G 0 #$I(INPUT)   @[@@@@ END; @@@@@@@#@@@@  2 40  30  30    @F@@@@  3 10IZ
)@@G@@  05  05  05  05  05  20  05  05  05  05  05  05  05  10    @[@@@@*.    JA
)@@G@@@C@@@@*. CALL IS *PROCESS HDG TYPE INDEX-INTO-TYPE    @A@@@@           MJB
)@@G@@OVE ACT-TOT TO DIS-A.   @[@@@@$E DO @[@@@@*. DO:@^@@@@           X(I)=X(JC
)@@G@@I+1)  @#@@@@           E'L    @I@@@@040140     02 IDATE USAGE COMPUTATIOJD
)@@G@@NAL SYNCHRONIZED RIGHT PICTURE 9(6).M6300680    @^@@@@$IBFTC CALCOM  M94JE
)@@G@@,XR7  @#@@@@         4830J    @#@@@@          E$TIME  @A@@@@          DOJF
)@@G@@ 12 , LMJ X1,L(IGNORE)  @[@@@@$G    @^@@@@S2         CONTINUE     @ @@@@JG
)@@G@@           PRINT FORMAT AXIS  @C@@@@$ID       ARNOLD KAPLAN*356/13/753*NJH
)@@G@@ODECK$TESTA @I@@@@010040 CONFIGURATION SECTION.                         JI
)@@G@@                  M6300080    @G@@@@15270 DATA 2,1,0,-2,-1,-1,0,-3,-5,-2JJ
)@@G@@607,-6,-8,-9,-10,-2,-2706,-2107,-8  @#@@@@      SUBPT=UR7   @^@@@@*. ASMJK
)@@G@@ ASM,S  ELT VER1  @#@@@@         57331    @A@@@@   26 CALL POP(STACK,TOPJL
)@@G@@,J,$15)     @I@@@@070180     MOVE IUTIME TO IUTIMEO.                    JM
)@@G@@                  M6301270    @[@@@@$I 0  @ @@@@       TOTAL = TOTAL + 'JN
)@@G@@1'    @[@@@@*.    @#@@@@CONDEL 111111     @C@@@@       $LETTER = $LETTERJO
)@@G@@ + '1'          /(BACK) @A@@@@ IF SOURCE EQL 0 THEN GO TO ERR;    @^@@@@JP
)@@G@@PRINT  ALPHABET = SAVE  @[@@@@ERR:  @^@@@@       EX5 = EVAL( EX)  @A@@@@JQ
)@@G@@      IF(NUMPLT.GT.1)  GO TO 100    @I@@@@$ PUNCH OBJECT                JR
)@@G@@                                          .719.GWB    @D@@@@           0JS
)@@G@@2  NU  PICTURE X(8) VALUE 'ACCT NUM'.     @I@@@@*                       JT
)@@G@@                                                .719.GWB    @]@@@@*. @EOJU
)@@G@@F     @B@@@@          L,U       A0,IMAGE          .   @[@@@@*.    @[@@@@JV
)@@G@@C     @[@@@@*. ETC@[@@@@*.    @ @@@@    75     0     0-   32     0@^@@@@JW
)@@G@@          ER        CSF$@[@@@@*.    @A@@@@          L         A0,(0112,IJX
)@@G@@MAGE) @[@@@@*.    @ @@@@           000111900018500    @ @@@@           0JY
)@@G@@00122000017000    @ @@@@           000132100025000    @^@@@@          + JZ
)@@G@@        0   @D@@@@STRING OPERS(80),MINUS(1),PLUS(1),DIVIDE(1),TIMES(1); KA
)@@G@@@E@@@@C     DECREASE THE PREDECESSOR COUNT TO OUTPUT THE NODE     @[@@@@KB
)@@G@@C     @D@@@@R2:'DO YOU WANT TO CHANGE ANYTHING$Q (YES OR NO)'     @I@@@@KC
)@@G@@       STO     I                                                        KD
)@@G@@.719.GWB    @I@@@@       PAX     ,1                                     KE
)@@G@@                  .719.GWB    @A@@@@    1.2850  E+04     2.79   E+01    KF
)@@G@@@^@@@@'INPUT EQUATION FOR ';A @I@@@@020160     02 IPRONOO              PKG
)@@G@@ICTURE 9(8).                        M6300410    @ @@@@      DIMENSION  XKH
)@@G@@REF(NPLT,3) @[@@@@DGO   @B@@@@C     ITEMS WERE OUTPUTTED THERE IS A LOOPKI
)@@G@@@E@@@@STRING RPAREN(1),BRACKET(1),LPAREN(1),EQUAL(1),POINT(1);    @B@@@@KJ
)@@G@@     IF N EQL 3 THEN CHAR := CYOYO[Y];    @]@@@@*CLEAR TYPE @I@@@@010120KK
)@@G@@ FD INFILE BLOCK CONTAINS 10 RECORDS,                             M63001KL
)@@G@@70    @^@@@@ 5430 IF Y2 <> THEN 5470@A@@@@           LABEL RECORD OMITTEKM
)@@G@@D.    @ @@@@          JGD       R4,QUAL   @#@@@@$G R6#$I(INPUT)   @]@@@@KN
)@@G@@R7:CHANGEDO @]@@@@'ANYMORE$Q' @B@@@@           W'R C(6), P'T YSCALE,YLOGKO
)@@G@@*(-1) @C@@@@           PRINT FORMAT BLURB , XGRID,YGRID     @I@@@@STA2  KP
)@@G@@ CLA     ,1                                                       .719.GKQ
)@@G@@WB    @I@@@@       STO     HOLD,1                                       KR
)@@G@@            .719.GWB    @I@@@@       TTR     BACK1                      KS
)@@G@@                              .719.GWB    @I@@@@OUT1   CLA     =1       KT
)@@G@@                                                .719.GWB    @I@@@@      KU
)@@G@@ TTR     *+3                                                      .719.GKV
)@@G@@WB    @I@@@@       CLA     I                                            KW
)@@G@@            .719.GWB    @ @@@@GET       LMJ       X11,RANDOM@I@@@@      KX
)@@G@@ STO     J                                                        .719.GKY
)@@G@@WB    @#@@@@*IF [Q,Z,3,2]>0   @^@@@@*SET TYPE TO [Q,Z,3,2]  @ @@@@   125KZ
)@@G@@     0     0     0     0@I@@@@002147 PAR-3.  READ DATA-FILE-1 AT END GO LA
)@@G@@TO PAR-7.                     PROBLEM2    @I@@@@030020     02 ITTIMEO   LB
)@@G@@           PICTURE 9(5).                        M6300520    @#@@@@    ACLC
)@@G@@CEPT: END;  @]@@@@*DEFINE HDG @#@@@@$G R6 #$I(INPUT)  @]@@@@MAXYR $S "  LD
)@@G@@@[@@@@*END  @[@@@@*.    @^@@@@*PROCESS PROCESS COB    @^@@@@*PROCESS PROLE
)@@G@@CESS ASM    @ @@@@          ER        EXIT$     @A@@@@      ENTRY COMARGLF
)@@G@@ (N,LARG,IARG,JND)@F@@@@      DIMENSION XREF(NC,3),YREF(NC,3),F(NC),XTESLG
)@@G@@T(100),YTEST(100) @#@@@@DTEMP $S DTEMP+1  @[@@@@$G I4 @C@@@@$G C3 # $I((LH
)@@G@@INP[1] $= 'X') $A (INP[1] $= 'Y'))  @A@@@@           J=(Y(I)-YBAR)/YGRIDLI
)@@G@@+50.5 @]@@@@R5:CHANGEDO @]@@@@  J := 0;   @A@@@@           W'R .NOT. C( LJ
)@@G@@5), P'T YB  @ @@@@           GO TO BLOCK-6.     @A@@@@            T ::= LK
)@@G@@T*P \ T/P \ P     @ @@@@            P ::= I \ N \ (E) @E@@@@      SUBROULL
)@@G@@TINE GVRATE(SCALE,REF,NPLT,NSECT,XMIN,XRATE)    @C@@@@C     ITEMS WERE OLM
)@@G@@UTPUTTED  SET ERR EQUAL -1    @^@@@@R6:'HOW MANY YEARS$Q'   @G@@@@1     LN
)@@G@@                                                            6   60@#@@@@LO
)@@G@@      GO TO 1     @]@@@@MAXYR $S "  @#@@@@'INITAL YEAR$Q'   @]@@@@INITYRLP
)@@G@@ $S " @ @@@@           MOVE DIFF TO DIS.  @I@@@@010180     02 UNAMEX    LQ
)@@G@@                                                M6300230    @[@@@@$F    LR
)@@G@@@#@@@@$F B $S INPUT     @#@@@@      A(2,5)=2    @ @@@@           PRINT CLS
)@@G@@OMMENT $8$  @ @@@@       EXPAT = EX5   RPOS(0)  @I@@@@       ADD     =1 LT
)@@G@@                                                      .719.GWB    @I@@@@LU
)@@G@@       STO     I                                                        LV
)@@G@@.719.GWB    @I@@@@       SUB     HOLD                                   LW
)@@G@@                  .719.GWB    @ @@@@          JGD       R2,HUNDRD @I@@@@LX
)@@G@@070080     MOVE IPRONO TO IPRONOO.                                      LY
)@@G@@M6301170    @[@@@@$I 0  @B@@@@IMAGE     RES       22                .   LZ
)@@G@@@B@@@@EPKT      E$PKT     22,IMAGE          .   @]@@@@  2    10   @F@@@@MA
)@@G@@  3 10  05  05  05  05  05  20  05  05  05  05  05  05  05  10    @#@@@@MB
)@@G@@  OPERATOR := 0;  @B@@@@  FOR I := 1 STEP 1 UNTIL CODE DO BEGIN   @]@@@@MC
)@@G@@      I=2   @]@@@@INY:ANS $S 0@]@@@@)DEBUG 1    @D@@@@          RES     MD
)@@G@@  0200-$            . REGISTERS     @B@@@@      CALL GEN(LX,0,X4,1,X2) @ME
)@@G@@RESTORE X4  @B@@@@      CALL GEN(LX,0,X8,2,X2) @RESTORE X8  @^@@@@DGEOL1MF
)@@G@@00 1GEOLOGY (03)  @I@@@@003160     DISPLAY 'THE SUM OF NUMBERS IS       MG
)@@G@@ ' DIS-4 UPON SYSOU1.   PROBLEM2    @A@@@@      DEFINE TYPE = FLD(0,1,TOMH
)@@G@@KEN)  @^@@@@           MARGIN=12    @^@@@@           D'N WORD(1)  @A@@@@MI
)@@G@@COMMENT    ERROR PRINT ROUTINE.     @[@@@@BEGIN @I@@@@030030     02 JOBNMJ
)@@G@@OO               PICTURE X(5).                        M6300530    @A@@@@MK
)@@G@@      INDX=(FLOAT(INDX-2)/ADIV)+0.5 @#@@@@      DO 9 J=1,KP @I@@@@001040ML
)@@G@@ ENVIRONMENT DIVISION.                                            PROBLEMM
)@@G@@M2    @ @@@@      CALL GEN(J,0,0,REL,0)   @F@@@@15260 DATA 99,99,2604,2,MN
)@@G@@2,1,2,0,1,0,-2,-1,2703,2700,2605,4,3,3    @^@@@@CONTINUE:GOAL := 1;     MO
)@@G@@@]@@@@SOURCE := 0;@#@@@@        ERROR(8); @I@@@@080110     PERFORM T1 INMP
)@@G@@DEX TIMES. GO TO ZZ.                            M6301450    @^@@@@   523MQ
)@@G@@    39    12    30@^@@@@   419    30    09    30@D@@@@           02  PCTMR
)@@G@@-OVER                PICTURE ZZ9.99.@D@@@@           02  FILLER         MS
)@@G@@         PICTURE X(5).  @B@@@@           MOVE SPACE TO ACCT-ANALYSIS.   MT
)@@G@@@A@@@@      DEFINE CODE = FLD(1,6,TOKEN)  @C@@@@    FORMAT ERR(S80,A1,:IMU
)@@G@@:(X1),'^',A1,S80,A1.1); @G@@@@1                                         MV
)@@G@@                        6   10@H@@@@010100     SELECT OUTFILE ASSIGN TO MW
)@@G@@UNISERVO E.                         UNIVAC@^@@@@        GO TO ACCEPT;   MX
)@@G@@@A@@@@    WRITE(ERR,CHAR,MSG[ABS(N)]);    @B@@@@QUERY: IF TERMINAL[GOAL]MY
)@@G@@ THEN GO TO NEXT; @^@@@@          E$DIT     EPKT@^@@@@$EXECUTE       MAMMZ
)@@G@@OS    @^@@@@$COMPILE MAD ,EXECUTE   @B@@@@          R THIS PROGRAM FINALNA
)@@G@@LY MAKES A  @C@@@@          R LEGAL CALL OF THE SUBROUTINE EMPLOT.@C@@@@NB
)@@G@@       STRING EXPAT         :S(SUCC) F(OOPS)    @G@@@@S5         WHENEVENC
)@@G@@R MOD. (Z,5).E.0.AND.Z.NE.0.AND.Z.NE.M50.AND.C(14)    @]@@@@$G AGAIN    ND
)@@G@@@[@@@@$F    @[@@@@-5,8  @#@@@@Y2N $S $E Y2DO    @^@@@@ 5530 LET B = B + NE
)@@G@@P8    @#@@@@Y3N $S $E Y3DO    @#@@@@Y4N $S $E Y4DO    @#@@@@ 5110 GO TO NF
)@@G@@1500  @ @@@@ 5120 REM SOMETHING HAPPENED  @ @@@@$G ENDDOIT # $I(T =MAXYRNG
)@@G@@)     @#@@@@X1N $S $E X1DO    @[@@@@(6X,  @E@@@@0.008353E+00   0.0000   NH
)@@G@@2.718493E+002.710140E+00  0.0000    @A@@@@           MOVE TOT-OVER TO EDNI
)@@G@@-OVER.@]@@@@      X=6.0 @I@@@@002150     IF NO-1 GREATER GRTST-NO MOVE NNJ
)@@G@@O-1 TO GRTST-NO GO TO PAR-4.  PROBLEM2    @I@@@@070240 B2. ENTER LINKAGENK
)@@G@@-MODE.                                          M6301330    @#@@@@  1   NL
)@@G@@ FORMAT (I  @A@@@@   26 CALL POP(STACK,TOP,J,$110     @ @@@@       LA,H2NM
)@@G@@ A0,0,A1     .    @I@@@@040060     77 INDEX                PICTURE 9(6).NN
)@@G@@                        M6300600    @D@@@@           02  PO  PICTURE X(8NO
)@@G@@) VALUE 'PCT OVER'.     @C@@@@           02  FILLER PICTURE X(4) VALUE SNP
)@@G@@PACE. @D@@@@           02  PU  PICTURE X(9) VALUE 'PCT UNDER'.    @]@@@@NQ
)@@G@@      B1 = I@[@@@@*.    @]@@@@T $S T +1   @#@@@@COUNT $S COUNT+1  @]@@@@NR
)@@G@@DTEMP $S 1  @A@@@@I1: Y[T;DTEMP] $S $E YDO[DTEMP;]    @^@@@@$G I2 # $I(DNS
)@@G@@TEMP=4)     @#@@@@DTEMP $S DTEMP +1 @[@@@@$G I1 @#@@@@I2: DTEMP $S 1    NT
)@@G@@@ @@@@I4:X[T;DTEMP] $S $E XDO[DTEMP]@[@@@@-17,24@#@@@@         25007    NU
)@@G@@@]@@@@          R @I@@@@070170     MOVE IETIME TO IETIMEO.              NV
)@@G@@                        M6301260    @I@@@@040050     77 TEST1           NW
)@@G@@     PICTURE 9(7).                        M6300590    @]@@@@      I=2   NX
)@@G@@@#@@@@X14335400055000   @^@@@@15010 REM   4 MAN, 0-69 @^@@@@$EXECUTE    NY
)@@G@@   IBJOB    @^@@@@      S=SIDEW*(-CA)     @#@@@@  2 30  40  30    @ @@@@NZ
)@@G@@      IF(NCONS.EQ.0) GO TO 14 @ @@@@       REMARKS.  ISM 101.     @I@@@@OA
)@@G@@080060 THATS-ALL.                                                       OB
)@@G@@M6301400    @C@@@@           02  ACCT-NUM           PICTURE X(5). @C@@@@OC
)@@G@@           02  FILLER             PICTURE X(5). @I@@@@070250     RETURN OD
)@@G@@VIA 'WRITER'.                                         M6301340    @D@@@@OE
)@@G@@     1 18H WAVE FUNCTION    ,16H DEFECT FUNCTION  )   @I@@@@020210     0OF
)@@G@@2 ITIMEO               PICTURE 9(6).                        M6300460    OG
)@@G@@@^@@@@          ER        IOW$@A@@@@$ID   BOB  CASSELS  *001/65/045*10M$OH
)@@G@@@#@@@@$*  PLOT TAPE = B5@ @@@@ 5520 IF P8 = 0 THEN 5440     @F@@@@      OI
)@@G@@     V'S XSCALE=$1H8,S40,H+X VALUES SCALED BY A FACTOR +,   @F@@@@*. ELEOJ
)@@G@@MENTS WILL BE SORTED BY TYPE, PROCS FIRST THROUGH MAPS LAST @B@@@@      OK
)@@G@@ENTRY SQUARE(X1,Y1,SIDEL,ANGLE)     @#@@@@      SIDEW=SIDEL @G@@@@      OL
)@@G@@     DISPLAY '                  BUDGETARY ANALYSIS' UPON SYSOU1.  @G@@@@OM
)@@G@@           VECTOR VALUES BLURB=$ S30,18HX GRID SIZE IS    F12.6, S30,   ON
)@@G@@@G@@@@           DISPLAY '                                      ' UPON SOO
)@@G@@YSOU1.@[@@@@FINISH@I@@@@080010 B3. ENTER COBOL.                         OP
)@@G@@                        M6301350    @C@@@@       LA    A1,FBBLOK   . ANDOQ
)@@G@@ CURRENT BLOCK    @]@@@@0 1 1\[1]A  @G@@@@ 3002 FORMAT(///4X,3HKK=,I2,3HOR
)@@G@@IK=,I3,4X,3H R=,F12.7//10H    L    N,9X,  @I@@@@      SUBROUTINE REGRES OS
)@@G@@                                                REG00010    @[@@@@C     OT
)@@G@@@I@@@@060060 P2. ENTER COBOL.                                           OU
)@@G@@      M6300890    @ @@@@          HJ        L($+1)    @C@@@@C  CHECK IF OV
)@@G@@JUMP HAS LEFT THE CURRENT BLOCK     @^@@@@       01  TRANS-RCD.   @D@@@@OW
)@@G@@           02  NUMBER                  PICTURE X(5).  @E@@@@C  THIS SUBROX
)@@G@@OUTINE GENERATES CODE FOR LOADING THE VALUE OF  @#@@@@500      GO TO 500OY
)@@G@@@G@@@@C  BRANCH TO EXECUTE THE COMPILED PROGRAM AND RETURN AFTER EXECUTIOZ
)@@G@@ON    @G@@@@1111  FORMAT(/,5X,27H*END OF FILE ON INPUT TAPE*,/,5X,23H NUPA
)@@G@@MBER OF RES @E@@@@      IF (K+2/KK.EQ.4*((K+2/KK)/4)) WRITE (6,3001) KK,PB
)@@G@@IK,R  @#@@@@*. SIMPLEST CASE  @B@@@@'INPUT X1, X2, X3, X4, Y1, Y2, Y3 ORPC
)@@G@@ Y4'  @]@@@@TRY: A $S $"@^@@@@$IBCBC ISM101 NODECK    @A@@@@       IDENTPD
)@@G@@IFICATION DIVISION.     @D@@@@           02  BUD PICTURE X(9) VALUE 'BUDPE
)@@G@@ ALLOW'.    @#@@@@ 5270 REM FUMBLE  @A@@@@      AINDX=ATEM/FLOAT(KMAX-KMPF
)@@G@@IN)   @I@@@@002160     IF NO-1 LESS THAN LEAST-NO MOVE NO-1 TO LEAST-NO.PG
)@@G@@            PROBLEM2    @I@@@@060180     MOVE ILTIMEX TO ILTIME.        PH
)@@G@@                              M6301010    @#@@@@      GOTO R1$    @C@@@@PI
)@@G@@           COMPUTE RUN UNDER = ACT-EXP * 0.     @E@@@@           SUBTRACPJ
)@@G@@T BUD-ALLOW FROM ACT-EXP GIVING RUN-OVER. @D@@@@      IF(K+2/KK.  NE.  4PK
)@@G@@*((K+I/KK)/4))  GO TO 200     @C@@@@           PRINT FORMAT LINE, ROW(0)PL
)@@G@@...ROW(100) @I@@@@060231     IF IPRONO = 99999999, GO TO WRAPUP.        PM
)@@G@@                  M6301070    @[@@@@*.    @C@@@@  1 10  20  17  16  10  PN
)@@G@@08  06  06  04  02  01  @D@@@@ILLEGAL CHARACTER ON LEFT END OF EXPRESSIOPO
)@@G@@N (ERROR 4) @B@@@@           WHENEVER Y(I).L.YLO,  Y(I)=YLO @ @@@@      PP
)@@G@@INDX=AINDX*ANMB+2.5     @^@@@@C     INDX=(INDX-2)/NUSE@B@@@@          J PQ
)@@G@@        GET               .   @]@@@@#I=(I+N)I#  @[@@@@#I=I  @^@@@@      PR
)@@G@@REL=ORIGIN+I+1    @B@@@@MISSING REPLACEMENT OPERATOR (ERROR 3)    @ @@@@PS
)@@G@@           PRINT FORMAT AXIS  @#@@@@         56789    @]@@@@      NO=2  PT
)@@G@@@F@@@@C-- THE TYPE OF TERMINAL, I.E., 30 = SIMPLE VARIABLE, 34 = ARRAY  PU
)@@G@@@C@@@@           WHENEVER YLARLG.G.YLOG, YLOG=YLARLG  @B@@@@    IF OPERAPV
)@@G@@TOR EQL N THEN GO TO AOK;     @]@@@@CALL: S;    @#@@@@WRITE(AOK,CHAR);  PW
)@@G@@@B@@@@          J         OUT               .   @B@@@@ 6020 LET A1 = R1(PX
)@@G@@T,A1)   @   FROM RUNNER @B@@@@MISSING IDENTIFIER OR NUMBER (ERROR 5)    PY
)@@G@@@B@@@@LIMIT      WHENEVER  Y(I).G.YHI,  Y(I)=YHI@]@@@@GO TO START;@]@@@@PZ
)@@G@@DONE: END   @#@@@@*IF [[#1],I,3]>0  @ @@@@           W'R CARD(I).NE.$ $ QA
)@@G@@@^@@@@PLUS := OPERS[2,1];     @C@@@@SUCC     OUTPUT = 'THIS IS AN EXP'  QB
)@@G@@   :(NEXT)  @D@@@@           COMPUTE DIFF = DIFF / BUD-ALLOW * 100.     QC
)@@G@@@E@@@@*. ASSUMING THIS ELEMENT IS CALLED EL AND RESIDES IN FILE,  @[@@@@QD
)@@G@@FILL* @[@@@@*END  @#@@@@      ENTRY ENDPLT@B@@@@           W'R WORD(0).EQE
)@@G@@.$THROUG$,J=7     @E@@@@  0.24100+00  0.0000      4.44395+00  0.00295+00QF
)@@G@@  4.20000+00@A@@@@           THRUS(PLACE,I)=SQUASH(J) @C@@@@           0QG
)@@G@@2  NUMBER             PICTURE X(5). @#@@@@           I=0    @]@@@@EOF: EQH
)@@G@@ND    @B@@@@           T'H LABEL, FOR I=0,1,I.G.9     @[@@@@*.    @C@@@@QI
)@@G@@           CLOSE TRANS-FILE, BUDGET-ANALYSIS.   @ @@@@    68     0     0QJ
)@@G@@     0     0@^@@@@LIB LIBRARIES$*GATHER.  @A@@@@            INTEGER ARRAQK
)@@G@@Y FACT[1:N];@C@@@@           DIMENSION P(10),Q(10),X(50),Y(50)    @B@@@@QL
)@@G@@OUT       L         A0,A1             .   @B@@@@          L,U       A9,'QM
)@@G@@A'-1           .  @]@@@@INTEGER I,J;@]@@@@*. @EOF     @ @@@@'DO YOU WANTQN
)@@G@@ TO DO IT AGAIN$Q'@#@@@@R44803000031050   @[@@@@$I 0  @G@@@@  FOR I := 1QO
)@@G@@,6,7,10,13,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010@ @@@@#HDG,PQP
)@@G@@ ***   [[#1],[#2],2,1]& @F@@@@15050 DATA 49,18,14,7,26,10,5,8,4,6,3,1,2,QQ
)@@G@@2712,7704,13,12,9,2608  @]@@@@410   RETURN@C@@@@  DO BEGIN J := J + 1; LQR
)@@G@@OOKFOR[J] := I; END;    @B@@@@           WHENEVER  X(I).G.XHI,  X(I)=XHIQS
)@@G@@@#@@@@           J=6    @ @@@@          DL        A0,*0,X11 @D@@@@     1QT
)@@G@@  BURN(52), HC(7), STDPT(14), SNH(7), SNS(7)    @I@@@@040030     77 SWITQU
)@@G@@CH1              PICTURE 9(7), VALUE ZERO.            M6300570    @G@@@@QV
)@@G@@C  THE PARAMETER SPECIEFIED AS TRIP  INTO THE REG SPECIFIED AS  WREG    QW
)@@G@@@A@@@@QUIT       WORD(0)=WORD(0).LSC.(J*6)@#@@@@     1 GO TO 20   @C@@@@QX
)@@G@@    IF C EQL MINUS OR C EQL PLUS THEN BEGIN     @I@@@@010115 FILE SECTIOQY
)@@G@@N.                                                    M6300160    @#@@@@QZ
)@@G@@        FETCH;    @^@@@@   514    37    16    29@]@@@@   WRITE M; @#@@@@RA
)@@G@@          AXR$    @@@@@@@B@@@@      CALL GEN(LX,0,X3,0,X2) @RESTORE X3  RB
)@@G@@@ @@@@      CALL GEN(LX,0,X5,UR5,0) @^@@@@DIVIDE := OPERS[3,1];   @^@@@@RC
)@@G@@TIMES := OPERS[4,1];    @^@@@@#I=I+(((I*N+N)/I)+N#    @]@@@@#I=I*N)#    RD
)@@G@@@ @@@@COMMENT     START OF PROGRAM; @^@@@@   567    23    12    26@ @@@@RE
)@@G@@BEGIN     HJ        L(START)  @#@@@@      R=SIDEW*SA  @#@@@@  225 FORMATRF
)@@G@@(/,'  @D@@@@           02  BUDGET             PICTURE $$$$.99.    @I@@@@RG
)@@G@@       SUB     HOLD,1                                                   RH
)@@G@@.719.GWB    @I@@@@       TPL     BACK4                                  RI
)@@G@@                  .719.GWB    @I@@@@       TZE     BACK4                RJ
)@@G@@                                    .719.GWB    @I@@@@       TSX     SWIRK
)@@G@@TCH,4                                                 .719.GWB    @I@@@@RL
)@@G@@       TTR     BACK4                                                    RM
)@@G@@.719.GWB    @I@@@@OUT3   CLA     I                                      RN
)@@G@@                  .719.GWB    @]@@@@     Y:=Y+1;@]@@@@0123456789  @#@@@@RO
)@@G@@'WHICH ONE$Q'     @[@@@@$G R5 @^@@@@           PLACE=PLACE-1@I@@@@      RP
)@@G@@ TTR     *+4                                                      .719.GRQ
)@@G@@WB    @I@@@@BACK5  CLA     I                                            RR
)@@G@@            .719.GWB    @I@@@@       ADD     =1                         RS
)@@G@@                              .719.GWB    @^@@@@           T'O NEXT     RT
)@@G@@@I@@@@001150     02  NO-1      PICTURE  S999V99.                        RU
)@@G@@      PROBLEM2    @A@@@@BOOLEAN PROCEDURE RECOGNIZE(N);     @E@@@@COMMENRV
)@@G@@T    TOP-DOWN RECURSIVE DESCENT PARSABILITY CHECKER.  @ @@@@       PROCERW
)@@G@@DURE DIVISION.    @[@@@@*.    @F@@@@*. THE SECOND FIELD WITH ITS OPTIONSRX
)@@G@@ WILL BE USED TO GENERATE     @ @@@@      PARAMETER MXBLKS = 50   @#@@@@RY
)@@G@@801   AFIELD=AA1  @#@@@@800   FJFLD=F1    @ @@@@    66     0     0     0RZ
)@@G@@     0@]@@@@*EDIT OFF   @#@@@@           E'L    @B@@@@OOPS     OUTPUT = SA
)@@G@@'OOPS'        :(IN)     @I@@@@       STO     I                          SB
)@@G@@                              .719.GWB    @I@@@@       SUB     HOLD     SC
)@@G@@                                                .719.GWB    @I@@@@      SD
)@@G@@ TZE     *+2                                                      .719.GSE
)@@G@@WB    @#@@@@           FLAG=1B@]@@@@#I=N*+I#    @^@@@@15130 REM 6 MAN,10SF
)@@G@@-30   @I@@@@       TPL     RETURN                                       SG
)@@G@@            .719.GWB    @I@@@@       CLA     I                          SH
)@@G@@                              .719.GWB    @I@@@@       PAX     ,1       SI
)@@G@@                                                .719.GWB    @I@@@@060120SJ
)@@G@@     MOVE UNAMEX TO UNAME.                                        M63009SK
)@@G@@50    @I@@@@080020 WRAPUP. DISPLAY 'AN END OF FILE HAS BEEN SENSED READISL
)@@G@@NG A5'.     M6301360    @]@@@@*EDIT ON    @#@@@@A10023445533910   @[@@@@SM
)@@G@@$F    @ @@@@      CALL GEN(AX,U,X5,1,0)   @F@@@@*. THE FIRST FIELD SAYS SN
)@@G@@WHAT TYPE OF ELEMENT IT IS. TYPES CAN BE: @E@@@@IS THERE NO FUN IN LIFE SO
)@@G@@NOW THAT COMPUTERS HAVE ENTERED IT? @ @@@@           PLACE = PLACE+1    SP
)@@G@@@E@@@@       BLOCK-3. IF ACT-EXP EQUAL BUD-ALLOW GO TO BLOCK-3A.  @A@@@@SQ
)@@G@@           MOVE BUD-TOT TO DIS-B.   @ @@@@           CARD(J)=CARD(I)    SR
)@@G@@@E@@@@      CALL GEN(ANX,U,X5,BLKREF(OFFSET(TRIPLE(NEXT,2))),0)   @ @@@@SS
)@@G@@      CALL GEN(SX,0,X5,UR5,0) @]@@@@'X2:  ';X2DO@I@@@@       TTR     *+2ST
)@@G@@                                                      .719.GWB    @I@@@@SU
)@@G@@BACK6  CLA     J                                                        SV
)@@G@@.719.GWB    @I@@@@040100     02 CODE1 PICTURE X SYNCHRONIZED LEFT.      SW
)@@G@@                  M6300640    @^@@@@ 6010 LET A1 =ROLL2     @E@@@@15200 SX
)@@G@@DATA 99,2608,7,4,5,3,4,2,3,1,0,0,2706,7702,8,7,2606,6 @[@@@@#I=N# @]@@@@SY
)@@G@@#I=I+N#     @]@@@@Y1I $S 20   @[@@@@C     @[@@@@*. SGS@D@@@@           0SZ
)@@G@@2  FILLER PICTURE  X(48) VALUE SPACE.     @^@@@@   587    18    11    20TA
)@@G@@@C@@@@NEXT:'DO YOU WANT TO CHANGE ANY EQUATIONS$Q'    @]@@@@*. START 7  TB
)@@G@@@]@@@@*. @EOF     @]@@@@INITIALIZE  @]@@@@AGAIN: RESET@[@@@@DOIT  @ @@@@TC
)@@G@@       ACT-OVER-BGT-ROUTINE.  @#@@@@*. @SSG  SKEL,/Q  @^@@@@        C EQTD
)@@G@@L TIMES OR  @I@@@@       ADD     =1                                     TE
)@@G@@                  .719.GWB    @I@@@@       STO     J                    TF
)@@G@@                                    .719.GWB    @#@@@@      CALL LABPH2 TG
)@@G@@@#@@@@           J=11   @I@@@@001030 AUTHOR. REID ELLIS.                TH
)@@G@@                              PROBLEM2    @]@@@@X3I $S 80   @]@@@@X4I $STI
)@@G@@ 100  @#@@@@         44596    @#@@@@SQUEEZ     C'E    @#@@@@      WRITE(TJ
)@@G@@6,200)@^@@@@           HOLD=X(I)    @#@@@@G00126250060050   @A@@@@ST1   TK
)@@G@@     ROW(I)=200000000000K     ___@@@*EDIT OFF   @#@@@@           E'L    TL
)@@G@@@B@@@@OOPS     OUTPUT = 'OOPS'        :(IN)     @I@@@@       STO     I  TM
)@@G@@                        *[S@@@*SDFF*@A@@@@ (Q,[1.5]$CQ),$LQ$S&3.1+.1#$I6TN
)@@G@@1     @[@@@@$FFUNC@[@@@@1     @[@@@@2     @[@@@@3 $F  @[@@@@FUNC  @[@@@@TO
)@@G@@$FFUNC@]@@@@[2] 22 $F   @[@@@@FUNC  @]@@@@$FFUNC["]$F @]@@@@  )CLEAR    TP
)@@G@@@#@@@@$RA$S2 3 4 $R 1   @[@@@@$R+/A @]@@@@$R+/[1]A    @]@@@@$R+/[2]A    TQ
)@@G@@@G@@@@$FFUNC;VERYLONGNAME;ANOTHERVERYLONGNAME;ATHIRDLONGNAME;ANDTHELASTOTR
)@@G@@NE$F  @^@@@@  )COPY 1 WSFNS WIDTH   @]@@@@  WIDTH 1000@]@@@@$FMONAD X   TS
)@@G@@@#@@@@  'HELLO ';X$F    @#@@@@  MONAD MONAD 3   @]@@@@)WIDTH 70   @]@@@@TT
)@@G@@$FFUNC["]$F @^@@@@     "$SFLOAT$S%%$I150  @#@@@@   FLOAT+0.123456 @]@@@@TU
)@@G@@   $I200    @[@@@@$FBUST@C@@@@[1]  THISISAVERYLONGNAMESOWECANBUST,'^','*TV
)@@G@@' $F  @]@@@@   )WIDTH 38@]@@@@$FBUST[1"]$F@]@@@@  )WIDTH 40 @]@@@@$FBUSTTW
)@@G@@[1"]$F@]@@@@  )WIDTH 37 @]@@@@$FBUST[1"]$F@#@@@@  )LOAD 1 HANGMAN @#@@@@TX
)@@G@@$FHANGMAN["]$F    @]@@@@  )CLEAR    @#@@@@  S$MGORK$S2 3 4  @]@@@@   )VATY
)@@G@@RS    @[@@@@  GORK@]@@@@$F FUNC     @[@@@@  A$S1@[@@@@L:B$S2@[@@@@$F    TZ
)@@G@@@#@@@@  T$MFUNC$S1 2    @[@@@@FUNC  @]@@@@1+T$MFUNC   @[@@@@  $R$"@[@@@@UA
)@@G@@X     @]@@@@  )VARS     @[@@@@  L   @#@@@@)LOAD 1 ADVANCEDEX@[@@@@$Y22  UB
)@@G@@@#@@@@X $S 10000$R''''  @[@@@@$Y22  @#@@@@XX$S5000$R''''    @[@@@@$Y22  UC
)@@G@@@[@@@@$F F  @[@@@@1     @^@@@@LKJLKJLKJLKJLKJLKJLKJK  @A@@@@DFRLKJLKJLKJUD
)@@G@@LKJLKJLKJLKJLKJLKJLKJL  @B@@@@'KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK'    UE
)@@G@@@[@@@@$F    @[@@@@$Y22  @#@@@@KKK$S100$R''''    @[@@@@$Y22  @#@@@@YYY$S4UF
)@@G@@0$R''''     @]@@@@ZZZ$S$R'''' @]@@@@QQQ$S$R'''' @[@@@@$Y22  @#@@@@HIJ$S3UG
)@@G@@0$R''''     @]@@@@   )CLEAR   @]@@@@  A$S1 2 3  @]@@@@   A[1]     @#@@@@UH
)@@G@@  &1.5E200  &1E200@#@@@@  A$S 1;B$S 2     @]@@@@  )ERASE A X@[@@@@ )VARSUI
)@@G@@@]@@@@$F ZARF     @^@@@@' ARBITRARY FUNCTION'   @[@@@@$F    @]@@@@  )SAVUJ
)@@G@@E ZARF@]@@@@  )CLEAR    @^@@@@  ZARF $S 1 2 3 4 5     @]@@@@  )COPY ZARFUK
)@@G@@@[@@@@  ZARF@#@@@@  $F LABELTEST    @A@@@@  LABEL:'LABELED STATEMENT'  $UL
)@@G@@F     @]@@@@  LABELTEST @[@@@@ LABEL@]@@@@  )WSID TRIG@#@@@@  $F Z $S TRUM
)@@G@@IG Y  @#@@@@  "$SZ$SY $T 0.5  @]@@@@  Z$S(-Y)$TZ@[@@@@ $F   @]@@@@ $F TRUN
)@@G@@IG ["]@[@@@@ $F   @]@@@@  )SAVE TRIG@]@@@@  TRIG    0 @]@@@@  TRIG    1 UO
)@@G@@@]@@@@  TRIG    2 @]@@@@  TRIG    3 @]@@@@  TRIG    4 @]@@@@  TRIG    5 UP
)@@G@@@]@@@@  TRIG    6 @]@@@@  TRIG    7 @]@@@@  TRIG    8 @]@@@@  )LOAD TRIGUQ
)@@G@@@]@@@@  TRIG   &0 @]@@@@  TRIG   &1 @]@@@@  TRIG   &2 @]@@@@  TRIG   &3 UR
)@@G@@@]@@@@  TRIG   &4 @]@@@@  TRIG   &5 @]@@@@  TRIG   &6 @]@@@@  TRIG   &7 US
)@@G@@@]@@@@  TRIG   &8 @]@@@@  )DROP TRIG@#@@@@   )DROP ZARF     @]@@@@  )CLEUT
)@@G@@AR    @]@@@@  )WSID TEST@]@@@@     3+"    @]@@@@  )SAVE TEST@@@@@@@[@@@@UU
)@@G@@    5 @]@@@@   )CLEAR   @#@@@@   )LOAD TEST     @]@@@@      5     @#@@@@UV
)@@G@@   )DROP TEST     @^@@@@  K$S 10 10 $R $I 100   @[@@@@  $Y22@]@@@@  K$S UW
)@@G@@' '   @[@@@@  $Y22@#@@@@  $F  A $S FACTL Y@]@@@@  $G2#Y>A$S1@#@@@@  A$S UX
)@@G@@Y#FACTL Y-1 @[@@@@$F    @]@@@@  FACTL 4   @^@@@@RANK $S '23456789TJQKA' UY
)@@G@@@B@@@@SUIT $S 4 6 $R 'CLUBS DIMNDSHEARTSSPADES' @#@@@@$F DEAL; HAND     UZ
)@@G@@@^@@@@HAND $S 13 4 $R 52 $Q 52@#@@@@SOUTH $S HAND[;1] @#@@@@WEST $S HANDVA
)@@G@@[;2]  @#@@@@NORTH $S HAND[;3] @#@@@@EAST $S HAND[;4]  @[@@@@$F    @#@@@@VB
)@@G@@$F PRINT HAND; I  @[@@@@I $S 3@ @@@@HAND $S HAND[GRADWN HAND] - 1 @C@@@@VC
)@@G@@SUIT[I+1;];'  ';RANK[1+13 $!(I=$L HAND%13)/HAND]@^@@@@$G 3 # 0 $< I $S IVD
)@@G@@ - 1  @[@@@@$F    @^@@@@$F Z $S GRADUP X; I     @E@@@@Z $S $I 0         VE
)@@G@@           $: SET TEMP RESULT TO NULL     @E@@@@Z $S Z, I $S X $I $L / XVF
)@@G@@     $: APPEND INDEX OF SMALLEST    @C@@@@X[I] $S $L / $I 0            $VG
)@@G@@: SET OUT OF RANGE@^@@@@$G (($R Z) < $R X) / 2  @[@@@@$F    @#@@@@$F Z $VH
)@@G@@S GRADWN X;I@]@@@@Z $S $I 0   @^@@@@Z $S Z, I $S X $I $C / X@#@@@@X[I] $VI
)@@G@@S $C / $I 0 @^@@@@$G (($R Z) < $R X) / 2  @[@@@@$F    @[@@@@  DEAL@]@@@@VJ
)@@G@@  PRINT EAST@]@@@@  )CLEAR    @[@@@@  $Y22@[@@@@$G    @[@@@@$Y22  @]@@@@VK
)@@G@@  Z$S'$S'   @]@@@@$F SNAFU    @[@@@@$EZ   @[@@@@$F    @]@@@@  SNAFU     VL
)@@G@@@#@@@@  A$S3 3$R 1 0 0 0@#@@@@  B$S3 3$R 1+$I10 @]@@@@    A;B     @]@@@@VM
)@@G@@  2+.#A     @]@@@@  2 4 6 +.#A@]@@@@  A+.#B     @]@@@@  B+.#A     @]@@@@VN
)@@G@@  2+.#B     @^@@@@   B$..+B$S1 5$R$I5     @#@@@@   B+.#5 1$RB     @[@@@@VO
)@@G@@  Q$S2@]@@@@  R$S3.3    @]@@@@$F Q$SFUNC R@[@@@@Q$S2*R@[@@@@$F    @]@@@@VP
)@@G@@ FUNC 3.3   @[@@@@FUNC R@[@@@@$G    @[@@@@  A$S"@[@@@@)CLEAR@]@@@@  1 2 VQ
)@@G@@3     @]@@@@  $F GARK L @[@@@@'Z'+1 @[@@@@$F    @[@@@@  $Y22@]@@@@  GARKVR
)@@G@@ 8;13 @[@@@@  $Y22@[@@@@$G    @[@@@@  $Y22@]@@@@$F GACKER Y @]@@@@$G3#$IVS
)@@G@@Y$<0  @]@@@@GACKER Y-1  @#@@@@'I'+7;'ARRGH'     @[@@@@$F    @[@@@@  $Y22VT
)@@G@@@]@@@@GACKER 4    @[@@@@  $Y22@[@@@@$G    @[@@@@  $Y22@]@@@@  )CLEAR    VU
)@@G@@@]@@@@$FZ$SGACK   @]@@@@'GACKING' $F@[@@@@  GACK@[@@@@1+GACK@#@@@@  GLOBVV
)@@G@@ $S $I5     @#@@@@GLAB $S 3 3$R$I6  @]@@@@  $F OOO    @[@@@@ 'OOO'@#@@@@VW
)@@G@@  GLOB$S%GLOB     @[@@@@  $F  @[@@@@$FAAH @[@@@@ 'AAH'@#@@@@GLAB$S%GLAB VX
)@@G@@ $F   @]@@@@OOO,AAH     @]@@@@   GLOB     @]@@@@   GLAB     @^@@@@   2;;VY
)@@G@@;;;;;3;;' ';5     @]@@@@)WIDTH 10   @]@@@@5 20 $R '*' @]@@@@)WIDTH 100  VZ
)@@G@@@^@@@@5 100 $R '123456789*'   @#@@@@     )WIDTH 132   @#@@@@     132$R'WWA
)@@G@@HURP!'@E@@@@   'A',0$R1;'***';(0$R2),'B';' *** ';(0$R'ABC'),0$R1 2 3    WB
)@@G@@@]@@@@   $E'"$S10'@#@@@@'AAAA' $E 'AAAAA' @ @@@@1 1 1 1 1 1 1 $E 1 1 1 1WC
)@@G@@ 1 1 1@#@@@@1 2 3 4 5  $E 2 4 @#@@@@1.2 2 3 4 5 $E 2 4@^@@@@   A$S'THIS WD
)@@G@@IS A STRING'@#@@@@   $E'$EB$S''A''' @[@@@@  A$S1@]@@@@    "$S$RA  @]@@@@WE
)@@G@@   A$S$SA   @]@@@@   )CLEAR   @^@@@@     'ABC' $R 'BOOM'    @]@@@@    $IWF
)@@G@@'X'   @]@@@@    $I&6    @[@@@@  $Y22@[@@@@$Y22  @^@@@@  ((((1+2)+")+10)+WG
)@@G@@40)   @[@@@@    4 @]@@@@  )CLEAR    @E@@@@      $:       ***********  TEWH
)@@G@@ST INPUT/OUTPUT OPERATORS     @^@@@@     '*****',$",'*****' @]@@@@  STUFWI
)@@G@@F     @#@@@@A $S 2+"$S100+30  @[@@@@  A   @]@@@@   "$S3.1415@[@@@@    $:WJ
)@@G@@@]@@@@$F A$S NILAD@]@@@@A$S2 $F     @#@@@@$K Z $S MONAD Y   @]@@@@  Z $SWK
)@@G@@ Y $F @^@@@@$F Z $S A DYAD NILAD    @^@@@@   Z $S 5$RA+NILAD $K   @ @@@@WL
)@@G@@  R$S2+MONAD(4 DYAD NILAD)[3] @[@@@@2 * 3 @]@@@@2.5 * 3.5   @]@@@@2.5 * WM
)@@G@@&3.5  @]@@@@&2.5 * 3.5  @]@@@@&2.5 * 3.0  @]@@@@&2.5 * &3.5 @[@@@@     &WN
)@@G@@@]@@@@       &1.2 @]@@@@       &.2  @]@@@@     &.     @]@@@@       & 21 WO
)@@G@@@#@@@@   ZEA $S 1+"+4   @#@@@@    BEA $S 10+"+40@^@@@@      CEA $S 100+"WP
)@@G@@+400  @^@@@@      CEA $S 1000#"$O1  @]@@@@      4     @]@@@@      4     WQ
)@@G@@@#@@@@      ZEA;BEA;CEA @B@@@@   55555555555 5555555555 555555555555    WR
)@@G@@@B@@@@ +ZZZ$S4444444444 44444444444 444444444444@B@@@@$:  FORCE STACK OVWS
)@@G@@ERFLOW AND FLUSH TO CORE@F@@@@(((((((((((((((1+2)+3)+4)+5)+6)+7)+8)+9)+0WT
)@@G@@)+1)+2)+3)+4)+5)+6)+7   @D@@@@      (L,L)$R,((L,1+L$S$RN)$R' ')[;1]$SN$SWU
)@@G@@'STUFF'     @B@@@@      GRONK+GRONK;' ** ';GRONK$S3$R123456 @]@@@@    8.WV
)@@G@@9E307 @]@@@@   8.9E308  @]@@@@  2.2E&325  @A@@@@ALFA $S 'ABCDEFGHIJKLMNOWW
)@@G@@PQRSTUVWXYZ'@#@@@@     )ORIGIN 0    @#@@@@ALFA  $I 'ABC'    @^@@@@   ALFWX
)@@G@@A[ALFA$I'STRING'] @#@@@@      )ORIGIN 1   @#@@@@ALFA  $I 'ABC'    @^@@@@WY
)@@G@@   ALFA[ALFA$I'STRING'] @#@@@@JUNK $S  'ABCDK'  @^@@@@TEST $S JUNK,UNDEFWZ
)@@G@@INED  @]@@@@    )CLEAR  @C@@@@  $:  TEST ACCESSING OF SUBSCRIPTED ARRAYSXA
)@@G@@--    @B@@@@      Q $S 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'   @^@@@@      Q[1 3 XB
)@@G@@7] $S '135' @ @@@@      Q;Q[16 18 12 14] $S ' ' @^@@@@      L $S 2 4 $R XC
)@@G@@$I25  @ @@@@      $R Z $S L[2 1;2 2$R $I4]@]@@@@      Z     @^@@@@      XD
)@@G@@Z[1 2;1;1] $S $T1 @]@@@@      Z     @]@@@@      )CLEAR@B@@@@  (6 3 $R 14XE
)@@G@@.3 12 6.1 3.4 ,$T1) $E  &1 12 @ @@@@ 1 2 3 4 5 6  $E 9 8 7 4 5 6 0@ @@@@XF
)@@G@@'ABCDEFGH' $E 'ASDFGHJKL'     @B@@@@   'ABCDE'='D';' FILLER';'E'$='EEFRTXG
)@@G@@DEGH' @C@@@@  6 10 23 4 91 + 1 1 1$R5;'  '; (1$R57.3)-$I4   @B@@@@   'ABXH
)@@G@@C'='CBA' ;' FILLER ';'ABC'$='CBA'   @F@@@@ 3.3 4.4 5.5 = 3.3 4.1 5.5;' FXI
)@@G@@ILLER ';65E77  &12 2.00 = 1  &12 2  @#@@@@  +AMULT$S60#60   @#@@@@   AMUXJ
)@@G@@LT#AMULT    @#@@@@      60#60#60#60 @D@@@@$C FLOATVECTOR $S 1293  &55.23XK
)@@G@@ 637E&20  205.92E65 17  @ @@@@$L HALFVECTOR$S 22 56 21 8    @^@@@@   HALXL
)@@G@@FSCALAR $S 5264   @ @@@@      FLOATSCALAR$S 1.555247  @A@@@@   $CHALFSCAXM
)@@G@@LAR;' : ';$LFLOATSCALAR @D@@@@  A $O B ; ' MARK '; (A $S 1 1 0 0 ) $A B XN
)@@G@@$S 1 0 1 0  @^@@@@  A @A B ;':'; A @O B   @E@@@@A < B;':';A $< B;':';A =XO
)@@G@@ B;':';A > B;':';A $> B;':';A $= B  @[@@@@)CLEAR___$S''A''' @[@@@@  A$S1XP
)@@G@@@]@@@@    "$S$RA  @]@@@@   A$S$SA   @]@@@@   )CL*[S@@@*SDFF*@B@@@@$: EXAXQ
)@@G@@MPLES TAKEN FROM THE APL/360 MANUAL ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XS
)@@G@@*[S@@@*SDFF*@B@@@@$: SOME TESTS FOR THE MIXED OPERATORS     @]@@@@  )CLEXT
)@@G@@AR    @^@@@@$:    REVERSE TESTING   @]@@@@A $S 'ABC'  @#@@@@B $S 2 3 $R XU
)@@G@@$I 6  @^@@@@C $S 2 3 4 $R $T $I 24  @]@@@@       @V  A@#@@@@       @V   XV
)@@G@@ B    @#@@@@       @V   C     @]@@@@     $V A   @]@@@@       $V B @]@@@@XW
)@@G@@       $V C @#@@@@       $V[1] B    @#@@@@      $V [2]B     @]@@@@     $XX
)@@G@@V[1]C @]@@@@     $V[2]C @[@@@@$V[3]C@#@@@@       @V[1] B    @]@@@@      XY
)@@G@@@V[2]B@]@@@@     @V[3]C @#@@@@       $V['C'] B  @#@@@@    $V[123456789]BXZ
)@@G@@@#@@@@   $V[1 2 ] C     @#@@@@     $V[1.255]C   @#@@@@     $V[-2.145] C YA
)@@G@@@[@@@@$V[1]2@]@@@@   $V 2     @]@@@@    @V 2    @[@@@@)CLEAR@ @@@@$:   TYB
)@@G@@AKE AND DROP TESTING    @A@@@@ALFA $S 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'@]@@@@YC
)@@G@@&5 ^ ALFA   @]@@@@5 ^ ALFA    @]@@@@24 ^ ALFA   @]@@@@24 $^ ALFA  @]@@@@YD
)@@G@@&5 $^ ALFA  @]@@@@0 ^ ' '     @#@@@@123456 ^ ALFA     @#@@@@123456789 ^ YE
)@@G@@ALFA  @[@@@@)CLEAR@#@@@@A $S 2 4 5 7 5 4  @#@@@@B $S 3 4 $R $I 12 @[@@@@YF
)@@G@@1 ^ A @[@@@@5 ^ A @]@@@@'A' ^ A     @[@@@@20 ^ A@]@@@@2 2 ^ B     @[@@@@YG
)@@G@@2 ^ B @]@@@@'A' ^ B     @]@@@@'AB' ^ B    @[@@@@5 $^ A@[@@@@2 $^ B@]@@@@YH
)@@G@@2.1 1.5 ^ B @]@@@@&2.6 $^ A   @]@@@@2 2 $^ B    @[@@@@&2 ^ B@[@@@@0 ^ A YI
)@@G@@@[@@@@0 ^ 2 @[@@@@0 $^ 2@[@@@@1 ^ 2 @[@@@@1 $^ 2@[@@@@&1 ^ 2@]@@@@&1 $^ YJ
)@@G@@2     @[@@@@)CLEAR@^@@@@$:     EXPAND TESTING   @]@@@@P $S 2 3 5 7@#@@@@YK
)@@G@@E $S 3 4 $R $I 12 @ @@@@X $S 3 4 $R 'ABCDEFGHIJKL'    @]@@@@1 0 1\$I 2  YL
)@@G@@@]@@@@1 0 1 1 1 \X@#@@@@U $S 1 0 1 0 1    @]@@@@U \ 6 3 2   @]@@@@U \ 'AYM
)@@G@@BC'   @]@@@@1 0 0\5     @#@@@@0 0 0 1 \ 'S'     @]@@@@0 1 0 1\2 4 @]@@@@YN
)@@G@@0 0 0\0 $R 1@ @@@@'A', (0 0\ 0 $R 'BC'),'D'     @[@@@@1 \ 5 @]@@@@0 1 0 YO
)@@G@@\ 5   @]@@@@V $S 1 0 0 1@#@@@@V\2 2 $R $I 4     @#@@@@V \[1]2 2 $R $I 4 YP
)@@G@@@#@@@@V\2 2 $R'ABCD'    @#@@@@V\[1]2 2 $R'ABCD' @#@@@@H $S 2 3 4 $R$I 24YQ
)@@G@@@[@@@@H     @]@@@@0 1 0 1\[1]H@]@@@@1 0 1\[1]H  @^@@@@$:      COMPRESS TYR
)@@G@@ESTING@]@@@@A $S $I 4   @]@@@@1 1 1 0 / A @]@@@@1 0 1 0 / A @]@@@@1 1 1 YS
)@@G@@1 / A @]@@@@0 0 1 0 / A @]@@@@0 0 0 0 / A @#@@@@B $S 4 4 $R $I 16 @]@@@@YT
)@@G@@1 0 1 1 / B @]@@@@0 0 0 1 / B @#@@@@1 0 0 0 /[1]B     @[@@@@1/[1]B@]@@@@YU
)@@G@@P $S 2 3 5 7@#@@@@E $S 3 4 $R $I 12 @ @@@@X $S 3 4 $R'ABCDEFGHIJKL'     YV
)@@G@@@]@@@@1 0 1 0 /P  @]@@@@1 0 1 0 /E  @]@@@@1 0 1/[1]E  @]@@@@1 0 1 $/E   YW
)@@G@@@[@@@@)CLEAR@]@@@@U $S 1 0 1 0@]@@@@U/5 2 3 7   @]@@@@U/'ABCD'    @[@@@@YX
)@@G@@1/5   @#@@@@0 1 0 /3 3 $R$I 9 @#@@@@0 1 0/[1]3 3 $R$I9@]@@@@V$S1 0 1    YY
)@@G@@@]@@@@V/3 3 $R$I9 @#@@@@V/[1]3 3 $R$I9    @^@@@@M $S 3 3 $R'BAAURNSKY'  YZ
)@@G@@@[@@@@V/M   @[@@@@V/[1]M@#@@@@H $S 2 3 4 $R$I24 @]@@@@1 0 1 /[2]H @]@@@@ZA
)@@G@@1 1 0 0 /H  @[@@@@1/1   @[@@@@0/1   @]@@@@A $S $I 10  @[@@@@3 $V A@]@@@@ZB
)@@G@@12 $V A     @]@@@@&3 $V A     @#@@@@B $S 3 4 $R $I 12 @#@@@@1 2 3 4 $V[1ZC
)@@G@@] B   @]@@@@1 2 3 $V B  @#@@@@1 2 3 $V[2] B     @^@@@@C $S 2 3 4 $R $I 2ZD
)@@G@@4     @#@@@@(2 3 $R $I 6) $V C@^@@@@(3 4 $R $I 12 ) $V [1] C@^@@@@(2 4 $ZE
)@@G@@R $I 8) $V[2] C   @^@@@@(2 3 $R $I 6) $V[3] C   @]@@@@3 $V $I 5   @]@@@@ZF
)@@G@@&3 $V $I 5  @#@@@@3 $V 'INGRAIN'    @]@@@@&1 $V 'TOPS'@#@@@@3 $V 3 4 $R ZG
)@@G@@$I 12 @^@@@@&2 $V[1] 3 4 $R $I 12   @^@@@@M $S 2 5 $R 'GLEEAPLEAP'@[@@@@ZH
)@@G@@M     @]@@@@&2 $V M     @[@@@@3 $V M@ @@@@0 1 2 3 $V[1] 3 4 $R $I 12    ZI
)@@G@@@^@@@@(&1 2 3) $V 3 4 $R $I 12@^@@@@(&1 2 3) $V 3 4 $R $I 12@^@@@@1 &3 $ZJ
)@@G@@V 2 4 $R $I 8     @^@@@@2 3 $V 2 5 $R 'RPSHA'   @#@@@@2 3 3 $R $I 18    ZK
)@@G@@@^@@@@2 $V 2 3 3 $R $I 18     @^@@@@+H $S 2 3 4 $R $I 24    @^@@@@(2 4 $ZL
)@@G@@R $I 3) $V[2] H   @[@@@@)CLEAR@#@@@@A $S 2 3 $R $I 6  @^@@@@B $S 2 3 4 $ZM
)@@G@@R $I 24     @[@@@@A $V B@]@@@@A $V[1] B   @[@@@@)CLEAR@#@@@@A $S 2 4 $R ZN
)@@G@@$I 8  @^@@@@B $S 2 3 4 $R $I 24     @]@@@@)ORIGIN 0   @]@@@@2 $V 2 4 6 8ZO
)@@G@@@]@@@@A $V[1]B    @ @@@@$: UP AND DOWN GRADE TESTING  @[@@@@$U 'A'@#@@@@ZP
)@@G@@$U 3 4 $R $I 12   @]@@@@       $U ,5@]@@@@$U 2 3 4    @]@@@@$U 4 2 3    ZQ
)@@G@@@]@@@@$U 3 5 3 2  @]@@@@$D 3 5 3 2  @#@@@@$U7 1 16 5 3 9    @#@@@@$U 7.1ZR
)@@G@@ 1 16 5 3 9 @#@@@@$U 5 3 7 3 9 2    @#@@@@$U 5.5 3 7 3 9 2  @^@@@@V $S &ZS
)@@G@@7 3 9 6 5 1 4 3   @[@@@@$U V  @[@@@@V[$UV]@[@@@@$D V  @[@@@@V[$DV]@]@@@@ZT
)@@G@@M $S $I0    @]@@@@1,($UM),2   @]@@@@)ORIGIN 0   @]@@@@$U 3 5 2 3  ___^ 2ZU
)@@G@@@[@@@@&1 ^ 2@]@@@@&1 $^ 2     @[@@@@)CLEAR@^@@@@$:     EXPAND TESTING   ZV
)@@G@@@]@@@@P $S 2 3 5 7@#@@@@E $S 3 4 $R $I 12 @ @@@@X $S 3 4 $R 'ABCDEFGHIJKZW
)@@G@@*[S@@@*SDFF*@B@@@@      $: THIS IS A SAMPLE TERMINAL SESSION@F@@@@      ZX
)@@G@@6#9                $: FROM TERMINALS, ENTRIES ARE INDENTED  @E@@@@      ZY
)@@G@@A $S 6#9           $: TYPICAL ASSIGNMENT STATEMENT    @E@@@@      A     ZZ
)@@G@@             $: IMPERATIVE TO TYPE VALUE OF A   @E@@@@      B $S  &12   AA
)@@G@@       $: NOTE USE OF UNARY MINUS SIGN    @D@@@@      A+B               AB
)@@G@@ $: EVALUATE AND THEN PRINT   @D@@@@      256E&1             $: CONSTANTAC
)@@G@@ WITH AN EXPONENT @C@@@@      D $S 5 4 3 2 1     $: CREATE A VECTOR     AD
)@@G@@@G@@@@      D#D                $: VECTOR FUNCTIONS APPLY ELEMENT BY ELEMAE
)@@G@@ENT   @G@@@@      D#B                $: BUT NOTICE THAT A SCALAR APPLIESAF
)@@G@@ TO ALL ELS @E@@@@      J $S 'UNCLE'       $: CHARACTER CONSTANTS ARE VEAG
)@@G@@CTORS @]@@@@      J     @F@@@@      BA $S 12           $: NAMES MAY BE UAH
)@@G@@P TO 72 CHARACTERS LONG @#@@@@      BAC $S 13   @]@@@@      BA+BAC@#@@@@AI
)@@G@@      6+8+1+2     @]@@@@      A $S 7@]@@@@      B $S 6@F@@@@      A#B+2 AJ
)@@G@@             $: STATEMENTS ARE EXECUTED RIGHT TO LEFT @D@@@@      (A#B)+AK
)@@G@@2            $: BUT NOTICE WHAT PARENS DO @E@@@@      A B               AL
)@@G@@ $: INVALID EXPRESSION (NO OPERATOR)@F@@@@      3.5.2              $: MIAM
)@@G@@SSPELLED ITEM  (2 DECIMAL POINTS)   @G@@@@      F $S 2             $: BEAN
)@@G@@ CAUTIOUS USING  REPLACEMENT WITHIN PARENS@F@@@@      +(F $S 3)+F       AO
)@@G@@ $: NOTICE THAT THIS STMNT HAS VALUE 6    @F@@@@      F$S 2             AP
)@@G@@ $: BUT IF WE RETRY AND MERELY ADD ZERO   @D@@@@      +(F $S 3)+F+0     AQ
)@@G@@ $: WE GET A DIFFERENT RESULT @E@@@@               $: ***** EXAMPLES OF AR
)@@G@@SCALAR FUNCTIONS *****  @G@@@@      6#2$L3.2           $: DYADIC MINIMUMAS
)@@G@@-- NOTE ORDER OF EXECUTION    @G@@@@      (6#2)$L3.2         $: PARENTHEAT
)@@G@@SIZING CHANGES THE LEFT ARGUMENT    @D@@@@      6#$L3.2            $: THAU
)@@G@@IS IS THE MONADIC FLOOR @D@@@@      +D$S$I5            $: HERE'S THE INDAV
)@@G@@EX GENERATOR@G@@@@      $I0                $: AN EMPTY VECTOR GIVES BACKAW
)@@G@@ A BLANK LINE     @G@@@@      +E$S 5-D           $: NOTE HOW SCALAR FUNCAX
)@@G@@TS EXTEND TO VECTORS    @E@@@@      E$LD               $: --ELEMENT BY EAY
)@@G@@LEMENT EXTENSION  @G@@@@      E$>D               $: LOGICAL OPERATORS GIAZ
)@@G@@VE LOGICAL (0 OR 1) VALS@G@@@@               $: ***** EXAMPLES USING THEBA
)@@G@@ TRIG (CIRCLE) OPERATOR ***** @B@@@@      $T 1               $: PI TIMESBB
)@@G@@ ONE  @C@@@@      $T%1 2             $: PI DIVIDED BY 1 2   @F@@@@      BC
)@@G@@G $S 90 30         $: CONSIDER THESE AS ANGLES IN DEGREES   @E@@@@      BD
)@@G@@$T G%180           $: AND CONVERT THEM TO RADIANS     @D@@@@            BE
)@@G@@  $: ***** MANIPULATION OF ARRAYS *****   @#@@@@      L $S 2 3 5 7@A@@@@BF
)@@G@@      $R L              $: SIZE OF L@C@@@@      M $S 'CLYDE'       $: CHBG
)@@G@@ARACTER VECTOR    @D@@@@      $R M               $: AND ITS  DIMENSION VBH
)@@G@@ECTOR @E@@@@      L,L                $: CONCATENATE A NUMERIC VECTOR    BI
)@@G@@@E@@@@      M,M                $: DITTO FOR A CHARACTER VECTOR    @G@@@@BJ
)@@G@@      L,M                $: BUT WE CANNOT COMBINE NUMERICS WITH CHARS   BK
)@@G@@@F@@@@      Z $S 2 3 $R 2 8 13 11 7 5    $: RESHAPE TO A 2 BY 3 MATRIX  BL
)@@G@@@G@@@@      Z                  $: DISPLAY OF ARRAYS IS PRECEDED BY BLANKBM
)@@G@@ LINE @F@@@@      2 4 $R M           $: CREATE A RECTANGULAR CHARACTER ABN
)@@G@@RRAY  @E@@@@      6 $R Z             $: WE CAN GET A VECTOR BY RESHAPINGBO
)@@G@@@F@@@@      ,Z                 $: BUT NORMALLY WE USE THE RAVEL OPERATORBP
)@@G@@@D@@@@      $R L               $: OUR OLD FRIEND FROM BEFORE@E@@@@      BQ
)@@G@@L $S 1 2 3        $: WE CAN MAKE A VECTOR SHORTER ... @]@@@@      $R L  BR
)@@G@@@D@@@@      L $S ,Z           $: ... OR WE CAN LENGTHEN IT  @D@@@@      BS
)@@G@@L                  $: DISPLAY PRESENT VALUE     @F@@@@      L[3]        BT
)@@G@@       $: SELECT AN ELEMENT BY SUBSCRIPTING     @G@@@@      L[5 3 1]    BU
)@@G@@       $: NOTICE THAT A VECTOR CAN BE A SUBSCRIPT     @G@@@@      L[$I 3BV
)@@G@@]            $: AND WE CAN GET THE FIRST THREE ELEMENTS     @C@@@@      BW
)@@G@@L[$R L]            $: OR THE LAST ONE     @G@@@@      Z[2;1]            BX
)@@G@@ $: WE CAN ALSO PICK UP A SPECIFIC ELEMENT OF Z @B@@@@      Z[ ;1]      BY
)@@G@@       $: OR A COLUMN...@B@@@@      Z[1;]              $: OR A ROW ...  BZ
)@@G@@@D@@@@      Z[2 1;1 3]         $: OR ANY MIXTURE WE WANT    @E@@@@      CA
)@@G@@'A$QB$SC'          $: NOTE DIFFERENT CHARS ON OUTPUT  @G@@@@      Q $S 'CB
)@@G@@MNOPQRSTUV*/''XYZ'   $: A MESS OF CHARACTERS AS A VECTOR    @D@@@@      CC
)@@G@@Q                  $: 2 QUOTES COALESCE INTO ONE@F@@@@      Q[Z]        CD
)@@G@@       $: NOTICE THAT WE CAN CREATE AN ARRAY    @D@@@@      Q[Z[2 1;1 3]CE
)@@G@@]      $: AND GET IT IN ANY SHAPE   @G@@@@      Z[;3] $S 1 3       $: WECF
)@@G@@ CAN ALSO CHANGE A COLUMN IN THE ARRAY    @]@@@@      Z     @F@@@@      CG
)@@G@@G $S 2 3 4 5 6 1   $: HERE'S A CYCLIC PERMUTATION VECTOR    @F@@@@      CH
)@@G@@L[G]               $: WHICH WILL PERMUTE OUR OLD FRIEND 'L' @D@@@@      CI
)@@G@@G[G]               $: OR EVEN PERMUTE ITSELF    @F@@@@      L[3]        CJ
)@@G@@       $: THE INDEX ORIGIN OF A CLEAR WS IS ONE @D@@@@      )ORIGIN 0   CK
)@@G@@       $: BUT WE CAN CHANGE IT,     @E@@@@      L[3]               $: ANCL
)@@G@@D WE GET A DIFFERENT ELEMENT  @G@@@@      L[4 2 0]           $: AND NOW CM
)@@G@@ZERO IS A LEGAL SUBSCRIPT VALUE     @G@@@@      $I 6               $: THCN
)@@G@@E INDEX GENERATOR ALWAYS STARTS AT ORIGIN @D@@@@      )ORIGIN 1         CO
)@@G@@ $: SO IF WE CHANGE THE ORIGIN@D@@@@      $I 6               $: WE GET ACP
)@@G@@ DIFFERENT  RESULT@F@@@@               $: ***** EXTENSION OF FUNCTIONS TCQ
)@@G@@O ARRAYS *****    @F@@@@      +R$S $Q 4 $R 8     $: A RANDOM VECTOR OF 4CR
)@@G@@ INTEGERS FROM 1-8@D@@@@      +S$S $Q 3 5 $R 8   $: A RANDOM 3 BY 5 MATRCS
)@@G@@IX    @G@@@@      +T$S $Q 3 5 $R 8   $: A DIFFERENT RANDOM MATRIX OF THECT
)@@G@@ SAME SHAPE @F@@@@      S-T                $: THE DIFFERENCE (ELEMENT BYCU
)@@G@@ ELEMENT)   @F@@@@      S$LT               $: MINIMUM IS ALSO ELEMENT BYCV
)@@G@@ ELEMENT    @G@@@@      S$>T               $: COMPARISONS GIVE LOGICAL (CW
)@@G@@0 OR 1) RESULTS   ___X  @G@@@@      Z                  $: DISPLAY OF ARRCX
)@@G@@AYS IS PRECEDED BY BLANK*[@@@@*SDFF*@C@#@[/. INTERFACE ROUTINE TO DOMINOCY
)@@G@@$ FOR USE BY APL  @C@@@#. INTERFACE ROUTINE TO DOMINO$ FOR USE BY APL   CZ
)@@G@@@[@@@[.     @D@#@[        AXR$   . TEMP UNTIL WE INSTALL PROCPACKATE    DA
)@@G@@@G@@@#. ****************************************************************DB
)@@G@@***** @G@@@#.                                                           DC
)@@G@@          * @G@@@#       AXR$         .                                 DD
)@@G@@                * @G@@@#       WSDEF.      DEFINE WORKSPACE             DE
)@@G@@                      * @G@@@#WORKSP INFO  2 20.      SET ASIDE THE SPACDF
)@@G@@E                           * @G@@@#       RUNCTL.     DEFINE RUN CTRL BDG
)@@G@@LOK(S)                            * @G@@@#RUNCON INFO  2 22.      AND SEDH
)@@G@@T ASIDE ITS  SPACE                      * @G@@@#       CBLOCK           DI
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@#.                 DJ
)@@G@@                                                    * @G@@@#. END OF STADK
)@@G@@NDARD PROC BLOCK                                          * @G@@@#. ****DL
)@@G@@***************************************************************** @[@@@#DM
)@@G@@.     @[@#@[/.    @#@@@#/. HERE WE GO     @#@^@[        INSTRS .  @D@@@^DN
)@@G@@$(18) . THERE'S NO MORE ROOM IN THE IBANK, FOLKS!!!!! @[@@@[.     @^@@@[DO
)@@G@@. MONADIC ENTRY POINT-- @[@@@[.     @A@@@[MODINO* SX     X11,DMLINK     DP
)@@G@@.     @E@]@[        LX,U   X4,DM8000      . FAKE IDENTITY AS LEFTARG    DQ
)@@G@@@E@@@]        LX,U   X4,DM0010      . FAKE IDENTITY AS LEFTARG    @F@@@^DR
)@@G@@        LA,U   A4,1           . GET FLAG INDICATING MATRIX RESULT @C@@@^DS
)@@G@@        SA     A4,DMARFL      . AND STASH IT    @^@@@[. LOOK AT RIGHTARGDT
)@@G@@--    @A@@@[        LMJ    X11,PIKRIT     .     @A@@@[        J      DM9DU
)@@G@@090         .     @F@]@[        JNE,U  A4,2           . MAKE SURE WERE IDV
)@@G@@NVERTING A MATRIX @F@@@]        JNE,U  A4,2 DM9010    . MAKE SURE WERE IDW
)@@G@@NVERTING A MATRIX @D@@@[        LA,H1  A2,0,A1        . GET ROWS FROM DIDX
)@@G@@MVECT @C@@@[        LXI,U  A2,0,A2        . MAKE IT SQUARE  @E@@@[      DY
)@@G@@  SA     A2,DMADIM      . FUDGE UP AS DIMENSION OF 'A'@E@]@[        J   DZ
)@@G@@   DO0100         . THEN CONTINUE AS PER DYAD   @E@@@]        J      DM0EA
)@@G@@200         . THEN CONTINUE AS PER DYAD   @[@@@].     @F@@@]. DUMMY FETCEB
)@@G@@H TO MANUFACTURE AN IDENTITY MATRIX FOR THE ABOVE     @[@@@].     @C@@@]EC
)@@G@@DM0010  DL     A1,UNITY       . GET DFLOAT ONE  @B@@@]        LMJ    X4,ED
)@@G@@0,X4        . AND RETURN@F@@@]        LR     R1,DMBROW      . SET TO GETEE
)@@G@@ AS MAY 0'S AS ROWS OF B@E@@@]DM0020  JNGD   R1,DM0010      . AFTER ALL EF
)@@G@@0'S, GO GET A ONE @D@@@]        DSL    A1,72          . MOSTLY WE GET A EG
)@@G@@ZERO  @B@@@]        LMJ    X4,0,X4        . AND RETURN@F@@@]        J   EH
)@@G@@   DM0020         . GO CHECK FOR MORE ZEROS TO GET    @[@@@].     @[@@@[EI
)@@G@@.     @^@@@[. DYADIC ENTRY POINT--  @[@@@[.     @A@@@[DOMINO* SX     X11EJ
)@@G@@,DMLINK     .     @C@]@[DO0010  LMJ    X11,PIKLFT     . GET LEFTARG (A) EK
)@@G@@@C@@@]DM0100  LMJ    X11,PIKLFT     . GET LEFTARG (A) @A@@@[        J   EL
)@@G@@   DM9090         .     @D@^@[        JZ     A4,DM9010      . SCALAR IS EM
)@@G@@A RANK ERROR@G@^@[        JLE,U  A4,3 DM9010    . AS IS ANYTHING ELSE BUEN
)@@G@@T VECT OR MTX     @C@@@^        ANA,U  A4,1           . ADJUST RANK OF AEO
)@@G@@@G@@@^        TE,U   A4,1           . DOES ADJUSTED FLAG SAY A IS MATRIXEP
)@@G@@?     @G@@@^        JNZ    A4,DM9010      . NO, RANK ERR UNLESS ITS VECTEQ
)@@G@@OR INSTEAD  @F@@@^        SMA    A4,DMARFL      . SAVE RANKFLAG TO SET DER
)@@G@@IMS AT EXIT @B@@@[        TNE,U  A3,ZMOCHR      . CHARACTER?@E@@@[      ES
)@@G@@  JNZ    A5,DM9000      . YES, DOMAIN ERR UNLESS NULL @G@@@[        LSSLET
)@@G@@   A5,18          . ASSUME VECT USING LENGTH AS FAKE ROWS   @D@@@[      EU
)@@G@@  AA,U   A5,1           . AND COLUMNS FAKED TO 1@C@^@[        TE,U   A4,EV
)@@G@@ZRANKV      . IS IT A VECTOR? @D@@@^        TZ     A4             . IS FEW
)@@G@@LAG SET TO VECTOR?@F@@@[        LA     A5,0,A1        . NO, GET REAL MATEX
)@@G@@RIX DIMENSIONS    @D@@@[        SA     A5,DMADIM      . STASH A DIMENSIOEY
)@@G@@NS    @D@@@[        TE,U   A3,ZMODFL      . IS IT ALREADY DFLOAT? @G@@@[EZ
)@@G@@        LX     X4,GLFTBL+ZMOINT    . NO, FORCE CONVERSION DURING FETCH  FA
)@@G@@@[@@@[.     @D@]@[DO0020  LMJ    X11,PIKRIT     . LOOK AT THE MATRIX    FB
)@@G@@@D@@@]DM0110  LMJ    X11,PIKRIT     . LOOK AT THE MATRIX    @A@]@[      FC
)@@G@@  J      DO9090         .     @A@@@]        J      DM9090         .     FD
)@@G@@@F@@@[        JNE,U  A4,2 DM9010    . IMMEDIATE WIPEOUT(RANK) IF NOT MTXFE
)@@G@@@[@@@[.     @B@@@[. BOTH MONADIC AND DYADIC CONVERGE HERE-- @[@@@[.     FF
)@@G@@@C@]@[DO0100  TNE,U  A3,ZMOCHR      . IS B CHARACTER? @D@@@ DM0200  TZ  FG
)@@G@@   ERRITH         . IS OVERFLOW FLAG ON?  @F@@@         ER     ERR$     FH
)@@G@@      . YES, SOMEONE FORGOT TO TEST IT    @C@ @]DM0200  TNE,U  A3,ZMOCHRFI
)@@G@@      . IS B CHARACTER? @C@@@         TNE,U  A3,ZMOCHR      . IS B CHARAFJ
)@@G@@CTER? @E@@@[        JNZ    A5,DM9000      . YES, DOMAIN UNLESS NULL ALSOFK
)@@G@@@D@@@[        TE,U   A3,ZMODFL      . IS B ALREADY DFLOAT?  @G@@@[      FL
)@@G@@  LX     X6,GRITBL+ZMOINT    . NO, FORCE CONVERSION DURING FETCH  @D@@@[FM
)@@G@@        LA     A2,0,A1        . GET DIMENSIONS OF B   @E@@@[        SA  FN
)@@G@@   A2,DMBDIM      . AND STASH FOR LATER USE     @C@@@[        SSL    A2,FO
)@@G@@18          . ALIGN NO OF ROWS@F@@@[        TNE    A2,DMAROW      . DOESFP
)@@G@@ A HAVE THE SAME NO OF ROWS?  @F@@@[        TLE    A2,DMBCOL      . YES,FQ
)@@G@@ IS NO COLS .LEQ. NO OF ROWS? @F@]@[        J      DO9020         . IF EFR
)@@G@@ITHER FAILS, LENGTH ERROR     @F@@@]        J      DM9020         . IF EFS
)@@G@@ITHER FAILS, LENGTH ERROR     @C@@@^. INITIALIZE ADDRESS POINTERS IN DUMFT
)@@G@@MY DESCR    @D@@@^DM0300  LA,U   A0,DMDDMS      . ADDR OF DIM DATA AREA FU
)@@G@@@B@@@^        RELADR A0             . HOKE IT UP@F@@@^        SA     A0,FV
)@@G@@DMDMVD+1    . AND PLUG INTO 2ND WOD OF DIM DESCR@D@@@^        LA,U   A0,FW
)@@G@@DMDMVD      . ADDR OF DIM DESCR     @D@@@^        RELADR A0             FX
)@@G@@. WHICH IS ALSO DUMMY   @E@@@^        SA,H1  A0,DMDUMY+1    . TO WD 2 OFFY
)@@G@@ PRIMARY DESCR    @B@@@[        TZ     DMBCOL         . IS B NULL?@C@@@[FZ
)@@G@@        TNZ    DMACOL         . NO, NOW ABOUT A?@F@@@[        J      DM3GA
)@@G@@000         . IF EITHER, GO DO SPECIAL CASE     @[@@@[.     @C@@@[. GET GB
)@@G@@WORKING AREA AND CATENATE B AND A INTO IT @[@@@[.     @C@]@[DO1000  LA  GC
)@@G@@   A2,DMBCOL      . NO OF COLS OF B @C@@@]DM1000  LA     A2,DMBCOL      GD
)@@G@@. NO OF COLS OF B @C@@@[        AA     A2,DMACOL      . PLUS COLS OF A  GE
)@@G@@@D@^@[        LXI    A2,DMBCOL      . MERGE IN NO OF COLS   @F@^@[      GF
)@@G@@  SA     A2,DMDDMS      . STASH DUMMY DIMS FOR WORK AREA    @F@^@[      GG
)@@G@@  LA,U   A1,DMDDMS      . GET ADDR WE JUST PUT DIMS INTO    @C@^@[      GH
)@@G@@  RELADR A1             . RELATIVIZE IT   @F@^@[        SA,H2  A1,DMDMVDGI
)@@G@@+1    . AND SET POINTER IN DIMVECT DESCR  @E@^@[        LA,U   A0,DMDMVDGJ
)@@G@@      . THEN GET DIMVECT DESCR ADDR @E@^@[        RELADR A0             GK
)@@G@@. MAKE THAT ONE RELATIVE TOO  @F@^@[        SA,H1  A0,DMDUMY+1    . AND GL
)@@G@@PUT IN OVERALL DUMMY DESCR    @E@@@^        LA,U   A3,0,A2        . PRESGM
)@@G@@ERVE TOT NO OF COLS     @D@@@^        LXI    A2,DMBROW      . MERGE IN NGN
)@@G@@O OF ROWS   @E@@@^        SA     A2,DMDDMS      . STASH DUMMY DIMVECT VAGO
)@@G@@LUES  @G@@@^        MSI    A3,DMBROW      . TOT COLS TIMES ROWS GIVES NOGP
)@@G@@ OF ELS     @D@@@^        SA,H2  A3,DMDUMY      . CRAM INTO DUMMY DESCR GQ
)@@G@@@E@@@[        LA,U   A0,DMDUMY      . THEN GET ABSAD OF THE DUMMY @E@@@[GR
)@@G@@        LA,U   A1,ZMODFL      . SET DESIRED MODE TO DFLOAT  @F@^@[      GS
)@@G@@  LMJ    X11,PUTANS     . AND GET A PLETHORA OF STORAGE     @E@@@^      GT
)@@G@@  LMJ    X11,PUTANS     . AND GET A SURFEIT OF STORAGE@D@@@[        J   GU
)@@G@@   DM9090         . IF WE CAN, OF COURSE  @E@]@[        SX     X3,DMDATAGV
)@@G@@      . SAVE ABSADR OF THE DATA AREA@E@@@]        SX     X3,DMDADR      GW
)@@G@@. SAVE ABSADR OF THE DATA AREA@G@@@[        PUSH   A6             . STACGX
)@@G@@K DSCR FOR GARBCOL IN CASE OF ERROR @^@@@[. NOW DO THE CATENATION @E@@@[GY
)@@G@@DM1100  LA     A13,DMBROW     . OUTER LOOP IS OVER ROWS     @F@@@[DM1110GZ
)@@G@@  JNGD   A13,DM1200     . WHEN ALL ROWS DONE, GO INVERT     @D@@@[      HA
)@@G@@  LA     A15,DMBCOL     . MOVE COLS OF B FIRST  @E@@@[DM1120  JNGD   A15HB
)@@G@@,DM1130     . WHEN ALL BCOLS DONE, GO DO A@B@@@[        LMJ    X6,0,X6  HC
)@@G@@      . GET NEXT B@D@@@[        DL     A1,A4          . PUT IT IN THE STHD
)@@G@@ASHREG@D@@@[        LMJ    X2,0,X2        . INTO THE WORK AREA    @C@@@[HE
)@@G@@        J      DM1120         . GO BACK FOR MRE @D@@@[DM1130  LA     A14HF
)@@G@@,DMACOL     . LOOP ON COLS OF A     @E@@@[DM1140  JNGD   A14,DM1110     HG
)@@G@@. WHEN A DONE, GO MOVE A ROW  @B@@@[        LMJ    X4,0,X4        . GET HH
)@@G@@NEXT A@B@@@[        LMJ    X2,0,X2        . STASH IT  @D@@@[        J   HI
)@@G@@   DM1140         . AND DO ANOTHER COLUMN @C@@@[. NOW SET UP ARG REGS ANHJ
)@@G@@D CALL THE INVERTER     @B@@@[DM1200  LA     A0,DMBCOL      . COLS OF B HK
)@@G@@@E@@@[        AA     A0,DMACOL      . PLUS A GIVES TOTAL COLS     @F@@@[HL
)@@G@@        MSI    A0,DMBROW      . TIMES ROWS GIVES TOTAL ELEMENTS   @D@^@[HM
)@@G@@        ANA,U  A0,1           . LESS THE LAST ONE     @D@^@[        LSSLHN
)@@G@@   A0,1           . TIMES 2 TO GET WORDS  @G@^@[        AA     A0,DMDADRHO
)@@G@@      . PLUS STARTADR=LAST DOUBLEWD ADDR IN Q   @D@@@^        LSSL   A0,HP
)@@G@@1           . TIMES 2 TO GET WORDS  @C@@@^        AA     A0,DMDADR      HQ
)@@G@@. PLUS DATA ADDR  @G@@@^        SA     A0,DMWDAD      . SAVE ADDR OF WORHR
)@@G@@D CONTAINING DIN DATA   @G@@@^        ANA,U  A0,1           . SET LAST WHS
)@@G@@D ADDR AS IF RESULT IS VECT   @F@@@^        ANA    A0,DMARFL      . AND HT
)@@G@@IF MTX, SUBTRACT ANOTHER WORD @E@@@[        LSSL   A0,18          . ALIGHU
)@@G@@N AS PLACE TO PUT RESULT@E@@@[        LXM    A0,DMDADR      . SET UP STAHV
)@@G@@RTADDR OF WORKAREA@E@@@[        DL     A1,DMRCWD      . GET ROWS AND COLHW
)@@G@@S OF B AND A@E@@@[        LA     A3,(+448,BUFF) . USE BUFF AS SCRATCH ARHX
)@@G@@EA    @F@@@[        DL     A4,WSFUZZ      . SET ILCOND TOLERANCE TO FUZZHY
)@@G@@ VALUE@C@@@[        LMJ    X11,DOMINO$    . AND GO WHIRR    @D@^@[      HZ
)@@G@@  J      DM9030         . IF NOSPACE, SAY WSFULL@D@@@^        J      DM8IA
)@@G@@010         . IF NOSPACE, SAY WSFULL@F@^@[        J      DM9000         IB
)@@G@@. IF ILLCONDITIONED, SAY DOMAIN ERR @F@@@^        J      DM8000         IC
)@@G@@. IF ILLCONDITIONED, SAY DOMAIN ERR @[@@@[.     @F@@@[. NORMAL COMPLETIOID
)@@G@@N- FREE UNUSED SCRATCH AREA, POST FINAL DESCR   @F@@@[. NOTE: AT THIS POIE
)@@G@@INT WE RELY ON THE FACT THE THE RESERV ROUTINE  @C@@@[. IN 5.9 AND LATERIF
)@@G@@ ALLOCATES CONTIGUOUS SPACE   @[@@@[.     @G@@@[DM2000  VERIFY 0,0      IG
)@@G@@      . DECODE THE DUMMY WE USED AS SCRATCH     @C@^@[        LA     A2,IH
)@@G@@DMBCOL      . GET COLUMNS OF B@D@^@[        SA,H1  A2,0,A1        . TO DII
)@@G@@IMVECT OF RESULT  @C@^@[        MSI    A2,DMACOL      . TIMES COLS OF A IJ
)@@G@@@F@^@[        SA     A2,DMZELS      . IS NO OF ELEMENTS OF TRUE RESULT  IK
)@@G@@@E@^@[        ANA    A5,A2          . SUBTRACT FROM SIZE OF DUMMY @F@^@[IL
)@@G@@        LSSL   A5,1           . MULT BY 2 GIVING UNUSED WORDS     @C@^@[IM
)@@G@@        LA     A0,A6          . GET DESCR RELAD @C@^@[        ABSADR A1 IN
)@@G@@            . MAKE IT ABSOULTE@E@^@[        AU     A0,A5          . COMPIO
)@@G@@UTE WHERE WE'LL MOVE IT @D@^@[        DL     A2,2,A0        . GET OLD DIIP
)@@G@@M DESCR     @D@^@[        DS     A2,2,A1        . STASH IN NEW PLACE    IQ
)@@G@@@E@^@[        LA     A3,A5          . GET NO WDS WE'RE MOVING     @C@^@[IR
)@@G@@        LXI    A3,A5          . IN BOTH HALVES  @E@^@[        AA     A3,IS
)@@G@@1,A0        . BUMP DIMDESC AND DATA ADDRS @D@^@[        SA     A3,1,A1  IT
)@@G@@      . STASH NEW WD2 OF DESCR@C@^@[        LA     A2,0,A0        . GET IU
)@@G@@WD1 OF DESCR@D@^@[        LXM    A2,DMZELS      . PLUG IN TRUE NO OF ELSIV
)@@G@@@E@^@[        SA     A2,0,A1        . AND POST 1ST WD OF DESCR    @E@^@[IW
)@@G@@        RELADR A1             . MAKE DESCR ADDR RELATIVE    @C@^@[      IX
)@@G@@  PUSH   A1             . AND STACK IT    @D@^@[        AU,U   A0,0,WSTAIY
)@@G@@G     . GET OLD DESCR RELATIVE@D@^@[        LA     A0,A5          . NO WIZ
)@@G@@DS TO RELEASE     @C@@@^        LA     A2,DMBCOL      . GET COLUMNS OF BJA
)@@G@@@G@@@^        MSI    A2,DMACOL      . TIMES COLS OF A GIVES ELS OF RESULJB
)@@G@@T     @C@@@^        LA     A0,A6          . GET DESCR RELADR@C@@@^      JC
)@@G@@  ABSADR A0             . MAKE IT ABSOLUTE@D@@@^        SA,H2  A2,0,A0  JD
)@@G@@      . STASH NO ELS IN DESCR @G@@@^        ANA    A5,A2          . SUBTJE
)@@G@@RACET FROM TOT GIVES NO UNUSED ELS  @F@@@^        LSSL   A5,1           JF
)@@G@@. TIMES 2 IS NO DATA WD S TO RELEASE@E@@@^        TZ     DMARFL         JG
)@@G@@. SHOULD RESULT BE VECTOR?    @C@@@^        J      DM2200         . NO, JH
)@@G@@GO DO MATRIX@B@@@^. FUDGE DESCRS, ETC. FOR VECTOR RESULT    @D@@@^DM2100JI
)@@G@@  LA,U   A2,1           . GET VECTOR RANK FLAG  @E@@@^        SA,S3  A2,JJ
)@@G@@0,A0        . CRAM INTO PRIMARY DESCR     @G@@@^        AA,U   A5,1     JK
)@@G@@      . BUMP UNUSED WDS TO COUNT DIM DATA WD    @C@@@^        DL     A2,JL
)@@G@@0,A0        . GET OLD DESCR   @F@@@^        AA     A3,A5          . BUMPJM
)@@G@@ DATA ADDR BY UNUSED DATA WDS @G@@@^        AA,U   A5,2           . THENJN
)@@G@@ BUMP WDS TO FREE TO COUNT DIM DESCR@F@@@^        AU     A0,A5          JO
)@@G@@. PUT NEW ADDR FOR PRIMARY IN A1    @F@@@^        J      DM2300         JP
)@@G@@. AND GO STASH, STACK, AND FREE     @B@@@^. FARBLE POINTERS, ETC. FOR MAJQ
)@@G@@TRIX RESULT @E@@@^DM2200  LA     A1,DMWDAD      . RECOVER ADDRESS OF DIMJR
)@@G@@ DATA @C@@@^        LXI    A2,DMBCOL      . GET COLUMNS OF B@C@@@^      JS
)@@G@@  LXM    A2,DMACOL      . AND COLUMNS OF A@F@@@^        SA     A2,0,A1  JT
)@@G@@      . POST DIMENSIONS OF TRUE RESULT    @G@@@^        AU     A0,A5    JU
)@@G@@      . BUMP DESCR ADDR BY WDS TO BE RELEASED   @C@@@^        DL     A2,JV
)@@G@@2,A0        . GET DIM DESCR   @C@@@^        DS     A2,2,A1        . AND JW
)@@G@@MOVE IT OVER@E@@@^        LA     A3,A5          . SET UP NO WDS WE'RE MOJX
)@@G@@VING  @C@@@^        LXI    A3,A5          . IN BOTH HALVES  @G@@@^      JY
)@@G@@  AA     A3,1,A0        . INCREASE DIMV AND DATA ADDS BY THAT MUCH@E@@@^JZ
)@@G@@        LA     A2,0,A0        . PICK UP 1ST WORD OF DESCR   @D@@@^. STASKA
)@@G@@H ADJUSTED PRIMARY DESCR, STACK RESULT, ETC     @F@@@^DM2300  DS     A2,KB
)@@G@@0,A1        . PLUG NEW PRIM DESC IN ITS PLACE   @D@@@^        RELADR A1 KC
)@@G@@            . RELATIVIZE ITS ADDRESS@E@@@^        PUSH   A1             KD
)@@G@@. AND STACK IT AS THE RESULT  @F@@@^        LA     A1,A6          . RECOKE
)@@G@@VER RELAD OF WORKAREA DESCR   @G@@@^        LA     A0,A5          . AND KF
)@@G@@SET UP NO OF WDS TO BE RELEASED     @F@@@[        FREE                  KG
)@@G@@. AND GIVE UP SPACE WE DIDN'T NEED  @D@@@[        J      DM4000         KH
)@@G@@. THEN TAKE NORMAL EXIT @[@@@[.     @C@@@[. SPECIAL CASE FOR ONE OR BOTHKI
)@@G@@ ARGUMENTS NULL   @[@@@[.     @D@^@[DM3000  ER     ERR$           . VERYKJ
)@@G@@ SPECIAL CASE     @E@@@^DM3000  LA,U   A6,DMNVEC      . SET UP TO COPY NKK
)@@G@@ULL VECTOR? @F@@@^        TNZ    DMARFL         . SHOULD RESULT REALLY BKL
)@@G@@E VECTOR?   @F@@@^        J      DM3200         . YES, GO COPY NULL INTOKM
)@@G@@ THE WS     @G@@@^DM3100  SZ,H2  DMDUMY         . NO, MATRIX.  CLEAR NUMKN
)@@G@@BER OF ELEMENTS   @C@@@^        LXI    A0,DMBCOL      . GET COLUMNS OF BKO
)@@G@@@B@@@^        LXM    A0,DMACOL      . AND OF A  @F@@@^        SA     A0,KP
)@@G@@DMDDMS      . AND POST DIMENSIONS OF RESULT     @C@@@^        LA,U   A6,KQ
)@@G@@DMDUMY      . GET DESCR ADDR  @G@@@^DM3200  RELADR A6             . DUPEKR
)@@G@@ EXPECTS RELATIVE DESCR ADDRESSES   @F@@@^        LMJ    X11,DUPE       KS
)@@G@@. MAKE A COPY OF THE DUMMY IN THE WS@A@@@^        J      DM9090         KT
)@@G@@.     @C@@@^        PUSH   A2             . STACK THE RESULT@D@@@^      KU
)@@G@@                        . AND FALL THRU TO EXIT @[@@@[.     @#@@@[. NORMKV
)@@G@@AL EXIT     @[@@@[.     @E@@@ DM4000  TZ     ERRITH         . DID ANY OVKW
)@@G@@ERFLOWS OCCUR?    @G@@@         J      DM8000         . YES, BETTER TAKEKX
)@@G@@ DOMIAIN ERROR EXIT     @A@ @[DM4000  LX     X11,DMLINK     .     @E@@@ KY
)@@G@@        LX     X11,DMLINK     . NO, WE CAN EXIT NORMALLY    @A@@@[      KZ
)@@G@@  J      1,X11          .     @[@@@[.     @#@^@[. ERROR EXITS     @G@@@^LA
)@@G@@. ERROR EXITS WHILE SCRATCH SPACE IS ALLOCATED.  IF RESULT IS VECTOR,   LB
)@@G@@@G@@@^. DOMINO$ WILL USE THE SPACE WHERE THE DIM DATA WD WAS. IF IT ABORLC
)@@G@@TS,   @G@@@^. WE MUST BE SURE THE DIM DATA IS RESTORED, SO GARBAGE COLLELD
)@@G@@CTION GOES. @[@@@^.     @D@@@^DM8000  ERROR  YDOMAI,DM8100  . ILL-CONDITLE
)@@G@@IONED MATRIX@E@@@^DM8010  ERROR  YWSFUL         . INSUFFIEIENT SCRATCH SLF
)@@G@@PACE  @G@@@^DM8100  LA     A0,DMWDAD      . GET ADDR WHERE DIM DATA WD SLG
)@@G@@HOULD BE    @G@@@^        LA     A1,DMDDMS      . GET DIM VALS USED TO ALH
)@@G@@CQUIRE SCRATCH SPA@D@@@^        SA     A1,0,A0        . RESTORE THE DIM LI
)@@G@@DATA  @F@@@^        J      DM9090         . THEN TAKE STANDARD ERROR EXILJ
)@@G@@T     @[@@@^.     @ @@@^. ERRORS WHILE WS IS INTACT   @[@@@^.     @[@@@[LK
)@@G@@.     @A@@@[DM9000  ERROR  YDOMAI,DM9090  .     @A@@@[DM9010  ERROR  YRALL
)@@G@@NK,DM9090   .     @A@^@[DM9020  ERROR  YLENGT,DM9090  .     @A@^@[DM9030LM
)@@G@@  ERROR  YWSFUL         .     @A@@@^DM9020  ERROR  YLENGT         .     LN
)@@G@@@A@@@[DM9090  LX     X11,DMLINK     .     @F@@@         SZ     ERRITH   LO
)@@G@@      . BE SURE OVERFLOW FLAG IS CLEARED  @A@ @[        J      0,X11    LP
)@@G@@      .     @D@@@         J      0,X11          . AND TAKE ERROR EXIT   LQ
)@@G@@@^@@@[/. DATA USED FOR DOMINO @#@@@[        VARBLS .  @A@@@[DMLINK  EQUFLR
)@@G@@   $,,H1          .     @D@@@]DMZELS  EQUF   $,,H2          . NO ELS IN LS
)@@G@@TRUE RESULT @A@@@[        RES    1              .     @[@@@[.     @D@@@[LT
)@@G@@DMRCWD  RES    2              . ROW AND COLUMNS WORD  @C@@@[DMBDIM  EQU LU
)@@G@@   DMRCWD         . DIMENSIONS OF B @A@@@[DMBROW  EQUF   DMBDIM,,H1     LV
)@@G@@.     @A@@@[DMBCOL  EQUF   DMBDIM,,H2     .     @C@@@[DMADIM  EQU    DMRLW
)@@G@@CWD+1       . DIMENSIONS OF A @A@@@[DMAROW  EQUF   DMADIM,,H1     .     LX
)@@G@@@A@@@[DMACOL  EQUF   DMADIM,,H2     .     @G@@@^DMARFL  EQUF   $,,S1    LY
)@@G@@      . RANK FLAG FOR RESULT, 0/1 FOR VECT/MTX  @G@@@^DMWDAD  EQUF   $,,LZ
)@@G@@H2          . ADDR OF DIM DATA WD OF SCRATCH SPACE    @A@@@^        RES MA
)@@G@@   1              .     @[@@@[.     @ @@@[. DUMMY DESCRIPTORS AND SUCH  MB
)@@G@@@[@@@[.     @G@@@^DMNVEC  CBLOCK ZTPTMP,ZMODFL,1,0   . DUMMY DESCR FOR NMC
)@@G@@ULL VECT RESULT   @E@@@[DMDUMY  CBLOCK ZTPTMP,ZMODFL,2,$-$ $-$  . DUMY DMD
)@@G@@ATA DESCR   @E@@@]DMDADR  EQUF   DMDUMY+1,,H2   . STASH FOR DATA AREA ADME
)@@G@@DR    @E@^@[DMDMVD  CBLOCK ZTPDMV,ZMOHFI,1,2 $-$    . DUMMY DIM DESCR   MF
)@@G@@@E@@@^DMDMVD  CBLOCK ZTPDIM,ZMOHFI,1,2 $-$    . DUMMY DIM DESCR   @D@@@[MG
)@@G@@DMDDMS  RES    1              . DIM DATA STASHED HERE @]@@@[        END MH
)@@G@@___COUNT DIM DATA WD    @C@@@^        DL     A2,0,A0        . GET OLD DEMI
)@@G@@SCR   @F@@@^        AA  *[@@@@*SDFF*@D@@@@/. THIS ELEMENT DEFINES TABLESMJ
)@@G@@ OF GENERAL UTILITY     @G@]@@. ****************************************MK
)@@G@@***************************** @G@]@@. STANDARD PROCS - INCLUDED BY AN @AML
)@@G@@DD PRCPKG/APL IN SOURCE DECKS     * @[@@@].     @G@]@@.                 MM
)@@G@@                                                    * @G@]@@       AXR$ MN
)@@G@@        .                                                 * @^@@@]      MO
)@@G@@ AXR$         .   @G@]@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS  MP
)@@G@@                      * @C@@@]       CONFIG  .    DEFINE ASSEMBLY PARAMEMQ
)@@G@@TERS  @G@]@@       APSYMB.     DEFINE APL SYMBOL SET                    MR
)@@G@@          * @B@@@]       APSYMB .    DEFINE APL SYMBOL SET  @G@]@@      MS
)@@G@@ WSDEF.      DEFINE WORKSPACE                                   * @A@@@]MT
)@@G@@       WSDEF .     DEFINE WORKSPACE @G@]@@WORKSP INFO  2 20.      SET ASMU
)@@G@@IDE THE SPACE                           * @C@@@]WORKSP INFO  2 20 .     MV
)@@G@@SET ASIDE THE SPACE     @G@[@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)MW
)@@G@@                            * @G@[@@RUNCON INFO  2 22.      AND SET ASIDMX
)@@G@@E ITS  SPACE                      * @[@@@[.     @F@@@[. NEW STYLE DEF OFMY
)@@G@@ RUN CONTROL BLOK PUTS IT WITHIN THIS ELEMENT   @F@]@[. AS OTHER ELEMENTMZ
)@@G@@S ARE REASSEMBLED, THE NEED FOR THE COMMON BLOCK@G@]@[. WILL DISAPPEAR, NA
)@@G@@AS EVERYONE WILL BE EQUF'D OFF THE EXTERNAL TAG RUNBLK@[@@@[.     @G@]@[NB
)@@G@@RCINFO  EQU    22             . FOR NOW, WE STILL NEED THE COMMON BLOCK NC
)@@G@@@A@]@[RUNCON  INFO   2 RCINFO       .     @G@]@[$(RCINFO),RUNBLK* RES 1 ND
)@@G@@      . THIS TAG IS WHAT EVERYONE ELSE WILL USE @E@@@#        VARBLS    NE
)@@G@@            . BE SURE ITS IN THE D-BANK   @G@@@]RUNBLK* RES    1        NF
)@@G@@      . EQUFS IN RUNCTL PROC REFERENCE THIS TAG @F@@@[        RUNCTL    NG
)@@G@@            . DEFINE EQUFS HERE TO AVOID DFLAGS @G@@@[        RES    RCSNH
)@@G@@PAR(1)-RUNBLK    . ALLOCATE THE SPACE FOR THE TABLE   @[@@@[.     @G@]@@NI
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * NJ
)@@G@@@D@@@]       CBLOCK            . DEFINE CONTROL BLOCK TYPES @G@]@@.     NK
)@@G@@                                                                * @[@@@]NL
)@@G@@.     @G@[@@. END OF STANDARD PROC BLOCK                                NM
)@@G@@          * @G@[@@. ****************************************************NN
)@@G@@***************** @[@[@@.     @[@[@@.     @E@[@@. THIS ENTIRE ELEMENT ISNO
)@@G@@ DIPOSED OF AFTER THE INITIALIZATION@G@[@@. CODE HAS BEEN EXECUTED AND TNP
)@@G@@HE APPROPRIATE TABLE HAS BEEN TRANSFERED  @G@[@@        INITAL          NQ
)@@G@@      . SET LOCN CTR FOR INITIALIZATION CODE    @[@]@[.     @E@]@@CHINITNR
)@@G@@  INFO   2 ININFO       . DEFINE COMMON BLOCK WE'RE IN@G@@@]CHINIT  INFONS
)@@G@@   2 ININFO       . DEFINE COMMON BLOCK FOR CHAR TBL SETUP  @[@@@[.     NT
)@@G@@@E@@@[        BRIEF  . UOM ASSEMBLER ONLY, REMOVE AT OTHER SITES  @C@@@@NU
)@@G@@/. DEFINE OVERSTRIKES IN TERMS OF INTERNAL CODES@[@@@@.     @#@@@@P     NV
)@@G@@  PROC    . @A@@@@OVRDEF* NAME                       .@[@@@@.     @G@@@@NW
)@@G@@. THE INTERNAL PROC BELOW INSURES THAT THE ARGS ARE PROPERLY ORDERED--  NX
)@@G@@@E@@@@. ARGS TO OVRDEF ARE--  P(K,1) INTERNAL CODE FOR THE CHAR   @F@@@@NY
)@@G@@.                       P(K,2) INTERNAL FOR 1ST CHAR OF OVERSTRIKE@D@@@@NZ
)@@G@@.                       P(K,3) 2ND  CHAR OF OVERSTRIKE@[@@@@.     @#@@@@OA
)@@G@@O       PROC    . @#@@@@ORDER*  NAME    . @D@@@@ DO P(K,2)<P(K,3) , END OB
)@@G@@. IF ALREADY ORDERED, QUIT    @D@@@@J       EQU     P(K,2)             .OC
)@@G@@ ELSE SAVE LARGER @D@@@@P*(K,2) EQU     P(K,3)             . SAVE SMALLEOD
)@@G@@R     @D@@@@P*(K,3) EQU     J                  . AND POST LARGER  @E@@@@OE
)@@G@@        END     . OF PROC TO INSURE ORDERING OF ARGUMENTS   @[@@@@.     OF
)@@G@@@G@@@@NUMOVR*** EQU   P                  . SAVE TOT NUMBER OF OVERSTRIKEOG
)@@G@@S     @[@@@@.     @B@@@@K DO 256 , ORDER . INSURE THAT ARGS ARE OK@D@@@@OH
)@@G@@. THE TAGS INTL,INTR GIVE INTERNAL FOR ALL INTERNALS. @E@@@@. IF NON OVEOI
)@@G@@RSTRUCK, INTL=0, INTR=CHAR, ELSE INTL,INTR=     @E@@@@. THE INTERNALS FOOJ
)@@G@@R THE CONSTITUIENTS OF THE COMPOUND CHAR  @B@@@@K DO 256 ,INTL*(K) EQU 0OK
)@@G@@ . INITIALIZE     @ @@@@K DO 256 ,INTR*(K) EQU K-1 .  @B@@@@K DO NUMOVR OL
)@@G@@,INTL*(1+P(K,1)) EQU P(K,2) . @B@@@@K DO NUMOVR ,INTR*(1+P(K,1)) EQU P(KOM
)@@G@@,3) . @E@@@@. DEFINE TAGS INDEXED BY SEQUENCE NUMBER OF THE OVERSTRIKE- ON
)@@G@@@C@@@@K DO NUMOVR ,COMP*(2*K-1) EQU P(K,2)*/9+P(K,3) .@B@@@@K DO NUMOVR OO
)@@G@@,COMP*(2*K)   EQU P(K,1) .    @#@@@@        END      .@[@@@@.     @#@@@@OP
)@@G@@        OVRDEF  ; @G@@@@ AABAR,AUNDRL,AA       ABBAR,AUNDRL,AB       ACBOQ
)@@G@@AR,AUNDRL,AC      ;     @G@@@@ ADBAR,AUNDRL,AD       AEBAR,AUNDRL,AE    OR
)@@G@@   AFBAR,AUNDRL,AF      ;     @G@@@@ AGBAR,AUNDRL,AG       AHBAR,AUNDRL,OS
)@@G@@AH       AIBAR,AUNDRL,AI      ;     @G@@@@ AJBAR,AUNDRL,AJ       AKBAR,AOT
)@@G@@UNDRL,AK       ALBAR,AUNDRL,AL      ;     @G@@@@ AMBAR,AUNDRL,AM       AOU
)@@G@@NBAR,AUNDRL,AN       AOBAR,AUNDRL,AO      ;     @G@@@@ APBAR,AUNDRL,AP  OV
)@@G@@     AQBAR,AUNDRL,AQ       ARBAR,AUNDRL,AR      ;     @F@@@@ ASBAR,AUNDROW
)@@G@@L,AS       ATBAR,AUNDRL,AT       AUBAR,AUNDRL,AU     ;@F@@@@ AVBAR,AUNDROX
)@@G@@L,AV       AWBAR,AUNDRL,AW       AXBAR,AUNDRL,AX     ;@G@@@@ AYBAR,AUNDROY
)@@G@@L,AY       AZBAR,AUNDRL,AZ       A0BAR,AUNDRL,AZERO   ;     @G@@@@ A1BAROZ
)@@G@@,AUNDRL,AONE     A2BAR,AUNDRL,ATWO     A3BAR,AUNDRL,ATHREE  ;     @G@@@@PA
)@@G@@ A4BAR,AUNDRL,AFOUR    A5BAR,AUNDRL,AFIVE    A6BAR,AUNDRL,ASIX    ;     PB
)@@G@@@G@@@@ A7BAR,AUNDRL,ASEVEN   A8BAR,AUNDRL,AEIGHT   A9BAR,AUNDRL,ANINE   PC
)@@G@@;     @G@@@@ AUPGRD,ARESID,AMARK   ADNGRD,ARESID,AFUNCT  ALOG,ACIRCL,AEXPD
)@@G@@PON   ;     @G@@@@ AFACTL,AALFAN,ADECPT  ASYSTM,ADCODE,ANCODE  AXPOSE,ACPE
)@@G@@IRCL,AXPAND ;     @G@@@@ ALGNAN,ALGAND,ALGNOT  ALGNOR,ALGOR,ALGNOT   AQQPF
)@@G@@UAD,AQUAD,AALFAN  ;     @G@@@@ ALOCK,AFUNCT,ALGNOT   ALAMP,AOUTER,AINTERPG
)@@G@@   AREVER,ACIRCL,ARESID ;     @G@@@@ ARVFIR,ACIRCL,ASUBTR  ARDFIR,AREDUCPH
)@@G@@,ASUBTR                       ;     @E@@@@ ADOMNO,AQUAD,ADIVID   AXPFIR,PI
)@@G@@AXPAND,ASUBTR  AAT,AALFA,AO   @[@@@@.     @G@@@@OVRNUM* EQU    +NUMOVR  PJ
)@@G@@      . EXTERNALIZE # OVRSTRKS (USED BY ASINOU) @G@@@@/. DEFINE PROCS WHPK
)@@G@@ICH CREATE TAGS WITH ASCII-INTERNAL CORRESPONDENCE    @[@@@@.     @G@@@@PL
)@@G@@. PROC TO MAKE CORRESPONDENCE TAGS BOTH WAYS FOR SINGLE-STROKE CHAR     PM
)@@G@@@[@@@@.     @#@@@@P       PROC    . @#@@@@TAGDEF* NAME    . @A@@@@K DO PPN
)@@G@@ ,INT*(1+P(K,2)) EQU P(K,1)  .@A@@@@K DO P ,EXT*(1+P(K,1)) EQU P(K,2)  .PO
)@@G@@@#@@@@        END     . @[@@@@.     @F@@@@. THE FUNC BELOW RETURNS ASCIIPP
)@@G@@ FOR ALL INTERNALS, EVEN OVERSTRIKES@E@@@@. FOR OVERSTRIKES, THE ASCII VPQ
)@@G@@ALUES ARE PACKET, 2 IN 18 BITS@[@@@@.     @#@@@@ASCIFN* FUNC    . @C@@@@PR
)@@G@@J(1)    EQU     EXT(1+INTL(  ASCIFN(1)))     .  @C@@@@J(2)    EQU     EXPS
)@@G@@T(1+INTR(  ASCIFN(1)))     .  @E@@@@M       EQU     J(1)<J(2)          .PT
)@@G@@ TO INSURE ORDERING     @A@@@@K       EQU     J(2-M)*/9+J(1+M)   .@A@@@@PU
)@@G@@        END     K                  .@[@@@@.     @D@@@@. THE PROC BELOW APV
)@@G@@CTUALLY DEFINES THE RUN-TIME TABLES @[@@@@.     @#@@@@P       PROC    . PW
)@@G@@@#@@@@TBLGEN* NAME    . @ @@@@       UNLI$T            .    @A@@@@K DO 1PX
)@@G@@28 , +INT(K),ASCIFN(K)       .@A@@@@K DO 128 , +COMP(K),ASCIFN(K+128)  .PY
)@@G@@@ @@@@       LI$T              .    @#@@@@        END     . @[@@@@.     PZ
)@@G@@@E@@@@/. DEFINE TABLES FOR TYPEWRITER PAIRING 'STANDARD' KEYBOARD @B@@@@QA
)@@G@@.  SUCH AS THAT ON THE TEKTRONIX 4013 --- @[@@@@.     @E@@@@        TAGDQB
)@@G@@EF  ; DEFINE SUBSCRIPTED LABELS (I.E. TAGS)     @F@@@@  ; DEFINE 1ST HALQC
)@@G@@F OF ASCII TABLE (CTL CHARS, SPECIALS, NUMBERS) @F@@@@                  QD
)@@G@@                  ASPACE,040      AZERO, 060 ;  @F@@@@                  QE
)@@G@@                  ADIERS, 041     AONE, 061 ;   @F@@@@                  QF
)@@G@@                  ARPAR, 042      ATWO, 062 ;   @F@@@@                  QG
)@@G@@                  ALESS, 043      ATHREE, 063 ; @F@@@@                  QH
)@@G@@                  ALEQ, 044       AFOUR, 064 ;  @F@@@@                  QI
)@@G@@                  AEQUL, 045      AFIVE, 065 ;  @F@@@@                  QJ
)@@G@@                  AGRTR, 046      ASIX, 066 ;   @F@@@@                  QK
)@@G@@                  ARBRAK, 047     ASEVEN, 067 ; @F@@@@ ABKSP, 010       QL
)@@G@@                  ALGOR, 050      AEIGHT, 070 ; @F@@@@                  QM
)@@G@@                  ALGAND, 051     ANINE, 071 ;  @F@@@@ ALINFD,012       QN
)@@G@@                  AUNEQL, 052     ALPAR, 072 ;  @F@@@@                  QO
)@@G@@                  ADIVID, 053     ALBRAK, 073 ; @F@@@@                  QP
)@@G@@                  ARAVEL, 054     ASEMIC, 074 ; @F@@@@                  QQ
)@@G@@                  AADD, 055       AMULT, 075 ;  @F@@@@                  QR
)@@G@@                  ADECPT, 056     ACOLON, 076 ; @F@@@@                  QS
)@@G@@                  AREDUC, 057     AXPAND, 077 ; @F@@@@ ; DEFINE 2ND HALFQT
)@@G@@ OF ASCII TABLE (UPPER AND LOWER ALFABETICS)    @F@@@@ AUMINS, 0100     QU
)@@G@@ AEXPON, 0120     ADIMND,0140     AP, 0160 ;    @F@@@@ AALFA, 0101      QV
)@@G@@ AROLL, 0121      AA, 0141        AQ, 0161 ;    @F@@@@ ADCODE, 0102     QW
)@@G@@ ASIZE, 0122      AB, 0142        AR, 0162 ;    @F@@@@ AINTER,0103      QX
)@@G@@ ACEIL, 0123      AC, 0143        AS, 0163 ;    @F@@@@ AFLOOR, 0104     QY
)@@G@@ ALGNOT, 0124     AD, 0144        AT, 0164 ;    @F@@@@ AMEMBR, 0105     QZ
)@@G@@ ADROP, 0125      AE, 0145        AU, 0165 ;    @F@@@@ AUNDRL, 0106     RA
)@@G@@ AUNION,0126      AF, 0146        AV, 0166 ;    @F@@@@ AFUNCT, 0107     RB
)@@G@@ AOMEGA, 0127     AG, 0147        AW, 0167 ;    @F@@@@ AMARK, 0110      RC
)@@G@@ ACNTNS,0130      AH, 0150        AX, 0170 ;    @F@@@@ AINDEX, 0111     RD
)@@G@@ ATAKE, 0131      AI, 0151        AY, 0171 ;    @F@@@@ AOUTER, 0112     RE
)@@G@@ ACNTIN, 0132     AJ, 0152        AZ,0172 ;     @F@@@@ AALFAN, 0113     RF
)@@G@@ ASTORE, 0133     AK, 0153        ARBRAC,0173 ; @F@@@@ AQUAD, 0114      RG
)@@G@@ ARTACK,0134      AL, 0154        ALTACK,0174 ; @F@@@@ ARESID, 0115     RH
)@@G@@ AGOTO, 0135      AM, 0155        ALBRAC,0175 ; @F@@@@ ANCODE,0116      RI
)@@G@@ AGEQ, 0136       AN, 0156        ADOLAR,0176 ; @C@@@@ ACIRCL, 0117     RJ
)@@G@@ ASUBTR, 0137     AO, 0157    @[@@@@.     @C@@@@. END OF TABLE FOR TYPEWRK
)@@G@@RITER PAIRING TERMINALS @[@@@@.     @B@@@[        INITAL . DISPOSABLE D-RL
)@@G@@BANK CODING @F@@@@TYPTBL  TBLGEN  . GENERATE TABLE FOR TYPEWRITER PAIRINRM
)@@G@@G KEYBOARD  @D@@@@/. DEFINE TABLES FOR BIT PAIRING 'STANDARD' KEYBOARD  RN
)@@G@@@ @@@@. SUCH AS THE DELTA DATA CRT  @[@@@@.     @A@@@@BITGEN  EQU     1 RO
)@@G@@            .     @A@@@@        ON      BITGEN        .     @E@@@@      RP
)@@G@@  TAGDEF  ; DEFINE SUBSCRIPTED LABELS (I.E. TAGS)     @F@@@@  ; DEFINE 1RQ
)@@G@@ST HALF OF ASCII TABLE (CTL CHARS, SPECIALS, NUMBERS) @F@@@@            RR
)@@G@@                        ASPACE,040      AZERO, 060 ;  @F@@@@            RS
)@@G@@                        ADIERS, 041     AONE, 061 ;   @F@@@@            RT
)@@G@@                        AUMINS,042      ATWO, 062 ;   @F@@@@            RU
)@@G@@                        ALESS, 043      ATHREE, 063 ; @F@@@@            RV
)@@G@@                        ALEQ, 044       AFOUR, 064 ;  @F@@@@            RW
)@@G@@                        AEQUL, 045      AFIVE, 065 ;  @F@@@@            RX
)@@G@@                        AGEQ,046        ASIX, 066 ;   @F@@@@            RY
)@@G@@                        AGRTR, 047      ASEVEN, 067 ; @F@@@@ ABKSP, 010 RZ
)@@G@@                        AUNEQL,050      AEIGHT, 070 ; @F@@@@            SA
)@@G@@                        ALGOR,  051     ANINE, 071 ;  @F@@@@ ALINFD,012 SB
)@@G@@                        ARPAR,  052     ARBRAK,072 ;  @F@@@@            SC
)@@G@@                        ALPAR,  053     ALBRAK, 073 ; @F@@@@            SD
)@@G@@                        ARAVEL, 054     ASEMIC, 074 ; @F@@@@            SE
)@@G@@                        AADD, 055       ASUBTR,075 ;  @F@@@@            SF
)@@G@@                        ADECPT, 056     ACOLON, 076 ; @F@@@@            SG
)@@G@@                        AREDUC, 057     AXPAND, 077 ; @F@@@@ ; DEFINE 2NSH
)@@G@@D HALF OF ASCII TABLE (UPPER AND LOWER ALFABETICS)    @F@@@@ ASTORE, 010SI
)@@G@@0      AEXPON, 0120     AGOTO,0140      AP, 0160 ;    @F@@@@ AALFA, 0101SJ
)@@G@@       AROLL, 0121      AA, 0141        AQ, 0161 ;    @F@@@@ ADCODE, 010SK
)@@G@@2      ASIZE, 0122      AB, 0142        AR, 0162 ;    @F@@@@ AINTER,0103SL
)@@G@@       ACEIL, 0123      AC, 0143        AS, 0163 ;    @F@@@@ AFLOOR, 010SM
)@@G@@4      ALGNOT, 0124     AD, 0144        AT, 0164 ;    @F@@@@ AMEMBR, 010SN
)@@G@@5      ADROP, 0125      AE, 0145        AU, 0165 ;    @F@@@@ AUNDRL, 010SO
)@@G@@6      AUNION,0126      AF, 0146        AV, 0166 ;    @F@@@@ AFUNCT, 010SP
)@@G@@7      AOMEGA, 0127     AG, 0147        AW, 0167 ;    @F@@@@ AMARK, 0110SQ
)@@G@@       ACNTNS,0130      AH, 0150        AX, 0170 ;    @F@@@@ AINDEX, 011SR
)@@G@@1      ATAKE, 0131      AI, 0151        AY, 0171 ;    @F@@@@ AOUTER, 011SS
)@@G@@2      ACNTIN, 0132     AJ, 0152        AZ,0172 ;     @F@@@@ AALFAN, 011ST
)@@G@@3      ARTACK, 0133     AK, 0153        ALTACK,0173 ; @F@@@@ AQUAD, 0114SU
)@@G@@       ADIMND,0134      AL, 0154        ADOLAR,0174 ; @F@@@@ ARESID, 011SV
)@@G@@5      ALBRAC,0135      AM, 0155        ARBRAC,0175 ; @F@@@@ ANCODE,0116SW
)@@G@@       AMULT,0136       AN, 0156        ADIVID,0176 ; @C@@@@ ACIRCL, 011SX
)@@G@@7      ALGAND, 0137     AO, 0157    @[@@@@.     @B@@@@. END OF TABLE FORSY
)@@G@@ BIT PAIRING TERMINALS  @[@@@@.     @B@@@[        INITAL . DISPOSABLE D-SZ
)@@G@@BANK CODING @C@@@@BITTBL  TBLGEN  . GENERATE BITPAIRING TABLE     @[@@@@TA
)@@G@@.     @A@@@@        OFF     BITGEN        .     @[@@@@.     @E@@@@/. DEFTB
)@@G@@INE TABLE FOR NON-STANDARD BIT-PAIRING KEYBOARDS, SUCH@C@@@@. SUCH AS THTC
)@@G@@AT BROUGHT TO YOU BY TELETYPE CORP  @[@@@@.     @ @[@@TTY38   EQU     1 TD
)@@G@@       .    @A@@@[TTY38   EQU    0              .     @A@@@@        ON  TE
)@@G@@    TTY38         .     @E@@@@        TAGDEF  ; DEFINE SUBSCRIPTED LABELTF
)@@G@@S (I.E. TAGS)     @F@@@@  ; DEFINE 1ST HALF OF ASCII TABLE (CTL CHARS, STG
)@@G@@PECIALS, NUMBERS) @F@@@@                                    ASPACE,040  TH
)@@G@@    AZERO, 060 ;  @F@@@@                                    ADIERS, 041 TI
)@@G@@    AONE, 061 ;   @F@@@@                                    AUMINS,042  TJ
)@@G@@    ATWO, 062 ;   @F@@@@                                    ALESS, 043  TK
)@@G@@    ATHREE, 063 ; @F@@@@                                    ALEQ, 044   TL
)@@G@@    AFOUR, 064 ;  @F@@@@                                    AEQUL, 045  TM
)@@G@@    AFIVE, 065 ;  @F@@@@                                    AGEQ,046    TN
)@@G@@    ASIX, 066 ;   @F@@@@                                    AGRTR, 047  TO
)@@G@@    ASEVEN, 067 ; @F@@@@ ABKSP, 010                         AUNEQL,050  TP
)@@G@@    AEIGHT, 070 ; @F@@@@                                    ALGOR,  051 TQ
)@@G@@    ANINE, 071 ;  @F@@@@ ALINFD,012                         ARPAR,  052 TR
)@@G@@    ARBRAK,072 ;  @F@@@@                                    ALPAR,  053 TS
)@@G@@    ALBRAK, 073 ; @F@@@@                                    ARAVEL, 054 TT
)@@G@@    ASEMIC, 074 ; @F@@@@                                    AADD, 055   TU
)@@G@@    ASUBTR,075 ;  @F@@@@                                    ADECPT, 056 TV
)@@G@@    ACOLON, 076 ; @F@@@@                                    AREDUC, 057 TW
)@@G@@    AXPAND, 077 ; @F@@@@ ; DEFINE 2ND HALF OF ASCII TABLE (UPPER AND LOWTX
)@@G@@ER ALFABETICS)    @F@@@@ ASTORE,0100  AP, 0120       AGOTO,0140         TY
)@@G@@AEXPON, 0160 ;    @F@@@@ AA, 0101     AQ, 0121       AALFA, 0141        TZ
)@@G@@AROLL, 0161 ;     @F@@@@ AB, 0102     AR, 0122       ADCODE, 0142       UA
)@@G@@ASIZE, 0162 ;     @F@@@@ AC,0103      AS, 0123       AINTER, 0143       UB
)@@G@@ACEIL, 0163 ;     @F@@@@ AD, 0104     AT, 0124       AFLOOR, 0144       UC
)@@G@@ALGNOT, 0164 ;    @F@@@@ AE, 0105     AU, 0125       AMEMBR, 0145       UD
)@@G@@ADROP, 0165 ;     @F@@@@ AF, 0106     AV,0126        AUNDRL, 0146       UE
)@@G@@AUNION, 0166 ;    @F@@@@ AG, 0107     AW, 0127       AFUNCT, 0147       UF
)@@G@@AOMEGA, 0167 ;    @F@@@@ AH, 0110     AX,0130        AMARK, 0150        UG
)@@G@@ACNTNS, 0170 ;    @F@@@@ AI, 0111     AY, 0131       AINDEX, 0151       UH
)@@G@@ATAKE, 0171 ;     @F@@@@ AJ, 0112     AZ, 0132       AOUTER, 0152       UI
)@@G@@ACNTIN,0172 ;     @F@@@@ AK, 0113     ARBRAC, 0133   AALFAN, 0153       UJ
)@@G@@ARBRAC,0173 ;     @F@@@@ AL, 0114     ARTACK,0134    AQUAD, 0154        UK
)@@G@@ALTACK,0174 ;     @F@@@@ AM, 0115     AMULT, 0135    ARESID, 0155       UL
)@@G@@ADIVID,0175 ;     @F@@@@ AN,0116      ADIMND,0136    ANCODE, 0156       UM
)@@G@@ADOLAR,0176 ;     @B@@@@ AO, 0117     ALGAND, 0137   ACIRCL, 0157 @[@@@@UN
)@@G@@.     @D@@@@. END OF TABLE FOR TTY CORP'S FUNNY CORRESPONDENCE    @[@@@@UO
)@@G@@.     @B@@@[        INITAL . DISPOSABLE D-BANK CODING @D@@@@TTYTBL  TBLGUP
)@@G@@EN  . GENERATE TABLE FOR TELETYPE CORP    @A@@@@        OFF     TTY38   UQ
)@@G@@      .     @F@@@@/. DEFINE PROC TO MAKE CORRESPONDENCE FROM OPTION LETTUR
)@@G@@ERS TO TABLE@F@@@@.    ADDRESS AND PRINT TO PAD CHAR RATIO. THIS PROC ALUS
)@@G@@LOWS UP TO 7@H@@@@.    DIFFERENT KEYBOARD LAYOUTS AND GENERATES ONE WORDUT
)@@G@@ FOR EACH ONE OF THEM   @[@@@@.     @ @@@@. THE ARGUMENTS TO GENTBL ARE:UU
)@@G@@@E@@@@.        P(SPEC,1) - OPTION LETTER OR LETTERS IN FIELDATA   @G@@@@UV
)@@G@@.        P(SPEC,2) - ADDRESS OF TABLE CONTAINING APL-ASCII - ASCII-APL  UW
)@@G@@@H@@@@.                                                          CORRESPUX
)@@G@@ONDENCE     @F@@@@.        P(SPEC,3) - PRINT CHARS IN RATIO OF PRNT / PAUY
)@@G@@D CHARACTERS@F@@@@.        P(SPEC,4) - PAD   CHARS IN RATIO OF PRNT / PAUZ
)@@G@@D CHARACTERS@[@@@@.     @]@@@@Q PROC .    @#@@@@GENTBL* NAME .    @E@@@@VA
)@@G@@. PROC TO DEFINE CORRESPONDENCE FOR  ONE KEYBOARD LAYOUT    @[@@@@.     VB
)@@G@@@]@@@@P* PROC .   @C@@@@I DO 3 ,OPT(I) EQU 077**(Q(SPEC,1)*/(6*(1-I))) .VC
)@@G@@@ @@@@N DO 3 ,LET(OPT(N)) EQU 1 .   @B@@@@INDX EQU 4*LET('Q')+2*LET('R')VD
)@@G@@+LET('S') . @E@@@@ENTRY*(INDX) EQU Q(SPEC,2)+Q(SPEC,3)*/27+Q(SPEC,4)*/18VE
)@@G@@ .    @[@@@@ END  @[@@@@.     @F@@@@SPEC DO Q , P . STEP THROUGH EACH SPVF
)@@G@@EC FIELD ON PROC CALL CARD    @]@@@@ UNLI$T .   @B@@@@M DO 7 , + ENTRY(MVG
)@@G@@) . GENERATE THE TABLE  @]@@@@ LI$T .     @[@@@@ END .@[@@@@.     @H@@@@VH
)@@G@@.  ACTUALLY GENERATE TABLE TO SET UP CORRESPONDENCE BETWEEN TABLE OPTIONVI
)@@G@@S     @G@@@@.              AND ADDR OF EACH TABLE ALONG WITH IT'S DEFAULVJ
)@@G@@T PAD RATIO @B@@@[        INITAL . DISPOSABLE D-BANK CODING @C@@@@CHTABLVK
)@@G@@ GENTBL  'Q',TYPTBL,0,0  'R',BITTBL,10,1 .@[@@@@.     @G@@@@/ . THIS CODVL
)@@G@@E IS CALLED AT SETUP TIME AND ESTABLISHES THE ASCII-APL     @G@@@@. XLATVM
)@@G@@ION TABLE USED BY ASINOU. THE TABLE USED DEPENDS UPON THE TYPE OF @C@@@@VN
)@@G@@. KEYBOARD . KEYBOARD OPTIONS ARE Q , R AND S.  @[@@@@.     @F@@@@. THISVO
)@@G@@ ROUTINE WILL ALLOW UP TO 7 DIFFERENT KEYBOARD LAYOUTS TO BE@G@@@@.  SPEVP
)@@G@@CIFIED AS IT TREATS THE OPTIONS AS FORMING AN OCTAL NUMBER FROM   @G@@@@VQ
)@@G@@. 1 TO 7 (0 IS NO OPTIONS AND INDICATES FIELDATA) . AT PRESENT , ONLY   VR
)@@G@@@C@@@@.  3 KEYBOARDS (DEFINED ABOVE) ARE SUPPORTED.   @[@@@@.     @ @@@@VS
)@@G@@. ENTER WITH OPTION WORD IN A0@[@@@@.     @B@@@[        INITAL . DISPOSAVT
)@@G@@BLE D-BANK CODING @D@@@@CHRDEF* LSSL A0,35-'Z'+'Q' . 'Q' OPTION TO SIGN VU
)@@G@@BIT   @E@@@@       SSL   A0,36-3     . ALIGN BITS AS AN OCTAL DIGIT     VV
)@@G@@@F@@@@       JZ    A0,0        . IF 0 , WE SHOULD NEVER HAVE BEEN CALLEDVW
)@@G@@@F@@@@       LA,H1 A1,CHTABL-1,A0 . PICK UP END OF LINE PAD CHAR RATIO  VX
)@@G@@@E@@@@       SA    A1,RCPADW   . STORE IT IN THE RUN CONTROL BLOCK@E@@@@VY
)@@G@@       LA,H2 A0,CHTABL-1,A0 . GET ADDR OF TABLE TO BE LOADED@C@@@@      VZ
)@@G@@ JZ    A0,0,X11    . IF NONE BAD OPTIONS  @F@@@@. BLOCK TRANSFER SPECIFIWA
)@@G@@ED TABLE ( ADDR IN A0) TO RESERVED AREA   @B@@@@CH0100 LR,U  R1,256     WB
)@@G@@ . SIZE OF TABLE  @G@@@@       LA,U  A1,APASCI   . ADDRESS OF RESERVED AWC
)@@G@@REA IN ELT 'ASINOU'     @C@@@@       LXI,U A1,1        . ONE ENTRY AT A WD
)@@G@@TIME  @C@@@@       LXI,U A0,1        . ONE AT A TIME TOO    @C@@@@      WE
)@@G@@ BT    A1,,*A0     . TRANSFER THE TABLE   @B@@@@       J     1,X11      WF
)@@G@@ . NORMAL RETURN  @E@@@@/. DEFINE BITMASKS FOR TABLE USED BY ELEMENT COMWG
)@@G@@PIL/APL TO  @E@@@@. DETERMINE THE PROPERTIES OF VARIOUS APL CHARACTERS WWH
)@@G@@HEN   @A@@@@. USED AS PRIMITIVE FUNCTIONS--     @[@@@@.     @D@@@@. PROCWI
)@@G@@EDURE TO DEFINE THE PROPERTIES OF PRIMITIVES    @B@@@@. ARGS ARE CHAR,FLWJ
)@@G@@AGS  WHERE FLAGS ARE:   @^@@@@.       'M' MONADIC     @#@@@@.       'D' WK
)@@G@@DYADIC@A@@@@.       'R' ALLOWED IN REDUCTION    @B@[@@.       'S' ALLOWEWL
)@@G@@D TO SELECT A COORDINATE@F@@@[.       'S' ALLOWED TO SELECT A COORDINATEWM
)@@G@@ WHEN USED AS A DYAD    @F@@@[.       'T' ALLOWED TO SELECT A COORDINATEWN
)@@G@@ WHEN USED AS A MONAD   @[@@@@.     @#@@@@P       PROC   .  @#@@@@DEFOPRWO
)@@G@@* NAME   .  @G@[@@FC*     FUNC   . SET RESULT 8,4,2,1 DEPENDING ON ARG='WP
)@@G@@D','M','R','S'    @G@[@@        END    (FC(1)='D')*/3+(FC(1)='M')*/2+(FCWQ
)@@G@@(1)='R')*/1+(FC(1)='S') @G@@@[FC*     FUNC   . SET RESULT 16,8,4,2,1 DEPWR
)@@G@@ENDING ON CHAR ARG=T,S,R,D,M  @F@@@[Q       EQU    (FC(1)='R')*/2+(FC(1)WS
)@@G@@='D')*/1+(FC(1)='M')    .     @D@@@[        END    (FC(1)='T')*/4+(FC(1)WT
)@@G@@='S')*/3+Q    .   @#@@@@FBITS*  FUNC   .  @A@@@@X(1)    EQU    0        WU
)@@G@@      .     @E@@@@K DO 4 ,X(1) EQU X(1)+FC(077**(FBITS(1)*/(6*(1-K))))  WV
)@@G@@ .    @A@@@@        END    X(1)           .     @#@@@@        UNLI$T .  WW
)@@G@@@D@@@@I DO P-1 ,OPMASK*(P(I,1)-0177) EQU FBITS(P(I,2))  .   @#@@@@      WX
)@@G@@  LI$T   .  @#@@@@        END    .  @[@@@@.     @F@@@@. THE FLAGS BELOW WY
)@@G@@ARE USED AS MASKS IN TOP,TEP INSTRUCTIONS BY    @E@@@@. OTHER ROUTINES TWZ
)@@G@@O DETERMINE THE PROPERTIES OF A PRIMITIVE @[@@@@.     @G@[@@SELFUN* EQU XA
)@@G@@   1              . FUNC MAY SELECT A COORDINATE (E.G. /[1])@E@[@@REDFUNXB
)@@G@@* EQU    1*/1           . USABLE IN REDUCTION, E.G. +/@E@[@@MONFUN* EQU XC
)@@G@@   1*/2           . MAY BE USED MONADICALLY     @D@[@@DYAFUN* EQU    1*/XD
)@@G@@3           . MAY BE USED DYADICALLY@C@@@[MONFUN* EQU    1              XE
)@@G@@. FUNC IS MONADIC @C@@@[DYAFUN* EQU    1*/1           . FUNC IS DYADIC  XF
)@@G@@@E@@@[REDFUN* EQU    1*/2           . FUNC USABLE IN REDUCITON    @E@@@[XG
)@@G@@DYASEL* EQU    1*/3           . DYADIC FUNC CAN SELECT COORD@F@@@[MONSELXH
)@@G@@* EQU    1*/4           . MONADIC FUNC CAN SELECT COORD     @[@@@@.     XI
)@@G@@@F@@@@ DEFOPR    ADOMNO,'MD'    ALGNOT,'M'     AGOTO,'M'      AUPGRD,'M'XJ
)@@G@@@G@@@@ DEFOPR    ADNGRD,'M'     AADD,'MDR'     ASUBTR,'MDR'   AMULT,'MDRXK
)@@G@@'     @G@@@@ DEFOPR    ADIVID,'MDR'   ACEIL,'MDR'    AFLOOR,'MDR'   AEXPXL
)@@G@@ON,'MDR'    @G@@@@ DEFOPR    ALOG,'MDR'     ARESID,'MDR'   AFACTL,'MDR' XM
)@@G@@  ACIRCL,'MDR'    @G@@@@ DEFOPR    AROLL,'MD'     ASIZE,'MD'     ARAVEL,XN
)@@G@@'MDS'   AINDEX,'MD'     @G@[@@ DEFOPR    ASYSTM,'MD'    AMEMBR,'MD'    AXO
)@@G@@REVER,'MDS'   ARVFIR,'MDS'    @G@[@@ DEFOPR    AXPOSE,'MDS'   AREDUC,'MDXP
)@@G@@S'   ARDFIR,'MDS'   AXPFIR,'MDS'    @G@@@[ DEFOPR    ASYSTM,'MD'    AMEMXQ
)@@G@@BR,'MD'    AREVER,'MDST'  ARVFIR,'MDST'   @G@@@[ DEFOPR    AXPOSE,'MDST'XR
)@@G@@  AREDUC,'MDST'  ARDFIR,'MDST'  AXPFIR,'DS'     @G@[@@ DEFOPR    AXPAND,XS
)@@G@@'MDS'   ALGOR,'DR'     ALGNAN,'DR'    ALGNOR,'DR'     @G@@@[ DEFOPR    AXT
)@@G@@XPAND,'DS'    ALGOR,'DR'     ALGNAN,'DR'    ALGNOR,'DR'     @F@@@@ DEFOPXU
)@@G@@R    ALESS,'DR'     ALEQ,'DR'      AEQUL,'DR'     AGEQ,'DR' @F@[@@ DEROPXV
)@@G@@R    AGRTR,'DR'     AUNEQL,'DR'    ALGAND,'DR'    ADROP,'D' @F@@@[ DEFOPXW
)@@G@@R    AGRTR,'DR'     AUNEQL,'DR'    ALGAND,'DR'    ADROP,'D' @F@@@@ DEFOPXX
)@@G@@R    ATAKE,'D'      ADCODE,'D'     ANCODE,'D'     ASTORE,'D'@^@@@@ DEFOPXY
)@@G@@R    AOUTER,'D'   @C@@@@/. FIELDATA-ASCII-FIELDATA CONVERSION TABLES    XZ
)@@G@@@F@@@@. THE TABLES DEFINED HEREIN ARE USED WHEN WE SEE ASCII INPUT,     YA
)@@G@@@F@@@@. BUT THE USER IS USING THE 64-CHARACTER FIELDATA DIGRAPH SET.  INYB
)@@G@@@G@@@@. THIS CASE, WE XLATE HIS INPUT FROM ASCII TO FIELDATA BEFORE DOINYC
)@@G@@G     @C@@@@. THE XLATION FROM FIELDATA TO THE INTERNAL SET @[@@@@.     YD
)@@G@@@[@@@@.     @F@@@@. THE ARRAY FD(ASCII+1) GIVES THE FIELDATA VALUE CORREYE
)@@G@@SPONDING TO @B@@@@. THE ASCII VALUE USED AS A SUBSCRIPT.    @[@@@@.     YF
)@@G@@@E@@@@K DO 32 ,FD(K) EQU '?' . ASCII CONTROLS ARE ALL UNKNOWN     @#@@@@YG
)@@G@@FD(32+1) EQU ' ' .@#@@@@FD(33+1) EQU '!' .@A@@@@FD(34+1) EQU '"' . ASCIIYH
)@@G@@ DOUBLEQUOTE@#@@@@FD(35+1) EQU '#' .@#@@@@FD(36+1) EQU '$' .@#@@@@FD(37+YI
)@@G@@1) EQU '%' .@#@@@@FD(38+1) EQU '&' .@^@@@@FD(39+1) EQU '''' .     @#@@@@YJ
)@@G@@FD(40+1) EQU '(' .@#@@@@FD(41+1) EQU ')' .@#@@@@FD(42+1) EQU '*' .@#@@@@YK
)@@G@@FD(43+1) EQU '+' .@#@@@@FD(44+1) EQU ',' .@#@@@@FD(45+1) EQU '-' .@#@@@@YL
)@@G@@FD(46+1) EQU '.' .@#@@@@FD(47+1) EQU '/' .@ @@@@K DO 10 ,FD(48+K) EQU '0YM
)@@G@@'-1+K @#@@@@FD(58+1) EQU ':' .@#@@@@FD(59+1) EQU ';' .@^@@@@FD(60+1) EQUYN
)@@G@@ '<'     .  @^@@@@FD(61+1) EQU '='   .    @^@@@@FD(62+1) EQU '>'  .     YO
)@@G@@@#@@@@FD(63+1) EQU '?' .@#@@@@FD(64+1) EQU '@' .@C@@@@K DO 26 ,FD(65+K) YP
)@@G@@EQU 'A'-1+K . UPPERCASE ALFAS @#@@@@FD(91+1) EQU '[' .@#@@@@FD(92+1) EQUYQ
)@@G@@ '\' .@#@@@@FD(93+1) EQU ']' .@A@@@@FD(94+1) EQU '^' . ASCII CIRCUMFLEX YR
)@@G@@@E@@@@FD(95+1) EQU 077 . PRINTSTOP (ASCII UNDERLINE/LEFT ARROW)   @F@@@@YS
)@@G@@K DO 32 ,FD(96+K) EQU FD(64+K) . UPPER QUARTER OF TABLE IS FOLDED @[@@@@YT
)@@G@@.     @E@[@@. THE ARRAY AS(FIELDATA+1) GIVES THE ASCII CORRESPONDING TO YU
)@@G@@@E@@@[. THE ARRAY ASK(FIELDATA+1) GIVES THE ASCII CORRESPONDING TO@A@@@@YV
)@@G@@. THE SPECIFIED FIELDATA SUBSCRIPT  @[@@@@.     @A@[@@K DO 128 ,AS(FD(12YW
)@@G@@9-K)+1) EQU 128-K @A@@@[K DO 128 ,ASK(FD(129-K)+1) EQU 128-K@ @[@@AS(':'YX
)@@G@@+1) EQU  072       .    @ @@@[ASK(':'+1) EQU  072       .   @D@[@@AS('?'YY
)@@G@@+1)  EQU 077       . FIXUP FOR EXCEPTION CASE   @D@@@[ASK('?'+1)  EQU 07YZ
)@@G@@7       . FIXUP FOR EXCEPTION CASE  @[@@@@.     @D@@@@/. AT THIS POINT WZA
)@@G@@E GENERATE A GENERAL UTILITY TABLE--@[@@@@.     @G@@@@        VARBLS    ZB
)@@G@@            . TABLE IN D-BANK BECAUSE OF USE FREQUENCY@D@@@@ASFDQ1* . INZC
)@@G@@DEX IN WITH FIELDATA, PICK ASCII OUT OF Q1@E@@@@        . NOTE THAT ONLYZD
)@@G@@ THE 1ST 64 WORDS ARE ACTUALLY USED @B@@@@        . Q1 OF THE LAST 64 WOZE
)@@G@@RDS IS SPARE@E@@@@OPRPQ2* . INDEX IN WITH APL INTERNAL CHAR (LESS 0200),ZF
)@@G@@ PICK @B@@@@        . OPERATOR PROPERTIES OUT OF Q2   @D@@@@FDASS4* . INZG
)@@G@@DEX IN WITH ASCII, PICK FIELDATA OUT OF S4@A@@@@TF      FORM   9,9,6,6,6ZH
)@@G@@      .     @C@[@@K DO 128 ,  TF AS(K),OPMASK(K),FD(K),0,0   .    @C@@@[ZI
)@@G@@K DO 128 ,  TF ASK(K),OPMASK(K),FD(K),0,0   .   @[@@@@.     @ @@@@      ZJ
)@@G@@ END               .    ___O SELECT A COORDINATE WHEN USED AS A MONAD   ZK
)@@G@@@[@@@@.     @#@@@@P       PROC   .  @#@@@@DEFOPR* NAME   .  @G@[@@FC*   ZL
)@@G@@*[@@@@*SDFF*@G@@@@. ****************************************************ZM
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APZN
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         ZO
)@@G@@                            * @G@@@@       AXR$         .               ZP
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSZQ
)@@G@@EMBLY PARAMETERS                        * @G@@@@       APSYMB.     DEFINZR
)@@G@@E APL SYMBOL SET                              * @G@@@@       FDSYMB.    ZS
)@@G@@ DEFINE FIELDATA SYMBOLS                            * @G@@@@       WSDEFZT
)@@G@@.      DEFINE WORKSPACE                                   * @G@@@@WORKSPZU
)@@G@@ INFO  2 20.      SET ASIDE THE SPACE                           * @G@@@@ZV
)@@G@@       RUNCTL.     DEFINE RUN CTRL BLOK(S)                            * ZW
)@@G@@@G@]@@RUNCON INFO  2 22.      AND SET ASIDE ITS  SPACE                  ZX
)@@G@@    * @G@@@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES       ZY
)@@G@@          * @G@@@@.                                                     ZZ
)@@G@@                * @G@@@@. END OF STANDARD PROC BLOCK                    AA
)@@G@@                      * @G@@@@. ****************************************AB
)@@G@@***************************** @[@@@@.     ___@@@K DO 10 ,FD(48+K) EQU '0AC
)@@G@@'-1+K @#@@@@FD(58+1) EQU ':' .@#@@@@FD(59+1) EQU ';' .@^@@@@FD(60+1) EQUAD
)@@G@@ '<'     .  @^@@@@FD(61+1) EQU '='   .    @^@@@@*[@@@@*SDFF*@]@@@@NOT TPAE
)@@G@@F$.   @#@@@@NOT SYS$*RLIB$.   @#@@@@IN   .L$IJSIM     @B@@@@DEF LIJ$,LIJAF
)@@G@@$$,LJ$FIL,NIBANX,XQTREP,SYSREP@#@@@@IN   .APSNAP/APL  @]@@@@DEF XSTAT$  AG
)@@G@@@#@@@@IN   .IBEAMS/APL  @C@@@@DEF MIBEAM,DIBEAM,CPUNOW,CPUNOT,TIMNOT,LIBAH
)@@G@@NOC   @#@@@@IN   .MTHLIB/APL  @E@@@@DEF RANINT,RANFLT,FACTRL,POWER,CIRC0AI
)@@G@@1,CIRC02,CIRC03,NERR$   @#@@@@IN   .COMMO/APL   @^@@@@DEF COMOPN,COMOPR,AJ
)@@G@@COFORK@#@@@@IN   .CONTIN/APL  @B@@@@DEF COIALL,CONSBR,ERRITH,NCDOF$,ERRCAK
)@@G@@SF    @#@@@@IN   .ERRMSG/APL  @G@@@@DEF YDOMAI,YDEFN,YINDEX,YLABEL,YLENGAL
)@@G@@T,YRANK,YSYSTM,YVALUE,YWSFUL,YLEXIC @H@@@@DEF YUNIMP,YSYNTA,YINCOR,YUNKNAM
)@@G@@O,YIOERR,YWSNOT,YWSLOC,YNOTWS,YWSTOO,YIMPRO     @G@@@@DEF YLIBRA,YUSED,YAN
)@@G@@NOTWI,YSIDAM,YSINOC,YNOTQM,YFIPER,YFIFUN,YFIFUL,YFIASG@^@@@@DEF YFIROL,YAO
)@@G@@FIXUS,ERPRNT@#@@@@IN   .TABLES/APL  @F@@@@DEF RUNBLK,CHRDEF,MONFUN,DYAFUAP
)@@G@@N,REDFUN,DYASEL,MONSEL,ASFDQ1,OPRPQ2@#@@@@IN   .FDINOU/APL  @H@@@@DEF TRAQ
)@@G@@EAFD,TRANFD,TRANFN,QESCAP,FDTABL,WRITFD,WRMKFD,WRFCTL,WREDIT,WREDIB     AR
)@@G@@@#@@@@IN   .ASINOU/APL  @^@@@@DEF TREASC,WRITAS,WRMKAS@#@@@@IN   .PRNTNGAS
)@@G@@/APL  @B@@@@DEF PRSEND,EDTLIT,PRALGN,PRTNAM,PRNTDS    @#@@@@IN   .FRMTNGAT
)@@G@@/APL  @A@@@@DEF FORMI,FORMD,NLINIT,NLNAME,NLFLSH@#@@@@IN   .LINEKO/APL  AU
)@@G@@@#@@@@DEF LNNEKO,LINEKO @#@@@@IN   .BUFMAN/APL  @F@@@@DEF CIOBUF,BFOLET,AV
)@@G@@LINFRS,LNFLSH,LINSTR,LINITL,LINSUS,LINRES,BUFILL@#@@@@IN   .LEXANL/APL  AW
)@@G@@@A@@@@DEF LEXANL,LEXANH,EDCMNH,LEXINI     @#@@@@IN   .LEXCAN/APL  @^@@@@AX
)@@G@@DEF LEXCAN,PWR10,UNITY  @#@@@@IN   .TEXSTO/APL  @C@@@@DEF TEXSTO,TEXCLO,AY
)@@G@@TEXERS,TEXCPY,LEXGET,LGBACK   @#@@@@IN   .SYMBOL/APL  @A@@@@DEF SYMBOL,SAZ
)@@G@@YMERS,SMCLEA,SYCOPY     @#@@@@IN   .LINEAR/APL  @H@@@@DEF PIKTWO,PIKLFT,BA
)@@G@@PIKLFU,PIKRIT,PIKRIU,PIKLFD,PIKRID,RITDMY,RITDAD,LFTDAD     @H@@@@DEF PNBB
)@@G@@TDMD,LFTDMD,RITSIZ,PNTSIZ,LFTSIZ,RITRNK,PNTRNK,LFTRNK,RITDSC,LFTDSC     BC
)@@G@@@E@@@@DEF LFTMOD,LFTDDS,RITMOD,RITDDS,PUTANS,PUTARY,GLFTBL,GRITBL @#@@@@BD
)@@G@@IN   .STACK/APL   @#@@@@DEF STKPSH,STKPOP @#@@@@IN   .MICROP/APL  @A@@@@BE
)@@G@@DEF VERIF$,FUZER$,DFLGA1,DFLGA4     @#@@@@IN   .ERASER/APL  @^@@@@DEF ERBF
)@@G@@ASEA,ERASET,ERASEV@#@@@@IN   .CODSTO/APL  @A@@@@DEF CODSTO,CODHWA,CODABTBG
)@@G@@,CODCLO     @]@@@@IN   .BITMAP@#@@@@DEF BMSCAN,BMMARK @#@@@@IN   .STORE/BH
)@@G@@APL   @#@@@@DEF STOREC,STORE  @#@@@@IN   .STORAG/APL  @H@@@@DEF BALARG,BBI
)@@G@@FLARG,BALLOG,BALLOC,BLFREE,ZRFREE,COGFCT,COFFCT,CORGET,CORCEN     @#@@@@BJ
)@@G@@IN   .RESERV/APL  @^@@@@DEF DUPE,RESERV,COMSPC  @#@@@@IN   .FUNLBL/APL  BK
)@@G@@@^@@@@DEF FUNLBC,FUNLBE,FUNLBP@#@@@@IN   .FNHXQT/APL  @#@@@@IN   .CLEAR/BL
)@@G@@APL   @^@@@@DEF CLOWEP,CLOWES,CLOWER@#@@@@IN   .XQTSUP/APL  @#@@@@DEF XQBM
)@@G@@T,XQREST    ___@@@OWEP,CLOWES,CLOWER@#@@@@IN   .*[@@@@*SDFF*@]@@@@NOT TPBN
)@@G@@F$.   @#@@@@NOT SYS$*RLIB$.   @#@@@@IN   .COMPIL/APL  @]@@@@DEF COMPIL  BO
)@@G@@@#@@@@IN   .INTERP/APL  @#@@@@DEF INTERP,STOFLG @#@@@@IN   .MIXED/APL   BP
)@@G@@@#@@@@IN   .MIXED2/APL  @#@@@@IN   .SUBSCR/APL  @#@@@@IN   .CMPOUN/APL  BQ
)@@G@@@#@@@@IN   .SORTOPS/APL @#@@@@IN   .RANDAC/APL  @#@@@@DEF BUFF,WORDPT   BR
)@@G@@@#@@@@IN   .STOPTR/APL  @#@@@@IN   .DOMINO/APL  @#@@@@IN   .DGAMMA/APL  BS
)@@G@@@]@@@@DEF DGAMMA  @^@@@@IN   .DASINCOH$/APL     @#@@@@IN   .DASINCO$/APLBT
)@@G@@@#@@@@IN   .DSINH$/APL  @#@@@@IN   .DCOSH$/APL  @#@@@@IN   .DATANH$/APL BU
)@@G@@@#@@@@IN   .DTANH$/APL  @#@@@@IN   .DTAN$/APL   @#@@@@IN   .DSQRT$/APL  BV
)@@G@@@]@@@@DEF DSQRT   @#@@@@IN   .DSINCO$/APL @#@@@@IN   .DLOG$/APL   @]@@@@BW
)@@G@@DEF DLOG    @#@@@@IN   .DEXP$/APL   @]@@@@DEF DEXP    @#@@@@IN   .DATAN$BX
)@@G@@/APL  @#@@@@IN   .FUNNYM/APL  @]@@@@DEF FUNNYM  @#@@@@IN   .FILSUP/APL  BY
)@@G@@@#@@@@DEF FILEIO,FREALL @#@@@@IN   .FILASG/APL  @#@@@@IN   .FILRWR/APL  BZ
)@@G@@@#@@@@IN   .SETUP/APL   @^@@@@DEF APL,PGVERS,PGLEVL   ___@@#)[@@LZ[[Y@@ECA
)@@G@@/K@@QAN@0@@F&'0F]S/,0F]. @G@@@;@)@@MN8Y@@@;?K@@M*[@@@@*SDFF*@]@@@@NOT TPCB
)@@G@@F$.   @#@@@@NOT SYS$*RLIB$.   @#@@@@IN   .SYSCMD/APL  @H@@@@DEF SYSCMD,SCC
)@@G@@PACES,BOUNCE,SINOFF,ERROFF,DBGLIM,ORGLIM,DIGLIM,WIDLIM,FUZLIM     @#@@@@CD
)@@G@@IN   .LODSAV/APL  @F@@@@DEF DIRECT,PREAMB,LSASG,LSMNEL,LSMGET,LSMDRP,LSMCE
)@@G@@RES,PFETBL,TIMTDF @#@@@@IN   .ACCNTG/APL  @G@@@@DEF ACCNT,ACDUMY,SACCNT,CF
)@@G@@ACMCON,UPDATE,ACFOPN,ACALOK,ACULOK,ACADNU,ACGREC@^@@@@DEF ACFCLO,ACFLGW,CG
)@@G@@ACTIVE@#@@@@IN   .COPIER/APL  @#@@@@IN   .EDLEAP/APL  @#@@@@IN   .FNHPRTCH
)@@G@@/APL  @#@@@@IN   .FUNDEF/APL  @]@@@@DEF FUNDEF  @#@@@@IN   .FHANAL/APL  CI
)@@G@@@#@@@@IN   .FUNTBL/APL  ___   S,WRMKAS,XSTAT$,CLOWES,SMCLEA @H@@@@DEF SYCJ
)@@G@@SCMD,SPACES,BOUNCE,SINOFF,ERROFF,DBGLIM,ORGLIM,DIGLIM,WIDLIM,FUZLIM     CK
)@@G@@*[@@@@*SDFF*@F@^@@       NOT   APSNAP      . NO REENTRANT DUMPS (USE X$DCL
)@@G@@UMP INSTEAD)@E@@@^NOT   APSNAP      . NO REENTRANT DUMPS (USE X$DUMP INSCM
)@@G@@TEAD) @]@^@[  NOT BEATNG@ @@@^NOT BEATNG/APL,ADRMAP/APL     @A@@@^NOT ROCN
)@@G@@OSEG/APL,SYSSEG/APL,XQTSEG/APL@#@#@[ IN TABLES/APL    @ @#@[ NOT CHRDEF/CO
)@@G@@APL,FDATBL/APL    @G@[@@       IN    MASCON      . PUT MASTER CONSOLE STCP
)@@G@@UFF AT END OF DBANK     @F@[@@  IN WHURP . ALONG WITH MASTER CONSOLE STUCQ
)@@G@@FF IN ACCOUNTING ELEMENT@F@[@@  IN LSINIT . POSITION INITIALIZATION CODECR
)@@G@@ FOR SAVE/LOAD FILE     @ @^@[IN STMAST,LSMAST,ACMAST,IBMAST@ @@@^IN STMCS
)@@G@@AST,LSMAST,ACMAST,IBMAST@ @^@[IN STINIT,LSINIT,ACINIT,CHINIT@ @@@^IN STICT
)@@G@@NIT,LSINIT,ACINIT,CHINIT@D@^@@       IN    WORKSP      . FOLLOWED BY THECU
)@@G@@ WORKSPACE  @C@@@^IN    WORKSP      . FOLLOWED BY THE WORKSPACE   @G@^@@CV
)@@G@@  IN   SETUP             . AND OVERLAY IT WITH INITIALIZATION ELEMENT   CW
)@@G@@@G@@@^IN   SETUP             . AND OVERLAY IT WITH INITIALIZATION ELEMENCX
)@@G@@T     @E@^@@       EQU   REPMAP/0    . SET FLAG, MAP IS NOT REENTRANT   CY
)@@G@@@D@@@^EQU   REPMAP/0    . SET FLAG, MAP IS NOT REENTRANT    @G@^@@  ENT CZ
)@@G@@ APL               . DON'T GET CONFUSED BY THE EXTRA REP ENTRY PT @G@@@^DA
)@@G@@ENT  APL               . DON'T GET CONFUSED BY THE EXTRA REP ENTRY PT   DB
)@@G@@@[@^@@  END @[@@@^END   ___   ___@@#(4@^^X/K@@&\/,0@&5/,0@-:/K@@&O(@@^ 5DC
)@@G@@/K@@=#R#0^H%R;)@-1/K@@F7R;@@@]%4@^^X/KF@@@R;@@@D*[@@@@*SDFF*@G@@@@. ****DD
)@@G@@***************************************************************** @G@@@@DE
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * DF
)@@G@@@G@@@@.                                                                 DG
)@@G@@    * @G@@@@       AXR$         .                                       DH
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        DI
)@@G@@                * @G@@@@       WSDEF.      DEFINE WORKSPACE             DJ
)@@G@@                      * @G@@@@WORKSP INFO  2 20.      SET ASIDE THE SPACDK
)@@G@@E                           * @G@@@@       RUNCTL.     DEFINE RUN CTRL BDL
)@@G@@LOK(S)                            * @G@@@@RUNCON INFO  2 22.      AND SEDM
)@@G@@T ASIDE ITS  SPACE                      * @G@@@@       CBLOCK           DN
)@@G@@ . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.                 DO
)@@G@@                                                    * @G@@@@. END OF STADP
)@@G@@NDARD PROC BLOCK                                          * @G@@@@. ****DQ
)@@G@@***************************************************************** @[@@@@DR
)@@G@@.     @[@@@@.     @C@@@@       STATEV  . DEFINE STATEVECTOR PARAMETERS  DS
)@@G@@@[@@@@/.    @G@@@@. THIS ENTRY TO CREATE AND LINK DESCRS AT FUNC ENTRY FDT
)@@G@@OR LOCAL VBLES    @ @@@@.     A6=POINTER TO NAMEBLOK  @[@@@@.     @#@@@@DU
)@@G@@       INSTRS .   @ @@@@CREATE* SX   X11,CRLINK  .    @B@@@@       LA   DV
)@@G@@ A0,A6       . NAMEBLOK ADDR  @C@@@@       ABSADR A0         . ABSOLUTE,DW
)@@G@@ PLEASE     @E@@@@       LA    A1,STVDPT   . CURRENT DEPTH OF STATEVECTODX
)@@G@@R     @C@@@@       JZ    A1,0        . IF NOT OK, SYSERR    @D@@@@      DY
)@@G@@ LMJ   X11,STCDSC  . GO CREATE PUSHED DOWN DESCR@A@@@@       J     CR090DZ
)@@G@@0      . OOPS--   @ @@@@       LX    X11,CRLINK  .    @ @@@@       J    EA
)@@G@@ 1,X11       .    @ @@@@CR0900 LX    X11,CRLINK  .    @ @@@@       J    EB
)@@G@@ 0,X11       .    @#@@@@       VARBLS     @ @@@@CRLINK EQUF  $,,H1      EC
)@@G@@ .    @ @@@@       RES   1           .    @#@@@@/. STORE-----     @G@@@@ED
)@@G@@.  USED AT FUNC ENTRY, FOR SPECIFICATION OPERATOR AND BY )COPY COMMAND  EE
)@@G@@@[@@@@.     @G@@@@. THIS ENTRY TO CREATE ARG   VARIABLES OF FUNCS (NAMEBEF
)@@G@@LOK ADR IN A6)    @[@@@@.     @#@@@@       INSTRS .   @ @@@@CRINIT* SX  EG
)@@G@@ X11,STLINK  .    @E@@@@       SZ    STAKFL      . TURN OFF RESULT STACKEH
)@@G@@ING FLAG    @D@@@@       LA    A0,STVDPT   . GET STATEVECTOR DEPTH COUNTEI
)@@G@@@D@@@@       JZ    A0,0        . IF DESKCALC LEVEL, SYSERR  @B@@@@      EJ
)@@G@@ J     ST0100      . ELSE GO DO IT  @[@@@@.     @A@@@@. THESE ENTRIES FOEK
)@@G@@R SPECIFICATION   @[@@@@.     @F@@@@STOREC* SZ   STAKFL      . THIS ENTREL
)@@G@@Y FROM )COPY (STACKING OFF)   @ @@@@       J    ST0010       .    @E@@@@EM
)@@G@@STORE* SX    X11,STAKFL  . SPECIFICATION ENTRY, STAK FLAG ON@[@@@@.     EN
)@@G@@@ @@@@ST0010 SX    X11,STLINK  .    @E@@@@       POP   A6          . POIEO
)@@G@@NTER TO NAMEBLOK FOR RESULT   @F@[@@       LA,U  A0,0        . SET EXPECEP
)@@G@@TED STATEVECT LEVEL TO GLOBAL @[@[@@.     @D@[@@ST0100 SA    A0,STDFLG  EQ
)@@G@@ . SAVE DEPTH/FUNCARG FLAG    @F@[@@       SA    A6,LFTDSC   . AND LEFTAER
)@@G@@RG PTR FOR GARBAGE COLLECTOR  @ @[@@       LA    A1,A6       .    @C@[@@ES
)@@G@@       ABSADR A1         . GET NAMEBLOK ABSADR  @B@[@@       LA,S1 A0,0,ET
)@@G@@A1     . GET BLOK TYPE  @G@[@@       JNE,U A0,ZTPNAM ST0900 . IF NOT NAMEU
)@@G@@E, STORING INTO TEMP; SYNTAXER@E@[@@       SA    A1,STNADR   . TEMP SAVEEV
)@@G@@ ABSADR OF NAMEBLOK     @^@[@@. EXAMINE RITEARG -     @D@[@@ST0110 VERIFEW
)@@G@@Y 0,,ST0910  . IF UNVALUED, VALUE ERROR   @F@[@@       JE,U  A2,ZTPTMP SEX
)@@G@@T0120 . CONTINUE IF ALREADY A TEMPORARY   @B@[@@       LMJ   X11,DUPE   EY
)@@G@@ . ELSE MAKE ONE  @ @[@@       J     ST0999      .    @E@[@@       LA   EZ
)@@G@@ A6,A2       . SETUP POINTER TO TEMP JUST MADE  @B@[@@       VERIFZ     FA
)@@G@@       . AND DECODE IT  @G@[@@ST0120 SAVER A0,RITDAD,8 . STASH DECODED RFB
)@@G@@ITEARG PARAMS FOR GARBCOLL    @A@[@@. ERASE OLD VALUE, IF NECESSARY     FC
)@@G@@@D@[@@ST0130 LA    A0,STNADR   . GET ABSADR OF NAME BLOK    @F@[@@      FD
)@@G@@ LA    A1,STDFLG   . AND STATEVECT DEPTH FOR NEW VARIABLE   @F@[@@      FE
)@@G@@ JNZ   A1,ST0140   . IF ENTRY TO FUNC, GO FORCE NEW DESCR   @E@[@@      FF
)@@G@@ LA,H2 A2,1,A0     . ELSE GET FWD LINK FROM NAMEBLOK  @D@[@@       JZ   FG
)@@G@@ A2,ST0140   . IF NONE, GO FORCE NEW DESCR@D@[@@       ABSADR A2        FH
)@@G@@ . ELSE MAKE TARGET ADDR ABS  @B@[@@       LA,S1 A3,0,A2     . AND GET TFI
)@@G@@YPE   @B@[@@       TE,U  A3,ZTPVAR   . NAMED VARIABLE?@G@[@@       ER   FJ
)@@G@@ ERR$        . STORE INTO FUNC NOT CAUGHT BY COMPILER!!     @C@[@@      FK
)@@G@@ LA    A6,LFTDSC   . YES, GET NAME POINTER@E@[@@       LMJ   X11,ERASEV FL
)@@G@@ . AND GET RID OF CURRENT VALUE     @D@[@@       ER    ERR$        . WHIFM
)@@G@@CH SHOULD NEVER WIPE OUT@C@[@@       LA    A0,STNADR   . RECOVER NAMEBLOFN
)@@G@@K ADDR@C@[@@       LA,H2 A1,1,A0     . AND FWD LINK OR ZERO @F@[@@      FO
)@@G@@ JZ    A1,ST0140   . IF NO DESCR LEFT BEHIND, GO FORCE ONE  @G@[@@      FP
)@@G@@ LA    A0,A1       . ELSE DUPE DESCR ADDR LEFT FOR US BY ERASER   @ @[@@FQ
)@@G@@       ABSADR A0         .    @F@[@@       J     ST0150      . GO USE THFR
)@@G@@E DESCR WE'VE ALREADY GOT     @C@[@@. CREATE UNINITIALIZED DESCR CHAINEDFS
)@@G@@ TO NAMEBLOK@ @[@@ST0140 LMJ   X11,STCDSC  .    @ @[@@       J     ST099FT
)@@G@@9      .    @[@[@@.     @G@[@@. PUT PARAMS OF COPIED TEMP INTO DESCR ANDFU
)@@G@@ GET RID OF OLD TEMP DESCR    @C@[@@ST0150 LA    A1,RITDSC   . ADDR OF IFV
)@@G@@TS DESCR    @ @[@@       ABSADR A1         .    @F@[@@       DL    A2,0,FW
)@@G@@A1     . GET 2 WDS EVEN THO 2ND MIGHT BE GARBAGE@F@[@@       DS    A2,0,FX
)@@G@@A0     . TO NAMED DESCR WHICH IS 3 WDS, ANYWAY  @A@[@@       LA,U  A2,ZTFY
)@@G@@PVAR   . SET TYPE @ @[@@       SA,S1 A2,0,A0     .    @F@[@@       SZ   FZ
)@@G@@ RITDSC      . MAKE SURE WE DON'T GARBAGE COLLECT THIS@G@[@@       RELADGA
)@@G@@R A1         . GET ADDR OF DESCR OF TEMP WE JUST RELINKED   @G@[@@      GB
)@@G@@ JN    A1,ST0160   . AND DON'T FREE IT IF IT WAS A DUMMY DESCR    @E@[@@GC
)@@G@@       LOADR A3,RITMOD,2 . GET MODE AND RANK OF THIS VBLE   @E@[@@      GD
)@@G@@ LA,U  A0,2        . MOST DESCRIPTORS ARE LENGTH 2    @D@[@@       TNE,UGE
)@@G@@ A4,ZRANKS   . WAS THE VARIABLE A SCALAR? @E@[@@       LA,U  A0,1       GF
)@@G@@ . YES, SCALAR DESCRS ARE LENGTH 1  @F@[@@       FREE              . ANDGG
)@@G@@ GET RID OF DESCR USED BY THE TEMP  @[@[@@.     @F@[@@. FOR TRUE REPLACEGH
)@@G@@MENT, LEAVE A TEMPORARY ON TOP OF THE STACK--   @[@[@@.     @C@[@@ST0160GI
)@@G@@ TNZ   STAKFL      . STACKING FLAG ON?    @B@[@@       J     ST0170     GJ
)@@G@@ . NO, WE'RE DONE @G@[@@        LA    A6,LFTDSC  . GET POINTER TO RESULTGK
)@@G@@ OF THE OP (NAMEBLOK)   @F@[@@       LMJ   X11,DUPE    . MAKE ANOTHER COGL
)@@G@@PY TO STACK AS RESULT   @ @[@@       J     ST0999      .    @B@[@@      GM
)@@G@@ PUSH  A2          . AND POST RESULT@[@[@@.     @B@[@@ST0170 LX    X11,SGN
)@@G@@TLINK  . NORMAL EXIT    @ @[@@       J     1,X11       .    @F@@@[      GO
)@@G@@  LA,U   A0,0           . CLEAR FUNC ARG INITIALIZATION FLAG@[@@@[.     GP
)@@G@@@G@@@[ST0100  SA     A0,STFUNI      . REMEMBER IF WE'RE INITIALIZING A FGQ
)@@G@@UNARG @F@@@[        LA     A1,A6          . GET DESCR ADDR OF RECEIVING GR
)@@G@@NAME  @G@@@[        SA     A6,LFTDSC      . POST FOR GARBAGE COLL IN CASGS
)@@G@@E ERROR     @G@@@[        ABSADR A1             . MAKE LAFTARG NAMEBLOK GT
)@@G@@ADDR ABSOLUTE     @D@@@[        LA,S1  A2,0,A1        . GET ITS BLOCK TYGU
)@@G@@PE    @G@@@[        JNE,U  A2,ZTPNAM ST0900    . BE SURE WE'RE NOT STORIGV
)@@G@@NG INTO TEMP@F@@@[        SA     A1,STNADR      . SAVE ABSOLUTE ADDR OF GW
)@@G@@NAMEBLOK    @G@@@[. DETERMINE LOCAL/GLOBAL PROPERTIES OF RESULT AND ITS GX
)@@G@@NAMECHAIN LINKAGE @E@@@[ST0110  LA,H2  A2,1,A1        . GET FWD LINK FROGY
)@@G@@M NAMEBLOK  @G@@@[        JZ     A2,ST0130      . IF NONE, USE INPUT LEVGZ
)@@G@@EL, NAMEBLOK LINK @E@@@[        AU,U   A2,0,WSTAG     . GET TARGET DESCRHA
)@@G@@IPTOR ADDR  @G@@@[        JNZ    A0,ST0120      . IF FUNC ENTRY GO VALIDHB
)@@G@@ATE THE PUSHDOWN  @F@@@[        LA     A2,2,A3        . REPLACEMENT: GETHC
)@@G@@ PRESENT LINK WORD@F@@@[        J      ST0135         . AND GO SAVE FOR HD
)@@G@@USE IN NEW COPY   @C@@@[. WE'RE CREATING THE ARGUMENT OF A FUNCTION     HE
)@@G@@@G@@@[ST0120  TNE,H1 A0,2,A3        . IS CREATION LEVEL SAME AS TARGET CHF
)@@G@@LOK?  @G@@@[        J      ST0900         . YES, 2 ARGS WITH SAME NAME IHG
)@@G@@S SYNTAXERR @F@@@[        TLE,H1 A0,2,A3        . IS TARGET BLOK OF LOWEHH
)@@G@@R LEVEL?    @E@@@[        ER     ERR$           . NO, NAMECHAIN IS FOULEHI
)@@G@@D UP  @E@@@[ST0130  LXI,U  A2,0,A0        . COMBINE LEVEL WITH POINTER  HJ
)@@G@@@D@@@[ST0135  SA     A2,STPWRD      . AND STASH POINTER WORD@D@@@[. CREAHK
)@@G@@TE A COPY OF THE RITEARG FOR USE AS TH E RESULT @F@@@[ST0140  POP    A6 HL
)@@G@@            . GET DESCR POINTER OFF THE STACK   @F@@@[        SA     A6,HM
)@@G@@RITDSC      . AND POST FOR GARBAGE COLLECTOR    @G@@@[        LX,U   X11HN
)@@G@@,DUPEL      . ASSUME WE'RE TO CREATE A LOCAL VARIABLE @E@@@[        TNZ HO
)@@G@@   STLEVL         . DOES LEVEL INDICATE LOCAL?  @F@@@[        LX,U   X11HP
)@@G@@,DUPEG      . NO, CHANGE TO A GLOBAL ALLOCATION @G@@@[        LMJ    X11HQ
)@@G@@,0,X11      . CUPLICATE THE RITEARG INTO A GLOBAL     @A@@@[        J   HR
)@@G@@   ST0999         .     @F@@@[        SA     A2,LFTDSC      . SAVE POINTHS
)@@G@@ER TO NEW COPY OF DATA  @F@@@[        ABSADR A2             . MAKE DESCRHT
)@@G@@IPTOR ADDR ABSOLUTE     @G@@@[        LA     A3,STPWRD      . GET FOWARDHU
)@@G@@ POINTE R WD WE BUILT ABOVE   @F@@@[        SA     A3,2,A2        . AND HV
)@@G@@CRAM IT INTO WD3 OF THE DSCR  @C@@@[. SET NAMEBLOK LINK, ERASE OLD VALUEHW
)@@G@@, IF ANY    @E@@@[ST0150  LA     A0,STNADR      . RECOVER ADDR OF NAMEBLHX
)@@G@@OK    @E@@@[        LA,H2  A1,1,A0        . GET OLD FWD LINK FROM IT    HY
)@@G@@@E@@@[        JZ     A1,ST0160      . IF NONE, NOTHING TO ERASE   @G@@@[HZ
)@@G@@        TZ     STFUNI         . ARE WE INITIALIZING A FUNC ARGUMENT?    IA
)@@G@@@F@@@[        J      ST0160         . YES, PUSHDOWN MEANS NO ERASURE    IB
)@@G@@@G@@@[        ABSADR A1             . GET A REAL POINTER TO THE OLD DESCIC
)@@G@@RIPTOR@G@@@[        SZ     2,A1           . FAKE GLOBAL SO ERASER WILL ZID
)@@G@@AP IT ALL   @G@@@[        LA,H2  A6,1,A0        . RECOVER ITS RELADR FROIE
)@@G@@M THE NAMEBLOK    @G@@@[        LMJ    X11,ERASEV     . AND ERASE VALUE IF
)@@G@@AND DESCRIPTOR OF IT    @G@@@[        ER     ERR$           . WE SHOULD IG
)@@G@@NEVER ERROR WHILE ERASING     @E@@@[        LA     A0,STNADR      . RECOIH
)@@G@@VER ADDR OF NAMEBLOK    @F@@@[ST0160  LA     A6,LFTDSC      . RECOVER POII
)@@G@@INTER TO COPY WE MADE   @E@@@[        SA,H2  A6,1,A0        . CRAM IT INIJ
)@@G@@TO ITS NAMEBLOK   @F@@@[        SZ     LFTDSC         . THEN CLEAR GARBAIK
)@@G@@GE COLLECTION FLAG@B@@@[. NOW DISPOSE OF THE RITEARG, IF NECESSARY@D@]@[IL
)@@G@@ST0200  LA     A6,RITDSC      . GET DESCR POINTER     @G@]@[        TNZ IM
)@@G@@   STFUNI         . ARE WE INITIALIZEING THE ARG OF A FUNC? @F@@@]ST0200IN
)@@G@@  TZ     STAKFL         . SHOULD RITEARG BE LEFT BEHIND?    @F@]@[      IO
)@@G@@  J      ST0205         . NO, GO CHECK FOR SPECIFICATION    @F@@@]      IP
)@@G@@  J      ST0205         . YES, GO MAKE SURE ITS TEMPORARY   @D@@@]      IQ
)@@G@@  LA     A6,RITDSC      . NO, GET DESCR POINTER @G@@@[        LMJ    X11IR
)@@G@@,ERASET     . IF ITS TEMPORARY, RELEASE ITS SPACE     @E@@@[        ER  IS
)@@G@@   ERR$           . ERASURE BETTER NOT FAIL     @E@@@[        J      ST0IT
)@@G@@220         . THEN GO MARK IT AS GONE     @E@]@[ST0205  TNZ    STAKFL   IU
)@@G@@      . IS A RESULT TO BE STACKED?  @C@]@[        J      ST0300         IV
)@@G@@. NO, WE'RE DONE  @G@]@[        LA     A2,A6          . PUT DESCR RELAD IW
)@@G@@WHERE WE CAN USE IT     @G@@@]ST0205  LA     A2,RITDSC      . PUT DESCR IX
)@@G@@RELAD WHERE WE CAN USE IT     @E@@@[        AU,U   A2,0,WSTAG     . GET IY
)@@G@@ITS ABSOLUTE ADDRESS    @F@@@[        LA,S1  A0,0,A3        . GET TYPE OIZ
)@@G@@F RITEARG FROM ITS DESCR@E@@@[        TNE,U  A0,ZTPTMP      . IS IT ALREJA
)@@G@@ADY A TEMPORARY?  @E@@@[        J      ST0210         . YES, GO STACK ITJB
)@@G@@ BACK AGAIN @F@@@[        LMJ    X11,DUPE       . NO, MAKE A TEMPORARY CJC
)@@G@@OPY OF IT   @A@@@[        J      ST0999         .     @D@@@[ST0210  PUSHJD
)@@G@@   A2             . STACK THE FINAL RESULT@G@@@[ST0220  SZ     RITDSC   JE
)@@G@@      . MARK RITEARG ALREADY GARBAGE COLLECTED  @[@@@[.     @C@@@[ST0300JF
)@@G@@  LX     X11,STLINK     . NORMAL EXIT     @A@@@[        J      1,X11    JG
)@@G@@      .     @[@@@@.     @F@@@@ST0900 ERROR YSYNTA,ST0999    . TRYING TO JH
)@@G@@STORE INTO A TEMPORARY  @E@@@@ST0910 ERROR YVALUE,ST0999    . RIGHT ARG JI
)@@G@@NOT INITIALIZED   @ @@@@ST0999 LX    X11,STLINK  .    @ @@@@       J    JJ
)@@G@@ 0,X11       .    @[@@@@.     @#@[@@       VARBLS     @ @[@@STLINK EQUF JK
)@@G@@ $,,H1       .    @ @[@@STAKFL EQUF  $,,H2       .    @#@[@@       RES  JL
)@@G@@ 1    @ @[@@STDFLG EQUF  $,,H1       .    @ @[@@STNADR EQUF  $,,H2      JM
)@@G@@ .    @#@[@@       RES   1 .  @#@@@[        VARBLS .  @A@@@[STLINK  EQUFJN
)@@G@@   $,,H1          .     @F@@@[STAKFL  EQUF   $,,H2          . ON IF RESUJO
)@@G@@LT SHOULD BE STACKED    @A@@@[        RES    1              .     @F@@@[JP
)@@G@@STFUNI  EQUF   $,,H1          . ON IF INITIALIZATION OF A FUNC ARG@F@@@[JQ
)@@G@@STNADR  EQUF   $,,H2          . ABS ADDR OF NAMEBLOK OF RESULT    @A@@@[JR
)@@G@@        RES    1              .     @G@@@[STPWRD  RES    1              JS
)@@G@@. POINTER WD- BECOMES WD 3 OF RESULT DESCR@C@@@[STLEVL  EQUF   STPWRD,,HJT
)@@G@@1     . LEVEL OF RESULT @G@@@@/. CREATE AND LINK DESCR - A0=ABSADR OF NAJU
)@@G@@MEBLOK, A1=FUNC NESTING LEVEL @D@@@@.      AT EXIT, A0,A1= ABS,REL ADDRSJV
)@@G@@ OF NEW DESCR     @#@@@@       INSTRS .   @ @[@@STCDSC* SX   X11,SCLINK JW
)@@G@@ .    @ @@@[STCDSC  SX   X11,SCLINK  .    @C@@@@       SA    A0,SCNADR  JX
)@@G@@ . SAVE NAMEBLOK ADDR   @D@@@@       SA    A1,SCFNES   . AND FUNC NESTINJY
)@@G@@G DEPTH     @D@@@@       ALLOCT,U 3 SC0900 . GET SPACE FOR THE DESCR    JZ
)@@G@@@D@@@@       LA    A0,A1       . DUPE RELAD OF NEW BLOK     @D@@@@      KA
)@@G@@ ABSADR A0         . AND SET UP TO ACCESS IT    @D@@@@       LA    A2,SCKB
)@@G@@NADR   . ABS ADDR OF NAME BLOCK     @F@@@@       LA,H2 A3,1,A2     . GETKC
)@@G@@ CURRENT FWD LINK FROM NAMEBLOK     @D@@@@       LXI   A3,SCFNES   . ANDKD
)@@G@@ FUNC NESTING DEPTH     @D@@@@       SA    A3,2,A0     . SET WORD 3 OF NKE
)@@G@@EW DESCR    @E@@@@       DL    A3,SCUNSK   . GET UNINITIALIZED SKELETON KF
)@@G@@DESCR @B@@@@       DS    A3,0,A0     . TO NEW DESCR   @E@@@@       SA,H2KG
)@@G@@ A1,1,A2     . ADDR OF THIS DESCR TO NAMEBLOK   @ @@@@       LX    X11,SKH
)@@G@@CLINK  .    @ @@@@       J     1,X11       .    @ @@@@SC0900 ERROR YWSFUKI
)@@G@@L      .    @ @@@@       LX    X11,SCLINK  .    @ @@@@       J     0,X11KJ
)@@G@@       .    @ @@@@       VARBLS            .    @ @@@@SCLINK EQUF  $,,H1KK
)@@G@@       .    @E@@@@SCNADR EQUF  $,,H2       . TEMP SAVE ABSADR OF NAMEBLOKL
)@@G@@CK    @ @@@@       RES   1           .    @D@@@@SCFNES EQUF  $,,H1      KM
)@@G@@ . TEMPSAVE FUNC NESTING DEPTH@ @@@@       RES   1           .    @#@@@@KN
)@@G@@       VARCON     @G@@@@SCUNSK CBLOCK ZTPVAR,0,0,0 0  . SKELETON DESCR FKO
)@@G@@OR UNINITIALIZED VALUE  @[@@@@.     @]@@@@       END .___ COPY OF DATA  KP
)@@G@@@F@@@[        ABSADR A2             . MAKE DESCRIPTOR ADDR ABSOLUTE     KQ
)@@G@@@G@@@[        LA     A3,STPWRD      . GET FOWARD*[@@@@*SDFF*@G@@@@. ****KR
)@@G@@***************************************************************** @G@@@@KS
)@@G@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APL IN SOURCE DECKS     * KT
)@@G@@@G@@@@.                                                                 KU
)@@G@@    * @G@@@@       AXR$         .                                       KV
)@@G@@          * @G@@@@       CONFIG  .    DEFINE ASSEMBLY PARAMETERS        KW
)@@G@@                * @G@@@@       APSYMB.     DEFINE APL SYMBOL SET        KX
)@@G@@                      * @G@@@@       FDSYMB.     DEFINE FIELDATA SYMBOLSKY
)@@G@@                            * @G@@@@       WSDEF.      DEFINE WORKSPACE KZ
)@@G@@                                  * @G@@@@WORKSP INFO  2 20.      SET ASLA
)@@G@@IDE THE SPACE                           * @G@@@@       RUNCTL.     DEFINLB
)@@G@@E RUN CTRL BLOK(S)                            * @G@@@@RUNCON INFO  2 22.LC
)@@G@@      AND SET ASIDE ITS  SPACE                      * @G@@@@       CBLOCLD
)@@G@@K            . DEFINE CONTROL BLOCK TYPES                 * @G@@@@.     LE
)@@G@@                                                                * @G@@@@LF
)@@G@@. END OF STANDARD PROC BLOCK                                          * LG
)@@G@@@G@@@@. ****************************************************************LH
)@@G@@***** @[@@@@.     @[@@@@.     @E@@@[        BRIEF  . UOM ASSEMBLER ONLY,LI
)@@G@@ REMOVE AT OTHER SITES  @#@@@@       STATEV .   @F@@@@       FUZDEF     LJ
)@@G@@       . DEFINE FUZZ PARAMS FOR USE BY )CLEAR   @[@@@@.     @]@@@@      LK
)@@G@@ IODEF@F@@@@P      PROC              . GENERATE ENTRYS IN SYSTEM COMMANDLL
)@@G@@ TABLE@ @@@@SYSCMD* NAME             .    @ @@@@       UNLI$T           LM
)@@G@@ .    @F@@@@       APLBCI P(1,1)     . FIRST WORD CONTAINS COMMAND IN INLN
)@@G@@TERNAL@H@@@@       +     P(3,1),P(1,2) . ADDRESS TO GO FOR NO-SCAN COMDSLO
)@@G@@,OTHERWISE ADDRESS@[@@@@.     @G@@@@. FIELDS ARE:  FUNC DEF INDICATOR,UNLP
)@@G@@QUOTE INDICATOR,LIB#,WSNAME,KEY,LIST@E@@@@. IF FIELD IS ZERO AND CONDITILQ
)@@G@@ON EXISTS, COMMAND IS IN ERROR@[@@@@.     @E@@@@       +     P(4,1),P(4,LR
)@@G@@2),P(2,1),P(2,2),P(2,3),P(2,4) .    @ @@@@       LI$T              .    LS
)@@G@@@^@@@@       END             .@[@[@@.     @#@[@@P      PROC  .    @D@[@@LT
)@@G@@DEFVAL* NAME             . DEFINE RANGE FOR COMMAND   @H@[@@            LU
)@@G@@             . P(1,1)=LOW VALUE, P(1,2)=HIGHVALUE P(2,1)=ADDR     @ @[@@LV
)@@G@@       UNLI$T            .    @ @[@@       +     P(1,1),P(1,2)+1  @ @[@@LW
)@@G@@       L     A1,P(2,1)   .    @ @[@@       S     A2,P(2,1)   .    @#@[@@LX
)@@G@@       LI$T  .    @ @[@@       END               .    @[@@@@.     @ @@@@LY
)@@G@@P      PROC              .    @ @@@@PUT*   NAME              .    @ @@@@LZ
)@@G@@       UNLI$T            .    @A@@@@       L,P(0,1) A1,P(1,1),P(1,2)    MA
)@@G@@@ @@@@       LMJ   X2,0,X2     .    @ @@@@       LI$T              .    MB
)@@G@@@ @@@@       END               .    @[@@@@.     @E@@@@C      PROC  . SCAMC
)@@G@@N COMMAND -- EXITS ARE: OPR,NAME,LIT ERR  @#@@@@CSCAN* NAME  .    @#@@@@MD
)@@G@@       UNLI$T .   @E@@@@       LX    X2,SYLEX2   . RESTORE POINTERS USEDME
)@@G@@ BY LEXCAN  @ @@@@       LX    X3,SYLEX3   .    @A@@@]        LA     A15MF
)@@G@@,SYLA15     .     @ @@@@       LMJ   X11,LEXCAN  .    @ @@@@       J    MG
)@@G@@ C(2,1)      .    @D@@@@       SX    X2,SYLEX2   . SAVE NEW LEXCAN POINTMH
)@@G@@ERS   @ @@@@       SX    X3,SYLEX3   .    @E@@@@       SA    A0,SYLCHR  MI
)@@G@@ . SAVE CHAR WHICH TERMINATED SCAN  @A@@@]        SA     A15,SYLA15     MJ
)@@G@@.     @F@@@@       SA    A2,SYNSIZ   . AND IN CASE WE GOT A NAME, ITS LEMK
)@@G@@NGTH  @C@@@@       COMJMP A1,C(1,3) 0,C(1,1) 1,C(1,2) .     @#@@@@      ML
)@@G@@ LI$T .     @]@@@@       END .@B@@@@/. RECOGNIZE AND PROCESS SYSTEM COMMMM
)@@G@@ANDS  @#@@@@       INSTRS.    @F@@@@SYSCMD*.  ENTER HERE FROM DRIVER AFTMN
)@@G@@ER LEXCAN HAS SEEN ')'---     @ @@@@       S     X11,SYLINK  .    @C@@@@MO
)@@G@@       DL    A0,SYBPAR   . GET BUF MOVE PARAMS  @E@@@@       LXM,U A1,0,MP
)@@G@@X3     . SET 'FROM' TO CURRENT SCAN WORD  @D@@@@       LXM,U X3,0,A0    MQ
)@@G@@ . AND POST LOCN OF NEW IMAGE @A@@@@       LR,U  R1,SYBSIZ   . AND SIZE MR
)@@G@@@G@@@@       BT    A0,0,*A1    . MOVE IMAGE OUT OF CONSOL I/O BUF TO SCAMS
)@@G@@N     @D@@@@       SX    X2,SYLEX2   . INITIALIZE LEXCAN POINTERS @ @@@@MT
)@@G@@       SX    X3,SYLEX3   .    @A@@@]        SA     A15,SYLA15     .     MU
)@@G@@@G@@@@       CSCAN SY0920,SY0100,SY0010 SY0940 . SCAN FOR NAME OF COMMANMV
)@@G@@D     @C@@@@. LIT DETECTED.. HE MUST THINK THIS IS A 360--- @E@@@@SY0010MW
)@@G@@ SEND  'ALREADY SIGN','ED ON       ' . SURPRISE HIM   @C@@@@       J    MX
)@@G@@ SY0500      . AND THEN GET OUT     @#@@@@       CONSTS.    @[@@@@.     MY
)@@G@@@G@@@@. TABLE OF DEFINED COMMANDS   P(1,2)= ADDR AT WHICH TO TRANSFER COMZ
)@@G@@NTROL @H@@@@. TO PROCESS COMMAND, IF BLANK, STATEMENT NEEDS NO SCAN.  TRNA
)@@G@@ANSFER ADDRESS    @F@@@@. IS THEN IN P(3,1).  FIELDS ARE  LIB#,WSNAME,KENB
)@@G@@Y,START OF LIST   @[@@@@.     @]@@@@CTABLE.     @C@@@@F      EQU   0    NC
)@@G@@       . FIELD IS FORBIDDEN   @C@@@@O      EQU   1           . FIELD IS ND
)@@G@@OPTIONAL    @C@@@@R      EQU   2           . FIELD IS REQUIRED    @E@@@@NE
)@@G@@CLEA   SYSCMD 'CLEA',CL0100 O,F,F,F 0      O,O . )CLEAR     @D@@@@SI    NF
)@@G@@ SYSCMD 'SI  ',SI0100 F,F,F,F 0      O,F . )SI  @E@@@@RESE   SYSCMD 'RESNG
)@@G@@E',RE0100 F,F,F,F 0      F,F . )RESET     @D@@@@SIV    SYSCMD 'SIV ',SI0NH
)@@G@@110 F,F,F,F 0      O,F . )SIV @E@@@@CONT   SYSCMD 'CONT',OF0100 F,O,O,F NI
)@@G@@0      F,F . )CONTINUE  @D@@@@WSID1  SYSCMD 'WSID',WS0100 F,O,F,F 0     NJ
)@@G@@ O,F . )WSID@D@@@@OFF    SYSCMD 'OFF ',OF0100 F,O,O,F 0      F,F . )OFF NK
)@@G@@@D@@@@GRPS   SYSCMD 'GRPS',GR0100 F,O,F,F 0      O,F . )GRPS@D@@@@FNS   NL
)@@G@@ SYSCMD 'FNS ',FN0100 F,O,F,F 0      O,F . )FNS @E@@@[FLIS   SYSCMD 'FLINM
)@@G@@S',FL0100 F,O,F,F 0      F,F . )FLIST     @D@@@@VARS   SYSCMD 'VARS',VR0NN
)@@G@@100 F,O,F,F 0      O,F . )VARS@D@@@@DROP   SYSCMD 'DROP',DR0100 O,R,O,F NO
)@@G@@0      O,F . )DROP@D@@@@LOAD   SYSCMD 'LOAD',LO0100 O,R,O,F 0      O,O .NP
)@@G@@ )LOAD@G@@@[TLOAD  SYSCMD 'TLOA',TL0100 O,R,O,F 0      O,O . )TLOAD (FRONQ
)@@G@@M TPF$)     @F@@@[TSAVE  SYSCMD 'TSAV',TS0100 O,O,O,F 0      F,F . )TSAVNR
)@@G@@E (TO TPF$) @D@@@@SAVE   SYSCMD 'SAVE',SA0100 O,O,O,F 0      F,F . )SAVENS
)@@G@@@D@@@@LIB    SYSCMD 'LIB ',LB0100 O,F,F,F 0      O,F . )LIB @E@[@@ORIG  NT
)@@G@@ SYSCMD 'ORIG',OR0100 R,F,F,F 0      F,F . )ORIGIN    @E@[@@DIGI   SYSCMNU
)@@G@@D 'DIGI',DI0100 R,F,F,F 0      F,F . )DIGITS    @E@[@@WIDT   SYSCMD 'WIDNV
)@@G@@T',WI0100 R,F,F,F 0      F,F . )WIDTH     @D@[@@FUZZ   SYSCMD 'FUZZ',FZ0NW
)@@G@@010 R,F,F,F 0      F,F . )FUZZ@E@@@@GROU   SYSCMD 'GROU'        0       NX
)@@G@@UNIMPL F,F . )GROUP     @E@@@@ERAS   SYSCMD 'ERAS'        0       ER0100NY
)@@G@@ F,F . )ERASE     @D@@@@GRP    SYSCMD 'GRP ',UNIMPL F,R,F,F 0      F,F .NZ
)@@G@@ )GRP @D@@@@COPY   SYSCMD 'COPY',CO0100 O,R,O,O 0      F,F . )COPY@E@[@@OA
)@@G@@PCOP   SYSCMD 'PCOP',CO0110 O,R,O,O 0      F,F . )PCOPY     @E@@@[PCOP  OB
)@@G@@ SYSCMD 'PCOP',PC0100 O,R,O,O 0      F,F . )PCOPY     @D@[@@PACK   SYSCMOC
)@@G@@D 'PACK',CO0125 F,F,F,F 0      F,F . )PACK@D@@@[PACK   SYSCMD 'PACK',PA0OD
)@@G@@100 F,F,F,F 0      F,F . )PACK@D@@@@OPR    SYSCMD 'OPR '        0       OE
)@@G@@OP0100 O,F . )OPR @B@@@@OPRN   SYSCMD 'OPRN'        0       OP0110@D@@@[OF
)@@G@@HI     SYSCMD 'HI  '        0       HI0010 F,F . )HI  @E@[@@SYMB   SYSCMOG
)@@G@@D 'SYMB',SS0100 R,F,F,F 0      F,F . )SYMBOLS   @E@[@@DEBU   SYSCMD 'DEBOH
)@@G@@U',DB0100 R,F,F,F 0      O,F . )DEBUG     @C@@@[. COMMANDS AFFECTING THEOI
)@@G@@ WORKSPACE ENVIRONMENT  @E@@@[DEBU   SYSCMD 'DEBU',DB0100 O,F,F,F 0     OJ
)@@G@@ O,O . )DEBUG     @E@@@[ORIG   SYSCMD 'ORIG',OR0100 O,F,F,F 0      O,O .OK
)@@G@@ )ORIGIN    @E@@@[DIGI   SYSCMD 'DIGI',DI0100 O,F,F,F 0      F,O . )DIGIOL
)@@G@@TS    @E@@@[WIDT   SYSCMD 'WIDT',WI0100 O,F,F,F 0      O,O . )WIDTH     OM
)@@G@@@E@@@[SYMB   SYSCMD 'SYMB',SS0100 O,F,F,F 0      F,F . )SYMBOLS   @D@@@[ON
)@@G@@FUZZ   SYSCMD 'FUZZ',FZ0100 O,F,F,F 0      O,O . )FUZZ@E@@@[WSIZ   SYSCMOO
)@@G@@D 'WSIZ',WZ0100 O,F,F,F 0      O,O . )WSIZE     @E@@@[. COMMANDS FOR SPEOP
)@@G@@CIAL 1100 SERIES FUNCTIONAL CAPABILITIES  @E@@@[RESUME SYSCMD 'RESU',AP0OQ
)@@G@@100 F,F,F,F 0      O,F . )RESUME    @D@@@[SITE   SYSCMD 'SITE',AP0200 F,OR
)@@G@@O,F,F 0      O,F . )SITE@E@@@[CSITE  SYSCMD 'CSIT',AP0300 F,O,F,F 0     OS
)@@G@@ O,F . )CSITE     @D@@@[EDIT   SYSCMD 'EDIT'        0       ED0010 F,F .OT
)@@G@@ )EDIT@D@@@@CMDCNT EQU   ($-CTABLE)/3 . NUMBER OF DEFINED COMMANDS@[@@@@OU
)@@G@@.     @ @@@@SYBPAR +1,SYBUFR         .    @D@@@@       +1,$-$           OV
)@@G@@ . FROM ADDR LOADED FROM X3   @#@@@@       VARBLS  .  @C@@@@SYBCHR EQU  OW
)@@G@@ 132         . BUF SIZE IN CHARS    @B@@@@SYBSIZ EQU   SYBCHR//4   . ANDOX
)@@G@@ IN WORDS   @G@@@@SYBUFR RES   SYBSIZ      . BUF FROM WHICH SYSTEM COMMAOY
)@@G@@NDS ARE SCANNED   @H@@@@       +AEOL,AEOL,AEOL,AEOL        . FOR GOOD LUOZ
)@@G@@CK TO GUARANTEE TERMINATION   @[@@@@/.    @F@@@@. SCAN COMMAND FOR FIELDPA
)@@G@@S, REJECT IT IF FORBIDDEN FIELDS APPEAR   @[@@@@.     @[@@@@.     @A@@@@PB
)@@G@@.      POSSIBLE STATES DURING SCAN  @[@@@@.     @D@@@@.      )COMMAND   PC
)@@G@@LIB#   WSNAME   :   KEY   LISTITEM  @D@@@@.               ^      ^      PD
)@@G@@  ^   ^     ^          ^@[@@@@.     @D@@@@.               0      1      PE
)@@G@@  2   3     4          5@[@@@@.     @ @@@@       INSTRS            .    PF
)@@G@@@]@@@@SY0100.     @ @@@@       L     X11,(3,CTABLE-3) @D@@@@       L    PG
)@@G@@ A4,WORDPT   . GET 1ST 4 CHARS OF CMD     @C@@@@       L,U   R1,CMDCNT  PH
)@@G@@ . # OF DEFINED COMMANDS@C@@@@       SE    A4,3,*X11   . SEARCH FOR COMMPI
)@@G@@AND   @B@@@@       J     SY0920      . UNKNOWN COMMAND@D@@@@       S    PJ
)@@G@@ X11,INDEX   . SAVE COMMAND TABLE INDEX   @A@@@@       S     A0,A6      PK
)@@G@@ . SAVE A0  @C@@@@       L,Q1  A0,WSTATE   . GET CURRENT STATE    @D@@@@PL
)@@G@@       COMJMP A0,SY0960  ; IF NONE OF THESE, SYSERR   @F@@@@       STSUSPM
)@@G@@P,SY0105 STEVAL,SY0105 ; NEED NO SPECIAL TREATMENT    @I@@@@       STUNQPN
)@@G@@U,SY0101 STFUNC,SY0103 . UNQUOTE MODE & FUNC DEF MODE NEEDS CHECKING    PO
)@@G@@@]@@@@SY0101.     @C@@@@       L,S2  A5,2,X11    . GET LEGALITY FLAG    PP
)@@G@@@D@@@@       JNB   A5,SY0950   . IF NOT LEGAL, DOMAIN ERROR @E@@@@      PQ
)@@G@@ J     SY0105      . IF OK, TREAT AS NORMAL SYSCMD    @]@@@@SY0103.     PR
)@@G@@@C@@@@       L,S1  A5,2,X11    . GET LEGALITY FLAG    @C@@@@       JNB  PS
)@@G@@ A5,SY0970   . IF NOT OK , ERROR    @]@[@@SY0105.     @B@[@@       L    PT
)@@G@@ A0,A6       . RESTORE A0     @[@@@[.     @D@@@[. COMMAND IS LEGAL IN THPU
)@@G@@E PRESENT PROCESSOR STATE     @A@@@[. INITIALIZE SCAN OF REMAINDER OF ITPV
)@@G@@@[@@@[.     @G@@@[SY0105  LA     A0,A6          . RESTORE CHAR WHICH CAUPW
)@@G@@SED SCAN TERMINATE@E@@@[        SNA    A0,CLIBH       . MARK LIBNO NOT HPX
)@@G@@ALFINT (YET)@ @@@@       TZ,H1 1,X11       .    @D@@@@       J     SY023PY
)@@G@@0      . STATEMENT NEEDS NO SCANNING@F@@@@       DL    A5,RCLIBN   . INIPZ
)@@G@@TIALIZE ACCNT # TO CURRENT ACCNT #  @ @@@@       DS    A5,CLIBN    .    QA
)@@G@@@ @@@@       SZ    NUMFLG      .    @ @@@@       TLD   A5,SPACES   .    QB
)@@G@@@D@@@@       TSTO  A5,CWSNM    . INITIALIZE WSNAME TO SPACES@B@@@@      QC
)@@G@@ DS    A5,CKEY     . AND KEY ALSO   @F@@@@       SZ    STATE       . SETQD
)@@G@@ STATE TO ZERO, (NOTHING FOUND YET )@[@@@@.     @ @@@@. CHECK TERMINATINQE
)@@G@@G CHARACTER @[@@@@.     @C@@@@SY0110 JE,U  A0,ACOLON SY0130      . FOUNDQF
)@@G@@ COLON@D@@@@       JE,U  A0,AEOL   SY0225      . FOUND END-OF LINE@D@@@@QG
)@@G@@       JE,U  A0,ALAMP  SY0225      . LAMP EQU EOL     @E@@@@       JE,U QH
)@@G@@ A0,ASPACE SY0140      . FOUND BLANK, IGNORE IT @D@@@@       J     SY091QI
)@@G@@0      . ANYTHING ELSE IS ILLEGAL   @[@@@@.     @^@@@@. TERMINATING CHARQJ
)@@G@@ WAS :@[@@@@.     @ @@@@SY0130 L     A5,STATE    .    @C@@@@       JLE,UQK
)@@G@@ A5,3 SY0910 . :'S ARE ILLEGAL HERE @C@@@@       L     X11,INDEX   . GETQL
)@@G@@ TABLE POINTER    @E@@@@       TNZ,S5 2,X11      . KEYS NOT ALLOWED ON TQM
)@@G@@HIS COMMAND @ @@@@       J     SY0910      .    @ @@@@       L,U   A5,3 QN
)@@G@@       .    @ @@@@       S     A5,STATE    .    @C@@@@       J     SY014QO
)@@G@@0      . GO GET NEXT ITEM     @[@@@@.     @ @@@@. PICK UP ITEM, BRANCH OQP
)@@G@@N TYPE@[@@@@.     @ @@@@SY0140 TLD   A5,SPACES   .    @D@@@@       TSTO QQ
)@@G@@ A5,WORDPT   . INITIALIZE NAME TO SPACES  @B@@@@       CSCAN SY0110,SY01QR
)@@G@@50,SY0210 SY0910 .@[@@@@.     @B@@@@. FOUND A NAME, SEE IF IT BELONGS HEQS
)@@G@@RE    @[@@@@.     @D@@@@SY0150 JNZ   A3,SY0910   . SPECIAL NAMES ARE ILLQT
)@@G@@EGAL  @ @@@@       L     A5,STATE    .    @D@@@@       JG,U  A5,2  SY016QU
)@@G@@0          . MUST BE WSNAME   @C@@@@       JE,U  A5,3  SY0170          .QV
)@@G@@ MUST BE KEY@C@@@@       L     X11,INDEX   . GET TABLE POINTER    @B@@@@QW
)@@G@@       L     A3,0,X11    . GET COMMAND    @G@@@@       JE,U  A5,2 SY0155QX
)@@G@@ . IF SCANNING AFTER A WSNAME, GO CHECK )COPY   @G@@@@       JNE,U A5,4 QY
)@@G@@SY0160 . IF NOT AFTER A KEY EITHER, TREAT AS A WSNAME @[@@@@.     @E@@@@QZ
)@@G@@. NAME APPEARS AFTER KEY OR WSNAME-- MUST BE )COPY OR )PCOPY@[@@@@.     RA
)@@G@@@F@@@@SY0155 LA,U  A5,5        . GET STATE FOR AFTER 1ST NAME OF A LIST RB
)@@G@@@A@@@@       SA    A5,STATE    . POST IT  @D@@@@       JE    A3,PCOP SY0RC
)@@G@@225   . IF PCOPY, GO CLEAN UP @C@@@@       JE    A3,COPY SY0225   . DITTRD
)@@G@@O IF COPY   @E@@@@       J     SY0910      . BUT ANY OTHER COMMAND IS ANRE
)@@G@@ ERROR@[@@@@.     @[@@@@.     @ @@@@. FOUND WHAT MUST BE WSNAME   @[@@@@RF
)@@G@@.     @C@@@@SY0160 L     X11,INDEX   . GET TABLE POINTER    @D@@@@      RG
)@@G@@ TNZ,S4 2,X11      . NAME LEGAL ON THIS COMMAND?@A@@@@       J     SY091RH
)@@G@@0      . NO, ERROR@ @@@@       TLD   A5,WORDPT   .    @A@@@@       TSTO RI
)@@G@@ A5,CWSNM    . SAVE NAME@ @@@@       L,U   A5,2        .    @ @@@@      RJ
)@@G@@ S     A5,STATE    .    @ @@@@       J     SY0110      .    @[@@@@.     RK
)@@G@@@#@@@@. FOUND A KEY     @[@@@@.     @ @@@@SY0170 L,U   A5,4        .    RL
)@@G@@@ @@@@       S     A5,STATE    .    @ @@@@       DL    A5,WORDPT   .    RM
)@@G@@@A@@@@       DS    A5,CKEY     . SAVE IT  @ @@@@       J     SY0110     RN
)@@G@@ .    @[@@@@.     @#@@@@. FOUND A NUMBER  @[@@@@.     @ @@@@SY0210 L    RO
)@@G@@ A5,STATE    .    @C@@@@       JNZ   A5,SY0910   . # NOT LEGAL HERE     RP
)@@G@@@ @@@@       L,U   A5,1        .    @ @@@@       S     A5,STATE    .    RQ
)@@G@@@C@@@@       S     A5,NUMFLG   . SAY WE FOUND A NUMBER@C@@@@       L    RR
)@@G@@ X11,INDEX   . GET TABLE POINTER    @C@@@@       L,S3   A5,2,X11   . GETRS
)@@G@@ LEGALITY FLAG    @ @@@@       JZ    A5,SY0910   .    @G@[@@       JNE,URT
)@@G@@ A5,2 SY0215 . IF FIELD REQUIRED, IT MUST BE 1/2 INTEGER    @B@[@@      RU
)@@G@@ JNE,U A1,4 SY0950 . IF NOT, ERROR  @A@[@@       J     SY0220      . SAVRV
)@@G@@E IT  @C@[@@SY0215 JE,U  A1,7 SY0220 . IF HALF INT, CONVERT @ @[@@      RW
)@@G@@ DFLOAT A1,A2      .    @ @[@@SY0220 DS    A2,CLIBN    .    @G@@@[      RX
)@@G@@  JNE,U  A1,ZMOHFI SY0215    . IF NOT HALFINT, GO STASH DFLOAT    @E@@@[RY
)@@G@@        SA     A3,CLIBH       . ELSE STASH HALFINT VALUE    @D@@@[      RZ
)@@G@@  DFLOAT A1,A2          . CONVERT TO DFLOAT     @E@@@[SY0215  DS     A2,SA
)@@G@@CLIBN       . STASH DFLOAT REPRESENTATION @ @@@@       J     SY0110     SB
)@@G@@ .    @[@@@@.     @A@@@@. EXIT TO PROPER COMMAND HANDLER    @[@@@@.     SC
)@@G@@@G@@@@SY0225 LX    X11,INDEX   . GET POINTER TO TABLE ENTRY FOR THIS COMSD
)@@G@@MAND  @C@@@@       L,S3  A0,2,X11    . WAS A # REQUIRED?    @B@@@@      SE
)@@G@@ L     A1,NUMFLG   . WAS ONE GIVEN? @ @@@@       TNE,U A0,2        .    SF
)@@G@@@B@@@@       JZ    A1,SY0910   . NOPE, ERROR    @B@@@@       L,S4  A0,2,SG
)@@G@@X11    . WSNAME REQUIRED@ @@@@       TE,U  A0,2        .    @ @@@@      SH
)@@G@@ J     SY0226      . NO @ @@@@       L     A0,CWSNM    .    @ @@@@      SI
)@@G@@ TNE   A0,SPACES   .    @C@@@@       J     SY0910      . DIDNT GIVE ONE,SJ
)@@G@@ ERROR@ @@@@SY0226 L,H2  X11,1,X11   .    @ @@@@       J     0,X11      SK
)@@G@@ .    @[@@@@.     @C@@@@. COME HERE FOR COMMANDS THAT REQUIRE NO SCAN   SL
)@@G@@@[@@@@.     @C@@@@SY0230 L     X11,INDEX   . GET TABLE POINTER    @ @@@@SM
)@@G@@       L,H1  X11,1,X11   .    @ @@@@       J     0,X11       .    @ @@@@SN
)@@G@@       VARBLS            .    @A@@@@CLIBN* RES   2           . LIB #    SO
)@@G@@@F@@@[CLIBH   RES    1              . HALFINT VALUE OF LIBNUM FIELD     SP
)@@G@@@A@@@@CWSNM* RES   3           . WSNAME   @ @@@@CKEY*  RES   2          SQ
)@@G@@ .    @ @@@@STUFF  RES   1           .    @C@@@@INDEX  EQUF  STUFF,,H2  SR
)@@G@@ . COMMAND TABLE INDEX  @C@@@@NUMFLG EQUF  STUFF,,S3   . FOUND A NUMBER SS
)@@G@@FLAG  @E@@@@STATE  EQUF  STUFF,,S2   . HOW FAR HAVE WE SCANNED INDICATORST
)@@G@@@D@@@@SYLCHR EQUF  $,,H1       . CHAR WHICH TERMINATED SCAN @F@@@@SYNSIZSU
)@@G@@ EQUF  $,,H2       . NO CHARS, IF SCAN STOPPED AT A NAME    @#@@@@      SV
)@@G@@ RES   1 .  @C@@@@SYLEX2 RES   1 . TEMP STORAGE OF LEXCAN POINTERS@#@@@@SW
)@@G@@SYLEX3 RES   1 .  @A@@@]SYLA15  RES    1              .     @[@@@@/.    SX
)@@G@@@ @@@@. EXITS, ERROR AND OTHERWISE  @[@@@@.     @#@@@@       INSTRS.    SY
)@@G@@@ @@@@SY0500 .       NORMAL EXIT    @ @@@@       L       X11,SYLINK     SZ
)@@G@@@ @@@@       J       1,X11     .    @[@@@@.     @#@@@@. SYNTAX ERROR    TA
)@@G@@@[@@@@.     @]@@@@SY0900.     @ @@@@       ERROR YSYNTA,SY0999    @[@@@@TB
)@@G@@.     @^@@@@. INCORRECT COMMAND     @[@@@@.     @]@@@@SY0910.     @ @@@@TC
)@@G@@       ERROR YINCOR,SY0999    @[@@@@.     @#@@@@. UNKNOWN COMMAND @[@@@@TD
)@@G@@.     @]@@@@SY0920.     @ @@@@       ERROR YUNKNO,SY0999    @[@@@@.     TE
)@@G@@@^@@@@. UNIMPLEMENTED COMMAND @[@@@@.     @]@@@@SY0930.     @]@@@@UNIMPLTF
)@@G@@.     @B@@@@       SEND  'UNIMPLEMENTE','D COMMAND   '@ @@@@       J    TG
)@@G@@ SY0500      .    @[@@@@.     @#@@@@. LEXICAL ERROR   @[@@@@.     @]@@@@TH
)@@G@@SY0940.     @ @@@@       ERROR YLEXIC,SY0999    @[@@@@.     @#@@@@. DOMATI
)@@G@@IN ERROR    @[@@@@.     @]@@@@SY0950.     @ @@@@       ERROR YDOMAI,SY09TJ
)@@G@@99    @[@@@@.     @#@@@@. SYSTEM ERROR    @[@@@@.     @]@[@@SY0960.     TK
)@@G@@@ @[@@       ERROR YSYSTM,SY0999    @A@@@[SY0960 EQU   0           . SYSTL
)@@G@@ERR   @[@@@@.     @A@@@@.      NOT WITH OPEN DEFINITION     @[@@@@.     TM
)@@G@@@]@@@@SY0970.     @ @@@@       ERROR YNOTWI,SY0999    @[@@@@.     @[@@@@TN
)@@G@@.     @^@@@@SY0999 . ERROR EXIT     @ @@@@       L       X11,SYLINK     TO
)@@G@@@ @@@@       J       0,X11     .    @#@@@@       VARBLS  .  @ @@@@SYLINKTP
)@@G@@ RES     1         .    @G@[@@/.  .BOUNCE HANDLER -- NOTE: THIS IS ENTERTQ
)@@G@@ED EXTERNALLY, NOT THRU SYSCMD@#@[@@       INSTRS .   @]@[@@BOUNCE*.    TR
)@@G@@@D@[@@       SEND  'JOB BOUNCED.' . INFORM USER OF HIS FATE @ @[@@      TS
)@@G@@ TNZ   RCDMND      .    @D@[@@       J     SINOFF      . NO AUTO-CONTINUTT
)@@G@@E FOR BATCH @E@[@@       TNZ   WSYNUM      . IS THERE ANYTHING IN THIS WTU
)@@G@@S?    @B@[@@       J     SINOFF      . NO, DONT BOTHER@ @[@@       TLD  TV
)@@G@@ A0,SPACES   .    @C@[@@       TSTO  A0,CWSNM    . SET WS NAME TO BLANKSTW
)@@G@@@ @[@@       L,U   A0,CONT     .    @F@[@@       S     A0,INDEX    . SETTX
)@@G@@ FAKE COMMAND INDEX TO ')CONTINUE'  @B@[@@       J     OF0100      . GO TY
)@@G@@CONTINUE HIM@[@[@@.     @E@[@@. TERMINATE APL BY INTERNAL REQUEST, IN ERTZ
)@@G@@OOR OR NORMALLY   @[@[@@.     @]@[@@SINOFF*.    @B@[@@       SZ    INDEXUA
)@@G@@       . NO CONTINUE    @A@[@@       LMJ   X11,BYEBYE  . CLEAN UP @ @[@@UB
)@@G@@       ER    EXIT$       .    @[@[@@.     @]@[@@ERROFF*.    @C@[@@      UC
)@@G@@ SZ    INDEX       . CLEAR COMMAND INDEX  @F@[@@       LMJ   X11,BYEBYE UD
)@@G@@ . GO FREE FILES, PRINT TERMINATION MSG   @D@[@@       J     CATASTROPHEUE
)@@G@@ . TAHE CATASTROPHIC EXIT     @[@@@@/.    @#@@@@.      )OPR , OPRN@[@@@@UF
)@@G@@.     @ @@@@       INSTRS            .    @E@@@@OP0100 LMJ   X11,COMOPR UG
)@@G@@ . GO TO )OPR ENTRY IN COMMO HANDLER@ @@@@       ER    ERR$        .    UH
)@@G@@@ @@@@       J     SY0500      .    @F@@@@OP0110 LMJ   X11,COMOPN  . GO UI
)@@G@@TO )OPRN ENTRY IN COMMO HANDLER     @ @@@@       ER    ERR$        .    UJ
)@@G@@@ @@@@       J     SY0500      .    @^@@@[/. )HI, )PA, & )HIPA    @H@@@[UK
)@@G@@. TEST FOR MASTER CONSOLE AND SET UP POINTERS FOR FETCH AND STORE ROUTINUL
)@@G@@ES    @]@@@[ INSTRS .   @E@@@[HI0010  TNZ    RCMASF          . AM I THE UM
)@@G@@MASTER CONSOLE?   @D@@@[        J      SY0910          . NO, INCORRECT CUN
)@@G@@OMMAND@G@@@[        LX,U   X2,PUTARY+ZMOCHR . INITIALIZE FOR CHAR FETCH UO
)@@G@@AND STORE   @A@@@[        LX,U   X4,GLFTBL+ZMOCHR .   @C@@@[        LXM UP
)@@G@@   X3,SYLEX3       . RESTORE X3     @E@@@[        LXI,U  X3,1           UQ
)@@G@@ . DON'T FORGET INCREMENT     @H@@@[        SX     X3,X5           . GETUR
)@@G@@ ADDRESS OF CHARS INTO FETCH REGISTER     @D@@@[        LXM,U  X3,BUFF+5US
)@@G@@       . AND WHERE TO PUT THEM@E@@@[        LMJ    X11,AHICMD      . AWAUT
)@@G@@Y! (IN ELEMENT ACCNTG)  @C@@@[        J      SY0500          . NORMAL EXUU
)@@G@@IT    @ @@@@/. )CLEAR  COMMAND HANDLER    @[@@@@.     @E@@@@. CHAIN ALL UV
)@@G@@STORAGE TO FREE LIST, AND SET IT ALL TO NULLS   @[@@@@.     @#@@@@      UW
)@@G@@ INSTRS.    @G@[@@. FOR NOW WE ALWAYS CLEAR TO DEFAULT WS SIZE.  IN THE UX
)@@G@@FUTURE, A FIELD   @G@[@@. WILL BE ADDED TO THE )CLEAR COMMAND WHICH WILLUY
)@@G@@OW A CHOICE IN WS SIZE  @G@@@@CL0100 LMJ   X11,CLOWER  . CLEAR LOWER WS UZ
)@@G@@POINTERS, SET SIZE DEFAULT    @G@@@@. BE SURE EXEC8 HAS GIVEN US THE PROVA
)@@G@@PER AMOUNT OF CORE FOR ACTIVE WS    @E@[@@       LA    A0,WSFREE   . ADDVB
)@@G@@R OF FIRST WD ON FREE LIST    @ @[@@       ABSADR A0         .    @F@[@@VC
)@@G@@       LA,H1 A0,0,A0     . NO WDS ON FREE LIST FROM 1ST FREE WORD @F@[@@VD
)@@G@@       AA    A0,WSFREE   . PLUS FWA=LWA+1 = NO WDS NEEDED FOR WS  @D@[@@VE
)@@G@@       LMJ   X11,CORACT  . GET CORE FOR ACTIVE WS     @]@[@@       NOP  VF
)@@G@@@E@@@[        LA     A0,WSASIZ      . GET THE WORKSPACE SIZE WOD  @C@@@[VG
)@@G@@        LMJ    X11,CORGET     . ACQUIRE THE CORE@A@@@[        ER     ERRVH
)@@G@@$           .     @G@@@@       LMJ   X11,ZRFREE  . CLEAR THE FREE STORAGVI
)@@G@@E LIST TO ALL ZEROES    @ @@@@       J     SY0999     .     @C@@@@      VJ
)@@G@@ SEND  'CLEAR WS'  . TELL HIM WHAT WE DID @A@@@@       J     SY0500     VK
)@@G@@ . AND EXIT @[@@@@.     @G@@@@. CODE FORMERLY HERE REMOVED TO ELEMENT CLVL
)@@G@@EAR/APL BECUASE OF SEGMENTING @[@@@@.     @]@@@@/ . )RESET  @[@@@@.     VM
)@@G@@@[@@@@.     @[@@@@.     @ @@@@RE0100 LMJ   X11,XQREST  .    @A@@@@      VN
)@@G@@ J     SY0999      . ERROR    @A@@@@       J     SY0500      . DONE     VO
)@@G@@@^@[@@/. )COPY AND )PCOPY     @[@[@@.     @ @[@@       INSTRS           VP
)@@G@@ .    @E@[@@CO0100 SZ    COPROF      . TURN OFF PROTECTED COPY FLAG     VQ
)@@G@@@ @[@@       J     CO0120      .    @E@[@@CO0110 SX    X11,COPROF  . )PCVR
)@@G@@OPY, TURN ON PROTECTION FLAG  @D@[@@. FIND OUT SIZE OF THIS WS SO WE CANVS
)@@G@@ GET SPACE FOR IT @F@[@@CO0120 OUTCNV,U 12 CWSNM,SFDNAM    . CONVERT FILVT
)@@G@@ENAME TO FIELDATA @G@[@@                         . USE FUTURE INITIALIZAVU
)@@G@@TION ENTRY TO ACCT HERE @C@[@@       SZ    COPACK      . TURN OFF PACK FVV
)@@G@@LAG   @C@[@@       J     CO0128      . CONTINUE WITH COPY   @E@[@@CO0125VW
)@@G@@ SX    X11,COPACK  . PACK ENTRY, TURN ON PACK FLAG    @D@[@@       SZ   VX
)@@G@@ COPROF      . TURN OFF PROTECTED FLAG    @F@[@@CO0128 LA,U  A0,WSLAST-WVY
)@@G@@SID+1 . IN THE MEANTIME, USE DEFAULT VALUE@B@[@@. NOW MAKE CORE MANAGER VZ
)@@G@@MCORE$ THE SPACE--@D@[@@CO0130 LMJ   X11,CORCPY  . NO WDS NEEDED IS IN AWA
)@@G@@0     @C@[@@       J     SY0999      . OOPS, COULDN'T GET IT@ @[@@      WB
)@@G@@ TNZ   COPACK      .    @ @[@@       J     CO0140      .    @B@[@@. IF WWC
)@@G@@E ARE PACKING FAKE A LOAD OF THE WS @C@[@@       LA,U  A0,,X1      . GETWD
)@@G@@ ADDR OF THIS WS  @B@[@@       LXI,U A0,1        . SET INCREMENT  @D@[@@WE
)@@G@@       LA    A1,RCCFWA   . GET ADDR OF COPY SPACE     @B@[@@       LXI,UWF
)@@G@@ A1,1        . SET INCREMENT  @D@[@@       LR,U  R1,WSLAST-WSID+1 . GET WG
)@@G@@LENGTH OF THIS WS @E@[@@       BT    A1,,*A0     . MOVE CURRENT WS TO COWH
)@@G@@PY SPACE    @ @[@@       TLD   A0,WSID     .    @C@[@@       TSTO  A0,OUWI
)@@G@@TNAM+1 . TEMP SAVE SOMEWHERE  @C@[@@       LMJ   X11,CLOWER  . CLEAR REGWJ
)@@G@@ULAR WS     @B@[@@       TLD   A0,OUTNAM+1 . RECOUVER WSID  @B@[@@      WK
)@@G@@ TSTO  A0,WSID     . RESTORE IT     @E@[@@       J     CO0150      . CONWL
)@@G@@TINUE AS WITH REGULAR COPY    @A@[@@. SET BASE TO COPY WS AND LOAD IT   WM
)@@G@@@ @[@@CO0140 LX    X1,RCCFWA   .    @C@[@@       LMJ   X11,CLOWER  . CLEWN
)@@G@@AR THE NEW AREA   @ @[@@       LMJ   X11,WSLOAD  .    @^@@@[/. )PACK, )PWO
)@@G@@COPY, )COPY @[@@@[.     @#@@@[        INSTRS .  @#@@@[. )PACK ENTRY --- WP
)@@G@@@D@@@[PA0100  SZ     COPROF         . CLEAR PROTECTION FLAG @F@@@[. FAKEWQ
)@@G@@ A )LOAD OF THE CURRENTLY ACTIVE WS BY BLOCK XFERING IT     @F@@@[PA0110WR
)@@G@@  LA     A1,RCALWA      . GET LAST WORD ADDR OF ACTIVE WS   @F@@@[      WS
)@@G@@  AA,U   A1,2           . PLUS A TWO WORD SAFETY MARGIN     @G@@@[      WT
)@@G@@  SA     A1,RCCFWA      . POST FISRT WORD ADD R OF NEW (COPY) WS  @G@@@[WU
)@@G@@        LA     A0,WSASIZ      . GET SIZE WORD FROM ACTIVE WORKSPACE     WV
)@@G@@@D@@@[        LX     X1,A1          . MAKE COPY WS CURRENT  @D@@@[      WW
)@@G@@  LMJ    X11,CORGET     . SET UP THE NEEDED CORE@D@@@[        J      CO0WX
)@@G@@999         . OOPS, COULDN'T GET IT @G@@@[        LX     X1,RCAFWA      WY
)@@G@@. RESTORE POINTER TO ACTIVE WORKSPACE     @E@@@[        LA,U   A0,WSWORKWZ
)@@G@@-WSID . GET NO OF WDS OF OVERHEAD   @F@@@[        AA,H2  A0,WSASIZ      XA
)@@G@@. PLUS NOMINAL WORDS OF FREE SPACE  @E@@@[        LR     R1,A0          XB
)@@G@@. INITIALIZE NO OF WDS TO MOVE@C@@@[        LX     A0,RCCFWA      . FWA XC
)@@G@@OF COPY WS  @A@@@[        LXI,U  A0,1           .     @C@@@[        LX  XD
)@@G@@   A1,RCAFWA      . FWA OF ACTIVE WS@A@@@[        LXI,U  A1,1           XE
)@@G@@.     @D@@@[        BT     A0,0,*A1       . MOVE UP THE ACTIVE WS @F@@@[XF
)@@G@@        LMJ    X11,CLOWEP     . CLEAR SELECTED PARAMS OF ACTIVE WS@F@@@[XG
)@@G@@        J      CO0150         . AND CONTINUE AS PER NORMAL )COPY  @#@@@[XH
)@@G@@. )PCOPY ENTRY ---@D@@@[PC0100  SX     X11,COPROF     . RAISE PROTECTIONXI
)@@G@@ FLAG @D@@@[        J      CO0110         . CONTINUE AS PER )COPY @#@@@[XJ
)@@G@@. )COPY ENTRY --- @D@@@[CO0100  SZ     COPROF         . CLEAR PROTECTIONXK
)@@G@@ FLAG @[@@@[.     @F@@@[CO0110  LA     A0,RCALWA      . GET LAST WD ADDRXL
)@@G@@ OF ACTIVE WS     @G@@@[        LX,U   X1,2,A0        . BOOST BY SAFETY XM
)@@G@@FACTOR AND MAKE ACTIVE  @F@@@[        SX     X1,RCCFWA      . POST 1ST WXN
)@@G@@ORD ADDR OF COPY WS     @F@@@[. ACQUIRE CORE FOR A DEFAULT SIZED COPY WSXO
)@@G@@ AND INITIALIZE POINTERS@G@@@[. (PARTICULARLY WIDTH AND DIGITS) WHICH MAXP
)@@G@@Y BE USED BY ERROR MESSAGE    @#@@@[. PRINT ROUTINES. @F@@@[CO0120  LA  XQ
)@@G@@   A0,RCDFWS      . DEFAULT PARAM FOR CLEAR WORKSPACE @F@@@[        LMJ XR
)@@G@@   X11,CORGET     . TRY TO ACQUIRE THE MINIMUM SPACE  @D@@@[        J   XS
)@@G@@   CO0970         . OOPS, CAN'T GET IT    @E@@@[        LMJ    X11,CLOWEXT
)@@G@@R     . INITIALIZE ITS POINTERS     @G@@@[        LMJ    X11,WSLOAD     XU
)@@G@@. )LOAD WS; LODSAV WILL ACQUIRE THE CORE  @E@@@@       J     CO0990     XV
)@@G@@ . ERROR-- GET RID OF COPY SPACE    @E@@@@. INITIALIZE OUTPUT BUF IN CASXW
)@@G@@E SOMETHING IS NOT COPIED     @D@@@@CO0150 LA,U  A3,CONMSG   . 'NOT COPIXX
)@@G@@ED' FLAG MESSABE  @B@@@@       LA,U  A4,CONCHR   . NO OF CHARS    @D@@@@XY
)@@G@@       LX    X1,RCAFWA   . RESTOR E BASE TO ACTIVE WS @E@@@[        SZ  XZ
)@@G@@   CONFND         . INITIALIZE NOT FOUND FLAG   @E@@@@       LMJ   X11,NYA
)@@G@@LINIT  . INITIALIZE NAME LIST ROUTINE     @ @@@@       J     CO0999     YB
)@@G@@ .    @B@@@@. WS NOW LOADED-- SCAN COMMAND AND COPY IT@C@@@@CO0200 LA   YC
)@@G@@ A0,STATE    . GET STATE OF SCANNER @G@@@@       JE,U  A0,5 CO0210 . IF YD
)@@G@@5, A LIST OF NAMES TO COPY WAS SUPPLIED   @G@@@@       LMJ   X11,CPYALL YE
)@@G@@ . OTHERWISE, COPY EVERYTHING IN THS SYMBOL TBL @ @@@@       J     CO099YF
)@@G@@0      .    @ @@@@       J     CO0500      .    @D@@@@. A LIST OF NAMES YG
)@@G@@TO BE COPIED HAS BEEN SPECIFIED--   @E@@@@CO0210 LA    A0,SYLCHR   . GETYH
)@@G@@ CHAR WHICH STOPPED THE SCAN  @F@@@@       LA    A2,SYNSIZ   . GET LENGTYI
)@@G@@H OF NAME WHICH WAS SCANNED   @A@@@@CO0215 JE,U  A0,AEOL CO0220   .     YJ
)@@G@@@A@@@@       JNE,U A0,ASPACE CO0980 .     @H@@@@CO0220 LMJ   X11,CPYONE YK
)@@G@@ . COPY 1ST NAME (WHICH HAS ALREADY BEEN SCANNED)     @ @@@@       J    YL
)@@G@@ CO0990      .    @E@@@[       TP    A1          . WAS THIS OBJECT FOUNDYM
)@@G@@ IN COPY WS?@G@@@[       SX    X11,CONFND  .  MADE NON-ZERO TO SIGNAL OBYN
)@@G@@JECT NOT FOUND    @E@@@@CO0230 LA    A0,SYLCHR   . GET CHAR WHICH TERMINYO
)@@G@@ATED SCAN   @H@@@@       JE,U  A0,AEOL CO0500  . IF END OF LINE, GO FLUSYP
)@@G@@H LIST OF 'NOT COPIED'  @D@@@@       LX    X1,RCAFWA   . BE SURE BASE ISYQ
)@@G@@ ACTIVE WS  @B@@@@       CSCAN CO0240,CO0215,CO0980 CO0990 .@E@@@@CO0240YR
)@@G@@ JE,U  A0,AEOL CO0500   . GOT OP-- IF END OF LINE, OK @E@@@@       J    YS
)@@G@@ CO0980      . OTHERWISE, INCORRECT COMMAND     @D@@@@. NORMAL TERMINATIYT
)@@G@@ON-- GET RID OF SPACE WE COPIED FROM@ @[@@CO0500 LMJ   X11,CORCEN  .    YU
)@@G@@@ @[@@       J     CO0999      .    @E@[@@       LX    X1,RCAFWA   . RESYV
)@@G@@ET BASE ADDR TO ACTIVE WS     @E@[@@       LMJ   X11,NLFLSH  . FLUSH LISYW
)@@G@@T OF UNCOPIED VBLES     @ @[@@       J     CO0999      .    @ @[@@      YX
)@@G@@ J     SY0500      .    @^@[@@. ERROR TERMINATION     @D@[@@CO0980 ERRORYY
)@@G@@ YINCOR      . SIGNAL 'INCORRECT COMMAND' @E@[@@CO0990 LMJ   X11,CORCEN YZ
)@@G@@ . GET RID OF SPACE USED TO COPY    @#@[@@       NOP   .    @E@[@@      ZA
)@@G@@ LMJ   X11,NLFLSH  . FLUSH LIST OF UNCOPIED VBLES     @#@[@@       NOP  ZB
)@@G@@ .    @ @[@@CO0999 LX    X1,RCAFWA   .    @ @[@@       J     SY0999     ZC
)@@G@@ .    @[@[@@.     @ @[@@       VARBLS            .    @D@[@@COPROF* RES ZD
)@@G@@ 1           . COPY/PCOPY PROTECTION FLAG @C@[@@COPACK RES   1          ZE
)@@G@@ . PACK ON/OFF FLAG     @ @[@@       CONSTS            .    @A@[@@CONMSGZF
)@@G@@ APLBCI 'NOT COPIED: '  .     @D@[@@CONCHR EQU   12          . NO CHARS ZG
)@@G@@IN ABOVE MESSAGE  @#@@@[CO0500 BASACT     @C@@@[       LMJ   X11,NLFLSH ZH
)@@G@@ . FLUSH NOT COPIED'S   @ @@@[       ER ERR$           .    @E@@@[      ZI
)@@G@@ LMJ   X11,CQNTFD  . FLUSH LIST OF NOT FOUNDS IN ANY  @#@@@[       ER   ZJ
)@@G@@ ERR$ @C@@@[       LMJ   X11,CORCEN  . GET RID OF COPY WS   @#@@@[      ZK
)@@G@@ ER    ERR$ @ @@@[       J     SY0500      .    @[@@@[.     @#@@@[. ERROZL
)@@G@@R EXITS --  @[@@@[.     @G@@@[CO0970  ERROR  YWSTOO,CO0999  . WORKSPACE ZM
)@@G@@TOO LARGE (CAN'T GET CORE)    @A@@@[CO0980  ERROR  YINCOR,CO0990  .     ZN
)@@G@@@D@@@[CO0990 LMJ   X11,NLFLSH  . CLEAR NOT COPIED OBJECTS   @ @@@[      ZO
)@@G@@ ER    ERR$        .    @D@@@[       LMJ   X11,CQNTFD  . FLUSH NOT COPIEZP
)@@G@@D IF ANY    @ @@@[       ER    ERR$        .    @C@@@[       LMJ   X11,CZQ
)@@G@@ORCEN  . GET RID OF COPY WS   @#@@@[       ER    ERR$ @ @@@[CO0999 BASACZR
)@@G@@T            .    @A@@@[        J      SY0999         .     @[@@@[.     ZS
)@@G@@@[@@@[.     @F@@@[. SUBROUTINE TO CHECK IF ANY OBJECTS WERE 'NOT FOUND:'ZT
)@@G@@ AND IF SO  @ @@@[. FIND THEM AND PRINT THEM    @[@@@[.     @ @@@[      ZU
)@@G@@ INSTRS            .    @D@@@[CQNTFD TNZ   CONFND      . ANY OBJECTS NOTZV
)@@G@@ FOUND?     @B@@@[       J     1,X11       . NO- RETURN     @B@@@[      ZW
)@@G@@ SX    X11,CQLINK  . STORE RETURN   @C@@@[       LA,U  A3,CQMSG    . GETZX
)@@G@@ NOT FOUND MESSAGE@B@@@[       LA,U  A4,CQNCHR   . NO. OF CHARS   @E@@@[ZY
)@@G@@       LMJ   X11,NLINIT  . INITIALIZE NAME LIST ROUTINE     @ @@@[      ZZ
)@@G@@ ER    ERR$        .    @C@@@[       BASCPY            . GET BASE OF COPAA
)@@G@@Y WS  @E@@@[       LA,U  A2,ZTPNFD   . BLOC TYPE FOR NOT COPIED OBJECTS AB
)@@G@@@C@@@[       LA,U  A3,WSYTBL-3 . START OF SYMBOL TABLE@E@@@[       LXI,UAC
)@@G@@ A3,3        . ENTRIES ARE THREE WORDS LONG     @D@@@[       LR    R1,WSAD
)@@G@@YMAX   . NO. OF ENTRIES IN TABLE    @B@@@[CQ0100 SE,S1 A2,3,*A3    . SEAAE
)@@G@@RCH TABLE   @ @@@[       J     CQ0200      .    @ @@@[       DS    A2,CQAF
)@@G@@SAVE   .    @ @@@[       SR    R1,CQSAVE+2 .    @F@@@[       LA,U  A0,ZTAG
)@@G@@PNAM   . MAKE BLOCK LOOK LIKE PRIM NAME BLOCK   @ @@@[       LA,U  A3,0,AH
)@@G@@A3     .    @A@@@[       SA,S1 A0,0,A3     . STORE IT @C@@@[       RELCPAI
)@@G@@Y A3         . GET RELITIVE ADR     @ @@@[       LA    A4,RCCFWA   .    AJ
)@@G@@@E@@@[       LMJ   X11,NLNAME  . PUT THIS NAME IN AS NOT FOUND    @#@@@[AK
)@@G@@       ER    ERR$ @D@@@[       DL    A2,CQSAVE   . GET POINTERS FOR SEARAL
)@@G@@CH    @ @@@[       LR    R1,CQSAVE+2 .    @B@@@[       J     CQ0100     AM
)@@G@@ . RESUME SEARCH  @C@@@[CQ0200 LMJ   X11,NLFLSH  . FLUSH OUTPUT BUFFER  AN
)@@G@@@#@@@[       ER    ERR$ @D@@@[       BASACT            . POINT BASE REG AO
)@@G@@TO ACTIVE WS@ @@@[       LX    X11,CQLINK  .    @A@@@[       J     1,X11AP
)@@G@@       . RETURN   @ @@@[       VARBLS            .    @#@@@[CQLINK RES  AQ
)@@G@@ 1    @ @@@[CQSAVE RES   3           .    @C@@@[CONFND RES   1          AR
)@@G@@ . OBJECT NOT FOUND FLAG@D@@@[COPROF* RES  1           . COPY/PCOPY  PROAS
)@@G@@TECTION FLAG@C@@@[COPACK RES   1           . PACK ON/OFF FLAG     @#@@@[AT
)@@G@@       CONSTS .   @A@@@[CONMSG APLBCI  'NOT COPIED: '  .    @C@@@[CONCHRAU
)@@G@@ EQU 4*($-CONMSG) . NUMBER OF CHARS IN MSG@A@@@[CQMSG  APLBCI  'NOT FOUNAV
)@@G@@D:  '  .    @D@@@[CQNCHR EQU   4*($-CQMSG) . NUMBER OF CHARS IN MSG     AW
)@@G@@@^@[@@/.  )OFF COMMAND HANDLER@#@[@@       INSTRS.    @F@[@@OF0100 DL   AX
)@@G@@ A0,CWSNM    . LETS CHECK TO MAKE SURE IT WAS 'HOLD', @B@[@@       DTE  AY
)@@G@@ A0,SPACES   . JUST FOR LAUGHS@B@[@@       J     OF0110      . IT WAS NOAZ
)@@G@@THING @ @[@@       J     OF0120      .    @ @[@@OF0110 DTE   A0,HOLD    BA
)@@G@@ .    @H@[@@       J     SY0910      . IT WASNT NOTHING AND WASNT THE RIBB
)@@G@@GHT SOMETHING     @ @[@@OF0120 L     A2,STATE    .    @C@[@@       JZ   BC
)@@G@@ A2,OF0130   . IF )OFF, SAVE OLD KEY@C@[@@       DL    A0,CKEY     . PICBD
)@@G@@K UP KEY, OR NULL @B@[@@       DS    A0,ACKEY    . SET AS NEW KEY @]@[@@BE
)@@G@@OF0130.     @H@[@@       LMJ   X11,BYEBYE  . DO ACCNTG, SAVE (IF NESC.)ABF
)@@G@@ND SEND SIGNOFF MSG     @F@[@@       ER    EXIT$       . ****** NORMAL EBG
)@@G@@XIT FROM APL ******     @F@@@[/. )BOUNCE, )CONTINUE, )OFF   AND OTHER WABH
)@@G@@YS TO EXIT THE PROCESSOR@[@@@[.     @A@@@[        INSTRS                BI
)@@G@@.     @G@@@[. NOTE: )BOUNCE IS INDUCED BY AN EXTERNAL CALL, NOT AN ACTUABJ
)@@G@@L COMMAND   @E@@@[BOUNCE* SEND   'JOB BOUNCED ' . TELL USER WHAT HAPPENEBK
)@@G@@D     @D@@@[        TZ     RCDMND         . IS THIS A DEMAND RUN? @E@@@[BL
)@@G@@        TNZ    WSYNUM         . YES, IS ANYTHING IN THIS WS?@G@@@[      BM
)@@G@@  J      SINOFF         . IF BATCH OR CLEAR WS, DON'T CONTINUE    @G@@@[BN
)@@G@@        LA,U   A0,CONT        . ELSE GET INDEX AS IF )CONTINUE WAS TYPEDBO
)@@G@@@F@@@[        SA     A0,INDEX       . DUMMY THE SCANNER FLAG UP WITH IT BP
)@@G@@@F@@@[        LMJ    X11,BYEBYN     . SIGN OFF WITHOUT CHANGING KEY     BQ
)@@G@@@B@@@[        ER     EXIT$          . AND QUIT  @F@@@[. NOTE, )CONTINUE BR
)@@G@@COMES HERE TOO, AS COMMAND SYNTAX CHECK MUST BE @E@@@[. DONE PRIOR TO FABS
)@@G@@KING A )SAVE CONTINUE COMMAND  (IN BYEBYE)@G@@@[OF0100  DL     A0,CWSNM BT
)@@G@@      . GET WHAT HE TYPED IN THE WSNAME FIELD   @E@@@[. LET UNEDUCATED ABU
)@@G@@PL\360 USERS TYPE  )OFF HOLD IF THEY WISH @E@@@[        TNE    A0,SPACESBV
)@@G@@      . DID HE TYPE ANYTHING AT ALL?@C@@@[        J      OF0110         BW
)@@G@@. NO, HE'S OK     @D@@@[        DTE    A0,HOLD        . YES, WAS IT HOLDBX
)@@G@@?     @D@@@[        J      SY0910         . NO, SEND ERROR MSG    @ @@@[BY
)@@G@@. CHANGE HIS KEY, IF NECESSARY@G@@@[OF0110  LA,U   A0,1           . SET BZ
)@@G@@FLAG INDICATING KEY TO BE CHANGED   @G@@@[        LA     A1,STATE       CA
)@@G@@. GET TERMINATING STATE OF COMMAND SCANNER@E@@@[        TLE,U  A1,3     CB
)@@G@@      . DID SCANNER DETECT A COLON? @F@@@[        LA,U   A0,0           CC
)@@G@@. NO, CLEAR FLAG FOR CHANGE OF KEY  @D@@@[        LMJ    X11,BYEBYE     CD
)@@G@@. CLEAN UP EVERYTHING   @E@@@[        ER     EXIT$          . **** NORMACE
)@@G@@L EXIT FROM APL   @[@@@[.     @C@@@[. TERMINATION REQUESTS BY THE PROCESCF
)@@G@@SOR ITSELF -@[@@@[.     @F@@@[SINOFF* SZ     INDEX          . SET FLAG TCG
)@@G@@O INHIBIT )SAVE CONTINUE@F@@@[        LMJ    X11,BYEBYN     . SIGN OF WICH
)@@G@@THOUT CHANGE OF KEY     @A@@@[        ER     EXIT$          .     @[@@@[CI
)@@G@@.     @F@@@[ERROFF* SZ     INDEX          . SET FLAG TO INHIBIT )SAVE COCJ
)@@G@@NTINUE@F@@@[        LMJ    X11,BYEBYN     . SIGN OFF BUT DON'T CHANGE KECK
)@@G@@YS    @A@@@[        ER     EABT$          .     @#@@@[        CONSTS .  CL
)@@G@@@^@@@[HOLD    APLBCI 'HOLD   '@[@@@@/.    @[@@@@.     @F@@@@. CLEAN UP ACM
)@@G@@CCOUNTING, SAVE CONTINUE (IF SPECIFIED) AND SIGNOFF   @[@@@@.     @ @@@@CN
)@@G@@       INSTRS            .    @G@[@@BYEBYE LA,U  A0,0        . TO FORESTCO
)@@G@@ALL ERROR LOOPS IN CONTING RTNE--   @G@@@[BYEBYN  LA,U   A0,0           CP
)@@G@@. CLEAR KEY FLAG (NO CHG IF ENTERED HERE) @E@@@[BYEBYE  SA     A0,BYKFLGCQ
)@@G@@      . SAVE FLAG FOR CHANGE OF KEYS@C@@@[        SX     X11,BYLINK     CR
)@@G@@. AND RETURN ADDR @F@@@[        DL     A1,CKEY        . GET KEY GIVEN ONCS
)@@G@@ COMMAND (IF ANY) @D@@@[        TZ     A0             . SHOULD KEY BE CHCT
)@@G@@ANGED?@F@@@[        DS     A1,ACKEY       . YES, PUT IN USER'S ACCOUNT ECU
)@@G@@NTRY  @E@@@[        SZ     RCOUTI         . CLEAR OUTPUT INHIBIT FLAG   CV
)@@G@@@G@@@[        TZ     RCALTF         . IS THERE AN OUTSTANDING )SITE OR )CW
)@@G@@CSITE?@F@@@[        LMJ    X11,AP1000     . YES, GO CLOSE AND @SYM THE FCX
)@@G@@ILE   @E@@@[        TNZ    RCNFIL         . ANY USER FILES ASSIGNED?    CY
)@@G@@@F@@@[        J      BY0010         . NO, GO CHECK MASTER CONSOL ACCNTG CZ
)@@G@@@G@@@[        LXI,U  X11,XQTREP     . YES, SET UP TARGET BANK DEXCR INCEDA
)@@G@@X     @F@@@[        LIJ    X11,FREALL     . CALL FREE RTNE FOR ALL USER DB
)@@G@@FILES @F@@@[BY0010  LA,S1  A0,ACFLGW      . GET MASTER CONS WRITE ENABLEDC
)@@G@@ FLAG @E@@@[        LA,U   A1,0           . AND ASIS CLOSE INDICATOR    DD
)@@G@@@F@@@[        TNE,U  A0,2           . IS ACCOUNT ELEMENT WRITE ENABLED? DE
)@@G@@@D@@@[        LMJ    X11,ACFCLO     . YES, CLOSE IT ASIS    @C@@@[      DF
)@@G@@  NOP                   . IGNORE ERRORS   @G@@@[        LA,U   A0,0     DG
)@@G@@      . TO PRECLUDE CONTINGENCY ROUTINE LOOPS...@G@@@@       ER    IALL$DH
)@@G@@       . RESET GLOBAL CONTINGS TO STANDARD EXEC ACTION@F@@@@       LA   DI
)@@G@@ A0,(+1,0)   . A SIMILAR PACKET FOR THIS ACTIVITY ONLY@F@@@@       ER   DJ
)@@G@@ IALL$       . AND CLEAR THOSE CONTINGENCIES, TOO     @D@@@@       LA   DK
)@@G@@ A0,COFORK   . GET NAME OF COM$ ACTIVITY  @F@@@@       SZ    COFORK     DL
)@@G@@ . SET FLAG SO HE KNOWS TO COMMIT SUICIDE @G@@@@       ER    ACT$       DM
)@@G@@ . AND WAKE HIM UP SO HE CAN QUIT GRACEFULLY    @ @[@@       S     X11,BDN
)@@G@@YLINK  .    @ @[@@       ACON              .    @ @[@@       L     A0,ACDO
)@@G@@PERM   .    @C@[@@       AND,XU A0,-1*/2   . CLEAR IN USE BIT     @ @[@@DP
)@@G@@       S     A1,ACPERM   .    @ @[@@       ACOFF             .    @C@[@@DQ
)@@G@@       L     A0,INDEX    . GET COMMAND INDEX    @B@[@@       TNE,U A0,CODR
)@@G@@NT     . )CONTINUE ?    @B@[@@       J     BY0200      . ) SAVE CONTINUEDS
)@@G@@@]@[@@BY0100.     @ @[@@       ACON              .    @D@[@@       L    DT
)@@G@@ A0,DINDEX   . GET ADDRESS OF MY NUMBER   @G@[@@       TN    A0         DU
)@@G@@ . IF NEG, FILE WAS NEVER ASSIGNED, SKIP UPDATE @C@[@@       LMJ   X11,UDV
)@@G@@PDATE  . UPDATE ACCOUNT ENTRY @B@[@@       NOP               . WHAT ERRODW
)@@G@@R?    @ @[@@       ACOFF             .    @ @[@@       L,U   A0,FREE    DX
)@@G@@ .    @D@[@@       TZ    TMPASG      . DONT FREE TEMPORARY FILES !@C@[@@DY
)@@G@@       ER    CSF$        . FREE SAVE/LOAD FILE  @D@@@[        LA     A0,DZ
)@@G@@INDEX       . GET COMMAND INDEX     @F@@@[        JNE,U  A0,CONT BY0200 EA
)@@G@@ . IF NOT CONTINUE, GO DO ACCOUNTING@E@@@[. SAVE THE CURRENT WORKSPACE AEB
)@@G@@S CONTINUE BY FAKING A )SAVE  @B@@@[BY0100  TLD    A0,CONTIN      . GET EC
)@@G@@NAME  @F@@@[        TSTO   A0,CWSNM       . PRETEND HE TYPED CONTINUE ASED
)@@G@@ INPUT@C@@@[        DL     A0,RCLIBN      . GET HIS LIBNO   @C@@@[      EE
)@@G@@  DS     A0,CLIBN       . FAKE THAT, TOO  @G@@@[        DL     A0,WSPASWEF
)@@G@@      . FINALLY GET PASSWORD FROM WS ITSELF     @B@@@[        DS     A0,EG
)@@G@@CKEY        . AND SET IT@C@@@[        LMJ    X11,WSSAVE     . DO NORMAL EH
)@@G@@)SAVE @D@@@[        J      BY0110         . IF ERROR, SEND MESSAGE@F@@@[EI
)@@G@@        LA     A0,ACPERM      . IF OK, GET PRESENT PERMISSIONS    @D@@@[EJ
)@@G@@        OR,U   A0,ACCONB      . TURN CONTINUED BIT ON @E@@@[        SA  EK
)@@G@@   A1,ACPERM      . SAVE MODIFIED PERMISSIONS   @F@@@[        J      BY0EL
)@@G@@200         . AND GO UPDATE ACCOUNTING INFO     @G@@@[BY0110  SEND   'TEEM
)@@G@@RMINATION ','ERROR, SESSI','ON NOT CONTI','NUED' .    @^@@@[. UPDATE ACCEN
)@@G@@OUNTING INFO@C@@@[BY0200  LA     A0,ACPERM      . GET PERMISSIONS @D@@@[EO
)@@G@@        AND,XU A0,-ACINUB     . CLEAR 'IN USE' BIT    @B@@@[        SA  EP
)@@G@@   A1,ACPERM      . POST IT   @F@@@[        LMJ    X11,UPDATE     . AND EQ
)@@G@@UPDATE USER'S ACCOUNT DATA    @G@@@[        NOP                   . IGNOER
)@@G@@RE ERR, WE'RE GOING AWAY ANYWAY     @#@@@[. FREE THE FILE(S)@E@@@[BY0210ES
)@@G@@  LA     A0,BYKFLG      . GET FLAG FOR CHANGING KEY   @D@@@[        LMJ ET
)@@G@@   X11,LSFREE     . MAKE FILES GO AWAY    @#@@@[        NOP    .  @^@@@[EU
)@@G@@. PRINT SIGNOFF MESSAGE-@B@@@@       LMJ   X11,LNFLSH  . CLEAR BUFFER   EV
)@@G@@@ @@@@       L,U   A3,TERM     .    @ @@@@       L,U   A4,22       .    EW
)@@G@@@C@@@@       LMJ   X11,EDTLIT  . PUT IN SKELETON MSG  @D@@@@       LMJ  EX
)@@G@@ X11,CPUNOW  . GET CURRENT ELAPSED TIME   @B@@@@       DFAN  A1,RCPUON  EY
)@@G@@ . MINUS START    @B@@@@       DFD   A1,(60.0D)  . *60=SECONDS    @C@@@@EZ
)@@G@@       DL    A4,A1       . PUT IN RIGHT REGISTER@ @@@@       L,U   A0,5 FA
)@@G@@       .    @D@@@@       S     A0,WSDGTS   . NOT MUCH PRECISION NEEDED  FB
)@@G@@@ @@@@       DSL   A0,72       .    @ @@@@       LMJ   X11,FORMD   .    FC
)@@G@@@ @@@@       NOP               .    @C@@@@       LMJ   X11,LINSTR  . OUTFD
)@@G@@PUT SIGN OFF LINE @E@[@@       TNZ,U PIPEND      . IS INSTRUMENTATION BEFE
)@@G@@ING USED?   @B@[@@       J     $+3         . NO, FORGET IT  @C@[@@      FF
)@@G@@ LMJ   X11,PIPEND  . YES, CLOSE IT OUT    @A@[@@       +0    . DUMMY WALFG
)@@G@@KBACK WORD  @E@@@[        TZ,U   PIPEND         . IS INSTRUMENTATION IN FH
)@@G@@USE?  @E@@@[        LMJ    X11,PIPEND     . YES, CLOSE ITS BUFFERS OUT  FI
)@@G@@@ @@@@       L     X11,BYLINK  .    @ @@@@       J     0,X11       .    FJ
)@@G@@@D@[@@BY0200 TLD   A0,CONTIN   . GET NAME OF 'CONTINUE'     @C@[@@      FK
)@@G@@ TSTO  A0,CWSNM    . AND SET AS WS NAME   @C@[@@       DL    A0,RCLIBN  FL
)@@G@@ . AND LIB # TO HIS     @ @[@@       DS    A0,CLIBN    .    @B@[@@      FM
)@@G@@ DL    A0,WSPASW   . GET CURRENT KEY@D@[@@       DS    A0,CKEY     . ANDFN
)@@G@@ SET AS KEY FOR CONTINUE@E@[@@       OUTCNV,U 12 CWSNM,SFDNAM    . CONVEFO
)@@G@@RT FILE NAME TO FD@ @[@@       LMJ   X11,WSSAVE  .    @ @[@@       J    FP
)@@G@@ BY0300      .    @ @[@@       ACON              .    @ @[@@       L    FQ
)@@G@@ A0,ACPERM   .    @C@[@@       OR,U  A0,1*/3     . SET WAS CONTINUED    FR
)@@G@@@ @[@@       S     A1,ACPERM   .    @ @[@@       ACOFF             .    FS
)@@G@@@D@[@@       J     BY0100      . CONTINUE WITH SIGN OFF     @[@[@@.     FT
)@@G@@@ @[@@. ERROR DURING AUTO-CONTINUE  @[@[@@.     @]@[@@BY0300.     @H@[@@FU
)@@G@@       SEND  'ERROR DURING',' TERMINATION',', SESSION NO','T CONTINUED 'FV
)@@G@@ .    @A@[@@       J     BY0100      . FINISH UP@ @[@@       CONSTS     FW
)@@G@@       .    @ @[@@HOLD   APLBCI 'HOLD    ' .    @[@@@[.     @#@@@[      FX
)@@G@@  VARBLS .  @A@@@[BYLINK  EQUF   $,,H1          .     @A@@@[BYKFLG  EQUFFY
)@@G@@   $,,H2          .     @A@@@[        RES    1              .     @[@@@[FZ
)@@G@@.     @#@@@[        CONSTS .  @A@@@@CONTIN* APLBCI 'CONTINUE    ' .     GA
)@@G@@@ @@@@TERM  APLBCI 'APL TERMINAT' . @ @@@@       APLBCI 'ED. TIME:   ' .GB
)@@G@@@[@[@@.     @ @[@@       VARBLS            .    @[@[@@.     @ @[@@BYLINKGC
)@@G@@ +     0           .    @ @@@@/.     )ERASE COMMAND HANDLER @[@@@@.     GD
)@@G@@@ @@@@       INSTRS            .    @F@@@@. SCAN STARTS HERE IMMEDIATELYGE
)@@G@@ AFTER DETECTING THE COMMAND NAME-- @[@@@@.     @D@@@@ER0100 LA,U  A3,ERGF
)@@G@@NMSG   . 'NOT ERASED' FLAG MESSAGE  @D@@@@       LA,U  A4,ERNCHR   . NO GG
)@@G@@OF CHARS IN THE MESSAGE @E@@@@       LMJ   X11,NLINIT  . INITIALIZE NAMEGH
)@@G@@ LIST POINTER     @ @@@@       J     ER0999      .    @H@@@@ER0110 CSCANGI
)@@G@@ ER0160,ER0120,ER0910 ER0920     . SCAN NEXT FIELD OF COMMAND     @D@@@@GJ
)@@G@@ER0120 LMJ   X11,SYMBOL  . TABULATE NAME OF VARIABLL  @ @@@@       J    GK
)@@G@@ ER0920      .    @D@@@@       SA    A1,ERSNAM   . SAVE POINTER TO NAMEBGL
)@@G@@LOK   @ @@@@       ABSADR A1          .   @C@@@@       LA,H2 A1,1,A1    GM
)@@G@@ . GET POINTER TO DESCR @D@@@@       JZ    A1,ER0155   . IF NONE, ALREADGN
)@@G@@Y ERASED    @D@@@@       ABSADR A1         . ELSE PREPARE TO LOOK AT IT GO
)@@G@@@D@@@@       TNZ,H1 2,A1       . CHECK LEVEL-- IS IT GLOBAL?@C@@@@      GP
)@@G@@ J     ER0150      . YES, GO ERASE IT     @B@@@@       LA    A3,ERSNAM  GQ
)@@G@@ . NAMEBLOK RELADR@E@@@@       LA,U  A4,WSID     . BASE ADDR OF CURRENT GR
)@@G@@WORKSPACE   @E@@@@       LMJ   X11,NLNAME  . PUT NOT ERASED NAME INTO BUGS
)@@G@@F     @ @@@@       J     ER0920      .    @B@@@@ER0150 LA    A6,ERSNAM  GT
)@@G@@ . BLOCK ADDR     @C@@@@       LMJ   X11,ERASEV  . GET RID OF VALUE     GU
)@@G@@@ @@@@       J     ER0920      .    @D@@@@ER0155 LA    A0,ERSNAM   . RECGV
)@@G@@OVER POINTER TO NAMEBLOK@F@@@@       LMJ   X11,SYMERS  . GET RID OF REFEGW
)@@G@@RENCE TO NAME ITSELF    @D@@@@       LA    A0,SYLCHR   . GET CHAR WHICH GX
)@@G@@STOPPED SCAN@E@@@@       JE,U  A0,ASPACE ER0110 . IF BLONK, KEEP SCANNINGY
)@@G@@G     @#@@@@. NORMAL EXIT     @F@@@@ER0160 JNE,U A0,AEOL ER0910   . IF NGZ
)@@G@@OT END OF LINE, SYNTAX ERROR  @E@@@@       LMJ   X11,NLFLSH  . CLOSE NAMHA
)@@G@@E LIST PRINT ROUTINE    @ @@@@       J     ER0999      .    @ @@@@      HB
)@@G@@ J     SY0500      .    @#@@@@. ERROR EXITS--   @ @@@@ER0900 LA    A0,ERHC
)@@G@@SNAM   .    @ @@@@       LMJ   X11,SYMERS  .    @ @@@@ER0910 ERROR YSYNTHD
)@@G@@A      .    @ @@@@ER0920 LMJ   X11,NLFLSH  .    @]@@@@       NOP  @[@@@@HE
)@@G@@.     @ @@@@ER0999 J     SY0999      .    @#@@@@       VARBLS .   @F@@@@HF
)@@G@@ERSNAM RES   1           . TEMP STORAGE OF POINTER TO NAMELBOK    @[@@@@HG
)@@G@@.     @ @@@@       CONSTS            .    @[@@@@.     @ @@@@ERNMSG APLBCHH
)@@G@@I 'NOT ERASED: ' .@D@@@@ERNCHR EQU   12          . NO CHARS IN THIS MESSHI
)@@G@@AGE   @[@[@@/.    @[@[@@.     @]@[@@. )SAVE     @[@[@@.     @#@[@@      HJ
)@@G@@ INSTRS .   @A@[@@SA0100 L,U   X11,WSSAVE  . GO HERE  @C@[@@       L    HK
)@@G@@ A0,STATE    . WAS IT JUST A SAVE   @ @[@@       JNZ   A0,SA0110   . NO HL
)@@G@@@C@[@@       DL    A0,WSPASW   . YES, GET CURRENT KEY @ @[@@       DS   HM
)@@G@@ A0,CKEY     .    @B@[@@SA0110 L     A0,CWSNM    . GET WSNAME     @E@[@@HN
)@@G@@       TE    A0,SPACES   . IF BLANK, SUPPLY CURRENT WSNAME  @ @[@@      HO
)@@G@@ J     CA0100      .    @ @[@@       TLD   A0,WSID     .    @ @[@@      HP
)@@G@@ TSTO  A0,CWSNM    .    @ @[@@       J     CA0100      .    @G@@@[/. COMHQ
)@@G@@MANDS RELATING TO SAVED WORKSPACES ()SAVE,)LOAD, )DROP, )LIB)     @[@@@[HR
)@@G@@.     @[@@@[. )LIB@#@@@[        INSTRS .  @A@@@[LB0100  LMJ    X11,WSLIBHS
)@@G@@      .     @A@@@[        J      SY0999         .     @A@@@[        J   HT
)@@G@@   SY0500         .     @[@@@[.     @#@@@[. )SAVE, )TSAVE   @[@@@[.     HU
)@@G@@@E@@@[TS0100  LX,U   X11,TWSAVE     . SET TARGET ADDR FOR )TSAVE  @D@@@[HV
)@@G@@        J      SA0105         . AND GO CHECK COMMAND  @C@@@[SA0100  LX,UHW
)@@G@@   X11,WSSAVE     . SET TARGET ADDR @[@@@[.     @F@@@[SA0105  DL     A0,HX
)@@G@@WSPASW      . GET KEY FOR PRESENTLY ACTIVE WS   @F@@@[        LA     A2,HY
)@@G@@STATE       . AND FINAL STATE OF COMMAND SCANNER@E@@@[        TLE,U  A2,HZ
)@@G@@3           . DID SCANNER DETECT A COLON? @G@@@[        DS     A0,CKEY  IA
)@@G@@      . NO, PRETEND USER RETYPED THE OLD KEY    @G@@@[        LA     A0,IB
)@@G@@CWSNM       . GET WSNAME WHICH APPEARS ON COMMAND     @G@@@[        JNE IC
)@@G@@   A0,SPACES SA0110    . IF NON-BLANK, HE TYPED A NEW ONE   @G@@@[      ID
)@@G@@  TLD    A0,WSID        . HE DIDN'T TYPE ONE, GET CURRENT ONE     @F@@@[IE
)@@G@@        TSTO   A0,CWSNM       . AND PRETEND THAT'S WHAT HE TYPED  @C@@@[IF
)@@G@@SA0110  LMJ    X11,0,X11      . DO THE SAVE     @A@@@[        J      SY0IG
)@@G@@999         .     @A@@@[        J      SY0500         .     @[@@@@.     IH
)@@G@@@]@[@@. )LOAD     @#@@@[. )LOAD, )TLOAD   @[@@@[.     @A@@@[TL0100  LMJ II
)@@G@@   X11,TWSLOD     .     @A@@@[        J      SY0999         .     @A@@@[IJ
)@@G@@        J      SY0500         .     @[@@@@.     @ @[@@LO0100 L,U   X11,WIK
)@@G@@SLOAD  .    @ @[@@       J     CA0100      .    @A@@@[LO0100  LMJ    X11IL
)@@G@@,WSLOAD     .     @A@@@[        J      SY0999         .     @A@@@[      IM
)@@G@@  J      SY0500         .     @[@@@@.     @]@@@@. )DROP     @[@@@@.     IN
)@@G@@@ @[@@DR0100 L,U   X11,WSDROP  .    @[@[@@.     @B@[@@. CONVERT WSNAME AIO
)@@G@@ND CALL PROPER ROUTINE  @[@[@@.     @G@[@@CA0100 SX,H2 X11,CATARG  . SAVIP
)@@G@@E TARGET ADDR OF ROUTINE TO BE EXECUTED   @E@[@@       OUTCNV,U 12 CWSNMIQ
)@@G@@,SFDNAM    . CONVERT FILE NAME TO FD@G@[@@       LMJ   X11,*CATARG      IR
)@@G@@.CALL PROCESSING RTNE (IN ELEMENT LODSAV) @B@[@@       J     SY0999     IS
)@@G@@ . ERROR RETURN   @C@[@@       LA    A0,CATARG   . GET WHAT WE JUST DID IT
)@@G@@@B@[@@       TE,U  A0,WSLOAD   . WAS IT LOAD?   @C@[@@       J     SY050IU
)@@G@@0      . NO, NORMAL RETURN    @C@[@@. FOR WS'S OLDER THAN 3.8, SET FUZZ IV
)@@G@@PARAMETERS  @C@[@@       LA    A0,WSVERS   . VERSION OF THIS WS   @ @[@@IW
)@@G@@       LSSL  A0,6        .    @B@[@@       AA    A0,WSLEVL   . PLUS LEVEIX
)@@G@@L     @C@[@@       TG,U  A0,0310     . PRIOR TO LEVEL 3.8?  @F@[@@      IY
)@@G@@ J     SY0500      . NO, 3.8 OR LATER-- FUZZ PARAMS ARE OK  @D@[@@      IZ
)@@G@@ LA,U  A2,FUZIND   . NO, GET DEFAULT FIZZ INDEX @C@[@@       SETFUZ     JA
)@@G@@       . AND POST PARAMETERS  @D@[@@       LA,U  A0,PGVERS   . MARK THISJB
)@@G@@ WS AS UP-TO-DATE @ @[@@       SA    A0,WSVERS   .    @ @[@@       LA,U JC
)@@G@@ A0,PGLEVL   .    @ @[@@       SA    A0,WSLEVL   .    @C@[@@       J    JD
)@@G@@ SY0500      . AND TAKE NORMAL EXIT @A@@@[DR0100  LMJ    X11,WSDROP     JE
)@@G@@.     @A@@@[        J      SY0999         .     @A@@@[        J      SY0JF
)@@G@@500         .     @ @@@@       CONSTS            .    @B@@@@SPACES* APLBJG
)@@G@@CI '            '       .     @ @[@@       VARCON            .    @G@[@@JH
)@@G@@CATARG +0,$-$            . INDIRECT THRU HERE TO PROCESSING ROUTINE     JI
)@@G@@@ @[@@       VARBLS            .    @ @[@@SFDNAM* RES  3           .    JJ
)@@G@@@C@[@@OUTNAM APLBCI 'WAS '     . SKELETON 'WAS ' MSG  @ @[@@       RES  JK
)@@G@@ 3           .    @[@[@@/.    @[@[@@.     @^@[@@.      )LIB [LIB #]     JL
)@@G@@@[@[@@.     @ @[@@       INSTRS            .    @]@[@@LB0100.     @A@[@@JM
)@@G@@       LMJ   X11,WSLIB   . GO DO IT @C@[@@       J     SY0999      . AN JN
)@@G@@ERROR, WHAT ELSE? @A@[@@       J     SY0500      . DONE     @[@@@@/.    JO
)@@G@@@^@@@@.      )WSID [NAME]     @[@@@@.     @ @@@@       INSTRS           JP
)@@G@@ .    @]@[@@WS0100.     @C@@@[WS0100  TLD    A0,WSID        . GET PRESENJQ
)@@G@@T NAME@E@@@[        TSTO   A0,OUTNAM+1    . PUT INTO SKELETON MESSAGE   JR
)@@G@@@ @@@@       TLD   A0,CWSNM    .    @ @@@@       TNE   A0,SPACES   .    JS
)@@G@@@F@@@@       J     WS0110      . NO NAME SPECIFIED, DISPALY CURRENT NAMEJT
)@@G@@@D@[@@       TLD   A3,WSID     . SAVE OLD WSNAME FOR DISPLAY@ @[@@      JU
)@@G@@ TSTO  A3,OUTNAM+1 .    @F@@@@       TSTO  A0,WSID     . HE GOT IT RIGHTJV
)@@G@@, GIVE HIM THE PRIZE    @ @@@@       PRINT 16,OUTNAM   .    @A@@@@      JW
)@@G@@ J     SY0500      . FINI     @[@[@@.     @[@[@@.     @]@[@@WS0110.     JX
)@@G@@@C@[@@       TLD   A0,WSID     . GET CURRENT NAME     @C@[@@       TSTO JY
)@@G@@ A0,OUTNAM+1 . PUT IT SOMEWHERE     @^@[@@       PRINT 12,OUTNAM+1@A@@@[JZ
)@@G@@WS0110  PRINT  12,OUTNAM+1    .     @A@@@@       J     SY0500      . FINKA
)@@G@@IS    @A@@@[        VARCON                .     @A@@@[OUTNAM  APLBCI 'WAKB
)@@G@@S '         .     @E@@@[        RES    3              . WSNAME IS EDITEDKC
)@@G@@ INTO HERE  @[@[@@/.    @[@[@@.     @ @[@@.    )VARS,  )FNS,  )GRPS     KD
)@@G@@@[@[@@.     @]@[@@VR0100.     @C@[@@       L,U   A0,ZTPVAR   . SET TYPE KE
)@@G@@TO VARIABLES@C@@@[/. SYMBOL TABLE LIST CMNDS:  )VARS, )FNS, )GRPS @[@@@[KF
)@@G@@.     @#@@@[        INSTRS .  @D@@@[VR0100  LA,U   A0,ZTPVAR      . SET KG
)@@G@@TYPE TO VARIABLES @ @@@@       J     PRTNMS      .    @]@@@@GR0100.     KH
)@@G@@@D@@@@ZTPGRP EQU   0777        . GROUPS DON'T EXIST YET     @C@@@@      KI
)@@G@@ L,U   A0,ZTPGRP   . SET TYPE TO GROUP    @ @@@@       J     PRTNMS     KJ
)@@G@@ .    @]@@@@FN0100.     @C@@@@       L,U   A0,ZTPFUN   . SET TYPE TO FUNKK
)@@G@@CTION @ @@@@       J     PRTNMS      .    @[@@@@.     @A@@@@.  PRINT ENTKL
)@@G@@RIES FROM SYMBOL TABLE  @[@@@@.     @]@@@@PRTNMS.     @C@@@@       S    KM
)@@G@@ A0,TYPE     . TYPE OF ITEM TO PRINT@E@@@@       L     A0,CWSNM    . GETKN
)@@G@@ REQUESTED STARTING POINT     @C@@@@       SSL   A0,3*9      . ISOLATE 1KO
)@@G@@ST CHAR     @B@@@@       TNE,U A0,ASPACE   . IF ITS A SPACE @D@@@@      KP
)@@G@@ SZ    A0          . THEN LET HIM GET EVERYTHING@A@@@@       LSSL  A0,3*KQ
)@@G@@9      . REPOSTION@ @@@@       S     A0,CWSNM    .    @C@@@@       LA,U KR
)@@G@@ A4,0        . SET FLAG LENGTH ZERO @E@@@@       LMJ   X11,NLINIT  . INIKS
)@@G@@TIALIZE NAMELIST PRINT ROUTINE@ @@@@       J     PR0999      .    @E@@@@KT
)@@G@@       LA    A0,WSYMAX   . SEARCH THE ENTIRE SYMBOL TABLE   @A@@@@      KU
)@@G@@ S     A0,SYMCNT   . SAVE IT  @C@@@@       LXI,U A3,3        . THREE WORKV
)@@G@@DS PER ENTRY@G@@@@       LXM,U A3,WSYTBL-3 . START SEARCH AT BEGINNING OKW
)@@G@@F SYMBOL TABLE    @B@@@@       SA    A3,PRSRCH   . SAVE SEARCH ARG@E@@@@KX
)@@G@@PR0100 LR    R1,SYMCNT   . NO OF LOCNS LEFT TO BE SEARCHED  @E@@@@      KY
)@@G@@ LA,U  A0,ZTPNAM   . FLAG FOR COMPARISON OF BLOCK TYPE@C@@@@       LA   KZ
)@@G@@ A3,PRSRCH   . RESTORE SEARCH INDEX @F@@@@       SE,S1 A0,3,*A3    . SEALA
)@@G@@RCH TABLE FOR NEXT PRIMARY ENTRY    @B@@@@       J     PR1000      . NOTLB
)@@G@@HING LEFT   @E@@@@       SR    R1,SYMCNT   . SAVE CT OF NO LEFT TO SEARCLC
)@@G@@H     @C@@@@       SA    A3,PRSRCH   . AND SEARCH INDEX     @F@@@@      LD
)@@G@@ L,H2  A0,1,A3     . ADDRESS OF DESCRIPTOR OF CURRENT ENTRY @F@@@@      LE
)@@G@@ JZ    A0,PR0100   . IF NONE, VBLE IS INACTIVE.  SKIP IT    @C@@@@. BE SLF
)@@G@@URE WE DO THIS FOR GLOBAL NAMES ONLY--    @E@@@@PR0105 ABSADR A0        LG
)@@G@@ . GET ABSOLUTE ADDR OF DESCRIPTOR  @D@@@@       TNZ,H1 2,A0       . IS LH
)@@G@@THIS A GLOBAL OBJECT?   @F@@@@       J     PR0107      . YES, GO SEE IF LI
)@@G@@ITS THE DESIRED TYPE    @D@@@@       LA,H2 A0,2,A0     . NO, GET SUCCESSLJ
)@@G@@OR POINTER  @F@@@@       JNZ   A0,PR0105   . IF THERE IS A SUCCESSOR, GOLK
)@@G@@ EXAMINE IT @F@@@@       J     PR0100      . ELSE SKIP TO NEXT SYMBOL TALL
)@@G@@BLE ENTRY   @D@@@@PR0107 LA,S1 A0,0,A0     . GET TYPE OF THIS QUANTITY  LM
)@@G@@@F@@@@       JNE   A0,TYPE PR0100   . IF NOT RIGHT TYPE, KEEP LOOKING   LN
)@@G@@@E@@@@       JNE,U A0,ZTPVAR PR0110 . IF NOT VARS, GO PRINT IT    @F@@@@LO
)@@G@@       LA,S2 A0,0,A0     . GET MODE INDICATOR FROM DESCRIPTOR     @C@@@@LP
)@@G@@       TE,U  A0,ZMOUNK   . IS MODE UNKNOWN?     @A@@@@       TNE,U A0,ZMLQ
)@@G@@ONUL   . OR NULL? @G@@@@       J     PR0100      . IF EITHER, INACTIVE VLR
)@@G@@ARIABLE NAME.  SKIP IT  @G@@@@PR0110 LA    A0,2,A3     . GET 1ST 4 CHARSLS
)@@G@@ OF NAME FROM PRIMARY SMBLTABL@F@@@@       JG    A0,CWSNM PR0100  . IF ILT
)@@G@@T SORTS .LT. DESIRED, SKIP IT @D@@@@       LA,U  A3,0,A3     . GET RID OLU
)@@G@@F INCREMENT FIELD @E@@@@       RELADR A3         . AND MAKE NAMEBLOK ADDLV
)@@G@@R RELATIVE  @D@@@@       LA,U  A4,WSID     . BASE ADDR OF WORKSPACE     LW
)@@G@@@D@@@@       LMJ   X11,NLNAME  . PUT NAME INTO CURRENT LINE @ @@@@      LX
)@@G@@ J     PR0999      .    @D@@@@       J     PR0100      . GO BACK AND KEELY
)@@G@@P SEARCHING @[@@@@.     @ @@@@PR0999 J     SY0999      .    @[@@@@.     LZ
)@@G@@@D@@@@PR1000 LMJ   X11,NLFLSH  . FLUSH LIST OF NAMES, IF ANY@ @@@@      MA
)@@G@@ J     PR0999      .    @A@@@@       J     SY0500      . EXIT     @[@@@@MB
)@@G@@.     @ @@@@       VARBLS            .    @ @@@@PRSRCH RES   1          MC
)@@G@@ .    @ @@@@PRTEMP +     0           .    @ @@@@SYMCNT EQUF  PRTEMP,,H1 MD
)@@G@@ .    @ @@@@TYPE   EQUF  PRTEMP,,S4  .    @[@@@[/.    @[@@@[.     @]@@@[ME
)@@G@@. )FLIST    @[@@@[.     @ @@@[       INSTRS            .    @B@@@[FL0100MF
)@@G@@ TZ,H2 WSTATE      . IS )SI CLEAR?  @C@@@[       J     FL0400      . NO,MG
)@@G@@ GO SIGNAL ERROR  @F@@@[. SHOULD WE PRINT ALL FUNCS OR START AT USER SPEMH
)@@G@@CIFIED POINT?     @G@@@[       LA    A0,CWSNM    . GET REQUESTED STARTINMI
)@@G@@G PT (FROM COMMD. CARD) @C@@@[       SSL   A0,3*9      . ISOLATE 1ST CHAMJ
)@@G@@R     @B@@@[       TNE,U A0,ASPACE   . IF IT'S A SPACE@D@@@[       SZ   MK
)@@G@@ A0          . THEM LET EM GET EVERYTHING @B@@@[       LSSL  A0,3*9     ML
)@@G@@ . REPOSITION     @A@@@[       SA    A0,CWSNM    . SAVE IT  @C@@@[. PREPMM
)@@G@@ARE TO SEARCH SYMBOL TABLE FOR FUNCTIONS  @E@@@[       LA    A0,WSYMAX  MN
)@@G@@ . NUMBER OF ENTRIES IN SYMBOL TABLE@A@@@[       SA    A0,FLSRCT   . SAVMO
)@@G@@E IT  @C@@@[       LXI,U A3,3        . 3 WORDS PER ENTRY    @F@@@[      MP
)@@G@@ LXM,U A3,WSYTBL-3 . START SEARCH AT BEGINING OF SYM TABLE  @D@@@[      MQ
)@@G@@ SA    A3,FLSRPT   . SAVE SEARCH PARAMETERS     @ @@@[. SYMBOL TABLE SEAMR
)@@G@@RCH LOOP    @B@@@[FL0200 TZ    CONSBR      . CONSOLE BREAK? @A@@@[      MS
)@@G@@ J     FL0500      . HANDLE IT@E@@@[       LR    R1,FLSRCT   . NUMBER OFMT
)@@G@@ LOC LEFT TO BE SEARCHED@D@@@[       LA,U  A0,ZTPNAM   . SEARCH FOR PRIMMU
)@@G@@ NAME BLOCS @D@@@[       LA    A3,FLSRPT   . RESTORE SEARCH POSITION    MV
)@@G@@@E@@@[       SE,S1 A0,3,*A3    .SEARCH TABLE FOR NEXT PRIM ENTRY  @C@@@[MW
)@@G@@       J     FL1000      . NOTHING LEFT , DONE  @F@@@[       SR    R1,FLMX
)@@G@@SRCT   . SAVE COUNT OF NUMBER LEFT TO SEARCH    @D@@@[       SA    A3,FLMY
)@@G@@SRPT   . SAVE POSITION OF SEARCH    @B@@@[. IF NAME SORTS CORRECTLY, DUMMZ
)@@G@@P FUNC TEXT @G@@@[FL0300 LA    A1,2,A3     . GET 1ST 4 CHARS OF NAME FRONA
)@@G@@M SYMBOL TABLE    @E@@@[       JG    A1,CWSNM FL0200  . IF TOO SMALL, SKNB
)@@G@@IP TO NEXT  @D@@@[       LA    A0,A3       . SET NAME UP FOR FUNCDUMPER NC
)@@G@@@C@@@[       LMJ   X11,FUNDMP  . AND SPLAT IT OUT     @B@@@[       J    ND
)@@G@@ SY0900      . OOPS, ERROR    @E@@@[       J     FL0200      . NOFIND, CNE
)@@G@@ONTINUE TO NEXT FUNC    @E@@@[       SEND  '    '      . SEPERATE DISPLANF
)@@G@@Y BY A BLANK LINE @B@@@[       J     FL0200      . AND CONTINUE   @[@@@[NG
)@@G@@.     @B@@@[. CANNOT )FLIST BECAUSE )SI IS NOT CLEAR--@[@@@[.     @D@@@[NH
)@@G@@FL0400 ERROR YSINOC,SY0500    . INFORM USER AND EXIT  @#@@@[. CONSOLE BRNI
)@@G@@EAK   @C@@@[FL0500 SZ    CONSBR      . CLEAR BREAK FLAG     @[@@@[.     NJ
)@@G@@@#@@@[. NORMAL EXIT     @B@@@[FL1000 J     SY0500      . NORMAL EXIT    NK
)@@G@@@[@@@[.     @[@@@[.     @ @@@[       VARBLS            .    @H@@@[FLSRCTNL
)@@G@@ EQUF  $,,H1       . NUMBER OF LOCATIONS LEFT TO SEARCH IN SYM TABL     NM
)@@G@@@ @@@[       RES   1           .    @E@@@[FLSRPT +     0           . X-RNN
)@@G@@EG SAVE FOR SEARCH POSITION   @[@@@@/.    @#@@@@.   )SI,  )SIV    @[@@@@NO
)@@G@@.     @ @@@@       INSTRS            .    @D@@@@SI0100 SZ    SVFLAG     NP
)@@G@@ . )SI-- TURN OFF NAME FLAG   @ @@@@       J     SI0120      .    @D@@@@NQ
)@@G@@SI0110 SX    X11,SVFLAG  . )SIV-- TURN ON NAME FLAG   @F@@@@SI0120 LA,U NR
)@@G@@ A3,WSTATE   . START STATEVECT SCAN AT LATEST ONE     @E@@@@       SX   NS
)@@G@@ X11,SIKBRD  . AND INITIALIZE KEYBOARD FLAG     @[@@@@.     @B@@@@. PRINNT
)@@G@@T STATEVECT WHOSE ADDR IS IN A3     @[@@@@.     @E@@@@SI0200 TZ    CONSBNU
)@@G@@R      . HAS USER SIGNALLED ATTENTION?    @B@@@@       J     SI0830     NV
)@@G@@ . YES, GET OUT   @E@@@@       SA    A3,SISTAV   . SAVE ADDR OF CURRENT NW
)@@G@@STATEVECT   @E@@@@       LMJ   X11,LNFLSH  . CLEAR OUTPUT BUF-- REINITIANX
)@@G@@LIZE  @E@@@@       LA    A3,SISTAV   . RECOVER ADDR OF CURRENT STATEVECTNY
)@@G@@@A@@@@       LA,Q1 A0,0,A3     . GET STATE@G@@@@       COMJMP A0,SI0900 NZ
)@@G@@STSUSP,SI0210 STEVAL,SI0220 STUNQU,SI0230 ;     @B@@@@             STFUNOA
)@@G@@X,SI0300 STFUNC,SI0210 .@^@@@@. SUSPENDED STATE--     @C@@@@SI0210 SX   OB
)@@G@@ X11,SIKBRD  . TURN ON KEYBOARD FLAG@D@@@@       J     SI0810      . ANDOC
)@@G@@ CHAIN TO NEXT STATE    @^@@@@. EVALUATED INPUT STATE @ @@@@SI0220 PUT,UOD
)@@G@@ AQUAD       .    @D@@@@       J     SI0240      . PRINT, GO TO NEXT STAOE
)@@G@@TE    @#@@@@. UNQUOTE STATE   @ @@@@SI0230 PUT,U AMEMBR      .    @^@@@@OF
)@@G@@. SAVE BUFFER POINTERS  @ @@@@SI0240 LMJ   X11,LINSUS  .    @ @@@@      OG
)@@G@@ J     SI0800      .    @[@@@@.     @^@@@@. FUNC EXECUTION STATE--@[@@@@OH
)@@G@@.     @E@@@@SI0300 LA,H1 A6,3,A3     . ADDR OF NAMEBLOK FROM STATEVECT  OI
)@@G@@@A@@@@       LMJ   X11,PRTNAM  . PRINT IT @ @@@@       J     SI0999     OJ
)@@G@@ .    @#@@@@. PRINT LINENUMBER@ @@@@SI0310 PUT,U ALBRAK      .    @C@@@@OK
)@@G@@       LA    A3,SISTAV   . ADDR OF STATEVECTOR  @C@@@@       LA,H1 A4,1,OL
)@@G@@A3     . GET LINENO FROM IT   @ @@@@       DSA   A4,36       .    @ @@@@OM
)@@G@@       DSL   A0,72       .    @A@@@@       LMJ   X11,FORMI   . PRINT IT ON
)@@G@@@ @@@@       J     SI0999      .    @C@@@@       PUT,U ARBRAK      . CLOOO
)@@G@@SE THE BRACKETS   @E@@@@. CHECK IF PREVIOUS STATE WAS KEYBOARD, IF SO, MOP
)@@G@@ARK PENDANT @C@@@@SI0320 TNZ   SIKBRD      . IS KEYBOARD FLAG ON? @E@@@@OQ
)@@G@@       J     SI0400      . NO, GO PRINT LOCAL VARIABLES     @D@@@@      OR
)@@G@@ PUT,U AEXPON      . YES, MARK WITH ASTERISK    @[@@@@.     @B@@@@. IF )OS
)@@G@@SIV-- PRINT LOCAL VARIBALE NAMES--  @[@@@@.     @D@@@@SI0400 LMJ   X11,LOT
)@@G@@INSUS  . TEMP SAVE BUFFER POINTERS  @C@@@@       TNZ   SVFLAG      . IS OU
)@@G@@VBLE FLAG ON?     @C@@@@       J     SI0800      . NO, GO TO NEXT STATE OV
)@@G@@@C@@@@       LA    A3,SISTAV   . STATEVECTOR ADDR     @G@@@@. SINCE FUNCOW
)@@G@@ MAY HAVE BEEN EDITED, WE MUST CHAIN FROM NAMEBLOK TO LINE 0@F@@@@      OX
)@@G@@ LA,H1 A0,3,A3     . GET ADR OF NAMEBLOK FROM STATEVECT     @ @@@@      OY
)@@G@@ ABSADR A0         .    @D@@@@       LA,U  A2,ZTPFUN   . THIS VAL FOR TEOZ
)@@G@@STING--     @F@@@@       LA,H2 A0,1,A0     . POINTER TO NEXT DESCR FROM PA
)@@G@@NAMEBLOK    @C@@@@SI0403 JZ    A0,SI0900   . IF NO DESCR, SYSERR  @B@@@@PB
)@@G@@       ABSADR A0         . ELSE EXAMINE IT@G@@@@       JE,S1 A2,0,A0 SI0PC
)@@G@@406   . IF THIS IS THE FUNC DESCR, WE'RE DONE   @G@@@@       LA,H2 A0,2,PD
)@@G@@A0     . OTHERWISE GET ADDR OF NEXT DESCR FROM THIS   @C@@@@       J    PE
)@@G@@ SI0403      . AND GO EXAMINE IT    @D@@@@SI0406 LA,H2 A0,1,A0     . GETPF
)@@G@@ TABLE ADDR FROM DSCR   @G@@@@       SA    A0,SIFTBL   . TEMP SAVE FOR LPG
)@@G@@ATER USE IN PRINTING LABELS   @ @@@@       ABSADR A0         .    @G@@@@PH
)@@G@@       LA,H2 A2,1,A0     . ADDR OF FUNC HDR LINE FOLLOWS BLOK CTL WD    PI
)@@G@@@C@@@@       LMJ   X11,LEXGET  . PREPARE TO SCAN IT   @ @@@@       J    PJ
)@@G@@ SI0999      .    @C@@@@SI0410 LMJ   X4,0,X4     . GET NEXT THINGIE     PK
)@@G@@@ @@@@       J     SI0999      .    @E@@@@       COMJMP A1,SI0900 LEXOPRPL
)@@G@@,SI0420 LEXNAM,SI0430    .    @G@@@@SI0420 JE,U  A0,AEOL SI0500 . OPR INPM
)@@G@@ 1S T HALFWD MUST BE END OF LINE    @B@@@@       J     SI0900      . ELSPN
)@@G@@E SYSERR    @F@@@@SI0430 SA    A0,SINAMA   . TEMP SAVE NAMEBLOK ADDR OF PO
)@@G@@NAMED VBLE  @B@@@@       LMJ   X4,0,X4     . SCAN AFTER NAME@ @@@@      PP
)@@G@@ J     SI0999      .    @D@@@@       JNE,U A1,LEXOPR SI0900 . IF NOT OPRPQ
)@@G@@, SYSERR    @G@@@@       JE,U  A0,AEOL SI0900   . DIDDO IF EOL, WHICH CAPR
)@@G@@NNOT BE IN H1     @D@@@@       JE,U  A0,AFNNAM SI0410 . IF FUNCNAME, SKIPS
)@@G@@P IT  @B@@@@. PRINT LOCAL VBLES-- RESULTS -- ARGUMENTS@D@@@@SI0440 SX   PT
)@@G@@ X4,SILXPT   . TEMP SAVE LEXICAL POINTERS @ @@@@       SX    X5,SILXPT+1PU
)@@G@@ .    @D@@@@       LMJ   X11,LINRES  . RESTORE BUFFER POINTERS    @C@@@@PV
)@@G@@       LA    A3,SINAMA   . RELADR OF NAMEBLOK   @B@@@@       LA,U  A4,WSPW
)@@G@@ID     . ABSADR OF WS   @D@@@@       LMJ   X11,PRALGN  . PIRNT NAME WITHPX
)@@G@@ ALIGNMENT  @ @@@@       J     SI0999      .    @C@@@@       LMJ   X11,LPY
)@@G@@INSUS  . SAVE NEW BUF POINTERS@D@@@@       LX    X4,SILXPT   . RESTORE LPZ
)@@G@@EXICAL POINTERS   @ @@@@       LX    X5,SILXPT+1 .    @C@@@@       J    QA
)@@G@@ SI0410      . GO LOOK AT NEXT THING@A@@@@. NOW PRINT LABEL VARIABLES IFQB
)@@G@@ ANY  @E@@@@SI0500 LA    A0,SIFTBL   . RECOVER RELADR OF FUNC TABLE     QC
)@@G@@@G@@@@       LA,U  A0,1,A0     . BUMP SO IT POINTS TO ENTRY FOR LINE ZERQD
)@@G@@O     @C@@@@       LMJ   X11,FUNLBP  . GO PRINT THE LABELS  @ @@@@      QE
)@@G@@ J     SI0999      .    @[@@@@.     @B@@@@. FINAL CLEANUP AND STEP TO NEQF
)@@G@@XT STATE    @C@@@@SI0800 SZ    SIKBRD      . CLEAR KEYBOARD FLAG  @D@@@@QG
)@@G@@SI0810 LMJ   X11,LNFLSH  . FLUSH CURRENT LINE, IF ANY @D@@@@SI0820 LA   QH
)@@G@@ A3,SISTAV   . RECOVER ADDR OF STATEVECT  @D@@@@       LA,H2 A3,0,A3    QI
)@@G@@ . GET POINTER TO NEXT BLOK   @B@@@@       JZ    A3,SI0830   . IF NONE, QJ
)@@G@@QUIT  @D@@@@       ABSADR A3         . ELSE MAKE ADDR ABSOLUTE    @D@@@@QK
)@@G@@       J     SI0200      . AND GO EXAMINE NEXT STATE  @E@@@@SI0830 LMJ  QL
)@@G@@ X11,LNFLSH  . BE SURE ALL OF LAST LINE IS OUT  @E@@@@       SZ    CONSBQM
)@@G@@R      . MARK BREAK KEY INTERRUPT SERVICED@B@@@@       J     SY0500     QN
)@@G@@ . AND GET OUT    @[@@@@.     @A@@@@SI0900 ERROR YSYSTM,SI0999    .     QO
)@@G@@@ @@@@SI0999 SZ    CONSBR      .    @ @@@@       J     SY0999      .    QP
)@@G@@@ @@@@       VARBLS            .    @ @@@@SIKBRD EQUF  $,,H1       .    QQ
)@@G@@@ @@@@SISTAV EQUF  $,,H2       .    @ @@@@       RES   1           .    QR
)@@G@@@ @@@@SVFLAG EQUF  $,,H1       .    @ @@@@SINAMA EQUF  $,,H2       .    QS
)@@G@@@ @@@@       RES   1           .    @ @@@@SIFTBL EQUF  $,,H1       .    QT
)@@G@@@#@@@@       RES   1 .  @ @@@@SILXPT RES   2           .    @[@@@@.     QU
)@@G@@@F@@@[/. )EDIT-- GENERATE FUNCTION SYMBOLICS AND LINK TO @ED PROCESSOR  QV
)@@G@@@[@@@[.     @#@@@[        INSTRS .  @F@@@[ED0010  TNZ    (+UOMED)       QW
)@@G@@. HAS SITE IMPLEMENTED UOM @ED?     @E@@@[        J      SY0930         QX
)@@G@@. NO, UNIMPLEMENTED FEATURE   @D@@@[. *** TEMP KLUDGE UNTIL G-OPTION EDIQY
)@@G@@TOR IS RELEASED   @D@@@[        LA     A0,RCOPTW      . GET CURRENT OPTIQZ
)@@G@@ONS   @G@@@[        AND,U  A0,+1*/('Z'-'Q')+1*/('Z'-'R')+1*/('Z'-'S')   RA
)@@G@@. ASCII BITS@G@@@[        JZ     A1,ED00XX      . IF NOT USING IVERSON KRB
)@@G@@EYBOARD, LET GO   @F@@@[        ERROR  YNOTQM,SY0999  . ELSE TELL HIM WERC
)@@G@@ CANT DO IT YET   @]@@@[ED00XX .    @#@@@[. *** END KLUDGE  @C@@@[      RD
)@@G@@  TZ,H2  WSTATE         . IS )SI CLEAR?   @D@@@[        J      ED0900   RE
)@@G@@      . NO, SIGNAL NOT ALLOWED@E@@@[        LA,U   A0,EDFASG      . ASSIRF
)@@G@@GN IMAGE FOR OUR FILE   @D@@@[        ER     CSF$           . BE SURE WERG
)@@G@@'VE GOT IT  @G@@@[        SZ     EDNAME         . CLEAR POINTER TO FOUNDRH
)@@G@@ FUNC NAMEBLOK    @[@@@[.     @^@@@[. NOW SCAN THE COMMAND  @[@@@[.     RI
)@@G@@@G@@@[ED0100  LA     A0,SYLCHR      . GET CHAR WHICH TERMINATED LAST SCARJ
)@@G@@N     @E@@@[ED0105  JE,U   A0,AEOL ED0200 . IF END LINE, GO CLEAN UP    RK
)@@G@@@G@@@[        JNE,U  A0,ASPACE ED0910    . ELSE REQUIRE SPACE OR GIVE ERRL
)@@G@@ROR   @F@@@[        CSCAN  ED0105,ED0110,ED0910 ED0910   . LOOK FOR FUNCRM
)@@G@@ NAME @D@@@[ED0110  LMJ    X11,SYMBOL     . FIND SYMBOL IN TABLE  @A@@@[RN
)@@G@@        J      ED0999         .     @F@@@[        SA     A1,EDNAME      RO
)@@G@@. SAVE POINTER TO FOUND NAMEBLOK    @G@@@[. BEFORE FUNC DUMPER TRASHES IRP
)@@G@@/O BUF, CHECK SYNTAX ON REST OF COMMAND   @F@@@[ED0120  LA     A0,SYLCHRRQ
)@@G@@      . GET CHAR WHICH TERMINATED SCAN    @E@@@[        JE,U   A0,AEOL ERR
)@@G@@D0130 . IF END OF LINE, CONTINUE    @F@@@[        JNE,U  A0,ASPACE ED090RS
)@@G@@5    . ELSE REQUIRE BLANK OR ERROR  @F@@@[        CSCAN  ED0120,ED0905,ERT
)@@G@@D0905 ED0905   . SCAN TO END OF CMND@D@@@[. COMMAND IS OK, GENERATE A SYRU
)@@G@@MBOLIC COPY OF ITS TEXT @F@@@[ED0130  DL     A0,RCALTF      . CURRENT ALRV
)@@G@@T PRINTFILE, IF ANY     @C@@@[        DS     A0,EDALTT      . TEMP SAVE RW
)@@G@@IT    @D@@@[        DL     A0,EDFNAM      . GET EDITOR FILE NAME  @E@@@[RX
)@@G@@        DS     A0,RCALTF      . MAKE IT OUR PRNTA$ FILE     @E@@@[      RY
)@@G@@  LA     A0,RCOUTI      . CURRENT OUTPUT INHIBIT FLAG @D@@@[        SA  RZ
)@@G@@   A0,EDOUTT      . TEMP SAVE THAT, ALSO  @E@@@[        SX     X11,RCOUTSA
)@@G@@I     . INHIBIT OUTPUT TO TERMINAL  @E@@@[        LA     A0,EDNAME      SB
)@@G@@. RECOVER NAMEBLOK POINTER    @A@@@[        ABSADR A0             .     SC
)@@G@@@E@@@[        LMJ    X11,FUNDME     . SPECIAL FUNCDUMPER FOR )EDIT@D@@@[SD
)@@G@@        J      ED0133         . ERROR DUMPING FUNCTION@D@@@[        J   SE
)@@G@@   ED0136         . NOFIND IN SYMBOL TABLE@C@@@[        LA,U   A0,2     SF
)@@G@@      . SET NORMAL FLAG @^@@@[        J      ED0140   @C@@@[ED0133  LA,USG
)@@G@@   A0,0      . SET ERROR EXIT FLAG  @ @@@[        J      ED0140    .    SH
)@@G@@@C@@@[ED0136  LA,U   A0,1      . SET NOFIND EXIT FLAG @B@@@[ED0140  SA  SI
)@@G@@   A0,EDFXFL . SAVE EXIT FLAG @C@@@[        LA,U   A0,EDBRKP      . GET SJ
)@@G@@@BRKPT IMAGE@F@@@[        ER     CSF$           . AND CLOSE THE FILE WE SK
)@@G@@WROTE INTO  @F@@@[        DL     A0,EDALTT . RECOVER ORIGINAL ALT OUTPUTSL
)@@G@@ FILE SPEC  @B@@@[        DS     A0,RCALTF . RESTORE IT     @E@@@[      SM
)@@G@@  LA     A0,EDOUTT . RECOVER ORIGINAL OUTPUT INHIBIT  @C@@@[        SA  SN
)@@G@@   A0,RCOUTI . RESTORE THAT, TOO    @D@@@[        LA     A0,EDNAME . GETSO
)@@G@@ FUNCNAME POINTER BACK  @F@@@[        LMJ    X11,SYMERS     . REMOVE SYMSP
)@@G@@BOL TABLE REF TO IT     @C@@@[        LA     A0,EDFXFL . GET EXIT FLAG BSQ
)@@G@@ACK   @B@@@[        TNE,U  A0,2           . WAS IT 2? @F@@@[        J   SR
)@@G@@   ED0100         . YES, NORMAL. CONTINUE COMMAND SCAN@D@@@[        J   SS
)@@G@@   ED0910         . NO, SIGNAL NOFIND     @[@@@[.     @A@@@[. NORMAL TERST
)@@G@@MINATION OF COMMAND SCAN@[@@@[.     @F@@@[ED0200  LA     A0,EDNAME      SU
)@@G@@. GET FUNC NAME POINTER OR ZERO     @G@@@[        LMJ    X11,EDLEAP     SV
)@@G@@. CALL ED RTNE TO EDIT AND ACCEPT DEFN    @F@@@[        J      SINOFF   SW
)@@G@@      . USER TERMINATED @ED WITH HARD EOF @F@@@[        J      SY0500   SX
)@@G@@      . NORMAL EXIT, CONTINUE THE MARCH   @[@@@[.     @F@@@[ED0900  ERROSY
)@@G@@R  YSINOC,SY0999  . SIGNAL )SI NOT CLEAR AND WIPE OUT @F@@@[ED0905  LA  SZ
)@@G@@   A0,EDNAME      . GET POINTER TO SCANNED NAMEBLOK   @G@@@[        LMJ TA
)@@G@@   X11,SYMERS     . REMOVE SYMBOL TABLE REFERENCE TO IT     @F@@@[ED0910TB
)@@G@@  ERROR  YINCOR,SY0999  . VARIOUS FORMAT ERRORS ON THE CMND @[@@@[.     TC
)@@G@@@A@@@[ED0999  J      SY0999         .     @[@@@[.     @#@@@[        VARBTD
)@@G@@LS .  @E@@@[EDALTT  RES    2         . TEMP STORE OF ALT PRINT FILE NAMETE
)@@G@@@D@@@[EDOUTT  RES    1         . ALSO OUTPUT INHIBIT FLAG   @F@@@[EDNAMETF
)@@G@@  EQUF   $,,H1     . POINTER TO NAMEBLOK OF EDITED FUNC     @F@@@[EDFXFLTG
)@@G@@  EQUF   $,,S4     . TEMP STORE RETURN FLAG FROM DUMPER     @#@@@[      TH
)@@G@@  RES    1  @D@@@[. CSF$ IMAGES ARE IN D-BANK SO REP WRITE PROTECT WORKSTI
)@@G@@@#@@@[EDFASG  '@ASG,T'  @B@@@[        +UOMEOP,' ',' ',' ',' ',' '     . TJ
)@@G@@@ @@@[EDFNAM  'APL$ALT$EDF$. .'     @A@@@[EDBRKP  '@BRKPT APL$ALT$EDF$ .TK
)@@G@@ '    @D@@@[/. ALT PRINT FILE COMMANDS  )RESUME, )SITE, )CSITE    @[@@@[TL
)@@G@@.     @ @@@[       INSTRS            .    @]@@@[. )RESUME   @D@@@[AP0100TM
)@@G@@ LMJ   X11,AP1000  . CLOSE OUTPUT FILE, IF ANY  @D@@@[       SZ    RCOUTTN
)@@G@@I      . LOWER OUTPUT INHIBIT FLAG  @A@@@[       J     SY0500      . ANDTO
)@@G@@ EXIT @]@@@[. )SITE     @D@@@[AP0200 SX    X11,RCOUTI  . RAISE OUTPUT INTP
)@@G@@HIBIT FLAG  @C@@@[       J     AP0400      . AND GO GET ALT FILE  @]@@@[TQ
)@@G@@. )CSITE    @D@@@[AP0300 SZ    RCOUTI      . LOWER OUTPUT INHIBIT FLAG  TR
)@@G@@@C@@@[        LA      A0,RCOPTW     . GET OPTIONS     @G@@@[        AND,TS
)@@G@@U  A0,+1*/('Z'-'Q')+1*/('Z'-'R')+1*/('Z'-'S')   . ASCII OPTS@G@@@[      TT
)@@G@@  JZ     A1,AP0400      . LET GO IF NOT USING IVERSON KEYBOARD    @E@@@[TU
)@@G@@        ERROR   YNOTQM,SY0999 . YES, CANNOT DO A )CSITE     @E@@@[. CHECTV
)@@G@@K TO SEE IF USER GAVE A SITEID AND IF SO, EDIT IT.    @F@@@[AP0400 LA   TW
)@@G@@ A0,STATE    . GET FINAL STATE OF COMMADN SCANNER     @G@@@[       TG,U TX
)@@G@@ A0,2        . DID IT THINK IT QUIT AFTER SEEING A WSNAME?  @G@@@[      TY
)@@G@@ J     AP0410      . YES, GO GET FIELDATA FOR USE AS A SITEID     @F@@@[TZ
)@@G@@       DL    A4,APSPSP   . GET FLAG TO USE IN PLACE OF SITEID     @D@@@[UA
)@@G@@       J     AP0420      . AND GO SEE WHAT'S THERE NOW@F@@@[AP0410 OUTCNUB
)@@G@@V,U 6 CWSNM,APFTMP     . EDIT SITEID TO TEMP STORAGE  @D@@@[       DL   UC
)@@G@@ A4,APSCOM   . GET COMMA-COMMA AND SITEID @F@@@[. NOW SEE IF THERE'S AN UD
)@@G@@OLD FILE TO BE CLOSED AND GET RID OF IT   @E@@@[AP0420 TNZ   RCALTF     UE
)@@G@@ . IS THERE CURRENTLY AN ALT FILE?  @C@@@[       J     AP0500      . NO,UF
)@@G@@ GO GET A NEW ONE @C@@@[       DTE   A4,APFSID   . YES, TO SAME SITE?   UG
)@@G@@@D@@@[       J     $+2         . NO, DISPOSE OF OLD FILE    @E@@@[      UH
)@@G@@ J     SY0500      . IF SO, NOTHING ELSE TO DO. EXIT. @E@@@[       LMJ  UI
)@@G@@ X11,AP1000  . NO, XMIT CURRENT FILE TO ITS SITE@A@@@[. GET A NAME FOR TUJ
)@@G@@HE NEW PRINT FILE @E@@@[AP0500 DS    A4,APFSID   . JAM SITEID SPEC INTO UK
)@@G@@@SYM CARD   @E@@@[        LMJ    X11,CONLIA     . GET USER'S LIBNO IN FIUL
)@@G@@ELDATA@F@@@[        DS     A3,APFUQU      . USE AS QUALIFIER IN @USE IMAUM
)@@G@@GE    @C@@@[        DS     A3,APFSQU      . AND TO @SYM     @ @@@[. NOW UN
)@@G@@WE ACTUALLY GET THE FILE@A@@@[AP0600 LA,U  A0,APFUSE   . @USE     @ @@@[UO
)@@G@@       ER    CSF$        .    @A@@@[       LA,U  A0,APFASG   . @ASG     UP
)@@G@@@ @@@[       ER    CSF$        .    @C@@@[       DL    A0,APFUNM   . GETUQ
)@@G@@ THE @USE NAME    @F@@@[       DS    A0,RCALTF   . TO PACKET SO WE KNOW UR
)@@G@@ALT FILE IS OPEN  @G@@@[        LA,U    A0,WRITFD     . GET ADDR OF FIELUS
)@@G@@DATA OUTPUT ROUTINE     @A@@@[        LA,U    A1,WRMKFD     .     @G@@@[UT
)@@G@@        SA      A0,RCWRIT     . AND FORCE ALT OUTPUT ALWAYS IN FIELDATA UU
)@@G@@@A@@@[        SA      A0,RCWRMK     .     @A@@@[       J     SY0500     UV
)@@G@@ . AND EXIT @[@@@[.     @A@@@[. CLOSE RTNE FOR ALT PRINT FILES--  @[@@@[UW
)@@G@@.     @D@@@[AP1000  LA      A0,RCOPTW     . GET CURRENT OPTIONS   @G@@@[UX
)@@G@@        AND,U  A0,+1*/('Z'-'Q')+1*/('Z'-'R')+1*/('Z'-'S')   . ASCII OPTSUY
)@@G@@@G@@@[        JZ     A1,AP1010      . IF NOT IVERSON KEYBOARD, DON'T FARUZ
)@@G@@BLE   @F@@@[        LA,U    A0,WRITAS     . YES, RECOVER ADDR OF ASCII OVA
)@@G@@UTPUT @A@@@[        LA,U    A1,WRMKAS     .     @G@@@[        SA      A0VB
)@@G@@,RCWRIT     . AND RESTORE POINTERS CHANGED BY )SITE   @A@@@[        SA  VC
)@@G@@    A1,RCWRMK     .     @G@@@[AP1010  TNZ     RCALTF        . WAS THERE VD
)@@G@@REALLY AN ALT PRINT FILE?     @A@@@[       J     0,X11       . NO, QUIT VE
)@@G@@@C@@@[       LA,U  A0,APFBRK   . GET @BRKPT IMAGE     @ @@@[       ER   VF
)@@G@@ CSF$        .    @A@@@[       LA,U  A0,APFREE   . NOW @FREE@ @@@[      VG
)@@G@@ ER    CSF$        .    @C@@@[       LA,U  A0,APFSYM   . AND FINALLY @SYVH
)@@G@@M     @D@@@[       ER    CSF$        . SEND THE OUTPUT ON ITS WAY @C@@@[VI
)@@G@@       SZ    RCALTF      . CLEAR ALT OUTPUT FLAG@A@@@[       J     0,X11VJ
)@@G@@       . AND QUIT @[@@@[.     @ @@@[       VARCON            .    @[@@@[VK
)@@G@@.     @A@@@[. TO OPEN NEW ALT PRINT FILE --     @[@@@[.     @#@@@[APFUSEVL
)@@G@@ '@USE  '   @ @@@[APFUNM 'APL$ALT$PRT$'    .    @ @@@[       '.,    '   VM
)@@G@@       .    @E@@@[APFUQU +0.0D             . EXTERNAL QUALIFIER PLUNKED VN
)@@G@@HERE  @A@@@[       '*AP$AL$PR$(+1). . '   .     @#@@@[APFASG '@ASG,C'   VO
)@@G@@@B@@@[        +'P',UOMEOP,' ',' ',' ',' '     . @ @@@[       'APL$ALT$PRVP
)@@G@@T$. . '     @[@@@[.     @A@@@[. TO CLOSE AND @SYM ALT FILE----    @[@@@[VQ
)@@G@@.     @A@@@[APFBRK '@BRKPT APL$ALT$PRT$  . '    @A@@@[APFREE '@FREE APL$VR
)@@G@@ALT$PRT$. . '     @#@@@[APFSYM '@SYM  '   @E@@@[APFSQU RES   2          VS
)@@G@@ . GENERATED QUALIFIER GOES HERE    @^@@@[       '* AP$AL$PR$.'   @E@@@[VT
)@@G@@APFSID RES   2           . EITHER ' .  ' OR ',,    SITEID'  @C@@@[APSPSPVU
)@@G@@ ' .          '    . THIS CAN GO ABOVE--  @E@@@[APSCOM ',,    '         VV
)@@G@@ . OR IF SITEID WAS GIVE, THIS WILL @G@@@[APFTMP RES   2           . NOTVW
)@@G@@E THIS MUST FOLLOW THE ABOVE LOC FOR SITEI@G@@@[        RES    1        VX
)@@G@@      . CUSHION FOR THE ABOVE AS WE EDIT INTO IT@E@@@@/.     )DEBUG, )ORVY
)@@G@@IGIN, )WIDTH, )DIGITS, )SYMBOLS, )FUZZ    @[@@@@.     @G@@@@.     BITS IVZ
)@@G@@N DEBUG ARG ARE: 1 DUMPS ON/OFF; 2 ERASURE OF DATA ON/OFF   @E@@@@. (SUBWA
)@@G@@RTNE ERASER); 4 ERASURE OF LEXTEXT ON/OFF (TEXSTO)    @C@@@@. BIT 8 SAYSWB
)@@G@@ DIE AS SOON AS AN ERROR IS DETECTED@ @@@@       INSTRS            .    WC
)@@G@@@[@@@@.     @B@[@@DB0100 TNZ   RCMASF      . MASTER CONSOLE?@B@[@@      WD
)@@G@@ TNZ,U REPMAP      . NO, REENTRANT  @E@[@@       J     $+2         . IF WE
)@@G@@MCONS OR NOT REENTRANT, DO IT @F@[@@       J     SY0920      . NO, PRETEWF
)@@G@@ND WE DON'T KNOW WHAT HE WANTS@F@[@@       LX,U  X11,DBGLIM  . YES, GET WG
)@@G@@POINTER TO LIMITS OF PARAMETER@[@[@@.     @B@[@@. BIT 0 GETS SPECIAL TREWH
)@@G@@ATMENT RIGHT HERE @[@[@@.     @B@[@@       L     A2,CLIBN+1  . GET CANDIWI
)@@G@@DATE  @D@[@@       JB    A2,DB0110   . BIT 1=0 SAYS TURN OFF DUMPS@D@[@@WJ
)@@G@@       X$OFF             . ZERO SEZ TURN OFF DUMPS    @F@[@@       J    WK
)@@G@@ SV0010      . GO POST VALUE AND RETURN TO MAINPROG   @]@[@@DB0110.     WL
)@@G@@@C@[@@       X$ON              . 1 SAYS TURN THEM ON  @F@[@@       J    WM
)@@G@@ SV0010      . GO POST VALUE AND RETURN TO MAINPROG   @[@[@@.     @[@[@@WN
)@@G@@.     @]@[@@. )ORIGIN   @[@[@@.     @]@[@@OR0100 .    @ @[@@       LX,U WO
)@@G@@ X11,ORGLIM  .    @F@[@@       J     SV0010      . GO POST VALUE AND RETWP
)@@G@@URN TO MAINPROG   @[@[@@.     @]@[@@. )DIGITS   @[@[@@.     @]@[@@DI0100WQ
)@@G@@ .    @ @[@@       LX,U  X11,DIGLIM  .    @F@[@@       J     SV0010     WR
)@@G@@ . GO POST VALUE AND RETURN TO MAINPROG   @[@[@@.     @]@[@@. )WIDTH    WS
)@@G@@@[@[@@.     @]@[@@WI0100 .    @ @[@@       LX,U  X11,WIDLIM  .    @F@[@@WT
)@@G@@       J     SV0010      . GO POST VALUE AND RETURN TO MAINPROG   @]@@@[WU
)@@G@@. )DEBUG    @[@@@[.     @E@@@[DB0100  LA     A0,RCMASF      . GET MASTERWV
)@@G@@ CONSOLE FLAG     @F@@@[        TZ,U   REPMAP         . DEBUGGING VERSIOWW
)@@G@@N OF PROGRAM?     @G@@@[        JZ     A0,SY0920      . NO, IF NOT MASTEWX
)@@G@@R CONSOLE EITHER, DIE   @E@@@[        LX,U   A3,DBGLIM      . SET POINTEWY
)@@G@@R TO LIMITS ENTRY @G@@@[        LMJ    X11,SETVAL     . CHECK VALIDITY, WZ
)@@G@@POST, WAY 'WAS' OR 'IS' @D@@@[        LA     A0,WSDBUG      . GET PRESENXA
)@@G@@T BALUE     @F@@@[        JB     A0,DB0110      . IF BIT 0 ON, GO TURN DXB
)@@G@@UMPS ON     @D@@@[        X$OFF                 . ELSE TURN THEM OFF    XC
)@@G@@@B@@@[        J      SY0500         . AND RETURN@C@@@[DB0110  X$ON      XD
)@@G@@            . TURN DUMPS ON   @B@@@[        J      SY0500         . AND XE
)@@G@@EXIT  @[@@@[.     @]@@@[. )ORIGIN   @[@@@[.     @E@@@[OR0100  LX,U   A3,XF
)@@G@@ORGLIM      . SET POINTER TO TABLE ENTRY  @E@@@[        J      WI0110   XG
)@@G@@      . GO CALL SETVAL SUBROUTINE   @[@@@[.     @]@@@[. )DIGITS   @[@@@[XH
)@@G@@.     @A@@@[DI0100  LX,U   A3,DIGLIM      .     @A@@@[        J      WI0XI
)@@G@@110         .     @[@@@[.     @]@@@[. )WIDTH    @[@@@[.     @A@@@[WI0100XJ
)@@G@@  LX,U   A3,WIDLIM      .     @F@@@[WI0110  LMJ    X11,SETVAL     . POSTXK
)@@G@@ VALUE, SAY 'WAS', 'IS', ETC. @C@@@[        J      SY0500         . RETUXL
)@@G@@RN TO CALLER@[@@@[.     @]@@@[. )WSIZE    @[@@@[.     @E@@@[WZ0100  LX,UXM
)@@G@@   A3,WSZLIM      . SET POINTER TO TABLE ENTRY  @G@@@[        LMJ    X11XN
)@@G@@,SETVAL     . CHECK VALIDITY , SAY 'WAS', 'IS', ETC   @C@@@[        LA,HXO
)@@G@@1  A0,WSMSIZ      . GET MAX INDEX   @D@@@[        LSSL   A0,12          XP
)@@G@@. MULTIPLY IT BY 4096   @E@@@[        SA,H2  A0,WSMSIZ      . AND SAVE MXQ
)@@G@@AX SIZE IN WORDS  @A@@@[        J      SY0500         .     @[@@@@.     XR
)@@G@@@]@@@@. )FUZZ     @[@@@@.     @D@[@@FZ0010 LX,U  X11,FUZLIM  . POINTER TXS
)@@G@@O TABLE OF LIMITS @E@[@@       LMJ   A3,SETVAL   . POST NEW VALUE, SAY 'XT
)@@G@@WAS XXX'    @D@@@[FZ0100  LX,U   A3,FUZLIM      . SET POINTER TO TABLE  XU
)@@G@@@C@@@[        LMJ    X11,SETVAL     . POST, SAY WAS/IS@B@@@@       LA   XV
)@@G@@ A2,WSFUZI   . GET FUZZ INDEX @F@@@@       SETFUZ            . COMPUTE NXW
)@@G@@EW FUZZING PERCENTAGE CONSTANT@A@@@@       J     SY0500      . AND QUIT XX
)@@G@@@[@@@@.     @]@@@@. )SYMBOLS  @[@@@@.     @A@@@@. CHECK THAT WS IS ACTUAXY
)@@G@@LLY CLEAR-- @E@[@@SS0100 TZ    WSYNUM      . ARE ANY SYMBOLS IN THE TABLXZ
)@@G@@E?    @D@[@@       J     SY0950      . YES, CANNOT CHANGE SYMBOLS @F@[@@YA
)@@G@@       LA    A0,WSYEND   . NO, GET ADDR OF LAST SLOT IN TABLE     @F@[@@YB
)@@G@@       AA,U  A0,3        . BUMP TO 1ST WORD AFTER SYMBOL TABLE    @G@[@@YC
)@@G@@       JNE   A0,WSFREE SY0950 . OUT UNLESS FREE LIST STARTS AFTER TBL   YD
)@@G@@@E@[@@       ABSADR A0         . ADDR OF 1ST BLOCK ON FREE LIST   @F@[@@YE
)@@G@@       LA    A1,WSYMAX   . CURRENT SPACE ALLOCATION FOR SYMBOLS   @F@[@@YF
)@@G@@       MSI,U A1,3        . THREE WORDS PER SYMBOL ENTRY ARE USED  @D@[@@YG
)@@G@@       AA,H1 A1,0,A0     . PLUS NO OF WDS ON FREE LIST@G@[@@       ANA,UYH
)@@G@@ A1,3*WSYSIZ . LESS DEFAULT SPACE ALLOCATION FOR SYMBOLS    @G@[@@      YI
)@@G@@ JNE   A1,WSNSIZ SY0950 . IF NOT EQUAL NOMINAL FREE SPACE, CANT DO@G@@@[YJ
)@@G@@SS0100  LA     A0,WSYNUM      . GET PRESENT NO OF ENTRIES IN SYMB TBL   YK
)@@G@@@G@@@[        TZ     STATE          . DID COMMAND SCAN STOP IN STATE ZERYL
)@@G@@O?    @F@@@[        JNZ    A0,SY0950      . NO, IF SYMB TBL NOT CLEAR, EYM
)@@G@@RROR  @G@[@@       LX,U  X11,SYMLIM  . SET POINTER TO LIMITS FOR SYMBOLSYN
)@@G@@ COMMAND    @G@@@[       LX,U  A3,SYMLIM  . SET POINTER TO LIMITS FOR SYYO
)@@G@@MBOLS COMMAND     @F@[@@       LMJ   A3,SETVAL   . CHECK WITHIN LIMITS, YP
)@@G@@PRINT 'WAS XX'    @F@@@[       LMJ   X11,SETVAL   . CHECK WITHIN LIMITS,YQ
)@@G@@ PRINT 'WAS XX'   @D@@@@       LA    A0,WSNSIZ   . NOMINAL SIZE OF THIS YR
)@@G@@WS    @D@@@@       LA    A1,WSYMAX   . NEW VALUE FOR NO OF SYMBOLS@G@[@@YS
)@@G@@       LMJ   X11,CLFSET  . INITIALIZE FREELIST AND SYMBOLS POINTERS     YT
)@@G@@@G@@@[       LMJ   X11,CLOWES  . INITIALIZE FREELIST AND SYMBOLS POINTERYU
)@@G@@S     @D@@@@       LMJ   X11,SMCLEA  . CLEAR NEW SYMBOL TABLE     @B@@@@YV
)@@G@@       J     SY0500      . NORMAL EXIT    @[@@@@.     @B@[@@. SET NEW VAYW
)@@G@@LUE AND DISPLAY 'WAS #' MSG   @[@[@@.     @E@[@@SV0010 LX,U  A3,SY0500  YX
)@@G@@ . SET EXIT SO WE RETURN TO MAINPROG@D@[@@SETVAL L     A2,CLIBN+1  . GETYY
)@@G@@ CANDIDATE FOR NEW #    @B@[@@       TG,H1 A2,0,X11    . LOWER BOUND    YZ
)@@G@@@B@[@@       TG,H2 A2,0,X11    . UPPER BOUND    @B@[@@       J     SY095ZA
)@@G@@0      . OUT OF RANGE   @B@[@@       EX    1,X11       . GET OLD VALUE  ZB
)@@G@@@B@[@@       EX    2,X11       . STASH NEW VALUE@C@[@@       SA,H2 A3,SEZC
)@@G@@TEMP   . SAVE EXIT REGISTER   @B@[@@       S,H1  A1,SETEMP   . SAVE OLD ZD
)@@G@@VALUE @F@[@@       LMJ   X11,LNFLSH  . SET UP POINTERS AND START NEW LINZE
)@@G@@E     @B@[@@       PUT,U AW          . STCK IN 'WAS ' @ @[@@       PUT,UZF
)@@G@@ AA          .    @ @[@@       PUT,U AS          .    @ @[@@       PUT,UZG
)@@G@@ ASPACE      .    @B@[@@       L,H1  A4,SETEMP   . GET OLD VALUE  @ @[@@ZH
)@@G@@       DSL   A4,36       .    @C@[@@       DSL   A0,72       . CLEAR FORZI
)@@G@@MAT CONTROL @B@[@@       LMJ   X11,FORMI   . PUT IN NUMBER  @ @[@@      ZJ
)@@G@@ NOP               .    @B@[@@       LMJ   X11,LINSTR  . PUT IT OUT     ZK
)@@G@@@C@[@@       LA,H2 A3,SETEMP   . RESTORE EXIT REGISTER@A@[@@       J    ZL
)@@G@@ 0,A3        . RETURN   @ @[@@       CONSTS            .    @#@@@[P     ZM
)@@G@@  PROC   .  @D@@@[DEFVAL* NAME   .              TABLE DEFINITION PROC   ZN
)@@G@@@#@@@[        UNLI$T .  @E@@@[        +      P(1,1),P(1,2)+1     . RANGEZO
)@@G@@ OF ALLOWED VALUES@D@@@[        LA     A1,P(2,1)      . FETCH FOR OLD VAZP
)@@G@@LUE   @D@@@[        SA     A2,P(2,1)      .STASH FOR NEW VALUE    @#@@@[ZQ
)@@G@@        LI$T   .  @#@@@[        END    .  @[@@@@.     @B@@@@. TABLE OF LZR
)@@G@@EGAL VALUE RANGES FOR COMMANDS@B@@@@. ALSO L&S TABLE TO UPDATE THAT VALUZS
)@@G@@E     @[@@@@.     @G@@@@       VARCON . IN D-BANK SO I-BEAM EXECUTION (IZT
)@@G@@N XQTREP) CAN USE THEM  @E@@@@. CAUTION--THESE TABLES ARE ALSO USED BY IZU
)@@G@@BEAM ROUTINES     @A@@@@DBGLIM* DEFVAL 0,15 WSDBUG         .@A@@@@ORGLIMZV
)@@G@@* DEFVAL 0,1  WSIXOR         .@A@@@@DIGLIM* DEFVAL 2,18 WSDGTS         .ZW
)@@G@@@A@@@@WIDLIM* DEFVAL 35,132 WSWDTH       .@A@[@@SYMLIM* DEFVAL 0,512 WSYZX
)@@G@@MAX        .@G@@@[SYMLIM* DEFVAL 8,1024 WSYMAX . NOTE: MAX VAL MUST FIT ZY
)@@G@@IN 1ST 4K OF WS   @ @@@@FUZLIM* DEFVAL 0,48 WSFUZI    @ @[@@       VARBLZZ
)@@G@@S            .    @E@[@@SETEMP RES   1           . SETVAL EXIT REGISTER AA
)@@G@@TEMPORARY   @F@@@[WSZLIM* DEFVAL 1,16   WSMSZI  . MAX WORKSPACE SIZE (UPAB
)@@G@@ TO 64K)    @G@@@[                              . CAUTION: 64K WS (INDEXAC
)@@G@@ 16) IS A HARD MAX@G@@@[                              . AS INTERNAL STRUAD
)@@G@@CTURE ALLOWS ONLY 16    @G@@@[                              . BITS FOR RAE
)@@G@@ELATIVE ADDRESSES IN A WS     @[@@@[.     @D@@@[. CHECK AND SET NEW VALUAF
)@@G@@E, SAY 'WAS XXX', OR 'IS XXX' @[@@@[.     @#@@@[        INSTRS .  @A@@@[AG
)@@G@@SETVAL  SX     X11,SVLINK     .     @D@@@[        SA     A3,SVTABL      AH
)@@G@@. STASH POINTER TO TABLE@E@@@[        EX     1,A3           . FETCH OLD AI
)@@G@@VALUE (TO A1)     @C@@@[        SA     A1,SVOLDV      . TEMP SAVE IT    AJ
)@@G@@@G@@@[        TZ     STATE          . DID CMND SCANNER STOP IN STATE ZERAK
)@@G@@O?    @F@@@[        J      SV0110         . NO, USER WANTS TO CHANGE A VAL
)@@G@@ALUE  @D@@@[. ONLY COMMAND NAME GIVEN, SAY WHAT PRESENT VALUE IS  @E@@@[AM
)@@G@@SV0100  LMJ    X11,LNFLSH     . INITIALIZE PRINT BUFFER     @D@@@[      AN
)@@G@@  PUT,U  AI             . START MESSAGE WITH 'I'@E@@@[        J      SV0AO
)@@G@@140         . THEN GO COMPLETE THE MESSAGE@C@@@[. USER REALLY WANTS TO CAP
)@@G@@HANGE PARAMETER VALUE   @F@@@[SV0110  LA     A2,CLIBH       . GET VALUE AQ
)@@G@@HE TYPED ON COMMAND     @G@@@[        JN     A2,SY0950      . IF COMMANDAR
)@@G@@ FIELD 2 NOT HALFINT, ERROR   @G@@@[        LA     A0,SVTABL      . GET AS
)@@G@@POINTER TO LOAD/STORE/LIMITS TABLE  @D@@@[        TG,H1  A2,0,A0        AT
)@@G@@. CHECK LOWER BOUND     @C@@@[        TG,H2  A2,0,A0        . AND UPPER AU
)@@G@@BOUND @F@@@[        J      SY0950         . IF OUT OF RANGE, LEAP TO ERRAV
)@@G@@OR    @D@@@[        LA     A1,INDEX       . GET COMMAND INDEX     @F@@@[AW
)@@G@@        JNE,U  A1,WSIZ SV0130 . IF COMMAND NOT )WSIZE, GO DO IT   @G@@@[AX
)@@G@@. FOR )WSIZE, CHECK THAT HE'S NOT SHRINKING AND IS ALLOWED THE CORE     AY
)@@G@@@G@@@[SV0120  LA     A1,ACMXWS      . GET MAX WS INDEX ACCOUNTING ALOOWSAZ
)@@G@@ HIM  @G@@@[        TG     A1,A2          . IS NEW (A2) MORE THAN HE CANBA
)@@G@@ HAVE (A1)? @G@@@[        TLE,H1 A2,WSASIZ      . NO, IS WS ALREADY SMALBB
)@@G@@LER THAN REQUEST? @G@@@[        J      SY0950         . IF EITHER SHRINKBC
)@@G@@ING OR EXCEEDING, DIE   @A@@@[. POST NEW VALUE AND SAY 'WAS' XXX  @F@@@[BD
)@@G@@SV0130  EX     2,A0           . STASH NEW VALUE FROM A2 INTO WS   @E@@@[BE
)@@G@@        LMJ    X11,LNFLSH     . INITIALIZE PRINT ROUTINES   @B@@@[      BF
)@@G@@  PUT,U  AW             . SAY 'W'   @B@@@[        PUT,U  AA             BG
)@@G@@. SAY 'A'   @B@@@[. CONVERGE HER E FOR BOTH 'WAS' AND 'IS'  @A@@@[SV0140BH
)@@G@@  PUT,U  AS             .     @A@@@[        PUT,U  ASPACE         .     BI
)@@G@@@C@@@[        LA     A4,SVOLDV      . GET OLD VALUE   @B@@@[        DSL BJ
)@@G@@   A4,36          . ALIGN IT  @D@@@[        DSL    A0,72          . CLEABK
)@@G@@R FORMAT CONTROL  @C@@@[        LMJ    X11,FORMI      . PUT IN NUMBER   BL
)@@G@@@A@@@[        NOP                   .     @D@@@[        LMJ    X11,LINSTBM
)@@G@@R     . FLUSH THE MESSAGE OUT @A@@@[        LX     X11,SVLINK     .     BN
)@@G@@@C@@@[        J      0,X11          . NORMAL EXIT     @#@@@[        VARBBO
)@@G@@LS .  @C@@@[SVLINK  EQUF   $,,H1          . CALLING LINKAGE @E@@@[SVTABLBP
)@@G@@  EQUF   $,,H2          . ADDR OF DEFVAL TABLE ENTRY  @A@@@[        RES BQ
)@@G@@   1              .     @E@@@[SVOLDV  EQUF   $,,H1          . OLD VALUE BR
)@@G@@OF WS PARAMETER   @A@@@[        RES    1              .     @E@[@@SSCHNGBS
)@@G@@ RES   1           . WS CHANGE TEMPORARY FOR SYMBOLS  @F@[@@SSOLDP RES  BT
)@@G@@ 1           . TEMPORARY FOR LOC OLD FREE LIST BLOCK  @ @@@@       END  BU
)@@G@@             .    ___VAL L     A2,CLIBN+1  . GET CANDIDATE FOR NEW #    BV
)@@G@@*[@@@@*SDFF*@G@@@@. ****************************************************BW
)@@G@@***************** @G@@@@. STANDARD PROCS - INCLUDED BY AN @ADD PRCPKG/APBX
)@@G@@L IN SOURCE DECKS     * @G@@@@.                                         BY
)@@G@@                            * @G@@@@       AXR$         .               BZ
)@@G@@                                  * @G@@@@       CONFIG  .    DEFINE ASSCA
)@@G@@EMBLY PARAMETERS                        * @G@@@@       WSDEF.      DEFINCB
)@@G@@E WORKSPACE                                   * @G@@@@WORKSP INFO  2 20.CC
)@@G@@      SET ASIDE THE SPACE                           * @G@@@@       RUNCTCD
)@@G@@L.     DEFINE RUN CTRL BLOK(S)                            * @G@@@@RUNCONCE
)@@G@@ INFO  2 22.      AND SET ASIDE ITS  SPACE                      * @G@@@@CF
)@@G@@       CBLOCK            . DEFINE CONTROL BLOCK TYPES                 * CG
)@@G@@@G@@@@.                                                                 CH
)@@G@@    * @G@@@@. END OF STANDARD PROC BLOCK                                CI
)@@G@@          * @G@@@@. ****************************************************CJ
)@@G@@***************** @[@@@@.     @[@@@@.     @B@@@@/. SYMBOL TABLE LOOKUP ACK
)@@G@@ND INSERT ROUTINE @[@@@@.     @G@@@@.     STRUCTURE OF SYMBOL TABLE IS 3CL
)@@G@@-WORD ENTRIES-- ONE PRIMARY AND     @G@@@@. AS MANY SECONDARIES AS NEEDECM
)@@G@@D FOR EACH SYMBOL.  THE PRIMARY ENTRY     @G@@@@. CONTAINS POINTERS, COUCN
)@@G@@NTS, ETC. AND THE 1ST 4 CHARS OF THE SYMBOL.    @F@@@@. SECONDARY ENTRIECO
)@@G@@S EACH CONTAIN UP TO 8 CHARACTERS OF THE NAME.  @G@@@@.      A DETAILE DCP
)@@G@@ PICTURE OF EACH TYPE OF BLOCK IS IN THE PROC 'CBLOX' @[@@@@.     @G@@@@CQ
)@@G@@. ENTER WITH A2=NO OF CHARS; SYMBOL IN ASSEMBLY AREA FOR NAMES (WORDPT) CR
)@@G@@@D@@@@. EXIT LEAVES RELADR OF (PRIMARY) TABLE ENTRY IN A1   @[@@@@.     CS
)@@G@@@ @@@@       INSTRS            .    @[@@@@.     @A@@@@SYMBOL* SX   X11,SCT
)@@G@@MLINK  . SAVE X11 @C@@@@       LA    A5,A2       . TEMP SAVE NO OF CHARSCU
)@@G@@@F@@@@       ANU,U A2,1        . ROUND NO CHARS (NOT COUNTING 1ST WORD) CV
)@@G@@@F@@@@       SSA   A3,2        . DIV BY 4, CONVERTING TO A WORD COUNT   CW
)@@G@@@[@@@@.     @C@@@@.      PREPARE TO SEARCH FOR MATCH ON 1-4 CHARS @[@@@@CX
)@@G@@.     @D@@@@       LA,U  A4,ZTPNAM   . GET PRIMARY BLOCK FLAG     @F@@@@CY
)@@G@@       LR    R1,WSYMAX   . GET NO OF ENTRIES ALLOWED IN TABLE     @E@@@@CZ
)@@G@@       LXM,U X11,WSYTBL-3 . START SEARCH AT 1ST LOCN OF TBL @C@@@@      DA
)@@G@@ LXI,U X11,3       . SEARCH EVERY 3RD WORD@D@@@@       LA    A0,WORDPT  DB
)@@G@@ . GET 1ST WORD OF SYMBOL     @E@@@@SM0020 SE    A0,5,*X11   . LOOK IN WDC
)@@G@@ORD 3 OF NEXT ENTRY     @E@@@@       J     SM0100      . NO HIT, SYMBOL DD
)@@G@@NOT TABULATED     @D@@@@       TNE,S1 A4,0,X11   . IS THIS A PRIMARY ENTDE
)@@G@@RY?   @E@@@@       TE,Q2 A5,0,X11    . YES, DOES NO OF CHARS MATCH?     DF
)@@G@@@D@@@@       J     SM0020      . IF NEITHER, KEEP SEARCHING @[@@@@.     DG
)@@G@@@E@@@@.      PRIMARY ENTRY MATCH, CHECK FOR SECONDARY ENTRIES     @[@@@@DH
)@@G@@.     @D@@@@       SX    X11,SMTEMP  . ELSE SAVE CURRENT POINTERS @ @@@@DI
)@@G@@       SA    A0,SMTEMP+1 .    @E@@@@       LXM,U A0,WORDPT+1 . PREPARE TDJ
)@@G@@O FETCH SCANNED SYMBOL  @D@@@@       LXI,U A0,2        . AND GET IT 2 WDDK
)@@G@@S AT A TIME @D@@@@       LR    R2,A3       . GET NO OF WDS TO SEARCH    DL
)@@G@@@E@@@@SM0030 JNGD  R2,SM0050   . MORE WDS TO SCAN? IF NOT, A HIT  @G@@@@DM
)@@G@@       LX,H2 X11,0,X11   . YES, GET LOOKAHEAD ADDR FROM CURRENT STBL    DN
)@@G@@@D@@@@       TNZ,U 0,X11       . DOES ANOTHER ENTRY EXIST?  @F@@@@      DO
)@@G@@ J     SM0040      . NO, RESTORE REGS TO CONTINUE THE SEARCH@ @@@@      DP
)@@G@@ ABSADR X11        .    @C@@@@       DL    A1,0,*A0    . GET NEXT 2 WORDDQ
)@@G@@S     @E@@@@       TE    A1,1,X11    . 1ST WD OF TABULATED ENTRY MATCH? DR
)@@G@@@G@@@@       J     SM0040      . NO, MISMATCH. RESTORE REGS AND KEEP LOODS
)@@G@@KING  @B@@@@       JNGD  R2,SM0050   . YES, ANY MORE? @D@@@@       TNE  DT
)@@G@@ A2,2,X11    . YES, DOES 2ND WORD MATCH?  @E@@@@       J     SM0030     DU
)@@G@@ . YES, GO SEE IF WE'RE DONE YET    @E@@@@SM0040 LX    X11,SMTEMP  . MISDV
)@@G@@MATCH ON SECONDARY ENTRIES    @E@@@@       LA    A0,SMTEMP+1 . RESTORE RDW
)@@G@@EGISTERS AND CONTINUE   @ @@@@       J     SM0020      .    @E@@@@SM0050DX
)@@G@@ TZ,H2 0,X11       . DOES ANYTHING FOLLOW THIS ENTRY? @E@@@@       J    DY
)@@G@@ SM0040      . YES, MISMATCH.  KEEP SEARCHING   @G@@@@       LA,H2 A1,SMDZ
)@@G@@TEMP   . NO, WE'RE DONE-- GET ADDR OF PRIM ENTRY BLOK @C@@@@       LA,H1EA
)@@G@@ A2,1,A1     . GET REFERENCE COUNT  @C@@@@       AA,U  A2,1        . BUMEB
)@@G@@P REFERENCE COUNT @C@@@@       SA,H1 A2,1,A1     . PUT REFERENCE COUNT  EC
)@@G@@@ @@@@       RELADR A1         .    @B@@@@       LX,H2 X11,SMLINK  . NORED
)@@G@@MAL EXIT    @ @@@@       J     1,X11       .    @B@@@@/.     SYMBOL NOT EE
)@@G@@TABULATED, PUT IT IN    @[@@@@.     @E@@@@SM0100 LR    R1,WSYMAX   . SETEF
)@@G@@ SEARCH OVER ENTIRE TABLE     @E@@@@       LXM,U X11,WSYTBL-3 . START ATEG
)@@G@@ 1ST LOCATION IN TABLE  @C@@@@       LXI,U X11,3       . SEARCH EVERY 3REH
)@@G@@D WORD@D@@@@       SZ    A0          . SEARCH FOR HOLE (ZEROS)    @ @@@@EI
)@@G@@       SE    A0,3,*X11   .    @B@@@@       J     SM0900      . TABLE FULEJ
)@@G@@L     @C@@@@       DL    A0,SMSKEL   . SKELETON 1ST 2 WDS   @B@@@@      EK
)@@G@@ DS    A0,0,X11    . TO THIS ENTRY  @F@@@@       SA,Q2 A5,0,X11    . PUTEL
)@@G@@ NO OF CHARS INTO PRIMARY ENTRY     @D@@@@       LA    A1,WORDPT   . GETEM
)@@G@@ 1\T WORD OF SYMBOL     @A@@@@       SA    A1,2,X11    . TO ENTRY @G@@@@EN
)@@G@@       LA,U  A5,0,X11    . ADDR OF THIS (PRIMARY) ENTRY TEMPORARY SAVE  EO
)@@G@@@D@@@@       SA    A5,A4       . FOR SECONDARY ENTRY LINKING@[@@@@.     EP
)@@G@@@A@@@@.      PUT IN SECONDARY ENTRIES     @[@@@@.     @C@@@@SM0120 LXM,UEQ
)@@G@@ A0,WORDPT+1 . SET SCAN OVER OUTBUF @D@@@@       LXI,U A0,2        . (PIER
)@@G@@CK UP PAIRS OF WDS)     @F@@@@       LX    X11,WSYEND  . SET START ADDR ES
)@@G@@TO LAST ENTRY IN TABLE  @ @@@@       ABSADR X11        .    @D@@@@      ET
)@@G@@ LXI,XU X11,-3     . SEARCH UPWARD THROUGH TABLE@A@@@@       LR    R2,A3EU
)@@G@@       . # WORDS  @E@@@@       LR    R1,WSYMAX   . SET SEARCH THRU ENTIREV
)@@G@@E TABLE     @B@@@@       SZ    A3          . LOOK FOR HOLE  @D@@@@SM0130EW
)@@G@@ JNGD  R2,SM0170   . MORE TO DO? IF NOT, EXIT   @ @@@@       SE    A3,0,EX
)@@G@@*X11   .    @G@@@@       J     SM0140      . RAN OUT OF SPACE, GO ERASE EY
)@@G@@ALREADY ENTERED   @B@@@@       AX,U  X11,3       . FIX POINTER    @E@@@@EZ
)@@G@@       LA    A2,SMSKEC   . GET SECONDARY ENTRY SKELETON     @B@@@@      FA
)@@G@@ SA    A2,0,X11    . PUT IN TABLE   @C@@@@       LA    A2,A4       . SETFB
)@@G@@ INDEX REGISTER   @E@@@@       LA,U  A4,0,X11    . GET POINTER TO CURRENFC
)@@G@@T ENTRY     @B@@@@       RELADR A4         . MAKE RELEVANT  @B@@@@      FD
)@@G@@ SA,H2 A4,0,A2     . PUT IN TABLE   @D@@@@       LA,U  A4,0,X11    . SAVFE
)@@G@@E POINTER FOR NEXT BLOCK@E@@@@       DL    A1,0,*A0    . GET NEXT 2 WORDFF
)@@G@@S FROM WORDPT     @B@@@@       SA    A1,1,X11    . STORE 1ST WORD @B@@@@FG
)@@G@@       JNGD  R2,SM0160   . MORE WORDS?    @B@@@@       SA    A2,2,*X11  FH
)@@G@@ . YES, STORE NEXT@B@@@@       J     SM0130      . CHECK FOR MORE @B@@@@FI
)@@G@@SM0140 LA    A1,A5       . GET FST ENTRY  @B@@@@SM0150 LA,H2 A0,0,A1    FJ
)@@G@@ . GET POINTER    @B@@@@       SZ    0,A1        . ZERO ENTRY     @ @@@@FK
)@@G@@       SZ    1,A1        .    @ @@@@       SZ    2,A1        .    @D@@@@FL
)@@G@@       JZ    A0,SM0900   . IF FINISHED THEN TELL USER @ @@@@       ABSADFM
)@@G@@R A0         .    @E@@@@       LA    A1,A0       . POSITION ADDRESS OF NFN
)@@G@@EXT ENTRY   @C@@@@       J     SM0150      . LOOK FOR NEXT ENTRY  @D@@@@FO
)@@G@@SM0160 SZ    A2          . PREPARE TO STORE ZERO WORD @B@@@@       SA   FP
)@@G@@ A2,2,X11    . STORE 2ND WORD @E@@@@SM0170 LA    A1,A5       . RECOVER AFQ
)@@G@@DDR OF PRIMARY ENTRY    @B@@@@       LA    A2,WSYNUM   . NO OF ENTRIES  FR
)@@G@@@A@@@@       AA,U  A2,1        . BUMP     @C@@@@       SA    A2,WSYNUM  FS
)@@G@@ . SAVE UPDATED COUNT   @ @@@@       RELADR A1         .    @ @@@@      FT
)@@G@@ LX,H2 X11,SMLINK  .    @B@@@@       J     1,X11       . NORMAL EXIT    FU
)@@G@@@[@@@@.     @^@@@@.      SYMBOL TABLE FULL@[@@@@.     @D@@@@SM0900 ERRORFV
)@@G@@ YSYFUL,SM0999 . SYMBOL TABLE REALLY FULL @ @@@@SM0999 LX,H2 X11,SMLINK FW
)@@G@@ .    @ @@@@       J     0,X11       .    @F@@@@/.     ROUTINE TO DELETEFX
)@@G@@ SYMBOLS FROM TABLE IF REFERENCE COUNT = 0@[@@@@.     @E@@@@SYMERS* ABSAFY
)@@G@@DR A0        . ENTER WITH BLOCK RELADR IN A0    @E@@@@       LA,H1 A1,1,FZ
)@@G@@A0     . PICK UP CURRENT REFERENCE COUNT  @C@@@@       ANA,U A1,1       GA
)@@G@@  . AND DECREMENT IT    @D@@@@       TLE,U A1,1        . IS NEW COUNT LEGB
)@@G@@SS THAN 1?  @D@@@@       SSL   A1,36       . NO, FORCE POSTIVE ZERO     GC
)@@G@@@E@@@@       SA,H1 A1,1,A0     . POST UPDATED REFERENCE COUNT     @F@@@@GD
)@@G@@       TZ    1,A0        . ZERO REF COUNT AND NO VALUE ASSIGNED?  @B@@@@GE
)@@G@@       J     0,X11       . NO, CAN'T PURGE@B@@@@. PURGE THIS NAME FROM TGF
)@@G@@HE SYMBOL TABLE   @F@@@@SE0100 LA,H2 A1,0,A0     . GET FOWARD LINK FROM GG
)@@G@@CURRENT BLOCK     @C@@@@       SZ    0,A0        . CLEAR THIS BLOCK     GH
)@@G@@@ @@@@       SZ    1,A0        .    @ @@@@       SZ    2,A0        .    GI
)@@G@@@E@@@@       JZ    A1,SE0110   . IF NO FOWARD LINK, WE'RE DONE    @D@@@@GJ
)@@G@@       LA    A0,A1       . ELSE MOVE LINK WORD OVER   @ @@@@       ABSADGK
)@@G@@R A0         .    @B@@@@       J     SE0100      . AND CONTINUE   @C@@@@GL
)@@G@@SE0110 LA    A0,WSYNUM   . CURRENT NO OF SYMBOLS@ @@@@       ANA,U A0,1 GM
)@@G@@       .    @ @@@@       SA    A0,WSYNUM   .    @ @@@@       J     0,X11GN
)@@G@@       .    @B@@@@/.     CLEAR SYMBOL TABLE (SET TO ZEROS)  @[@@@@.     GO
)@@G@@@F@@@@SMCLEA* SZ   WSYNUM      . CLEAR NO OF ENTRIES CURRENTLY IN TABLE GP
)@@G@@@D@@@@       LA    A0,WSYMAX   . GET MAX NUM NETRIES ALLOWED@C@@@@      GQ
)@@G@@ MSI,U A0,3        . 3 WORDS PER ENTRY    @ @@@@       ANA,U A0,1       GR
)@@G@@ .    @C@@@@       LR    R1,A0       . SET LOOP COUNTER     @C@@@@      GS
)@@G@@ LXM,U A0,WSYTBL   . ABSADR (1ST LOC)     @D@@@@       LXI,U A0,1       GT
)@@G@@ . STEP THROUGH BY 1 WORD     @D@@@@       SZ    0,*A0       . CLEAR NEXGU
)@@G@@T HASHTABLE LOCN  @A@@@@       JGD   R1,$-1      . ANY MORE+@B@@@@      GV
)@@G@@ LXI,U A0,0        . CLEAR INCREMENT@E@@@@       ANA,U A0,3        . SETGW
)@@G@@ TO LAST ENTRY IN SYMBOL TABLE@ @@@@       RELADR A0         .    @F@@@@GX
)@@G@@       SA    A0,WSYEND   . POST ADDR OF LAST USABLE TABLE ENTRY   @B@@@@GY
)@@G@@       J     0,X11       . NO, SO LONG    @#@@@@       CONSTS .   @E@@@@GZ
)@@G@@SMSKEL CBLOCK ZTPNAM,0,0,0 0,0,1,0 . SKELETON PRIMARY ENTRY @F@@@@SMSKECHA
)@@G@@ CBLOCK ZTPSEC,0,0,0         . SKELETON SECONDARY ENTRY     @#@@@@      HB
)@@G@@ VARBLS .   @C@@@@SMLINK RES   1           . TEMPORARY FOR X11    @ @@@@HC
)@@G@@SMTEMP RES   2           .    @F@@@@/.  MOVE SYMBOL (FROM ONE SYMBOL TABHD
)@@G@@LE TO ANOTHER)  FOR )COPY     @G@@@@. ENTER WITH A0=ABS BASE ADDR OF 'FRHE
)@@G@@OM' WS; A1=RELADR OF SYMBOL IN IT   @E@@@@.       EXIT CONDITIONS SAME AHF
)@@G@@S FOR ENTRY 'SYMBOL' ABOVE.   @[@@@@.     @#@@@]        INSTRS .  @ @@@@HG
)@@G@@SYCOPY* SX   X11,SCLINK  .    @G@@@@       JNE,U A0,WSID SC0100    . TESHH
)@@G@@T FOR 'FROM' AND 'TO ' IDENTICAL    @G@@@@. FROM WS AND TO WS ARE THE SAHI
)@@G@@ME,  THIS CALL RE-OPENS AN OLD FUNC DEFN  @C@@@@SC0010 ABSADR A1        HJ
)@@G@@ . ADDR OF PRIMARY ENTRY@B@@@@       LA,H1 A0,1,A1     . GET REF CNT    HK
)@@G@@@A@@@@       AA,U  A0,1        . BUMP IT  @C@@@@       SA,H1 A0,1,A1    HL
)@@G@@ . PUT NEW REFCNT AWAY  @C@@@@       RELADR A1         . RESTORE SYMBOL HM
)@@G@@ADDR  @B@@@@       J     SC0200      . NORMAL EXIT    @B@@@@. THIS IS REHN
)@@G@@ALLY A ')COPY' COMMAND---     @E@@@@SC0100 SA    A0,SCCBAS   . SAVE ABS HO
)@@G@@BASE ADDR OF COPY WS    @D@@@@       AA    A1,A0       . GET ADDR OF PRIHP
)@@G@@MARY ENTRY  @E@@@@. UNPACK FROM SYMTBL OF COPY WS TO ASSEMBLY AREA FOR NHQ
)@@G@@AMES  @F@@@@SC0110 LA,Q2 A2,0,A1     . NO CHARS FROM HEADER WD OF THIS EHR
)@@G@@NTRY  @ @@@@       SA    A2,SCNCHR   .    @A@@@@       AA,U  A2,3       HS
)@@G@@ . ROUND UP @E@@@@       SSL   A2,2        . DIV BY 4, GIVING NO OF WORDHT
)@@G@@S     @B@@@@       LR    R1,A2       . SET LOOP COUNT @E@@@@       LA   HU
)@@G@@ A2,(+1,WORDPT)   . SET DESTINATION POINTER     @D@@@@SC0120 JNGD  R1,SCHV
)@@G@@0130   . OUT WHEN ALL WORDS MOVED   @G@@@@       LA    A0,2,A1     . GETHW
)@@G@@ 2ND WD OF PAIR (1ST WD IF PRIMARY ENTRY) @C@@@@       SA    A0,0,*A2   HX
)@@G@@ .STASH IN LOOKUP AREA  @D@@@@       JNGD  R1,SC0130   . OUT IF NO MORE HY
)@@G@@ENTRIES     @G@@@@       LA,H2 A1,0,A1     . FWD SYMBOL TBL LINK (NEXT SHZ
)@@G@@ECONDARY ENTRY)   @C@@@@       JZ    A1,SC0900   . ZERO IS A SYSERR     IA
)@@G@@@G@@@@       AA    A1,SCCBAS   . CREATE ABS ADDR FROM ADDR REL TO COPY WIB
)@@G@@S ORG @D@@@@       LA    A0,1,A1     . GET 1ST WORD OF THIS PAIR  @A@@@@IC
)@@G@@       SA    A0,0,*A2    . STASH IT @G@@@@       J     SC0120      . GO ID
)@@G@@BACK FOR 2ND WORD IN THIS ENTRY (IF ANY)  @D@@@@. SYMBOL IS IN ASSEMBLY IE
)@@G@@AREA, NOW TABULATE IT NORMALLY@C@@@@SC0130 LA    A2,SCNCHR   . RECOVER NIF
)@@G@@O OF CHARS  @B@@@@       LMJ   X11,SYMBOL  . TABULATE IT    @B@@@@      IG
)@@G@@ J     SC0999      . OOPS, FULL     @B@@@@SC0200 LX,H2 X11,SCLINK  . NORIH
)@@G@@MAL EXIT    @ @@@@       J     1,X11       .    @ @@@@SC0900 ERROR YSYSTII
)@@G@@M      .    @ @@@@SC0999 LX,H2 X11,SCLINK  .    @ @@@@       J     0,X11IJ
)@@G@@       .    @#@@@@       VARBLS  .  @#@@@@SCLINK RES   1 .  @#@@@@SCNCHRIK
)@@G@@ RES   1 .  @#@@@@SCCBAS RES   1 .  @]@@@@       END .___    A2         IL
)@@G@@ . PREPARE TO STORE ZERO WORD @B@@@@       SA   *[@@@@*SDFF*@E@@@@REP   IM
)@@G@@MAIN,SYS  . CTL FOR I-BANK OF SYSCMD AND FUNC SEGMENT @B@@@@DBANK  . DBAIN
)@@G@@NKS ARE LINEAR, NOT SEGMENTED @]@@@]NOT TPF$.   @B@@@@EQU   REPMAP/1    IO
)@@G@@. MARK MAP AS REENTRANT @E@@@@EQU   PIPST/0 . NO INSTRUMENTATION ON PRODIP
)@@G@@UCTION VERSIONS   @C@@@@EQU   PIPEND/0 . SO DON'T GO LOOKING FOR IT     IQ
)@@G@@@]@@@@ENT LIJ$    @E@@@@IN LIJ$$$ . AT START OF DBANK SO SEGS ARE VISIBLIR
)@@G@@E IN DUMPS  @]@@@[IN OPFORK   @#@@@@IN .ROOSEG/APL    @#@@@@IN .SITEPAR/IS
)@@G@@APL   @D@@@@SEG   SYS    . ***********************************    @#@@@@IT
)@@G@@IN .SYSSEG/APL    @E@@@@SEG   XQT,SYS     .    *************************IU
)@@G@@**********  @#@@@@IN .XQTSEG/APL    @G@@@@. POSITION DISPOSABLE DBANK ANIV
)@@G@@D WORKSPACE AT HIGHEST D-BANK ADDRESSES   @F@@@@IN STMAST       . MARK SIW
)@@G@@TART OF CORE ONLY USED BY MASTER CONSOLE  @F@@@@IN IBMAST,LSMAST,ACMAST IX
)@@G@@      . IN ELEMENTS IBEAMS,LODSAV,ACCNTG  @G@@@@IN STINIT      . MARK STIY
)@@G@@ART OF CORE ONLY NEEDED DURING INITIALIZATION   @F@@@@IN LSINIT,ACINIT,CIZ
)@@G@@HINIT       . IN ELEMENTS LODSAV,ACCNTG,TABLES  @G@@@@. WORKSPACE INITIAJA
)@@G@@LLY FOLLOWS THE ABOVE, BUT IS MOVED DOWN AFTER SIGNON @]@@@@IN WORKSP   JB
)@@G@@___@6N/K@@6U[[K^S>/,0@69/K@@8E/K@@8E/K@@6U/K@@6&/K@@6KC@@^S=]@@^S=C9K@@AJC
)@@G@@*[@@@@*SDFF*@E@@@@REP   MAIN,XQT  . CTL FOR I-BANK OF SYSCMD AND FUNC SEJD
)@@G@@GMENT @B@@@@DBANK  . DBANKS ARE LINEAR, NOT SEGMENTED @]@@@@NOT TPF$.   JE
)@@G@@@B@@@@EQU   REPMAP/1    . MARK MAP AS REENTRANT @E@@@@EQU   PIPST/0 . NOJF
)@@G@@ INSTRUMENTATION ON PRODUCTION VERSIONS   @C@@@@EQU   PIPEND/0 . SO DON'JG
)@@G@@T GO LOOKING FOR IT     @]@@@@ENT LIJ$    @E@@@@IN LIJ$$$ . AT START OF JH
)@@G@@DBANK SO SEGS ARE VISIBLE IN DUMPS  @]@@@@IN OPFORK   @#@@@@IN .ROOSEG/AJI
)@@G@@PL    @#@@@@IN .SITEPAR/APL   @D@@@@SEG   SYS    . *********************JJ
)@@G@@**************    @#@@@@IN .SYSSEG/APL    @E@@@@SEG   XQT,SYS     .    *JK
)@@G@@**********************************  @#@@@@IN .XQTSEG/APL    @G@@@@. POSIJL
)@@G@@TION DISPOSABLE DBANK AND WORKSPACE AT HIGHEST D-BANK ADDRESSES   @F@@@@JM
)@@G@@IN STMAST       . MARK START OF CORE ONLY USED BY MASTER CONSOLE  @F@@@@JN
)@@G@@IN IBMAST,LSMAST,ACMAST       . IN ELEMENTS IBEAMS,LODSAV,ACCNTG  @G@@@@JO
)@@G@@IN STINIT      . MARK START OF CORE ONLY NEEDED DURING INITIALIZATION   JP
)@@G@@@F@@@@IN LSINIT,ACINIT,CHINIT       . IN ELEMENTS LODSAV,ACCNTG,TABLES  JQ
)@@G@@@G@@@@. WORKSPACE INITIALLY FOLLOWS THE ABOVE, BUT IS MOVED DOWN AFTER SJR
)@@G@@IGNON @]@@@@IN WORKSP   ___, BUT IS MOVED DOWN AFTER SIGNON @]@@@@IN WORJS
)@@G@@KSP   ___J3//W@@6WR#)@[@*[@@@@*SDFF*@C@@@@. THIS MAP IS FOR COMBINED D-BJT
)@@G@@ANKS OF ALL REPS  @B@@@@DBANK  . DBANKS ARE LINEAR, NOT SEGMENTED @]@@@@JU
)@@G@@NOT TPF$.   @B@@@@EQU   REPMAP/1    . MARK MAP AS REENTRANT @E@@@@EQU   JV
)@@G@@PIPST/0 . NO INSTRUMENTATION ON PRODUCTION VERSIONS   @C@@@@EQU   PIPENDJW
)@@G@@/0 . SO DON'T GO LOOKING FOR IT     @]@[@@ENT LIJ$    @]@@@[ENT APL     JX
)@@G@@@E@@@@IN LIJ$$$ . AT START OF DBANK SO SEGS ARE VISIBLE IN DUMPS  @]@@@@JY
)@@G@@IN OPFORK   @#@@@@IN .ROOSEG/APL    @#@@@@IN .SITEPAR/APL   @D@@@@SEG   JZ
)@@G@@SYS    . ***********************************    @#@@@@IN .SYSSEG/APL    KA
)@@G@@@E@@@@SEG   XQT,SYS     .    ***********************************  @#@@@@KB
)@@G@@IN .XQTSEG/APL    @G@@@@. POSITION DISPOSABLE DBANK AND WORKSPACE AT HIGKC
)@@G@@HEST D-BANK ADDRESSES   @F@@@@IN STMAST       . MARK START OF CORE ONLY KD
)@@G@@USED BY MASTER CONSOLE  @F@@@@IN IBMAST,LSMAST,ACMAST       . IN ELEMENTKE
)@@G@@S IBEAMS,LODSAV,ACCNTG  @G@@@@IN STINIT      . MARK START OF CORE ONLY NKF
)@@G@@EEDED DURING INITIALIZATION   @F@@@@IN LSINIT,ACINIT,CHINIT       . IN EKG
)@@G@@LEMENTS LODSAV,ACCNTG,TABLES  @G@@@@. WORKSPACE INITIALLY FOLLOWS THE ABKH
)@@G@@OVE, BUT IS MOVED DOWN AFTER SIGNON @]@@@@IN WORKSP   ___@[VC5J@@@:9@@@[KI
)@@G@@/K@@6>;C0@@M/K@@6+/,0@5FR<J@@@R$Z)@@R#_@@@/,0@* *[@@@@*SDFF*@G@@@@. THISKJ
)@@G@@ ELEMENT DEFINES SITE-DEPENDENT PARAMETERS.  NOTICE THAT ALL OF   @G@@@@KK
)@@G@@. THEM ARE EQU'D.  WE HAVE CHOSEN TO DO THIS IN AN ASSEMBLY ELEMENT     KL
)@@G@@@G@@@@. RATHER THAN A PROC SO THAT CHANGES REQUIRE REASSEMBLY ONLY OF THKM
)@@G@@IS    @G@@@@. SPECIFIC ELEMENT.  ALTHOUGH A SIMILAR EFFECT COULD BE ACHIKN
)@@G@@EVED BY     @G@@@@. THE USE OF EQU'S IN THE COLLECTION, THAT METHOD WAS KO
)@@G@@AVOIDED SO AS NOT @D@@@@. TO HAVE TO MAINTAIN SEVERAL COPIES OF MAP SYMBKP
)@@G@@OLICS.@[@@@@.     @[@@@@.     @G@@@@. AS OF LEVEL 5.8, APL\1100 ALLOWS AKQ
)@@G@@N INSTALLATION TO CONFIGURE THE     @G@@@@. FILE(S) USED FOR SAVING AND KR
)@@G@@LOADING WORKSPACES IN EITHER OF 2 WAYS    @G@@@@. CONTROLLED BY THE VALUKS
)@@G@@E OF THE TAG ONEFIL.  THE EXTERNAL APPEARANCE   @G@@@@. (TO THE TERMINALKT
)@@G@@ USER) OF THE APL\1100 SYSTEM IS UNAFFECTED BY THE    @ @@@@. SETTING OFKU
)@@G@@ THIS PARAMETER.  @[@@@@.     @G@@@@.    ONEFIL=1  A SINGLE FILE IS USEDKV
)@@G@@ FOR ALL SAVED WORKSPACES OF ALL    @G@@@@.              APL\1100 USERS.KW
)@@G@@  A COMPLETE SET OF FUNCTIONS TO ENABLE   @F@@@@.              SITES TO KX
)@@G@@DO MASS STORAGE BILLING ON THIS FILE IS IN@F@@@@.              WORKSPACEKY
)@@G@@ 271828 OPFNS.  THE APL\1100 SYSTEM KEEPS @G@@@@.              COMPLETE KZ
)@@G@@RECORDS OF DRUM USAGE IN TRACK-SECONDS, INCLUD- @G@@@@.              INGLA
)@@G@@ KEEPING TRACK OF DROPPED WORKSPACES EVEN IF THE FILE @G@@@@.           LB
)@@G@@   HAS BEEN @PACKED.  IN THE ONE-FILE MODE, THE INSTALLATION@G@@@@.     LC
)@@G@@         CAN LIMIT MAXIMUM DRUM USAGE AND CORE USAGE (VARIABLE    @G@@@@LD
)@@G@@.              SIZE WORKSPACES) ON A USER-BY-USER BASIS ENTIRELY WITHIN LE
)@@G@@@G@@@@.              THE APL\1100 SYSTEM.  PREVIOUS ERRORS IN THE INSTALLF
)@@G@@LATION@G@@@@.              MANAGER FUNCTIONS IN 271828 OPFNS HAVE BEEN CLG
)@@G@@ORRECTED.   @[@@@@.     @G@@@@.   ONEFIL=0   EACH USER OF APL\1100 GETS LH
)@@G@@A DISTINCT EXEC-8 FILE FOR    @G@@@@.              HIS PRIVATE WORKSPACELI
)@@G@@ LIBRARY.  IF NECESSARY, APL\1100   @F@@@@.              WILL CREATE SUCLJ
)@@G@@H A FILE FOR THE USER; ITS NAME IS  @G@@@@.              <LIBNUM>*APLUSELK
)@@G@@RFILE$. , WHERE <LIBNUM> IS THE UNIQUE    @G@@@@.              LIBRARYNULL
)@@G@@MBER WHICH THE SYSTEM GENERATES FOR EACH USER   @G@@@@.              (AVLM
)@@G@@AILABLE TO HIM THROUGH MONADIC SYSTEM FUNCTION $Y29). @F@@@@.           LN
)@@G@@   IF THE USER SPECIFIES A KEY ON AN )OFF OR )CONTINUE@G@@@@.           LO
)@@G@@   COMMAND, THE FIRST 6 CHARACTERS WILL BE USED AS A WRITE  @G@@@@.     LP
)@@G@@         KEY ON HIS WORKSPACE FILE, AND THE LAST 6 CHARACTERS WILL@G@@@@LQ
)@@G@@.              BE USED AS A READ KEY (OBVIOUSLY, IF THE KEY IS 6 OR FEW-LR
)@@G@@@G@@@@.              ER CHARACTERS, BOTH KEYS WILL BE THE SAME). IN THE LS
)@@G@@USUAL @F@@@@.              FASHION, HE MUST THEN SPECIFY THE SAME KEY ONLT
)@@G@@ HIS  @G@@@@.              PROCESSOR CALL CARD THE NEXT TIME HE USES THELU
)@@G@@ APL\1100   @G@@@@.              SYSTEM.  IF APL\1100 IS CONFIGURED WITHLV
)@@G@@ ONEFIL SET TO ONE@G@@@@.              USER-BY-USER CONTROLS OVER DRUM OLW
)@@G@@R CORE USAGE ARE NOT    @G@@@@.              AVAILABLE TO SITE MANAGEMENLX
)@@G@@T FROM WITHIN THE APL\1100    @G@@@@.              SYSTEM ITSELF. IN ADDLY
)@@G@@ITION, THE COMMANDS )HI, )PA, )HIPA,@F@@@@.              )PORTS, )MSG, ALZ
)@@G@@ND )MSGN (WHEN IMPLEMENTED) WILL BE @ @@@@.              INOPERATIVE.   MA
)@@G@@@[@@@@.     @G@@@@.       REGARDLESS OF THE VALUE OF ONEFIL, AN APL\1100MB
)@@G@@ USER MAY ALWAYS  @G@@@@. SPECIFY AN ALTERNATE FILE FOR HIS PRIVATE LIBRMC
)@@G@@ARY BY ENTERING THE FILE@G@@@@. NAME (NORMAL EXEC8 NOTATION) AS SPEC2 ONMD
)@@G@@ HIS PROCESSOR CALL CARD.     @G@@@@. THIS FILE WILL BE USED FOR PRIVATEME
)@@G@@ WORKSPACES ONLY; PUBLIC LIBRARIES  @E@@@@. ARE ALWAYS OBTAINED FROM THEMF
)@@G@@ COMMON FILE (SEE BELOW).     @[@@@@.     @D@@@@ONEFIL* EQU    1        MG
)@@G@@      . TURN SINGLE FILE ON   @[@@@@.     @D@@@@. PARAMETERS WHICH DESCRMH
)@@G@@IBE THE COMMON WORKSPACE FILE:@G@@@@.       THE TAGS BELOW DESCRIBE THE MI
)@@G@@FILE WHICH IS USED FOR THE PUBLIC   @G@@@@. WORKSPACE LIBRARY.  IF ONEFIMJ
)@@G@@L=1, ALL WORKSPACES ARE SAVED IN THIS ONE @G@@@@. FILE.  IF ONEFIL=0, ONMK
)@@G@@LY PUBLIC WORKSPACES (LIBRARYNUMBERS 1-999) ARE @#@@@@. SAVED IN IT.    ML
)@@G@@@[@@@@.     @G@@@@. THE 2 WORDS USED FOR THE QUALIFIER MUST BE 12 FIELDAMM
)@@G@@TA CHARACTERS,    @D@@@@. RIGHT ADJUSTED.  THE SAME HOLDS FOR THE FILE NMN
)@@G@@AME.  @D@@@@IOQUAL* EQU '      '    . 1ST 6 CHARS OF QUALIFIER    @D@@@@MO
)@@G@@IOQUAM* EQU '   UOM'    . 2ND 6 CHARS OF QUALIFIER    @D@@@@IOFILE* EQU MP
)@@G@@'APL$LI'    . 1ST 6 CHARS OF FILENAME     @D@@@@IOFILF* EQU 'BRARY$'    MQ
)@@G@@. 2ND 6 CHARS OF FILENAME     @E@@@@IORKEY* EQU ' RDKEY'    . READ KEY: MR
)@@G@@6 CHARS, RIGHT ADJUSTED @E@@@@IOWKEY* EQU ' WRKEY'    . WRITE KEY: 6 CHAMS
)@@G@@RS, RIGHT ADJUSTED@G@@@@IOFRES* EQU '2500  '    . MAX RESERVE, LEFT ADJUMT
)@@G@@STED (INITIAL RES IS 0) @[@@@@.     @ @@@@. DEFAULT CONTROL PARAMETERS  MU
)@@G@@@G@@@@.       IF A SINGLE WORKSPACE FILE IS CONFIGURED FOR ALL USERS (ONMV
)@@G@@EFIL  @G@@@@. IS SET TO ONE)  THE PARAMATERS SPECIFIED BELOW ARE EFFECTIMW
)@@G@@VE WHEN     @G@@@@. INITIALLY CREATING A WORKSPACE FILE OR WHEN APL\1100MX
)@@G@@ AUTOMATICALLY    @G@@@@. CONVERTS AN OLD FORMAT (LEVEL 5.7 OR EARLIER) MY
)@@G@@FILE.  THEY ARE WRITTEN @G@@@@. INTO THE FILE ITSELF AND SUBSEQUENTLY REMZ
)@@G@@AD IN AND USED WHENEVER A NEW @G@@@@. USER'S ACCOUNTING DATA IS INITIALINA
)@@G@@ZED.  SINCE THE ACTUAL DEFAULTS ARE @G@@@@. READ FROM THE FILE ITSELF (ONB
)@@G@@NCE IT HAS BEEN INITIALIZED), THEY MAY BE @G@@@@. CHANGED BY AN APPROPRINC
)@@G@@ATE APL FUNCTION (IN WORKSPACE 271828 OPFNS)    @G@@@@. WITHOUT REASSEMBND
)@@G@@LING OR RECOLLECTING THE PROCESSOR ITSELF.  NOTE THAT @G@@@@. THESE ARE NE
)@@G@@DEFAULT VALUES ONLY, AND THE PERMISSIONS CAN BE CONTROLLED  @F@@@@. ON ANF
)@@G@@ USER-BY-USER BASIS WITH FUNCTIONS IN WORKSPACE 271828 OPFNS@F@@@@.     NG
)@@G@@  IF APL IS CONFIGURED IN THE FILE-PER-USER MODE (ONEFIL=0),@G@@@@. THENNH
)@@G@@ THE PARAMATERS MAXWSI, PUBINH, AND CONINH APPLY EQUALLY TO ALL   @G@@@@NI
)@@G@@. USERS OF THE SYSTEM.  IN THIS CASE,  MAXDRM IS IGNORED, AND THE USER  NJ
)@@G@@@G@@@@. MAY STORE ANY NUMBER OF WORKSPACES UP TO THE LIMIT IMPOSED BY EXNK
)@@G@@EC8   @A@@@@. ITSELF ON THE SIZE OF HIS FILE.   @[@@@@.     @G@@@@MAXDRMNL
)@@G@@* EQU    148*4          . MAX DRUM USAGE (SECTORS) - NORMAL WORK- @G@@@@NM
)@@G@@                              . SPACES AVERAGE AROUND 148 SECTORS; THIS NN
)@@G@@@G@@@@                              . IS SOME 4 WORKSPACES.  THIS IS NOTNO
)@@G@@ AS   @G@@@@                              . HIGH AS IT MAY SEEM, SINCE ENP
)@@G@@ACH WORK-   @G@@@@                              . SPACE IS EQUIVALENT TONQ
)@@G@@ A PROGRAM FILE.  @G@@@@MAXWSI* EQU    2              . MAX WORKSPACE SINR
)@@G@@ZE INDEX (NUMBER OF     @G@@@@                              . 16K BLOCKSNS
)@@G@@.  THIS PARAMETER CONTROLS THE@G@@@@                              . AMOUNT
)@@G@@NT OF CORE WHICH A GIVEN USER MAY   @G@@@@                              NU
)@@G@@. HAVE FOR HIS WORKSPACE (I.E. THE MAXIMUM@G@@@@                        NV
)@@G@@      . VALUE ACCEPTABLE TO THE )WSSIZE COMMAND.@G@@@@                  NW
)@@G@@            . DUE TO THE INTERNAL CONSTRUCTION OF THE @G@@@@            NX
)@@G@@                  . PROCESSOR, THIS VALUE MAY NOT EXCEED    @G@@@@      NY
)@@G@@                        . SIXTEEN (WHICH IS 65K OF CORE FOR WS)   @G@@@@NZ
)@@G@@PUBINH* EQU    0              . PUBLIC )SAVE INHIBIT.  USERS FOR WHOM   OA
)@@G@@@F@@@@                              . THIS VALUE IS ONE MAY NOT )SAVE INOB
)@@G@@@G@@@@                              . PUBLIC LIBRARIES (100-999) . ONLY OC
)@@G@@THE   @G@@@@                              . INSTALLATION MANAGER MAY SAVOD
)@@G@@E IN 1-99   @F@@@@                              . REGARDLESS OF THIS PAROE
)@@G@@AMETER.     @G@@@@CONINH* EQU    0              . )CONTINUE INHIBIT.  USOF
)@@G@@ERS FOR WHOM THIS @G@@@@                              . PARAMETER IS ONEOG
)@@G@@ MAY NOT HAVE A CONTINUE@G@@@@                              . WORKSPACE.OH
)@@G@@  SINCE A CONTINUE WORKSPACE  @G@@@@                              . CAN OI
)@@G@@BE CREATED BY THE APL\1100 SYSTEM   @F@@@@                              OJ
)@@G@@. ITSELF (IF IT DETECTS A FAILURE OF@G@@@@                              OK
)@@G@@. SOME SORT), USERS ARE ALLOWED TO EXCEED @G@@@@                        OL
)@@G@@      . MAXDRM FOR CONTINUE WORKSPACES (ONLY).  @G@@@@                  OM
)@@G@@            . SITES WHICH DO NOT WANT THIS MAY SET    @G@@@@            ON
)@@G@@                  . THIS FLAG TO ONE FOR PARTICULAR USERS,  @G@@@@      OO
)@@G@@                        . BUT SHOULD REALIZE THAT THEY ARE THEREBY@G@@@@OP
)@@G@@                              . INHIBITING AN IMPORTANT RECOVERY FEATUREOQ
)@@G@@@E@@@@                              . OF THE APL\1100 SYSTEM.     @[@@@@OR
)@@G@@.     @G@@@@. PARAMETERS WHICH DETERMINE WHICH PCT WORD IS USED FOR 'COMOS
)@@G@@PUTER TIME' @F@@@@. FOR CORE TIME, USE PCT+0143 (FASTBAND WORD), CPUTIMEOT
)@@G@@=PCT+026 .  @G@@@@. ON LEVEL 27 SYSTEMS, SETTING TIMWRD TO 0143 WILL CAUOU
)@@G@@SE THE PROCESSOR  @G@@@@. TO COMPUTE THE CORE TIME FROM OTHER WORDS OF TOV
)@@G@@HE PCT WHICH ARE SET    @G@@@@. BY THE ST. PAUL DISTRIBUTED EXEC AND AREOW
)@@G@@ AS ACCURATE AS POSSIBLE.     @G@@@@. IN THIS CASE, THE VALUE 0143 IS SIOX
)@@G@@MPLY A FLAG, AS WORD 0143 IS NOT    @A@@@@. ACTUALLY USED IN THE COMPUTAOY
)@@G@@TION. @[@@@@.     @D@@@@TIMWRD* EQU 026    . OFFSET INTO PCT OF TIME WOROZ
)@@G@@D     @F@@@@TIMNOR* EQU 0      . (RIGHT) SHIFT COUNT TO NORMALIZE ABOVE PA
)@@G@@WORD  @[@@@@.     @[@@@@.     @F@@@@. THE FOLLOWING PARAMETERS DESCRIBE PB
)@@G@@YOUR LOCAL EXEC 8 SYSTEM, AND @G@@@@. INDICATE WHETHER CERTAIN UNIVERSITPC
)@@G@@Y OF MARYLAND EXEC CHANGES HAVE     @F@@@@. BEEN INSTALLED.  THE EXEC CHPD
)@@G@@ANGES ARE OPTIONAL, AND ARE INCLUDED@^@@@@. IN THIS DISTRIBUTION. @[@@@@PE
)@@G@@.     @G@@@@.  BASE LEVEL-- IF 23 OR LESS, II CONTINGENCY RETURN ADDR ISPF
)@@G@@ CHANGED    @G@@@@.               IF 26 OR GREATER, APL WILL DO AN LCOREPG
)@@G@@$ AFTER A )COPY   @G@@@@.               IF 27 OR GREATER, DEMAND BRKPT IPH
)@@G@@S USED TO @SYM DEBUG    @E@@@@.               DUMPS (ON SYSTEM ERRORS) TPI
)@@G@@O A LINE PRINTER  @F@@@@EXEC8* EQU   27          . TURN ON DEMAND BRKPT PJ
)@@G@@OF SYSTEM ERRORS  @[@@@@.     @G@@@@. THE TAG 'UOMTTY' INDICATES WHETHERPK
)@@G@@ THE UOM CHANGES TO TTY35 WHICH     @G@@@@. ALLOW OUTPUT OF THE POUNDSIGPL
)@@G@@N, DOUBLEQUOTE AND UPARROW CHARACTERS TO  @G@@@@. TELETYPES HAVE BEEN INPM
)@@G@@STALLED.  IF THIS TAG IS ZERO, THE ALTERNATE    @G@@@@. CHARACTERS ($%  PN
)@@G@@$W  $H  @T  AND @D) ARE USED FOR OUTPUT OF THE APL    @F@@@@. CHARACTERSPO
)@@G@@ MULTIPLY, QUAD, QOUTEQUAD, TAKE (UPARROW) AND DROP TO@G@@@@. DEMAND TERPP
)@@G@@MINALS (IN BATCH, THE PRIMARY CHARACTERS ARE ALWAYS USED).  @G@@@@.     PQ
)@@G@@NOTE:  FOR INPUT, APL WILL ALWAYS ACCEPT EITHER THE PRIMARYS (IF  @G@@@@PR
)@@G@@.            YOUR TELETYPES CAN GENERATE THEM) OR THE ALTERNATES.  IF   PS
)@@G@@@G@@@@.            YOU DO NOT WISH TO CHANGE THE UNIVAC DISTRIBUTED CONVPT
)@@G@@ENTION@G@@@@.            FOR INPUT,  YOU CAN STILL MAKE THE OUTPUT CHANGPU
)@@G@@ES ONLY,    @E@@@@.            WHICH WILL MAKE THESE CHARACTERS PRINTABLPV
)@@G@@E.    @I@@@@UOMTTY* EQU  1           .                            .     PW
)@@G@@      0  UQE *YTTMOU    @[@@@@.     @G@@@@. THE TAGS BELOW INDICATE INSTPX
)@@G@@ALLATION OF SOME UOM ER'S IN YOUR EXEC    @G@@@@. IF THE ER HAS BEEN INSPY
)@@G@@TALLED, THEN THE TAG SHOULD BE SET TO THE ER    @B@@@@. INDEX, OTHERWISEPZ
)@@G@@ IT SHOULD BE ZERO.     @G@@@@. AT PRESENT, THESE ER'S ARE NOT USED BY AQA
)@@G@@PL, BUT THEY ARE INCLUDED IN  @G@@@@. THE DISTRIBUTION BECAUSE OF THEIR QB
)@@G@@GENERAL UTILITY FOR ANY OTHER USE   @A@@@@. YOUR INSTALLATION MIGHT DESIQC
)@@G@@RE.   @[@@@@.     @G@@@@WML$*  EQU   0           . WHAT'S MY LINE.  RETUQD
)@@G@@RNS CTMC PORT AND SITEID@G@@@@                         . FOR DEMAND RUNSQE
)@@G@@.  WILL BE USED TO ALLOW APL  @G@@@@                         . TO CHOOSEQF
)@@G@@ FROM AMONG SEVERAL DEVICE SPECIFIC @G@@@@                         . FROQG
)@@G@@NT END ROUTINES (E.G. TTY AND IBM2741),   @F@@@@                        QH
)@@G@@ . WHICH SHOULD BE IDENTIFIABLE BY SITEID @G@@@@SEND$* EQU   0          QI
)@@G@@ . ENABLES A RUN TO SEND INFORMATION CORE-TO-   @G@@@@                  QJ
)@@G@@       . CORE TO ANOTHER EXECUTING RUN, REGARDLESS OF @G@@@@            QK
)@@G@@             . THE BATCH, DEMAND OR REAL-TIME STATUS OF     @G@@@@      QL
)@@G@@                   . EITHER RUN.  WILL BE USED IN APL TO IMPLEMENT@D@@@@QM
)@@G@@                         . THE )MSG AND )MSGN COMMANDS@G@@@@RECV$* EQU  QN
)@@G@@ 0           . COMPLEMENTRAY TO SEND$, THIS ER PICKS UP     @E@@@@      QO
)@@G@@                   . THE MESSAGES SENT BY OTHER RUNS  @[@@@@.     @F@@@@QP
)@@G@@. THE TAG BELOW SHOULD BE A FIELDATA 'E' OR A FIELDATA ' '(SPACE).@G@@@@QQ
)@@G@@. AN 'E' IMPLIES THAT THE UOM SPECIAL 'E' OPTION FOR @ASG'S OF FASTRAND QR
)@@G@@@F@@@@. FILES HAS BEEN INSTALLED IN THE EXEC.  THIS OPTION ENHANCES THE QS
)@@G@@@G@@@@. SECURITY OF FILES ASSIGNED BY PROCESSORS: A FILE ASSIGNED WITH TQT
)@@G@@HIS   @G@@@@. OPTION (SUCH AS THE APL LOAD-SAVE FILE) WILL ALWAYS BE FREQU
)@@G@@ED FROM THE @F@@@@. RUN AT PROGRAM TERMINATION, EVEN IF NO EXPLICIT @FREQV
)@@G@@E IS GIVEN. @G@@@@. THIS PREVENTS USERS FROM GETTING THE FILE ASSIGNED TQW
)@@G@@O THEIR RUN WITH  @F@@@@. READ AND WRITE PERMISSION BY TERMINATING APL AQX
)@@G@@BNORMALLY (E.G.   @^@@@@. BY USING BREAK-X).    @[@@@@.     @ @@@@UOMEOPQY
)@@G@@* EQU  ' '         .    @[@@@@.     @G@@@@. THE TAG UOMASC SHOULD BE SETQZ
)@@G@@ ONE IF THE UOM FULL ASCII FEATURE HAS    @G@@@@. BEEN INSTALLED IN THE RA
)@@G@@LOCAL EXEC.  THIS FEATURE INVOLVES CHANGES TO   @G@@@@. THE EXEC ELEMENTRB
)@@G@@S TTYTAB AND TTY35.  WHEN INSTALLED, THIS FEATURE     @G@@@@. ENABLES ANRC
)@@G@@Y USER PROGRAM (NOT JUST APL\1100) TO TRANSMIT AND RECEIVE  @G@@@@. ALL RD
)@@G@@THE ASCII CODES INCLUDING LOWER CASE AND CONTROL FUNCTIONS.  IT IS@G@@@@RE
)@@G@@. **NOT** THE SAME AS UNIVAC'S ER APRNT$ AND ER AREAD$ FEATURES, WHICH  RF
)@@G@@@D@@@@. DO NOT ALLOW TRANSISSION OF CONTROL CODES OR PARITY.@G@@@@.     RG
)@@G@@ THE INSTALLATION OF THE UOM ASCII PACKAGE IS NOT NECESSARY FOR   @F@@@@RH
)@@G@@. THE USE OF APL\1100.  IT IS NEEDED ONLY TO SUPPORT THE FOLLOWING@#@@@@RI
)@@G@@. FEATURES---     @G@@@@.      (1) ASCII TERMINALS WITH THE FULL APL CHARJ
)@@G@@RACTERSET (Q-OPTION)    @E@@@@.      (2) FULL ASCII I/O FUNCTIONS IN WORRK
)@@G@@KSPACE 4 CODEDIO  @G@@@@. IF THIS TAG IS SET ZERO, DIAGNOSTIC MESSAGES WRL
)@@G@@ILL BE GIVEN IF THE     @D@@@@. USER ATTEMPTS TO USE EITHER OF THE ABOVERM
)@@G@@ FEATURES.  @[@@@@.     @G@@@@UOMASC* EQU  1           . ONE IF FULL ASCRN
)@@G@@II INSTALLED, ZERO OTHERWISE  @[@@@@.     @[@@@@.     @[@@@@.     @H@@@@RO
)@@G@@.     THE PARAMETERS 'INSTAL' AND 'INSTAM' SET BELOW ARE USED TO DEFINE RP
)@@G@@A     @H@@@@. SPECIAL EXEC8 ACCOUNT NUMBER WHICH SHOULD BE THE ACCOUNT NRQ
)@@G@@UMBER ON THE @RUN @H@@@@. CARD FOR THE INITIAL GENERATION RUN FOR APL; TRR
)@@G@@HE WORKSPACE SAVE-LOAD FILE   @H@@@@. WILL BE CATALLOGED UNDER THIS NUMBRS
)@@G@@ER.  PREVIOUS RESTRICTIONS ON EXECUTING   @H@@@@. APL FROM FILES OTHER TRT
)@@G@@HAN SYS$*LIB$ HAVE BEEN REMOVED, BUT USERS SHOULD     @H@@@@. REALIZE THRU
)@@G@@AT EXEC-8 DOES NOT RECOGNIZE THE REENTRANCY OF PROCESSORS NOT     @H@@@@RV
)@@G@@. IN LIB$.  IF APL IS EXECUTED FROM LIB$, THEN THERE WILL BE ONLY ONE CORW
)@@G@@PY    @G@@@@. OF IT WHICH WILL BE SHARED BY ALL CONCURRENT USERS.  IF EXRX
)@@G@@ECUTED FROM @H@@@@. SOME OTHER FILE, THEN THERE WILL BE A SEPERATE COPY RY
)@@G@@FOR EACH USER.  NOTE    @H@@@@. FURTHER THAT IT IS NOT NECESSARY TO DO ARZ
)@@G@@ SYSTEM GENERATION TO 'CONFIGURE'   @G@@@@. APL (OR ANY OTHER REP, FOR TSA
)@@G@@HAT MATTER) ON THE EXEC'S REP LIST.  THE  @G@@@@. REP LIST IS MERELY USESB
)@@G@@D BY THE SYSTEM TO REDUCE OVERHEAD BY MAKING IT @G@@@@. UNNECESSARY TO DSC
)@@G@@O A PFS$ OF LIB$ TO FIND THE REP.  REPS WILL FUNCTION @F@@@@. PERFECTLY SD
)@@G@@WELL SIMPLY BY PUTTING THEIR ABSOLUTES IN SYS$*LIB$.  @H@@@@.      APL\1SE
)@@G@@100 WILL NOT EXECUTE IF THE PARAMETERS BELOW ARE SET TO THEIR     @H@@@@SF
)@@G@@. DISTRIBUTED VALUE 'INSTALLATION'; A VALID ACCOUNT NUMBER MUST BE CONFISG
)@@G@@GURED.@F@@@@.     THE ACCOUNT NUMBER SHOULD BE LEFT ADJUSTED AND SPACE FSH
)@@G@@ILLED @[@@@@.     @^@@@@INSTAL* EQU 'INSTAL' .  @^@@@@INSTAM* EQU 'LATIOSI
)@@G@@N' .  @[@@@@.     @[@@@@.     @F@@@@. NOTE-- THE TWO EQU'S BELOW DEFINE SJ
)@@G@@THE CHARACTERS USED FOR THE   @G@@@@. EDITING FEATURES OF LINE DELETE, ASK
)@@G@@ND CHARACTER DELETE.  DEPENDING     @F@@@@. UPON LOCAL EXEC CHANGES TO ESL
)@@G@@LEMENT TTY35, THEY MAY BE QUESTION  @D@@@@. MARK AND DOUBLE QUOTE; QUESTSM
)@@G@@ION MARK AND LEFT ARROW @F@@@@. (UNDERLINE), OR SOMETHING ELSE.  AT ANY SN
)@@G@@RATE, THE CHARACTERS    @F@@@@. USED BY THIS PACKAGE SHOULD BE THE SAME SO
)@@G@@AS THE ONES USED IN     @F@@@@. YOUR LOCAL EXEC.  IF YOUR EXEC DIFFERS FSP
)@@G@@ROM THE DEFINITIONS     @D@@@@. BELOW, CHANGE ONE OR THE OTHER SO THEY BSQ
)@@G@@OTH MATCH.  @[@@@@.     @E@@@@. CAUTION- THE EQU'ED VALUE MUST BE THE ASSR
)@@G@@CII REPRESENTATION@C@@@@. OF THE CHARACTER AND NOT THE FIELDATA VALUE   SS
)@@G@@@[@@@@.     @F@@@@LNDELT* EQU  077         .LINE DELETE CHAR IS A QUESTIST
)@@G@@ON MARK     @F@@@@CHDELT* EQU  0137        . CHARACTER DELETE CHAR IS A SU
)@@G@@BACK ARROW  @[@@@@.     @G@@@@. THE PARAMETER DUMPON CONTROLS THE PRINTISV
)@@G@@NG OF SNAP DUMPS WHICH OCCUR  @G@@@@. WHENEVER APL DETECTS AN INTERNAL ESW
)@@G@@RROR.  FOR BATCH RUNS, THIS DUMP    @G@@@@. IS WRITTEN IN THE USER'S PRISX
)@@G@@NT$ FILE (WITH A HEADING); FOR DEMAND RUNS@G@@@@. THE DUMP IS BREAKPOINTSY
)@@G@@ED AND SYMM'ED TO AN ONSITE PRINTER.  THE DUMPS @G@@@@. ARE MAINLY OF UTSZ
)@@G@@ILITY IF YOU HAVE MADE LOCAL CHANGES TO THE PROCESSOR.@G@@@@. IF YOU DO TA
)@@G@@NOT CARE ABOUT THE DUMPS, SET DUMPON TO ZERO AND THEY WILL  @#@@@@. NOT TB
)@@G@@BE TAKEN.   @[@@@@.     @G@@@@DUMPON* EQU    1              . SET ZERO ITC
)@@G@@F SYSERR DUMPS NOT WANTED     @[@@@@.     @G@@@@. THE PARAMETER DPREP ISTD
)@@G@@ USED TO FORCE WORKSPACES TO BE SAVED ON DISK   @G@@@@. BLOCK BOUNDARIESTE
)@@G@@ ON SYSTEMS USING 8414/24/40 DISKS FOR THE WORKSPACE  @G@@@@. FILE.  IT TF
)@@G@@SHOULD BE ZERO FOR FASTRANDS AND 8460'S AND 0,1, OR 2 FOR   @G@@@@. DISKTG
)@@G@@S DEPENDING UPON THE DISK PREPPING (0=28WDS, 1=56 WDS, 2=112 WDS).@G@@@@TH
)@@G@@. PADDING CAN BE OMITTED IF DESIRED (I.E. DPREP=0 REGARDLESS OF THE     TI
)@@G@@@F@@@@. ACTUAL DISK PREPPING), BUT THIS MUST BE WEIGHED AGAINST MARKEDLYTJ
)@@G@@@G@@@@. INCREASED EXEC OVERHEAD INCURRED TO DO BLOCKING AND DEBLOCKING, TK
)@@G@@WITH  @G@@@@. A CONSEQUENT DECREASE IN OVERALL SYSTEM THROUGHPUT.  SINCETL
)@@G@@ WORKSPACES @G@@@@. AVERAGE FROM 2 TO 4 TRACKS, A PADDING FACTOR OF 2 WITM
)@@G@@LL RESULT IN ONLY @G@@@@. ABOUT 1 TO 2 PERCENT OF THE FILE SPACE LOST TOTN
)@@G@@ INTERNAL FRAGMENTATION.@[@@@@.     @E@@@@DPREP*  EQU    2              TO
)@@G@@. AT UOM WE SET THIS TO 2     @[@@@@.     @G@@@@. THE TAG 'UOMED' INDICATP
)@@G@@TES WHETHER THE UOM EDITOR @ED IS AVAILABLE     @F@@@@. AT THIS SITE;  TTQ
)@@G@@HE (OPTIONAL) COMMAND  )EDIT  USES IT.  IF THIS @G@@@@. COMMAND IS ENABLTR
)@@G@@ED, THE ABSOLUTES ED$, ERROR$, AND THE EDITOR'S I-BANK@G@@@@. MUST BE INTS
)@@G@@ THE FILE FROM WHICH APL IS EXECUTED (USUALLY SYS$*LIB$). AS@G@@@@. DISTTT
)@@G@@RIBUTED, UOM EDITOR LEVELS 28 AND ABOVE ARE UPWARD COMPATIBLE     @G@@@@TU
)@@G@@. REPLACEMENTS FOR UNIVAC @ED LEVEL 13 AND BELOW, AND THUS ARE USUALLY  TV
)@@G@@@G@@@@. PLACED IN LIB$ WITH THE SAME D-BANK NAME, I.E. @ED.  IF THE UNIVTW
)@@G@@AC    @G@@@@. VERSION OF @ED IS NOT TO BE REPLACED, THEN THE UOM EDITOR'TX
)@@G@@S D-BANK    @G@@@@. NAME MUST BE CHANGED BY A @COPY,A FROM ED TO WHATEVETY
)@@G@@R NAME IS DESIRED.@G@@@@. THE TAG   UOMED  SHOULD BE SET TO THIS NAME, WTZ
)@@G@@HATEVER IT IS; THE TAG  @F@@@@. SHOULD BE LEFT JUSTIFIED, AND BLANK FILLUA
)@@G@@ED TO 6 CHARACTERS.     @G@@@@. $$$$$ NOTE $$$$$ THE UOM EDITOR IS NOT RUB
)@@G@@EQUIRED TO RUN APL.  IF IT    @G@@@@. IT IS NOT PRESENT, USERS WILL USE UC
)@@G@@THE INTERNAL EDITING CAPABILITY     @F@@@@. OF THE APL PROCESSOR ITSELF,UD
)@@G@@ RATHER THAN THE @ED PROCESSOR.     @[@@@@.     @G@@@@UOMED*  EQU     'EUE
)@@G@@D    ' . NAME OF EDITOR DBANK; 0 IF UNIMPLEMENTED     @[@@@@.     @[@@@@UF
)@@G@@.     @G@@@@. THE APL\1100 SYSTEM REQUIRES THAT EACH USER BE UNIQUELY IDUG
)@@G@@ENTIFIABLE  @G@@@@. IN ORDER TO KEEP WORKSPACES SEPERATE, AND FOR IDENTIUH
)@@G@@FICATION WHEN     @G@@@@. SHARED FILES ARE USED.  RELEASES OF APL PRIOR UI
)@@G@@TO 5.4 ALWAYS GENERATED @G@@@@. THIS IDENTIFIER (THE LIBRARY NUMBER) BY UJ
)@@G@@HASHING THE USER'S QUALIFIER  @G@@@@. AND ACCOUNT NUMBER.  SITES WHICH DUK
)@@G@@O NOT WISH TO IDENTIFY USERS BY     @G@@@@. THESE PARAMETERS MAY SPECIFYUL
)@@G@@ THE PARAMETERS TO BE USED IN CALCULATING @F@@@@. THE LIBRARY NUMBER BY UM
)@@G@@SETTING THE EQU'S BELOW.  ANY COMBINATION @D@@@@. OF RUNID, ACCOUNT AND/UN
)@@G@@OR QUALIFIER MAY BE USED.     @G@@@@. *****CAUTION*******  THE DISTRIBUTUO
)@@G@@ED SYSTEM HAS ALWAYS USED ACCOUNT   @G@@@@. NUMBER AND QUALIFIER.  IF YOUP
)@@G@@U HAVE AN EXISTING APL LIBRARY FILE, USE  @F@@@@. CAUTION IN CHANGING THUQ
)@@G@@ESE PARAMETERS.  WHEN THEY CHANGE, LIBRARY@G@@@@. NUMBERS WILL CHANGE ANUR
)@@G@@D USERS WILL NOT BE ABLE TO ACCESS WORKSPACES   @G@@@@. SAVED UNDER THEIUS
)@@G@@R OLD LIBRARYNUMBERS WITHOUT EXPLICITLY SPECIFYING    @D@@@@. THE OLD LIUT
)@@G@@BNUM ON THEIR )LOAD AND/OR )COPY COMMANDS @F@@@@. THE WORKSPACE 271828 WUU
)@@G@@SFILEFIXUP MAY BE USED TO CONVERT THE FILE@[@@@@.     @G@@@@LIBNOA* EQU UV
)@@G@@ 1           . SET 0 IF ACCNT NO NOT TO BE USED, 1 TO USE IT@G@@@@LIBNOQUW
)@@G@@* EQU  1           . DON'T USE QUALIFIER, ACCOUNT NO IS ENOUGH    @D@@@@UX
)@@G@@LIBNOR* EQU  0           . 1 IF RUNID IS TO BE USED   @]@@@@       END .UY
)@@G@@___G T THIS @G@@@@. COMMAND IS ENABLED, THE ABSOLUTES ED$, ERROR$, AND TUZ
)@@G@@HE EDITOR'S I-BANK@G@@@@. MUST BE IN THE FILE FROM WHICH APL IS EXECUTEDVA
)@@G@@ (USUALLY SYS$*LIB$). AS@@#LS&K.3___@@]1S&KZXWEJ@@#1S&K5J___@@ LS&K6ZG3GVB
)@@G@@@@ 1S&K\B___@@ALS&K\IT&T@@A1S&K\-&T>)@B1S&ART   )@BLS&IL    )#D1S&ART   VC
)@@G@@@@^LS&K"[___)#D1S&ART   @@#LS&K/\___@@]1S&KZI, B@@#1S&K/R___@@ LS&K53G3GVD
)@@G@@@@ 1S&K!7___@@ALS&K\^3G2@@A1S&K\&T&T)@B1S&ART   )@BLS&IL    )#D1S&ART   VE
)@@G@@@@^LS&K.1___)#D1S&ART   @@#LS&K.F___@@]1S&KZT&T&@@#1S&K5Z___@@ LS&K6#___VF
)@@G@@@@ 1S&K,T&T&@@ALS&K,=3G2@@A1S&K,;G3G)@B1S&ART   )@BLS&IL    )#D1S&ART   VG
)@@G@@@@^LS&K..___@@X1S$K?<G3G@@CLS$K=NG3G@@C1S$KOG3G2@@F1S$K"C@@@@@H1S$K?@@@@VH
)@@G@@@@K1S$KP&T&T@@=LS$L^*@@@@@MLS$KX&T&T@@M1S$KQ&T&T@@FLS$KR____@@XLS$K"K@@@VI
)@@G@@@@ZLS$LII@@@@@)LS$K\)@@@)#D1S$ART   @@#LS$K_B___@@]1S$KZZR]<@@#1S$K4____VJ
)@@G@@@@ LS$K6>&T>@@ 1S$K\R___@@ALS$K\R___@@A1S$K\:G3G)@B1S$ART   )@BLS$IL    VK
)@@G@@)#D1S$ART   @@^LS$K"#___)#D1S$ART   @@]1S$KZWEJR@@#1S$K5Z___@@ LS$K6W3G2VL
)@@G@@@@ 1S$K\[&T>@@ALS$K\IT&T@@A1S$K\<G3G)@B1S$ART   )@BLS$IL    )#D1S$ART   VM
)@@G@@@@^LS$K" ___)#D1S$ART   @@#LS$K.3___@@]1S$KZU8OY@@#1S$K5____@@ LS$K6-&T>VN
)@@G@@@@ 1S$K\D&T>@@ALS$K\-&T>@@A1S$K\7___)@B1S$ART   )@BLS$IL    )#D1S$ART   VO
)@@G@@@@^LS$K"#___)#D1S$NIND  @@#LS$K/;___@@]1S$KZV-L'@@#1S$K5\___@@ LS$K6ZG3GVP
)@@G@@@@ 1S$K\AT&T@@ALS$K\R___@@A1S$K\,T&T)@B1S$NIND  )@BLS$IL    )#D1S$NIND  VQ
)@@G@@@@^LS$K..___)#D1S*ART   @@#LS*K/:___@@]1S*KZV-L'@@#1S*K57___@@ LS*K6<___VR
)@@G@@@@ 1S*K\G3G2@@ALS*K\-&T>@@A1S*K\9&T>)@B1S*ART   )@BLS*IL    )#D1S*ART   VS
)@@G@@@@^LS*K.9___)#D1S*ART   @@#LS*K"J___@@]1S*KZY B:@@#1S*K5J___@@ LS*K6&T&TVT
)@@G@@@@ 1S*K\L&T>@@ALS*K\R___@@A1S*K\?3G2)@B1S*ART   )@BLS*IL    )#D1S*ART   VU
)@@G@@@@^LS*K"[___)#D1S*ART   @@#LS*K_B___@@]1S*KZR]<5@@#1S*K7J___@@ LS*K6-&T>VV
)@@G@@@@ 1S*K\AT&T@@ALS*K\;G3G@@A1S*K4FG3G)@B1S*ART   )@BLS*IL    )#D1S*ART   VW
)@@G@@@@^LS*K"#___)#D1S*ART   @@#LS*K/J___@@]1S*KZI, B@@#1S*K/7___@@ LS*K6B___VX
)@@C@@@@ 1S*K,T&T&@@ALS*K\9&T>@@A1S*K4JG3G)@B1S*ART                           VY
@EOF
@COPY,IO  TEMP.1013-005-005,1013-005-005.
@FREE     TEMP.
