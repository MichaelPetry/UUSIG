@CAT,P    1021-006-006.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI TEMP.1021-006-006,,,130167053241,000
)@@G@@**PF**@@@[+.@@@@@@@@@@@[@B]@@@]FE /^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@AD
)@@G@@@@@@@@@@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@I@@@@@@@@@@@@@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@L@@ @@@@@@@@@@@@@@@@@@@@M@@@@@@AF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D@@@@@@@@@@@F@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AG
)@@G@@@@@@@@@@X@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@AH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AI
)@@G@@@@@@@@@@@@@@@@@@@@@@R@@@@@@@@S@@A@@@@@@@@@@@K@@@@@@@@H@@@@@@@@@@@@@@@@@@AJ
)@@G@@@@@@@@@@@@@@@@@@@@@@V@@@@@@@@W@@@@@@@@@@@@@@@@@@@@@@@E@@@@@@@@@@@@@@@@@@AK
)@@G@@@@@@@@@@Z@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AL
)@@G@@@@@@@@@@@@@@@@@@@B@@@@@@@@@@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AM
)@@G@@@@@@@N@@Q@@@@@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@Y@@@@@@@@@@@E@@ZAN
)@@G@@RTEX        @@@@@@@@[@@@            @ @A@ @@@@[#@@@@W@CRF OFRTFF        AO
)@@G@@@@@@@@@@[@@@            @ @^@ @@@@@2@@@@X#CRI OFRTII        @@@@@@@@[@@@AP
)@@G@@            @ @^@ @@@@@<@@@@X5CRN OFRTLG        @@@@@@@@[@@@            AQ
)@@G@@@ @A@ @@@@[B@@@@YSCRV OFRTL1        @@@@@@@@[@@@            @ @ @ @@@@@-AR
)@@G@@@@@@ZZCRZ OFEXCS        @@@@@@@@[@@@            @ @N@ @@@@]I@@@@)@CSA OFAS
)@@G@@RTAT        @@@@@@@@[@@@            @ @D@ @@@@[Z@@@@+ICSH OFRTSQ        AT
)@@G@@@@@@@@@@[@@@            @ @^@ @@@@@2@@@@<!CS+ OFRTFI        @@@@@P@@[@@@AU
)@@G@@            @ @D@ @@@@@2@@@@=ZCS& OFEXHT        @@@@@@@@[@@@            AV
)@@G@@@ @Q@ @@@@[Y@@@@>LI%<BKFEXMT        @@@@@@@@[@@@            @ @M@ @@@@@9AW
)@@G@@@@@@&\D!2DCFEXDI        @@@@@@@@[@@@            @ @^@ @@@@@W@@@@$*HKBE[FAX
)@@G@@RTDT        @@@@@@@@[@@@            @ @A@ @@@@@>@@@@*^DMIENFEXRN        AY
)@@G@@@@@@@@@@[@@@            @ @#@^@@@@@T@@@@*(D/VENFEXAI        @@@@@@@@[@@@AZ
)@@G@@            @ @U@ @@@@[N@@@@(]EXKENFRTER        @@@@@@@@[@@@            BA
)@@G@@@ @F@ @@@@@V@@@@%PE*MGKFEXCN        @@@@@@@@[@@@            @ @E@ @@@@@_BB
)@@G@@@@@@%0E3PGKFEXLX        @@@@@@@@[@@@            @ @+@ @@@@#]@@@@:\F2VGKFBC
)@@G@@EXGP        @@@@@@@@[@@@            @ @A@ @@@@]:@@@@,1E$,GMFEXED        BD
)@@G@@@@@@@@@@[@@@            @ @A@ @@@@^$@@@@1WG7KGMFPMDP        @@@@@T@@[@@@BE
)@@G@@            @ @R@ @@@@@9@@@@6#E:ZGPFEXST        @@@@@@@@[@@@            BF
)@@G@@@ @$@ @@@@EV@@@@6/F%5GPFRTTA        @@@@@@@@[@@@            @ @#@^@@@@[$BG
)@@G@@@@@[[RJR?[KGRTSC        @@@@@@@@[@@@            @ @ @ @@@@[=@@@[]"JU/[KGBH
)@@G@@EXOP        @@@@@@@@[@@@            @ @E@ @@@@]^@@@[^+KVE[WGEXDT        BI
)@@G@@@@@@@@@@[@@@            @ @T@ @@@@^5@@@[A&E/=]CGEXBS        @@@@@@@@[@@@BJ
)@@G@@            @ @W@ @@@@AQ@@@[FVKJ6]FGEXLL        @@@@@@@@[@@@            BK
)@@G@@@ @J@ @@@@]\@@@[L1G*$]JGEXON        @@@@@@@@[@@@            @ @/@ @@@@#+BL
)@@G@@@@@[O)I]=]JGEXEC        @@@@@@@@[@@@            @ @[@]@@@@CT@@@[S]J/7]LGBM
)@@G@@EXAS        @@@@@@@@[@@@            @ @X@ @@@@]+@@@[)VI;#]MG____________BN
)@@G@@________________________________________________________________________BO
)@@G@@________________________________________________________________________BP
)@@G@@________________________________________________________________________BQ
)@@G@@________________________________________________________________________BR
)@@G@@________________________________________________________________________BS
)@@G@@________________________________________________________________________BT
)@@G@@________________________________________________________________________BU
)@@G@@________________________________________________________________________BV
)@@G@@________________________________________________________________________BW
)@@G@@________________________________________________________________________BX
)@@G@@________________________________________________________________________BY
)@@G@@________________________________________________________________________BZ
)@@G@@________________________________________________________________________CA
)@@G@@________________________________________________________________________CB
)@@G@@________________________________________________________________________CC
)@@G@@________________________________________________________________________CD
)@@G@@   'SEX',     SX, @A@@@R     *         'D-O-B',   BIRTH )   @[@@@RC     CE
)@@G@@@F@@@R      GP(1)=GROUP(CSDB,'BQ-PROG',PROG,'BQ-SEQ',SEQ,'BQ-INS',INST, CF
)@@G@@@^@@@R     *'BQ-MO',ERRMO,    @E@@@R     *'BQ-DATE',DATE,'PART-ONE',SCR(CG
)@@G@@1),'PART-TWO',SCR(2),   @^@@@R     *'BQ-ITEMS',BFR)   @[@@@RC     @G@@@RCH
)@@G@@      GP(2)=GROUP(CSDB,'JES-PROG',PROG,'JES-SEQ',SEQ,'JES-INS',INST,    CI
)@@G@@@^@@@R     *'JES-MO',ERRMO,   @G@@@R     *'JES-DATE',DATE,'JES-SM-RW',SCCJ
)@@G@@R(1),'JES-SM-SS',SCR(2),'JES-VO-RW',@F@@@R     *SCR(3),'JES-VO-SS',SCR(4CK
)@@G@@),'JES-IM-RW',SCR(5),'JES-IM-SS',   @F@@@R     *SCR(6),'JES-AU-RW',SCR(7CL
)@@G@@),'JES-AU-SS',SCR(8),'JES-AL-RW',   @F@@@R     *SCR(9),'JES-AL-SS',SCR(1CM
)@@G@@0),'JES-MA-RW',SCR(11),'JES-MA-SS', @F@@@R     *SCR(12),'JES-WD-RW',SCR(CN
)@@G@@13),'JES-WD-SS',SCR(14),'JES-SA-RW',@F@@@R     *SCR(15),'JES-SA-SS',SCR(CO
)@@G@@16),'JES-RE-RW',SCR(17),'JES-RE-SS',@D@@@R     *SCR(18),'JES-DE-RW',SCR(CP
)@@G@@19),'JES-DE-SS',SCR(20),@C@@@R     *'JES-ITEMS1',BFR,'JES-ITEMS2',BFR(14CQ
)@@G@@))    @[@@@RC     @G@@@R      GP(3)=GROUP(CSDB,'PSI-PROG',PROG,'PSI-SEQ'CR
)@@G@@,SEQ,'PSI-INS',INST,    @^@@@R     *'PSI-MO',ERRMO,   @E@@@R     *'PSI-DCS
)@@G@@ATE',DATE,'PSI-AL-RW',SCR(1),'PSI-AL-SS',SCR(2),@E@@@R     *'PSI-SN-RW',CT
)@@G@@SCR(3),'PSI-SN-SS',SCR(4),'PSI-DI-RW',    @D@@@R     *SCR(5),'PSI-DI-SS'CU
)@@G@@,SCR(6),'PSI-EX-RW',SCR(7),   @E@@@R     *'PSI-EX-SS',SCR(8),'PSI-DE-RW'CV
)@@G@@,SCR(9),'PSI-DE-SS',    @ @@@R     *SCR(10),'PSI-ITEMS',BFR)@[@@@RC     CW
)@@G@@@F@@@R      GP(4)=GROUP(CSDB,'WI-PROG',PROG,'WI-SEQ',SEQ,'WI-INS',INST, CX
)@@G@@@^@@@R     *'WI-MO',ERRMO,    @F@@@R     *'WI-DATE',DATE,'WI-SM',SCR(6),CY
)@@G@@'WI-ADJ',SCR(5),'WI-L',SCR(4),@F@@@R     *'WI-RE',SCR(3),'WI-K',SCR(2),'CZ
)@@G@@WI-SC',SCR(1),'WI-ITEMS',BFR) @[@@@RC     @^@@@R      READ, DEBUG, NSTOPDA
)@@G@@@#@@@R      NUMMO = 1   @#@@@R      ICOUNT=0    @[@@@RC     @^@@@RC     DB
)@@G@@ FIND FIRST CLIENT@[@@@RC     @A@@@R      X=FIND(CSDB,1,FIRST,CLIENT,0) DC
)@@G@@@^@@@RC        GET THE CLIENT @B@T@R      IF(DEBUG.EQ.1) PRINT 75, KASE,DD
)@@G@@RC    @C@T@R   75 FORMAT(' CLIENT NO.', I6,' RACE=',I2)     @ @@@R  100 DE
)@@G@@Y = FETCH(CSDB,1,CLIENT)@ @@@R      IF(X.LE.0) GO TO 990    @^@@@R      DF
)@@G@@IF(RC.EQ.'W') RC=1@^@@@R      IF( RC.EQ.'B')RC=2@^@@@R      IF(RC.EQ.'N'DG
)@@G@@) RC=3@^@@@R      IF(RC.EQ.'H') RC=4@^@@@R      IF(RC.EQ.'A') RC=5@#@T@RDH
)@@G@@      RC=RC-1     @^@@@T      RC=IABS(RC-1)     @B@@@T      IF(DEBUG.EQ.DI
)@@G@@1) PRINT 75, KASE,RC    @C@@@T   75 FORMAT(' CLIENT NO.', I6,' RACE=',I2DJ
)@@G@@)     @^@@@R      ICOUNT=ICOUNT + 1 @A@@@R      IF(ICOUNT.GE.NSTOP) GO TDK
)@@G@@O 600 @[@@@RC     @A@@@RC      LOOK AT THE VARIOUS TESTS    @[@@@RC     DL
)@@G@@@^@@@RC      GP(1) --- BQ TEST@[@@@RC     @B@@@R      X = FIND(CSDB,1,FIDM
)@@G@@RST,GP(1),CLIENT) @A@@@R      IF(DEBUG.EQ.1) PRINT 175, X   @ @@@R      DN
)@@G@@IF(X.LE.0) GO TO 200    @ @@@R  150 Y = FETCH(CSDB,1,GP(1)) @A@@@R      DO
)@@G@@NUMMO = CNVRT(BIRTH,DATE)     @C@@@R      IF(DEBUG.EQ.1) PRINT 12, BIRTHDP
)@@G@@,DATE,NUMMO @D@@@R   12 FORMAT(' BIRTH=',I5,'  DATE=',I5,'  NUMMO=',I5) DQ
)@@G@@@E@@@R      IF(DEBUG.EQ.1) PRINT 11, KASE,INST,PROG,SEQ,DATE,RC,SX@E@@@RDR
)@@G@@   10 WRITE(10,11)  KASE,INST,PROG,SEQ,DATE,RC,SX,NUMMO     @B@@@R     *DS
)@@G@@,SCR(1),SCR(2),ERRMO,(BFR(J),J=1,7) @D@@@R   11 FORMAT(1X,I6,I2,2I1,I4,2DT
)@@G@@I1,I3,I2,2I3/14X,7A6)   @B@@@R       X = FIND(CSDB,1,NEXT,GP(1),CLIENT) DU
)@@G@@@A@@@R      IF(DEBUG.EQ.1) PRINT 175, X   @B@@@R  175 FORMAT('     BQ TEDV
)@@G@@ST TAG=',O12)     @ @@@R      IF(X.LE.0) GO TO 200    @#@@@R      GO TO DW
)@@G@@150   @[@@@RC     @ @@@RC      GP(2) ----- JES TEST   @[@@@RC     @B@@@RDX
)@@G@@  200 X= FIND(CSDB,1,FIRST,GP(2),CLIENT)  @A@@@R      IF(DEBUG.EQ.1) PRIDY
)@@G@@NT 275,X    @ @@@R      IF(X.LE.0) GO TO 300    @ @@@R  250 Y = FETCH(CSDZ
)@@G@@DB,1,GP(2)) @A@@@R      NUMMO = CNVRT(BIRTH,DATE)     @C@@@R      IF(DEBEA
)@@G@@UG.EQ.1) PRINT 12, BIRTH,DATE,NUMMO @E@@@R      IF(DEBUG.EQ.1) PRINT 21,EB
)@@G@@ KASE,INST,PROG,SEQ,DATE,RC,SX@E@@@R   20 WRITE(11,21)  KASE,INST,PROG,SEC
)@@G@@EQ,DATE,RC,SX,NUMMO,    @D@@@R     *(SCR(J),J=1,20,2),(SCR(J),J=2,20,2),ED
)@@G@@ERRMO,BFR   @F@@@R   21 FORMAT(1X,I6,I2,2I1,I4,2I1,I3,20I2,4X,I3/14X,11AEE
)@@G@@6/14X,11A6/ @#@@@R     * 14X, 4A6)  @B@@@R      X = FIND(CSDB,1,NEXT,GP(EF
)@@G@@2),CLIENT)  @A@@@R      IF(DEBUG.EQ.1) PRINT 275, X   @B@@@R  275 FORMATEG
)@@G@@('     JES TEST TAG=', O12)   @ @@@R      IF(X.LE.0) GO TO 300    @#@@@REH
)@@G@@      GO TO 250   @[@@@RC     @ @@@RC      GP(3) ---- PSI TEST    @[@@@REI
)@@G@@C     @B@@@R  300 X = FIND(CSDB,1,FIRST,GP(3),CLIENT) @A@@@R      IF(DEBEJ
)@@G@@UG.EQ.1) PRINT 325, X   @B@@@R  325 FORMAT('     PSI TEST TAG =', O12)  EK
)@@G@@@ @@@R      IF(X.LE.O) GO TO 400    @ @@@R  350 Y = FETCH(CSDB,1,GP(3)) EL
)@@G@@@A@@@R      NUMMO = CNVRT(BIRTH,DATE)     @C@@@R      IF(DEBUG.EQ.1) PRIEM
)@@G@@NT 12, BIRTH,DATE,NUMMO @E@@@R      IF(DEBUG.EQ.1) PRINT 31, KASE,INST,PEN
)@@G@@ROG,SEQ,DATE,RC,SX@E@@@R   30 WRITE(12,31)  KASE,INST,PROG,SEQ,DATE,RC,SEO
)@@G@@X,NUMMO,    @C@@@R     *(SCR(J),J=1,10),ERRMO,(BFR(J),J=1,22)     @F@@@REP
)@@G@@   31 FORMAT(1X,I6,I2,2I1,I4,2I1,I3,20I2,I3/14X,11A6/14X,11A6)    @B@@@REQ
)@@G@@      X = FIND(CSDB,1,NEXT,GP(3),CLIENT)  @A@@@R      IF(DEBUG.EQ.1) PRIER
)@@G@@NT 325, X   @ @@@R      IF(X.LE.0) GO TO 400    @#@@@R      GO TO 350   ES
)@@G@@@[@@@RC     @ @@@RC      GP(4) ---- WI TESTS    @[@@@RC     @B@@@R  400 ET
)@@G@@X = FIND(CSDB,1,FIRST,GP(4),CLIENT) @A@@@R      IF(DEBUG.EQ.1) PRINT 425EU
)@@G@@, X   @B@@@R  425 FORMAT('     WI TEST TAG=', O12)    @ @@@R      IF(X.LEV
)@@G@@E.0) GO TO 500    @ @@@R  450 Y = FETCH (CSDB,1,GP(4))@A@@@R      NUMMO EW
)@@G@@= CNVRT(BIRTH,DATE)     @C@@@R      IF(DEBUG.EQ.1) PRINT 12, BIRTH,DATE,EX
)@@G@@NUMMO @E@T@R      IF(DEBUG.EQ.1) PRINT 41, KASE,INST,SEQ,DATE,RC,SX     EY
)@@G@@@E@@@T      IF(DEBUG.EQ.1) PRINT 41, KASE,INST,PROG,SEQ,DATE,RC,SX@E@@@REZ
)@@G@@   40 WRITE(13,41)  KASE,INST,PROG,SEQ,DATE,RC,SX,NUMMO,    @B@@@R     *FA
)@@G@@(SCR(J),J=1,6),ERRMO,(BFR(J),J=1,21)@F@@@R   41 FORMAT(1X,I6,I2,2I1,I4,2FB
)@@G@@I1,I3,6I2,I3/14X,11A6/14X,10A6)     @B@@@R      X = FIND (CSDB,1,NEXT,GPFC
)@@G@@(4),CLIENT) @A@@@R      IF(DEBUG.EQ.1) PRINT 425, X   @ @@@R      IF(X.LFD
)@@G@@E.O) GO TO 500    @#@@@R      GO TO 450   @[@@@RC     @ @@@RC      FIND FE
)@@G@@THE NEXT CLIENT   @[@@@RC     @A@@@R  500 X = FIND(CSDB,1,NEXT,CLIENT,0)FF
)@@G@@@B@T@R      IF(DEBUG.EQ.1) PRINT 75, KASE,RC    @ @@@R      IF(X.LE.0) GFG
)@@G@@O TO 600    @#@@@R      GO TO 100   @[@@@RC     @[@@@RC     @^@@@RC     FH
)@@G@@ NO MORE CLIENTS  @[@@@RC     @^@@@R  600 PRINT 610,ICOUNT  @G@@@R  610 FI
)@@G@@FORMAT('0 --- END OF REQUESTED CLIENTS IN DATABASE -- NUMBER PROCE@#@@@RFJ
)@@G@@     *SSED=',I10) @#@@@R      ENDFILE 10  @#@@@R      ENDFILE 11  @#@@@RFK
)@@G@@      ENDFILE 12  @#@@@R      ENDFILE 13  @#@@@R      REWIND 10   @#@@@RFL
)@@G@@      REWIND 11   @#@@@R      REWIND 12   @#@@@R      REWIND 13   @#@@@RFM
)@@G@@      STOP DONE   @[@@@RC     @ @@@RC***   ERROR PROCESSING ******@[@@@RFN
)@@G@@C     @#@@@R  800 PRINT 805   @E@@@R  805 FORMAT('0*** ERROR*** -- UNABLFO
)@@G@@E TO ATTACH DATABASE')  @#@@@R      GO TO 1000  @#@@@R  990 PRINT 995   FP
)@@G@@@G@@@R  995 FORMAT('0 ***ERROR*** -- UNABLE TO FIND FIRST CLIENT RECORD'FQ
)@@G@@)     @#@@@R 1000 STOP ERROR  @[@@@RC     @F@@@TC      FUNCTION TO CONVEFR
)@@G@@RT BIRTHDATE BACK TO NUMBER OF MONTHS     @G@@@TC     OLD PERSON WAS WHEFS
)@@G@@N TEST WAS TAKEN (THIS I)#_[S@@@@@@@ORTHOGT     ROTFACPUNCH TYPE2 TYPE1 FT
)@@G@@@@[@@@@@@@@@@@@@@H@@@@@]@@@@@[EG@@@A)^E@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FU
)@@G@@@@@@@@RANS  SCORETANS   LOADTRPRINT       EH@@@A@@^@@^@@C@@G@@)@@[@@=@@]FV
)@@G@@@@^@ E@C@@G=@@@@@]@@@@@QNCOD$       S1IODR      S1STFT      S1GVAL      FW
)@@G@@S1PCHD      S1ENDC      S1ENST      S1UFOT      NIO2$       NPRT$       FX
)@@G@@NERR4$      NERR3$      S61CCR      @@[@@@@@@@F(BLANK$      ^@@@C@@]@@@@FY
)@@G@@S1CCI       ]@@@C@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[MK0^G[#@K0^G@@G]@@#&C"@@@[G[)@#-C.)@@[G[@@#=GA
)@@G@@C.@@@]G@)@#LC/)@@[G@@@#<C/@@@]AA@@@A)@E[F#@K0^G[#[#@@@@@@@@@G_)__.C#)@F4GB
)@@G@@[#)@F5G_)__.C#)@F4G_@__.C#@@F4G")__.C])@F4AB@@@A)@N[F#[#@K0K0K0K0K0K0@@@GC
)@@G@@O@)@F4R@)@#PO@K@F4R@K@#&G])@#&[])@F7G_)__.C#)@F4[#)@F6AC@@@A)@W[F#[#[#[#GD
)@@G@@[#[#[#[#[#@@R[0@#<O[)@F4R[)@#WO[K@F4R[K@#&O[@@F4R[@@#VO@0@F4R@0@#RAD@@@AGE
)@@G@@)@>[F#[#[#[#[#[#[#[#[#@@G@)@F4[@)@F9O]K@F4R]K@#&G@@@F4[@@@F8O]@@F4R]@@#=GF
)@@G@@O[0@F4AE@@@A)@,[F#[#[#[#[#[#[#[#[#@@A])@F.G[)@F4[[)@F/G]@@F4[]@@F;G[@@F4GG
)@@G@@[[@@F'O])@F4R])@#>AF@@@A)@7[F#[#[#[#[#[#[#[#[#@@C#)@F;[#)@G@G#)@#&[#)@F_GH
)@@G@@O])@F4R])@#XA])@F"O])@F4R])@#&AG@@@A)[@[F#[#[#[#[#[#[#[#[#@@R[0@#KA[0@G]GI
)@@G@@O]@@F7R]@@#XA]@@G[O])@F4R])@#&A])@F;G#)@F4AH@@@A)[D[F#[#[#[#[#[#[#[#[#@@GJ
)@@G@@R[@@#TA[@@G O]K@F7R]K@#HA]K@G^O[)@F7R[)@#OA[)@G#O[0@F7AI@@@A)[M[F#[#[#[#GK
)@@G@@[#[#[#[#[#@@R[@@#MA[@@GCO[K@F7R[K@#JA[K@GBO@)@F7R@)@#&A@)@GAO[@@F7AJ@@@AGL
)@@G@@)[V[EK0K0K0K0K0K0K0K0@@@R[0@#TA[0@GFO[0@F7R[0@#ZA[0@GEO[@@F7R[@@#IA[@@GDGM
)@@G@@O[@@@SAK@@@A)[=[EK0K0^G^G[#[#@@@@@@@R[K@#PA[K@GIO[K@@SR[K@#OA[K@GHO[0@@SGN
)@@G@@R[0@#NA[0@GGO[0@@SAL@@@A)[![EK0K0^G^G[#[#@@@@@@@R[K@#NA[K@GLO[K@@SR[K@#VGO
)@@G@@A[K@GKO[K@@SR[K@#RA[K@GJO[K@@SAM@@@A)[6[F#[#[#@K0K0^G^G@@@@@R[@@#+A[@@GNGP
)@@G@@O[@@@SR[@@#YA[@@GMO[K@@SR[K@#SA[K@F7O[K@F7AN@@@A)[_[EK0K0^G^G[#[#@@@@@@@GQ
)@@G@@R[@@#WA[@@GQO[@@@SR[@@#UA[@@GPO[@@@SR[@@#=A[@@GOO[@@@SAO@@@A)]C[F#[#[#@KGR
)@@G@@0K0K0K0K0@@@R[@@#=A[@@GTO[@@F5R[@@#<A[@@GSO[@@@SR[@@#QA[@@GRO[@@F5AP@@@AGS
)@@G@@)]L[F#[#[#[#[#[#[#[#[#@@G#@@F6C#@@F9[#@@F'G#@@F'C#@@F5[#@@F8G#@@F5C#@@F8GT
)@@G@@O[@@F5AQ@@@A)]U[F#[#[#[#[#[#[#[#[#@@O[@@F5R[@@#>A[@@GVO[@@F6R[@@#LA[@@GUGU
)@@G@@O[@@F5R[@@#ZA[@@F9AR@@@A)]<[F#[#[#[#[#[#[#[#[#@@O[@@F6R[@@#-A[@@GXO[@@F6GV
)@@G@@R[@@#)A[@@F/G#@@F/C#@@F6[#@@GWAS@@@A)]?[F#[#[#[#[#[#[#[#[#@@O]K@F_R]K@#&GW
)@@G@@A]K@GZO[@@F_R[@@#)A[@@F5O[@@F5R[@@#YA[@@GYAT@@@A)]5[F#[#[#[#[#[#[#[#[#@@GX
)@@G@@[])@G&[]@@G>[[)@G=[[@@G<[@)@G+[@@@G-O]K@F6R]K@#XA]K@G)AU@@@A)]"@3#[#[#[#GY
)@@G@@[#[#@@)@[@C@)@ @C@_____"MODEL A]K@G?A]@@G:A[)@G%A[@@G([#)@G*[#@@G$AV@@@AGZ
)@@G@@)@#@K@)@A[@@@@@@@@ST    QUADTE@@@@@@@@@@@[@@@@@@@@@@@]T     LINTES@@@@@@HA
)@@G@@KG@@@@AW@@@A)@I[S@@@@@@@QUADRE@@@@@@@@@@@#@@@@@@@@@@@]UC    LINRED@@@@@@HB
)@@G@@@@@@@]@@@@@@@@@@@]AX@@@A)@T[S@@@@@@@@@@@#D@@@@@ @@@@@@@@@@@]      PRIOR HC
)@@G@@@@@@@@@@@@@^@@@@@@@@@@@]DUC   AY@@@A)@=[S@@@@@@@LACHEN@@@@@@@@@@B;@@@@@@HD
)@@G@@@@@@@]ONS   EQUATI@@@@[<@@@@@@@@@@@V@@@@@^AZ@@@A)@\[S@@@@@@@@@@@@[@@@@B.HE
)@@G@@@@@@@@@@@@@]NC    NDISFU@@@@@@@@@@B/@@@@@@@@@@@]      BA@@@A)@'[S@@@@@@@HF
)@@G@@@@@@@[@@@@@[@@@@B"@@@@@@@@@@@]AK    CLASSP@@@@[<@@@@@[@@@@@[@@@@@[BB@@@AHG
)@@G@@)[ [S@@@@@@@      GRAPH @@@@@@@@@@C@@@@@@D@@@@@^SPAK  NOCLAS@@@@@@@@@@@@HH
)@@G@@@@@@@CBC@@@A)[K[S@@@@@@@@@@@@]B     MEMPRO@@@@@@@@@@@@@@@@@C@@@@@@@@@@@]HI
)@@G@@@@@@C[@@@@@@@@@@@]BD@@@A)[V[S@@@@@@@      BAYES @@@@@@@@@@CC@@@@@@@@@@@]HJ
)@@G@@      ALLOC @@@@@@@@@@CB@@@@@@BE@@@A)[&[S@@@@@@@@@@@@@@@@@@[@@@@CE@@@@@@HK
)@@G@@@@@@@]ABLE  CLASST@@@@@@@@@@CD@@@@@@@@@@@]BF@@@A)[1[S@@@@@@@@@@@@C@@@@@@HL
)@@G@@@@@@@[@@@@CH@@@@@@@@@@@]LLOC  GROUPAK"K@@@\[\___@@@@@]BG@@@A)[/[S@@@@@@@HM
)@@G@@@@@@@@@@@@@C@@@@@[@@@@@[@@@@CL@@@@@@@@@@@]ORES  BANKSC@@@@@@@@@@@@BH@@@AHN
)@@G@@)]B[S@@@@@@@@@@@@@@@@@@]E     DSQUAR@@@@@@@@@@CN@@@@@J@@@@@#INT   DATAPRHO
)@@G@@@@@@@@BI@@@A)]M[S@@@@@@@@@@@@@@@@@@V@@@@@#@@@@#\@@@@CP@@@@@@@@@@@]      HP
)@@G@@COSTS @@@@@@@@@@COBJ@@@A)]X[S@@@@@@@@;&?*@@@@@@@@@@@@V@@@@@A@@@@I+@@@@K1HQ
)@@G@@@@@@@@@@@@@]TRIX  COSTMA@;&?*@BK@@@A)]*[S@@@@@@@@@@@,3@@@@@@@@@@@]S     HR
)@@G@@WEIGHT@@@@@@@@@@,2@@@@@@@@@@@]      SCALEDBL@@@A)]3[S@@@@@@@@@@@@^@@@@,;HS
)@@G@@@@@@@@@@@@@]      SCORES@@@@@@@@@@@@@@@@@C@@@@@@@@@@@#BM@@@A)]"[S@@@@@@@HT
)@@G@@@@@@@@@@@@@]@@@@\ @@@@@@@@@@@]ORES  SORTSC@@@@@@@@@@@@@@@@@C@@@@@@BN@@@AHU
)@@G@@)#D@S@)#H@8@@@@@@@@@@@B/@@@@B;@@@@@ @@@@@^@@@@@#@@@@@]@@@@@[@@@@@@@@@@@@HV
)@@G@@@@@@@CBO@@@A)#O[S@@@@@@@@@@@CN@@@@CL@@@@CH@@@@CE@@@@CD@@@@CC@@@@CB@@@@C[HW
)@@G@@@@@@C@@@@@B"@@@@B.BP@@@A)#Z[@@@@@@@@)#^@F#@@@@@@A])@G!@@@@\F@@@@\ @@@@,;HX
)@@G@@@@@@,3@@@@,2@@@@K1@@@@CP@@@@COBQ@@@A)# @:][#[#[#[#@@@@)^M@K@@@@@@@@@@@@@HY
)@@G@@)     (I4,2X@@K@G,@[0@F1@@@@^M@@[@@]/,0@@@BR@@@A)#E@3]=K0[@@)^O@K@@@@@@@HZ
)@@G@@@@@@@@______REWIND/K@@^G0@@@@G*@@@@GD@@@@  @@@@@'^@@@@BS@@@A)#K@;#H] #[#IA
)@@G@@[#[#[#@@@@@@)^Q@C@NMODS @@@@#$@@@@#$@@@@#$@@@@^O@@@@FT/,0@@@ @@@@@BT@@@AIB
)@@G@@)^R@C@)#R@;#[]D#[#[#[#[@@@@@@@/K@@W0@@@@FU@@@@FU@@@@#*@@@@^Q/,0@@@@[8@F1IC
)@@G@@______BU@@@A)^S@K@)#Y@3#[]D#[#[#[#@@@@@@@@@@@@FU@@@@FU@@@@#(@@@@^S/,0@@@ID
)@@G@@@[9@F1______IFDSQ BV@@@A)#=@F@@@@@@@)^U@K@)#>@<#[]D#[#@@@@@@@@@@#%@@@@^UIE
)@@G@@/,0@@@@['@F1______IFOTHR/K@@W0BW@@@A)#(@:#[#[@K0@@@@@@)^W@K@@@@@@@@@@@@@IF
)@@G@@______NGROUPC/@@[=@[;@F1/K@@W0@@@@FU@@@@FUBX@@@A)#,@;#[]H#[#[@K^G@)^Y@K@IG
)@@G@@______GROUPV@[.@F1/K@@#5/K@@#5@@@@#:@@@@^W/,0@@@[@@@#:BY@@@A)#5[F#[]H#[#IH
)@@G@@[@K^G^G^G@@@R[@@#* @@@#!@[_@F1/K@@#//K@@#/@@@@#?@@@@^Y/,0@@@ @@@#?BZ@@@AII
)@@G@@)#"@<#[#[#[9@@@@@@)^)@K@)^]@F#@@@@@@ @@@#\______TEST  [@^J_"C@@@@  @@@@ IJ
)@@G@@ @@@#,CA@@@A)^#[F]H#[#[@K^G^G[#@@@@@]@@@#0H@@@@@C@@@#&@] @F1/K@@^D/K@@^DIK
)@@G@@@@@@#\@@@@^)/,0@@@CB@@@A)^G[N#[#@^G[#@K@@@*@@@@G/G@@^RH@@@@@[@@@#2G@@@@IIL
)@@G@@G@)@#&C/)@@);@@@@<C@@@#: @@@#1CC@@@A)^Q[N@K0K0^[]L#@^@@@@@^Z@@@@@@@@@@@@IM
)@@G@@@@@@@[/,0@@@^^K@^ZN8M@@[ @@@#4 @@@#3/K@@W0CD@@@A)^)[F#[#[#[@K0K0@@@@@@@@IN
)@@G@@C/)@@[[@@@@@G@@@@@C@@@#6@]I@F1/K@@W0@@@@#6@@@@#5@@@@#0CE@@@A)^([F#@K[@K0IO
)@@G@@K>K0K@@@@@@@@@@@^1@@@@@[/,0@@@]@)@G\^^K@^1N8M@@[^^K@^8N8M@@[H@)@#&CF@@@AIP
)@@G@@)^2[F#[#[#[#@K0K^G^G@@@@@]K@F1@@@@#6@@@@^8@@@@G\@@@@@@@@@@FW@@@@FV@@@@@AIQ
)@@G@@@@@@#5CG@@@A)^;[N#@^G[@K0^G@@@G/@@@]G@@@#2C@C@@[R]@@G%/K@@ A(@A@@[R[)@G:IR
)@@G@@[@@@@@G@@@@@C@@@#6CH@@@A)  [F#@K0K[@K0K0K0@@@@@@R]K@FXH@@@#&C@@@#2/K@@W0IS
)@@G@@*@@@@G/C@@ FH@@@#2C@@@@@[@@@#2CI@@@A) I@V#@@@@@@)^+@S@) L@N@K0@@@@C@@@#2IT
)@@G@@8L@@ KA20)  E20.4,(2I20, @D)@[[@@@[^Q]K@G&CJ@@@A) N[N#[#@K0@K@@@@@[@[@@@IU
)@@G@@C/@@@[/K@@ X*@@@@GG/@__"C@E@@[R])@GZ[@+@@[C@)@G,[@@@#7CK@@@A) X[N#@[@[#@IV
)@@G@@@@@@@@G/@__"C@A@@[R[)@GH[@[@@@C/@@@]/K@@ =*@@@@GG/@__"C@^@@[R[@@GMCL@@@AIW
)@@G@@) $[MK@K0@K@@@@@@@C/@@@^/K@@ 2*@@@@GG/@__"C@C@@[R]@@GE[@[@@@C/@@@#/K@@ :IX
)@@G@@*@@@@GCM@@@A) 1[MK0^G[#@K0@@@@G/@__"G@A@@[R[)@GEG@^@@[R[@@GHG@E@@[R])@GMIY
)@@G@@C@D@@[R]K@GZ[@[@@@CN@@@A) ;[N@^@K^G[#@K0@@R])@F7G@D@@[R]K@GFC@C@@[R]@@GCIZ
)@@G@@/K@@AF(@[@@@/K@@S1*@@@@G/G@@ "CO@@@A)A [MK0@K^G[@@@@@@C/@@@[/K@@AQ(@A@@[JA
)@@G@@R[)@GD/K@@S/(@@@@GG@ @@[G@^@@[R[@@GDG@E@@[CP@@@A)AJ[N#@K0^@K0[#@@@R])@GGJB
)@@G@@G@ @@[C@B@@[[@@@#3C/@@@[/K@@AQ*@D@@@R]K@GB[@C@@[R]@@GBCQ@@@A)AT[M^@[@^G@JC
)@@G@@@@@@@@[@^@@]R[@@GBC/@@@[/K@@A<*@@@@GG/@__"C@B@@[/K@@BF(@@@@GG@E@@[CR@@@AJD
)@@G@@)A<[N#@[@^G@@@@@@@G/@__"C@ @@[[@C@@]R]@@GBC/@@@]/K@@A:*@@@@GG/@__"C@A@@[JE
)@@G@@R[)@GGCS@@@A)A![MK[#@K0^@K0@@@[@@@#3C/@@@[/K@@A7*@E@@@R])@GB[@D@@]R]K@GBJF
)@@G@@C/@@@#/K@@A2*@@@@GCT@@@A)A7[MK0[#@^@K@@@@@/K@@TM*@@@@I/G)@B[G/)__"G@=@@[JG
)@@G@@R[@@GGG@>@@[C@$@@[[@@@#!C/@@@[CU@@@A)B[[MK0@@^@@@@@@@@/=K@T*+@@@@I @@@@IJH
)@@G@@*@@@@KG.@__"C[B@@[C/)@@[ @@@@G*@@@#?C/@@@[CV@@@A)BF[N#@K[#@^G@@@@@1@@@@IJI
)@@G@@*@@@@IH@)@#:C@&@@[[@C@@#R]@@GBC@A@@[/K@@BQ(@A@@[R[)@GICW@@@A)BP[N@K0^@K0JJ
)@@G@@[@K&@@/,0@@@^^K@BZN8T@@@[@E@@^R])@GBC/@@@[/K@@B,(@D@@[R]K@GJ/K@@WHCX@@@AJK
)@@G@@)BZ[N@K0K0K0K0K0@@[@%@@ C@(@@[[@@@@@G@@@@@C@@@#9@#H@F1@@@@#9@@@@#8@@@@FYJL
)@@G@@@@@@BZCY@@@A)B([N#@^G^[#@K[#@@R]@@GBC/@__"/K@@B7(@A@@[R[)@GS/K@@B; @@@@^JM
)@@G@@[[E@@AC[^@@@R[@@GACZ@@@A)B3[M^G^[#[@K0K^G@(@D@@[R]K@GK/=@@T"C@@@@^/K@@T3JN
)@@G@@(@@@@ /K@@B;[@)@@^C/)@@[[@C@@^DA@@@A)B.[N@^G@[@@@@@@@@[@=@@BC/)@@[/K@@CRJO
)@@G@@(@@@@IG/)__.C@<@@@[@^@@BR[@@GBC/@@@#/K@@CTDB@@@A)CB[UK0@@K@@[@=@@BC/)@@]JP
)@@G@@/=0@CR)@)@@K @@@@K*@#@@@C.@@@[ @@@@I*@@@@KH[@@FZC[#@@[DC@@@A)CM[MK0^[@^GJQ
)@@G@@^G[#@@R[)@GBC@E@@[R])@GO[@@@#!C/@@@[/K@@CT/K@@UD*@@@@KH[@@F)C[#@@[DD@@@AJR
)@@G@@)CW[MK0^@K0K0^@@@@C@D@@[/K@@C\(@D@@[R]K@GQ[@@@#!C/@@@[/K@@C+(@C@@CR]@@GBJS
)@@G@@[@A@@CDE@@@A)C&[N#@^[#@K[#[#@@R[)@GL[@@@#4C/@@@[/K@@C\*@E@@]R])@GB/K@@UOJT
)@@G@@*@ @@[[@^@@DR[@@GBDF@@@A)C0[MK[#@K0^G[#@@@R[@@GPG@(@@[R]K@GNC@*@@][@@@#!JU
)@@G@@[@C@@ER]@@GBC/@@@[/K@@D](@A@@[DG@@@A)C'[M^[#@K@K0@@@@@(@A@@[R[)@GR[@*@@FJV
)@@G@@C@%@@[/K@@D](@E@@@R])@G /K@@UZ(@@@@IG@=@@[DH@@@A)D^[N@K0^@K0^G[#@@[@@@#!JW
)@@G@@[@^@@GR[@@G^C/@@@[[@@@#4C/@@@[/K@@DE*@D@@]R]K@G^/K@@DODI@@@A)DI[N#@K[#@KJX
)@@G@@0^@@@@C/@@@[/K@@EB(@A@@[R[)@GT[@C@@GR]@@G^C/@@@]/K@@DO(@E@@@R])@G#DJ@@@AJY
)@@G@@)DS[N#@K0^G[@^@@@@C/@__"/K@@EB[@D@@I/C)@D-*@@@@I[@)@#'C@=@@@R[@@G][@D@@HJZ
)@@G@@R]K@G^DK@@@A)D+[N#[#[#[#@^G[@@C@C@@[/K@@D_(@@@@GH@@@F-C@C@@[[@@@[^R[)@G-KA
)@@G@@R]@@F8R])@G^G@@@#'DL@@@A)D?[F#@K[@K&K^G^G@@@@@@@@@@@#8@@@@FY@@@@D2/,0@@@KB
)@@G@@^^K@D2N8S@@@/K@@E](@@@@GH@@@F+DM@@@A)D5[N#[#[#@@[@@@@@/K@@E^[[E@@LC[A@@@KC
)@@G@@[@%@@KC@*@@[[@@@@@G@@@@@C@@@#9@^T@F1@@@@#9DN@@@A)D_[M^@@K^G@@@@@@@(@^@@[KD
)@@G@@R[@@F98L@@D$O.)@@]O"@@@][@E@@JC/@@@[/K@@E^[@E@@IC/@@@[DO@@@A)ED[N@^G^G[#KE
)@@G@@@K0^@@/C)@ER*@@@@I[@)@#'C@&@@@R[)@G[[@D@@MR]K@G^[@@@#!C/@@@[/K@@FCDP@@@AKF
)@@G@@)EN[M^[@^G^G^G^G@@[@@@[^R[@@F'R])@G<R]@@G^G@@@#'C/@__"/K@@FC/K@@U%*@@@@GKG
)@@G@@H@D@@EDQ@@@A)EX[MK0^@K0^@K0@@@H@@@F+C@^@@[/K@@E/(@@@@GH@@@F=C@^@@[/K@@E9KH
)@@G@@(@@@@GH@@@F<C@^@@[DR@@@A)E$[EK[@K&K^G^G^G@@@@@@@@@@@#9@@@@#8@@@@FY@@@@E?KI
)@@G@@/,0@@@^^K@E?N8O@@@/K@@F#(@@@@GDS@@@A)E0[N#[#@@[@@@@@@@C/@@@[/K@@F [[C@@RKJ
)@@G@@C[E@@@[@*@@QC@=@@[[@@@@@G@@@@@C@@@#9@^8@F1DT@@@A)E'[MK@^@K0K@@@@@@C/@@@[KK
)@@G@@/K@@F [@@@#3C/@@@[/K@@F]*@C@@@[@C@@OC/@@@[/K@@F [@C@@NDU@@@A)F^[M[@K0^@KKL
)@@G@@0@@@@@[@D@@SR]K@G^C/@@@[/K@@F9(@A@@[R[)@F/8L@@EXO.@@@]O")@@][@C@@PDV@@@AKM
)@@G@@)FI[N#[#@K^G@^@@@@C/@@@^/K@@FU*@@@@GG/@__.C@E@@@R])@F./K@@F9(@^@@@R[@@F.KN
)@@G@@[@@@#!DW@@@A)FS[N#@K0@K^G[#@@@H@@@F=C@^@@[R[@@F./K@@F4(@@@@GG/@__.C@A@@@KO
)@@G@@R[)@F.[@C@@SR]@@G^DX@@@A)F+[MK[#@K0^G[@@@@/K@@F\*@@@@GH@@@F<C@C@@[R]@@F.KP
)@@G@@[@D@@SR]K@G^C/@@@#/K@@F$*@@@@GDY@@@A)F?[MK0^G[#@K^G@@@*@^@@@R[@@G^/K@@F9KQ
)@@G@@(@@@@GH@@@F<C@A@@[R[)@F.[@E@@SR])@G^C/@@@]DZ@@@A)F6[N@^G^G[#@K0@@@G/@__"KR
)@@G@@C@E@@[R])@F5[@C@@TR]@@G^C@D@@[R]K@F5[@@@#3C/@@@[/K@@F9EA@@@A)G@[MK[#[#@KKS
)@@G@@[#@@@@[@^@@UR[@@G^C/@@@[/K@@GK(@A@@[R[)@GU[@@@#!C/@@@[/K@@G^*@@@@GEB@@@AKT
)@@G@@)GE[N#[#@K[#[#@@@@1@@@@G*@@@@GD@D@@[R]K@GV[@@@#3C/@@@[/K@@GK*@C@@@R]@@G^KU
)@@G@@[@@@#,EC@@@A)GO[F@K^G^G^G^G^G^G@@@@@C.@@@[ @@@#_[@)@#"C@)@F&[@@@#.C@@@F>KV
)@@G@@^@K@#/N8K@I$/K@@I$ED@@@A)GX[N#@K0[#@K0K@@@*@@@@M/H)@G*H[)@#:[[%@@W[[)@#'KW
)@@G@@;L)@@[C[(@@[ @@@^@[[E@@VR])@F"EE@@@A)G$[N@K0@^[#@K0@@@[[@@#'T.@@@#C[@@#'KX
)@@G@@/K@@U5*@@@@KH[D@@[G[@@@M;[)@@<C[)@#'/K@@W<EF@@@A)G1[F#@[#[#[#@K0@@@@@@@@KY
)@@G@@R[@@G+C_0@@[O[)@F4O[)@#'R[)@#LW.@@@#;P@@@=G.@__" @@@^[EG@@@A)G'[F#[#[#@KKZ
)@@G@@0K0^G^G@@@@@[@@@G0G@@@#_C/@__"[#0@#;A[)@G\[[@@[^Q]K@G+R]K@F$R]@@GWEH@@@ALA
)@@G@@)H#[M[@^G[@^G@@@@@R])@G>C_)@@[/K@@V]*@@@@GH@@@F&C@D@@[/K@@U5*@@@@GG/@__;LB
)@@G@@C@C@@[EI@@@A)HH[N#[#@[@[@@@@@@C/@@@[8LK@HIG_)@@[O")@@[/K@@VJ(@@@@GH@^@@@LC
)@@G@@C@E@@W[#)@^]N[K@G0EJ@@@A)HR[N#[#[#[#[#@@@@G_0@@#O"@@@#O.@@@#[@&@@WC@()@@LD
)@@G@@O[)@F4O[)@#_R[)@#&[@@@#_G@@@#_EK@@@A)H-[N@K0K0^G^G@^@@/K@@U5*@@@@MG.)__'LE
)@@G@@C[%@@@R])@G\[[@@^#G.@@@[G[@@#LC[@@#'8L@@G_EL@@@A)H:[N#@^G[#[#@@@@@;L)@@[LF
)@@G@@G.)__"G.@@@[G@@@#&[]@@^^C"@@@[[[)@#';[)@@<C[&@@WR[)@F"EM@@@A)H5[F#[#[#[#LG
)@@G@@@@K0@@@@@@@@[@@@G\[[)@[^R]@@@KR[@@@QC_)@@[G])@F6C])@G\G[@@F4[[@@G\EN@@@ALH
)@@G@@)H"[F#[#[#[#[#@K0@@@@@@@C@*@@@[@E@@WR])@G0C@C@@@A]K@G0O]K@F4O]K@G\R]K@^^LI
)@@G@@[#)@#;EO@@@A)IB[N#@[@@K@@@@@@@C/@@]V/K@@U5*@@@@GG/@__"C@^@@[/K@@IR(@@@@GLJ
)@@G@@G/@__.C@^@@[[@)@FSEP@@@A)IL[E^G^G^G@K0K0@@@@@@@@[@@@^^G@@@^^C/@@@[[@%@@WLK
)@@G@@C@)@FS[@@@FS"C@@F*C@@@@H"OC@@@EQ@@@A)IU[N#[#[#@[@K0^G@"^)@F%E@)@@I"^)@F(LL
)@@G@@8L@@H"G_)@@]O"@@@]O.@@@][@)@^@"@)@FSC@)@^@ER@@@A)I=[N@^[#@K^G[#[#@G@@@F4LM
)@@G@@G@@@#&;@@@@<C@@@#:/K@@JL(@D@@[R]K@G?/K@@V-*@@@@I/G)@I$ES@@@A)I,[N#@K@@K0LN
)@@G@@@@@@@@C@=@@@R[@@F;[[G@@ZC[D@@[[@?@@YG/)@@]C@%@@#/K@@W](@E@@#R])@F"ET@@@ALO
)@@G@@)^>@S@)I8@'^@K[@@@^^K@J#N8W@@-^^K@J[N8T@@[^^K@J]N8U@@#[@?@@)______ORES  LP
)@@G@@BANKSCEU@@@A)I_[F]X#[@K^[#[#[#[#@@@@C@@@^A@A=@F1@@@@^A@@@@^ @@@@J#@@@@J]LQ
)@@G@@@@@@J[@@@@^>/,0@@@EV@@@A)JC[M^G4G@K^G^G4G@R]@@GX[@@@@@C@@@^ /K@@JL1@@@@GLR
)@@G@@*@@@@GH@@@^ C@@@@@[@@@@@G@@@@@EW@@@A)JM[MK0[@K0K0^G^G@T@)@#:G@)@#:C/)@@[LS
)@@G@@[@@@#1C@@@#2/K@@RA(@@@@GG@A@@[R[)@GYC@C@@[EX@@@A)JW[EK0K0K0^@K^G@@@@@@@@LT
)@@G@@C@@@^B/K@@W0*@@@@G/G@@J=H@@@@@G@)@#1C@)@F6[@@@^BG@@@@IEY@@@A)J>[N#[#@[@KLU
)@@G@@0^G^G@C@)@^B]@@@^CH@@@@@C@@@#18L@@J( @^)@[[@@@[^Q[@@@IR[@@FXH@@@#1EZ@@@ALV
)@@G@@)J\[F#@K^[#[#[#[#[#@@@@@[[)@#"C[)@F?[[@@#.C[@@F:^@K@#/N8K@M-/K@@M>(@A@@[LW
)@@G@@[@)@#7FA@@@A)J8[MK0K0@^G^G^G@@R]@@F$R]K@G=R])@G$C_0@@[W"@@@#;Q@@@=G"@__"LX
)@@G@@ @@@#_[]@@#'C]A@@[FB@@@A)K][F#@K0^G^G^G^G@@@@@@@C/)@@[O[@@F6O[@@#_R[@@#1LY
)@@G@@G@@@#_C/@__"[#0@#;[]@@[^Q]@@G=FC@@@A)KF[M@K0K0K0@@@@@@*@@@@GG/@__;C@E@@[LZ
)@@G@@A[@@G1[@)@G0[@@@G\ @@@@I*@@@@KH[^@@[C[D@@@FD@@@A)KP[N@^G[@^G^G^G^@/=@@VJMA
)@@G@@C@@@G0[#)@^]N[K@G\C_)@@[/K@@V]*@@@@GH@@@F&C@C@@[/K@@K:FE@@@A)KZ[MK[#@^G^MB
)@@G@@G@@@@@O"K@@#O")@@#[@)@#_G@)@#_C/)@@[[@A@@[R[)@G1C@C)@@8LK@KWG_)@@[FF@@@AMC
)@@G@@)K([EK^G[#[#[#@K0@@@@@@@H@)@#:[@?@@XC@)@#_G@@@F4G@@@#&;@@@@<C@@@#:8L@@K^MD
)@@G@@G_0@@#FG@@@A)K2[F@^[#[#@K0K0@@@@@@@@;@@@@<G@)@F_G@)@#1C/)@@[[@@@^DC@@@#_ME
)@@G@@/K@@W<*@@@@I/G)@K5FH@@@A)K;[F#[#@K0^[#[#[#@@@@@@[@@@@@G@@@#-C@@@#;/K@@U5MF
)@@G@@*@@@@GH@@@#'G@@@@KT[@@^DC[@@^DFI@@@A)L^[F#[#[#@K0[#[#@@@@@@@[[)@G0[@)@G\MG
)@@G@@[[)@[^C_0@@[G[)@^DC.)__"[[@@^EG[@@#:C[@@#1FJ@@@A)LH[N#[#[#[#[#@[@@C_)@@[MH
)@@G@@/K@@U5*@@@@GG/@__'C@A@@[R[)@G1A[@@G1O[@@F6R[@@@@[#0@#;FK@@@A)LR[F#[#[#[#MI
)@@G@@[#[#[#[#@@@@C/@@@]A]K@G3A]@@G2O]K@F4R]K@@@O]@@F4R]@@@@[#)@^[N[K@G0FL@@@AMJ
)@@G@@)L)[N#@K[@^G^G^G@@C@%@@[]@@@^FT@@@#:H@@@^[C/@@@[/K@@U5*@@@@G/C@@L>H@E@@@MK
)@@G@@R])@G2FM@@@A)L%[N#[#@[@[#[#@@@R[)@^E[@K@FS"O^@@[C/@@]V/K@@L3(@@@@GG/@__.ML
)@@G@@C@^@@@R[@@G3[@)@FSFN@@@A)L4[N#[#[#@^G^G[@@G/)@@[8LK@LSG_)@@[[@)@@@G@)@@@MM
)@@G@@C/)@@][@A@@[C@@@FSO[)@F_O[)@^FFO@@@A)L"[N#@K0K0^[#@K@@C[*@@W/K@@M-(@C@@VMN
)@@G@@R]@@G!8L@@LHG_0@@[[[@@^EG[@@^EC.@@@[[@)@@@FP@@@A)MC[N#@K[#@K0^G^G@[#0@#'MO
)@@G@@[[)@G\[[)@[^R]K@G\C_0@@[G[)@#_C.)__"/K@@V?*@@@@MH[)@#_FQ@@@A)MM[MK0K0K0@MP
)@@G@@K@@@@@G_)@@[O")@@[/K@@MY(@@@@GH@E@@WC@D@@@[#)@#;N[K@G\R])@G*C_)@@[FR@@@AMQ
)@@G@@)MW[N@K@K^G[@K^@@@N8K@RA/K@@RA/K@@V7*@^@@[R[@@G(8L@@MLG_0@@[O"K@@[/K@@V?MR
)@@G@@8LK@MPFS@@@A)M&[F#[#[#[#[#@K0K0@@@@@C.)@@[][@@^GH[@@#1C.@@@[[@)@#"C@)@F&MS
)@@G@@[@@@#.C@@@F!^@K@#/FT@@@A)M\[N#[#[#@[#@K0@@G"@__"H[@@F_H.@@@[[]@@^[W"@@@DMT
)@@G@@;Q@@@=C]A@@[R[)@G( @@@#_[[)@#;FU@@@A)M9[E^G^G^G^G[#[#@@@@@@@R])@F4G@)@#_MU
)@@G@@C/)__"G@@@#)C@@@#;[#0@^H][@@G\[]@@[^C_0@@[FV@@@A)N][MK0@K0[#[#@@@@[@)@G1MV
)@@G@@[@@@G0 @@@@G(@@@@KH[@@F&C[E@@[C/@@@[O]K@@GR]K@F_O])@@GFW@@@A)NG[N#[#@K0@MW
)@@G@@[#@@@@R[@@G5C/)@@[ @@@@G(@@@@IG/)__;C@*@@[R]@@G4C/@@@[A])@G5A]K@G4FX@@@AMX
)@@G@@)NQ[U@@@@@@@ @@@@I1@@@@K*@@@@KH[^@@ C.@@@]C/)@@[)@@@@I @@@@I(@@@@KG.@__;MY
)@@G@@C[^@@]FY@@@A)N-[M^@K0K0K0K0K@@C@^@@@/=@@V]C@@@G0[#)@^IN[K@G1R[)@G\C_)@@[MZ
)@@G@@/=K@U5)@@@@I;^@@@=FZ@@@A)N:[M^@^@K0K0K0@@@[@@@^I[@@@#_G@@@#_C/@@@[8LK@N$NA
)@@G@@G_)@@[O.)@@[/K@@N'(@@@@GH@A@@[GA@@@A)N5[F#[#[#@[#[#[#@@@@@@@O])@#;R])@#)NB
)@@G@@G@@@#_C/@__"[@(@@[C@=@@@O]K@F_O]K@^IR]K@^GGB@@@A)N"[N#@^G@^G[#@@@@[@)@G6NC
)@@G@@[@@@[ R]@@G\C_)@@[ @@@@I(@@@@KH[@@F&C[E@@^C/)@@[O])@F4GC@@@A)OC[N#[#[@@KND
)@@G@@@K@@@@8LK@OCG_)@@[O"@@@[/K@@OV(@@@@GH@E@@#C@C@@[/=@@V]C@@@G6[#)@^JGD@@@ANE
)@@G@@)OM[EK0K0K0K0K0K0@@@@@@@[@&@@[C@%@@#O[)@F_O[)@^JR[)@^G[@@@^J[@@@#_G@@@#_NF
)@@G@@C/@@@[GE@@@A)OV[N#[#[#[#[#@^@@G/@__'C@^@@B/K@@O?1@@@@G*@@@@GH@@@^[C@@@^HNG
)@@G@@O[@@F4O[@@#;R[@@#)GF@@@A)O>[MK[#[#@K^G[#@@G@@@#&;@@@@<C@@@#:8L@@M/G_0@@[NH
)@@G@@[@@@#;G@@@#;C/@@@D/K@@U5*@@@@GGG@@@A)O\[F#[#@^G^G^G^@@@@@@@@*@@@@I/G)@O9NI
)@@G@@H@)@#:G@@@F_G@@@^GC/@@@[[@?@@XC@)@#_G@@@F4GH@@@A)O8[F@^G[#[#[#[#[#@@@@@@NJ
)@@G@@R]K@G![[@@G1[@)@G0[@@@G\G[@@#_C.@__"G@)@#:C/)__"/K@@W<GI@@@A)P[[EK^G[#[#NK
)@@G@@[#[#[#@@@@@@[@)@^DC@)@#_[@@@@@G@@@#:C@@@^G[@D@@VC@@@#_/K@@P *@D@@WGJ@@@ANL
)@@G@@)PE[E^G^G^G[#[#[#@@@@@@@[@@@G5T@@@#:H@@@^[C/@@@[[#0@^[[@)@G4N[@@G0C_0@@[NM
)@@G@@G/)__"GK@@@A)PN[EK0K0K0K0K0K0K0K0@@@O]@@F_O]@@^FR]@@@@]@@@^FH@@@^HC@@@G5NN
)@@G@@[#)@^HN[K@G0C_)@@[GL@@@A)PW[N#@K0K0K0^[#@@G_)@@[ @E@@[R])@G7/K@@P>*@@@@GNO
)@@G@@H@@@^[C@@@^HA]@@G7[@*@@[C@)@@#GM@@@A)P&[N@^@K0^G^G[#@@N[K@G4C_0@@[[#@@^KNP
)@@G@@N[@@G4C_@@@[[@@@#;C/@@@[8L@@PIG_0@@[8LK@PPGN@@@A)P0[F#[#[#[#[#[#@K0K0@@@NQ
)@@G@@N[)@G4R]K@G\C_)@@[R[@@G0A[)@G0O[)@F4O[)@#;R[)@#)[#0@^HGO@@@A)P9[##@[@[@@NR
)@@G@@)^*@K@2X,A6,(2I10,8L)@P9G_)@@[O"K@@[/K@@Q[(@@@@GH@D@@[C@^@@@[#)@^IGP@@@ANS
)@@G@@)^%@C@)Q[[##[#[#@K0K0K0@C@C@@#[#)@^JN[)@G4R])@G\C_)@@[O]@@F4O]@@#;R]@@#)NT
)@@G@@A8)   GQ@@@A)QD[M^@^@K0K0K0@@@H@@@^IT@@@#:H@@@^JC/@@@[8L)@QBG_)@@[O")@@[NU
)@@G@@/K@@QJ(@@@@GH@E@@[GR@@@A)QN[N#[#[#[#@K0@K@/K@@Q)(@@@@GG/@__.C@A@@ [@)@FSNV
)@@G@@C@&@@AO[)@F4O[)@#;R[)@#)]@@@^FGS@@@A)QX[E^G^G^G^G^G@@@@@@@@@C/)@@D[@^@@[NW
)@@G@@C@@@FSO[@@F_O[@@^FR[@@@@[@K@FS"OA@@AC/@@]VGT@@@A)Q&[N#[#@K[@K0^@@@C[D@@WNX
)@@G@@/K@@RA(@D@@VR]K@G!8L@@P!G_@@@[8LK@P0G_0@@[[@)@#;G@)@#;GU@@@A)Q0[F#@^G^G^NY
)@@G@@G^G[#@@@@@@@R])@G*C_)@@[[#0@#'[[@@G1N[@@G1R]@@G\C_0@@[G.@__"[[@@^LGV@@@ANZ
)@@G@@)Q9[N#[#@[@[@K@@@@/K@@WS8LK@Q'G_)@@[O")@@[/K@@R#(@@@@GH@E@@WC@C@@[[#)@#;OA
)@@G@@N[K@G1GW@@@A)R#[E^[#[@K*K0K0K%@@@@@@/,0@@@@D/@F1@@@@FY/,0@@@/K@@R7(@@@#\OB
)@@G@@8L@@Q6G_0@@[O"@@@[GX@@@A)RG@3#[#@K0K0K0@@@)^:@S@,I6,00LSCR= (007HO@@K@#2OC
)@@G@@@@K@#0@@K@#&@@K@@@@D.@F1@@[@^:GY@@@A)^,[C@@@@@@@@@@[C@@@@@@@)     F= ,I6OD
)@@G@@   MBU6,009HCR= ,IH   KSI6,009BUF= ,9H   LGZ@@@A)RM[F]>#[@K*K0K0K%K0K0@@OE
)@@G@@@EB@F1@@[@^:/,0@@@@EA@F1@@@@FY/,0@@@/K@@R)(@@@#1'^@@@@HA@@@A)RV[EK0K0K0KOF
)@@G@@(K0K0K0K0@@@R[)@G@H@@@#&C@@@#7 @@@#''^@@@@@@K@^B@@K@^C@@K@#1@@K@@@HB@@@AOG
)@@G@@)R=[E^G^G[@K*K0K0@@@@@@@@EO@F1@@@@FU/,0@@@/K@@R5(@A@@[[@@@#'G@@@#'C/@@@[OH
)@@G@@[@@@[^HC@@@A)R![N](#[#[#@[]=K@8L@@R>O.)@@['^@@@@@@Q@@[@@Q@@[@@Q@@[@@K@#'OI
)@@G@@@EP@F1@@[@^7/,0@@@HD@@@A)^7@)@@@@@@@)R7@%K0K0^@@/C)@R"D@)@@@[@@@@ G@@@@ OJ
)@@G@@C/@@@[15)   15.5,A,I12,E(I5,2XHE@@@A)R/@%K^G^G@@)^;@K@)S[@F#@@@@@@[@)@#GOK
)@@G@@______WRITE G/)@@[H@)@#&C@)@#2/K@@SX*@@@@IHF@@@A)S][F#@K^COG^G^G^[#@@@@@OL
)@@G@@@@@@#$@@@@SD@@@@#G@@@@^;@@@@FT/,0@@@^^K@SDN8O@@[R[@@G)HG@@@A)SF@<#[#[#@@OM
)@@G@@)^.@K@)SJ@N#[#@@@@(@@@#1[@@@#G______WRITE G/@@@[H@@@#1C@@@^B@E<@F1HH@@@AON
)@@G@@)SL[F@K0K0^[] #[#[#@@@@@@@@@#G@@@@^.@@@@FT/,0@@@^^K@SUN8T@@[O]K@F_R]K@#1OO
)@@G@@/K@@SXHI@@@A)SU[F@K0K0K0K0K0K0YOG@@@C@)@#,[@AJ_"C@@@@ R[)@#*R]@@#%R])@#(OP
)@@G@@@E&@F1@@@@#$@@@@SUHJ@@@A)S<[N9K0YL#@K[#@@@(@@@@GH@@@#4C/@@@[/K@@TB(@@@@MOQ
)@@G@@H[)@#3C.)@@[[[CJ_"C[@@#![@%J_"HK@@@A)S![F@K^[#[]-#[#[](#@@@@@@[@^_/,0@@@OR
)@@G@@@E1@F1@@@@FY/,0@@@@E0@F1/K@@W8N@0@S0/K@@TXHL@@@A)S6@F#@@@@@@)^_[@@@@@@@@OS
)@@G@@HE CONE OF TNLY ONOR.  OY1 ERRLASSIF*****C(054H0@E2@F1HM@@@A) B[S@@@@@@@OT
)@@G@@ USED.CAN BEREDUC R QUADEDUC OT,LINRUADTESTEST,Q51HLINORDS 0TROL WHN@@@AOU
)@@G@@) M@C@)S7[#]=[@K*K0K0@@@@E7@F1@@@@F,/,0@@@/K@@ "[@@@@@G@@@@@C/@@@['^@@@@OV
)@@G@@)     HO@@@A)S_@V](#[#@@) N@0@@@@@@@EN LINOR. WHY1 ERRLASSIF*****C(124H0OW
)@@G@@@E8@F1@@[@ N/,0@@@HP@@@A) T[S@@@@@@@TROL WHE CONE OF TED, ONARE USREDUC OX
)@@G@@R QUADEDUC OT,LINRUADTESTEST,QHQ@@@A) =[S@@@@@@@T ALSONS MUSQUATIOE OR EOY
)@@G@@DSQUARX,039HN, /24,LACHE,ALLOCEMPROBORDS MHR@@@A) \@K@)T]@;]=[@K*K0@@@@@OZ
)@@G@@@@@@F,/,0@@@/K@@AF[@@@@@G@@@@@C/@@@['^@@@@ED.)   BE USHS@@@A)TD@<#[](#[#PA
)@@G@@@@@@@@) 1@)@@@@@@@Y1 ERRLASSIF*****C(122H0@E"@F1@@[@ 1/,0@@@@E.@F1HT@@@APB
)@@G@@) 5[S@@@@@@@ADREDU OR QUNREDUCEST,LI,QUADTINTESTORDS LTROL WHE CONE OF TPC
)@@G@@OR. ONHU@@@A)A@[S@@@@@@@SCORESMPROB,LOC,ME067HAL,/24X,LACHENTIONS,N EQUAPD
)@@G@@ED WHE BE USC MUSTHV@@@A)AF[@@@@@@@@)TH@F]=@@@@@'^@@@@USED.)RE IS  DSQUAPE
)@@G@@UP) ORS(AGROTSCOREP),SOR(AGROUHW@@@A)TI[E[@K*K0K0K%K0@@@@@@@@@[@AN/,0@@@PF
)@@G@@@F#@F1@@@@FY/,0@@@/K@@S%[@@@@@G@@@@@C/@@@[HX@@@A)TR@F#@@@@@@)AN[@@@@@@@@PG
)@@G@@E CONT OF THLY ONEOR. ONY1 ERRLASSIF*****C(089H0@F^@F1HY@@@A)AV[@@@@@@@@PH
)@@G@@)TS@F]=@@@@@'^@@@@SED.) N BE ULOC CA OR ALEMPROBCHEN,MRDS LAROL WOHZ@@@API
)@@G@@)TT[E[@K*K0K0K%K0@@@@@@@@@[@A</,0@@@@FD@F1@@@@FY/,0@@@/K@@B[[@@@@@G@@@@@PJ
)@@G@@C/@@@[IA@@@A)T+@F#@@@@@@)A<[@@@@@@@@TROL WHE CONE OF TOR. ONY1 ERRLASSIFPK
)@@G@@*****C(118H0@FE@F1IB@@@A)A:[S@@@@@@@PALLOCR GROUAYES OWHEN B USED UST BEPL
)@@G@@PROB MOR MEMALLOC ACHEN,ORDS LIC@@@A)A6@K@)T<@;]=[@K*K0@@@@@@@@@FY/,0@@@PM
)@@G@@/K@@S,[@@@@@G@@@@@C/@@@['^@@@@ED.)   IS USID@@@A)T%@<#[](#[#@@@@@@)A8@)@PN
)@@G@@@@@@@@Y1 ERRLASSIF*****C(112H0@FK@F1@@[@A8/,0@@@@FJ@F1IE@@@A)A/[S@@@@@@@PO
)@@G@@N LACHRD WHEPUT CATHE INED ON  BE USD MUSTOL WOR CONTROUPVAROR. GRIF@@@APP
)@@G@@)BB@*@@@@@@@)T,@<]=@@@@@[@@@@@G@@@@@C/@@@['^@@@@RD.)  DEL CAN A MOUSED OPQ
)@@G@@EN IS IG@@@A)T2@;@K*K0K0K%K0K0@@@@@@)BG@C@(110H0@FQ@F1@@[@BG/,0@@@@FP@F1PR
)@@G@@@@@@FY/,0@@@/K@@BFIH@@@A)BH[S@@@@@@@CONTROSSPAK  NOCLAOR THESSPAK HE CLAPS
)@@G@@THER TOR. EIY1 ERRLASSIF*****CII@@@A)BS[@@@@@@@@)T9@F]=@@@@@'^@@@@.)    PT
)@@G@@L CARDT MODEE FIRS ON THQUIRED IS REL WORDIJ@@@A)T'[E[@K*K0K0K%K0@@@@@@@PU
)@@G@@@@[@B)/,0@@@@FV@F1@@@@FY/,0@@@/K@@B;[@@@@@G@@@@@C/@@@[IK@@@A)U#@F#@@@@@@PV
)@@G@@)B)[@@@@@@@@SSPAK  NOCLAENEVEROR. WHY1 ERRLASSIF*****C(118H0@FW@F1IL@@@APW
)@@G@@)B*[S@@@@@@@ING MOFOLLOWN THE T BE OAK MUSCLASSP OR NOASSPAKHER CLD, EITPX
)@@G@@IS USEIM@@@A)B3@K@)U^@;]=[@K*K0@@@@@@@@@FY/,0@@@/K@@B;[@@@@@G@@@@@C/@@@[PY
)@@G@@'^@@@@RD.)  DEL CAIN@@@A)UF@<#[](#[#@@@@@@)B5@)@@@@@@@Y1 ERRLASSIF*****CPZ
)@@G@@(096H0@F+@F1@@[@B5/,0@@@@F-@F1IO@@@A)B9[S@@@@@@@NTROL ITH COUSED WAN BE QA
)@@G@@ OBS CAND/ORMEANS ETERS  PARAMLY THEOR. ONIP@@@A)C^@K@)UJ@;]=[@K*K0@@@@@QB
)@@G@@@@@@FY/,0@@@/K@@CT[@@@@@G@@@@@C/@@@['^@@@@RAPH.)WORD GIQ@@@A)UQ@<#[](#[#QC
)@@G@@@@@@@@)CA@)@@@@@@@Y1 ERRLASSIF*****C(057H0@F*@F1@@[@CA/,0@@@@F$@F1IR@@@AQD
)@@G@@)CE@8@@@@@@@)UU@N]=@@@@@C/@@@['^@@@@B.)   MEMPRO WITH E USEDNNOT BYES CAQE
)@@G@@OR. BAIS@@@A)UW[E^[]-#[#[](#[#@@@@@@@F,@F1@@[@CL/,0@@@@F!@F1@@@@FY/,0@@@QF
)@@G@@/K@@C\[@@@@@G@@@@@IT@@@A)CL[S@@@@@@@T,SCORTAPRINSED DAE IS USSTABLEN CLAQG
)@@G@@OR. WHY1 ERRLASSIF*****C(106H0IU@@@A)CW[@@@@@@@@)U>@F]=@@@@@'^@@@@ED.)  QH
)@@G@@ BE UST ALSOOB MUS MEMPRHEN OROC,LACES,ALLIV@@@A)U&[E[@K*K0K0K%K0@@@@@@@QI
)@@G@@@@[@C=/,0@@@@F3@F1@@@@FY/,0@@@/K@@D][@@@@@G@@@@@C/@@@[IW@@@A)U\@F#@@@@@@QJ
)@@G@@)C=[@@@@@@@@T BE ULE MUSASSTABOR. CLY1 ERRLASSIF*****C(086H0@F4@F1IX@@@AQK
)@@G@@)C?[@@@@@@@@)U0@F]=@@@@@'^@@@@.)    METERST PARAWITHOU USED RES ISEN SCOQL
)@@G@@SED WHIY@@@A)U1[E[@K*K0K0K%K0@@@@@@@@@[@C4/,0@@@@F9@F1@@@@FY/,0@@@/K@@FCQM
)@@G@@[@@@@@G@@@@@C/@@@[IZ@@@A)U'@V#[#[#@@)C4@0@@@@@@@E FORMOR. THY1 ERRLASSIFQN
)@@G@@*****C(041H0@@K@#"@@K@#.@F'@F1JA@@@A)C'@8@@@@@@@)U.@N]=@@@@@C/@@@['^@@@@QO
)@@G@@D.)    IS BAMETERSH PARAA6,019THE ,2AT OF JB@@@A)U_[E^G^E^G^G^E=G^G@@@@@QP
)@@G@@@G]@F1@@[@D[/,0@@@@G[@F1@@@@FY/,0@@@/K@K#/[@@@@@G@@@@@JC@@@A)VC@N#[#@@@@QQ
)@@G@@)D[@8@@@@@@@ MUST OUPIDSOR. GRY1 ERRLASSIF*****C(063H0@@K@#"@@K@#.JD@@@AQR
)@@G@@)DC@0@@@@@@@)VE@V]=@@@@@G@@@@@C/@@@['^@@@@)     - ,2A6 LESS ERS ORHARACTQS
)@@G@@BE 6 CJE@@@A)VH[EK0K*K0K0K%K0K0K0@@@R[@@#L@GE@F1@@[@DI/,0@@@@GD@F1@@@@FYQT
)@@G@@/,0@@@/K@K#/[@@@@@JF@@@A)VQ@3#[#@K:K0K0@@@)DI@S@LASSIF*****C(033H0@@K@#"QU
)@@G@@@@K@#.'^K@@@C8^@@@O[@@F4O[@@#;JG@@@A)DL[S@@@@@@@TROL WHE CONE IN T TWI CQV
)@@G@@CIFIEDAS SPE042H W- ,A6,OUPID OR. GRY1 ERRJH@@@A)DW@K@)VW@;]=[#[]-#@@@@@QW
)@@G@@@@@@FY/,0@@@/K@K#/[@@@@@G@@@@@C/@@@['^@@@@A6)   ORD ,2JI@@@A)V<@<#[](#[#QX
)@@G@@@@@@@@)DY@)@@@@@@@Y1 ERRLASSIF*****C(093H0@GN@F1@@[@DY/,0@@@@GM@F1JJ@@@AQY
)@@G@@)D+[S@@@@@@@UST EQWORD MNTROL IOR COTHE PRED IN PECIFI P'S SOF ALLE SUM QZ
)@@G@@OR. THJK@@@A)D!@K@)V$@;]=[@K*K0@@@@@@@@@FY/,0@@@/K@@I$[@@@@@G@@@@@C/@@@[RA
)@@G@@'^@@@@E.)   UAL ONJL@@@A)V,@<#[](#[#@@@@@@)D\@)@@@@@@@Y1 ERRLASSIF*****CRB
)@@G@@(088H0@GT@F1@@[@D\/,0@@@@GS@F1JM@@@A)D3[S@@@@@@@ND PRITRIX ACOSTMA BOTH RC
)@@G@@IED INSPECIFST BE IDS MU GROUPE SAMEOR. THJN@@@A)D"@C@)V2[#]=[@K*K0K0@@@RD
)@@G@@@GY@F1@@@@FY/,0@@@/K@@RA[@@@@@G@@@@@C/@@@['^@@@@OR.)  JO@@@A)V'@V](#[#@@RE
)@@G@@)D_@0@@@@@@@LY ONEOR. ONY1 ERRLASSIF*****C(085H0@GZ@F1@@[@D_/,0@@@JP@@@ARF
)@@G@@)E [K@@@@@@@@@@@@@)      USED.CAN BEATRIX  COSTMSTS ORRDS COROL WOE CONTRG
)@@G@@ OF THJQ@@@A)V.[F]=[@K*K0K0K%@@@@@@@/,0@@@@G=@F1@@@@FY/,0@@@/K@@M>[@@@@@RH
)@@G@@G@@@@@C/@@@['^@@@@JR@@@A)WA@N#[#@@@@)EJ@8@@@@@@@NC MUSNDISFUOR.   Y1 ERRRI
)@@G@@LASSIF*****C(071H0@G>@F1@@[@EJJS@@@A)EQ@0@@@@@@@)WC@V]=@@@@@G@@@@@C/@@@[RJ
)@@G@@'^@@@@SED.) S IS UKSCOREEN BANSED WHT BE UJT@@@A)WF[]K^E^G^G^E=G^G@@@@@@RK
)@@G@@@@@@@@@G:@F1@@[@EW/,0@@@@G%@F1@@@@FY/,0@@@/K@@JL[@@@@@JU@@@A)EW[S@@@@@@@RL
)@@G@@OUP, SAN NGRESS THT BE LNC MUSNDISFUOR.   Y1 ERRLASSIF*****C(088H0JV@@@ARM
)@@G@@)E$@*@@@@@@@)WN@<]=@@@@@[@@@@@G@@@@@C/@@@['^@@@@RD.)  PUT CATHE INED ON RN
)@@G@@PECIFIJW@@@A)WR@;@K*K0K0K%K0K0@@@@@@)E?@C@(123H0@G1@F1@@[@E?/,0@@@@G0@F1RO
)@@G@@@@@@FY/,0@@@/K@@BQJX@@@A)E![S@@@@@@@TS MUSIN COSIFIED S SPECROUPIDT OF GRP
)@@G@@THE SEOR.   Y1 ERRLASSIF*****CJY@@@A)E8[K@@@@@@@@@@@@@R.)   N PRIOFIED IRQ
)@@G@@ SPECIOUPIDS OF GRHE SETT OF T SUBSET BE AJZ@@@A)WY[F]=[@K*K0K0K%@@@@@@@RR
)@@G@@/,0@@@@G6@F1@@@@FY/,0@@@/K@@RA[@@@@@G@@@@@C/@@@['^@@@@KA@@@A)W$@<#[#[#[#RS
)@@G@@@@@@@@)F]@)@@@@@@@Y1 ERRLASSIF*****C(061H0@@K@#"@@K@#.@G7@F1@@[@F]KB@@@ART
)@@G@@)FA[S@@@@@@@XCEED NNOT E51H CA,2A6,0ED IN PECIFIPIDS SF GROUMBER OTHE NURU
)@@G@@OR.   KC@@@A)FL@8@@@@@@@)W:@N]=@@@@@C/@@@['^@@@@)      CARD. INPUTON THERV
)@@G@@IFIED S SPECNGROUPKD@@@A)W![M^G[@K^G^G^F@@H8)@@[/K@@@@!^)@F\@G"@F1/K@@W4RW
)@@G@@N@0@W3C8)@@B/K@K#/[@@@@@G@@@@@KE@@@A)W7[F#[#[#[#[#[#[#[#[#@@R@)@H#R@K@H]RX
)@@G@@9\)@H@9\@@G"9,)@G/9,@@G'9!)@G8R]0@F2[^)@F\KF@@@A)X@[F#[#[#[#[#[#[#[#[#@@RY
)@@G@@N[@@HGR])@HFR]K@HER]@@HDR[0@HCR[)@HBR[K@HAR[@@H R@0@H^KG@@@A)XD@V#[#[#@@RZ
)@@G@@)F\@C@)XG@N#[]4@@@)F1@C@S32MDL/K@@@@/K@KF\@@F@@@*4@KF\N[)@HIN[K@HHKH@@@ASA
)@@G@@)F2@C@)XI@'K0K0K0K0K0K0@@@@@@@9:@@G"9%)@G/9%@@G'9()@G8[^@@F\AA0@F2C8@@@CSB
)@@G@@@G"@@]KI@@@A)XP[F#[#[#[#[#[#[#[#[#@@A]@@HDA[0@HCA[)@HBA[K@HAA[@@H A@0@H^SC
)@@G@@A@)@H#A@K@H]9:)@H@KJ@@@A)XY[F#[#[#[#[#@K0^@@@@@@[^@@^XC8FK@[[@K@G,C@VK@@SD
)@@G@@^[)@HI^[K@HH^[@@HGA])@HFA]K@HEKK@@@A)X$[MK[#[@^[@K^@@@[^@@^N[^@@J?[^@@J)SE
)@@G@@[^@@RVC8FK@^[^@@^6[@@@F4C8FK@#[^@@^YC8FK@]KL@@@A)X1[N@K^@K^[@K^[@@[^@@W,SF
)@@G@@[^@@VH[^@@V5[^@@WP[^@@W@[^@@WEC8FK@ [^@@RI[^@@^E[^@@ AKM@@@A)X;[F@K^[@K^SG
)@@G@@[@K^@@@@@@@@[^@@V_[^@@UW[^@@UX[^@@WF[^@@WQ[^@@W)[^@@W-[^@@U_[^@@W!KN@@@ASH
)@@G@@)Y^[F@K^[@K^[@K^@@@@@@@@[^@@V@[^@@VG[^@@T0[^@@VY[^@@U*[^@@U2[^@@U3[^@@V4SI
)@@G@@[^@@ULKO@@@A)YH[F@K^[@K^[@K^@@@@@@@@[^@@R'[^@@UM[^@@S'[^@@T^[^@@U$[^@@TJSJ
)@@G@@[^@@TK[^@@TU[^@@TVKP@@@A)YQ[F@K^[@K^[@K^@@@@@@@@[^@@D9[^@@T>[^@@T&[^@@JCSK
)@@G@@[^@@T1[^@@VZ[^@@V([^@@V%[^@@UBKQ@@@A)YZ[F@K^[@K^[@K^@@@@@@@@[^@@^&[^@@^$SL
)@@G@@[^@@S9[^@@^/[^@@^.[^@@T [^@@B>[^@@B&[^@@D8KR@@@A)Y*[#@K^[@K^[@K@@@)FT@C@SM
)@@G@@@@@@@^/K@@@@[^@@E2[^@@E3[^@@#F[^@@JD[^@@T;[^@@T/[^@@UAKS@@@A)FU[S@@@@@@@SN
)@@G@@AGROUPTGROUPPUNCH PRINT MEANS OBS   @@@@@]@@[@@@@@@@@@@@@@@T@@@@@[KT@@@ASO
)@@G@@)F>[K@@@@@@@@@@@@@@@@@@#COSTS TRIX  COSTMAHI!Z2$KG@@@@JPB:-M@@#@@@      SP
)@@G@@PRIOR KU@@@A@@@@@@(#[#@@)D_@0@@@@@@@LY ONEOR. ONY1 ERRLASSIF*****C(085H0SQ
)@@G@@@GZ@F1@@[@D_/,0@@@JP@@@A@@^@@^@@C@@I@@=@@[@@*@@]@@^@HJ@C@@Y0@@@@@]@@@@@[SR
)@@G@@NCOD$       S1IODR      S1STFT      S1GVAL      S1ENDC      S1ENST      SS
)@@G@@S1UFOT      S1CKBN      S1PCHD      NIO2$       NPRT$       NIO1$       ST
)@@G@@NERR4$      NERR3$      S32MDL      @@[@@@@@@@XIBLANK$      ^@@@C@@]@@@@SU
)@@G@@S32         ]@@@C@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SV
)@@G@@)@@[N@K@K^@@@@@@@@O9@@@@P9@@@[Q[FK@]&9@@@[[^K@@D[^K@@RC8VK@@N@:K@[[])@@,SW
)@@G@@A[@@@!AA@@@@)@E[U@[@@@@@&9@__"[@:K@]H@)@[[C@:K@#/K@@@=9A=)@@N@K@@JH@;K@]SX
)@@G@@G@;K@#C80@@[ @@@@QAB@@@@)@P[U@@K@@@@G8)@@[G@)@[[C@:K@]/K@@@*9]=)@@N@K@@JSY
)@@G@@H@;K@]C@;K@#O9@@@@P9@@@[Q[FK@#AC@@@@)@)[U[@@K@K@R[@@@![]:K@^G')@@[/K@@@%SZ
)@@G@@[@:K@]C@:K@#[]:K@^/K@@@%[]:K@^G')@@][@:K@#AD@@@@)@:@N@@@@@@@@@@@@@@@@@@@TA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@AC])@@,AE@@@@@@@@@@@@@@@@TB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TC
)@@G@@@@^@@]@@A@@@@@A@@[@@E@@@@@@@@@@@@@@\UR3SRH      @@[@@@@@@@@@E=@@]<V@@@@@TD
)@@G@@-@@@@[-@@@@[I@@AUCET[@]>V@@@@@-@@@@#-@@@@[F@@@@H-@@@@]O@@@@@B[@@@@]@@ASGTE
)@@G@@#[@@@]C )@@@C[@@@@&@G)A0)@B@S@)@@@3#^GK1#[#@@@@@[[@@@@C[@@@@[@)@@^C@)@@BTF
)@@G@@[@@@@#C@@@@C______)@@@@@)@@@@@AA@@@@)@A[MK1#^[@^@^@@@@/K@@@"[[)@@@C.)@@[TG
)@@G@@/K@@@K*@@@@M/H)@@H/K@@@N*@@@@@[[)@@[C[:K@[AB@@@@)@K[EK1#[#^GK-#^G@@@@@@@TH
)@@G@@@@@@@K@@@@@E/,0@@@[@@@@KH@@@@@C/@@@<[@@@@@G@@@@@C/@@@[AC@@@@)@T[F#^G^GK0TI
)@@G@@K1#^G@@@@@@@+@@@@#C@@@@[[#)@@ [@)@[^C#)@@@H@)@@@C/)@@=[@@@@#@[O@@HAD@@@@TJ
)@@G@@)@+[N#^GK^G^G^@K0@G@@@@ C/@@@[8L@@@ZG_)@@[[@)@@#;K)@@[C@)@@#/K@@@%*@@@@]TK
)@@G@@[@K@@]AE@@@@)@?[MK1#@^[#^GK@@@/K@@@"[@)@@^C@)@@D/K@@@60@@@@I*@@@@IG/)__XTL
)@@G@@[@)@@AC@)@@ [@@@@@AF@@@@)@6[F]^GK1#^G[#^G@@@@@@@D@@@@[[@)@@^W@)@@G;O)@@=TM
)@@G@@C@)@@^@[<@@H@@@@@A@@@@@E/,0@@@AG@@@@)@_[F#[#[@K^GK1#@@@@@@@@9!)@@LR]0@@ITN
)@@G@@@[&@@H/K@@[AN@0@[ [@)@@@C@)@@#]@K@@@)@@@@^AH@@@@)[C@V#^GK0@@)@F@C@)[F@N#TO
)@@G@@^D@@@@)@H@C@UR2MSK/K@@@@/K@K@F@@F@@ *4@K@FN[@@@P9\)@@NAI@@@@)@I@C@)[H[##TP
)@@G@@^GK1#[@K^@@@[^@@@?[^@@@^[^@@@IC8FK@@^[@@@P9:)@@N9()@@LAA0@@I@[&@@[AJ@@@@TQ
)@@G@@)[P@%K[@K@@@)@E@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]/K@@@@[^@@[]C8FK@#[^@@[@TR
)@@G@@C8FK@]AK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@]@@F@@[@@J@@[@@]@@Q@C@@[U@@@@@@NEXP1$TT
)@@G@@      NERR3$      UR2MSK      @@[@@@@@@@[H@@@@@@      ^@@@C@@]@AR)@@@@@@TU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F@K^[@K^[@K^@@@@@@@@TV
)@@G@@A[0@[3A[)@[2A[K@[1A[@@[0A@0@[\A@)@[,[]K@[![]@@[?[[0@[:AA@@@@)@D[V@K@[@@@TW
)@@G@@C9FK@ C8;K@^C[0@[[N@K@@G/K@@[Z(@@@@GH8@@@[C@FK@#N@:K@@[[)@[5A]@@[4AB@@@@TX
)@@G@@)@O[MK[@^[@^@@@@@@C[:K@][ K@[[R9K@@@[ K@@V[ @@[FR9@@@@[ @@@SR80@@@[^0@@QTY
)@@G@@C9VK@AAC@@@@)@Y[U@@K[@@@P80@@[/K@@@89CN)@@/K@@@\*@FK@[C@N)@@R[)@@#R@)@@#TZ
)@@G@@&9K@@[&9@@@[&80@@[AD@@@@)@([U@K^@K@@C[0@[[R@)@@#P80@@[/K@@@89SN)@@/K@@@8UA
)@@G@@/K@@@&*@@@[[C@N)@@C[0@[[R@)@@#AE@@@@)@4[M^[@@^@@@@@@@@?9)@@]/K@@[O(@FK@]UB
)@@G@@[@+@@@[@Q)@@C@&@@@/K@@@8/K@@@\*@@@[[C@N)@@AF@@@@)@"[V@@@K@@@[@$@@@C]B@@@UC
)@@G@@R90@@@[^K@[AH@K@@OH8K@@[G@VK@#C8K@@@C@>@@@C]@@@N/K@@[EAG@@@@)[D[U@[@@@@@UD
)@@G@@[[4)@@[@$@@@C[7@@@R90@@@[^K@[KH@K@@NH8K@@[G@VK@#C8K@@@C@=@@@[] )@@AH@@@@UE
)@@G@@)[O[U@K@[@K@/K@@@&/K@@@\*@FK@[C@N)@@R@)@@#R@0@@A/K@@[Z(@@@[[C[0@[[N@K@@GUF
)@@G@@H8@@@[AI@@@@)[Z[F@K^[@K^[@K^@@@@@@@@R[0@[3R[)@[2R[K@[1R[@@[0R@0@[\R@)@[,UG
)@@G@@C]K@[!C]@@[?C[0@[:AJ@@@@)[*@V@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UH
)@@G@@@@@@@@@@@@@@/KF@@CC[)@[5R]@@[4AK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@]@@A@@@@@A@@[@@E@@@UJ
)@@G@@@@@@@@@@@@[6UR1TRI      @@[@@@@@@@@@&]0@[YC9@@#]R#0@[%AA@@@@)@F[F@^@(@W-UK
)@@G@@@Y@@@@@@@@@@[[W@@@C[Z@@C @G@@A @G@@ /,0@@@&'0@@@/K@@@,*^J@@^/K@@[MAB@@@@UL
)@@G@@)@@[]@K0CSK0)@>@C@@@@@@@______[@)@[S[@@@[RG.@__"C[@@[QG/)__"C8:K@^G/@__"UM
)@@G@@C8FK@#AA@B25)@C[N#@-)K0C@)C@@@/C@@@O/K@@ H*@@@@I/C)@@LG/)__"[@)@@!C@:K@[UN
)@@G@@[@@@@?C@FK@@[[@@[TAB@B25)@M[MK[#]@C@)@@@@@*@@@@G/G@@@XD@@@@@/K@@ T*@@@@GUO
)@@G@@/C@@@TH@@@@?C/@@@ /K@@ T*@@@@GAC@B25)@W[N@[@^@[@@@@@@@/G@@@:*@@@@GH@@@@@UP
)@@G@@C/@@@[/K@@ >*@@@@G/C@@@+H@@@@@C/@@@#/K@@ >AD@B25)@&[F#]A[#]@]A^G@@@@@@@@UQ
)@@G@@C@)@[U]@@@@\H@@@@@C/@@@]/K@@@0[@)@@\C@)@@@[@@@@,C@@@@>AE@B25)@\[F#]A[#@-UR
)@@G@@-@K^G@@@@@@@R@K@[J/C@@[]/@@@[]G@)@@!C/)__"H@@@@?C/@@@] @@@@:[@)@@,AF@B25US
)@@G@@)@8[N#@]@CS^GCS@@@][@@@?H[@@@?C.@@@#[@)@@:C/)@@[8L@@@'[@[)@@D@[@@@[@)@[^UT
)@@G@@Q@K@[QAG@B25)[][EK0C]^^GCSK0-)@@@@@@@@@@@!@@@@@?@@@@@\@@@@@,/,0@@@/G@@[KUU
)@@G@@*@@@@GH@@@@!C/@@F,AH@B25)[F[M[#]@-)K0CS@@@*@@@@1C/@@@[[@K@@1+/@@@[C@@@@,UV
)@@G@@/K@@^'@[(@[N@@@@@@@@@@@@@@@@@@AI@B25)[P[M^G@)C]@--#@@@ @@@@&@[!@[N/K@@ 1UW
)@@G@@N@0@[X/)K@[Y+@@@@I @@@@I*@@@@,C/)@@[ @@@@GAJ@B25)[Z[EK0--#]A@K0-)@@@@@@@UX
)@@G@@[@@@@%[@)@@@T/)@J*G/)@@[[@@@@2[@)@@$C@)@@![@@@@(C/@@@[AK@B25)[*[F#]A^GCSUY
)@@G@@K^C*SK0-)@@@@@@@@%@@@@@,@@@@@&/,0@@@/ )@#8C[)@@\[[@@@4C[@@@$[@@@@3AL@B25UZ
)@@G@@)[1[F#]A^GCS^[@K^G@@@@@@C@)@@>/K@@] /G@@[./@@@[9C@[@@@O@K@[TR@K@@3@[9@[NVA
)@@G@@@@@@@5AM@B25)['[EK^[#]A^[@^G@@@@@@@@G@@@@3C/@@@[/G@@]P/@@@]PH@@@@3C@@@@4VB
)@@G@@/K@@] /=0@[.+@-@@@AN@B25)]#[F#]@--#@)C]@-)@@@@@@C@)@@>/K@@]I/G@@]T/@@@]FVC
)@@G@@C@[@@@O@K@[TR@K@@4/K@@[3[@@@@3AO@B25)]G[MK[#]A^GC]@)@@C/@@@[/K@@#F/G@@] VD
)@@G@@/@@@#FG@@@@3]@@@@4H@@@@4C/@@@[/=0@]T+@-@@@AP@B25)]Q[F#]A^[#]A[#]A^G@@@@@VE
)@@G@@O@)@[TR@)@@4[@@@@*C@[@@@O@K@[TR@K@@3/K@@#F[@@@@3G@@@@3AQ@B25)]Z[M@K0--#]VF
)@@G@@A^GC@@/@)@]\O@)@[SR@)@@3O@K@[SR@K@@4H@)@@?C/)@@[[@]@@@[@-@@@C@+@@@AR@B25VG
)@@G@@)]([N@^G@CSK0CS@@@[@@@@*C@]@@@O@)@[RR@)@@3[@-@@@[[]@@@C[[@@@[@)@@*C@+@@@VH
)@@G@@/C)@]8AS@B25)]3[N#]A@[#]A[#@@@H@)@@4C/)@@[[@@@@3G@@@@3C/@@@[[@[@@@[@+@@@VI
)@@G@@C@-@@@O@K@[RR@K@@4AT@B25)].[F#]A^[@K^GCS^@@@@@@@/@@@#CC@]@@@O@)@[TR@)@@3VJ
)@@G@@/K@@#F/G@@[3/@@@#]H@@@@4]@)@@4AU@B25)#A[N@K^G]@--@^G@@(@@@@GH@@@@2C/@@@[VK
)@@G@@/^@@#<C@@@@%/>K@]P+[]@@@C[@@@>/K@@#F/G@@]PAV@B25)#K[N@K0.)^G#6^G@@C/)@@[VL
)@@G@@]@@@@&H@[J_"T/@@J*[@@@@(W/@@J*;O@@@=C@[J_"R@K@@2/K@@^'AW@B25)#U[N#]A^GJSVM
)@@G@@@K0)@@C/@@@[/K@@#,[[@@@$G.@__"W.@@J*;P@@@=C[]J_"R@)@@2]@)@@2H@)@@2AX@B25VN
)@@G@@)#=[F#]A^GCS^GJS^G@@@@@@H[@@@3C.@@@[[@-J_"G@)@@&T/)@J*C@)@@3R@K@@2[@@@@2VO
)@@G@@G@@@@2AY@B25)#![F#]A^GC]@--#]A^G@@@@[@)@@4C@)@@$[@@@@3C@@@@(/C@@#H/@@@#HVP
)@@G@@H@@@@$C@@@@(][@@@$AZ@B25)#6[EK0- #]A^GCSK0-C@@@@/,0@@@@]9@[N@@@@@5@@@@@%VQ
)@@G@@@@@@@,@@@@@&/,0@@@[[@@@%C.@@@[BA@B25)#_[EK0--#]A^G]A^@@@@@@@/@@@#FH@@@@6VR
)@@G@@C/@@@[@]'@[N@@@@@6@@@@@4@@@@@3@@@@@5@@@@@@BB@B25)^C[N@K0-)K0--#@@@[@[@@@VS
)@@G@@[@+@@@C@-@@@O@K@[TR@K@@4[@@@@*C@]@@@O@)@[TR@)@@3/C@@]PBC@B25)^M[EK0--#]AVT
)@@G@@^GC]@@@@@@@@C@+@@@/C)@^*/@)@^ZO@K@[SR@K@@4O@)@[SR@)@@3H@)@@?C/)@@[BD@B25VU
)@@G@@)^V[N#@]A^G]A^GCS@O@K@[RR@K@@4[@@@@*C@]@@@O@)@[RR@)@@3[@-@@@[[]@@@C[[@@@VV
)@@G@@[@)@@*BE@B25)^>[M@K0-)K0--#@@@H@@@@4]@)@@4H@)@@4C/)@@[[@@@@3G@@@@3C/@@@[VW
)@@G@@[@[@@@[@+@@@C@-@@@BF@B25)^\[F@K^[#]A^G]A^G@@@@@@(@@@@1[@K@@1+@]@@@C@@@@5VX
)@@G@@O@)@[TR@)@@3/K@@#F/G@@#"/@@@^2BG@B25)^8[F@K^GC]@)CS^G@@@@@@@G@@@@?C/@@@#VY
)@@G@@@#O@[N/K@@ 1N@0@^"/K@@^_*@@@@:/K@@#F/K@@]PBH@B25) [[N#@--#]A@^[@@@N@0@ GVZ
)@@G@@8L@@ B[@[)@@D@[@@@[@)@[^Q@K@[QR@K@[JG@)@@!C/)__"[@@@@?BI@B25) F@3@K0-L#]WA
)@@G@@A^G@@@)@7@S@SORT E018HUR(//5X,@@K@@!@#W@[N@@[@@7/,0@@@@#V@[N/K@@ 1BJ@B25WB
)@@G@@)@'@*@@@@@@@) L@V]%^4G@@@@@@@@@@@@@./,0@@@'^@@@@______URSORT6)    N = ,IWC
)@@G@@RROR. BK@B25) O[F#]A^[@K0-L#]A^G@@@@@@K@@?@#+@[N@@[@@_/,0@@@@#-@[N/K@@ 1WD
)@@G@@N@0@ S@#)@[N@@@@[KBL@B25)@_[@@@@@@@@) X@F]*@@@@@'^@@@@______URSORTI6)   WE
)@@G@@KK = ,RROR. SORT E019HUR(//5X,BM@B25) Y[F]UA^GCSK^[#] ^G@@@@@@[@[B/,0@@@WF
)@@G@@@#$@[N/K@@ 1N@0@ =@#&@[N@@@@[K@@@@[ /,0@@@BN@B25) $@N#@@@@@@)[B@8@@@@@@@WG
)@@G@@URSORT ,I6) MODE =RROR. SORT E021HUR(//5X,@@K@@@@#*@[NBO@B25)[I@C@) (@;]WH
)@@G@@%^4GCSK0)C@@@@@@@@/K@@ 1N@0@ 0@#?@[N@@@@[K@@@@[H/,0@@@'^@@@@______BP@B25WI
)@@G@@) 0@;#]A^GCSK0--#@)[L@C@@@@@@@@@F@@C*4@K[LN[@@[ZR@)@[YR@K@[X9!)@[VR]0@[OWJ
)@@G@@@#!@[NBQ@B25) 7@N#] )@@@)[N@K@) 9@V#]A^G@@@@@@@@A@K@[X9()@[VAA0@[O@#!@@]WK
)@@G@@URSORT/K@@@@/K@K[LBR@B25) /[N#]A[@K0)]@C@@[^@@[HC8FK@^[^@@[GC8FK@#[^@@[FWL
)@@G@@[@@@[Q[^@@#_C8FK@]^[@@[ZA@)@[YBS@B25)AA[MK^[@K^[@^GC@@/K@@@@[@K@[UC@VK@AWM
)@@G@@[^@@@T[^@@@Y[^@@@<[^@@@*[^@@@?[^@@ *C8FK@ BT@B25)[J@K@@@@@@@@@@@@@@@@@@@WN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[@@@BU@B25@@@@@@[#]A^GWO
)@@G@@C]@)@@C/@@@[/K@@#F/G@@] /@@@#FG@@@@3]@@@@4H@@@@4C/@@@[/=0@]T+@-@@@AP@B25WP
)@@G@@@@^@@]@@A@@B@@O@@[@@S@@@@@#@[)@C@@AKUR1TRI      UR2MSK      UR3SRH      WQ
)@@G@@UWWBR       NPRT$       NIO2$       NERR3$      URSORT      @@[@@@@@@@ 9WR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@*@@@@@@@)@@@<[K^ #@@R@K@@G @@@@]/K@@@>*@@@@@WS
)@@G@@HEAD  TAB   TABSETPRINTFSCALE AA@@@A)@^[MKO[#KKOG^G[;O @[\_"N.@@@IR@K@@GWT
)@@G@@ @@@@A[@@@ORC/@@J* @@@@@8L@@@  @[)G+N.@@C>AB@@@A)@I@V@@@@@@@)@C@K@)@L@V#WU
)@@G@@[][#@@@@@@@ /,0@@@[#)@@ ______REWINDN.@@@^C_)@@[8L@@@HAC@@@A)@O[##[#[#[#WV
)@@G@@[#@K^H)@@@@@@@@@@@ @@@@@8L@@@LG_)@@[@[-@@M@@@@@B@@@@@H@@@@@H@@@@@CAD@@@AWW
)@@G@@)@E@K@)@W@;#H] #[#H@K^G@@[>@@M/K@@@>/K@@@<@@@@@@@@@@@E/,0@@@ @@@@@______WX
)@@G@@MDATA AE@@@A)@<[MK3[#[;@^@@@@@O/K@@[/K@@@,(@@@@GH@@@@@C@[J_"A@K@@ N.@@@^WY
)@@G@@R/K@@[[@@@@@C/@@@[AF@@@A)@![F@K0^[]T#[@K^@@@@@@@/K@@[N/K@@[E/K@@@8@[\@@MWZ
)@@G@@'^@@@@8];@@2$'0@@ARA0@@ 8L@@@$AG@@@A)@6[F@K^G^[[KO [KK@@@@@@ @@@O: @@@O%XA
)@@G@@ @@@O( @@@O* @@@O$/K@@[@(@@@@A/K@@[!/K@@[)AH@@@A)@_[N#L]C@[@K0@@@@@[8@@MXB
)@@G@@/K@@[/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@ @@@@@AI@@@A)[D[N@K<@[@KXC
)@@G@@0K@@@@/K@@[5@['@@M/K@@[/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@/K@@[5AJ@@@AXD
)@@G@@)[N[N]L#@@[@K0@@@@@[/@@M/K@@[/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IXE
)@@G@@/,0@@@AK@@@A)[X[MK0K^D^G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J/,0@@@XF
)@@G@@/K@@[5[@@@@AC/@@@[AL@@@A)[$[MK^G[#[@K>@@@@@@@@@@@@@@@@@@@@@@/,0@@@/K@@[5XG
)@@G@@[@@@@AC/@@@[@[_@@M/K@@[/@@@@@@AM@@@A)[1[M[#[#[[^ @K@@@/K@@]^N@0@[;[@)@@[XH
)@@G@@C@)@@@[@@@@@C@@@@ @]]@@M@@@@@@@@@@@@@@@@@@AN@@@A)[;[F#@K^[#[#[]WK0@@@@@@XI
)@@G@@[^)@@KH8)@@[/K@@@@!^)@@K@]A@@M/K@@]@N@0@[_C8)@@C@] @@MAO@@@A)]^@:#[#[#[#XJ
)@@G@@[#@@@@)@K@C@)]D@F#@@@@@@/K@K@K@@F@@@*4@K@KN[@@@SR@K@@R9\)@@PR]0@@NAP@@@AXK
)@@G@@)]E@F])@@@@@)@M@K@)]F@+K0K0K0@@@@@@@9:)@@P[^@@@KAA0@@NC8@@@D@]A@@#S22CLDXL
)@@G@@/K@@@@AQ@@@A)]J[N#[#@K[@K^[@K@[^@@[,[^@@[[[^@@[P[^@@[+[^@@[7C8FK@[[^@@@(XM
)@@G@@C8FK@@^[@@@SA@K@@RAR@@@A)]T[MK^[@K^@K^[@@@[^@@[=[^@@[R[^@@[0C8FK@#[^@@[]XN
)@@G@@[^@@[\[^@@[F[^@@[<[^@@[QC8FK@]AS@@@A)]<[N@K[@K^[@K[@@@[^@@[2C8FK@ [^@@[HXO
)@@G@@[^@@[^[^@@[1[^@@[S[^@@[>C8FK@^[^@@[#[^@@[GAT@@@A)]![N@K^[@^[@K^[@@[^@@[3XP
)@@G@@[^@@[$[^@@[U[^@@[A[^@@[JC8FK@A[^@@[ [^@@[I[^@@[&[^@@[TAU@@@A)]7@F@@@@@@@XQ
)@@G@@)@G@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@[@@@@@@@@[@@[/K@@@@AV@@@AXR
)@@G@@@@^@@B@@F@@D@@X@@[@@-@@ @@^@@T@C@@]8@@@@!?@@@@@[@@@@@[@@@@@J@@@@@(S1IODRXS
)@@G@@      S1GVAL      S22SCL      S22BRK      S22TAB      S22HED      NERR2$XT
)@@G@@      NERR4$      NERR3$      S22CLD      @@[@@@@@@@]FS22BLK      ]@@@C@XU
)@@G@@@]@@@@S22MDT      ]@@@C@@#@@@@S22PRE      ]@@@C@@^@@@@S22SIZ      ]@@@C@XV
)@@G@@@ @@@@S22FIL      ]@@@C@@A@@@@@@@@]@/,0@@@BH@@@@)@@@G@@@@@@@@@@@@@@@@@@@XW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA@XXX@@@@@@@@@@@@XX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XY
)@@G@@@@^@@C@@G@@@@@G@@@@@G@@A@@#@@@@C@@@@@@@@!?@@@@AK@@@@@[@@@@@[@@@@@J@@@@@(XZ
)@@G@@S22BLK      ]@@@C@@]@@@@S22BK2      ]@@@C@@#@@@@S22MDT      ]@@@C@@^@@@@YA
)@@G@@S22PRE      ]@@@C@@ @@@@S22SIZ      ]@@@C@@A@@@@S22FIL      ]@@@C@@B@@@@YB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[EKO[@K0-H#]A^^@@@@@@YD
)@@G@@@@K@OR@[D@@*@@[@@[/,0@@@@[C@@*/,0@[2/K@@@E(@@@OS @@@@@AA@C*,)@D@F])@@@@@YE
)@@G@@)@[[@@@@@@@@ARIABLMORE VNE OR OR.  OB2 ERRCROSTA***** (087H '^@@@@AB@C*,YF
)@@G@@)@D[@@@@@@@@)@E@E@@@@@@@C/@@@#OF,I5)LIMIT E THE S ABOVNUMBER WITH E USEDYG
)@@G@@ES WERAC@C*,)@F[N[^@KKKK@@@@@@+@@@@I @@@@I*@@@O(C/)@@[ @@@@G*@@@O*C/@@@[YH
)@@G@@/K@@@-*@@@@GH@@@@@AD@C*,)@P[MKK^[@K0-H#@@@@@[@@L/,0@@@@[L@@*/,0@[2/=K@@-YI
)@@G@@+@@@@I;^@@@= @@@@I*@@@O:C/)@@[AE@C*,)@Z@N#] @@@@)@L@8@@@@@@@CARDS O TAB YJ
)@@G@@OR.  NB2 ERRCROSTA***** (065H '^@@@@@[M@@*AF@C*,)@S@*@@@@@@@)@-@<[KK@@@@YK
)@@G@@1@@@@G*@@@@GD@@@O= @@@@@CARD) ABSET LAST TAFTER FOUND AG@C*,)@>[N@K^GCSKYL
)@@G@@KK^[#@@@@@@+/,0@[W/K@@@01@@@@G*@@@@GD@@@O>@[S@@*@@@@@-/,0@[W/K@@@(AH@C*,YM
)@@G@@)@\[F#]])C]@--@K0-)@@@@@@[X@@*@@@@@</,0@[W@[W@@*/K@@[[N@0@@4/K@@@5*@@@O&YN
)@@G@@@[U@@*AI@C*,)@8[F@K0--@K0--@K^G@@@@@@[)@@*/K@@[[N@0@[@@[Z@@*@@@@@>/,0@[WYO
)@@G@@@[Y@@*@@@@@=/,0@[WAJ@C*,)[[@N#]A@@@@)@&@C@)[#@N#] K@@@)@*@K@@[)@@#S22TCKYP
)@@G@@/K@@@@/K@K@&@@F@@]*4@K@&R]0@@(AK@C*,)[ @F#@@@@@@)@X@K@)[A@:@K)CSK0@@@@@@YQ
)@@G@@@@@@@X@@@@@@/,0@@@/K@@[4______ENDFILAA0@@(AL@C*,)[F@N#]A@@@@)@Z@K@)[H@<#YR
)@@G@@]^[#@@@@@@@Z@@@@@@/,0@@@@[=@@?______REWIND@@@@@@@@@@@@AM@C*,)[L[F#]A^GCSYS
)@@G@@K^[#]A^G@@@@*4@K@%R]0@@!@[&@@?/K@@[SN@0@[R@[>@@?@@@@@@@@@@@@@@@@@@AN@C*,YT
)@@G@@)@%@C@)[U@N#] K@@@)@?@K@)[W@N#@@@@@@C8FK@@AA0@@!@[&@@#ENDER /K@@@@/K@K@%YU
)@@G@@@@F@@]AO@C*,)[Y[F@K^@K^C*SK=-)@@@@@@@@@@@+/,0@@@@[:@@0/,0@@@/K@@[>*@@@@@YV
)@@G@@/K@@[B[^@@[J[^@@[CAP@C*,)[$[F#@]@)CSK0-)@@@@@@@@*4@K@,R]0@@1@[,@@0/K@@[,YW
)@@G@@N@0@[![@@@@@G@@@@@C/@@@[@[?@@0AQ@C*,)@,@C@)[0@N#] K@@@)@0@K@)[2@N#]@@@@@YX
)@@G@@/K@@[-AA0@@1@[,@@#ERROR /K@@@@/K@K@,@@F@@[AR@C*,)[4@2K^[@K^@)@-@S@@@@@@@YY
)@@G@@@@@@@]@@@@@[@@@@@^/K@@@@[^@@@@[^@@[-[^@@[([^@@[%C8FK@@AS@C*,)@=@K@@@@@@@YZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@#AT@C*,ZA
)@@G@@@@^@@#@@B@@A@@N@@[@@R@@[@@#@@5@C@@['@@@@!?S1IODR      S1PRSK      S1PCHDZB
)@@G@@      NPRT$       NIO2$       NERR3$      S22TCK      @@[@@@@@@@[ S22BLKZC
)@@G@@      ]@@@C@@]@@@@@@@@@@)@@@3#^GK^[#^G@@@@)@]@C@@@@@@@@@@@@@@@F@@[*4@K@]ZD
)@@G@@@[]@@^/K@@@ N@0@@^[@@@@@C@@@@[AA@@@A)@A@N#^C@@@@)@^@K@)@C@N#^@@@@@)@[@C@ZE
)@@G@@KG@@@@/K@@@@AA0@@ @[]@@^INSEG6/K@@@@/K@K@]AB@@@A@@^@@]@@A@@[@@C@@[@@G@@@ZF
)@@G@@@@]@@B@C@@@ENERR3$      INSEG6      @@[@@@@@@@@C17           32         ZG
)@@G@@1536         8192       131072    154140672            0  27649318944  2ZH
)@@G@@)@@@N#@@@@@@)@@@K@)@ @C@)@]@N#@@@@@@ @@@@@[@@@BQ@_____@@@@AK@@@@AKG/@__'ZI
)@@G@@C@@@BPAA@@@A)@^[MK0KO[[K0K[@K@/,0@SD/K@@@Q*@@@@I/C)@@HH@)@@[C@)@@]/K@@@(ZJ
)@@G@@(@@@@][@@@A2C@FK@@AB@@@A)@I@:#[]>#[#[#@@@@)@5@S@@@@@@@CROSTA***** (032H ZK
)@@G@@@@K@@[@[<@BI@@[@@5/,0@@@@[+@BIAC@@@A)@8[@@@@@@@@)@N@F]*@@@@@'^@@@@D)    ZL
)@@G@@XCEEDEALES E16H SCF,I4,0IMIT OOR.  LB2 ERRAD@@@A)@O[N[K[[[#[[K0@@@*@@@@GZM
)@@G@@H@@@A2C@[@@]A@K@@A[@@@[^R/K@@[G@@@@]C/@__"/K@@@( @@@@]AE@@@A)@Y@;@K^G^EOZN
)@@G@@G^G^G@)[@@K@***** (029H @@K@A2@[0@BI@@[@[@/,0@@@@[\@BI/,0@SD/K@@@$AF@@@AZO
)@@G@@)[][C@@@@@@@@@@[C@@@@@@@D)    DEFINEOUSLY  PREVI6,019HCALE,IOR.  SB2 ERRZP
)@@G@@CROSTAAG@@@A)@>[N](@^[]@@K0@@@@@@@A3@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@8L@@@UZQ
)@@G@@O/K@@[/K@@@('^@@@@AH@@@A)@\[F#[#[#[#[@K0K0K0@@@@G@@@@@C@@@@C@[7@BI@@@@A8ZR
)@@G@@/K@@@'@@@@@C@@@@A5@@@@A4@@@@@BAI@@@A)@8[MK[@K^G[#[#@@@C/)@@ ]@@@@DH@@@A3ZS
)@@G@@C/@@@^@['@BI/K@@R=N@0@@.C8)@@B/K@@@"[@@@@@AJ@@@A)[][N#@K^ @^^^G@@@A@K@@AZT
)@@G@@[@)@[^R/K@@[G@)@@]C/)__"/K@@[M(@@@@]/K@@[%*@@@@IH@)@A3AK@@@A)[G[F[K0^@K^ZU
)@@G@@[#[]=@@@@@@@/,0@@@@]B@BI/,0@SD8L@@[FO/K@@[/K@@[X(@@@@GH@@@A4C@[@@]AL@@@AZV
)@@G@@)[P@V#[#[#@@)[F@0@@@@@@@CALE,IOR.  SB2 ERRCROSTA***** (029H @@K@A4@]C@BIZW
)@@G@@@@[@[FAM@@@A)[L@*@@@@@@@)[S@V](#[@@@@@@@@@/K@@[% @@@A3'^@@@@NED)  N DEFIZX
)@@G@@OT BEE HAS N6,021HAN@@@A)[V[F#[#[#[[K0K[@K0@@@@@C@@@A3/K@@[V*@@@@G/C@@[<ZY
)@@G@@[@@@A3C@[@AMR@K@@A[@@@@AD@@@A3AO@@@A)[=[EK0^G^G^@KOG@@@@@@@@[@@@@AG@@@@]ZZ
)@@G@@C/@@@[/K@@[![@0@A3+@)@A3C/)@@B[@@@A4;K@@@#AP@@@A)[![N#[#@K0^[#@K0@C/@@@BAA
)@@G@@]@@@@E;@@@@-C@@@A4/K@@[6*@@@@GH@@@A3C/@@@A[@@@@EC@@@@AAQ@@@A)[7[N#@K^G@KAB
)@@G@@0^ [@@[@@@@]G@@@@]C/@@@[]@@@@EG/@@@[;@@@@-C@@@A4/K@@["*@@@@GH@@@A3AR@@@AAC
)@@G@@)][[N[K0KOG^G@K0@@ @@@@G*@@@@IH@)@A3C/)@@AC/@@@[[[@@@FC[@@A3[@-@@]C@)@A2AD
)@@G@@R@K@@]AS@@@A)]F[M^G@^[#@K0@@@@G@@@@F;@@@@-C@@@A4/)K@]Q)@@@@I @@@@I*@@@@KAE
)@@G@@H[@@A3C.@@@BC/)@@[AT@@@A)]P[F#[#[[^[#[#[[K0@@@@@C@@@@FR@K@@][@@@@FD@@@@AAF
)@@G@@/K@@]W(@@@@GH@@@@]C@@@@A[@@@@FAU@@@A)]Y[N[K0^@K@K0@@@@*@@@@KH[@@A4C.@@@[AG
)@@G@@C/)@@[/K@@]'*@@@@I/C)@]=G/)__.C@)@@D[@[@AMAV@@@A)]*[M@K0K@^@@@@@@@/=0@]'AH
)@@G@@+@)@@K @@@@K*@@@@M/D)@]0H[)@A4C.)@J*C.@@@[ @@@@I1@@@@KAW@@@A)]2@:@K0K(K0AI
)@@G@@K0@@@@)[Q@S@@@@@@@CROSTA***** (076H @]*@BI@@[@[Q/,0@@@@]$@BI/,0@SDAX@@@AAJ
)@@G@@)[T[S@@@@@@@LES)   K SCAOR ALL1000 FXCEED  NOT E 1 ANDEXCEED MUST OR.  KAK
)@@G@@B2 ERRAY@@@A)]7[N]*K0^G[#[#[@@*@@@@K/D@@#]D[@@@B[@)@@HC/)@@[[@@@@GC/@@@AAL
)@@G@@[@@@A4C/@@@['^@@@@AZ@@@A)#[@3@K^G^EOG^G@@@)[=@S@CROSTA***** (056H @]1@BIAM
)@@G@@@@[@[=/,0@@@@]0@BI/,0@SD/K@@#DBA@@@A)[$[@@@@@@@@)#B@F]*@@@@@'^@@@@D)    AN
)@@G@@ERMINEBE DETN NOT YPE CACALE TOR.  SB2 ERRBB@@@A)#C[F@K0K0^G@K^G@@@@@@@@AO
)@@G@@ @@@@I/K@@#L1@@@@G*@@@@GH@@@@IC/@@@^[@@@@IC@@@A3/K@@C'BC@@@A)#L[N#@K0K0KAP
)@@G@@0^G@K@/K@@#X1@@@@G*@@@@GH@@@@IC/@@@[A@K@BS[@@@BRG@@@@BC/@__"R@K@@ABD@@@AAQ
)@@G@@)#V[EK0K0KOG^G^G^G@@@@@@C_0@@[ @@@@M @@@@L @@@@K[@@@@JC@[@@]R@K@BS[@@@@IAR
)@@G@@C/@@@]BE@@@A)#=[F#[#[#[#[#[#[#[#[#@@R@K@BSA@)@BSA@K@BRO@)@BQR@)@@HO@K@BPAS
)@@G@@R@K@@H[#0@@NN[@@BRBF@@@A)#![EK0K0^G[#@K0@@@@@@@@G[)@@HC.)@@#[[@@@#C[]@@[AT
)@@G@@[@)@@]C@+@@@R@)@BR[@@@@OC@[@@^BG@@@A)#6[F#[#@K^E4G^[@K@@@@@@/K@@ ^/K@@^5AU
)@@G@@/K@@#_@# @BI'^@@@@8];@#;$'0@@^RA0@@O[[)@@HBH@@@A)#_[N#[#@K[#[#@@@@C/)@@[AV
)@@G@@ @@@@G*@@@@IH@)@B]C@)@@#C/@@@[/K@@^<(@@@@GH@@@B[C@@@@]BI@@@A)^D[F#[#@[@KAW
)@@G@@-K0K0@@@@@@@@@@@@P@@@@@]/,0@@@/=K@^<+@@@@I @@@@I*@@@@KH[@@B#C[@@@]BJ@@@AAX
)@@G@@)^M[F@K0K0K0K^[#[]>#@@@@@@[@[\/,0@@@@#H@BI/,0@SD/K@@ 7[@@@@QC@@@@P@#E@BIAY
)@@G@@/K@@^RBK@@@A)^V@3#[#@K0K?K@@@@)[\@S@CROSTA***** (033H 8LK@^Y'^K@@@C8[)@[AZ
)@@G@@N.K@@[R@K@B^@#I@BIBL@@@A)[2[@@@@@@@@)^-@F]*@@@@@'^@@@@NED)  T DEFIHIS NOBA
)@@G@@A3,014E ,A6,ARIABLOR.  VB2 ERRBM@@@A)^+[N@K0K[#[@^G[@@/K@@BN(@@@@GH@@@@KBB
)@@G@@C/@@@]/K@@BN[@@@@KC/@@@[/K@@^**@@@@K/K@@BNBN@@@A)^?@:@K0K(K0K0@@@@)['@S@BC
)@@G@@@@@@@@CROSTA***** (066H @#X@BI@@[@['/,0@@@@#W@BI/,0@SDBO@@@A)[.[C@@@@@@@BD
)@@G@@@@@[C@@@@@@@ ONCE)E THANED MORPECIFIRETE SR DISCANGE OOR.  RB2 ERRBP@@@ABE
)@@G@@)^1[F]*K0K^G^G^C=G^@@@@@/K@@^/@@@@@P/,0@@@[@@@@PC@@@@]/K@@BN[@@@@KC/@@@]BF
)@@G@@'^@@@@BQ@@@A)^'[##[@K^G^EOG^G^G@@@@@@@@@@@@@K@@P@#&@BI@@[@]A/,0@@@@#>@BIBG
)@@G@@/,0@SD/K@@^O@#<@BIBR@@@A)]A[S@@@@@@@)     EFINED NOT D15H ISE,I6,0ARIABLBH
)@@G@@OR.  VB2 ERRCROSTA***** (032H BS@@@A) ][F](@K0K0K0K0^G@@@@@@*@@@@GH@@@@QBI
)@@G@@C/@@ZK[@)@@QC@)@@#[@@@@PC@@@@]/K@@BN'^@@@@BT@@@A) F[EK^^K0K+K0K^G@@@@@@@BJ
)@@G@@@#\@BI/K@@ P@@@@@Q/,0@@@[@@@@Q;@@@@<C@@@OR/K@@ K1@@@@GBU@@@A) O[F@^G^G^GBK
)@@G@@^@K^G@@@@@@@C@@@@#/K@@ K*@@@@G/C@@ WG@@@@P]@@@@QH@@@@QC/@@@[/K@@ WBV@@@ABL
)@@G@@) X[F#@K^[#@K0K0K0@@@@@@C@@@@F[@@@@FG@@@@QC/@@@[@#6@BI/,0@SD/K@@ 7(@@@@GBM
)@@G@@H@@@@QBW@@@A) &[F#@^[#[#[]>#[#@@@@@@@#'@BI@@[@]L/,0@@@[@@@@FC@@@@P/K@@ ?BN
)@@G@@1@@@@G*@@@@GH@@@@PBX@@@A) \@N#[#@@@@)]L@8@@@@@@@ES,I6,ARIABLOR.  VB2 ERRBO
)@@G@@CROSTA***** (033H @@K@@#@@K@@FBY@@@A)]S@*@@@@@@@) 1@<](#[#@@*@@@@GH@@@@FBP
)@@G@@C@@@@P'^@@@@FINED)NOT DEH ARE I6,016001H-,BZ@@@A) 5[EK^G^G^G[#[[K0@@@@@@BQ
)@@G@@H@@@@RC@@@OR[#)@@R[@@@[ C#)@@PH@@@@PC@@@@Q/K@@BN1@@@@GCA@@@A) "[M^@KO@K0BR
)@@G@@^G@@@@[@@@@S;K@@@[G@@@@RC/@@@[/K@@A&[@@@OSC/@@@[/K@@A^1@@@@G*@@@@GCB@@@ABS
)@@G@@)AC[N#@K0@K0KOG@@@;C)@@O;))K@TC@+@G+]@@@@TG/@__";@@@@)G/@__"H@@@@R;@@@@<BT
)@@G@@R@)@@SCC@@@A)AM[EK[#[#[#[#[[K@@@@@@@/K@@A&[[[@O:C[@@@RR@K@@L[@)@@LG@)@@LBU
)@@G@@C/)@@[/K@@AV(@@@@ICD@@@A)AV[N#@K0^G[[[#@@@;@0K@T;G)@@K;)/@@@C@2@G+E@@@@GBV
)@@G@@G@)@@EC/)^8)G@@@@TC/@@@KR@)@@SCE@@@A)A>[F[K0K^C4G^G^[#[#@@@@RA0@@I@^M@BIBW
)@@G@@/K@@BL@@@@@U@@@@@R/,0@@@/K@@BL(@@@@I[@2@G+CF@@@A)A,[MK^E4G^[@^G[@@/K@@A_BX
)@@G@@(@@@@GH@@@@UC/@@@]/K@@BG/K@@A4@^N@BI'^@@@@8];@A1$'0@@#CG@@@A)A8[EK0K0K0KBY
)@@G@@0KO[]L#@@@@@@@@@@R/,0@@@/K@@BL[@-@U;C@)@@RR@K@@M[@@@@MG@@@@MC/@@@[CH@@@ABZ
)@@G@@)B[[F#[@K0K0K0[@K0@@@@@@C@@@@V/K@@BF1@@@@G*@@@@GH@@@@GC@@@@V@^T@BI/K@@BLCA
)@@G@@@@@@@VCI@@@A)BE[N#[@^G[@K[@@@@G_0@@[8LK@ ;G_)@@[/K@@A8/K@@BL(@@@@GH@@@@UCB
)@@G@@C/@@@[/K@@BL[@@@@GCJ@@@A)BO[F@K0K^[#[#@^G@@@@@@@[@@@BRW/@@@E;O@@@=C@@@@LCC
)@@G@@@^&@BI/,0@SD/K@@B:(@@@@L8L@@#>CK@@@A)BX[F]P#[#[]>#[#@K0K0@@@R@)@B^G[)@@LCD
)@@G@@C.)__"@^*@BI@@[@]X/,0@@@@^$@BI@@@@BR/,0@@@CL@@@A)B&@%KOF^[]*)]X@)@@@@@@@CE
)@@G@@B2 ERRCROSTA***** (072H '^@@@@8L@@B$'^K@@@C8])O:[[)@[^CM@@@A)]-[S@@@@@@@CF
)@@G@@72X,1010I4/(LE(S),VARIABD FOR DEFINE BEEN LREADY HAS A SCALEOR.  ACN@@@ACG
)@@G@@)]?@C@)B:[##[@K^G^G@K0@@[@@@BRW/@@@B;O@@@=C@@@@M@^1@BI/,0@SD/K@@CQ(@@@@MCH
)@@G@@I4))  CO@@@A)B3[F]P#[#[#@K^E4G^@@@@@/K@@B.@^3@BI'^@@@@8];@B'$'0@@#RA0@@ICI
)@@G@@@^2@BI@@@@BR/,0@@@CP@@@A)B/[F@K(K0K0K0^G^G@@@@@@[[)@[^R@K@B^G[)@@MC.)__"CJ
)@@G@@@@K@@J@^4@BI@@[@]!/,0@@@/K@@CECQ@@@A)C @V[K?K@@@)]!@0@@@@@@@CALE,IOR.  SCK
)@@G@@B2 ERRCROSTA***** (029H 8L@@C '^K@@@C8[)U;CR@@@A)]3[S@@@@@@@ ,7I4/ERIC -CL
)@@G@@RE NUMBLES A VARIA THESELE BUTTE SCADISCRE IS A 6,055HCS@@@A)]"@K@)CC@;]CM
)@@G@@(@K(K0K0K0@@C.)__"@@K@@J@^.@BI@@[@#@/,0@@@/K@@CQ'^@@@@I4))  (90X,7CT@@@ACN
)@@G@@)CJ@;#[#@KOF^[]*@@)#@@K@***** (029H '^@@@@8L@@CM'^K@@@C8])U;[[)@[^R@)@B^CO
)@@G@@G[)@@MCU@@@A)#][S@@@@@@@RIABLEESE VABUT THSCALE RANGE  IS A 6,057HCALE,ICP
)@@G@@OR.  SB2 ERRCROSTACV@@@A)#H@0@@@@@@@)CQ@UK0@@@@@ @@@@G*@@@A3C/@@@[,7I4))CQ
)@@G@@4/(92X - ,7IUMERICALPHANS ARE CW@@@A)CT[MK0@^@K0@@@@@@*@@@@GH@@@@DC/@@@[CR
)@@G@@/=K@#]+@@@@I @@@@I0@@@@K*@@@@KD[@@@DC/)@@[CX@@@A)C<[F@^G[@K^[#[#@@@@@@@@CS
)@@G@@C@@@@G@ F@BI/K@@R*N@0@C%/K@@C:(@@@@GH@@@A3C/@@@[/K@@C'CY@@@A)C?[F#[@^[@KCT
)@@G@@^G^[#@@@@@@@@ I@BI/,0@SD@ H@BI/K@@R*N@0@C2/K@@C3*@@@@G/C@@C0H@@@A4CZ@@@ACU
)@@G@@)C5[F]>#[#[#[](#@^@@@@@@/K@@D[1@@@@G*@@@@GD@@@@D'^@@@@@@K@A4@ J@BI@@[@ 6CV
)@@G@@/,0@@@DA@@@A)C"[F@K^G^G^@K^[#@@@@@@@@ Q@BI/,0@SD/K@@DI*@@@@G/C@@D D@@@A4CW
)@@G@@@ N@BI/K@@R*N@0@D@DB@@@A)DB@V]>#[#@@)#N@0@@@@@@@ATEGOROR.  CB2 ERRCROSTACX
)@@G@@***** (083H @ R@BI@@[@#N/,0@@@DC@@@A)#T[C@@@@@@@@@@[C@@@@@@@FIED)  SPECICY
)@@G@@OPERLYL IMPR OR ALISSINGIONS MIFICATY SPECDD@@@A)DE[F](@K^G^G^G^G^G^G@@@CZ
)@@G@@ @@@@Y @@@A9 @@@A6 @@@A7 @@@@X@ U@BI/K@@R*N@0@DH'^@@@@DE@@@A)DN[F#[#[#[#DA
)@@G@@[#@K0K0K0@@@H@@@A4[@@@@ZG@@@@ZC/@@@[ @@@@- @@@@) @@@@Z @@@A; @@@A'DF@@@ADB
)@@G@@)DW[F@^[#[#@K0^G@@@@@@@@G@)@@YC/)@@[[@@@@+C@[@@^O@K@BQR@K@@H/K@@MT*@@@@GDC
)@@G@@/G@@DZDG@@@A)D>[F#[#[[K0K0^G^G^@@@@@/K@@E'(@@@@<[[@@@<C[[@@@O@K@BPR@K@@HDD
)@@G@@ @]@$VR@)@@Y[@)@@YDH@@@A)D,[F#@K^E4G^[@K^@@@@@@@/K@@EX/K@@EF/K@@D7/K@@E'DE
)@@G@@@ ,@BI'^@@@@8];@D2$'0@@ RA0@@<DI@@@A)D7[F#[#@K[@K^G^EK@@@@@@/,0@@@@ 1@BIDF
)@@G@@/,0@SD/K@@E *@@@@G/C@@D.D@]@@[O@)@BPR@)@@HDJ@@@A)E@@V#[#[#@@)#+@0@@@@@@@DG
)@@G@@EIGHT OR.  WB2 ERRCROSTA***** (042H @@K@@Z@ 2@BI@@[@#+DK@@@A)#*@0@@@@@@@DH
)@@G@@)E#@V](@K0@@R@K@@Y/K@@E''^@@@@ITIVE)OT POSH IS NI5,016EGORY,IN CATDL@@@ADI
)@@G@@)EA[F#[#@KO[#[#@K@@@@@@@^^K@EKN8M@@[O@)@BPR@)@@H/K@@E8[@[@$VC@]@@[O@)@BPDJ
)@@G@@R@)@@HDM@@@A)EJ[F] @K0K^G^[@K0K(@@@@/,0@@@@ ;@BI/,0@SD/K@@E>@ 9@BI/K@@EPDK
)@@G@@@@@@@=@@@@EK/,0@@@DN@@@A)ES@V#[#[#@@)#,@0@@@@@@@EIGHT OR.  WB2 ERRCROSTADL
)@@G@@***** (051H @@K@@Z@ /@BI@@[@#,DO@@@A)#4[@@@@@@@@)EV@F]*@@@@@'^@@@@D)    DM
)@@G@@DEFINES NOT 015H IRY,I5,CATEGOLE IN VARIABDP@@@A)EW[F@K0K0^G^C=G^[#@@@@@DN
)@@G@@@A]@BI/K@@EP@@@@@=/,0@@@[@@@@=C@[@@[O@K@BPR@K@@H/K@@E'DQ@@@A)E>[F]H#[#[@DO
)@@G@@K0^G[@@@@@@@/K@@E5(@@@@GH@@@@>C/@@@[@A#@BI/K@@E5@@@@@>@@@@@=/,0@@@DR@@@ADP
)@@G@@)E,@;@K0K(K0K0K0K%@@@@@@)#/@C@(051H '^@@@@@@K@@Z@AB@BI@@[@#//,0@@@@AA@BIDQ
)@@G@@/,0@SDDS@@@A)#.[S@@@@@@@S NOT 026H IRY,I4,CATEGOLE IN VARIABEIGHT OR.  WDR
)@@G@@B2 ERRCROSTA***** DT@@@A)^C@)@@@@@@@)E5@<#[#[[@@@@@@@@C/@@@[[@]@$VD@@@@=DS
)@@G@@R@)@@Y)     RIABLERIC VAA NUMEDU@@@A)E9[F#[#[#@K0K0K[#@@@@@@G@)@A7C/)@@[DT
)@@G@@/K@@FV(@@@@&[@@@@&C@[@@#O@K@BPR@K@@H[@@@A6DV@@@A)F][F#@K0K0^G^G^G^G@@@@@DU
)@@G@@O@)@BQR@)@@X[[@@@XG[@@@XC.@@@[[@@@@$G@@@@HC/@@@^[@)@A7DW@@@A)FF[F#@^G^G[DV
)@@G@@#[#[#@@@@@@@R@)@@X[@@@@XG@@@@XC/@@@[O@K@BQR@K@@$N.@@@D[[+@@^C[)@@YDX@@@ADW
)@@G@@)FO[N#@[#[#[@^G^G@[@@@@HG@@@@HC/@@@I8L@@FI[[@@@$G[@@@$C.@@@[[@+@@^C@-@@^DX
)@@G@@O@)@BQDY@@@A)FY[F#[#[@K^G^EOG^G^G@@@@@K@@Z@A)@BI@@[@^+/,0@@@@AZ@BI/,0@SDDY
)@@G@@/K@@F(*@@@@+ @@@@(DZ@@@A)F$[N](@^G^@K^G^G@C@[@@^O@K@BQR@K@@H/K@@F8*@@@@GDZ
)@@G@@/C@@F,H@@@@+C/@@@[/K@@DS'^@@@@EA@@@A)F1[M^@K0K0K[#[@@@/C@@F.H@@@A3C/@@@]EA
)@@G@@/K@@F-[@@@@HG@@@@HC/@@@]/K@@F8*@@@@GG/@__7EB@@@A)F;[MK[#@^G^G^G^G@R@K@@HEB
)@@G@@O@)@BPR@)@@H[#)@@%[@@@[^C_)@@[G@@@@+C/@__"/K@@I3*@@@@GEC@@@A)G [F#[#[#[#EC
)@@G@@@K0K0^G@@@@@[@)@B@C@+@@@R@)@BS[@@@@:C@[@@^R@K@BRA@)@BSA@K@BRO@K@BQED@@@AED
)@@G@@)GI[EK0K0K0^[]!#[@@@@@@@/K@@GY@A2@BI'^@@@@8];@GP$'0@@DRA0@@:[@@@@HG@@@@HEE
)@@G@@C/@@@]EE@@@A)GR[F@K^[@K^[@K0K0@@@@@@H@@@A9C@@@@@/K@@I0/K@@IT/K@@I[/K@@ITEF
)@@G@@/K@@H\/K@@G"/K@@G!EF@@@A)G)[N@^@K0K0K0K0^^[@-@O:;@)@@<C@)@@YR@K@A9[@@@A9EG
)@@G@@G@@@A9C/@@@[/K@@I>*@@@@G/C@@G<EG@@@A)G%[F#[[K^G^G[#[#@@@@@@@*@@@@IH@)@@%EH
)@@G@@C@)@@+C/@@@[O@)@BQR@)@@H/K@@I0[[[@U;C[@@B@EH@@@A)G3[M@@K^G^G@@@@@@[@@@A_EI
)@@G@@C@@@B@/=K@IT)@@@@I @@@@I(@@@@KG.@__/C[]@@^C/)@@[ @@@@GEI@@@A)G.[N@K0K0[#EJ
)@@G@@@@@@@@C[[@@@C/)@@[ @@@@G*@@@@IH@)@@%C/)@@[C/@@@[O@K@BQR@K@@H/K@@I0EJ@@@AEK
)@@G@@)HB[M@K[#@K^D)@@@@/,0@@@/K@@HS(@@@@GH@@@A3C/@@@]/=K@IT)@@@@I @@@@I(@@@@KEL
)@@G@@G.@__.EK@@@A)HL[F#[#[#[@^[@K0K0@@@@@"^@@B@C@@@A_/K@@IT/K@@HX*@@@@G/C@@HREM
)@@G@@@B[@BI@@@@B@@@@@A_EL@@@A)HU[M^[#[#[@^@K0@@G@@@A9C/@@@[/K@@I>*@@@@G/C@@H+EN
)@@G@@H@@@A9C@@@@@/K@@IT1@@@@G*@@@@GEM@@@A)H=[F#[#[#@^ #[[K0@@@@@@C[)@B@[[]@U;EO
)@@G@@C[@@A_[@+@O:G/)@@[;@)@@<C@)@@YR@)@A9[@@@A9EN@@@A)H![F[K^G^[#[#[@K0K@@@@@EP
)@@G@@/G@@H8D@@@A'/K@@I0[@@@A'C@@@@Y/K@@H4*@@@A'/K@@I0[[+@-FEO@@@A)H6@'K^[#[]>EQ
)@@G@@#[#@@@)^G@K@***** (057H @BO@BI@@[@^G/,0@@@@BN@BI/,0@SD/K@@I0*@@@@GEP@@@AER
)@@G@@)^I[C@@@@@@@@@@[C@@@@@@@CE)   HAN ONMORE TIFIED S SPECTHER IOR.  OB2 ERRES
)@@G@@CROSTAEQ@@@A)H.[F]*K0K^G^[#[#@@@@@@@C/)@@][@@@A;C@@@@Y/K@@IG*@@@A;/K@@I0ET
)@@G@@[@@@A'C/@__"'^@@@@ER@@@A)IA[F#@K^G^G^[#[@@@@@@@@*@@@@G/G@@IKD@@@A;/K@@GYEU
)@@G@@[@)@B@C@)@B /K@@I0(@@@@IH@)@A3ES@@@A)IJ@3@K^G^EOG^G@@@)^R@S@CROSTA***** EV
)@@G@@(059H @B<@BI@@[@^R/,0@@@@B+@BI/,0@SD/K@@I0ET@@@A)^U[@@@@@@@@)IP@F]*@@@@@EW
)@@G@@'^@@@@ONCE)  THAN D MOREECIFIE IS SPISSINGOR.  MB2 ERREU@@@A)IQ[EK0K^G^[EX
)@@G@@@K0K(K0@@@@@@@[@^+/,0@@@@B%@BI/,0@SD/K@@I0*@@@@(/K@@I0[@@@A;C/@__"EV@@@AEY
)@@G@@)IZ@N#[#@@@@)^+@8@@@@@@@OR INTALUES OR.  VB2 ERRCROSTA***** (091H @@K@@ZEZ
)@@G@@@B:@BIEW@@@A)^([K@@@@@@@@@@@@@,I4)  TEGORY IN CACIFIEDLY SPEPROPER OR IMFA
)@@G@@ISSING ARE MERVALSEX@@@A)I-[F]*K0K^G^[@K0K(@@@@@/,0@@@@B3@BI/,0@SD/K@@I0FB
)@@G@@*@@@@)/K@@I0[@@@@(C/@@@['^@@@@EY@@@A)I%@V#[#[#@@)^3@0@@@@@@@IMIT OOR.  LFC
)@@G@@B2 ERRCROSTA***** (032H @@K@@@@B4@BI@@[@^3EZ@@@A)^9@8@@@@@@@)I!@N]*@@@@@FD
)@@G@@C/@@@['^@@@@)     CEEDEDALE EXN A SCLUES I27H VAF,I5,0FA@@@A)I\[N#@K^@K0FE
)@@G@@^[#[#@O@K@BQR@K@@H/K@@J/*@@@@GH@@@@+C/@@@[/K@@DS8L@@G[G_)@@[[@@@@)FB@@@AFF
)@@G@@)I9[EK0K0K0^G^G[@@@@@@@@8];@J#$'0@@DRA0@@:[@)@B@C@+@@@O@)@BPR@)@@H[@@@@:FG
)@@G@@C@[@@^FC@@@A)J][F]!#[@K^[@K^[@@@@@@@/K@@M[/K@@J%/K@@M[/K@@JS/K@@M[/K@@M[FH
)@@G@@/K@@JG@C[@BI'^@@@@FD@@@A)JF[F@K0K0[@^G^G@@@@@@@@[@@@A9G@@@A9C/@@@[/K@@MDFI
)@@G@@1@@@@G*@@@@GH@@@@@C@@@A9/K@@M[FE@@@A)JO[F#[#[[K^G^[#[#[@@@@@/K@@MO[@@@A'FJ
)@@G@@C@@@@Y/K@@JX*@@@A'/K@@MO[@-@O:C@)@B@R@K@A9FF@@@A)JX[F#[@^[@K0K(K0K0@@@@@FK
)@@G@@@CI@BI@@[@^G/,0@@@@CH@BI/,0@SD/K@@MO*@@@@G/G@@J-D@@@A'FG@@@A)J&[F]*K0K^GFL
)@@G@@^[#[#[@@@@@@/K@@MO[@@@A;C@@@@Y/K@@J\*@@@A;/K@@MO[@@@A'C/@__"'^@@@@FH@@@AFM
)@@G@@)J\[F#[@^[@K0K(K0K0@@@@@@CT@BI@@[@^R/,0@@@@CS@BI/,0@SD/K@@MO*@@@@G/G@@J3FN
)@@G@@D@@@A;FI@@@A)J8[F]*K0K[#@K^G@@@@@@@@R@)@@H/K@@KL*@@@@GH@@@@+C/@@@]/K@@MOFO
)@@G@@[@@@A;C/@__"'^@@@@FJ@@@A)K[[N#[#[#@[@@@@@@*@@@@GG/@__7C@[@@^/K@@I7(@@@@GFP
)@@G@@G/@__7C@]@@[O@K@BQR@K@@HO@)@BPFK@@@A)KF[N@^G[#[@^G[@@@/K@@M[*@@@@GH@@@@+FQ
)@@G@@C/@@@#/K@@I_[@)@B@C@+@@][@@@@:C@]@@[/K@@M[FL@@@A)KP[N#[#[#[#@[@^G@[@@@A/FR
)@@G@@C@[@@@/K@@M[*@@@@GG/@__"C@]@@^O@)@BQR@)@@HO@K@BPR@K@@HFM@@@A)KZ[M[@^G@^@FS
)@@G@@@@@@@@/K@@M[*@@@@GG/@__'C@[@@#[@)@A.C@-@@]/K@@M[*@@@@IG/)__"C@-@@[FN@@@AFT
)@@G@@)K([MK0^G^G^@[#@@@D[)@A"C.@@@[ @@@@I*@@@@K/D@@K1" @@A.C[@@A/C/)@@[[@@@A"FU
)@@G@@C@[@@^FO@@@A)K3[N@@K^G^G^G^G@@"H@@@I" @@A/C[@@A."C)@BAC@)@A"/=0@M[)@)@@KFV
)@@G@@ @@@@K*@@@@M/D)@K6FP@@@A)K.[N#[#[#@[#@K@@@*@@@@L/DK@LCG.K__.[[K@@?;-V@@DFW
)@@G@@[[@@@F"L@@@K"[@@BC"[@@BB[[@@@^FQ@@@A)LB[N@^G@K0[@K0@@@*@@@@-/=0@LU+@)@@KFX
)@@G@@ @@@@K*@@@@<C.@@@[ @@@@I*@@@@&C/)@@[/K@@M[FR@@@A)LL@3@K^G^EOG^G@@@) @@S@FY
)@@G@@CROSTA***** (075H @C/@BI@@[@ @/,0@@@@C;@BI/,0@SD/K@@LUFS@@@A) #[S@@@@@@@FZ
)@@G@@CE)   SEQUENPOINT TH ENDWED WIT ALLOBEL NOAND LAEIGHT OR.  WB2 ERRFT@@@AGA
)@@G@@)LR[F]*K0K0K0K[@K0@@@@@@C@@@@?/K@@L<*@@@@G/C@@LZH@@@@YC@@@A5[@@@@-C/@@@[GB
)@@G@@'^@@@@FU@@@A)L)[N#@K0^G^G[#@@@[@)@[^C_)@@[G@)@@?C/)__"]@@@@YH@@@@YC/@@@[GC
)@@G@@[@@@A5G/@__"G@@@A5FV@@@A)L%[F#[#[#@^@K0K0@@@@@@@[@@@A9G@@@A9C/@@@[/K@@MDGD
)@@G@@1@@@@G*@@@@GH@@@@@C@@@A9[#)@@!FW@@@A)L3[F#[#[[^G^G^G^ #@@@@@C[)@A" @[@$VGE
)@@G@@R@K@@Y[[@@@YG[@@@YC.@@@[[@+@O:C@)@A/R@)@A9FX@@@A)L/[F#[#@K^[@K0K(K0@@@@@GF
)@@G@@@@[@^+/,0@@@@DJ@BI/,0@SD/K@@MO8L@@L%G_)@@[[[)@A/"[)@A/FY@@@A)M [F#[#[](@GG
)@@G@@K0K^[#[]=@@@/,0@@@@DQ@BI/,0@SD/K@@MO*@@@@)/K@@MO'^@@@@@@K@@Z@DK@BIFZ@@@AGH
)@@G@@)MI[F#[#[#[]*K0K0^G@@@@@G@@@@H;@@@@<C@@@@+[@@@@)C/@@@['^@@@@@@K@@@@DR@BIGI
)@@G@@@@[@^3GA@@@A)MR[N#[@K0K[#@^G@@ @@@@I(@@@A'C/)@@[ @@@@G(@@@A;C/@@@[/K@@M%GJ
)@@G@@*@@@A9/K@@DS[@@@@HGB@@@A)M-@'K^[#[]>#[#@@@) I@K@***** (072H @D+@BI@@[@ IGK
)@@G@@/,0@@@@D-@BI/,0@SD/=K@M%)@@@@IGC@@@A) K[S@@@@@@@IFIED)Y SPECROPERLLL IMPGL
)@@G@@G OR AMISSINALUES CALE VOR.  SB2 ERRCROSTAGD@@@A)M*[N](@^G@^G@@@@@ @@@@IGM
)@@G@@(@@@@KH[@@@YC.@@@[C/)@@[ @@@@G*@@@A'C/@@@[/K@@QS'^@@@@GE@@@A)M2[]K^[#[]>GN
)@@G@@#[#[]*) V@C@(073H '^@@@@@D(@BI@@[@ V/,0@@@@D*@BI/,0@SD/=K@M')@@@@IGF@@@AGO
)@@G@@) W[S@@@@@@@ONE CA WITH SCALESD FOR ALLOWES NOT THER IOR.  OB2 ERRCROSTAGP
)@@G@@***** GG@@@A) $@K@)M'@;#[@^G^@K@@@@@/K@@PW*@@@@G/C@@N[H@@@A3C/@@@]/K@@QSGQ
)@@G@@(@@@A9)     TEGORYGH@@@A)N[[N#[@K0^@K^G^G@(@@@@GH@@@A4C@@@A7/K@@OJ*@@@@GGR
)@@G@@/C@@NCG/@__.C@@@A9/K@@QS(@@@A3GI@@@A)NF[N@^G@K0K0^ [@@[@]@O:G@]@O:;@@@@TGS
)@@G@@C@@@@WA@)@@W[@@@[^R/)@@[G@@@A9C/@__"/K@@NRGJ@@@A)NP[EK[#[#[]X#[#[[@@@@@@GT
)@@G@@@@@@U/@@@@A9@@@@BD/,0@@@[@@@BRH@@@A3C/@@@]8L@@NKO/)@@[GK@@@A)NY[F[KOG^G^GU
)@@G@@G[#@@@@@@@@@[@@@[^R/K@@]G@@@A9C/@__.@D;@BI@@@@@,@@@@BR@@@@-G@@@@O?GL@@@AGV
)@@G@@)N$[F#[[KL@^ #[#@@@@@@@@(@@@@\[@K@@\+@[@O%C/@@@[/K@@OD(@@@@GH@[@U'C@[@U;GW
)@@G@@A@K@@WGM@@@A)N0[F@KOG^ #@K0^@@@@@@@@/K@@N_(@@@@IH@)@A3C/)@@[[@@@A_C@[@-EGX
)@@G@@[@)@B@C@-@U;/K@@OAGN@@@A)N9[F#[#@^[@K&K0K0@@@@@@@@@@A_@@@@B@/,0@@@/K@@OAGY
)@@G@@/K@@OD1@@@@I*@@@@I"^)@B@C@)@A_GO@@@A)O][N#@^@K^[@K0K(@/,0@@@@EK@BI/,0@SDGZ
)@@G@@/K@@OJ8L@@N$O/K@@[/K@@OD0@@@@G*@@@@G@EF@BIGP@@@A)OG@V#[#[]*@) (@0@@@@@@@HA
)@@G@@NE OR OR.  OB2 ERRCROSTA***** (069H '^@@@@@EL@BI@@[@ (GQ@@@A) \@8@@@@@@@HB
)@@G@@)OJ@MK0@@@@@H@@@A3C/@@@[AP)    OVERLERVALSOR INTALUES CALE VMORE SGR@@@AHC
)@@G@@)OL[EK^G^G[#[#[#@@@@@@@@C.@__"[@K@@2+@@@B [@)@@1C/)@@[[@@@@0C@@@@ /K@@QSHD
)@@G@@*@@@@GGS@@@A)OU[F#@^G[#[#[[K0@@@@@@@[@K@@3+@]@U;C@@@@0[@@@@\C/@@@[A@)@@WHE
)@@G@@[[@@[^R/)@@[G[@@A9GT@@@A)O<[N#@K[#[#@^[#@@C@@@@0/K@@PC(@@@@GG/@__9[@@@@1HF
)@@G@@G@@@@1C/@@@[/K@@O9(@@@@HH@K@@2GU@@@A)O![EK0K0^G^G[@K:@@@@@@@'^@@@@8];@O6HG
)@@G@@$'0@@#RA0@@\[@)@@2;K)@@AC@)@@2[@@@@0;K@@@AGV@@@A)O6[F#[@K[[K0K0K^G@@@@@@HH
)@@G@@C@@@@0/K@@PA(@@@@F[@K@@F+@]@O:C/@@@[/K@@O"/K@@O)@E>@BIGW@@@A)O_[N[K0^G^GHI
)@@G@@[@^[#@C@@@@18L@@OXO/)@@[/K@@O&*@@@@HH@K@@2[@)@@\C/)@@][@K@@3+@]@-FGX@@@AHJ
)@@G@@)PD[F#[[K0^G^ #[#@@@@@@@*@@@@KH[@@@1C[@@@G[@-@AMG@)@A3;@)@@-C@)@@1R@K@@]HK
)@@G@@[@@@A8GY@@@A)PM[]K^[#[]>#[#[#@) 6@C@(105H @@K@@1@E4@BI@@[@ 6/,0@@@@E3@BIHL
)@@G@@/,0@SD/K@@QS1@@@@KGZ@@@A) 7[S@@@@@@@H LESSD WIDTE FIELES HAVARIABLMORE VHM
)@@G@@NE OR OR.  OB2 ERRCROSTA***** HA@@@A)A]@8@@@@@@@)PU@N](@@@@@/K@@QS'^@@@@HN
)@@G@@OF,I3)WIDTH VALUE SCALE XIMUM THE MA THAN HB@@@A)PW[N#[#@K0[@KOG@@C/@__.HO
)@@G@@[@)@A_C@)@O?/K@@P;1@@@@I*@@@@IH@)@A9C/)@@[[@@@A4C@@@@YHC@@@A)P&[N#@^G^ #HP
)@@G@@[#[#@@1@@@@I*@@@@I"^)@B@C@)@A_[@@@B@C@]@O:A@)@@W[@@@[^R/)@@]G@@@A9HD@@@AHQ
)@@G@@)P0[F@K0^[@K^G^EOG@@@@@@@@[@AD/,0@@@@FA@BI/,0@SD/K@@P;8L@@P(O/)@@[[@@@A_HR
)@@G@@/K@@P5HE@@@A)P9@N#[]*@@@)AD@8@@@@@@@L ENDPNTERVAOR.  IB2 ERRCROSTA***** HS
)@@G@@(069H '^@@@@@FB@BIHF@@@A)AK@0@@@@@@@)P;@UK0K0@@@H@)@A'C@)@A9C/@@@[ER)   HT
)@@G@@NG ORDSCENDIT IN AARE NOOINTS HG@@@A)P"[N@@K0[@^G@@@@@C@)@A9C/@@@[/=K@QMHU
)@@G@@+@@@@I @@@@I(@@@A'C/)@@[ @@@@G*@@@@I/C)@Q[HH@@@A)QC[N#[@@K0[@K@@@@/K@@QSHV
)@@G@@/=K@QM+@@@@I @@@@I(@@@A;C/)@@[ @@@@G*@@@@I/C)@QGH@)@A;HI@@@A)QM@3@K0K(K0HW
)@@G@@K0K%@@)AQ@S@CROSTA***** (089H '^@@@@@FK@BI@@[@AQ/,0@@@@FJ@BI/,0@SDHJ@@@AHX
)@@G@@)AT[S@@@@@@@A UB OES IN TEGORIAST CA THE LUST BESING MND MISTHER AOR.  OHY
)@@G@@B2 ERRHK@@@A)A=@K@)QS@;[K0Y3^[@K@@@@/K@@R*N@0@QZ/K@@Q)(@@@@@[@[J_"C@@@A4HZ
)@@G@@R@K@@]CALE) R LB SHL@@@A)QZ@V#@KK@@@)A&@K@)Q+@V[K*K0@@@@@@BE/,0@@@[@@@O>IA
)@@G@@______WRITE G@@@O>C/@@@[@FP@BIHM@@@A)Q>@<#[#[#[#@@@@@@)A*@K@)Q(@F#@@@@@@IB
)@@G@@@FR@BI______WRITE @@@@@4@@@@A2@@@@BF@@@@A&HN@@@A)Q%[##[@K*K0K0K0KOG@@@@@IC
)@@G@@@@@@@@@@@@@4@@@@$W@@@@A4@@@@A*@@@@BE/,0@@@/K@@Q3(@@@A6HO@@@A)A%@K@)Q2@;#ID
)@@G@@[#[@K0^G^E@@/,0@@@[@@@BRT/@@@FC@@@A7/K@@Q_(@@@A7@FT@BI______WRITE HP@@@AIE
)@@G@@)Q9[F#[#[#@K0K0K0K^@@@@@N@0@R#/K@@R^*@@@A9@FV@BI@@@@@4@@@@@@@@@@BR@@@@A%IF
)@@G@@@@@@BEHQ@@@A)R]@F@@@@@@@)A?@K@)R#@<#[]-#[#@@@@@@@@@@A?@@@@BE/,0@@@@FX@BIIG
)@@G@@______WRITE /K@@R*HR@@@A)RB[N#[[K0K0^G@K^@N@0@RM/K@@RN1@@@@G*@@@@GH@@@A3IH
)@@G@@C/@@@]@FY@BI@@@@@4@@@@O?@@@@A9HS@@@A)RL@F@@@@@@@)A,@K@)RM@<#[]-#[#@@@@@@II
)@@G@@@@@@A,@@@@BE/,0@@@@F)@BI______WRITE /K@@R*HT@@@A)RQ@V#[[K0@@)A0@K@)RT@V#IJ
)@@G@@[]-#@@@@@@BE/,0@@@@F-@BI______WRITE @@@@@4@@@@U/@@@@A9HU@@@A)RW[F#[#[[K0IK
)@@G@@K0K^[#[#@@@@!^)@BG@F<@BI/K@@R*N@0@R<@F+@BI@@@@@4@@@@-G@@@@A9@@@@A0HV@@@AIL
)@@G@@)R>[F]4K0K0K0K0K0K0K0@@@N[@@BZR@)@BYR@K@BX9\)@BV9!)@BTR]0@BJ[^)@BGH8)@@[IM
)@@G@@/K@@@@HW@@@A)R,@N#[#@@@@)BG@C@)R0@N#[]8@@@)BI@K@@F<@@]S22SCL/K@@@@/K@KBGIN
)@@G@@@@F@@@*4@KBGN[K@B)HX@@@A)R2[EK0K0K0K0K0K0K0K0@@@^[K@B)^[@@BZA@)@BYA@K@BXIO
)@@G@@9:)@BV9()@BT[^@@BGAA0@BJC8@@@CHY@@@A)R;[N@@K>K0K0K^[#@@F(@BM/K@@S N@0@S^IP
)@@G@@@F*@BM@@@@BE/,0@@@[@@@@@G@@@@@C/@@@[/K@@SFHZ@@@A)S @N#[#@@@@)BK@C@)SB@N#IQ
)@@G@@[]8@@@)BM@K@@F(@@]ERROR /K@@@@/K@KBK@@F@@[*4@KBKR]0@BNIA@@@A)SD[N#[@^@K[IR
)@@G@@@K^G@@[@@@BP[^@@Q/[^@@@?C8FK@#[^@@@:C8FK@][^@@@%C8FK@[/K@@R/AA0@BNIB@@@AIS
)@@G@@)SN[MK[@K^[@K^[@@@/K@@@@[^@@@8[^@@@#[^@@QV[^@@R.[^@@R"[^@@@7C8FK@ [^@@@!IT
)@@G@@C8FK@^IC@@@A)B[[S@@@@@@@@@@@@E@@@@@[@@@@@]NS@@@@KG@@@@KB__:]      @@[@@[IU
)@@G@@DISCRETE    RANGE ID@@@A@@^@@^@@C@@J@@&@@[@@%@@]@@^@B+@C@@SX@@@@!?@@@@AKIV
)@@G@@S22SDC      S1CKVN      S1CKVI      S1GTVT      S1GTVW      S1PCHD      IW
)@@G@@S22ACP      URSORT      S1IODR      NPRT$       NIO2$       NERR2$      IX
)@@G@@NIO1$       NERR4$      NERR3$      S22SCL      @@[@@@@@@@R2S22BLK      IY
)@@G@@]@@@C@@]@@@@S22BK2      ]@@@C@@#@@@@]@@@@@"@@@@I"^)@@A"C)@@ C@)@@@AD@@@@IZ
)@@G@@)@I[S@@@@@@@@@@@@]@@@@@@@@@@@]      HLINE @@@@@@@@@@@[@@@@@@@@@@@]AD    JA
)@@G@@PAGEHEAA@@@A)@T[S@@@@@@@@@@@@]@@@@@ @@@@@@@@@@@]      VLINE @@@@[H@@@@@@JB
)@@G@@@@@@@[@@@@@[@@@@@]AB@@@A)@=[K@@@@@@@@@@@@@@@@@@@@@@@@C@@@@@@@@@@@]MPTY  JC
)@@G@@PRINTE@@@@[H@@@@@@@@@@@[@@@@@[AC@@@A)@5@S@)@@@'K)K0@@@@@@@@@@@@@@@@@@@@@JD
)@@G@@@@@@@@@@@@@5/,0@@@ @@@@@______MT    PRINTFAD@@@A)@B@3#[#[@K0K0@@@@)@8@S@JE
)@@G@@______MT    PRINTFG@@@@@C@@@@\@[E@[M/K@@[<@@@@@\@@@@@,AE@@@A)@H[EK0K0^[]JF
)@@G@@ #@K0@@@@@@@@@@@@,@@@@@@@@@@@8/,0@@@^^K@@VN8L@@@O@K@[TR@K@@,[@@@@@AF@@@AJG
)@@G@@)@Q[F#[#[#[#[#[@^G^G@@@@C@@@@\@[G@[M@@@@@@@@@@@V@@@@[F@@@@@@@@@@[E@@@@[DJH
)@@G@@@@@@@IAG@@@A)@Z[M^G@K0K^G^G^G@C[@@@B[@)@@CC@)@@@8L@@@<[@[)@BC/@__"N.@@@#JI
)@@G@@R@K@[G[@@@@@G@@@@@AH@@@A)@([F#[#[#[#[@K^G^G^G@@@@[S@[M@@@@@D@@@@@]/,0@]*JJ
)@@G@@/K@@@.(@@@@1[[)@@1C[)@@[[[@@@HAI@@@A)@2[EK0^[#[#[@K^G@@@@@@@@@@@@#/,0@]*JK
)@@G@@/K@@@.[@@@@EC@@@@D/K@@@9(@@@@GH@@@@1C/@@@]AJ@@@A)@;[F#[#[#[#[#[@K^G^G@@@JL
)@@G@@@@@@@F@@@@@ /,0@]*/K@@[K(@@@@1[@@@@1C@@@@^@[X@[M@@@@@EAK@@@A)[^[F#@K0^[#JM
)@@G@@[#[@K@@@@@@@/,0@]*/K@@[K[@@@@GC@@@@F/K@@[G(@@@@GH@@@@1C/@@@]@[-@[MAL@@@AJN
)@@G@@)[H@V#[#[#@@)@;@K@)[K@V]D#[#@@@@@@@2@@@@@;/,0@@@______XTPFMT@[&@[M@@@@@GJO
)@@G@@@@@@@AAM@@@A)[N[F#[#[@K0K0^G^GB=@@@@[@]J_"C@[)@BR@)@@2N.@@@ R@K@[J@[$@[MJP
)@@G@@/K@@[<@@@@[I@@@@[HAN@@@A)[W[EK0K0K^[@K0^@@@@@@@@N@0@[&C8)@@A@[,@[M/K@@[:JQ
)@@G@@N@0@[+8L@@[T[@)@@2G@)@@2C/)@@[AO@@@A)[>[F@K0K0K=^G^G^G^G@@@@R@K@[W9!)@[UJR
)@@G@@R]0@[N[^)@[KH8)@@[/K@@@@!^)@[K@[\@[M/K@@[$AP@@@A)[,@V#[#[#@@)[K@C@)[1@N#JS
)@@G@@[]O@@@)[M@C@S22BRK/K@@@@/K@K[K@@F@@@*4@K[KN[@@[YR@)@[XAQ@@@A)[N@C@)[3@'KJT
)@@G@@0K0K0K0K0K0@@@@@@@^[@@[YA@)@[XA@K@[W9()@[U[^@@[KAA0@[NC8@@@B@[\@@#AR@@@AJU
)@@G@@)['[N@K0[#@K0K0@@@H/@__8C/)@@[]@@@@4H@@@[)T/@@@E[@@@@3W/@@@E;O@@@=C@@@[)JV
)@@G@@/K@@],AS@@@A)]^[N@@^G^@@@@@@@@+@)@@G @@@@G*@@@@K/D@@]HH[@@@3C.@@@BC/@@@[JW
)@@G@@ @@@@I*@@@@G/C@@]BAT@@@A)]I[F@@K<K0K0K&K0@@@@@@@@@[@@./,0@@@@[9@[Q@@@@[HJX
)@@G@@/,0@@@[@@@@@G@@@@@C/@@@[/=0@]XAU@@@A)]R@N#[#@@@@)@.@8@@@@@@@IS NOT,031H JY
)@@G@@OR.,I5B2 ERRCROSTA***** (022H @@K@[)@['@[QAV@@@A)[^@*@@@@@@@)]T@<]X@K^G@JZ
)@@G@@@["@[Q/K@@]=N@0@]W'^@@@@)     R CODEARACTETAL CH AN OCAW@@@A)]X[F#@K0^[@KA
)@@G@@K0K0K0@@@@@@*4@K[OR]0@[R@]@@[Q/K@@]=N@0@]<[@@@@@G@@@@4;@@@@-C@@@@3AX@@@AKB
)@@G@@)[O@C@)]&@N#[]O@@@)[Q@K@)]*@N#@@@@@@C@VK@@AA0@[R@]@@@#CONVRT/K@@@@/K@K[OKC
)@@G@@@@F@@#AY@@@A)]%[N#@K^@K[@^@@@@[^@@@ C8FK@][^@@@^C8FK@[[^@@@#C8FK@@/K@@[;KD
)@@G@@[^@@])C8FK@[[@K@[)AZ@@@A)]4[N#[@^@K^[@K^@@[^@@@Z[^@@@)[^@@]K[^@@@G[^@@]LKE
)@@G@@C8FK@^[^@@@AC8FK@#[^@@@O[@@@[TBA@@@A)]"@<@K^[@@@)[D@*@@@@@@@@@@@@[@@[@@]KF
)@@G@@@@@@@C@@@@@@@@@@@^/K@@@@[^@@@H[^@@@@[^@@@WBB@@@A)[I@K@@@@@@@@@@@@@@@@@@@KG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[@@@@@ABC@@@A@@@@@@"&@@@DKH
)@@G@@"+@@@DC#0@@C9\0@@C0@@@@J1@@@@JE]@@@D96@@@D0@@@@E1@@@@ED]@@@C92@@@CE]@@@CKI
)@@G@@@@^@@#@@B@@C@@R@@[@@V@@[@@^@[-@C@@#]@@@@@[S1ENDC      S1ENST      S1STFTKJ
)@@G@@      S1PCHD      NERR4$      NERR3$      NPRT$       NIO2$       S22BRKKK
)@@G@@      @@[@@@@@@@[3BLANK$      ^@@@C@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F#@CS[#@-)^G@@@@@@@@KN
)@@G@@G.)__"C[)@H]G.@__.C[@@H]R@K@H]G/)__"C@)@H]G/@__"C@@@H[AA@@@A)@D@3#@CS^G]KO
)@@G@@A[#@@@)@@@S@@@@@[=@@@@AK@@@@AK[[)@HA[[@@H [@)@H^[@@@H#G"@__.C]@@H]AB@@@AKP
)@@G@@)@#@)@@@@@@@)@P@*@@@@@@@ROW         ROWCOL@@@@@J___@@@@@@@@@@@@@@O@@@@[=KQ
)@@G@@@@@@AKAC@@@A)@U[S@@@@@@@$     RCSTATTA    SAVEDA      TABLE L     CONTROKR
)@@G@@      COL         AD@@@A)@>[S@@@@@@@BVSUBB      BVSUBA      GAMMA       KS
)@@G@@TAU         CHISQ       RCORR$AE@@@A)@0@*@@@@@@@)@7@S@)["@C@@@@@@[      KT
)@@G@@PALL  @@@@@<MPTY  PRINTE      BVSUBC      AF@@@A)@'@K@)[_@C@)@/@K@)]@@C@KU
)@@G@@)@"@K@      PPLANE@@@@@[      PCOL  @@@@@[      PROW  AG@@@A)][@C@)[@@K@KV
)@@G@@)]]@C@)[]@K@)]#@C@@@@@@@@@@@@[      CPROW @@@@@[      PTABLE@@@@@[AH@@@AKW
)@@G@@)[^@K@)]^@C@)[A@K@)] @C@)[C@K@      DVEXP @@@@@[      EXP   @@@@@[      KX
)@@G@@CPCOL AI@@@A)]A@C@)[E@K@)]B@C@)[G@K@)]C@C@@@@@@@@@@@@]      SUM   @@@@@[KY
)@@G@@      DCFREQ@@@@@[AJ@@@A)[I@K@)]D@C@)[K@K@)]E@C@)[M@K@L     SUMPCO@@@@@]KZ
)@@G@@W     SUMPRO@@@@@]L     SUMPALAK@@@A)]F@C@)[O@K@)]G@C@)[Q@K@)]H@C@@@@@@@LA
)@@G@@@@@@@]BLE   SUMPTA@@@@@]ANE   SUMPPL@@@@@]AL@@@A)[S@K@)]I@C@)[U@K@)]J@C@LB
)@@G@@)[W@K@QEXP  SUMFRE@@@@@]OL    SUMCPC@@@@@]OW    SUMCPRAM@@@A)]K@C@)[Y@K@LC
)@@G@@)]L@C@)[)@K@)]M@C@@@@@@@@@@@@]      DCSUM @@@@@]QDVEXPSUMFRE@@@@@]AN@@@ALD
)@@G@@)[+@K@)]N@C@)[=@K@)]O@C@)[&@K@      SSQ   @@@@@#      DCMEAN@@@@@#      LE
)@@G@@MEAN  AO@@@A)]P@C@)[*@K@)]Q@C@)[%@K@)]R@C@@@@@@@@@@@@B      VAR   @@@@@^LF
)@@G@@      DCSSQ @@@@@^AP@@@A)[?@K@)]S@C@)[,@K@)]T@C@)[0@K@      DCSDV @@@@@BLG
)@@G@@      SDV   @@@@@B      DCVAR AQ@@@A)]U@C@)[2@K@)]V@C@)[4@K@)]W@C@@@@@@@LH
)@@G@@@@@@@C      DCMIN @@@@@C      MIN   @@@@@BAR@@@A)[6@K@)]X@C@)[8@K@)]Y@C@LI
)@@G@@)['@K@      SEMEAN@@@@@K      DCMAX @@@@@K      MAX   AS@@@A)]Z@C@)[/@K@LJ
)@@G@@)])@C@)@J@<#@CS@@@ @@@@@[@@@]-C@FK@@[]@@HB@@@@@BAN    DCSEME@@@@@BAT@@@ALK
)@@G@@)@N[M^@K1+@)CS^E)@/,0@@@@[;@GU/,0@3//K@@@)*@@@@GH@@@@@C/@@@#/K@@@9(@@@@GLL
)@@G@@G/@__.AU@@@A)@X@V#@-)K%))^M@0@@@@@@@O TAB OR.  NB2 ERRCROSTA***** (088H LM
)@@G@@'^@@@@@[/@GU@@[@^MAV@@@A)^S[K@@@@@@@@@@@@@ARD)  BSET CAST TA AND LT CARDLN
)@@G@@ TABSEN THISBETWEEFOUND CARDS AW@@@A)@)[F#A-<K1*S4G0-)@@@@@@T/)@@GC@)@@@LO
)@@G@@[@@@]+C/@@[= @@@@@ @@@O: @@@O% @@@O( @@@O*AX@@@A)@([N#@]A@K0]A@K@@/K@@["LP
)@@G@@*@@@@GH@@@F.C@]@@[[#)@@5[@)@[^R@)@H#C_)@@[G/)__"[@)@]<AY@@@A)@3[E^[@K^G]LQ
)@@G@@A[#@-<@@@@@@(@@@O$[@@@]=C@@@HC@]H@GU/K@@3FN@0@@88L@@@,G_)@@[O/)@@[AZ@@@ALR
)@@G@@)@/[N@^GSCS^GUA@K@/K@@[D(@@@@GH@@@]=C@]@O:A@)@@5[@)@[^R/)@@[G@)@O$C/)__"LS
)@@G@@/K@@[(BA@@@A)[A[MK^[#@@-)K0C@@/K@@[N[@K@]>W@@@F";O@@@=G/@@@[T/@@[=C@@@]=LT
)@@G@@/K@@[(8L@@[[O/)@@[BB@@@A)[K[EK0CS[#A]A[#A@@@@@@@C@]@O:A@)@@5[@@@[^R/)@@[LU
)@@G@@G@@@O$C/@__"[@@@]>G@@@]>C/@@@[BC@@@A)[T[F#@C@)CK^G]A[]*@@@@@/,0@@@@]<@GULV
)@@G@@@@@@F_/,0@@@8L@@[RO/)@@[/K@@[K(@@@@GH@@@]>BD@@@A)[+@<#@-)K0CS@@@@@)^+@)@LW
)@@G@@@@@@@@ALREAD,040H TAB,I6(004H @@K@]>@@K@]=@]=@GU@@[@^+BE@@@A)^&@8@@@@@@@LX
)@@G@@)[&@N]%-)@@@C@@@]>'^@@@@)     RED,I5ENUMBE TAB R  THISIFIED.Y SPECBF@@@ALY
)@@G@@)[*[F#@-<K0C@)C]A[]*@@@@/,0@@@@]?@GU/,0@3//K@@[6*@@@@G/C@@[,H@@@@@C@@@O$LZ
)@@G@@[@@@]=BG@@@A)[1@V#@-)K0@)^!@0@@@@@@@IMIT OOR.  LB2 ERRCROSTA***** (032H MA
)@@G@@@@K@@@@]!@GU@@[@^!BH@@@A)^3@*@@@@@@@)[4@<]%-<^GSG@@@O$C/@@@[ @@@O$'^@@@@MB
)@@G@@EDED) S EXCEB CARD19H TAF,I4,0BI@@@A)[8[F#A-<K0CS1#@-<K0CS0@C@)@O([@@@]&MC
)@@G@@C@@@O*[[@@]+C.@@@E[@+@O:C@)@]=R@)@O$[@@@O$BJ@@@A)][@;#@-<K0CS4G]AT#@@@@@MD
)@@G@@)^8@C@TAB(SE[]@@]%C]@@@@[[)@](C[)@O:[[@@]*C[@@O%[@)@]$BK@@@A)^9@K@)]C@;#ME
)@@G@@@-[K0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^8/,0@@@ @@@]:______T)    BL@@@AMF
)@@G@@)]J[F#@-)K^G]A@[#@@@@@@@[@)@],C/)@@[[@@@@@G@@@@@C@@@]!@];@GU/K@@]X@@@@]!MG
)@@G@@@@@@]?BM@@@A)]S@:@K%CS^G] O@@@)^;@S@@@@@@@STORAG***** (033H '^@@@@@]_@GUMH
)@@G@@@@[@^;/,0@@@/K@@]-BN@@@A)^"@)@@@@@@@)]X@%K^[#@)@/,0@42@#]@GU/K@@3BN@0@])MI
)@@G@@C8)@@CAB)   N S22TFLOW IE OVERBO@@@A)]+[N#@CS[@^G@-)K@/C)@],H@)@]\C/)@@[MJ
)@@G@@G@@@@QC/@__"/K@@YF(@@@@GH@@@]\C/@@@B@##@GUBP@@@A)]?[MK@^G]A[#@C@@@/K@@]'MK
)@@G@@*@@@@GH@]@@PC@@@@B[#)@]0[@@@[^R/)@@]C_)@@[/K@@]-*@@@@IBQ@@@A)]6@3#@-)^@@ML
)@@G@@) ]@S@@@@@@@T)    ______TAB(SEG_)@@[O/)@@]/K@@#C(@@@@GH@]@@QC@@@@CBR@@@AMM
)@@G@@)  @C@)]/@;@K-CS^G]A[#@-)@@@@@@@@@ ^@@@@ ]@@@@@C@@@@@B@@@@G@/,0@@@8L@@]1MN
)@@G@@______BS@@@A)##[F#@@)CS^G]A[#@@@@@@@[@)@]2C@)@@C[@@@]1C@@@@B/K@@]-[@@@@@MO
)@@G@@G@@@@@C/@@@[@#L@GUBT@@@A)#G[N#@)CS[#@]@CS@H@@@]0C/@@@A/K@@#01@@@@G*@@@@GMP
)@@G@@H@@@]0C/@@@^@#R@GU/,0@42 @@@]3BU@@@A)#Q[M^@K0]@CS@@@@@C/)@@B[@@@]%C/@@@[MQ
)@@G@@/K@@U/*@@@@GH@@@]0C/@@@J/K@@I]1@@@@G*@@@@GBV@@@A)#)@:#@C]A@@) A@K@)#>@F@MR
)@@G@@@@@@@@/K@@]<______MANY  (@@@@GH@@@]\/K@@YF(@@@@IH@)@]\BW@@@A)#&[F]A-)K0CMS
)@@G@@S^G]A@@@@@@@[@@@@@G@@@@@C/@@@[@#<@GU@@@@]2@@@@]1@@@@ A@@@@G[/,0@@@BX@@@AMT
)@@G@@)#\[F@K0CS[@^[#@-)@@@@@@[@@@]4C@@@]+/K@@#'*@@@@G/C@@#6G/@__;[@@@]4C@@@]0MU
)@@G@@/K@@]<BY@@@A)#8[MK0]A@@@@@@@@@C.@@@[C/)@@[ @@@@G1@@@@I*@@@@IG/)__8C@)@]\MV
)@@G@@C/@@@[[@@@]+G/@@@[BZ@@@A)^]@:#@@@@@@) C@K@)^B@F@@@@@@@/=K@^O______FEW   MW
)@@G@@+@@@@I @@@@I1@@@@K*@@@@KH[@@]\CA@@@A)^C[F]A-)K0CS^G]A@@@@@@@[@@@@@G@@@@@MX
)@@G@@C/@@@[@#!@GU@@@@]2@@@@]1@@@@ C@@@@G[/,0@@@CB@@@A)^L[F@K^G]A[#@-)K0]A@@@@MY
)@@G@@H@@@]\C/@@@][@@@]7C@@@]? @@@]6 @@@]5@#0@GU/,0@42/K@@]<CC@@@A)^U[MK[#@C@-MZ
)@@G@@)^@@@@/K@@AE(@@@@GH@@@]\C/@@@ /K@@ $(@@@@GH@@@]\C/@@@^/K@@ #(@@@@GCD@@@ANA
)@@G@@)^=[F#@)CL^G]A[#@-)@@@@@G@@@@@C/@@@[@#/@GU@@@@]2@@@@]1@@@@G]/,0@@@/K@@^0NB
)@@G@@*@@@]3CE@@@A)^![M^G@-)^@^G@@@@H@)@]\C/)@@[C/@@@[/K@@^M(@@@@GH@@@]\C/@@@ANC
)@@G@@[@)@]3C/)@@[[@@@@@CF@@@A)^7[M@K0@C]@@@@@@@/,0@42/=K@]<)@@@@I @@@@I*@@@@KND
)@@G@@H[@@]\C.@@@BC/)@@[ @@@@G*@@@@ICG@@@A) [[F#@)C]A@K0CS^[#@@@@@G@@@]5/K@@ QNE
)@@G@@(@@@]8[@@@]6C/@@@[@^ @GU/,0@5?/K@@^0@^#@GUCH@@@A) E[F#@CS^G@)]@-)@@@@@@@NF
)@@G@@R@)@]7/K@@]T*@@@@I/G)@ MH@)@@@[@)@]7G@)@]7C/)@@[[@@@]5CI@@@A) N[N#@-)^[#NG
)@@G@@@CS@@@1@@@@I*@@@@IG/)__9C@)@]\C/@@@[@^I@GU/,0@42[@+@@[C@)@]8O@)@H CJ@@@ANH
)@@G@@) X[M[#@@C]@@@@@@@/K@@A8/=K@^S+@@@@I @@@@I1@@@@K*@@@@KH[@@]\C.@@@[C/)@@[NI
)@@G@@ @@@@GCK@@@A) $[F#@-)K0CS^[#@CS^G@@@C@)@]'[@@@]6C/@@@[@^O@GU/,0@6O[@)@]'NJ
)@@G@@C@)@@C[@@@]9C@@@@BCL@@@A) 0[F#@)]@-)K0CS[#@@@@@@[#)@];[@)@[^C#)@]9H@)@]9NK
)@@G@@C@)@]'/K@@ Q*@@@@I/C)@ 4H@)@]9CM@@@A) 9[MK0CS[#@-)^@K@/K@@]T*@@@@I/G)@A#NL
)@@G@@H@)@@@[@)@]7G@)@]7C/)@@[[@@@]5G@@@]5C/@@@[CN@@@A)A#[F#@-)K0@)C]^P#@@@@@@NM
)@@G@@@@@@@B/,0@@@/K@@ Q8L@@ 8G_)@@[[@+@@[C@)@];O@)@H R@)@]7CO@@@A)AG[F#@)CS^[NN
)@@G@@#@-)^G@@@@@@ @@@@I*@@@]3C/)@@[[@@@]/C@@@@B/K@@ #@^+@GU/K@@AK@@@@]8CP@@@ANO
)@@G@@)AP@'K0@)CS@) E@K@@@@@@@______      (@@@@GH@@@G#/=0@ #+@)@@K @@@@K*@@@]6NP
)@@G@@C.@@@[CQ@@@A)AW[F@K<CS^G]A[#@-)K0@@@(@@@@GH@@@G C@@@]/@^(@GU@@@@ E@@@@G^NQ
)@@G@@@@@@]//,0@@@/K@@A8CR@@@A) G@K@)A>@3@K<CS^G]A[#@@@@@@@@@^?@GU@@@@ G@@@@GANR
)@@G@@@@@@]//,0@@@/K@@A8______      CS@@@A)A:@V#@-)@@@) I@K@)A,@V@K<CS@@@@@@]/NS
)@@G@@/,0@@@/K@@A8______      (@@@@GH@@@GBC@@@]/CT@@@A)A1[F#@-)K0CS^G@)CS^G@@@NT
)@@G@@ @@@]" @@@]./K@@ #*@@@@GH@@@GDC@@@]/@^\@GU@@@@ I@@@@GCCU@@@A)A'[M^G@@CS@NU
)@@G@@@@@@@@*@@@@KH[@@]\C.@@@[C/)@@[ @@@@G1@@@@I*@@@@IH@)@]\C/)@@ C/@@@[CV@@@ANV
)@@G@@)B^[M^@K0]@-)K0@@@*@@@@GH@@@G#C@@@@B/K@@^=*@@@@GH@@@]\C/@@@ /=K@F")@@@@INW
)@@G@@ @@@@ICW@@@A)BI[N@^G]@-)[#@@@@1@@@@I*@@@@IH@)@]\C/)@@ C/@@@[@^/@GU/,0@42NX
)@@G@@[@@@]"C/@@@[/K@@B-CX@@@A)BS[M[#@@)C@@@@@@@R/)@@[/K@@^=/=K@F")@@@@I @@@@INY
)@@G@@*@@@@KH[@@]\C.@@@[C/)@@[ @@@@GCY@@@A)B+[EK0CS^[]I-)K0C]A@@@@@ #@GU@@@@B(NZ
)@@G@@@@@@@5@@@@@B/,0@@@^^K@B(N8M@@CA@)@@5N.@@@FCZ@@@A)B:@E@) K@K@)B?@:@K<CS^GOA
)@@G@@]A@@@@@@@@ K@@@@G^@@@@@B/,0@@@8L@@B<______      O/)@@[DA@@@A)B1@<#@-)K0@OB
)@@G@@) M@K@)B5@N@K<@@@@/,0@@@/K@@CL______      (@@@@GH@@@G C@@@@B@  @GUDB@@@AOC
)@@G@@)B7@;#@-)K0CS^G]A@@@@@@@) O@C@      (@@@@GH@@@GBC@@@@B@ C@GU@@@@ M@@@@GAOD
)@@G@@@@@@@BDC@@@A) P@C@)B"@;@K<CS^G]A[#@-)@@@@@C@@@@B@ F@GU@@@@ O@@@@GC@@@@@BOE
)@@G@@/,0@@@/K@@CG______DD@@@A)C [N#@C]A@K0C@-)@C/)@@[[@@@#@C/@@@ /K@@CN[@@@#@OF
)@@G@@C/@@@^ @@@]_/K@@^=*@@@@GH@@@GDDE@@@A)CJ[F#@)]A[#@CS^G@@@@@@@[@@@[^R@)@#@OG
)@@G@@H@@@#@C/@@@G @@@#[[@@@#@C/@@@A/K@@CN[@)@]_DF@@@A)CS[F#@-)K0]@-)K^D]@@@@@OH
)@@G@@@@@@C)/,0@@@^^K@C)N8M@@C/K@@C1(@@@@GH@@@F.C@]@@CA@)@@6DG@@@A)C-[F#@]@CS^OI
)@@G@@G]A[@@@@@@@@^^K@C!N8M@@C[@@@#[G@@@#[C/@@@[/K@@^=*@@@@GG/@__.@ V@GUDH@@@AOJ
)@@G@@)C%[F]G-)K0C]A@K^G]@@@@@/K@@^=(@@@#[8L@@CSO/)@@[@ Y@GU@@@@C!@@@@#[@@@@@BOK
)@@G@@/,0@@@DI@@@A)C3[F]M-)K0CS^G@-)^@@@@@/K@@DV(@@@@GH@@@#@C/@@@A@ +@GU@@@@#]OL
)@@G@@@@@@#[@@@@@B/,0@@@DJ@@@A)C/[M^G]@@CS@@@@@@*@@@@KH[@@#]C.@@@[C/)@@[ @@@@GOM
)@@G@@*@@@@I/C)@D]H@)@#]C/)@J*C/@@@[DK@@@A)DA[E[@K0C]@-)K%@@@@@@@@/,0@@@@ (@GUON
)@@G@@/,0@3//K@@DO*@@@]:/=K@DQ+@@@@I @@@@I1@@@@KDL@@@A)DJ@N#@-)@@@) Q@8@@@@@@@OO
)@@G@@EXCEED MUST OR.  KB2 ERRCROSTA***** (076H @ %@GU@@[@ QDM@@@A) X@8@@@@@@@OP
)@@G@@)DL@N]%@@@@@C/@@@['^@@@@LES)   K SCAOR ALL1000 FXCEED  NOT E 1 ANDDN@@@AOQ
)@@G@@)DN[F#@CS^G@-)K0C]AG@@@@(@@@@]/K@@F&]@@@].G@@@]_;@@@@-C@@@#][@@@#]C/@@@[OR
)@@G@@[@@@]:DO@@@A)DW[N@^GSCS^GUA@K@/K@@D(*@@@@GH@@@#]C@]@@]A@)@@6[@@@[^R/)@@[OS
)@@G@@G@@@@]C/@__"/K@@D:DP@@@A)D&[F#@-)K[@K^G] L#@@@@@@@[@ =/,0@@@@ /@GU/,0@3/OT
)@@G@@8L@@D-O/)@@[/K@@D5[@@@].C@@@@6DQ@@@A)D\@N#@-)@@@) =@8@@@@@@@6,021HCALE,IOU
)@@G@@OR.  SB2 ERRCROSTA***** (029H @@K@#]@ .@GUDR@@@A) :@)@@@@@@@)D1@<]%CS^@@OV
)@@G@@@@@@@@/K@@F&[@@@].C/@@J*'^@@@@NED)  N DEFIOT BEE HAS NDS@@@A)D5[F#@-<K0@OW
)@@G@@)CS^G]@@@@@@/K@@D5[@@@].D@@@##/K@@D"1@@@@G*@@@@G[@@@##C@]@AMR@)@].DT@@@AOX
)@@G@@)D"[F#@CS[#@-)[@@@@@@@@@/K@@EJ*@@@@JG/0__9[@0@# +@)@##C/)@@B[@@@#^;K@@@#OY
)@@G@@C@@@##DU@@@A)EB[F#@-)K0CS^@K0C@@@@@@C/@@@B/K@@DQ[@@@#]C/@@@[/K@@EI*@@@#]OZ
)@@G@@[@@@#]C@@@#^ @@@]_DV@@@A)EK[N#@C@-)K[#@@@@C/)@@[ @@@@G*@@@# C/@@@[/K@@ECPA
)@@G@@[@@@]_C/@@@[/K@@EQ*@@@@GH@@@# DW@@@A)EU[N#@]@-)K0]A@@@[@)@[^C_)@@[G@)@]5PB
)@@G@@C/)__"[@@@]7C@@@]?/=K@F&)@@@@I @@@@I*@@@]5DX@@@A)E=[F#@CS^G]A[#@CS^DK@@@PC
)@@G@@/,0@@@[@)@]8C@+@@[O@)@H R@)@]7[@@@]7G@@@]7C/@@@[[#)@];DY@@@A)E![F#@-)K^GPD
)@@G@@@-)^[#@@@@@@C@@@# /K@@F#(@@@@GH@@@#AC/@@@]@AX@GU/K@@F=@@@@#A@@@@]8DZ@@@APE
)@@G@@)E6[E[@K^G] L#@-)@@@@@@@@A<@GU@@[@ \/,0@@@@A+@GU/,0@3//K@@F=1@@@@G*@@@@GPF
)@@G@@G/@__.EA@@@A)E_@N#@-)@@@) \@8@@@@@@@6,033HCALE,IOR.  SB2 ERRCROSTA***** PG
)@@G@@(029H @@K@]8@@K@#]EB@@@A) 6[C@@@@@@@@@@[C@@@@@@@ERIC) IS NUM,011H BLE,I4PH
)@@G@@ VARIALE BUTTE SCADISCRE IS A EC@@@A)F[[F]%)]A@K^[#@-O@@@@@@/,0@@@@A:@GUPI
)@@G@@/,0@3//K@@FK(@@@@GH@@@# C/@@@[/K@@F='^@@@@ED@@@A)FE@<#@-)K0CS@@@@@) _@)@PJ
)@@G@@@@@@@@B2 ERRCROSTA***** (029H @@K@]8@@K@#]@A?@GU@@[@ _EE@@@A)A#[S@@@@@@@PK
)@@G@@ALPHAN6H IS ,I4,01RIABLEBUT VASCALE RANGE  IS A 6,030HCALE,IOR.  SEF@@@APL
)@@G@@)AI@K@)FI@3]%)CS^[]Q-)@@@@@@@@@@@@]8/,0@@@/K@@F=(@@@#^/K@@F='^@@@@)     PM
)@@G@@UMERICEG@@@A)FO[F#@)CS^G]A@^[@@@@@@@/,0@3//K@@F=1@@@@G*@@@@GH@@@#^C@@@#BPN
)@@G@@@A4@GU/K@@F=@@@@#BEH@@@A)FX[F#@-OK0CS^G]A[]%C@@@8L@@E=G_)@@['^@@@@@@K@#]PO
)@@G@@@@K@]8@A8@GU@@[@AK/,0@@@@A7@GUEI@@@A)AK[S@@@@@@@ IS  L4,053HABLE,IF VARIPP
)@@G@@IDTH OIELD WOR.  FB2 ERRCROSTA***** (047H EJ@@@A)AV[C@@@@@@@@@@[C@@@@@@@PQ
)@@G@@I6)   SCALE,TH OF UE WIDLE VALUM SCA MAXIMAN THEESS THEK@@@A)F&[N@K0@-)@PR
)@@G@@^G@@@@H[@@]\C.@@@ C/)@@[ @@@@G*@@@@IH@)@]\C/)@@[C/@@@[@A_@GU/,0@42EL@@@APS
)@@G@@)F0[M@K[#@C]A@@@@@C@@@@B/K@@^=*@@@@GH@@@]\C/@@@ /=K@F")@@@@I @@@@I1@@@@KPT
)@@G@@*@@@@KEM@@@A)F'[F#@C]@-)K^G]A[#@@@@@C@)@]?[@@@#CC@@@]./K@@H.(@@@]5/K@@BJPU
)@@G@@/K@@^=*@@@@GH@@@G#EN@@@A)G#[F#@CS@K0CS^G@@@@@@@@C/)@@[[@@@].C@@@#C[#)@];PV
)@@G@@[[@@[^C_)@@[G[@@]5C.@__"[@)@]7EO@@@A)GG[F#@-)K0CS[#@-)K^GS@@H[@@OR/K@@G9PW
)@@G@@*@@@].[[@@]8C[]@@[O@)@H R@)@]7[@)@]7G@)@]7EP@@@A)GP[M^@K1*@-)^G@@@[@@@#DPX
)@@G@@;K@@@[G@@@]8C/@@@[/K@@G9[[@@OSC.@@@[/K@@GV0@@@@K*@@@@KEQ@@@A)GZ[N#@CS@^GPY
)@@G@@]AH#@@;C)@@O;))K#EC@+@G+]@@@#EG/@__";@@@@)G/@__"H@@@]8;@@@@<R@)@#DER@@@APZ
)@@G@@)G([F#@-)K^[#@-OK0CS^G@@@@K@]1@BX@GU@@[@A=/,0@@@@BW@GU/,0@3//K@@G6*@@@#FQA
)@@G@@[@)@#FES@@@A)G2@N#@-)@@@)A=@8@@@@@@@AS NOTCALE HOR.  SB2 ERRCROSTA***** QB
)@@G@@(055H @@K@]8@@K@]2ET@@@A)A:@8@@@@@@@)G4@N]%)@@@@/K@@G9'^@@@@E,I4) ARIABLQC
)@@G@@,008HV,A6,A2D FOR DEFINE BEEN EU@@@A)G6[MK0CS@K0@@@@@@C.@@J*C/)@@[ @@@@GQD
)@@G@@*@@@@IH@)@].C/)__"C/@@@[]@@@].H@@@#FC/@^8)EV@@@A)H@[F#@@)CS^G@-)@@@@@@@@QE
)@@G@@[@@@#F;@@@@+C@@@]8 @@@]./)K@HA)@@@@I @@@@I*@@@@KH[@@].EW@@@A)HD[F#@]@-)KQF
)@@G@@0]A@@@@@@@@@C/@@@[[[@@#GC.@@@][@)@].D@)@]./K@@HX0@@@@I*@@@@ID@)@].EX@@@AQG
)@@G@@)HM[F#@C@-)K0CS^G]A@@@@@C@)@].[@@@#FG@@@#FC@@@#G[@@@#GC/@@@[/K@@HR(@@@@HQH
)@@G@@+@@@].EY@@@A)HV[EK0CS[#@-)^G]A@@@@@@[@@@#FG@@@]";@@@@<[@@@#FG@@@].;@@@@UQI
)@@G@@C@@@#F[@)@].;K)@@#EZ@@@A)H=[EK0CS^G]A[@^[@@@@@@@/,0@3//K@@H5*@@@@I/C)@H?QJ
)@@G@@H@)@@[C@)@]&[@@@#FG@@@]4;@@@@TFA@@@A)H!@:#@-OK0CS^G@@@)A2@S@@@@@@@CROSTAQK
)@@G@@***** (032H @@K@@[@B6@GU@@[@A2/,0@@@@B5@GUFB@@@A)A5[K@@@@@@@@@@@@@DED)  QL
)@@G@@ EXCEEIABLESTE VARORDINA30H COF,I4,0IMIT OOR.  LB2 ERRFC@@@A)H2[F]%-<K0]QM
)@@G@@A[#@-)K0CS0@[@+@U;C@)@#FR@)@]&[@@@]&G@@@]&C/@@@[[@@@]&C@@@O*'^@@@@FD@@@AQN
)@@G@@)H;[MK[#@C]@CS@@@@(@@@@GH@@@]0C/@@@ /K@@]</K@@^M(@@@@GH@@@]\C/@@@A8L@@GCQO
)@@G@@G_)@@[FE@@@A)I [N@^G@)]A@K^G@@D@@@@B/K@@I4*@@@@GH@@@]\C/@@@]/K@@JJ(@@@@GQP
)@@G@@H@@@]\C/@@@ /K@@L$FF@@@A)IJ[]^[]S-)K0CS^G@)A_@C@(I10) @@K@@B@CE@GU@@@@A_QQ
)@@G@@@@[@@D/,0@@@/K@@I41@@@@G*@@@@GFG@@@A)IR[F]%-)K0CS[#@]A@@@@@@[#)@@5N.@@@FQR
)@@G@@C_)@@[[@)@#[C/)@@[[@@@@C[@@@@BC@@@F.'^@@@@FH@@@A)I)[F]I-)K0CS^G]A[#@C@@@QS
)@@G@@/K@@I1(@@@@GH@@@F.C@@@#H@CO@GU@@@@#H@@@@@5@@@@@D/,0@@@FI@@@A)I([F]G-)K0CQT
)@@G@@S^G@-)K0@@@@G_)@@[[@@@#[G@@@#[C/@@@[@CR@GU@@@@#H@@@@#[@@@@@B/,0@@@FJ@@@AQU
)@@G@@)I2[F@K^G]A[@K0CP^G]A@@@@CY@GU@@[@B@/,0@@@@CX@GU/,0@3/[@@@@DC@@@GE/K@@JJQV
)@@G@@8L@@IZFK@@@A)I;@F]%@@@@@)B@[@@@@@@@@ SPECIA FILEAVEDATOR.  SB2 ERRCROSTAQW
)@@G@@***** (083H '^@@@@FL@@@A)BC@8@@@@@@@)I/@M@@@@@@@C/)@@BC/@@@[FIED)  SPECIQX
)@@G@@OPERLYR IMPRSING OON MISFICATIFM@@@A)I"[N#@@CS@^@@@@@@/=K@]<)@@@@I @@@@IQY
)@@G@@*@@@@KH[@@]\C.@@@[C/)@@[ @@@@G*@@@@IH@)@]\FN@@@A)JC[EK0]@)CS^[#@-)@@@@@@QZ
)@@G@@[@@@@DC@@@@B/K@@I/@C>@GU/,0@42/K@@L=(@@@@GH@@@]\C/@@@AFO@@@A)JL[##@-)K&*RA
)@@G@@S^G]A[#@-)@@@@@@@@@@@@#L@@@@#K@@@@#J@@@@#I@@@@@D/,0@@@[@)@@EC@)@@CFP@@@ARB
)@@G@@)JT[N#@CS^G@]A[@@@*@@@@K/D@@J=D[@@#IC/)@@[ @@@@G*@@@@IH@)@GFC@)@@DC/@@@[RC
)@@G@@@C(@GUFQ@@@A)J<[M^[#K)CS@K^D0@/,0@@@/K@@J81@@@@G*@@@@GD@@@#I/K@@K%(@@@@@RD
)@@G@@/=K@LY+@@@@I @@@@IFR@@@A)J![##@-)K0CS^G]A[#@-)@@@@@@@@C[@@@J[@)@#NC@)@@IRE
)@@G@@[@@@#MC@@@@H@C0@GU@@@@@F@@@@@DFS@@@A)J5[F#@-)K0]A)[#@@@@@@@@[#)@@5[@@@[^RF
)@@G@@R/)@@]C_)@@[G@@@@@C/@__"[[)@#PC[)@@K[[@@#OFT@@@A)J"[F#@]@.*K^D2@-)@@@@@@RG
)@@G@@@@@@@F@@@@K /,0@@@^^K@K N8MJ_"/K@@KV1@@@@G*@@@@GD@@@#IFU@@@A)KB[F#@-)K0]RH
)@@G@@@-)K0]@@@@@@/K@@K$*@@@@GH@@@#NC@@@@I/K@@K$*@@@@GH@@@#MC@@@@H@C;@GUFV@@@ARI
)@@G@@)KK[F#@-)^[#@-)^[#@@@@@@C@@@@5/K@@K$*@@@@GH@@@#PC@@@@K/K@@K$*@@@@GH@@@#ORJ
)@@G@@C@@@@JFW@@@A)KT[F#@)]A-#@@-)@@@@@@@@C[@@@DC/)@@[ @@@@G*@@@@IH@)@@EC@+@@@RK
)@@G@@C/@@@[/K@@LY[@@@@DFX@@@A)K+[N;K@)@)CU^G@@@H@@@@ C@@@@@8L@@J.G_)@@[O/)@@]RL
)@@G@@/=K@KS+@@@@I @@@@I*@@@@KH[]J_"FY@@@A)K?[F@^[@K0CP^G]A[#@@@@@@@K@@ @DH@GURM
)@@G@@@@[@BJ/,0@@@@DG@GU/,0@3//K@@K7*@@@@G/C@@K\FZ@@@A)BJ[S@@@@@@@XCEEDEILES ERN
)@@G@@TPUT F22H OUF,I3,0IMIT OOR.  LB2 ERRCROSTA***** (032H GA@@@A)BU@C@)K5@;]RO
)@@G@@%-*^H]A)K0@@@@@@@@C@)@@D;@@@@<[@@@@@G@@@@@C/@@@[ @@@@@'^@@@@D)    GB@@@ARP
)@@G@@)K/[F;K-)K4CS^@K^[#@@@@@@DR@GU/,0@3//K@@LG*@@@@G/C@@L#D@@@#I[[G@@@C[@@@ERQ
)@@G@@[@?J_"GC@@@A)L @:]*-)K0CS^G@@@)BV@S@@@@@@@CROSTA***** (029H @@K@@E@@K@@DRR
)@@G@@@DS@GU@@[@BV/,0@@@GD@@@A)BY[S@@@@@@@E)    UM FIL OR DRA TAPEED AS ASSIGNRS
)@@G@@H NOT A6,036ILE ,2OR.  FB2 ERRGE@@@A)LE[N]%)]A@K[#@C@@/K@@LW(@@@@GH@@@#JRT
)@@G@@C/@@@[/K@@LW(@@@@GH@@@#IC/@@@]/K@@LW'^@@@@GF@@@A)LO[#@K0CP^G]A[#@-)K%)@@RU
)@@G@@@@@@@@'^@@@@@@K@@E@@K@@D@D<@GU@@[@B(/,0@@@@D+@GU/,0@3/GG@@@A)B([S@@@@@@@RV
)@@G@@ PARITBE ODD MUST 6,019HLE ,2AAPE FIOR.  TB2 ERRCROSTA***** (034H GH@@@ARW
)@@G@@)B4@C@)LW[##K-)K^G@-)^@@/K@@I6*@@@@GH@@@]\C/@@@A@D(@GU/,0@42[@@@@DC@@@@@RX
)@@G@@Y)    GI@@@A)L=[F@K0C]A[#@-)K0C@@@@@*@@@@G/C@@L,H@@@@]C@@@]$[@@@@DC@@@GGRY
)@@G@@/K@@L(@D?@GU/,0@42GJ@@@A)L!@;@K^G] L#@-)K0@@@@@@)B5@C@(032H @@K@@]@D2@GURZ
)@@G@@@@[@B5/,0@@@@D1@GU/,0@3//K@@L7GK@@@A)B6[S@@@@@@@ONTROLDATA CD SAVEBLE ANSA
)@@G@@42H TAF,I4,0IMIT OOR.  LB2 ERRCROSTA***** GL@@@A)C[@S@)L4@3]%-<K0]A[#@@@SB
)@@G@@[@@@]$G@@@]$C/@@@[[@@@]$C@@@O('^@@@@DED)   EXCEE WORDSGM@@@A)L'[EK0CS4G]SC
)@@G@@AH@K0CS^G@@@C@@@]$@D'@GU@@@@F_/,0@68[[G@-EC[@@@E[@?@-DC@)@@DT/@@@#GN@@@ASD
)@@G@@)M#[MK0CS0K0@@@@@@C.@@@[ @@@@G1@@@@K*@@@@KH[@@]\C.@@@[C/@@@[[@?@-FC@)@]*SE
)@@G@@T/@@@#GO@@@A)MH@;#@@]@@@)C^@K@@@@@@@______FEW   /=K@MY+@@@@K @@@@K1@@@@MSF
)@@G@@*@@@@MG.)__8C[)@]\GP@@@A)MO[F]A-)K0CS^G]A@@@@@@@[@@@@@G@@@@@C/@@@[@D"@GUSG
)@@G@@@@@@]2@@@@]1@@@@C^@@@@G[/,0@@@GQ@@@A)MX[F@K0CS^G@)CS^G@@@@@@*@@@@GH@@@F.SH
)@@G@@C@@@@C/K@@M/*@@@@GH@@@GHC@@@@BR@)@]*/K@@]<GR@@@A)M&[N@K1*]A@^G@@@@C/)@@[SI
)@@G@@ @@@@G*@@@@IH@)@]\C/)@@BC/@@@[@EA@GU/,0@42 @]@>7/K@@M/GS@@@A)M0[MK0@C@-)SJ
)@@G@@^@@@@@/K@@NJ*@@@@GH@@@]\C/@@@A/=K@MO)@@@@I @@@@I*@@@@KH[@@]\C.@@@[GT@@@ASK
)@@G@@)M'[F@K0CS^G]A@^G@@@@@@@*@@@@IH@)@]\C/)@@]C/@@@[[@@@]7C@@@]? @@@]5@EF@GUSL
)@@G@@/,0@42GU@@@A)N#[M[#@@)]A@@@@@@H@@@]\C/@@@^/=K@N,)@@@@I @@@@I*@@@@KH[@@]\SM
)@@G@@C.@@@ C/)@@[ @@@@GGV@@@A)NH[EK^G]@-^K0CS^G]A@@@@@EO@GU@@@@]2@@@@]1@@@@G]SN
)@@G@@/,0@@@/K@@NV*@@@]3/K@@O((@@@@GGW@@@A)NQ[M@K0@-)@@@@@@@ @@@@G*@@@@IH@)@]\SO
)@@G@@C/)@@BC/@@@[[@)@]3C/)@@[[@@@@@G@@@@@C/@@@[GX@@@A)N)[M^G@]@CS@@@@@@(@@@@GSP
)@@G@@H@@@]\C/@@@A/=K@]<)@@@@I @@@@I*@@@@KH[@@]\C.@@@[C/)@@[GY@@@A)N%[F@K^G]@CSQ
)@@G@@S[@K0@@@@@@@C@@@@B/K@@OP(@@@@GH@@@]\C/@@@]/K@@NV@EV@GU/,0@42/K@@M'GZ@@@ASR
)@@G@@)N3[F#@C]A[@K+*S^G]@@@@@/K@@N"@@@@]8@@@@@B/,0@@@/K@@PX @@@]8/K@@N8*@@@@GSS
)@@G@@H@@@GIHA@@@A)N/[F#@)CS^G]A[#@)]A@@@@G@)@@7C/)__"/K@@OP(@@@]5[@K@]/+@@@@BST
)@@G@@C@@@@P/K@@OP@E<@GUHB@@@A)O [F#@-)^@[#@-)@@@@@@@@C@@@@P[#)@#Q[@)@[^R/)@@]SU
)@@G@@C_)@@[/K@@P;(@@@@KH[@@GHC[@@@BHC@@@A)OI[F#@-)^@^[@K0@@@@@@@@@E1@GU/,0@5?SV
)@@G@@8L@@OGG_)@@[O/)@@]/K@@P;(@@@@HH@K@]/+@]@@6HD@@@A)OR[F#@)]A@K0]@)@@@@@@@@SW
)@@G@@/,0@3//K@@PX*@@@@GH@@@#AC/@@@][@@@]8C/@@ZK/K@@OV*@@@]8HE@@@A)O)@;#@-OK0CSX
)@@G@@S^G]A[#@@@@@)CA@C@(045H @@K@]2@@K@]1@@K@]8@E7@GU@@[@CA/,0@@@@E6@GUHF@@@ASY
)@@G@@)CB[S@@@@@@@ED WITPECIFI016H SLE,I4,VARIABATION CCUMULOR.  AB2 ERRCROSTASZ
)@@G@@***** HG@@@A)CM@8@@@@@@@)O$@N]%)@@@@/K@@PX'^@@@@MERIC)LPHANUD IS AOL WORTA
)@@G@@HCONTRA4,028H ,A6,HH@@@A)O([F#@-)K0CS^[#@-)K0C@@/C@@O4H@@@]9C@@@]'@F@@GUTB
)@@G@@/,0@6O[@)@]'C@)@@C[@@@]9C@@@@BHI@@@A)O2[EK[#@-)K0CS[#@@@@@@@[#)@];[@)@[^TC
)@@G@@C#)@]9H@)@]9C@)@]'[@@@]\C/@@@]/K@@P:*@@@@GHJ@@@A)O;[F#@-)K^G@-)^[@@@@@@@TD
)@@G@@/,0@3//K@@PG*@@@@GH@@@#AC/@@@]@FC@GU/,0@5?[@@@@BC@@@];HK@@@A)P^[F#@-OK0CTE
)@@G@@S^G]A[#@-P@@C/@@@['^@@@@@@K@]2@@K@]1@@K@];@FG@GU@@[@CA/,0@@@@FF@GUHL@@@ATF
)@@G@@)PH[F#@-)^G]A@K[@@@@@@@@/K@@]T*@@@@I/G)@PQH@)@@@[@)@]7G@)@]7C/)@@[[@@@]5TG
)@@G@@G@@@]5HM@@@A)PQ[F#@-)K0@)C@-)@@@@@@@G@@@]5C/@@@[/K@@P:8L@@O'G_)@@[[@+@@[TH
)@@G@@C@)@];O@)@H R@)@]7HN@@@A)PZ[F#@CS^G@)]@-)@@@@@@@R@)@]7/K@@]T*@@@@I/G)@P$TI
)@@G@@H@)@@@[@)@]7G@)@]7C/)@@[[@@@]5HO@@@A)P*[N#@-)^[#@CS@@@1@@@@I*@@@@IG/)__9TJ
)@@G@@C@)@]\C/@@@[@FX@GU/,0@42[@+@@[C@)@]8O@)@H HP@@@A)P2[M[#@@C]A@@@@@@ @@@#RTK
)@@G@@/=K@M_+@@@@I @@@@I1@@@@K*@@@@KH[@@]\C.@@@[C/)@@[ @@@@GHQ@@@A)P/[N#@CS@@^TL
)@@G@@G@@@@@H[@@]\C.@@@[C/)@@[ @@@@G1@@@@I*@@@@IG/)__9C@)@]\C/@@@[ @@@#SHR@@@ATM
)@@G@@)QA[M@K^G]@-)K0@@@C/)__"[@@@]7C@@@]?/K@@U:(@@@]5/=K@Q(+@@@@I @@@@I1@@@@KTN
)@@G@@*@@@@KHS@@@A)QK[F#@]A@K0CS^G]A@@@@@@O@)@H R@)@]7[@@@]7G@@@]7C/@@@[[#)@];TO
)@@G@@[@)@[^C_)@@[G@)@]5HT@@@A)QT[EK0CS^[@K0CS^G]@@@@@/K@@Q&@F,@GU@@@@GJ@@@@]8TP
)@@G@@/,0@9I/K@@Q+(@@@]8[@)@]8C@+@@[HU@@@A)Q+[F@K0CS^G@)C@-)@@@@@@H@@@]\C/@@@ TQ
)@@G@@/K@@U:8L@@QNG_)@@[@F0@GU@@@@F_@@@@GK/,0@9IHV@@@A)Q:[EK^G]A[#@C]A[#@@@@@@TR
)@@G@@H@@@F.C@@@@C/K@@Q8*@@@@GH@@@GHC@@@@B @@@#R/K@@NJ*@@@@GHW@@@A)Q4[MK^G]@CSTS
)@@G@@@^G@@@[#)@#Q[@@@[^R/)@@]C_)@@[G@@@@7C/@__"/K@@SU @@@#Q/K@@Q8*@@@@GHX@@@ATT
)@@G@@)Q"[N#@-)^[#@-)^@@G_)@@[O/)@@]/K@@SU(@@@@GH@]@@7C@@@@C/K@@RA*@@@@GH@]@@6TU
)@@G@@C@@@@BHY@@@A)RC[F@^G]^X#@-)K0CS^G@@@C@@@#H@GC@GU@@@@#H@@@@@5@@@@@B/,0@@@TV
)@@G@@[@@@@5C/@@@G8L@@Q.HZ@@@A)RL[N#@C@-)K0@)C@@/K@@RF/K@@SL1@@@@G*@@@@G]@@@@5TW
)@@G@@H@@@@5C/@@@[/K@@RV*@@@@GH@@@F.IA@@@A)RV[N#@-)^G]A@@@@@ @@@@I0@@@@G*@@@@GTX
)@@G@@H/@__"C/)@@[]@@@#RH@@@#RC/@@@\[)@@#RC4@@#HIB@@@A)R>@'^G@@@@@)CT@K@@@@@@@TY
)@@G@@______      )@)@@G @@@@G1@@@@K*@@@@KH[@@#RC.@@@CC/@@@[IC@@@A)R?@:@K<CS^GTZ
)@@G@@]A@@@@)CV@K@@@@@@@@@@@@@______P     @@@@CT@@@@@5@@@@@B/,0@@@/=0@SLID@@@AUA
)@@G@@)R1[F#@CS[@K<CS^G]A@@@@@@@@@CV@@@@@5@@@@@B/,0@@@/K@@R;*@@@@GH@@@@5C/@@@GUB
)@@G@@@GN@GUIE@@@A)R'[N#@CS@^G]A[#@@*@@@@GH@]@@6C@@@@B[#)@#Q[@@@[^R/)@@]C_)@@[UC
)@@G@@G@@@@7C/@__"@GP@GUIF@@@A)S^[F@K0CS[@[@K<@@@@@@@@/,0@@@8L@@S@G_)@@[O/)@@]UD
)@@G@@/K@@SU(@@@@GH@@@@CC@]@@7/K@@SDIG@@@A)SH[F#@-)K0CS^[#@-OK0CS@@G-@GU@@[@CXUE
)@@G@@/,0@@@@G)@GU/,0@3/@GZ@GU@@@@#H@@@@@5@@@@@BIH@@@A)SQ@N#@-)@@@)CX@8@@@@@@@UF
)@@G@@ND SAVABLE AOR.  TB2 ERRCROSTA***** (056H @@K@@C@@K@@BII@@@A)C=[@@@@@@@@UG
)@@G@@)SS@F]%@@@@@'^@@@@)     ILABLEOT AVA014H N ,2A6,OPTIONENTRY EDATA IJ@@@AUH
)@@G@@)ST[N@^G]A@K0CS[@@*@@@@I/G)@S=H@)@@@[@)@]7G@)@]7C/)@@[[@@@#SG@@@#SC/@@@[UI
)@@G@@/K@@S%IK@@@A)S<[F@K0CS^G@-)^[#@@@@@@@G?@GU/,0@42[@+@@[G@)@#Q;@)@@XC@)@#RUJ
)@@G@@O@)@H R@)@]7/K@@]TIL@@@A)S?[MK0@@CS@@@@@@@*@@@@KH[@@]\C.@@@[C/)@@[ @@@@GUK
)@@G@@1@@@@I*@@@@IG/)__9C@)@]\C/@@@[IM@@@A)S6[M[@^G@CS@@@@@@ @@@@I*@@@]5C/)@@[UL
)@@G@@ @@@@G*@@@#SC/@@@[/=K@Q(+@@@@I @@@@I1@@@@KIN@@@A)T@[MK^G]A[#@CS[@@*@]@@@UM
)@@G@@/K@@TM*@@@@GH@@@#SC/@@@[O@)@H]O@)@]5R@)@]?/=K@U:)@@@@IIO@@@A)TE@3@K^G] LUN
)@@G@@#@-)@@)C?@S@CROSTA***** (062H @G6@GU@@[@C?/,0@@@@G5@GU/,0@3//K@@TMIP@@@AUO
)@@G@@)C\[C@@@@@@@@@@[C@@@@@@@N)     OPTIO ENTRYE ONLY BE THCANNOTOFREQ OR.  NUP
)@@G@@B2 ERRIQ@@@A)TK[F]%)CS^G@-)[#@@@@@@@[#0@];[@)@[^C_0@@[G@)@]5C/)__"[@@@]7UQ
)@@G@@C@@@]?/K@@U:'^@@@@IR@@@A)TT[EK0CS^G]A[#@CS^G@@@@[@)@]7G@)@]7C/)@@[[@@@#TUR
)@@G@@G@@@]?C@@@]5[@@@HDG@@@#SC/@__"IS@@@A)T+[F#@-)^G@-)K0]A@@@@@@G@@@#TC/@@@[US
)@@G@@[#)@#UN[K@HDC_)@@[[[@@]8C[]@@[O@)@H R@)@]7IT@@@A)T:[F#@-)K0@-)[#@@@@@@@@UT
)@@G@@[[@@#R;L@@@BC[]@@[[@0@#Q+@+@@[C/)@[_O@)@H R@)@#T[@@@#TIU@@@A)T4[N#@)@)@CUU
)@@G@@S@@@@@*@@@@OD]@@#QC/)@@[ @@@@M*@@@@J/G0@T;G/0__5C.)@@[/K@@UO*@@@]8IV@@@AUV
)@@G@@)T"[M[@K^G]A[#@-)@;@)@@<C@)@#Q[@@@]/C@@@GH@HF@GU/,0@3//>0@UO+[)@@I @@@@IUW
)@@G@@1@@@@OIW@@@A)UC[F#@-)K^G]A[#@-OK0CS@@HJ@GU@@[@C8/,0@@@[@@@]/C@]@@6R@)@HEUX
)@@G@@/K@@UI(@@@#Q[@)@HEIX@@@A)UL@F#@@@@@@)C8[@@@@@@@@TION ,TRY OPELL ENOR.  CUY
)@@G@@B2 ERRCROSTA***** (042H @@K@]/IY@@@A)D@@0@@@@@@@)UM@V]%)CS@@*@@@#Q/K@@U$UZ
)@@G@@'^@@@@Q)    TH FRETED WIPERMITH NOT A6,024IZ@@@A)UP[F@K0]A[@K0CS^G@@@@@@VA
)@@G@@*@@@@GD@@@#Q@HP@GU@@@@HE/,0@68[@@@HE;@@@@YC@@@]8/K@@UWJA@@@A)UY[EK[#@-)KVB
)@@G@@^G]A[#@@@@@@@HR@GU@@@@HE@@@@]8/,0@9I[@@@HEG@@@#QC/@@@[/K@@U$1@@@@GJB@@@AVC
)@@G@@)U$[MK[@^G@)@@@@@@C/)@@[C/@@@[/K@@M'(@@@@GH@@@]\C/@@@A8L@@TSG_0@@[8LK@T*VD
)@@G@@G_)@@[JC@@@A)U1[N#@@CS@^@@@@@@/=K@]<)@@@@I @@@@I*@@@@KH[@@]\C.@@@BC/)@@[VE
)@@G@@ @@@@G*@@@@IH@)@]\JD@@@A)U;@:@K0]@@@)DA@K@)V@@F@@@@@@@/K@@VW______BVSUBRVF
)@@G@@*@@@@G/C@@V[G/@__3C@@@]0/K@@Q(JE@@@A)V[[#]Y-)K0CS^G]@-)K@@@@@@@@@@/K@@VMVG
)@@G@@@H<@GU/K@@VD@@@@#W@@@@#W@@@@#V@@@@DA/,0@@@JF@@@A)DC@K@)VD@3])-)K0CS^G]@@VH
)@@G@@@@@@@@/K@@VW@@@@F_@@@@F_@@@@#V@@@@DC/,0@@@______BVSUBRJG@@@A)VJ[F#@-)YOGVI
)@@G@@@-)K0CP=G@@@@@@@GL/,0@@@]@@@HDH@@@]0C/@@@GR@)@#V @]J_"R@)@#V@H>@GUJH@@@AVJ
)@@G@@)VS[N#@-)YR=^G@@@@C/)@@[ @@@@G(@@@@IH@)@]\C/)@@[C/@@@[[@MJ_")@]J_"@H$@GUVK
)@@G@@@@@@HDJI@@@A)V+[MK0@C]A[#@)@@@*@@@@G/C@@V!H@@@@^C@@@](/=K@V.+@@@@I @@@@IVL
)@@G@@(@@@@KH[@@]\C.@@@BJJ@@@A)V?@;@K^G] L#@-)K0@@@@@@)DE@C@(032H @@K@@^@H!@GUVM
)@@G@@@@[@DE/,0@@@@H?@GU/,0@3//K@@V6JK@@@A)DF[S@@@@@@@S EXCEECTIONCS SELATISTIVN
)@@G@@31H STF,I4,0IMIT OOR.  LB2 ERRCROSTA***** JL@@@A)DQ@C@)V3@;]%-<K0]A[#@-)VO
)@@G@@@@@@@@R@)@]([@@@](G@@@](C/@@@[[@@@](C@@@O:'^@@@@EDED) JM@@@A)V'@;#@-<K[#VP
)@@G@@@)@@@@)DR@K@______MANY  *@@@@G/C@@W]H@@@]0C/@@@C/K@@]<[@+@?BC@)@]0JN@@@AVQ
)@@G@@)W[[F@K-*S^G]A[#@-)@@@@@G@@@@@C/@@@[@H7@GU@@@@]2@@@@]1@@@@DR@@@@G[/,0@@@VR
)@@G@@/K@@WGJO@@@A)WE[MK@K0@]A@@@@@@H[@@]\C.@@@]C/)@@[ @@@@G*@@@@IH@)@]\C/)@@ VS
)@@G@@C/@@@[/K@@V*[@@@@@JP@@@A)WO[M[@^G@)CS^@@@@/K@@W**@@@]3/K@@X#(@@@@GH@@@]\VT
)@@G@@C/@@@^/=K@W7)@@@@I @@@@I*@@@@KJQ@@@A)WY[F]C-)K0CS^G@@@@@@@@@C/)@@[[@@@@@VU
)@@G@@G@@@@@C/@@@[@I@@GU@@@@]2@@@@]1@@@@G]/,0@@@JR@@@A)W$[N#@)CS@K0@@@@@C.@@@[VV
)@@G@@C/)@@[ @@@@G*@@@@IH@)@]\C/)@@BC/@@@[@I#@GU/,0@42[@)@]3JS@@@A)W1[N#@@)C@-VW
)@@G@@)^G@@@H@)@]\C/)@@][@@@]9C/@__"/K@@WG/=K@]<)@@@@I @@@@I*@@@@KH[@@]\JT@@@AVX
)@@G@@)W;[EK^G]A@K^G]@-)@@@@@@C@@@@B/K@@X( @@@]8/K@@XM*@@@@IH@)@GIC@)@@B/K@@XMVY
)@@G@@(@@@@IJU@@@A)X^[F#@-)K0C]A[#@-)K@@@@*@@@@G/C@@XIH@@@]9C@@@]'@IK@GU/,0@6OVZ
)@@G@@[@)@]'C@)@@C[@@@]9JV@@@A)XH[F@^G]A[#@)CS^G]@@@@@/K@@XW*@@@]8@IP@GU/,0@5?WA
)@@G@@[@@@@BC@@@]9[@@@]\C/@@@]/K@@W*JW@@@A)XQ[EK0CS[#@-)^G@@@@@@@@*@@@@GH@@@#AWB
)@@G@@C/@@@][@)@@AG@)@@AC/)@@[[@@@]8G@@@@AC/@@ZKJX@@@A)XZ[F@K^G] L#@-)K0CS^G@@WC
)@@G@@@@K@]2@@K@]1@@K@]8@IX@GU@@[@CA/,0@@@@IW@GU/,0@3//K@@X(JY@@@A)X*[F]%-)K0CWD
)@@G@@@)C]A[]*@@@@/,0@@@@I=@GU/,0@3//K@@X7*@@@@G/C@@X,H@@@@^C@@@]('^@@@@JZ@@@AWE
)@@G@@)X1[F#@-)K0CPOGUA@K0CS@@[@@@](G@@@](C/@@@[[@@@](C@@@O:'^@@@@@@K@@^@I>@GUWF
)@@G@@@@[@DEKA@@@A)X'[F#@-)^G]AH#@)]@@@@@@/K@@W**@@@@K/H@@Y#D[@@]9[@+@?BG@)@]0WG
)@@G@@;@)@@YC@)@]8R@)@](KB@@@A)Y#[MK0CS^G@C]@CS@H@@@]&C/@@@[/K@@W*/K@@XK0@@@@KWH
)@@G@@*@@@@KH[@@]'[[@@]9G[@@]9C.@@@[KC@@@A)YH[N@^@K0]@)]A@@@G@@@]&C/@__"/K@@)0WI
)@@G@@/K@@)!(@@@@GH@@@]-C/@@@[/K@@YP*@@@@G/C@@YKKD@@@A)YR[F#@-)K0]AGK^EEA@@@@@WJ
)@@G@@@@@@GK/,0@@@8L@@YV[@#)@[C@])U;[@@@[^Q@0@H^R@0@GNR@)@GMKE@@@A)Y)[F#@CS^G]WK
)@@G@@A[#@-)K0CS@@[@@@#XC@@@]&@I;@GU@@@@#W@@@@GK@@@@#W@@@@#W@@@@@@@@@@]&KF@@@AWL
)@@G@@)Y([EK0CS^G@CS^G]A@@@@@@O@0@H]R@0@#Y[[@@#Z;L@@@SC[]@@[O@)@H R@)@#Y[@)@#YWM
)@@G@@C/)@@[KG@@@A)Y2[E^G]A@K[#@-)@@@@@@@@[@@@#YG@@@#YC/@@@[/K@@Z[(@@@@GH@@@#ZWN
)@@G@@[@@@#);K@@@SC@#@@@KH@@@A)Y;[F#@C]A[#@)CS^G@@@@@@C/@@Z_O@)@H R@)@#Y/K@@Y0WO
)@@G@@[@@@#ZC@@@#)/K@@Z4(@@@@GH@@@]&KI@@@A)Z^[EK0CS^G@CS^G@@@@@@@@*@@@@HH@K@#+WP
)@@G@@[@0@#++@<@@@C/)@Z_O@0@H]R@0@#Y[@K@#-+@]@@[KJ@@@A)ZH[N@[#@CS@K0@@@@+[)@@GWQ
)@@G@@C[)@GO;K@@@GC@#@@@[[K@#-+[@@@GC[@@GO;K@@@GC@]@@[/K@@ZVKK@@@A)ZR[F#@-)^@KWR
)@@G@@0CS^G]A@@@@@O@)@H R@)@#X[@@@#XG@@@#XC/@@@[/K@@Y8*@@@@LH[K@#+[[0@#+KL@@@AWS
)@@G@@)Z)[F#@CS^G@CS^G]A@@@@@@H@@@]&[@@@#YG@@@#YC/@@@[ @#@@@O@0@H]R@0@#Y[@+@@[WT
)@@G@@C@)@#)KM@@@A)Z([MK^G]A@^G]A@K@/K@@Z+(@@@@GH@@@#Z[@@@#);K@@@SC@]@@@O@)@H]WU
)@@G@@R@)@#Y/K@@Z4(@@@@GKN@@@A)Z3[F@K0CS[@K^G]A[#@@@@@H@@@]&C@@@#X@JV@GU/,0@3/WV
)@@G@@/K@@)((@@@@GH@@@]&C@@@#X/K@@Y8KO@@@A)Z/[E[#@-@K0CS[#@@@@@@@@G@@@]&C/@@@[WW
)@@G@@@JW@GU@@@@HD/,0@@@[@@@HDG/@@@[W/@@@A;O@@@=KP@@@A)) [F#@CS^G] L#@-)K0CS@@WX
)@@G@@H[)@#@C[)@#X@JY@GU@@[@DT/,0@@@[@)@HDG@)@]&C/)__"[@@@#@KQ@@@A))I[##@-)K0@WY
)@@G@@CP4@@@)DT@C@(117H 8L@@)N'^K@@@C8#)@[[[)@[^Q@0@@OR@0@GNG]@@#@C]@@H KR@@@AWZ
)@@G@@)DU[S@@@@@@@ES APPARIABLTROL VOL/CON ROW/CLOWINGHE FOLOR.  TB2 ERRCROSTAXA
)@@G@@***** KS@@@A)D>[S@@@@@@@HE SAM,016HTTH/80X OR WINSIONST DIMEFFEREN IN DIXB
)@@G@@N ONCERE THAEAR MOKT@@@A)D0@)@@@@@@@))Q@:]%CS[@@/K@@)0(@@@@GH@@@]-C/@@@]XC
)@@G@@'^@@@@,6I4))4/(96XE -,6IE SCALKU@@@A))V[F#A-)K0]@CS4GUAG@@@@R@0@O*[@@@O*XD
)@@G@@G@@@O*C/@@@[/K@@)&(@]@@[N[@@HDR@)@H^ @@@O*KV@@@A))=[MK1+@)]A@K^G@@C@@@]&XE
)@@G@@/K@@)0(@@@@GH@@@]-C/@@@]/K@@<"8L@@)YO/)@@[[@<@U;C@+@@[KW@@@A)),[F#A)CS^GXF
)@@G@@@-)K[#@@@@@@G@@@]&C/@__"/K@@-+(@@@]& @@@@@ @@@#= @@@#</K@@<"[@@@O*KX@@@AXG
)@@G@@))7[M[#A-)^G@)@@@@C/@@@[/K@@-#*@@@@GH@@@#FC/@@@][@K@#F+@#@U;C/@@B_[@@@[^XH
)@@G@@R/0@@[KY@@@A)-[[F#@-)^G@)]A[#@@@@@@@[@@@#=G@@@#=C/@@@[/K@@-E*@@@@GH@@@#FXI
)@@G@@C/@@@[[@@@#<G@@@#<KZ@@@A)-E[MK0]@@C@@@@@@@C/@@@[8L@@)9O/0@@[[@@@@@G@@@@@XJ
)@@G@@C/@@@[/K@@-L*@@@@GH@@@#FC/@@@#LA@@@A)-O[F#@C]@-)K%CS^G] O@@@'^@@@@@KE@GUXK
)@@G@@@@[@D4/,0@@@@KD@GU/,0@3//K@@-X*@@@@GH@@@#=LB@@@A)D4[S@@@@@@@D)    DEFINEXL
)@@G@@IABLE OL VARE ROWCNLY ONOR.  OB2 ERRCROSTA***** (056H LC@@@A)-X[F#@CS[@KXM
)@@G@@^G] L#@@@@@@@@[@D_/,0@@@@KJ@GU/,0@3//K@@-(*@@@@GG@@@#=G@@@@@C@@@#<LD@@@AXN
)@@G@@)-&@F#@@@@@@)D_[@@@@@@@@ VARIAOR COLO ROW OR.  NB2 ERRCROSTA***** (057H XO
)@@G@@@KK@GULE@@@A)EB@S@)-$@;]%)]A@@*@@@@@C/)@@[ @@@@G*@@@#<C/@@@[/K@@<"'^@@@@XP
)@@G@@ED)    DEFINBLE ISLF@@@A)-,[M^@K0]A@@@@@@@*@@@@@C.@@@[ @@@@I*@@@#<C/)@@[XQ
)@@G@@G@@@]&C/@__"/=K@<"+@@@@I @@@@ILG@@@A)-8[M^@^G@-<K0@@@@C/)@@[[@K@#F+@]@U;XR
)@@G@@C/@@B_A@)@@5[@@@[^R/)@@[/=0@<^)@)@@K @@@@KLH@@@A)+][M@^G@]@@@@@@@@/=0@<[XS
)@@G@@+@)@@G @@@@G(@@@@KH[@@#FC.@@@]C/@@@[ @@@@I(@@@@HG/K__/LI@@@A)+G[F#ACS^G]XT
)@@G@@A@K[#@@@@@@@+@)@#FC/)@Z_/K@@<[*@@@@J+@)@#FC@)@GP[@@@#F;K@@@GC@]@U;LJ@@@AXU
)@@G@@)+P[N#@CS^@[#A-)@@*@@@@KH[@@##C[@@@]C/)@@[ @@@@G*@@@@I/C)@+VD@)@##C/@@@[XV
)@@G@@[@0@##LK@@@A)+Z[M[@K0CS4G@C@@@/K@@+?1@@@@G*@@@@G[@@@#FC@#@AMR@0@##/=K@<[XW
)@@G@@)@@@@I @@@@I1@@@@KLL@@@A)+([F#@-)K[#@-)K0@@@@@@@G/K__;C/)@@[R@0@##[@K@#FXX
)@@G@@+@@@#FC/@@@B/K@@+Q[@@@##D@@@#FLM@@@A)+2[U@K0@@)@/=0@<[)@)@@G @@@@G1@@@@KXY
)@@G@@*@@@@KG.@__"C[@@#FC/@@@[ @@@@I0@@@@H*@@@@HLN@@@A)+.[N;C]@C]@-)K^@@/,0@3/XZ
)@@G@@/K@@<G(@@@](/K@@<"8L@@-.O/)@@[/K@@<^(@@@@GG/@__"C@#J_"LO@@@A)<B@:#@-OK0CYA
)@@G@@S^E*@@)EE@S@@@@@@@CROSTA***** (084H '^@@@@@K4@GU@@[@EE/,0@@@@K3@GULP@@@AYB
)@@G@@)EH[S@@@@@@@E-WAY R A ONTED FO SELECNOT BES MAY TISTICTE STAIVARIAOR.  BYC
)@@G@@B2 ERRLQ@@@A)ES@C@)<G[##@)]A@^G@@@@@C/@@@_A@0@@5[@@@[^R/0@@[G@@@]*C/@__"YD
)@@G@@/K@@<"(@@@]*TABLE)LR@@@A)<O[N#A-)^@K[#@@@@1@@@@G*@@@@GH@@@#FC/@@@E/K@@<5YE
)@@G@@*@@@@H/CK@<UG/K__7[@K@#F+@#@>7LS@@@A)<Y[N@K0]@C@-)@@@@1@@@@G*@@@@GH@@@#FYF
)@@G@@C/@@@O/K@@<5*@@@@G/C@@<=G/@__?C@@@#F/K@@<8LT@@@A)<*[N@^G]A@K[@^G@@+@@@#FYG
)@@G@@C/@@@[/K@@<5*@@@@G/C@@<0H/@__0]@@@#FH@@@#FC/@@@O/K@@<8LU@@@A)<2[F#@-)K[@YH
)@@G@@K^[#@-O@@@@@/,0@@@@LI@GU/,0@3//K@@<"8L@@<MO/0@@[/K@@<8*@@@#F[@K@#FLV@@@AYI
)@@G@@)<;@V#@-)K%))ET@0@@@@@@@OUBLE-OR.  DB2 ERRCROSTA***** (128H '^@@@@@LJ@GUYJ
)@@G@@@@[@ETLW@@@A)EZ[S@@@@@@@Y NOT ONS MAY OPTIL ENTRP) CELUE (EXED VALEXPECTYK
)@@G@@) AND ED (DCCENTERLX@@@A)E%@0@@@@@@@)<"@V#@)@@@@C/@__"/K@@>F(@@@](E)    YL
)@@G@@Y TABLONE-WAFOR A ECTED BE SELLY@@@A)=[[F#@-)K0CS[#AC@@@@@@@C/)@@[8L@@=AYM
)@@G@@[@#)@[C@])?B[@@@[^Q@0@H^R@0@GNR@)@GMG@@@](LZ@@@A)=E[F#@C]  #@-)^G]A@@@@@YN
)@@G@@@@@@#W@@@@#W@@@@@@@@@@](@@@@GK/,0@@@/K@@>F(@@@@IH@)@](MA@@@A)=N[F#@-)K0CYO
)@@G@@S[#@-)@@@@@@C@]@@[[@@@[^R@)@H]G@@@](C/@__. @@@#>@LV@GU@@@@#W@@@@GKMB@@@AYP
)@@G@@)=W[M^@K0@)CS^@@@@/K@@>F(@@@#>8L@@=VO/)@@[ @]@@@[@@@#>C/@@@[/K@@=+*@@@@GYQ
)@@G@@H@]@@@MC@@@A)=&@3]@-)K0CP^G]A@)E0@S@TATISTSOME S(089H @L(@GU@@[@E0/,0@@@YR
)@@G@@@L*@GU@@@@F_/,0@@@MD@@@A)E3[S@@@@@@@IC WILTATIST PER SOUTPUTINGLE ONLY SYS
)@@G@@NCE.  THAN O MORE LECTEDICS SEME@@@A)E"@K@)=?@;]%-)^G]A@@@@@(@#@@[[@@@[^YT
)@@G@@R@0@H^G@@@](C/@__" @@@#Y'^@@@@ADE.) L BE MMF@@@A)=3[N@^G]A[#@-)@K@8L@@=2YU
)@@G@@O/0@@[[@+@@[C@<@@[O@)@H R@)@#Y[@@@#YG@@@#YC/@@@[/K@@=;MG@@@A)=.[F#@-)[#@YV
)@@G@@C]A[#@@@@@@@R@0@GNR@)@GM/K@@>F(@@@@IH@)@]-C/)@@]G/@__"[@@@](C@@@#YMH@@@AYW
)@@G@@)>A[N#@]AH@^G@)CS@C@@@]*/K@@>U(@@@@GH@@@]-C/@@@]8L@@>C[@])?BC@#)@[[@@@[^YX
)@@G@@Q@0@H^MI@@@A)>K[F#A-)K1*S^GUA[#G)C@@/K@@3FN@0@>T[[)@@@C[)@]%[[@@O:C[@@](YY
)@@G@@[@)@O(C@)@]$[@@@O%MJ@@@A)>T[F#@C]@)CS[#A-<@@@@@@[@@@O&G@@@O&C/@@@[@MA@GUYZ
)@@G@@/K@@3FN@0@>Y/K@@>Z(@@@@@@M^@GUMK@@@A)>+[EK0CS^G@-)K[#@@@@@@@G[@@]*C.@__"ZA
)@@G@@/K@@&[(@@@]* @]@@@O@)@H]R@)@]([@)@#&C/)@@[ML@@@A)>:[E^G]A[#@-)K1*S@@@@@@ZB
)@@G@@;KK@@A[@K@#$+@#@>7C@@@GQO@)@H]R@)@](A@0@@6[[@@[^R/0@@[MM@@@A)>4[F#@CS^G@ZC
)@@G@@)C]@-)@@@@@@@@@@#*@@@@>;/,0@'L^^K@>;N8M@@@[@0@]-+@)@#$C/)@@_[@K@#*MN@@@AZD
)@@G@@)>.[F#@-)^[#@)CS^G@@@@@@C/@@@[O@)@H]R@)@](/K@@&=(@@@](8L@@>!O/0@@[@MM@GUZE
)@@G@@@@@@]-MO@@@A)&A[M^G@-)^G]A[#@@C@#@@[O@)@H]R@)@]([#)@@6[@)@[^R@0@H^C_)@@[ZF
)@@G@@G@)@](C/)__"[@]@@@MP@@@A)&K[EK0]A[#@-)K[#@@@@@@@[@@@]-C/@@@F/K@@&T(@@@#*ZG
)@@G@@A@)@HD[@)@]-C/)@@[[@@@#*;K@@@AMQ@@@A)&T[F#@C]@)CS^G]A@@@@@@@O/0@@[@MY@GUZH
)@@G@@@@@@]-@@@@#*@@@@&X/,0@'L^^K@&XN8M@@@R@)@HDMR@@@A)&+[MK[#@C]A[#@@@@[@]@@@ZI
)@@G@@C/@@@[O@)@H]R@)@](/K@@&!*@@@@GH@@@#&C/@@@[8L@@&GG_)@@[MS@@@A)&?[N@K2*@-)ZJ
)@@G@@K0]A@@C/@@@[[@)@[^G@)@#&C/)__.[@@@#YG@@@](C/@@@[/K@@&_(@@@@@/K@@$SMT@@@AZK
)@@G@@)&6[F#@-)K0CS@^[@@@@@@@@/K@@$S8L@@&5[@3@@[)@<@@[C/)@@[O@0@H R@0@#Y[@@@#YZL
)@@G@@G@@@#YMU@@@A)&_[F#@-)K0]A[#@-)@@@@@@C/@@@[[@)@[^O@)@H]R@)@](G@)@#&C/)__"ZM
)@@G@@[@@@#YC@@@]( @@@#GMV@@@A)$C[F#@-)K0CS@K0]A@@@@@@)@)@#G;^)@@=[@0@#(+@<@@[ZN
)@@G@@C/)@@[O@0@H R@0@#Y[@@@#YG@@@#YMW@@@A)$L[N#@@)@CS^G@@@@[@@@#YG@@@](C/@@@[ZO
)@@G@@[[+@@@C.)@@[8L@@$B[[N@@[+[#@@[C.@__"[@0@#GMX@@@A)$V[F#@-)^G]A@K0CS^G@@@@ZP
)@@G@@O@0@H]R@0@#%G@)@#&C/)__" @@@#?[@@@#:G/@@@[[@@@#%G@@@#&MY@@@A)$=[F#@-)^G]ZQ
)@@G@@A[#@-)^G@@@@[@@@#!C@^@@[R[@@HDA[@@HDO[@@H R[@@#Y[@)@[^O@)@HBR@)@#%MZ@@@AZR
)@@G@@)$![MK0]A@K0@-)K0@C@@@#G[#)@#,N.K@@^C_)@@[[@)@#GC/)@@[[@@@#*;@@@@-[@@@#*ZS
)@@G@@;K@@@ANA@@@A)$7[F#@-)K0C@-)^@@@@@@@@C/@@@[/K@@*]*@@@@GH@@@#,C/@@@[/K@@*EZT
)@@G@@(@@@#\[@K@#\+@@@#!NB@@@A)*@[F#@-)^G]A[#@-)K0CS@@G@)@#,C@)@#*O[@@HBR[@@#:ZU
)@@G@@[@@@#:G@@@#:C/@@@[[@@@#?G@@@#?NC@@@A)*D[MK0]A@K[#@-)K@8L@@$$[@)@#YG@)@#YZV
)@@G@@C/)@@[8LK@$5G_)@@[[@@@#G;@@@@<C@@@#G[@=@@[ND@@@A)*N@3#@-)^G]A@@@@@)F@@K@ZW
)@@G@@@@@@@@______WRITE [[+@@[C[)@]=[[@@#0G.@__"H[@@#%C[@@#:NE@@@A)*T[E[@K0CO=ZX
)@@G@@G]A[#@@@@@@@@@@@HD@@@@F@@@@@GR/,0@@@[[@@HD^^K@*+N8M@@[G.@@@][[#@@@NF@@@AZY
)@@G@@)*+[F@K0CS^G]A[#@CS@@@@@[@=@@[C@)@#0[@^@@@C@@@]&O[@@H]R[@@#%@NP@GU@@@@#1ZZ
)@@G@@@@@@*+NG@@@A)*:[F#@CS^G]@CS^G]@@@@@@/K@@(C(@@@]([@@@#2C/@@@^/K@@*2(@@@](AA
)@@G@@ @@@#2[[^@@]C[@@#?NH@@@A)*4[MK0CS@[@^G@@@@)@@@#2C/@@@[/K@@*_*@@@@GG/@__8AB
)@@G@@C@#@@[[@@@[^R@0@HAG@@@](C/@__"NI@@@A)*"[N#@@)]A[#@C@@@8L@@*8O/0@@[[@K@#2AC
)@@G@@)@@@#2C/@@@]/K@@(A*@@@@GG/@__7C@#@@[[@K@#2NJ@@@A)(C[F#@)CS^G8-)@@@@@@@@@AD
)@@G@@[@@@[^R/)@@#C_)@@[G@@@]$C/@__" @@@@B @@@#3/K@@%%(@@@]$NK@@@A)(L[F#@-)K0CAE
)@@G@@S4G]AGK0CS@@C@@@]$[@)@#8G/)__"C@+@-I[@@@#7C@]@-F @@@#6 @@@#5[#)@#4NL@@@AAF
)@@G@@)(U[F#@C]A[#@-)K0CS@@@@@[@@@[ R[@@#7H@@@#7C@@@#8[@@@#8C@@@]*/K@@(Z*@@@@GAG
)@@G@@H@@@#4NM@@@A)(<[MK1*S[#@)C@@@@*@@@@HG/K__"C/)@@[/GK@%F/@K@(9[@K@#!H/K@@AAH
)@@G@@[@K@#!+@^@>7C/@@@_NN@@@A)(![M[#@@)]A@@@@@@H@@@#!C/@@@G/=0@(9)@)@@G @@@@GAI
)@@G@@*@@@@KH[@@#!C.@@@FC/@@@[ @@@@INO@@@A)(7[MK[#@-)K[#@-)@*@@@@G]@@@#!H@@@#!AJ
)@@G@@C/@@@I/K@@%F[@@@#5G@@@#5C/@@@[/K@@(.*@@@@GNP@@@A)%[[EK[#@-)K0C@-)@@@@@@@AK
)@@G@@G@)@#6C/)@@[/K@@%F(@@@#![@K@#!+@@@#!C/@@@[/K@@%F1@@@@GNQ@@@A)%E[F#@C]AX#AL
)@@G@@@]@-)@@@@@@@C@@@#5/K@@%O1@@@@G*@@@@GH@@@#5C@@@@B8LK@(<O.@@@[[@)@#6NR@@@AAM
)@@G@@)%N[F#I-)K0@)CS^G@@@@@@@O/)@@#[@@@#3C@@@#6/K@@%V1@@@@G*@@@@GH@@@#6C@@@#3AN
)@@G@@[@@@@BNS@@@A)%W[EK^G]@CS^G]A@@@@@@@@;@@@@-C@@@#3[@@@#3G@@@#3C/@@@[/K@@%<AO
)@@G@@(@@@#38L@@(LG_)@@[NT@@@A)%>[##@-$[#@-)K0CS@@@@@@@@@@@@C@@@#2O@0@H]R@0@#%AP
)@@G@@[@@@#2G@@@@I;@)@@SC@)@@BG@@@#2NU@@@A)F]@K@)%!@'K0CS[@K(CS@@@@@@@GL/,0@@@AQ
)@@G@@^^K@%6N8O@@[O[@@HBR[@@#%[@#@@#______WRITE NV@@@A)%4@<#@-)K^G@@@@@@)F^@K@AR
)@@G@@)%8@F#@@@@@@@OP@GU______WRITE @@@@#1@@@@%6@@@@GA@@@@F]NW@@@A)%9[F]=-)K0CAS
)@@G@@S^GUA[#@CS@@*@@@](C/@@@[@OQ@GU@@@@#1@@@@U/@@@@]&@@@@F^@@@@GL/,0@@@NX@@@AAT
)@@G@@):][M^G*C]A[#@@@@@C/)@@[C/@@@[O@)@H]R@)@](/=K@:<)@@@@I @@@@I*@@@@@C/)@@[AU
)@@G@@ @@@@GNY@@@A):G[N#@)@CS@K^G@@@R@0@](/=K@:<)@@@@I @@@@I*@@@#?C/)@@[ @@@@GAV
)@@G@@*@@@@I/C)@:KH@)@#&NZ@@@A):Q[N#@-)^@K[@K^@@@@@@:Z/,0@;3^^K@:-N8N@@@^^K@:ZAW
)@@G@@N8L@@@^^K@:)N8M@@@O@0@H]O@0@#&OA@@@A):)[F@K^G@-)K0CS[#@@@@@@[@@@#:G/@@@[AX
)@@G@@ @@@#'[@@@#%G@@@](C/@@@[@OV@GU@@@@:-@@@@:)OB@@@A):([F#@)CS^@K0CS^GUAG@@@AY
)@@G@@[@)@-I[[@@-GC[@@GG[@)@]$C/)@@[/K@@0S*@@@](/K@@:6*@@@]$OC@@@A):2[MK0CS4GSAZ
)@@G@@-)@K0@[#@@#4[@@@[^R.@@@#C_@@@[G@@@]$C/@__"[@)@>9[@)@>8[[)@]*C.)@@]OD@@@ABA
)@@G@@):/[F#@-)K0CS4G]AGK0CS@@C@@@]$[@)@#8G/)__"C@=@-I[@@@#7C@^@-FA@)@HDO@)@H]BB
)@@G@@R@)@#:OE@@@A)? [F#@C]A[#@-)K0]@@@@@@/K@@\.(@@@@GH@@@#7C@@@#8[@@@#8C@@@]*BC
)@@G@@/K@@?E*@@@@GH@@@#4OF@@@A)?I[EK0CS^GUA@K1)@@@@@@@C.)@@#[[#@@[C[^@-E[@<@@@BD
)@@G@@R@0@HDC@=@-D[@@@#'G@@@#'C/@@@[OG@@@A)?R[F#@-)^G]A@K0]A@@@@@@G])@#7C")@@[BE
)@@G@@[]@@#/G"@@@[[]@@#:G]@@#:C"@@@^[[)@#;G[)@#:OH@@@A)?)[F#@-)K0CS4[#@CS^GS@@BF
)@@G@@C@#@>7A@0@#9]])@[ R@0@#7/K@@?5(@]@>6H])@#8R@)@#7[])@#7OI@@@A)?([M^@K[#@-BG
)@@G@@)K0CS@O@)@HBR@)@#:[@@@#:G@@@#:C/@@@[8LK@?$O/0@@[/K@@?5(@@@@GG/@__"OJ@@@ABH
)@@G@@)?3[E^G]A[#@-)K0]A@@@@@@A@)@#9[@@@[ R@)@#7O@0@HBR@0@#;H@@@#7C@@@#8[@+@@[BI
)@@G@@C/)@@[OK@@@A)?/[F#A-)K2*]A[#@-)^G@@@[@0@#*;K0@@A[@0@#$+@)@#!C@)@GQ/K@@,VBJ
)@@G@@(@@@@@[@@@#!C@]@>7OL@@@A)! [N#@)]A@K@K0CS@C[@@#:[@0@#.G/0@@[;@0@@Y/K@@,VBK
)@@G@@(@@@@L+[@@#!C.@@@_/K@@,V(@@@#*OM@@@A)!J[F#@)]@-)K0CS^G]A@@@@C#)@#/G[)@#/BL
)@@G@@C[)@HBG[@@#:D[@@#//K@@,O*@@@@K/D@@!NH[@@#/ON@@@A)!S[M^G]A@K0]@@@@@G_)@@[BM
)@@G@@O.K@@[/K@@,V(@@@@GH@@@#.C@ @@[[#)@#"[[@@HE[[@@[AR[K@@MOO@@@A)!+[F@K0CS^GBN
)@@G@@]A[#@-)K0CS@C@@@GQO[K@HBR[K@]7[#)@#"N[)@HEC#)@#/[@@@]7C@@@#:8L)@!VOP@@@ABO
)@@G@@)!:[M^G]A@K^G@@@@@(@@@@GH@ @@[;@@@@YC@@@#*/K@@!;*@@@@HH@K@#*[@K@#_;KK@@ABP
)@@G@@+@ @@[OQ@@@A)!5[F@^G]A@K[#@-)@@@@@@@[@@@]7G@@@#9C/@@@[8L)@!$G_)@@[]@@@]7BQ
)@@G@@H@@@]7C/@@@[/K@@,VOR@@@A)!"[F#@-)K[@K0CS^GS@@@@@;KK@@A+@ @>7C@@@GQR[K@]7BR
)@@G@@/K@@,O*@@@@G/C@@,#H@@@]7C@@@#8OS@@@A),B[N#@-)^[#@CS1@@C/@@@[/K@@,V(@@@@GBS
)@@G@@H@ @>7;@@@@YC@@@#*/K@@,O*@@@@HH@K@#*[@K@#_OT@@@A),L[F#@-)K[#@-)K0CS^G@@@BT
)@@G@@C@)@#.O[K@HBR[K@#:[@@@#:G@@@#:C/@@@[/K@@!"[@@@]7G@@@]7OU@@@A),U[E^G]A[#@BU
)@@G@@-)K0@@@@@@@@O/)@@[[@>@@[C@)@#!O[K@HBR[K@#:[@@@#:G@@@#:C/@@@[[@>@@[OV@@@ABV
)@@G@@),<[F@K0]A[#@-$K0@@@@@@@1@@@@G*@@@@GH@@@^@C@@@@CA@0@HE[@@@^@H/@__"H@@@#/BW
)@@G@@8LK@?;OW@@@A),?[F@K0CT4G]A@K0CS^G@@@C[@@HB[@)@^[C@)@#:[@ @@[R[K@HEC@@@^@BX
)@@G@@[@@@@CC@@@^@/K@@,\OX@@@A),5[F#@-<K0]@-)K0C@@@@@@C.)__"/K@@\8(@@@](H@)@#/BY
)@@G@@/K@@\8*@@@@MH[)@GGC[=@-DG[@@#/OY@@@A),"[F#@CS^G@-)K0CS@@@@@@C@#@@[[#0@##BZ
)@@G@@[[@@HG[@)@HF[[)@[ R@0@HAR@)@HAC_0@@[G[)@](OZ@@@A)\B[F#@-)K[#@-)K[#@@@@@@CA
)@@G@@+@)@#!C/)@@)/K@@\W(@@@#*[@@@#*;K@@@A/K@@\4(@@@#![@@@#!PA@@@A)\K[N#@-)K@KCB
)@@G@@0C]A@@G/@@@[;@@@@YC@@@#*/K@@\Y[@@@#.G/@@@F;@@@@Y/K@@\R*@@@#G[@0@#GPB@@@ACC
)@@G@@)\U[F#@)]A[#@-)K0CS^G@@@C@@@GQ[#)@#"N[)@HFR[K@HGC#)@#/[@@@#.C/@@@[/K@@\YCD
)@@G@@[@@@#.PC@@@A)\<[EK0CS[@^G]A[#@@@@@@@R[)@#:[@@@#:G@@@#:C/@@@[/K@@\1*@@@@HCE
)@@G@@H@K@#.[@K@^]+@ @@[PD@@@A)\?[N#@-)[@[@@@@@@O/0@@[O/)@@[8L)@\-G_)@@[O.K@@[CF
)@@G@@/K@@\4 @]@@[[@&@@[C@)@#!O[)@HBPE@@@A)\6[MK^G]A[#@-)@K@8L@@:;G_@@@[O.@@@#CG
)@@G@@]@A@@@H@@@#:C@@@^[O[)@H]R[)@#;8LK@\ G_0@@[PF@@@A)0@[N#@)]A[#@CS@@@(@@@@HCH
)@@G@@+@ @@[C/@@@)[@@@HD[@@@[^R[K@HAG@@@](C/@__"/K@@2=(@@@](PG@@@A)0E[N@[@^G]ACI
)@@G@@[#@C@@/K@@0S*@]@@[[#)@##N[@@HDR@)@HAC_)@@[8L@@0BO.K@@[ @ @@[/K@@0GPH@@@ACJ
)@@G@@)0O[E^[@^G]A[#@-)@@@@@@@O@0@H]R@0@#:[@@@#'G@@@#'C/@@@[/K@@2=8L@@0LG_)@@[CK
)@@G@@O/)@@[PI@@@A)0X[F#@]A[#@CS^G@@@@@@@@C"@__"[[)@#:G[)@#:C.)@@^[[@@#;G[@@#:CL
)@@G@@C.@@@#[@<@@@C@)@GGPJ@@@A)0&[F#@CS^G]A[#@]A@@@@@@R[@@#;[]&@@[C")@@[O[)@HBCM
)@@G@@R[)@#:[[)@#:[[)@#/G.)@@[G]@@](PK@@@A)0\[F#@-)K0CS[#@CS^G@@@@[]@@HH[[)@HDCN
)@@G@@[]@@[^R@)@HAC_0@@[O[K@HBR[K@#;G[)@HBO[@@H]PL@@@A)08[F#@-)K0CS[#@-)K@@@@@CO
)@@G@@;K@@@A/K@@1.(@@@#![@@@#!C@]@@[[@@@HIG@@@#:D@@@#/[#0@##PM@@@A)1[[F#@-)K[#CP
)@@G@@@-)K0C]AO@@@(@@@@@/K@@1>*@@@#G[@0@#G+@)@#!C/)@@)/K@@1.(@@@#*[@@@#*PN@@@ACQ
)@@G@@)1E[F@[#@-)K0CS^G@@@@@@@C@#@@[[#)@^#N[K@HIR@0@HDC#)@#/[@@@#.G/@@@[;@@@@YCR
)@@G@@/K@@1)PO@@@A)1N[N#@C@C@-)K0CS@R[)@#:[@@@#:G@@@#:C/@@@[8LK@1LG_)@@[O/0@@[CS
)@@G@@/K@@1)(@@@@GH@@@#.PP@@@A)1X[F#@-)^G@CS^[#@@@@@@@C@@@#*/K@@1([@@@#.G/@@@FCT
)@@G@@;@@@@YC@@@#*[@&@@[C@)@#.O[)@HBPQ@@@A)1&[E^G]A[#@-)K0]A@@@@@@[#)@^#[@@@[ CU
)@@G@@R@0@HDC#)@#/G@@@#:D@@@#/[@@@#.G/@@@[;@@@@YPR@@@A)1\[MK0]@]@CS^G@@@[@@@#:CV
)@@G@@G@@@#:C/@@@[8LK@1,G_)@@[O/0@@[/K@@1.(@@@@GH@@@#.C@#@@[PS@@@A)19[F#@-)K0@CW
)@@G@@C]A[#@@@@@@@H@@@#:C@@@#/8L@@08G_0@@[O/)@@[[@&@@[C@)@#.O[)@HBR[)@#:PT@@@ACX
)@@G@@)2][EK0CS^G]AX#@]@@@@@@@/K@@2H1@@@@G*@@@@GH@@@^@C@@@@CA[K@HIA[@@HD]@@@^@CY
)@@G@@G/@__"PU@@@A)2F[F#@-$K0CS[#@-)K0CS@@N[@@HHR[)@HA[@)@^[C@)@#:[@#@@[R@0@HICZ
)@@G@@C@@@^@[@@@@CC@@@^@PV@@@A)2O[EK0CS^@K0CS^G]A@@@@@O@)@HBR@)@#:[@)@#:G@)@#:DA
)@@G@@C/)@@[/K@@2Y(@@@#![@@@#!C@A@@[PW@@@A)2X[E^[#@-)K0]A[#@@@@@@@O[K@HBR[K@#%DB
)@@G@@]@^@@@R[@@HDH@@@#:C@@@^[8L@@2OO.)@@[[@]@@[PX@@@A)2&[F#@CS[#@-)K0]A@@@@@@DC
)@@G@@C@@@#:[@<@@@C@)@#'O@0@H]R@0@#%[@ @@[G@@@]%;@@@@<C@@@]=PY@@@A)2\[F#@CS^G]DD
)@@G@@AX#@]@@@@@@@/K@@2'1@@@@G*@@@@GH@@@^^C@@@@EA[K@HD[@@@^^G/@@@[H@@@#%PZ@@@ADE
)@@G@@)28@F#@@@@@@)FA@K@)29@<#I-)^@@@@@@@@^^K@3[N8M@@[R@)@HD[@@@@E______WRITE DF
)@@G@@C@@@^^QA@@@A)2.[F]=-)K0CS^[#@-)K^@@@/K@@3FN@0@3A@R4@GU@@@@#1@@@@3[@@@@^^DG
)@@G@@@@@@FA@@@@GA/,0@@@QB@@@A)3A[F#@-)K?]A[#@-)K0CS@@9,)@HN9,@@HL9!)@HJR]0@GVDH
)@@G@@[^)@GSH8)@@[/K@@@@!^)@GS@R5@GUQC@@@A)3J[##@-)K0CS^G]A[#@-)@@@@@@@@R[)@HYDI
)@@G@@R[K@HXR[@@HWR@0@HVR@)@HUR@K@HT9\)@HR9\@@HPQD@@@A)3R@<#@-)K0CS@@@@@)GS@C@DJ
)@@G@@)3V@N#@-T@@@/K@@@@/K@KGS@@F@@@*4@KGSN[)@H-N[K@H)N[@@HZQE@@@A)GU@K@)3X@2KDK
)@@G@@0CS^G]A[#@@@@@@@@@9%)@HN9%@@HL9()@HJ[^@@GSAA0@GVC8@@@D@R5@@[S22TABQF@@@ADL
)@@G@@)3<[##@-)K0CS^G]A[#@-)@@@@@@@@A[)@HYA[K@HXA[@@HWA@0@HVA@)@HUA@K@HT9:)@HRDM
)@@G@@9:@@HPQG@@@A)3:[F#@-)K0C@]^[#@@@@@@@@@@@F_/,0@@@[@@@@@G@@@@@C/@@@[/K@@/]DN
)@@G@@^[)@H-^[K@H)^[@@HZQH@@@A)34@3#@)C]A[#@-)@@)GW@C@@@@@@@@@@@@@@@F@@[*4@KGWDO
)@@G@@R]0@GZ@R;@GY/K@@38N@0@37@R'@GYQI@@@A)3'@N#@-T@@@)GY@K@)3/@<#@)CS@@G/@__.DP
)@@G@@C@@@H]/K@@3\AA0@GZ@R;@@[ERROR /K@@@@/K@KGWQJ@@@A)4@[F#@-)K0@)]A[@@@@@@@@DQ
)@@G@@N@0@4E[@@@]\C/@@@B/K@@4F1@@@@G*@@@@GH@@@],C@@@]?[@@@H=QK@@@A)4D[F@K0CS^GDR
)@@G@@@CS^G]A@@@@@O@K@H]R@K@],[@@@]\G/@@@[C@[@@[O@K@H=R@K@],@S]@G+/K@@4!QL@@@ADS
)@@G@@)4M[EK0]A[#@C] (#@@@@@@@@SA@G+'^@@@@8];@4U$'0@@BRA0@]\[[@@@CC[[@@[[@)@@BDT
)@@G@@C@-@@@QM@@@A)4V[N@K^[@K^@K0CS@C/@@@[[@@@],G@@@],C/@@@[/K@@4$/K@@4-/K@@4-DU
)@@G@@/K@@4=/K@@4=/K@@4-QN@@@A)4>[F#@-)^G]A[@K^G]A@@@@R]0@G<@SE@G+/K@@4!N@0@4?DV
)@@G@@[@@@],G@@@],C/@@@[[@@@],G@@@],QO@@@A)4,@N#@-)@@@)G)@C@)40@N#@-T@@@)G+@K@DW
)@@G@@@SE@@[NEXT  /K@@@@/K@KG)@@F@@[*4@KG)R@K@H>QP@@@A)42[F#@-)K[#@C]^P#@@@@@@DX
)@@G@@@@@@@B/,0@@@/K@@5E(@@@@GH@@@]\C/@@@]/K@@3"A@K@H>AA0@G<QQ@@@A)4;[F#@)CS^[DY
)@@G@@]^-)K0CS^G@@@@@@]1@@@@@C@@@@@B@@@@G=/,0@@@/K@@5V@SK@G*/K@@4_@@@@]8QR@@@ADZ
)@@G@@)5^[F#@-)@K^G]A[]&@@@@@@/,0@@@[@@@]8C@@@@B/K@@5<[@@@@@G@@@@@C/@@@[@SM@G*EA
)@@G@@@@@@]2QS@@@A)5H[F#@)CS^[]A-)K0CS^G@@@@@@]2@@@@]1@@@@]8@@@@G>/,0@@@/K@@5VEB
)@@G@@@SQ@G*/K@@5L@@@@]8QT@@@A)5Q[F#@@)CM=G]A[@@@@@@@@/K@@5=@@@@#A@@@@]8/,0@@@EC
)@@G@@/K@@5<[@@@@@G@@@@@C/@@@[@SS@G*QU@@@A)5Z[F#@)C]A[#@-)K^[#@@@@@SZ@G*/K@@5*ED
)@@G@@N@0@5$ @@@#A @@@]8@SW@G*/K@@5*N@0@5+@SV@G*QV@@@A)5*@N#@-)@@@)G&@C@)5%@N#EE
)@@G@@@-T@@@)G*@K@@SZ@@[CKVAR /K@@@@/K@KG&@@F@@[*4@KG&R]0@G(QW@@@A)5?[F#@)CS^GEF
)@@G@@]A@K0CS^G@@@[@@@^ C@@@];[#)@];[@@@[^C#)@]9H@@@]9C@@@]'/K@@45AA0@G(QX@@@AEG
)@@G@@)55[F]&-)K^G@)C]@-)@@@@@@S:@G!/K@@6IN@0@5.8L@@52G_)@@[@S*@G!/K@@5"@@@@^ EH
)@@G@@/,0@@@QY@@@A)5"[F]^-)K0CS^G]A[#@@@@@G@@@@@C/@@@[@S?@G!@@@@]2@@@@]1@@@@]'EI
)@@G@@@@@@^ @@@@G%/,0@@@QZ@@@A)6B[E^G]A[@K^G]A[#@@@@@@9\)@H*R]0@G,@S\@G!/K@@6IEJ
)@@G@@N@0@6H]@)@]'H@)@^ C/)@@[[@@@@@RA@@@A)6K@N#@-)@@@)G:@C@)6M@N#@-T@@@)G!@K@EK
)@@G@@@S\@@[CKVARI/K@@@@/K@KG:@@F@@[*4@KG:N[@@H%RB@@@A)6O[F#@-)K0C]A[#@)]@@@@@EL
)@@G@@/K@@6%*@@@@G/C@@6XH@@@@#C@@@]*/K@@5,^[@@H%9:)@H*AA0@G,RC@@@A)6X[E[]@-)K0EM
)@@G@@CP^G]A@@@@@@@S7@G1@@[@FC/,0@@@@S6@G1@@@@F_/,0@@@[@@@@@G@@@@@C/@@@[RD@@@AEN
)@@G@@)6&@F#@@@@@@)FC[@@@@@@@@40H OUF,I4,0IMIT OOR.  LB2 ERRCROSTA***** (032H EO
)@@G@@@@K@@#RE@@@A)FK@8@@@@@@@)6$@N]%-<@@@C@@@O%'^@@@@D)    XCEEDEIONS EIFICATEP
)@@G@@Y SPECUANTITTPUT QRF@@@A)6([F#@CS^G]A[#@-<K^@@@@/K@@63N@0@62[@-@>7C@)@H?EQ
)@@G@@R@K@]*[@@@]*G@@@]*C/@@@[[@@@]*RG@@@A)62@<#@-)K0CS@@@@@)G\@C@)66@N#@-T@@@ER
)@@G@@/K@@@@/K@KG\@@F@@]*4@KG\R@K@H!R]0@G2@S"@G1RH@@@A)G1@K@)68@;#@-)^G]@CS@@@ES
)@@G@@H@@@H\C/@@ZK/K@@6S[@K@H?C@VK@@A@K@H!AA0@G2@S"@@[STORE RI@@@A)6_[EK^[@K0CET
)@@G@@S[#A@@@@@@@@G/)@@[C@?@-FT/@@@#C@@@]$@T^@G6/K@@9#N@0@7#/K@@7^*@@@@GRJ@@@AEU
)@@G@@)7C[F#@-)K0CS^G@C@@@@@@@*@@@@M/D)@7MH[)@@@C.)@@F[[@@^CC[@@H\[@@@^BC@@@]*EV
)@@G@@[@)@^ARK@@@A)7L[N@^G*CS@K^G@@@ @@@^C/>0@7V)[)@@O @@@@O*@@@^CC"@@@[ @@@@MEW
)@@G@@(@@@@@C.)@@[/K@@7VRL@@@A)7V[M[@^G@-)K@@@@@C/@@@H/K@@76[@)@^EC/)@@ [@@@^DEX
)@@G@@C/@@@]/K@@7=*@@@@GH@@@@@C/@@@]RM@@@A)7>[M^@K0]A[@@@@@@H@@@@@C/@@@[/K@@76EY
)@@G@@[@)@^EC/)@@K[@@@^DC/@@@H/K@@7!*@@@@GH@@@@@RN@@@A)7\[F#@-)K[#@-)K0CS@@@@@EZ
)@@G@@;@@@@<C@@@^D[@@@^EC@@@^D[@@@^DC/@@@[/K@@74*@@@^D]@@@^DRO@@@A)78[N#@-)K0@FA
)@@G@@-)[#@@*@@@@IH@)@^FC/)@@[C/@@@[[#)@^F[@)@[^R@K@@GC#)@^DH@)@^DC@)@^ERP@@@AFB
)@@G@@)8][EK0CS[#@-)K0CS^@@@@@/C)@8HH@)@^AC@)@^B[@@@^GG@@@^F;@@@@YC@@@^C[@@@H0FC
)@@G@@ @@@@GRQ@@@A)8F[EK^G]A[#@CS^G]AG@@@@+@]@>7C@@@GQA@)@@6[@)@[ R@)@^AH@)@^AFD
)@@G@@C@)@^B/K@@86*@@@@IRR@@@A)8O[F#@-)^[@K0CS^[#@@@@@C@[@@6/K@@8%*@@@^C@T$@G6FE
)@@G@@/,0@3//K@@84*@@@@HH@K@^G[@K@^]RS@@@A)8X[F#@-)K^G]A[]*-)K0CS@@@K@#!@T!@G6FF
)@@G@@@@[@FR/,0@@@[@@@#!C@@@G3/)@@8+C@@@H0[@@@#!RT@@@A)8&@N#@-)@@@)FR@8@@@@@@@FG
)@@G@@PTION NTRY OOR.  EB2 ERRCROSTA***** (037H @@K@]2@@K@]1RU@@@A)FY[S@@@@@@@FH
)@@G@@WORD) NTROL 012HCOA6,A3,IN A , ONCE E THANED MORSELECT3H IS ,A6,03RV@@@AFI
)@@G@@)8*[F]%)CP^G]A[#@-)K0CS@@@K@]1@@L@@7@@L@@6@@K@^C@T4@G6@@[@F(/,0@@@/K@@8.FJ
)@@G@@'^@@@@RW@@@A)81@F#@@@@@@)F([@@@@@@@@ VAR.,PTION NTRY OOR.  EB2 ERRCROSTAFK
)@@G@@***** (042H @@K@]2RX@@@A)F1[S@@@@@@@NTROL 012HCOA6,A3, IN A N ONCERE THAFL
)@@G@@TED MO SELEC032HISA6,A4,I3,2X,RY@@@A)F/@C@)82[#]%)]@-)^G]A@@[@@@H1G@@@^GFM
)@@G@@;@@@@MC@@@#R8LK@8LO/)@@[/K@@8.'^@@@@WORD) RZ@@@A)8'[F@K0CS@K^[@K0@@@@@@@FN
)@@G@@@U]@G6/K@@9#N@0@9]8L@@7.G_)@@[O/K@@]@T_@G6@@@@H1/,0@68SA@@@A)9#[##@-)K0CFO
)@@G@@S^G]A[#@-)@@@@@@@@N[K@H;N[@@H'R@)@H9R@K@H89\)@H69,@@H49!)@H2R]0@G7SB@@@AFP
)@@G@@)9F@F#@@@@@@)G4@C@)9G@N#@-T@@@)G6@K@@@@@@@@U]@@[TESTOR/K@@@@/K@KG4@@F@@#FQ
)@@G@@*4@KG4SC@@@A)9I[F#@-)K0CS^G]A[#@-)@@C@VK@@^[K@H;^[@@H'A@)@H9A@K@H89:)@H6FR
)@@G@@9%@@H49()@H2AA0@G7SD@@@A)9R[F#@C]@)C]@-)K@@@@@@@/K@@9<*@@@H./K@@6.[^@@7,FS
)@@G@@[^@@7>[^@@7W[^@@7IC8FK@[[@K@H\SE@@@A)9)[F@K^G]A@K0CS[#@@@@@@C[@@H"G/)__"FT
)@@G@@C@)@H"G@@@#&C/@__"R@K@H.@UD@G'/K@@'DN@0@9+SF@@@A)9([M@K0CS@@@@@@@@*@@@@GFU
)@@G@@H@@@@@;K@@@AC@]@@[[#)@^H[[@@H_[@@@[^R@)@@IC_)@@[G.@__.SG@@@A)93[N@K0@)C]FV
)@@G@@A@^@@@8L@@9,G_)@@[O/)@@[@UK@G'/K@@'DN@0@99[@M@@[)@]@@[C@[@[./K@@9'SH@@@AFW
)@@G@@)9.[EK0CS^G]A@^G@@@@@@@@[@+@@[G@-@[.;@)@@YC@)@@@O@)@H_R@)@#&[@@@#&G@@@#&FX
)@@G@@C/@@@[SI@@@A)'A[F@K^G]A[#@-)K0CS^G@@*4@KG8N[@@I^R@)@I#R@K@I]9\)@I@R]0@G;FY
)@@G@@@UP@G'/K@@'DN@0@'CSJ@@@A)G8@C@)'J@N#@-T@@@)G'@K@)'L@N#@-)@@@9:)@I@AA0@G;FZ
)@@G@@@UP@@[SETENT/K@@@@/K@KG8@@F@@^SK@@@A)'N[F#@-)K0]A@K^@@@@@@@@C@VK@][^@@91GA
)@@G@@[^@@']C8FK@[[@@@H"C8FK@@^[@@I^A@)@I#A@K@I]SL@@@A)'W[F#@)]A[#@-)^G]A@@@@@GB
)@@G@@C@)@IBG@@@](C/@__" @@@#:[@@@IAG@@@#&C/@__"/K@@9Y[@K@H.SM@@@A)'>[MK0]A@K0GC
)@@G@@@CS@@@[@)@IE[@@@[^R@K@@MG"@__.C]@@IDG.)__"C[)@ICG.@__"C[@@IDG/)__"SN@@@AGD
)@@G@@)'\[F#@-)K0@-)K0C@@@@@@@C/)@@[/K@@'_(@@@^I[@@@^I;K@@@AC@[@@[[]@@IH[[)@IGGE
)@@G@@[[@@IFSO@@@A)'8[F#@-)K0CS@K@@@@@@@@@+@[@@[C/@@@_/K@@;R[[]@@[C[[@@[O@)@IHGF
)@@G@@R@)@#:[@)@#:G@)@#:SP@@@A);[[F#@-)K0@-)[#@@@@@@@@[@0@#(+@+@@[C/)@@[[@@@^LGG
)@@G@@;K@@@AC@]@@[N[K@IAR@)@IE[@K@^JSQ@@@A);E[F#@)]A[#@-)K0@@@@@@@G/@@@);@@@@YGH
)@@G@@O@0@IHR@0@#:[[@@#:G[@@#:C.@@@[/K@@;P(@@@#(SR@@@A);N[N#@]@C@-)K0CS@Q@0@IFGI
)@@G@@R@0@GNG@@@#:C/@__"8L@@'2O/K@@[8LK@;^O/)@@[[@#@@[G@@@^JSS@@@A);X[F#@-)@K^GJ
)@@G@@G]A[@@@@@@@@N@0@;$[@)@](C@)@#:8L@@;)[@])@[C@#)@[[@@@[^Q@)@IGR@)@GNST@@@AGK
)@@G@@);&[F@K0CS^G]A[#@-)K0CS@N[@@IPR@0@IOR@)@INR@K@IM9,@@IK9!)@IIR]0@G_@U9@G"GL
)@@G@@/K@@;*SU@@@A);\@N#@-)@@@)G/@C@);1@N#@-T@@@)G"@K@@U9@@[EXSTAT/K@@@@/K@KG/GM
)@@G@@@@F@@^*4@KG/N[K@IQSV@@@A);3[F#@-)K0CS^G]A[#@-)@@C8FK@@^[K@IQ^[@@IPA@0@IOGN
)@@G@@A@)@INA@K@IM9%@@IK9()@IIAA0@G_SW@@@A);/[F#@CS[#@)]A@@@@@@@@@C8FK@][@K@HCGO
)@@G@@C@VK@[/K@@'Y[@@@IDC8FK@][@@@IBC8FK@[[@@@ICSX@@@A)/ [N#@)]@)C]@)C]@[^@@-7GP
)@@G@@[^@@@$[^@@-![^@@-J[^@@]G[^@@-Y[^@@-KC8FK@#[^@@]F[@@@H[SY@@@A)/J[N@^G]@)CGQ
)@@G@@@)C]@@[^@@ _[^@@PM[^@@S)C8FK@ [^@@=K[^@@]H[^@@Y-[@@@H]C8FK@^[^@@)2SZ@@@AGR
)@@G@@)/T[N@K^@K^[@K^[@@[^@@NS[^@@5C[^@@6B[^@@5B[^@@6Z[^@@6YC8FK@A[^@@P<[^@@ IGS
)@@G@@[^@@]ITA@@@A)/<[F@K^[@K^[@K^@@@@@@@@[^@@^J[^@@WE[^@@W=[^@@W>[^@@MW[^@@NRGT
)@@G@@[^@@6A[^@@WD[^@@31TB@@@A)/?[F@K^[@K^[@K^@@@@@@@@[^@@5S[^@@5T[^@@MV[^@@]OGU
)@@G@@[^@@]P[^@@# [^@@#A[^@@30[^@@>UTC@@@A)/5@;@K^[@K^[@@@@@)F.@K@@@@]WK      GV
)@@G@@/K@@@@[^@@#![^@@#,[^@@@M[^@@^K[^@@^?[^@@^!TD@@@A)F_[S@@@@@@@ALL   @@@@@^GW
)@@G@@XALL  @@@@@ SCALE @@@@@ATOTAL @@@@ &@@@@ ?@@@@ 2@@@@@[TE@@@A)GE[S@@@@@@@GX
)@@G@@@@@@__@@[@@@@@[@@[@@@@@]@@@@@@@@@@@GFREQ  NOFREQPRINT PUNCH $NONE$TF@@@AGY
)@@G@@)GP@S@)G=@K@)G%@C@)G3@C@@@@@@@@@@@@@ FREQ @@@@ 0@@@@ ,@@@@ \@@@@@#@@@___GZ
)@@G@@@@@@)@TG@@@A@@@@@@@-)K0CS^G]A[#@-)@@@@@@@@N[K@H;N[@@H'R@)@H9R@K@H89\)@H6HA
)@@G@@9,@@H49!)@H2R]0@G7SB@@@A@@^@@D@@H@@V@[#@@[@[B@@B@@ @IR@C@@//@@@@@]@@@@!?HB
)@@G@@@@@@AK@@@@@[@@@@@[@@@@@J@@@@@(S1PCHD      S1ENDC      S1MSG5      S1MSG4HC
)@@G@@      S1MSG3      S1CKVN      S1PRST      S1PRFT      S1SPCT      S1VLU HD
)@@G@@      S1GTVT      S1GTVW      NCOD$       S1UNIT      S1FACL      S1GTAGHE
)@@G@@      S1STFT      URSORT      S1IODR      S1CKVI      NPRT$       NIO2$ HF
)@@G@@      NEXP1$      NIO1$       NERR4$      NERR3$      NERR2$      S22TABHG
)@@G@@      @@[@@@@@@@3XBLANK$      ^@@@C@@]@@@@S22BLK      ]@@@C@@#@@@@S22BK2HH
)@@G@@      ]@@@C@@^@@@@S22MDT      ]@@@C@@ @@@@S22PRE      ]@@@C@@A@@@@S22SIZHI
)@@G@@      ]@@@C@@B@@@@S22FIL      ]@@@C@@C@@@@/,0[&M@@[E]B@@@EI+@BAEK:'^@[=RHJ
)@@G@@/,0[&M@@[E]B@@@EI4@BCEK:'^@[=RR[)EK*R.0@@[R"@@@>)@@[M@[@K)--#@@@@@@[D@@SHK
)@@G@@@@@@@N/,0@@@/K@@@L1@@@@G*@@@@GH@@@@@C/@@@  @@@@@R8VK@#AA@C*,)@E@V]UA^G@@HL
)@@G@@)@^@0@@@@@@@EADINGOR.  HB2 ERRCROSTA***** (072H @[E@@S@@[@@^/,0@@@AB@C*,HM
)@@G@@)@E@8@@@@@@@)@H@N])@@@@@C/@@@['^@@@@CARDS)FEWER VE OR  ON FITAINEDBE CONHN
)@@G@@ MUST AC@C*,)@J[M[@K^[#@CC@@@@R@)@O$G@@@@@C/@__"@[J@@S/K@@[NN@0@@P/K@@@QHO
)@@G@@(@@@@@[@@@@@G@@@@@AD@C*,)@T[N#]A[[K0@CC@@@H[@@@@C.@@@^C/)@@[ @@@@G(@@@@IHP
)@@G@@H@)@@XC@)@@[C/@@@[A@)@@W[@@@@VAE@C*,)@<[M[@K^[#]A^^@@@[@[@@@C@]@O:R@)@@WHQ
)@@G@@@[L@@S/K@@[NN@0@@(/)K@@%)@@@@I @@@@I(@@@@KAF@C*,)@![M[#@--#]^L#@@@@@@@@[HR
)@@G@@@@@@@@/,0@@@N[@@@V[[)@@[C.)@@[[[@@@@C.@@@H[@-@@[C@)@@@AG@C*,)@7[EK0--#@-HS
)@@G@@-#@-)@@@@@@@G@)@@@C/)@[][@@@@[G@@@@[C/@@[@@[T@@S@@@@@O@@@@@@@@@@@@AH@C*,HT
)@@G@@)[@@F#@@@@@@)@L@K@)[[@:@@K0@@@[[@@@VG.@@@]T.@@@FC[@@@@8L@@@4______WRITE HU
)@@G@@[@)@@@AI@C*,)[A[F]MA^GCS^GCS^^@@@@@@G@@@O=C/@@@[@[X@@S@@@@@#@@@@@@@@@@@VHV
)@@G@@@@@@@L@@@@@P/,0@@@AJ@C*,)[J[F[K^[#]A^GCSK0-)@@@@N[@@@+R@)@@-R@K@@)9!)@@YHW
)@@G@@R]0@@T@[Z@@S/K@@[NN@0@[M[@@@O=AK@C*,)[S@F#@@@@@@)@Q@C@)[T@N#] K@@@)@S@K@HX
)@@G@@@@@@@@@[Z@@#S22HED/K@@@@/K@K@Q@@F@@B*4@K@QAL@C*,)[V[F#]A^GCSK0CS^@@@@@@@HY
)@@G@@[^@@@5C8FK@[[@K@@XC@VK@@^[@@@+A@)@@-A@K@@)9()@@YAA0@@TAM@C*,)[=[MK^[@K[@HZ
)@@G@@K[@@@@[^@@@KC8FK@ [^@@[E[^@@@7C8FK@#[^@@@#[^@@@![^@@@R[^@@[]C8FK@]AN@C*,IA
)@@G@@)[,@<@K^[@@@)@N@S@@@@@@@@@@@@@@@@@@@@@@@@^@@@@[@@@@@@[/K@@@@[^@@@[[^@@@LIB
)@@G@@[^@@@JAO@C*,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@A@@N@@[@@R@@[@@#@@<@C@@[2@@@@!?S1PCHDID
)@@G@@      S1TCHS      S1IODR      NPRT$       NIO2$       NERR3$      S22HEDIE
)@@G@@      @@[@@@@@@@[VS22BLK      ]@@@C@@]@@@@@@@@@@)@@@3#@K0K0^G@@@@@)@@@C@IF
)@@G@@)@F@C@@@@@@E@@@@@&[@@@]3G/)__"C@)@]2R@K@]2G/@@@[C@@@]2AA@@@F)@A@N#@@@@@@IG
)@@G@@)@-@8@@@@@@@ROL DU2 CONTROSTABONAL CADDITI5X,33H(1H0,2(@@@@@[@)@]4AB@@@FIH
)@@G@@)@*@K@)@C@;@K)K0K0K0^G@@H@@@]5C/@@ZK@[S@]&@@@@]W@@@@@-/,0@@@/K@@@H______II
)@@G@@MPS)  AC@@@F)@J[N#@K[@K0K0^[]^/,0@@@^^K@@TN8M@@@O@)@]2R@)@@G/K@@@Y*@@@@GIJ
)@@G@@/G@@@OH/@_0R]@@@@GAD@@@F)@T[F@K0K^G^[]>#[#[]*@@@'^@@@@@[Y@]&@@[@@%/,0@@@IK
)@@G@@/K@@@&@[W@]&/K@@@Y@@@@]X@@@@@TAE@@@F)@%@8@@@@@@@)@+@MK@@@@@@N@0@@>C8)@@AIL
)@@G@@)     S22CP2LE IN  TROUBBUFFER***** (031H0AF@@@F)@=[F@K0^[@K0K+K3K3@@@@@IM
)@@G@@@@@@AN@@@@O&/,0@@@@[<@]&/,0@F+/K@@@%(@@@@@@[-@]&/K@@D8AG@@@F)@![F#GK0K0KIN
)@@G@@0K0K3K3K3@@@@@@@-G@@@@U/@@@@O?@@@@@J@@@@@I@@@@@H@@@@]Y@@@@@@@@@@G<AH@@@FIO
)@@G@@)@6[F#H@K5K0K0K[#[#@@@@@R@)@]ZG@@@@HC/@__"/K@@]F(@@@@H@[=@]&@@@@@@/K@@@+IP
)@@G@@@@@@$WAI@@@F)@_[N#[#@[;O[@@@@@8L@@[][@3)@@+@<@@@C/)@@#[@]\_";K@@@]C@#@@@IQ
)@@G@@[@@@[^Q@0@]2R@0@])AJ@@@F)[D[F#H@^G[#H#[#@@@@@@@@[[)@[^Q@)@]3R@)@])G[)@@]IR
)@@G@@C.)__"G[@@@HC.@__"/K@@]F(@@@@]AK@@@F)[M[F#[#@K[#[#H#[#@@@@@@D@@@@K[@@@@KIS
)@@G@@C@#@G+N[@@]6R/0@@[8L@@[O @])AJ[[)@]7[[@@]6AL@@@F)[V[M^[#[#@[@K0@@@ @@@@MIT
)@@G@@8L@@[SO/0@@[[@]@AJC/@@@[O@)@]2R@)@@K/K@@[+1@@@@G*@@@@GAM@@@F)[>[EK0K0^@KIU
)@@G@@0K0K0@@@@@@@R[@@@M[@@@@MG@@@@MC/@@@[/K@@[2(@#@AJN[@@]7R@0@]3R/)@@[AN@@@FIV
)@@G@@)[,[N#GK3@K^G^G4G@R[@@]2[@@@@]C@@@@M8L@@[*O/0@@[O/)@@[[@#@AJ[@=@@];@)@@+IW
)@@G@@C@+@@]AO@@@F)[8[MK0K3K0[@K0K0@C@#@AJO@0@]2R@0@@K/K@@]C0@@@@G*@@@@G[@@@@KIX
)@@G@@C@]@G+N[@@]6R/)@@[AP@@@F)]][N#[#H#@K3K3[@@(@@@@@8L@@['O/)@@[O.@@@[[@3@@]IY
)@@G@@)@<@@]C@=@@@R@0@@N[@]@G+[@@@@NAQ@@@F)]G[F@K0K^C4G^G^EOG^G@@@@]S@]&@@[@@1IZ
)@@G@@/,0@@@@]R@]&@@@@]-/,0@@@/K@@#I(@@@@H/K@@^8AR@@@F)@1@8@@@@@@@)]P@N]*@@@@@JA
)@@G@@C/@__"'^@@@@  LEN)SCALE VAR    - I  INATES0COORD(/035HAS@@@F)]R[F#@^G^C4JB
)@@G@@G^G^EOG@@@@@@@[@@8/,0@@@@]Y@]&@@@@]+/,0@@@A@0@@K[@@@[^R/0@@[G@@@@HAT@@@FJC
)@@G@@)])@;#[#[#H#H;P]*@)@8@K@6,I5,2(10X,IO/0@@['^@@@@@@NJ_"@@N@G+@@N@AM@@K@@KJD
)@@G@@@]Z@]&AU@@@F)@'@C@)]$@;@K3K^C4G^G^EK@@@@@@/,0@@@@]%@]&@@@@]-/,0@@@/K@@#IJE
)@@G@@(@@@@]8L@@]UI7)   AV@@@F)],@N#[#@@@@)@;@8@@@@@@@  LAB4 LAB6  NO.   - J  JF
)@@G@@S USED0SCALE(/036H@]:@]&@@[@@;AW@@@F)[]@C@)]0[#]*K3[#[]H#@@@@@@@]+/,0@@@JG
)@@G@@A@)@@L[@@@[^R/)@@[G@@@@]C/@__"'^@@@@)     AX@@@F)]8[F#[#H#@K0K0^G@@@@@@@JH
)@@G@@;LK@@[+[@@@OC.@@@][@0@@P+@)@@OC/)@@[[@@@@OC@]@@]@]1@]&AY@@@F)#[[F#@K0K(KJI
)@@G@@0K0K0K0K0@@@@@K@@P@@K@@O@@K@@L@]6@]&@@[@[#/,0@@@[@@@@O;K@@@][[K@@QAZ@@@FJJ
)@@G@@)#E@<#[]*K@@)[#@K@)#I@N]H#@@@@@@@@]-/,0@@@I6)   (10X,48L@@]5O/)@@['^@@@@JK
)@@G@@@@K@@QBA@@@F)#K@<#[]>#[#@@@@@@)[ @)@@@@@@@US PARLLANEO0MISCE(/025H@#@@]&JL
)@@G@@@@[@[ /,0@@@@]_@]&BB@@@F)[D@)@@@@@@@)#O@<](@K0K0@@@@@@@@@@@H@@@@[F/,0@E*JM
)@@G@@'^@@@@______NCOORDS)    AMETERBC@@@F)[H@K@)#S@<#[@K0K3@@@@@@)[J@K@______JN
)@@G@@NTABS @@@@@]@@@@[H/,0@E*@##@]&______NSCALEBD@@@F)#W@<#[@K0K0@@@@@@)[L@K@JO
)@@G@@)#)@F#@@@@@@@# @]&______CDTOT @@@@@I@@@@[J/,0@E*@#^@]&BE@@@F)#-@V@K0K0@@JP
)@@G@@)[N@K@)#=@V#[@K0@@@@@@[N/,0@E*@#A@]&______ENTTOT@@@@@J@@@@[L/,0@E*BF@@@FJQ
)@@G@@)#$@F#S@@@@@)[P@K@)#*@<#[@K0K6@@@@@@@@@@@[@@@@[P/,0@E*@#B@]&______ENTMAXJR
)@@G@@@@@@@@BG@@@F)[R@K@)#?@<#[@K0K6@@@@@@)[T@K@______TOTALS@@@@@]@@@@[R/,0@E*JS
)@@G@@@#C@]&______ACCTOTBH@@@F)#0@<#[@K0K6@@@@@@)[V@K@)#4@F#@@@@@@@#E@]&______JT
)@@G@@MXRCAL@@@@@#@@@@[T/,0@E*@#D@]&BI@@@F)#5@V@K0K6@@)[X@K@)#8@V#[@K0@@@@@@[XJU
)@@G@@/,0@E*@#F@]&______MARGIN@@@@@^@@@@[V/,0@E*BJ@@@F)#;@F#S@@@@@)[Z@K@)#/@<#JV
)@@G@@[@K0K6@@@@@@@@@@@A@@@@[Z/,0@E*@#G@]&______MXDCMG@@@@@ BK@@@F)[-@K@)^@@<#JW
)@@G@@[@K0K6@@@@@@)[<@K@______MAXPRT@@@@@B@@@@[-/,0@E*@#H@]&______MXCPC BL@@@FJX
)@@G@@)^^@<#[@K0K6@@@@@@)[>@K@)^C@F#@@@@@@@#J@]&______MAXCTL@@@@@C@@@@[</,0@E*JY
)@@G@@@#I@]&BM@@@F)^D@V@K0K6@@)[$@K@)^G@V#[@K0@@@@@@[$/,0@E*@#K@]&______MAXOSPJZ
)@@G@@@@@@@D@@@@[>/,0@E*BN@@@F)^J@F#S@@@@@)[(@K@)^K@<#[@K0K6@@@@@@@@@@@F@@@@[(KA
)@@G@@/,0@E*@#L@]&______MXEXTA@@@@@EBO@@@F)[:@K@)^O@<#[@K0@@)[!@K@@@@@@@______KB
)@@G@@NNFILE@@@@@@@@@@[:/,0@E*@#M@]&______NVAR  BP@@@F)^S[F#[@K0K7K0K7K^C4G@@@KC
)@@G@@@@@@]W/,0@@@/K@@^8(@@@@@@#O@]&@@@@@@@@@@[!/,0@E*@#N@]&BQ@@@F)^-@<#[]>#[#KD
)@@G@@@@@@@@)[\@)@@@@@@@)      FILESOUTPUT(013H0@#S@]&@@[@[\/,0@@@@#R@]&BR@@@FKE
)@@G@@)^>[F]*K7^G[#[]H#@@@@@@@@@@@]+/,0@@@[#)@@L[@@@[^R[@@]<C_)@@[G@@@@@C/@__"KF
)@@G@@'^@@@@BS@@@F)^,[F#[]>#[#[#[;X#X]*@@@G_)@@['^@@@@@@O)@@@@OJ_"@@K@@L@#Z@]&KG
)@@G@@@@[@[3/,0@@@@#Y@]&BT@@@F)^7@F@@@@@@@)[3@K@)^8@%K^[]L#G@@@@O>/,0@@@/K@@ LKH
)@@G@@/K@@^;(@@@@@,2A6) (I5,2X8L@@^:BU@@@F)^.[F#H#H#[#[#[#H#H#H#G@@@@@$W@@@@-GKI
)@@G@@@@@@U/@@@@O?@@@@@T@@@@@S@@@@@R@@@@@]@@@@@#BV@@@F) A[EK0K^G^G4[]P#H#G@@@@KJ
)@@G@@@@@@@]@@@@@#/,0@@@/K@@ L(@@@@]@#%@]&/K@@@+@@@@@G@@@@@@BW@@@F) J@V@K0@@@@KK
)@@G@@)[5@K@) M@V@K^G@@@@@@@[5/,0@E*/K@@ Z______CATWTS(@@@@@@#!@]&/K@@CKBX@@@FKL
)@@G@@) P@F#@@@@@@)[7@K@) Q@<#[@K0K0@@@@@@@@@@@S@@@@[7/,0@E*@#0@]&______SCLTOTKM
)@@G@@@@@@@RBY@@@F)[9@K@) U@3#[@K0K0K0K0@@@@@@@@ @@@@U@#2@]&@@@@@T@@@@[9/,0@E*KN
)@@G@@@#1@]&______LABTOTBZ@@@F) )[N#[#[@^G@K3@@@0@@@@G*@@@@GD@#@G+[@@@[^R/0@@[KO
)@@G@@G@@@@HC/@__"/K@@ 4(@@@@H @@@@VCA@@@F) %[F@^G^GB!OG[#@@@@@@@@O/0@@[[@)@@VKP
)@@G@@G/)@@ G@)@@VC@<J_"[@@@@UG@@@@UC/@@@[/K@@ 2CB@@@F) 3@N@@@@@@@)[;@K@) 5@<@KQ
)@@G@@K^G^G@@@@@@U@@@@[;/,0@E*/K@@ "______NALL  (@@@@@8L@@ $CC@@@F)[.@K@) 9@3#KR
)@@G@@[@K0K0K0K0@@@@@@@@R@)@])@^#@]&@@@@@V@@@@[./,0@E*@^]@]&______ALLTOTCD@@@FKS
)@@G@@) _[F#[#[#@K0^G1#@@@@@@@C[@@@I[@=@@AC@)@@][@])@@C@@@@HN.@@@AQ[@@]3R[@@])KT
)@@G@@Q@)@]2CE@@@F)AC[MK^G^@@K0@@@@@[@[@@IC@@@@S @[@@R @[@@Q @[@@A @[@@ /K@@AKKU
)@@G@@*@@@@R8L@@A#[[^)@LCF@@@F)AM[N#@[#@^G[#@@@@C[)@@J[@-@@MG@)@@IC/)@@[[[[@@LKV
)@@G@@C[@@@V[@-@@KT/)@@#[@-@@JC@)@@UCG@@@F)AW[MK3@K6[#S@@@@@[]-@@YC])@@[[][@@XKW
)@@G@@;]@@@<C]@@@@[@-@@W[@-@@V[@-@@UC@)@O&[[-@@TCH@@@F)A&[M^G^G0^H-#S@@@C])@@ KX
)@@G@@T"@@@BC]@@@C[[[@@-;[@@@<[][@@)G]@@@]C]@@@T[]-@@ZT")@@#CI@@@F)A0[N#T#T#SKKY
)@@G@@6[#W@@G]@@@QT"@@BGC]@@@@G])@@OT")@@EC])@@DG]@@@QG])@@BG])@@AG])@@#CJ@@@FKZ
)@@G@@)A'[N#S@K6[@K6@@@@C@@@@E/K@@B 1@@@@G*@@@@GH@@@@EC@@@@@[[[@@<C[@@@@[][@@+LA
)@@G@@G]@@@FCK@@@F)B^[MK3^H-#S[@@@@@/K@@BK1@@@@G*@@@@GG/@_)\C@@@@][@-@@>C@)@@]LB
)@@G@@[@[@@=C@@@@][@[@@<CL@@@F)BI[M[#@@K^C0@@@@@/,0@@@/K@@B0(@@@@@[@[@@<[@-@@@LC
)@@G@@C@-@@<[@@@@WC@[@@@[@[@@>C/@@ZKCM@@@F)BS@:#[#[]>#[#@@@@)[_@S@@@@@@@GE VECLD
)@@G@@0STORA(/036H@^!@]&@@[@[_/,0@@@@^?@]&@@@@]-CN@@@F)]]@*@@@@@@@)BX@<]*K0@@@LE
)@@G@@C_)@@[G@@@@@C/@__"'^@@@@)        LEND - I EQUIRETORS RCO@@@F)B-[F#[#@K0KLF
)@@G@@<K0K0K(K0@@@@@[@]B/,0@@@@^3@]&@@@@]+/,0@@@[#)@@K[@@@[^Q@0@]2R@0@])CP@@@FLG
)@@G@@)B%@3#[#@K%^@@@@@@)]B@K@@@@@@@4,I7) (25X,I8L@@B=G_)@@['^@@@@@@N)@@@@K@@KLH
)@@G@@@^4@]&CQ@@@F)B0[MK0K0K0K0K0@K@8L@@B7[@^)@@C@])@@[@@@[^Q[@@]1R[@@])Q@)@]2LI
)@@G@@R@)@])G@@@@@C/@__"CR@@@F)B'[N#@^[@K^G^H0@@G/@@@[;@@@@<C@@@@@@ ]@]&/K@@D/LJ
)@@G@@N@0@C@/K@@C[(@@@@@[@)@@@C@)@@@CS@@@F)C^[F#[]P#X#[@K0K>K3K0@@@@@@@H@@@@ANLK
)@@G@@/,0@@@@ #@]&/K@@CK@@@@]6@@@@@@/,0@@@[@@@]6CT@@@F)CH@3@K0K^EOG^G@@@)]D@S@LL
)@@G@@I/O TR***** (028H0@ A@]&@@[@]D/,0@@@/K@@CS@ ^@]&/K@@CKCU@@@F)]G@S@)CN@3]LM
)@@G@@*K^[#[]O@@@@/,0@@@@ D@]&/K@@D8N@0@CRC8)@@A'^@@@@CP2)  IN S22OUBLE CV@@@FLN
)@@G@@)CT[F#H#[@K0K>K5K0K^G@@@@ F@]&/K@@CK@@@@@H@@@@@@/,0@@@@ E@]&/K@@CK@@@@@HLO
)@@G@@@@@@G<CW@@@F)C+[N#[@K0^G@K3@@@0@@@@G*@@@@GD@#@G+[@@@[^R/0@@[G@@@@HC/@__"LP
)@@G@@ @@@@N/K@@D^(@@@@UCX@@@F)C?[N@^G^G^G^G@^@@^^K@C'N8M@@@[@+@@@C/)@@]O@)@]4LQ
)@@G@@R@)@@N[@@@@NG@@@@NC/@@@[/K@@C.CY@@@F)C6[F#H@K&K^[@K0^@@@@@@@8L@@C(O/0@@[LR
)@@G@@@ Q@]&/K@@C.@@@@C'@@@@C9/,0@@@^^K@C9N8N@AMCZ@@@F)C_[F]OK0K^G^D4[#[#@@@@@LS
)@@G@@C@@@@H@ U@]&/K@@CK/,0@@@@ T@]&/K@@CK@@@@@U@@@@@@/,0@@@DA@@@F)DC[F#[#H#[#LT
)@@G@@[#[#[#[#[#@@[]@@@ C]@@@R[[)@@^C[)@@I[[@@@#C[@@@U[@)@@]C@)@@][@@@@[DB@@@FLU
)@@G@@)DL[F#H#[#L#[#T#[#T#[#G@C@)@O=[@@@@DC@@@@][#)@@CC#)@@[[#@@@BC#@@@@[])@@ALV
)@@G@@C])@O&DC@@@F)]J@K@)DU@3#[]-#[#[#[#@@@@@@@@@@@@@F@@@@]+@@@@@X@@@@]J/,0@@@LW
)@@G@@[@)@@E______S22PARDD@@@F)D)[F@K0^G^G[#[#[9@@@@@@[@]J_"C@^)@@R@)@@X[@@@[^LX
)@@G@@R[@@]ZG@@@@FC/@__"@ >@]&/K@@D0DE@@@F)D([EK0K0K^[@K0K(K0@@@@@@@[@]L/,0@@@LY
)@@G@@@ ?@]&/K@@D/N@0@D\8L@@D&[@)@@XG@)@@XC/)@@[DF@@@F)D2@F#@@@@@@)]L[@@@@@@@@LZ
)@@G@@22CP2)S IN SAMETERNG PARE SAVITROUBL***** (042H0@ !@]&DG@@@F)D3[F]*K^[#[MA
)@@G@@#[]?K0@@@@@@[^)@]=H8)@@[/K@@@@!^)@]=@ 0@]&/K@@D8N@0@D7C8)@@A'^@@@@DH@@@FMB
)@@G@@)D/[F#[#[#[#[#[#[#[#[#@@R@0@#^R@)@##R@K@#]9\)@#@9\@@]"9,)@]/9,@@]'9!)@]8MC
)@@G@@R]0@]$DI@@@F)E @V#[#[#@@)]=@C@)EC@N#[]0@@@)]&@C@S22CP2/K@@@@/K@K]=@@F@@@MD
)@@G@@*4@K]=N[@@#AR[@@# DJ@@@F)]$@C@)EE@'K0K0K0K0K0K0@@@@@@@9:@@]"9%)@]/9%@@]'ME
)@@G@@9()@]8[^@@]=AA0@]$C8@@@D@ 0@@]DK@@@F)EL[F#[#[#[#[#[#[@K<K0@@@@@@]+/,0@@@MF
)@@G@@/K@@F&^[@@#AA[@@# A@0@#^A@)@##A@K@#]9:)@#@DL@@@F)EU@3#[]>#[#[#[#@@)]T@S@MG
)@@G@@,I6)  ,3H = (2X,A6@@K@#D@@K@#C@ 5@]%@@[@]T/,0@@@@ 4@]%DM@@@F)E)@3](@K^G^MH
)@@G@@G^G@@@)]*@C@@@@@@@@@@@@@@@F@@#*4@K]*R]0@]:@ '@]%/K@@E=N@0@E<'^@@@@DN@@@FMI
)@@G@@)E&@N#[]0@@@)]%@K@)E*@<#@K0@@@C@VK@[[@K@#CC@VK@@AA0@]:@ '@@]PLV   /K@@@@MJ
)@@G@@/K@K]*DO@@@F)E?[F#[@^G^G^G^G4[@@@@@@N@0@E6/K@@E7*@@@@] @@@@T @@@@S[@@@@RMK
)@@G@@C/@@@[/K@@ES[@K@#DDP@@@F)E5[N@K0^G0K3K[@@@/K@@FR*@@@@G/G@@E_D@[@AM[@@@[^ML
)@@G@@R/K@@[G@@@@]C/@__"@A#@],/K@@FWDQ@@@F)E_[MK3K0^@KB!L#@@[@@@@);@@@@<C@[J_"MM
)@@G@@/K@@FR*@@@@H/GK@FAG/K__;[@K@@Z+@[@AMC/@@@BDR@@@F)FD[F#[#@K0K[@K0K0@@@@@@MN
)@@G@@G@@@@SC@@@@)/K@@FN*@@@@G/C@@FKH@@@@ZC/@@@][@@@@SG@@@@SDS@@@F)FM[F#[#@K0KMO
)@@G@@0^[@K@@@@@@@/K@@FWN@0@FV8L@@E;O/K@@[[@@@@TG@@@@TT/@@@ C@@@@)[@@@@SDT@@@FMP
)@@G@@)FV@:#[#[#[#[#@@@@)]?@C@)F)@F#@@@@@@/K@K]?@@F@@[*4@K]?N[@@#GR@K@#FR]0@]\MQ
)@@G@@@AN@],DU@@@F)F-@F]0@@@@@)],@K@)F+@<#[#[#[@@@@@@@/K@@E,^[@@#GA@K@#FAA0@]\MR
)@@G@@@AN@@]ESTSCL/K@@@@DV@@@F)F&[MK^[@^[@K[@@@@[^@@]FC8FK@][^@@^R[^@@A"[^@@A/MS
)@@G@@C8FK@[[^@@@&[^@@B/[^@@^8C8FK@@DW@@@F)F0[N@K^[@^G^[@K@@C@VK@^[^@@@,[^@@ AMT
)@@G@@[^@@D@[@@@]2C8FK@#[^@@ L[^@@@B[^@@BP[^@@ 4DX@@@F)F'@3#@K[#[@@@@@@@)]W@S@MU
)@@G@@@@@@AK@@@@ZK@@@@@]/K@@@@[@@@]1C8FK@B[^@@B;C8FK@A[@K@]5DY@@@F)]Z@*@@@@@@@MV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@]@@@@@[@@@@@#@@[@@@@@[@@[DZ@@@FMW
)@@G@@@@^@@C@@G@@H@@&@@[@@%@@A@@^@#H@C@@G@@@@@@[@@@@!?@@@@@[@@@@AK@@@@@J@@@@@(MX
)@@G@@S1PCHH      S22IOD      S22TCD      S1PCHD      S22SC2      S22DWR      MY
)@@G@@S1GTVT      S22DEF      S1STFT      NPRT$       NIO2$       NERR4$      MZ
)@@G@@NERR3$      S22CP2      @@[@@@@@@@EEBLANK$      ^@@@C@@]@@@@S22BLK      NA
)@@G@@]@@@C@@#@@@@S22MDT      ]@@@C@@^@@@@S22BK2      ]@@@C@@ @@@@S22SIZ      NB
)@@G@@]@@@C@@A@@@@S22FIL      ]@@@C@@B@@@@/,0@9'@@[G'K@@@G/*@^?@@@@@KG'L@@KG'ONC
)@@G@@@@KG'R'^@[O$/,0@9'@@[G'K@@@G/!@^1@@@@@KG'M@@KG'P@@KG'S'^@[O$/,0@9'@@[G'KND
)@@G@@)@@[N#]A[#@-)K0CS@C]@@[2G.)@@[C[)@[0G.@__"C[@@[0G/)__"C@)@[,G/@__"C@@@[\NE
)@@G@@R@K@[1AA@@@A)@E[MK0@-)K0--#@@@[[@@[7[@)@[6[@@@[5G_)__"C#)@[3G_@__"C;FK@#NF
)@@G@@G")__"C])@[4G"@__"AB@@@A)@O@<#]A^GCS@@@@@@)[^@K@)@S@F#@@@@@@[#)@[/______NG
)@@G@@REWIND[#@@[;[])@['[]@@[9[[)@[8AC@@@A)@T@3]]A^GCSK0-)@@)[A@K@@@@@@@______NH
)@@G@@REWIND@@@@@]@@@@@]@@@@@]@@@@[^@@@@[Z/,0@@@AD@@@A)@Z[F#]^^GCSK0--#]A^^@@@NI
)@@G@@ @@@@B@[D@[$@@@@@]@@@@@]@@@@@]@@@@[A@@@@[)/,0@@@@[C@[$AE@@@A)@*[M[#@--#@NJ
)@@G@@)@@@@@*@@@@G/G@@@3H@@@@@[@@@@#G@@@@#C/@@@[ @@@@# @@@@@ @@@@@ @@@@@AF@@@ANK
)@@G@@)[C@K@)@2@;@K)--#]A[#@@@@@@@@^@@@@@@@@@@[-@@@@[C@@@@[Z/,0@@@/K@@EC______NL
)@@G@@READ  AG@@@A)@9[N#]A^@K[#@-)@@C[[@@#[@)@@AC@-@@][@@@@ C@[@@[/K@@[!*@@@@GNM
)@@G@@/G@@@"D@@@@^@[M@[$AH@@@A)[#[N#@-)K0-)K0-)@C_@@@^[]0@@E+])@@CC")@@][]K@@DNN
)@@G@@+]@@@CC"@@@[[[)@@CC[-@@^[[@@@BAI@@@A)[H[##]A[#@--#@@@@)[E@C@READ  ;L)@@DNO
)@@G@@[#0@@G+#)@@CC_)@B_[[)@@C;L)@@#[#K@@F+#@@@CAJ@@@A)[F@C@)[P[##]^^GCSK0CSK0NP
)@@G@@@[Z@[$@@@@@^@@@@@@@@@@@ @@@@[E@@@@[Z/,0@@@[[)@@H______AK@@@A)[X[N#@C]A^@NQ
)@@G@@K^@@@@C/@@@[/K@@[5/K@@[!*@@@@G/G@@[>D@@@@^/K@@[&(@@@@GH@@@@@C@@@@#AL@@@ANR
)@@G@@)[$[F#]A[@K0)CNK0-)@@@@@@[(@[$@@[@[G/,0@@@/K@@[5(@@@@^/K@@[5(@@@@GG@@@@ NS
)@@G@@G@@@@^AM@@@A)[G@0@@@@@@@)[0@V]))@@@@N@0@[4C8)@@H'^@@@@TCD)  IN S22OUBLE NT
)@@G@@I/O TR***** (028H0AN@@@A)[3[F@K0-)K0CSK0-)@@@@@@R@0@[+Q@)@[\R@)@[+C_0@@[NU
)@@G@@G@@@@ C/@__" @@@@I@[?@[$/K@@EYAO@@@A)[/[N#@-)K0CSK0CS@[@@@@K;K@@@F[@0@@LNV
)@@G@@+@)@@KC/)@B_[@@@@KC@#@@@[#0@@J[@@@[^Q@0@[1AP@@@A)]A[MK0-)K0C@@@@@@C/)@@[NW
)@@G@@ @@@@G*@@@@I/C)@]JG/)__5C@)@@LC/@@@[[[K@@M+[@@@KC.@@@[AQ@@@A)]K[N#@C@--#NX
)@@G@@@-)@@@C/)@J_[@@@@K;K@@@[C@@@@K[@@@@IC/@@@[/)K@]Q+@@@@I @@@@I(@@@@MAR@@@ANY
)@@G@@)]U[N#]A[#@--#@-)@C.)@@[[@@@@K;K@@@[[[K@@O+[@@@KC.@@@[[@@@@K;K@@@E[@0@@NNZ
)@@G@@+@)@@KAS@@@A)]=[N#]A[#@)@CS@@@R[@@[3C_)@@[G]@@@@C"@__"/K@@#=(@@@@@[@@@@QOA
)@@G@@;K@@@[[[0@@P+[)@@KAT@@@A)],[N#@-)K0C@)@@@@*@@@@G/G@@]9D@^@@@/K@@#)*@@@@GOB
)@@G@@H@@@@QC@ @@@[#)@@R[]@@[ R[K@[2AU@@@A)]8[N@^G@-)^@@@@@@C@^@@@/=K@#))@@@@IOC
)@@G@@ @@@@I(@@@@PC/)@@[ @@@@G(@@@@OC/@@@[/K@@#CAV@@@A)#][F#@)CSK0)]A^G@@@@@@@OD
)@@G@@*@@@@O[@@@@TD@^@@@/K@@^Y[@@@@SC@@@@R/K@@#)*@@@@GH@@@@NAW@@@A)#F[N@K0)]A[OE
)@@G@@@K0CS@H@@@@N;K@@@#C@@@@T/K@@#)*@@@@J+@)@@TC/)@@[/K@@#)(@@@@P/K@@#VAX@@@AOF
)@@G@@)#P[N@^[#]A^@K0C@@/K@@#)(@@@@H+@@@@TC/@@@[/K@@^Y[@@@@SC@@@@R/K@@#)*@@@@GOG
)@@G@@/C@@#SAY@@@A)#Z[N@@K@K[@@@@@@@/K@@#1*@@@@G/C@@#(H@@@@@C@@@@@8LK@]0G_)@@[OH
)@@G@@O.K@@[O.@@@[/K@@#MAZ@@@A)#(@V]UA^G@@)[M@0@@@@@@@S22TCDOW IN OVERFLCOORD OI
)@@G@@***** (031H0@]Z@[$@@[@[M/,0@@@BA@@@A)[S@C@)#?[#]))C]A@@@@@@@[@@@@@G@@@@@OJ
)@@G@@C/@@@[@]+@[$/K@@EYN@0@#0C8)@@H'^@@@@)     BB@@@A)#4[MK0--@^G@-)@@@;[@@@-OK
)@@G@@C[@@@N[@=@@@;@)@@+G@)@@NC/)@@[/K@@^@(@@@@PO[@@[;R[@@@@BC@@@A)#"[N#]@CSK0OL
)@@G@@)]A@@@[@ @@@;@@@@+G@@@@NC/@@@[/K@@^H(@@@@OO[K@[;R[K@@@/K@@^O][@@@NBD@@@AOM
)@@G@@)^C[N#@CSK[#]A^G@@C@ @@@O[K@['R[K@@NO[@@[;R[@@@@/K@@^O]@)@@NG/)@@[;@)@@-ON
)@@G@@C@)@@NBE@@@A)^M[M[#]A@K0-)@@@@[@=@@@C@)@@QO[@@[9R[@@@@[@ @@@C@@@@NO[K@[/OO
)@@G@@R[K@@@[@^@@@;@@@@+BF@@@A)^W[MK0-)K0CS^G@@@[@+)@@G@)@@J;@)@@UC@)@@L[@#)@@OP
)@@G@@G@@@@M;@@@@<C@@@@S[[@@@SC[@@@@BG@@@A)^&[MK[#@)CLK0-)@@@@@@@@@@@@@ @@@@[<OQ
)@@G@@/,0@@@/K@@^5(@@@@GH@@@@ C/@@@[8L@@["G_0@@[BH@@@A)^0[EK0--#]A[#]A^G@@@@@@OR
)@@G@@Q[K@[\R[K@[+G@@@@ C/@__"@]8@[$@@@@@U@@@@[=@@@@@U@@@@@@BI@@@A)^9[M@K^GCSKOS
)@@G@@0-)@@@C/)@@[ @@@@Y @@@@X @@@@W @@@@V8L@@^'[@ )@@;K@@@EC@ @@@[@@@[^BJ@@@AOT
)@@G@@) #[N#]A^G@C@--#@@[@@@@VG@@@@VC/@@@[/K@@ P*@@@@GG/@__"C@^@@@O[@@[5R[@@@ZOU
)@@G@@[@)@@ZBK@@@A) H[EK0--#]@C]@-)@@@@@@@R@)@@Z/K@@ ^/K@@AZ*@@@@I/G)@ OH@)@@ OV
)@@G@@[@)@@ZG@)@@ZC/)@@[BL@@@A) Q[N#@]@CSK0CS@@@G@)@@ZC/)@@[[@@@@WG@@@@WC/@@@[OW
)@@G@@/K@@ &*@@@@GG/@__.C@]@@@O@)@[5BM@@@A) )[N#]A^@K^[#]A@@G/@__/C@#@@@O@0@[5OX
)@@G@@R@0@@Z/K@@ P/K@@AZ*@@@@I/G)@ >H@)@@ [@)@@ZBN@@@A) %[MK[#]A[#]A^GC@/G)@ 6OY
)@@G@@H@)@@ [@)@@ZG@)@@ZC/)@@[[@@@@XG@@@@XC/@@@[/K@@ 7*@@@@GBO@@@A) 4[MK^[#]A[OZ
)@@G@@#@--#@[@)@@YG@)@@YC/)@@[[@@@@)C@ @@@O[K@[5R[K@@Z/K@@ &/K@@AZ*@@@@IBP@@@APA
)@@G@@) "[F#]A^G@--#]A^@@@@@@@/G@@ADH@@@@ [@@@@ZG@@@@ZC/@@@[[[^@@@C[@@@ZO[@@[7PB
)@@G@@R[@@@YBQ@@@A)AB[MK^GCS^G]@)@@@C/@__"/K@@ 7/K@@A](@@@@GH@@@@)C@]@@@O@)@[5PC
)@@G@@R@)@@Z/K@@AK*@@@@GBR@@@A)AL[F#]A^GCSK0--#@@@@@@@C@^)@@[@@@[^Q[@@[8R[@@[+PD
)@@G@@Q[K@[,R[K@[+O@0@[6R@0@@YG@@@@YBS@@@A)AU[M^[#@CSK0-)@@@[@@@[^R[@@[\R@)@[1PE
)@@G@@G@@@@ C/@__"[@<@@@C@)@@ 8L@@AT[@ )@@G/@__"BT@@@A)A=[MK0]A[@^@@@@@@C/@@@]PF
)@@G@@/K@@A9*@@@@G/G@@A!G/@__/[@)@@-;K)@@[C@+@@@[@@@@LC@^@@@BU@@@A)A,[N#@)CSK^PG
)@@G@@GCS@@@[@P@@@)@ @@@C/@@@[O[K@[;R[K@@-/K@@A9(@@@@X/K@@A3*@@@@GH@@@@LBV@@@APH
)@@G@@)A8[N@K0-)@^[#@@@@ @@@@+8L@@A=O.@@@[O/)@@[[@N@@@)@#@@@C/@@@]O@0@[;R@0@@-PI
)@@G@@/K@@A"BW@@@A)B][F#]A^GCSK0--#]@@@@@@C/)@@[/K@@B&(@@@@V[@@@@@C@@@@# @@@@&PJ
)@@G@@ @@@@> @@@@= @@@@<BX@@@A)BF[N#]A[#]A^GCS@@]@)@[^C_0@@[H/)__"]@)@@(H@)@@VPK
)@@G@@[[@@@[G[@@@YC.@@@][@)@@*[@)@@$BY@@@A)BP[F#@--#]A^G]A^@@@@@@@/,0@JG[#)@@?PL
)@@G@@]@@@[ C#)@@:H@@@@V[@@@@:G@@@@%C/@@@[[#0@@%BZ@@@A)BY[F#]A^[#@)]@-)@@@@@@@PM
)@@G@@(@@@@W8L@@BPG_0@@[8LK@BWG_)@@[@^E@[$/K@@[!@@@@@?@@@@@%CA@@@A)B$[F@^GCSK0PN
)@@G@@--#]A^G@@@@@ @@@@*[@)@@,G@)@@VC@)@@W[@@@@!G@@@@V[@@@@$C/@@@[/K@@CVCB@@@APO
)@@G@@)B0[EK0--#]@CS^G@@@@@@@@[@)@@\G/)@@[[[)@@*C.)@@[/K@@B_(@@@@X[[@@@[G[@@@YPP
)@@G@@C.@@@[CC@@@A)B9[F#]A^G]A^GCSK0-)@@@@C#0@@!H@@@@!C@@@@,[])@@[G])@@YC")@@]PQ
)@@G@@[]@@@0G]@@@XC]@@@,CD@@@A)C][EK0--@K^GCSK^G@@@@@@@^-@[$/K@@[!@@@@[=@@@@@%PR
)@@G@@/,0@JG/K@@CG*@@@@X[#0@@%[@@@[^CE@@@A)CF[F@K0--#@--@K0-)@@@@@@@@@@?@@@@@%PS
)@@G@@/,0@JG[#)@@?[@@@[ C#)@@\H@@@@\C@@@@0/K@@CSCF@@@A)CO[N@K0C@)C]A^[#@ @@@@$PT
)@@G@@/K@@C3(@@@@X/K@@C38L@@C#G_0@@[8LK@CKG_)@@[@^&@[$/K@@[!CG@@@A)CY[EK0--#]APU
)@@G@@^GCS^G@@@@@@G[@@@YC.@@@[[@)@@0G@)@@VC@)@@X[@@@@\G@@@@V[@@@@*C/@@@[CH@@@APV
)@@G@@)C$[F#]A^G]A^[#]A^@@@@@@/K@@[!@@@@@?@@@@[=/,0@JG[#)@@?]@@@[^C#)@@\H@@@@0PW
)@@G@@[[@@@[CI@@@A)C0[N#@)CSKO [K0@@1@@@@G*@@@@GH@@@@AC@@@@[[@@@@@G@@@@@C@@@@APX
)@@G@@8L@@C:G_)@@[@^6@[$CJ@@@A)C'[N@K0)*EA@K^GCC[@@@@DC@@@@Y/K@@D^1@@@@G*@@@@GPY
)@@G@@H@@@@YC@@@@D[@@@@[C@@@@A/K@@C.CK@@@A)D^[F#]@--#]A^ #@@@@@@@@1@@@@G*@@@@GPZ
)@@G@@H@@@@+C@@@@#[@@@@+T@@@@AC@@@@+/K@@DK(@@@@ICL@@@A)DH[N@K0)*EA@K^GCC[@@@@^QA
)@@G@@C@@@@</K@@DR1@@@@G*@@@@GH@@@@<C@@@@^[@@@@#C@@@@+/K@@DKCM@@@A)DR[MK0--#]]QB
)@@G@@-)^[#@C@@@@1/K@@D+1@@@@G*@@@@GH@@@@1C@@@@ [@@@@1T@@@@=G@@@@AC/@@@[CN@@@AQC
)@@G@@)D-[N[^GCSK0)*S[@@/K@@D!1@@@@G*@@@@GH@@@@2C@@@@A[@@@@2T@@@@GG@@@@=C/@@@[QD
)@@G@@[@@@@ CO@@@A)D:[N#]]CEA@[#@@@@(@@@@FC/)@@[ @@@@G1@@@@I*@@@@IH@)@@&C@)@@FQE
)@@G@@C/@@@[[@@@@AC@@@@2CP@@@A)D5[M^[#]]--@^GCS@T@@@@HG@@@@>C/@@@]/K@@@?(@@@@HQF
)@@G@@[@@@@FC@@@@&/)K@D'+@@@@I @@@@ICQ@@@A)D_[N#]]-)^[#]])@@*@@@@@/K@@@?[@@@@BQG
)@@G@@C@@@@3/K@@EB1@@@@G*@@@@GH@@@@3C@@@@B[@@@@3CR@@@A)ED@V@K^@@@@)[T@K@)EG@V#QH
)@@G@@]^^G@@@@@@[)/,0@@@@ N@[$______ENDFIL/K@@E+N@0@EG/K@@EHCS@@@A)EJ@<#]A^GCSQI
)@@G@@@@@@@@)[V@K@)EN@F#@@@@@@@ O@[$______REWIND@@@@@]@@@@@]@@@@@]@@@@[TCT@@@AQJ
)@@G@@)EO[F]]A^GCSK0--#]@)@@@@/K@@E+N@0@EX@ P@[$@@@@@]@@@@@]@@@@@]@@@@[V@@@@[)QK
)@@G@@/,0@@@CU@@@A)EX[F#]A^E+A^GCSK0-)@@@@9,)@][9,@@[_9!)@[.R]0@[*[^)@[>H8)@@[QL
)@@G@@/K@@@@!^)@[>@ Q@[$CV@@@A)E&[F#]A^GCSK0--#]A^G@@@N[K@]HN[@@]GR[K@]FR[@@]EQM
)@@G@@R@0@]DR@)@]CR@K@]B9\)@] 9\@@]#CW@@@A)E\@F#@@@@@@)[>@C@)E0@N#] )@@@)[$@K@QN
)@@G@@@@@@@@@ Q@@]S22TCD/K@@@@/K@K[>@@F@@@*4@K[>CX@@@A)E2[EK0--#]A^GCSK0-)@@@@QO
)@@G@@A@K@]B9:)@] 9:@@]#9%)@][9%@@[_9()@[.[^@@[>AA0@[*C8@@@JCY@@@A)E;[F#]A^GCSQP
)@@G@@K0--@K0@@@@@G/@__"C@@@[3/K@@JZ^[K@]H^[@@]GA[K@]FA[@@]EA@0@]DA@)@]CCZ@@@AQQ
)@@G@@)F^[F#@-)K0--#@-)@@@@@@@[@@@@4C/@@@[[[@@]M[@)@]L[@@@]KG.@__"C[@@[1G/)__"QR
)@@G@@C@)@]JDA@@@A)FH[N#@)]A@K0--#@@O@K@]LR@K@@6[@)@@6;K)@@[C@-@@@O@K@]MR@K@@@QS
)@@G@@/K@@F>(@@@@@ @@@@5DB@@@A)FR[M^GCSK0--#]A@@*@@@@GD@[@@@R@K@]NA@K@]NO@K@]KQT
)@@G@@R@K@@6 @@@@5[[@@@4;L@@@]C[[@@@DC@@@A)F-[MK^GCS^GCS^@@@R@K@@@/K@@F"(@@@@@QU
)@@G@@ @@@@8[@@@@7C/@@@[[@@@@5C@@@@4/K@@F>0@@@@GDD@@@A)F:[N#@CSK0-)^GCS@R@K@@9QV
)@@G@@[[@@@7;L@@@]C[[@@@O@K@]LR@K@@9[@)@@9;K)@@[C@-@@@O@K@]MDE@@@A)F5[F#]A^G@CQW
)@@G@@]A^G@@@@@@@@[@@@@8C@@@@7/K@@F"0@@@@G*@@@@GD@[@@@R@K@]NA@K@]NO@K@]KDF@@@AQX
)@@G@@)F"[N#]A^G]A^G@@@@C/)@@[ @@@@G1@@@@I*@@@@IH@)@@'C@)@@+C/@@@[[@@@@'T@@@@4QY
)@@G@@C@@@@7DG@@@A)GC[F#@C]A^GCSK0-)@@@@@@[@@@@;G@@@@5C@@@@8[@@@@+C@@@@'/)K@GIQZ
)@@G@@+@@@@I @@@@I(@@@@IDH@@@A)GL[F#]A@K^GCSK0-)@@@@@@G@@@@4C@@@@7[@@@@<C@@@@;RA
)@@G@@/K@@GS1@@@@G*@@@@GH@@@@;C@@@@<DI@@@A)GU[F#]A^G@)CSK0-)@@@@@@C@@@@>[@@@@=RB
)@@G@@C@@@@//K@@G+1@@@@G*@@@@GH@@@@/C@@@@=[@@@@/DJ@@@A)G<[F#@C]A^GCSK0-)@@@@@@RC
)@@G@@[@@@@.G@@@@'C@@@@/[@@@@>C@@@@7/K@@G(1@@@@G*@@@@GH@@@@7DK@@@A)G?[N#]A@K^GRD
)@@G@@CSK0)@C/@__"/K@@G_(@@@@Y[@@@@&C@@@@./K@@G31@@@@G*@@@@GH@@@@.C@@@@&DL@@@ARE
)@@G@@)G6[F#]A^GCSK0@)@@@@@@@@8L@@G/[@[)@@C@])@@[@@@[^Q@)@[0R@)@[+Q@K@[\R@K@[+RF
)@@G@@G@@@@YDM@@@A)G_[F]MA^GC]A@^G@@@@@@@@C@)@@'[@@@@@G@@@@@C/@@@[@A[@[:/K@@I9RG
)@@G@@@@@@[Z@@@@@@/,0@@@DN@@@A)HC[N#]A@^[]MA^GC@/K@@I9@@@@[<@@@@@6/,0@@@/K@@HNRH
)@@G@@(@@@@@[[@@@@G[@@@@C[@@@[[@)@@"DO@@@A)HM[F#@)CMK0--@K0-)@@@@@C@@@@*@AC@[:RI
)@@G@@/K@@I9@@@@[<@@@@@9/,0@@@/K@@HU(@@@@@@AA@[:DP@@@A)HV[MK0--#]@CS^G@@C_)@@[RJ
)@@G@@G[@@@YC.@__"[@)@[@C/)@@]/K@@IE(@@@@Y[@@@@_G@@@@$;@@@@<DQ@@@A)H>[F#@--#@-RK
)@@G@@)K0-)@@@@@@@R@)@@Z[@)@@ZC@-@@@[@@@[@;@@@@<C@@@[@[#)@@-[[@@[^R@K@[\DR@@@ARL
)@@G@@)H,[N#@-)K0--#@CS@[[)@[#;L)@@]C[+@@@O@)@]LR@)@[][[@@[];L@@@[[[@@[[C[]@@@RM
)@@G@@O@)@]MDS@@@A)H8[F#]A[#]A^GC]A^G@@@@@)@@@@_C@@@[@/K@@I](@@@@M[]K@@M+]@@[[RN
)@@G@@C"@@@[[[)@@"T[)@@"DT@@@A)I[[F#]^=GCSK^G@)@@@@@@@8L@@H$G_)@@[O/K@@[@AT@[:RO
)@@G@@/K@@I9@@@@[<@@@@[]/,0@@@[@K@@_DU@@@A)IE[#]M]--@K0--#]])[X@C@WRITE G@@@@]RP
)@@G@@T@@@@AC@@@@"@AV@[:/K@@I9@@@@[<@@@@@]/,0@@@DV@@@A)[Y@C@)IM@;[K)--#]A^GCS@RQ
)@@G@@@@@@@@@@@@@^@@@@@_@@@@[<@@@@[X@@@@[)/,0@@@[@@@@]______DW@@@A)IT[F#]A^[@KRR
)@@G@@^G]A@@@@@@@@C_)@@[G@@@@YC/@__"@AZ@[:/K@@J[N@0@IY/K@@IZ*@@@@Y@AX@[:DX@@@ARS
)@@G@@)I+[N#]A^GCSK0CS@@(@@@@GH@]@@@C@#@@@[#)@@-[@@@[^Q@0@[\R@0@[+Q@K@[0R@K@[+RT
)@@G@@R@)@[,DY@@@A)I?[N@@K@[@@@@@@@@8L@@I*G_)@@[O/)@@[[@#)@@C@[)@@/K@@G_[@#@@@RU
)@@G@@G/@@@[C@#@@@/K@@I1DZ@@@A)I6[F@K^G]@)CSK0-O@@@@@@/K@@@@!^)@[(@A%@[:/K@@I.RV
)@@G@@N@0@I/C8)@@#@A(@[:/K@@J[N@0@I8EA@@@A)I_[EK0--#]A^GCSK0-)@@@@R@0@]WR@)@]VRW
)@@G@@R@K@]U9\)@]S9,@@]Q9!)@]OR]0@[?[^)@[(H8)@@[EB@@@A)JC@N#]A@@@@)[(@C@)JE@N#RX
)@@G@@] )@@@)[:@K@@A%@@]OUTPUT/K@@@@/K@K[(@@F@@@*4@K[(N[@@]XEC@@@A)JG[EK0--#]ARY
)@@G@@^GCSK0-)@@@@A@0@]WA@)@]VA@K@]U9:)@]S9%@@]Q9()@]O[^@@[(AA0@[?C8@@@^ED@@@ARZ
)@@G@@)JP[N#@)C]@C]@)C@@/K@@F][^@@HN[^@@F%[^@@F*C8FK@[[^@@HG[^@@FK[^@@FIC8FK@@SA
)@@G@@^[@@]XEE@@@A)JZ[MK^@K0CS^G@@@@C8FK@^[@@@]JC8FK@#[@@@[3C8FK@][@@@[2C8FK@[SB
)@@G@@[^@@[Y[^@@@\C8FK@@EF@@@A)J([N@^[@K^[@K^[@@[^@@#4[^@@#=[^@@#2[^@@^O[^@@]:SC
)@@G@@[^@@^W[^@@^@[^@@^SC8FK@ [^@@#>EG@@@A)J3[N@K^[@^[@K^@@@C8FK@B[^@@HA[^@@@(SD
)@@G@@[^@@EC[^@@H C8FK@A[^@@]*[^@@@*[^@@^H[^@@#3EH@@@A)J.[N@K^@K^[#]@CS@[@@@[\SE
)@@G@@C8FK@D[^@@^0[@@@[1[^@@[U[^@@@7C8FK@C[^@@HF[^@@HE[^@@@%EI@@@A)KB[#@^G]A[#SF
)@@G@@]@@@@@)[Z@C@@@@@@]/K@@@@[@@@[4C8FK@H[@@@[,C8FK@F[@@@[0C8FK@E[^@@^\EJ@@@ASG
)@@G@@)[)@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[@@@@@@@@ SH
)@@G@@@@@@@AEK@@@A@@@@@@]A^G@C]A^G@@@@@@@@[@@@@8C@@@@7/K@@F"0@@@@G*@@@@GD@[@@@SI
)@@G@@R@K@]NA@K@]NO@K@]KDF@@@A@@^@@#@@B@@B@@P@@[@@T@@[@@#@]Y@C@@KJ@@@@@JS1IODRSJ
)@@G@@      URSORT      S22DWR      NPRT$       NIO2$       NERR4$      NERR3$SK
)@@G@@      S22TCD      @@[@@@@@@@E2S22SIZ      ]@@@C@@]@@@@D[[E]V*@@@@K0@@@@KSL
)@@G@@/K@]T C[]A!B[[^^?;C/@@@[G@@E),[@@E),R@0E),D@[E]W*@@@@G0@@@@G/K@]TJC@]A!VSM
)@@G@@[@#^?;C/)@@[G@)E),[@)E),R[@E),D@[E]X*@@@@G0@@@@G/K@]TTC@]A!\[@^^?;C/)@@[SN
)@@G@@)@@@V#[#@@@@)@5@0@@@@@@@UMPS) TROL DB2 CONCROSTA4X,22H(1H0,3G/@__"C@@@ #SO
)@@G@@R@K@ #AA@@@A)@;@C@)@#@;#[][#[#[#[] #@@@@@@@@@@^(/,0@@@@[D@^8@@@@^(@@@@@5SP
)@@G@@/,0@@@[@@@ ^______AB@@@A)@E@<#[]L#[#@@@@@@)@/@)@@@@@@@ETERS) PARAMS22BLKSQ
)@@G@@(018H0@[F@^8@@[@@//,0@@@@[E@^8AC@@@A)[@@K@)@I@<]P@K0KK)[]@K@@@@@@@______SR
)@@G@@NBRVAR@@@@@]@@@@[@/,0@K>'^@@@@______NSCALEAD@@@A)@M@<#[@K0KK)[^@K@)@Q@N#SS
)@@G@@[@@@@@/,0@K>@[J@^8______NWHEAD@@@@OT@@@@[]/,0@K>@[I@^8AE@@@A)@S@N#[[@@@@ST
)@@G@@)[A@K@)@U@<#[@K0KK@@@@O>@@@@[A/,0@K>@[K@^8______NSCOUT@@@@O=@@@@[^AF@@@ASU
)@@G@@)[C@K@)@Y@<#[@K0KK)[E@K@@@@@@@______NWTAB @@@@O$@@@@[C/,0@K>@[L@^8______SV
)@@G@@NTABCDAG@@@A)@+[##[@K0KOG[#[[@)[G@C@REWIND(@@@O=[@@@@@C/@@@^@[N@^8@@@@O&SW
)@@G@@@@@@[E/,0@K>@[M@^8AH@@@A)[H@C@)@%@;@K+K0K0K0K0K0@@@@@@@@@@@[@@@@^:@@@@^:SX
)@@G@@@@@@[G@@@@^%/,0@@@/K@@[_______AI@@@A)@1@;#[] #[#[]L#[#@@@@@@)[I@C@(/011HSY
)@@G@@@[T@^8@@[@[I/,0@@@@[S@^8@@@@^?/,0@@@@[R@^8AJ@@@A)[J@K@)@8@;]P[K0K^G^G^@@SZ
)@@G@@/K@@[_@@@@^:@@@@^(/,0@LU[@@@@]C@@@O='^@@@@CARDS)0HEAD AK@@@A)@_@<#@K0@@@TA
)@@G@@)[L@K@)[#@N#[@@@@@/,0@K>[@)@@^______HEAD  C@-@@[[@@@@#C@[@@@@[X@^8AL@@@ATB
)@@G@@)[ @N#[#@@@@)[N@K@)[B@V#[@K0@@@@@@@@@@@@[N/,0@K>@[)@^8______CARDS @@@@@#TC
)@@G@@@@@@[LAM@@@A)[E[F#[#[#@K0K0^G@@@@@@@*@@@@GH@@@@]C/@@@[ @@@@A[@@@@ T/@@@FTD
)@@G@@C@@@@^@[-@^8@@@@@^AN@@@A)[N[F@^G^[#[#[@K0K-@@@@@/,0@@@@[&@^8/K@@[_@@@@@ATE
)@@G@@@@@@@ /,0@LU[@@@@AC/@@@[/K@@[QAO@@@A)[W[N#[#@K0@^G^G@@C@@@ ^[#)@@B[@@@[^TF
)@@G@@C_)@@[W/@@@F;O@@@=G@@@@ C/@__"@[$@^8@@@@@^AP@@@A)[&[F#[#@K0K0K=K0K0K0@@@TG
)@@G@@C[)@@C@[?@^8@@[@[P/,0@@@[@@@@CG@@@@BC/@@@E[@@@  G@@@@BAQ@@@A)[\[F#[#[#@^TH
)@@G@@D=[]O@@@@@@@G_)@@F'^@@@@8LK@[3'^K@@@C8])@@[[)@[ Q@)@  R@)@^!H[)@@BAR@@@ATI
)@@G@@)[P@)@@@@@@@)[8@:@^G^G^@/C@@[_]@@@@]H@@@@]C/@@@[8L@@[=)     0A6,A401H*,1TJ
)@@G@@(20X,0AS@@@A)[.[EK[#[[K^COG^G@@@@@@@@[;@^8@@@@^?/,0@@@/K@@DV(@@@@][@@@@@TK
)@@G@@C/@@@[/K@@@;*@@@@GAT@@@A)]A@V]L#[#@@)[T@0@@@@@@@NO,5X,6HSCAL,4X,00S -  ITL
)@@G@@0SCALE(/012H@[/@^8@@[@[T/,0@@@AU@@@A)[Z@*@@@@@@@)]D@<]OKK@@@R/)@@[G@@@@]TM
)@@G@@C/@__"'^@@@@)     SCALENX,006HALTP,8006HSCAV@@@A)]H[MK0KKK[#[[K0@@[@)@@GTN
)@@G@@D@+@AM[@@@@FC/@@GD/K@@]S0@@@@G*@@@@GD@]@AMA@)@@E[@@@[^AW@@@A)]R[F@^ #[[^TO
)@@G@@G^COG@@@@@@@@@@@^,/,0@@@[@)@@G;K)@@#C@+@AM[@K@@F+@]@AMC/@@@B/K@@]YAX@@@ATP
)@@G@@)])[F#[]L#[#[#[[K0K0Y3@@@@MJ_"@@K@@G@@K@@F@@M@@]@@K@@E@]E@^8@@[@[=/,0@@@TQ
)@@G@@@]D@^8AY@@@A)](@N]O@@@@@)[=@)@@@@@@@)]:@F@@@@@@@8L@@]I0)    ,I5,I1,I9,I8TR
)@@G@@(6X,I6O/)@@['^@@@@AZ@@@A)]?@3] #[#[]L#[#@@)[*@S@BLE FL0VARIA(/020H@]P@^8TS
)@@G@@@@[@[*/,0@@@@]O@^8@@@@^?/,0@@@BA@@@A)[:@)@@@@@@@)]2@:]OKK@@@[@@@[^C_)@@[TT
)@@G@@G@@@ORC/@__"'^@@@@RSCL) 006HVA I,4X,AGS  -BB@@@A)]7[F#[]H#[@K0K-K0K0@@@@TU
)@@G@@C/@@@[@]W@^8@@@@^,/,0@@@@]V@^8/K@@#X@@@@@E/,0@@@[#)@@EBC@@@A)#@[N#@K0K0^TV
)@@G@@G@^G@@]@@@@IG/@__";@@@@)G/@__"H@@@@E;@@@@<R@)@@H[@@@@H;K@@@[G@@@@EBD@@@ATW
)@@G@@)#E[N[K0^G^G@K[#@@H@@@@JC/@^8)/K@@#P1@@@@G*@@@@GD@@@@J[@)@@J;C)@@O;))K@ITX
)@@G@@C@+@G+BE@@@A)#O[F#[]L#[#[#[#[]OK@@@@8L@@]7G_)@@['^@@@@@@K@@J@@K@@E@]+@^8TY
)@@G@@@@[@[\/,0@@@]@@@@JBF@@@A)[\@K@)#X@F[@@@@@@)[1@K@)#Y@N@K+@@@@/,0@@@/K@@DVTZ
)@@G@@______REWIND(@@@O>5,I8) (15X,IBG@@@A)#)[F#[#[#[#[#[#@KK@@@@@C_0@@[G@@@O>UA
)@@G@@C/@__"@]:@^8@@@@@[@@@@^:@@@@^:@@@@[1@@@@^,BH@@@A)#([EK0K^G^G^[#[] #@@@@@UB
)@@G@@@@@@^(/,0@@@@]\@^8/K@@DV@@@@^:@@@@^\/,0@LU[#0@@K[@@@[^BI@@@A)#2@<#[]L#[#UC
)@@G@@@@@@@@)[3@)@@@@@@@RUM)  FROM DSCALE (016H0@]1@^8@@[@[3/,0@@@@]0@^8BJ@@@AUD
)@@G@@)[7@K@)#6@3]OK^[#[@@@@@@@@@@@@@@@@#;@@@@[7/,0@K>^^K@#;N8L@@@'^@@@@______UE
)@@G@@SCALNOBK@@@A)[9@K@)#/@3#@K^[#[@@@@@@@@@@@@@@@@^[@@@@[9/,0@K>^^K@^[N8L@@[UF
)@@G@@@]4@^8______STYPE BL@@@A)[;@K@)^]@3#@K^[#[@@@@@@@@@@@@@@@@^B@@@@[;/,0@K>UG
)@@G@@^^K@^BN8L@@]@]5@^8______NCAT  BM@@@A)[.@K@)^C@3#@K^[#[@@@@@@@@@@@@@@@@^HUH
)@@G@@@@@@[./,0@K>^^K@^HN8L@@#@]6@^8______NPRIM BN@@@A)[_@K@)^I@3#@K^[#[@@@@@@UI
)@@G@@@@@@@@@@@@^N@@@@[_/,0@K>^^K@^NN8L@@^@]7@^8______WTS   BO@@@A)][@K@)^O@3#UJ
)@@G@@@K^[#[@@@@@@@@@@@@@@@@^T@@@@][/,0@K>^^K@^TN8L@@ @]8@^8______NLABELBP@@@AUK
)@@G@@)]#@K@)^U@3#@K^[#[@@@@@@@@@@@@@@@@^Z@@@@]#/,0@K>^^K@^ZN8L@@A@]9@^8______UL
)@@G@@NDIGITBQ@@@A)] @K@)^)@3#@K^[#[@@@@@@@@@@@@@@@@^>@@@@] /,0@K>^^K@^>N8L@@BUM
)@@G@@@]'@^8______NVALUEBR@@@A)]B@K@)^&@3#@K^[#[@@@@@@@@@@@@@@@@^:@@@@]B/,0@K>UN
)@@G@@^^K@^:N8L@@C@];@^8______OTHER BS@@@A)]D@K@)^?@;#@K^[#[@K0@@@@].@^8@@@@^1UO
)@@G@@@@@@]D/,0@K>^^K@^1N8L@@D@]/@^8______MISSNGBT@@@A)^3[MK0^G[#@K0^G@@[]@@@PUP
)@@G@@C][@@[[[)@@OC[-@@B[[@@@NC[[@@ [@)@@MC@-@@^[@@@@LC@[@@]BU@@@A)^.[F#[@K^G^UQ
)@@G@@G^[#[] #@@@@@@@@^,/,0@@@@# @^8/K@@DV@@@@^:@@@@@L/,0@LU/K@@ *(@@@@MBV@@@AUR
)@@G@@) A@<#[]L#[#@@@@@@)]F@)@@@@@@@,10X,0S -  IWEIGHT(013H @#B@^8@@[@]F/,0@@@US
)@@G@@@#A@^8BW@@@A)]J@C@) E[#]OK0^G[#[]^@@/,0@@@[#)@@E[@@@[ R@)@ #C_)@@[G@@@@LUT
)@@G@@C/@__"'^@@@@02HWT)BX@@@A) M[F#[#@[@K=K0K0@@@@@@@@#K@^8@@[@]K/,0@@@/K@@ ZUU
)@@G@@1@@@@G*@@@@GD@]@@@@#H@^8@@@@^,BY@@@A) V@N#@@@@@@)]K@S@) X@V]P@K=@@/,0@@@UV
)@@G@@/K@@ >'^@@@@5)    3,E15.(10X,I@@M@@@@@K@@EBZ@@@A) )[##[#[#@K>[@@@@)]N@C@UW
)@@G@@(10X,I8LK@ KG_)@@[O/)@@['^@@@@@@M@@@@@K@@E@#Q@^8@@[@]NCA@@@A)]O@C@) *[##UX
)@@G@@[@K0^G^[#[#@@@@@^:@@@@ A/,0@LU[@@@ AT/@@@FC@@@@N/K@@B (@@@@N3,I10)CB@@@AUY
)@@G@@) 0[F@K0K-K0K0^G^G^D@@@@/,0@@@[@@@ AG@@@@NC/@__"@#)@^8@@@@^,/,0@@@@#Z@^8UZ
)@@G@@/K@@DVCC@@@A) 9@N#[#@@@@)]P@)@@@@@@@) ;@F]O@@@@@'^@@@@T.)    -  CALABELSVA
)@@G@@(015H @#-@^8@@[@]PCD@@@A) /[EK0K0K-K0K0K0^G@@@@@R@0@@QN.)@@ER@)@^0@#*@^8VB
)@@G@@@@@@^,/,0@@@N[K@ A[@@@@QC/@@@[CE@@@A)A [F#@K0^G^G^@K0@@@@@@@H[@@^ZC.@@@[VC
)@@G@@8L)@A^[@)@@QG@)@@QC/)@@[[@])^XC@#@@@O@0@ ^CF@@@A)AI[F@^[]L#[#[#[#[#@@@@@VD
)@@G@@@@K@^<@@K@^)@@K@^Y@#1@^8@@[@]T/,0@@@/K@@AW*@@@@K/D@@ALCG@@@A)AR@V#[#[#@@VE
)@@G@@)]T@)@@@@@@@@@@@)@@@@@@@A6)   01H.,44,I6,0(10X,I@@K@^&@@K@^>@@K@^=CH@@@AVF
)@@G@@)AU[N]P@^G[#@K0K0@[@)@[A @@@@T[[@@@SC.@@@AG@)@^ZC/)__"[@@@@RC/@@@#/K@@B^VG
)@@G@@'^@@@@CI@@@A)A=[F#[#[#[#[#@K0^G@@@@@C[]@^Y[@=@@[C@+@^X[@^@@@C@#@^XO[@@ #VH
)@@G@@R[@@@TR@)@@SR@0@@RCJ@@@A)A![E^G^G[#[#@K0@@@@@@@@G])@@SC")@@][]@@@RG]@@@RVI
)@@G@@C"@@@[[[)@@TG[)@@TC.)@@#[[^@@]CK@@@A)A6[F#[@^D^G^G^G^G^G@@@@Q@0@ #R@0@^!VJ
)@@G@@@@K@^Y@^C@^8@@[@]X/,0@@@G.)__"8L)@A=[])@@SCL@@@A)A_@2^D=[]P@@@@@@@)]X@S@VK
)@@G@@,I3,004,3(3X(10X,I8LK@ _'^@@@@8L)@B@'^K@@@C8#)@@[[)@[ACM@@@A)])@K@)B @3#VL
)@@G@@[@K-K0K0K=@@@@@@@@/,0@@@@^O@^8@@@@^,/,0@@@/K@@DT(@@@@O6))   1H.,2ACN@@@AVM
)@@G@@)BF@N#[#@@@@)]+@8@@@@@@@002HVAER,5X,   ORD  CAT.DATA -SCALE (027H @^P@^8VN
)@@G@@@@[@]+CO@@@A)](@K@)BH@;]P#[[K0^@@@@@C/@@@[/K@@BP*@@@@GH@@@@KC@@@O> @@@@AVO
)@@G@@'^@@@@02HVB),10X,0CP@@@A)BO[N#[#@K0^G@K^G@C@@@@O/K@@BZ1@@@@G*@@@@GH@@@@PVP
)@@G@@C/@@@][@@@@UT/@@@#C@@@@O[@@@@ACQ@@@A)BY[F#[@K0K0K^G[#@@@@@@@C/)@@]G@@@@OVQ
)@@G@@C/@__"@^Y@^8/K@@DV@@@@@A@@@@@U/,0@LU[@@@@UCR@@@A)B$[N#@^@K0K0^G^CK/,0@@@VR
)@@G@@[#)@@E[@@@[ Q@)@ #R@)@^!C_)@@[/K@@B/1@@@@I*@@@@IH@)@@PCS@@@A)B1[F#[#[]L#VS
)@@G@@[#[#@K>@@@@@G_)@@['^@@@@@@M)@@@@K@@E@^>@^8@@[@]:/,0@@@@^=@^8@@@@^,CT@@@AVT
)@@G@@)]:@S@)B'@3@K[#@K0@@@@@@R[@@ #C_)@@[G@@@@OC/@__"/K@@DT8LK@B\15.5) 6,8X,EVU
)@@G@@(12X,ICU@@@A)C@[EK0K-K0K0K0K0K0@@@@@C@^@@@O@0@ ^O@0@@OR@0@@E@^0@^8@@@@^,VV
)@@G@@/,0@@@[#)@@E[@@@[ CV@@@A)CD[MK0@^G@K0@@@@@[@0@@X+@=@@@C/)@@[[[K@@W+[@@@IVW
)@@G@@C.@@J_;K)@@[C@=@@@[@@@@V;K@@@FCW@@@A)CN[MK0^@^[]L#[#@@@^8@^8@@[@],/,0@@@VX
)@@G@@/K@@C+(@@@@JG/0__"/K@@C5(@@@@MH[)@@PC.)@@]CX@@@A)CX@V#[#@@@@)],@)@@@@@@@VY
)@@G@@@@@@)@@@@@@@A6)   A6,6X,I6,9X,(12X,2@@N@@@@@K@@V@@K@@WCY@@@A)C)[F]P@K0K0VZ
)@@G@@K0K0^G^G@@@@G@@@ ^G@@@@E;@@@@<C@@@@OO@)@ ^O@)@@OR@)@@E/K@@DQ'^@@@@CZ@@@AWA
)@@G@@)C([F#[]L#[#[#[#@K0@@@@@C8#@@@R@0@  @@M@@@@@K@@V@@K@@W@^_@^8@@[@],/,0@@@WB
)@@G@@[@@@  DA@@@A)C2[F]T]P@^G[@K0K0@@@@@@O@)@@OR@)@@E/K@@D^(@@@@GH@@@@XC/@@@[WC
)@@G@@/K@@DQ'^@@@@'^K@@@DB@@@A)C;@;#[]L#[#[#[#@@)]2@K@I6,4X,(12X,2@@M@@@@@K@@VWD
)@@G@@@@K@@W@ C@^8@@[@]2/,0@@@O@)@ ^DC@@@A)]4@K@)D]@;]P@K0K0K0K0@@;@@@@<C@@@@OWE
)@@G@@O@0@ ^O@0@@OR@0@@E/K@@DQ'^@@@@)     2E15.5DD@@@A)DD[F#[#[#[]L#[#[#[#@@@@WF
)@@G@@@@N@@@@@K@@V@@K@@W@ J@^8@@[@]2/,0@@@[@@@  G@@@ ^G@@@@EDE@@@A)DM[N#@K&K>[WG
)@@G@@@^[[@@(@@@O$8L@@#%G_0@@[8LK@C[G_)@@[O.@@@['^@@@@'^K@@@C8]@@@R@)@  DF@@@AWH
)@@G@@)DW@;@K-K0K0K=K0K0@@@@@@)]6@C@(/028H@ W@^8@@[@]6/,0@@@@ V@^8@@@@^?/,0@@@WI
)@@G@@/K@@J6DG@@@A)]7@*@@@@@@@)D<@<]OKK@@@R/0@@[G@@@O$C/@__"'^@@@@ABNO)  -   TWJ
)@@G@@ -  I UMBERS0TAB NDH@@@A)D$[EK0K-K0K0K=K0K0K0@@@@@K@@E@ <@^8@@[@]//,0@@@WK
)@@G@@@ +@^8@@@@^,/,0@@@A@0@@E[@@@[^DI@@@A)D0@V[K>@@@@)]/@K@)D3@N@KK@@@@@@@@@@WL
)@@G@@(@@@O&8L@@D*7,I9) (10X,IO/0@@['^@@@@@@N@O:DJ@@@A)]"@K@)D5@3@K+K0K0K0K0@@WM
)@@G@@@@@@@@@@@@^:@@@@^:@@@@]"@@@@^?/,0@@@/K@@J6______REWINDDK@@@A)D;@F#@@@@@@WN
)@@G@@)#@@K@)D/@<#[]D#[#@@@@@@@@@@#@@@@@^(/,0@@@@ ?@^8______REWIND@@@@@[DL@@@AWO
)@@G@@)E@@V#[#[#@@)#]@K@)E#@V#[]D#@@@@@@^1/,0@@@@ !@^8______REWIND@@@@@[@@@@^:WP
)@@G@@@@@@^:DM@@@A)EA[F#[#[#[#[#@KK@@@@@@@[@@@[^C_0@@[G@@@O&C/@__"@ ,@^8@@@@@[WQ
)@@G@@@@@@^:@@@@^:@@@@#]DN@@@A)EJ[F#[#[[K0^@K0@@@@@@@@C/@@@][@@@@AC/@@@[/K@@ERWR
)@@G@@*@@@@GH@@@@YC@@@O& @@@@A[#0@@YDO@@@A)ES[F#[@K0K0K^G[#[]^@@@@/,0@@@[@@@@ZWS
)@@G@@C@[@@@@ 6@^8/K@@J6@@@@^:@@@@^1/,0@LU[@@@@@DP@@@A)E-@3#[#[]L#[#[#@@)#^@S@WT
)@@G@@B,I5) *** TA(008H0@@K@@Z@ 9@^8@@[@#^/,0@@@@ 8@^8@@@@^(DQ@@@A)E$@N]O@@@@@WU
)@@G@@)#B@K@)E(@<#@K^@@@/,0@K>^^K@E,N8L@@][@@@@)______NAENT C@[@@['^@@@@DR@@@AWV
)@@G@@)E!@N#[@@@@@)#D@K@)E\@<#@K^@@@/,0@K>^^K@E4N8L@@#@ "@^8______NFENT @@@@E,WW
)@@G@@@@@@#BDS@@@A)E3@<#[@K0@@)#F@K@)E7@N#@@@@@@C/)@@[[@@@@-______RCSTATC@[@@^WX
)@@G@@@ _@^8@@@@E4@@@@#DDT@@@A)E9@:#[#[@K0K0@@@@)#H@K@@@@@@@@@@@@@______RCORR WY
)@@G@@@@@@  @@@@#F/,0@K>[@0@  +@)@@-DU@@@A)E"@;#@K0K0K^G^G@@)#J@K@______BVSTATWZ
)@@G@@@@@@  @@@@#H/,0@K>[@K@  +@@@@-C/@@@]@A[@^8DV@@@A)F [F#@K0K0K^G^G^G^G@@@@XA
)@@G@@C@@@@-@A#@^8@@@@  @@@@#J/,0@K>[@K@  +@@@@-C/@@@^@A]@^8DW@@@A)FI@E@)#L@K@XB
)@@G@@)FJ@:#@K0K0K@@@@@@/,0@K>[@0@  +@)@@-C/)@B_[@@@@-______NDCENT;K@@@#DX@@@AXC
)@@G@@)FO@N#[#@@@@)#N@K@)FQ@<#[#@K0@[@@@  ;K@@@DC@@@@-@A @^8______NCPCOL@@@@  XD
)@@G@@@@@@#LDY@@@A)FU[F@K0K0K0K^G^G^[#@@@@@AB@^8/K@@J6@@@@@A@@@@@)/,0@LU@AA@^8XE
)@@G@@@@@@  @@@@#N/,0@K>DZ@@@A)F<[F] #[#@K0K0K=K0K0@@@@AD@^8@@[@#P/,0@@@[@@@  XF
)@@G@@G@@@@)C/@__"@AC@^8@@@@^(/,0@@@EA@@@A)F?@:#[]P#[#[#@@@@)#P@S@@@@@@@,048H XG
)@@G@@TAB,I5(004H0N[K@  Q@)@ #R@)@^!'^@@@@@@K@@ZEB@@@A)#S[@@@@@@@@)F1@E@@@@@@@XH
)@@G@@C@])@@LEVEL)TAL   N   TO/S   SR.   A-   VANATES COORDIEC@@@A)F2[F#@K0K0^XI
)@@G@@G[#[#@@@@@@@[[K@@<+[@@@-C.@@@[[@@@@-;K@@@F[@0@@++@)@@-C/)@B_[@@@@-ED@@@AXJ
)@@G@@)F;[EK0^G^G[#@K0@@@@@@@@+]@@@-C"@@@#[@@@@-;K@@@E[[0@@=+[)@@-C.)@J_[@@@@-XK
)@@G@@;K@@@[EE@@@A)G^[F#@K0K-K0K0K=K0K0@@@@AU@^8@@[@#)/,0@@@@AT@^8@@@@^,/,0@@@XL
)@@G@@[@@@@&;K@@@][]K@@>EF@@@A)GH@3#[#[#[#[#[]O@)#)@S@6,I6,I9,I6,I(20X,I'^@@@@XM
)@@G@@@@K@@+@@K@@<@@K@@=@@K@@>@@K@@&EG@@@A)#<@C@)GN[#@^G^[#[#[@K0@@A>@^8/K@@J6XN
)@@G@@@@@@^:@@@@^(/,0@LU[@@@@@C/@@@#8LK@F18)    EH@@@A)GV[EK0^G^COG^G^D^G@@@@@XO
)@@G@@@@[@#=/,0@@@@A*@^8@@@@^,/,0@@@[@)@@$C@-@@[[@@@@ZC@[@@@EI@@@A)G=@N#[#@@@@XP
)@@G@@)#=@8@@@@@@@  TYPE- VAR SPECS ENTRY ,025H TAB,I5(004H @@K@@Z@A(@^8EJ@@@AXQ
)@@G@@)#:@C@)G&[#]P@K0K0K^G[#@G@@@@$C/@__"@A!@^8/K@@J6@@@@@A@@@@@$/,0@LU'^@@@@XR
)@@G@@)     EK@@@A)G,[N#[#@[#@^G^CK@/,0@@@[@0@@*+@=)@@C/)@@B[@@@@&;K@@@#C@^@@@XS
)@@G@@[@@@[ Q[@@ #R[@@^!EL@@@A)G8[##[#[]L#[#[#[#[]O@@@@@@@@@'^@@@@@@K@@*@@K@@&XT
)@@G@@@A4@^8@@[@#?/,0@@@@A3@^8@@@@^,EM@@@A)#?@K@)H@@;@^G^[#[#[@@@@/K@@J6@@@@^:XU
)@@G@@@@@@^(/,0@LU[@@@@@C/@@@ 8LK@G112,I6)(15X,IEN@@@A)HB[F#@^G[#[] #[#@@@@@@@XV
)@@G@@@A"@^8@@@@^(/,0@@@[@)@@(C@-@@[[@@@@Z;K@@@[C@[@@@@A;@^8EO@@@A)HK[]K0K0K=KXW
)@@G@@0K0K0K0@@@@@@@@@@@@@K@@Z@@K@@(@A_@^8@@[@#,/,0@@@[@@@ BG@@@@(C/@__"EP@@@AXX
)@@G@@)#,@*@@@@@@@)HS@<]O@@@@@(@@@@H+@[@@@C/@@@['^@@@@I5)   R TAB,LES FO14H FIXY
)@@G@@(/I5,0EQ@@@A)HW@;@K=K0K0K>^G@@)#3@K@22HPRI(10X,0N[K@ BC_)@@['^@@@@@B @^8XZ
)@@G@@@@[@#3/,0@@@/K@@H-ER@@@A)#5@)@@@@@@@)H<@<#[@K0K0@@@@@@@@@@^:@@@@^%/,0@LUYA
)@@G@@[#)@@%T)     IS SEY FLAGNTEMPTES@@@A)H$[F@K0^G[#[] #[#@@@@@@@BI@^8@@@@^(YB
)@@G@@/,0@@@[@)@@?C@-@@#[@@@@:C@[@@]@BF@^8/K@@J6ET@@@A)H0[U^G@[#@@)@@@@I @@@@IYC
)@@G@@*@@@@KH[@@^3C[[@@@C/)@@[ @@@@G*@@@@IH@)@^2C@-@@@C/@@@[EU@@@A)H;[N@^G[;KKYD
)@@G@@4^[#@@C@@@^4/K@@IA[[[@@[C[G@@@[@-@@@C@?J_";@@@@<[@@@@!C@[@@@/=K@I^EV@@@AYE
)@@G@@)I @'K=K0K0K0@@@@@)#9@K@FILEI5(005H0@@L@@[@@L@@@@@K@@%@BR@^8@@[@#9/,0@@@YF
)@@G@@[@[@@[EW@@@A)#;@S@)IG@3]P#@K0@@@@@@@C/)@@[ @@@@G*@@@@?C/@@@[ @@@@,'^@@@@YG
)@@G@@)     - ,2A6,003H EX@@@A)IM[F#[#@[@K0K0K@@@@@@@@/,0@LU[@@@@,C@@@@A/)K@IUYH
)@@G@@+@@@@I @@@@I*@@@@KH[@@@%C[@@@(EY@@@A)IV[F#[#[@K0K-K0K0K=K0@@@@[@#"/,0@@@YI
)@@G@@@B-@^8@@@@^,/,0@@@@B)@^8/K@@J6@@@@@,@@@@@:EZ@@@A)I=@F#@@@@@@)#"@8@@@@@@@YJ
)@@G@@@@@@@@AT)     FORM  TYPE - VARSPECS ENTRY (033H @B+@^8FA@@@A)I>[F]OK0K0KYK
)@@G@@0[#@@@@@@@@@;K@@@M[@@@@0C@#)@@[@@@[AQ@0@ #R@0@^!G@@@@:C/@__"'^@@@@FB@@@AYL
)@@G@@)I,[F#[#[#[#@K0^G^G@@@@@[[K@@*+[@@@0C.@@@_[@0@@&;K0@@A[@0@@0+@)@@0C@)@^5YM
)@@G@@[@@@@1FC@@@A)I7[F] #[#[]L#[#[#[#[#@@@@K@@1@@K@@*@@K@@&@B,@^8@@[@^ /,0@@@YN
)@@G@@@B!@^8@@@@^,/,0@@@FD@@@A)J@@F]O@@@@@)^ @S@)J[@<@K0K^G@ @@@@,/K@@J2(@@@@?YO
)@@G@@8L)@I:6)    9,I5,I(10X,I'^@@@@FE@@@A)J [F#[#@K^G^G^[#[#@@@@@@@@@@,@@@@@?YP
)@@G@@/,0@LU[@@@@,C@@@@A/K@@JF*@@@@GH@@@@%C@@@@(FF@@@A)JI[#@K0K-K0K0K=K0K0@@@@YQ
)@@G@@@@@@@@@B/@^8@@[@^C/,0@@@@B;@^8@@@@^,/,0@@@@B'@^8/K@@J6FG@@@A)^C@8@@@@@@@YR
)@@G@@)JQ@N]O@@@@@C/@__"'^@@@@E)    )  TYP (FREQ- VAR PECS  STAT S(032H FH@@@AYS
)@@G@@)JS[N#[#[#@[#@^G@@[@0@@2+@+@@@C/)@@)[@@@@&;K@@@AC@]@@@[@@@[AQ@)@ #R@)@^!YT
)@@G@@G@@@@?FI@@@A)J+[E^G[#[] #[#[]K@@@@@@/,0@@@@CA@^8@@@@^,/,0@@@[@0@@2;K0@@ YU
)@@G@@[[K@@*+[])@@C.@@@ZFJ@@@A)J:[F#[#[#[#[#[]P@^@@@@@8LK@H<G_)@@[8L)@JW'^@@@@YV
)@@G@@@@K@@*@@K@@2@@K@@&@CB@^8@@[@^JFK@@@A)J4@MK@@@@@@)^J@S@)J6@V@K^G@@@@CM@^8YW
)@@G@@/K@@J9N@0@J8)     ,I6,I7(8X,I98L@@EJG_0@@[FL@@@A)J9[F#[#[#[#[#[#[#[#[#@@YX
)@@G@@R[@@ NR@0@ MR@)@ LR@K@ K9\)@ I9,)@ G9,@@ E9!)@ CR]0@^9FM@@@A)K]@<#[#[#[#YY
)@@G@@@@@@@@)^6@C@)KA@N#[]W@@@/K@@@@/K@K^6@@F@@]*4@K^6N[)@ QN[K@ PN[@@ OFN@@@AYZ
)@@G@@)^8@K@)KC@3#[#[#[#[#[#@@@@@@@@A@K@ K9:)@ I9%)@ G9%@@ E9()@ CAA0@^9@CM@@]ZA
)@@G@@S22DMPFO@@@A)KI[F#[#[#[#[#[#[@K-K0@@@@@@^,/,0@@@/K@@L<^[)@ Q^[K@ P^[@@ OZB
)@@G@@A[@@ NA@0@ MA@)@ LFP@@@A)KR@3#[]L#[#[#[#@@)^M@S@,I6)  ,3H = (2X,A6@@K@ TZC
)@@G@@@@K@ S@CR@^/@@[@^M/,0@@@@CQ@^/FQ@@@A)KX@3]P@K^G^G^G@@@)^'@C@@@@@@@@@@@@@ZD
)@@G@@@@F@@#*4@K^'R]0@^.@CW@^//K@@K-N@0@K)'^@@@@FR@@@A)K<@N#[]W@@@)^/@K@)K>@<#ZE
)@@G@@@K0@@@C@VK@[[@K@ SC@VK@@AA0@^.@CW@@]PLV   /K@@@@/K@K^'FS@@@A)K(@F#@@@@@@ZF
)@@G@@)^P@K@)K%@<@K+K0K0@@@@@@@@@@^P@@@@@@/,0@@@/K@@KP______READ  [@K@ TFT@@@AZG
)@@G@@)K,[M^G^G^G^@K^[@@/K@@LQN@0@K8/K@@K9*@@@@G/G@@K6D@@@@3@C)@ @@@@@@3@@@@@@ZH
)@@G@@@@@@@@FU@@@A)K8[N#@K0K0^G@@@@@C/)@@[ @@@@G*@@@@IH@)@@@C@)@@4C/@@@[]@@@@4ZI
)@@G@@G@@@@3C/@@@[@C+@ @FV@@@A)L][F#@^[@K^G^D^G@@@@@@@@@[@^R/,0@@@@C>@ @/K@@LQZJ
)@@G@@N@0@LC/)K@LD+@@@@I @@@@I(@@@ VFW@@@A)LF@N#[#@@@@)^R@8@@@@@@@ =,I8), LENDZK
)@@G@@ROUBLENPUT TDRUM I***** (033H @@K@@3@C&@ @FX@@@A)LH[F]OK^[#[#[])K0@@@@@@ZL
)@@G@@[^)@^"H8)@@[/K@@@@!^)@^"@C%@ @/K@@LMN@0@LLC8)@@#'^@@@@FY@@@A)LQ@N#[#@@@@ZM
)@@G@@)^"@C@)LS@N#[]W@@@) @@K@@C%@@]INP   /K@@@@/K@K^"@@F@@@*4@K^"R]0@ [FZ@@@AZN
)@@G@@)LU[MK0K0^[@^G^@@@C8FK@@/K@@K:[@K@ VC@VK@[[^@@K"[^@@K,C8FK@@[^@@^"AA0@ [ZO
)@@G@@C8@@@^GA@@@A)L=@V@K0K@@@)^(@0@@@@@@@@@@@@[@@[@@@@@@@@#@@@@@@@@@@@^@@@@@]ZP
)@@G@@/K@@@@[@@@ #[^@@K\GB@@@A)^\@8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@___      ZQ
)@@G@@PRINT PUNCH @@@@@ @@[@@[@@@@@EGC@@@A@@@@@@)IG@3]P#@K0@@@@@@@C/)@@[ @@@@GZR
)@@G@@*@@@@?C/@@@[ @@@@,'^@@@@)     - ,2A6,003H EX@@@A@@^@@ @@D@@D@@V@@[@@Z@@#ZS
)@@G@@@@^@ W@C@@L$@@@@!?@@@@AK@@@@@(S1PCHH      S1PCHD      S1IODR      S1CKVIZT
)@@G@@      NPRT$       NIO2$       NIO1$       NERR3$      NERR4$      S22DMPZU
)@@G@@      @@[@@@@@@@KCS22BLK      ]@@@C@@]@@@@S22BK2      ]@@@C@@#@@@@S22FILZV
)@@G@@      ]@@@C@@^@@@@+B^GCWK8--]]]-)@@@@@@@]P@@[@@[/,0@@@[@)@[@"G)@7YC@)@7VZW
)@@G@@[@@@@_"G@@7XC@@@7UCT@@@@)@@@)@@@@@@@)@@@:[K^ #@@N.@@C,R@K@@D @@@@]/K@@@SZX
)@@G@@*@@@@@HEAD  COMPARMODEL SCALE AA@@@A)@ @;[K^G[[@)@B@K@@@@@@@______REWINDZY
)@@G@@N.@@@ C_)@@[[@@@U$C/@@J* @@@@ 8L@@@  @[)M2AB@@@A)@G[F#[][#[#[#[#[#[#@@@@ZZ
)@@G@@G_)@@[@[P@@H@@@@@A@@@@@E@@@@@E@@@@@B@@@@@^/,0@@@[#)@@^AC@@@A)@P[N@^^^GB?AA
)@@G@@@K@@@@/K@@@-(@@@@GH@@@@@C@[J_"A@K@@^N.@@@#R/K@@[[@@@U(C/@@@[8L@@@GAD@@@AAB
)@@G@@)@Z[EK^G[@K>K0K^@@@@@@@@/K@@@7/K@@@%@[)@@H'^@@@@8];@@>$'0@@ RA0@@^8L@@@UAC
)@@G@@O/K@@[AE@@@A)@*[N@K^CK@^@@@@@@/K@@[U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AD
)@@G@@/,0@@@/K@@[F/K@@[[AF@@@A)@2[N#[[KO @K+@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@AE
)@@G@@/K@@[N @@@U, @@@U! @@@U?@[+@@HAG@@@A)@/[M^[#[@K<@@@@@@@@@@@@@@@@@@@@@@@@AF
)@@G@@@@@@@@/,0@@@/K@@[N@[$@@H/K@@[U@@@@@@@@@@@@AH@@@A)[A[M^[#[@K=@@@@@@@@@@@@AG
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@/K@@[N@[(@@H/K@@[U@@@@@@@@@@@@AI@@@A)[K[M^G^G^^KAH
)@@G@@O[@K0@@[,@@H/K@@[+N@0@[T[@)@@[C@)@@@[@@@@@C@@@@^@[:@@H@@@@@@@@@@@@AJ@@@AAI
)@@G@@)[U[EK^[#[#[]SK0K0@@@@@@R]0@@I[^)@@FH8)@@[/K@@@@!^)@@F@[\@@H/K@@[YN@0@[XAJ
)@@G@@C8)@@CAK@@@A)[<@<#[#[#[#@@@@@@)@F@C@)[$@N#[]W@@@/K@@@@/K@K@F@@F@@@*4@K@FAK
)@@G@@N[@@@NR@K@@M9\)@@KAL@@@A)@H@K@)[(@'K0K0K0K0K0@@@C8FK@@^[@@@NA@K@@M9:)@@KAL
)@@G@@[^@@@FAA0@@IC8@@@D@[\@@#S82CLDAM@@@A)[0[N@^[@K^[@^[@@@[^@@[H[^@@[#C8FK@]AM
)@@G@@[^@@@8[^@@[][^@@[G[^@@@:[^@@[PC8FK@[[^@@@WAN@@@A)['[N@K[@K^[@^[@@@[^@@@;AN
)@@G@@[^@@@,C8FK@^[^@@[I[^@@[^[^@@@'[^@@@!C8FK@#[^@@@9[^@@@?AO@@@A)]^[N@K[@K^[AO
)@@G@@@^[@@@[^@@[B[^@@@.C8FK@A[^@@@/[^@@[A[^@@[K[^@@@\C8FK@ [^@@[J[^@@[ AP@@@AAP
)@@G@@)]I@V@K^@@@@)@D@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[/K@@@@[^@@@0AQ
)@@G@@[^@@[LAQ@@@A@@@@@@C]@@[#C]@K@IC#0K@I"E@@[]"]@@@C"E@@@C"F0@[]^@0@@CD#0@@CAR
)@@G@@"E@@@D[]@@@CK/@@@@@@@@@@@@^@@#@@B@@C@@R@@[@@V@@[@@^@@O@C@@]L@@@@4+S1IODRAS
)@@G@@      S82SCL      S82MOD      S82CMP      S82HED      NERR2$      NERR4$AT
)@@G@@      NERR3$      S82CLD      @@[@@@@@@@[(S82BLK      ]@@@C@@]@@@@@@@@@@AU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AW
)@@G@@)@@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AX
)@@G@@@@@@@@AA@XXX@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@@@@B@@@@@B@@[@@]@@@@C@@@@@@@@4+S82BLKAZ
)@@G@@      ]@@@C@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[EKO[@K0-L#]A^^@@@@@@BB
)@@G@@@@K@U$@[C@@Z@@[@@]/,0@@@@[B@@Z/,0@[-/K@@@E(@@@U* @@@@@AA@@@A)@D@F]*@@@@@BC
)@@G@@)@][@@@@@@@@ARIABLMORE VNE OR OR.  OY2 ERR ONEWA***** (087H '^@@@@AB@@@ABD
)@@G@@)@E[@@@@@@@@)@E@F[@@@@@@ @@@@@OF,I5)LIMIT E THE S ABOVNUMBER WITH E USEDBE
)@@G@@ES WERAC@@@A)@F[N[[@K^GCSKK@@@1@@@@G*@@@@GD@@@U:@[K@@Z@@@@@S/,0@[F/K@@@MBF
)@@G@@1@@@@G*@@@@GD@@@U%AD@@@A)@P@V@K^G@@@)@M@K@)@S@V#]^^G@@@@@@@M/,0@@@@[M@@ZBG
)@@G@@______NWCOMP@@@@@T/,0@[F/K@@@TAE@@@A)@V[F#]@)CSK^GCSKO@@@@@@/K@@@$*@@@U!BH
)@@G@@@[O@@Z@@@@@U/,0@[F@[N@@Z/K@@@+/K@@@+@@@@@@AF@@@A)@=[F@K^GC]A^GC]A^G@@@@@BI
)@@G@@@[S@@Z@@@@@W/,0@[F@[R@@Z@@@@@V/,0@[F@[Q@@Z/K@@@0N@0@@&AG@@@A)@!@:@K^GCSKBJ
)@@G@@0@@@@@)@X@C@)@2@F#@@@@@@/K@K@X@@F@@]*4@K@XR]0@@)@[T@@Z/K@@@0N@0@@\AH@@@ABK
)@@G@@)@3@F]0@@@@@)@Z@K@)@4@F#@@@@@@)@O@K@@@@@@@______ENDFILAA0@@)@[T@@#S82TCKBL
)@@G@@/K@@@@AI@@@A)@5@;@K+CSK0--#@@@)@Q@K@______REWIND@@@@@[@@@@@[@@@@@[@@@@@OBM
)@@G@@@@@@@@/,0@@@/K@@[<AJ@@@A)@/[F#]^L#]A^GCSK0)@@@@@N@0@[A@[Y@@<@@@@@[@@@@@[BN
)@@G@@@@@@@[@@@@@Q@@@@@@/,0@@@@[X@@<AK@@@A)[ @<@K0--#@)@-@C@)[D@N#] )@@@@@@@@@BO
)@@G@@/K@@@@/K@K@-@@F@@]*4@K@-R]0@@=@[Z@@</K@@[BAL@@@A)@<@K@)[F@;#@)C]@C@@@@@@BP
)@@G@@/K@@[O*@@@@@/K@@@6[^@@@"[^@@@7C8FK@@AA0@@=@[Z@@#ENDER AM@@@A)[M[N]MA^D*SBQ
)@@G@@K0@)C@/K@@[XN@0@[W[@@@@@G@@@@@C/@@@[@[>@@$@@@@@T/,0@@@@[=@@$/,0@@@AN@@@ABR
)@@G@@)[W@V#]A^G@@)@>@C@)[Z@N#] )@@@)@$@C@ERROR /K@@@@/K@K@>@@F@@[*4@K@>R]0@@*BS
)@@G@@@[$@@$AO@@@A)@*@C@)[-[##]@C]@)C]@@@@/K@@@@[^@@@@[^@@[K[^@@[S[^@@[TC8FK@@BT
)@@G@@/K@@[KAA0@@*@[$@@#AP@@@A)@S@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BU
)@@G@@@@@@@ @@@@@#@@@@@A@@@@@[@@@@@^AQ@@@A@@@@@@C]@@[#C]@K@IC#0K@I"E@@[]"]@@@CBV
)@@G@@"E@@@C"F0@[]^@0@@CD#0@@C"E@@@D[]@@@CK/@@@@@@@@@@@@^@@#@@B@@B@@P@@[@@T@@[BW
)@@G@@@@#@@?@C@@[(@@@@4+S1GVAL      S1IODR      S1PRSK      S1PCHD      NPRT$ BX
)@@G@@      NIO2$       NERR3$      S82TCK      @@[@@@@@@@@4S82BLK      ]@@@C@BY
)@@G@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@N#@@@@@@)@@@K@)@ @C@)@]@N#@@@@@@ @@@@@[@@@B=CB
)@@G@@@_____@@@@AK@@@@AKG/@__'C@@@B<AA@@@A)@^[MK0KO[[K0K[@K@/,0@SW/K@@@Q*@@@@ICC
)@@G@@/C)@@HH@)@@[C@)@@]/K@@@((@@@@][@@@B@C@FK@@AB@@@A)@I@:#[]>#[#[#@@@@)@5@S@CD
)@@G@@@@@@@@   SCA***** (032H @@K@@[@[+@BW@@[@@5/,0@@@@[-@BWAC@@@A)@8[@@@@@@@@CE
)@@G@@)@N@F]*@@@@@'^@@@@D)    XCEEDEALES E16H SCF,I4,0IMIT OOR.  LLE ERRAD@@@ACF
)@@G@@)@O[N[K[[[#[[K0@@@*@@@@GH@@@B@C@[@@]A@K@@A[@@@[^R/K@@[G@@@@]C/@__"/K@@@(CG
)@@G@@ @@@@]AE@@@A)@Y@;@K^G^EOG^G^G@)[@@K@***** (029H @@K@B@@[\@BW@@[@[@/,0@@@CH
)@@G@@@[,@BW/,0@SW/K@@@$AF@@@A)[][C@@@@@@@@@@[C@@@@@@@D)    DEFINEOUSLY  PREVICI
)@@G@@6,019HCALE,IOR.  SLE ERR   SCAAG@@@A)@>[N](@^[]@@K0@@@@@@@B[@@@@@@@@@@@@CJ
)@@G@@@@@@@@@@@@@@/,0@@@8L@@@UO/K@@[/K@@@('^@@@@AH@@@A)@\[F#[#[#[#[@K0K0K0@@@@CK
)@@G@@G@@@@@C@@@@C@[6@BW@@@@BA/K@@@'@@@@@C@@@@B#@@@@B]@@@@@BAI@@@A)@8[MK[@K^G[CL
)@@G@@#[#@@@C/)@@ ]@@@@DH@@@B[C/@@@^@[9@BW/K@@R7N@0@@.C8)@@B/K@@@"[@@@@@AJ@@@ACM
)@@G@@)[][N#@K^ @^^^G@@@A@K@@A[@)@[^R/K@@[G@)@@]C/)__"/K@@[M(@@@@]/K@@[%*@@@@ICN
)@@G@@H@)@B[AK@@@A)[G[F[K0^@K^[#[]=@@@@@@@/,0@@@@]A@BW/,0@SW8L@@[FO/K@@[/K@@[XCO
)@@G@@(@@@@GH@@@B]C@[@@]AL@@@A)[P@V#[#[#@@)[F@0@@@@@@@CALE,IOR.  SLE ERR   SCACP
)@@G@@***** (029H @@K@B]@]B@BW@@[@[FAM@@@A)[L@*@@@@@@@)[S@V](#[@@@@@@@@@/K@@[%CQ
)@@G@@ @@@B['^@@@@NED)  N DEFIOT BEE HAS N6,021HAN@@@A)[V[F#[#[#[[K0K[@K0@@@@@CR
)@@G@@C@@@B[/K@@[V*@@@@G/C@@[<[@@@B[C@[@AMR@K@@A[@@@@AD@@@B[AO@@@A)[=[EK0^G^G^CS
)@@G@@@KOG@@@@@@@@[@@@@AG@@@@]C/@@@[/K@@[![@0@B[+@)@B[C/)@@B[@@@B];K@@@#AP@@@ACT
)@@G@@)[![N#[#@K0^[#@K0@C/@@@B]@@@@E;@@@@-C@@@B]/K@@[6*@@@@GH@@@B[C/@@@A[@@@@ECU
)@@G@@C@@@@AAQ@@@A)[7[N#@K^G@K0^ [@@[@@@@]G@@@@]C/@@@[]@@@@EG/@@@[;@@@@-C@@@B]CV
)@@G@@/K@@["*@@@@GH@@@B[AR@@@A)][[N[K0KOG^G@K0@@ @@@@G*@@@@IH@)@B[C/)@@AC/@@@[CW
)@@G@@[[@@@FC[@@B[[@-@@]C@)@B@R@K@@]AS@@@A)]F[M^G@^[#@K0@@@@G@@@@F;@@@@-C@@@B]CX
)@@G@@/)K@]Q)@@@@I @@@@I*@@@@KH[@@B[C.@@@BC/)@@[AT@@@A)]P[F#[#[[^[#[#[[K0@@@@@CY
)@@G@@C@@@@FR@K@@][@@@@FD@@@@A/K@@]W(@@@@GH@@@@]C@@@@A[@@@@FAU@@@A)]Y[N[K0^@K@CZ
)@@G@@K0@@@@*@@@@KH[@@B]C.@@@[C/)@@[/K@@]'*@@@@I/C)@]=G/)__.C@)@@D[@[@AMAV@@@ADA
)@@G@@)]*[M@K0K@^@@@@@@@/=0@]'+@)@@K @@@@K*@@@@M/D)@]0H[)@B]C.)@J*C.@@@[ @@@@IDB
)@@G@@1@@@@KAW@@@A)]2@:@K0K(K0K0@@@@)[Q@S@@@@@@@   SCA***** (076H @]$@BW@@[@[QDC
)@@G@@/,0@@@@]&@BW/,0@SWAX@@@A)[T[S@@@@@@@LES)   K SCAOR ALL1000 FXCEED  NOT EDD
)@@G@@ 1 ANDEXCEED MUST OR.  KLE ERRAY@@@A)]7[N]*K0^G[#[#[@@*@@@@K/D@@#]D[@@@BDE
)@@G@@[@)@@HC/)@@[[@@@@GC/@@@A[@@@B]C/@@@['^@@@@AZ@@@A)#[@3@K^G^EOG^G@@@)[=@S@DF
)@@G@@   SCA***** (056H @]0@BW@@[@[=/,0@@@@]\@BW/,0@SW/K@@#DBA@@@A)[$[@@@@@@@@DG
)@@G@@)#B@F]*@@@@@'^@@@@D)    ERMINEBE DETN NOT YPE CACALE TOR.  SLE ERRBB@@@ADH
)@@G@@)#C[F@K0K0^G@K^G@@@@@@@@ @@@@I/K@@#L1@@@@G*@@@@GH@@@@IC/@@@^[@@@@IC@@@B[DI
)@@G@@/K@@C'BC@@@A)#L[N#@K0K0K0^G@K@/K@@#X1@@@@G*@@@@GH@@@@IC/@@@[A@K@B&[@@@B>DJ
)@@G@@G@@@@BC/@__"R@K@@ABD@@@A)#V[EK0K0KOG^G^G^G@@@@@@C_0@@[ @@@@M @@@@L @@@@KDK
)@@G@@[@@@@JC@[@@]R@K@B&[@@@@IC/@@@]BE@@@A)#=[F#[#[#[#[#[#[#[#[#@@R@K@B&A@)@B&DL
)@@G@@A@K@B>O@)@B=R@)@@HO@K@B<R@K@@H[#0@@NN[@@B>BF@@@A)#![EK0K0^G[#@K0@@@@@@@@DM
)@@G@@G[)@@HC.)@@#[[@@@#C[]@@[[@)@@]C@+@@@R@)@B>[@@@@OC@[@@^BG@@@A)#6[F#[#@K^EDN
)@@G@@4G^[@K@@@@@@/K@@ ^/K@@^5/K@@#_@#^@BW'^@@@@8];@#;$'0@@^RA0@@O[[)@@HBH@@@ADO
)@@G@@)#_[N#[#@K[#[#@@@@C/)@@[ @@@@G*@@@@IH@)@BKC@)@@#C/@@@[/K@@^<(@@@@GH@@@BJDP
)@@G@@C@@@@]BI@@@A)^D[F#[#@[@K-K0K0@@@@@@@@@@@@P@@@@@]/,0@@@/=K@^<+@@@@I @@@@IDQ
)@@G@@*@@@@KH[@@BLC[@@@]BJ@@@A)^M[F@K0K0K0K^[#[]>#@@@@@@[@[\/,0@@@@#G@BW/,0@SWDR
)@@G@@/K@@ 7[@@@@QC@@@@P@#D@BW/K@@^RBK@@@A)^V@3#[#@K0K?K@@@@)[\@S@   SCA***** DS
)@@G@@(033H 8LK@^Y'^K@@@C8[)@[N.K@@[R@K@BM@#H@BWBL@@@A)[2[@@@@@@@@)^-@F]*@@@@@DT
)@@G@@'^@@@@NED)  T DEFIHIS NOA3,014E ,A6,ARIABLOR.  VLE ERRBM@@@A)^+[N@K0K[#[DU
)@@G@@@^G[@@/K@@BN(@@@@GH@@@@KC/@@@]/K@@BN[@@@@KC/@@@[/K@@^**@@@@K/K@@BNBN@@@ADV
)@@G@@)^?@:@K0K(K0K0@@@@)['@S@@@@@@@   SCA***** (066H @#W@BW@@[@['/,0@@@@#V@BWDW
)@@G@@/,0@SWBO@@@A)[.[C@@@@@@@@@@[C@@@@@@@ ONCE)E THANED MORPECIFIRETE SR DISCDX
)@@G@@ANGE OOR.  RLE ERRBP@@@A)^1[F]*K0K^G^G^C=G^@@@@@/K@@^/@@@@@P/,0@@@[@@@@PDY
)@@G@@C@@@@]/K@@BN[@@@@KC/@@@]'^@@@@BQ@@@A)^'[##[@K^G^EOG^G^G@@@@@@@@@@@@@K@@PDZ
)@@G@@@#>@BW@@[@]A/,0@@@@#=@BW/,0@SW/K@@^O@#+@BWBR@@@A)]A[S@@@@@@@)     EFINEDEA
)@@G@@ NOT D15H ISE,I6,0ARIABLOR.  VLE ERR   SCA***** (032H BS@@@A) ][F](@K0K0EB
)@@G@@K0K0^G@@@@@@*@@@@GH@@@@QC/@@ZK[@)@@QC@)@@#[@@@@PC@@@@]/K@@BN'^@@@@BT@@@AEC
)@@G@@) F[EK^^K0K+K0K^G@@@@@@@@#,@BW/K@@ P@@@@@Q/,0@@@[@@@@Q;@@@@<C@@@U$/K@@ KED
)@@G@@1@@@@GBU@@@A) O[F@^G^G^G^@K^G@@@@@@@C@@@@#/K@@ K*@@@@G/C@@ WG@@@@P]@@@@QEE
)@@G@@H@@@@QC/@@@[/K@@ WBV@@@A) X[F#@K^[#@K0K0K0@@@@@@C@@@@F[@@@@FG@@@@QC/@@@[EF
)@@G@@@#5@BW/,0@SW/K@@ 7(@@@@GH@@@@QBW@@@A) &[F#@^[#[#[]>#[#@@@@@@@#9@BW@@[@]LEG
)@@G@@/,0@@@[@@@@FC@@@@P/K@@ ?1@@@@G*@@@@GH@@@@PBX@@@A) \@N#[#@@@@)]L@8@@@@@@@EH
)@@G@@ES,I6,ARIABLOR.  VLE ERR   SCA***** (033H @@K@@#@@K@@FBY@@@A)]S@*@@@@@@@EI
)@@G@@) 1@<](#[#@@*@@@@GH@@@@FC@@@@P'^@@@@FINED)NOT DEH ARE I6,016001H-,BZ@@@AEJ
)@@G@@) 5[EK^G^G^G[#[[K0@@@@@@H@@@@RC@@@U$[#)@@R[@@@[ C#)@@PH@@@@PC@@@@Q/K@@BNEK
)@@G@@1@@@@GCA@@@A) "[M^@KO@K0^G@@@@[@@@@S;K@@@[G@@@@RC/@@@[/K@@A&[@@@U*C/@@@[EL
)@@G@@/K@@A^1@@@@G*@@@@GCB@@@A)AC[N#@K0@K0KOG@@@;C)@@O;))K@TC@+@M2]@@@@TG/@__"EM
)@@G@@;@@@@)G/@__"H@@@@R;@@@@<R@)@@SCC@@@A)AM[EK[#[#[#[#[[K@@@@@@@/K@@A&[[[@V-EN
)@@G@@C[@@@RR@K@@L[@)@@LG@)@@LC/)@@[/K@@AV(@@@@ICD@@@A)AV[N#@K0^G[[[#@@@;@0K@TEO
)@@G@@;G)@@K;)/@@@C@2@M2E@@@@GG@)@@EC/)^8)G@@@@TC/@@@KR@)@@SCE@@@A)A>[F[K0K^C4EP
)@@G@@G^G^[#[#@@@@RA0@@I@^L@BW/K@@BL@@@@@U@@@@@R/,0@@@/K@@BL(@@@@I[@2@M2CF@@@AEQ
)@@G@@)A,[MK^E4G^[@^G[@@/K@@A_(@@@@GH@@@@UC/@@@]/K@@BG/K@@A4@^M@BW'^@@@@8];@A1ER
)@@G@@$'0@@#CG@@@A)A8[EK0K0K0K0KO[]L#@@@@@@@@@@R/,0@@@/K@@BL[@-@-1C@)@@RR@K@@MES
)@@G@@[@@@@MG@@@@MC/@@@[CH@@@A)B[[F#[@K0K0K0[@K0@@@@@@C@@@@V/K@@BF1@@@@G*@@@@GET
)@@G@@H@@@@GC@@@@V@^S@BW/K@@BL@@@@@VCI@@@A)BE[N#[@^G[@K[@@@@G_0@@[8LK@ ;G_)@@[EU
)@@G@@/K@@A8/K@@BL(@@@@GH@@@@UC/@@@[/K@@BL[@@@@GCJ@@@A)BO[F@K0K^[#[#@^G@@@@@@@EV
)@@G@@[@@@B>W/@@@E;O@@@=C@@@@L@^>@BW/,0@SW/K@@B:(@@@@L8L@@#>CK@@@A)BX[F]P#[#[]EW
)@@G@@>#[#@K0K0@@@R@)@BMG[)@@LC.)__"@^$@BW@@[@]X/,0@@@@^&@BW@@@@B>/,0@@@CL@@@AEX
)@@G@@)B&@%KOF^[]*)]X@)@@@@@@@LE ERR   SCA***** (072H '^@@@@8L@@B$'^K@@@C8])V-EY
)@@G@@[[)@[^CM@@@A)]-[S@@@@@@@72X,1010I4/(LE(S),VARIABD FOR DEFINE BEEN LREADYEZ
)@@G@@ HAS A SCALEOR.  ACN@@@A)]?@C@)B:[##[@K^G^G@K0@@[@@@B>W/@@@B;O@@@=C@@@@MFA
)@@G@@@^0@BW/,0@SW/K@@CQ(@@@@MI4))  CO@@@A)B3[F]P#[#[#@K^E4G^@@@@@/K@@B.@^2@BWFB
)@@G@@'^@@@@8];@B'$'0@@#RA0@@I@^1@BW@@@@B>/,0@@@CP@@@A)B/[F@K(K0K0K0^G^G@@@@@@FC
)@@G@@[[)@[^R@K@BMG[)@@MC.)__"@@K@@J@^3@BW@@[@]!/,0@@@/K@@CECQ@@@A)C @V[K?K@@@FD
)@@G@@)]!@0@@@@@@@CALE,IOR.  SLE ERR   SCA***** (029H 8L@@C '^K@@@C8[)-1CR@@@AFE
)@@G@@)]3[S@@@@@@@ ,7I4/ERIC -RE NUMBLES A VARIA THESELE BUTTE SCADISCRE IS A FF
)@@G@@6,055HCS@@@A)]"@K@)CC@;](@K(K0K0K0@@C.)__"@@K@@J@^/@BW@@[@#@/,0@@@/K@@CQFG
)@@G@@'^@@@@I4))  (90X,7CT@@@A)CJ@;#[#@KOF^[]*@@)#@@K@***** (029H '^@@@@8L@@CMFH
)@@G@@'^K@@@C8])-1[[)@[^R@)@BMG[)@@MCU@@@A)#][S@@@@@@@RIABLEESE VABUT THSCALE FI
)@@G@@RANGE  IS A 6,057HCALE,IOR.  SLE ERR   SCACV@@@A)#H@0@@@@@@@)CQ@UK0@@@@@FJ
)@@G@@ @@@@G*@@@B[C/@@@[,7I4))4/(92X - ,7IUMERICALPHANS ARE CW@@@A)CT[MK0@^@K0FK
)@@G@@@@@@@@*@@@@GH@@@@DC/@@@[/=K@#]+@@@@I @@@@I0@@@@K*@@@@KD[@@@DC/)@@[CX@@@AFL
)@@G@@)C<[F@^G[@K^[#[#@@@@@@@@C@@@@G@ E@BW/K@@R;N@0@C%/K@@C:(@@@@GH@@@B[C/@@@[FM
)@@G@@/K@@C'CY@@@A)C?[F#[@^[@K^G^[#@@@@@@@@ H@BW/,0@SW@ G@BW/K@@R;N@0@C2/K@@C3FN
)@@G@@*@@@@G/C@@C0H@@@B]CZ@@@A)C5[F]>#[#[#[](#@^@@@@@@/K@@D[1@@@@G*@@@@GD@@@@DFO
)@@G@@'^@@@@@@K@B]@ I@BW@@[@A^/,0@@@DA@@@A)C"[F@K^G^G^@K^[#@@@@@@@@ P@BW/,0@SWFP
)@@G@@/K@@DI*@@@@G/C@@D D@@@B]@ M@BW/K@@R;N@0@D@DB@@@A)DB@V]>#[#@@)#N@0@@@@@@@FQ
)@@G@@ATEGOROR.  CLE ERR   SCA***** (083H @ Q@BW@@[@#N/,0@@@DC@@@A)#T[C@@@@@@@FR
)@@G@@@@@[C@@@@@@@FIED)  SPECIOPERLYL IMPR OR ALISSINGIONS MIFICATY SPECDD@@@AFS
)@@G@@)DE[F](@K^G^G^G^G^G^G@@@ @@@@Y @@@BB @@@B^ @@@B  @@@@X@ T@BW/K@@R;N@0@DHFT
)@@G@@'^@@@@DE@@@A)DN[F#[#[#[#[#@K0K0K0@@@H@@@B][@@@@ZG@@@@ZC/@@@[ @@@@- @@@@)FU
)@@G@@ @@@@Z @@@BD @@@BCDF@@@A)DW[F@^[#[#@K0^G@@@@@@@@G@)@@YC/)@@[[@@@@+C@[@@^FV
)@@G@@O@K@B=R@K@@H/K@@M+*@@@@G/G@@DZDG@@@A)D>[F#[#[[K0K0^G^G^@@@@@/K@@F#(@@@@<FW
)@@G@@[[@@@<C[[@@@O@K@B<R@K@@H @]@,LR@)@@Y[@)@@YDH@@@A)D,@;#[@K^G^EOG^G@)#+@K@FX
)@@G@@***** (075H @ 0@BW@@[@#+/,0@@@@ \@BW/,0@SW/K@@F#*@@@B^DI@@@A)#=[S@@@@@@@FY
)@@G@@ PROGRH THISED WITERMITT NOT PTS ARE WEIGHTEGORYR.  CA2 ERROONEWAYDJ@@@AFZ
)@@G@@)#\@C@)D5[#](@K0^[]!#[@@/K@@F#@ 4@BW'^@@@@8];@D;$'0@@ RA0@@</K@@F['^@@@@GA
)@@G@@AM)   DK@@@A)D.[N@K^[#[#@K[@K@/,0@SW/K@@EI*@@@@G/C@@EAD@]@@[O@)@B<R@)@@HGB
)@@G@@/K@@E&/K@@EO/K@@E@DL@@@A)EB@:#[]>#[#[#@@@@)#0@S@@@@@@@   SCA***** (042H GC
)@@G@@@@K@@Z@ 8@BW@@[@#0/,0@@@@ 7@BWDM@@@A)#3[C@@@@@@@@@@[C@@@@@@@ITIVE)OT POSGD
)@@G@@H IS NI5,016EGORY,IN CATEIGHT OR.  WLE ERRDN@@@A)EG[F](@K0K0K0^ @K0@@@@@GE
)@@G@@R@)@@H/K@@F[[@[@,LC@]@@[O@)@B<R@)@@HR@K@@Y/K@@F#'^@@@@DO@@@A)EP[F#@K^CO[GF
)@@G@@#[@K0K@@@@@@/K@@E,@ _@BW/K@@EY@@@@@=@@@@ET/,0@@@^^K@ETN8M@@[O@)@B<DP@@@AGG
)@@G@@)EY@3@K0K(K0K0K0@@)#/@S@   SCA***** (051H @@K@@Z@A]@BW@@[@#//,0@@@@A[@BWGH
)@@G@@/,0@SWDQ@@@A)#_[S@@@@@@@D)    DEFINES NOT 015H IRY,I5,CATEGOLE IN VARIABGI
)@@G@@EIGHT OR.  WLE ERRDR@@@A)E=[F](@K0K0^G^C=G^@@@@@/K@@EY@@@@@=/,0@@@[@@@@=GJ
)@@G@@C@[@@[O@K@B<R@K@@H/K@@F#'^@@@@DS@@@A)E![F#[]H#[#[@K0^G@@@@@@(@@@@GH@@@@>GK
)@@G@@C/@@@[@AD@BW/K@@E"@@@@@>@@@@@=/,0@@@@AC@BWDT@@@A)E6[#@K^G^EOG^G^G^E)@@@@GL
)@@G@@@@@@@@'^@@@@@@K@@Z@AH@BW@@[@^E/,0@@@@AG@BW/,0@SW/K@@E"DU@@@A)^E[S@@@@@@@GM
)@@G@@026H IRY,I4,CATEGOLE IN VARIABEIGHT OR.  WLE ERR   SCA***** (051H DV@@@AGN
)@@G@@)^P@*@@@@@@@)E"@<#[#[[@@C/@@@[[@]@,LD@@@@=R@)@@Y)     RIABLERIC VAA NUMEGO
)@@G@@S NOT DW@@@A)F][F#[#[#@K0K0K[#@@@@@@G@)@B C/)@@[/K@@F=(@@@@&[@@@@&C@[@@#GP
)@@G@@O@K@B<R@K@@H[@@@B^DX@@@A)FF[F#@K0K0^G^G^G^G@@@@@O@)@B=R@)@@X[[@@@XG[@@@XGQ
)@@G@@C.@@@[[@@@@$G@@@@HC/@@@^[@)@B DY@@@A)FO[F#@^G^G[#[#[#@@@@@@@R@)@@X[@@@@XGR
)@@G@@G@@@@XC/@@@[O@K@B=R@K@@$N.@@@D[[+@@^C[)@@YDZ@@@A)FX[N#@[#[#[@^G^G@[@@@@HGS
)@@G@@G@@@@HC/@@@I8L@@FR[[@@@$G[@@@$C.@@@[[@+@@^C@-@@^O@)@B=EA@@@A)F$[F#[#[@K^GT
)@@G@@G^EOG^G^G@@@@@K@@Z@A&@BW@@[@^0/,0@@@@A>@BW/,0@SW/K@@F2*@@@@+ @@@@(EB@@@AGU
)@@G@@)F0[N](@^G^@K^G^G@C@[@@^O@K@B=R@K@@H/K@@G[*@@@@G/C@@F7H@@@@+C/@@@[/K@@DSGV
)@@G@@'^@@@@EC@@@A)F'[M^@K0K0K[#[@@@/C@@GAH@@@B[C/@@@]/K@@F%[@@@@HG@@@@HC/@@@]GW
)@@G@@/K@@G[*@@@@GG/@__7ED@@@A)G^[MK[#@^G^G^G^G@R@K@@HO@)@B<R@)@@H[#)@@%[@@@[^GX
)@@G@@C_)@@[G@@@@+C/@__"/K@@I/*@@@@GEE@@@A)GI[F#[#[#[#@K0K0^G@@@@@[@)@BIC@+@@@GY
)@@G@@R@)@B&[@@@@:C@[@@^R@K@B>A@)@B&A@K@B>O@K@B=EF@@@A)GR[EK0K0K0^[]!#[@@@@@@@GZ
)@@G@@/K@@G$@A8@BW'^@@@@8];@GY$'0@@DRA0@@:[@@@@HG@@@@HC/@@@]EG@@@A)G)[F@K^[@K^HA
)@@G@@[@K0K0@@@@@@H@@@BBC@@@@@/K@@I9/K@@I+/K@@IE/K@@I+/K@@H8/K@@HB/K@@G6EH@@@AHB
)@@G@@)G([N@^@K0K0K0K0^^[@-@V-;@)@@<C@)@@YR@K@BB[@@@BBG@@@BBC/@@@[/K@@I,*@@@@GHC
)@@G@@/C@@G?EI@@@A)G3[F#[[K^G^G[#[#@@@@@@@*@@@@IH@)@@%C@)@@+C/@@@[O@)@B=R@)@@HHD
)@@G@@/K@@I9[[[@-1C[@@BIEJ@@@A)G/[M@@K^G^G@@@@@@[@@@BHC@@@BI/=K@I+)@@@@I @@@@IHE
)@@G@@(@@@@KG.@__/C[]@@^C/)@@[ @@@@GEK@@@A)HA[N@K0K0[#@@@@@@C[[@@@C/)@@[ @@@@GHF
)@@G@@*@@@@IH@)@@%C/)@@[C/@@@[O@K@B=R@K@@H/K@@I9EL@@@A)HK[M@K[#@K^D)@@@@/,0@@@HG
)@@G@@/K@@H-(@@@@GH@@@B[C/@@@]/=K@I+)@@@@I @@@@I(@@@@KG.@__.EM@@@A)HU[F#[#[#[@HH
)@@G@@^[@K0K0@@@@@"^@@BIC@@@BH/K@@I+/K@@H&*@@@@G/C@@H)@BB@BW@@@@BI@@@@BHEN@@@AHI
)@@G@@)H<[M^[#[#[@^@K0@@G@@@BBC/@@@[/K@@I,*@@@@G/C@@H:H@@@BBC@@@@@/K@@I+1@@@@GHJ
)@@G@@*@@@@GEO@@@A)H![F#[#[#@^ #[[K0@@@@@@C[)@BI[[]@-1C[@@BH[@+@V-G/)@@[;@)@@<HK
)@@G@@C@)@@YR@)@BB[@@@BBEP@@@A)H6[F[K^G^[#[#[@K0K@@@@@/G@@I[D@@@BC/K@@I9[@@@BCHL
)@@G@@C@@@@Y/K@@H.*@@@BC/K@@I9[[+@*[EQ@@@A)H_@'K^[#[]>#[#@@@)^U@K@***** (057H HM
)@@G@@@BU@BW@@[@^U/,0@@@@BT@BW/,0@SW/K@@I9*@@@@GER@@@A)^W[C@@@@@@@@@@[C@@@@@@@HN
)@@G@@CE)   HAN ONMORE TIFIED S SPECTHER IOR.  OLE ERR   SCAES@@@A)IA[F]*K0K^GHO
)@@G@@^[#[#@@@@@@@C/)@@][@@@BDC@@@@Y/K@@IP*@@@BD/K@@I9[@@@BCC/@__"'^@@@@ET@@@AHP
)@@G@@)IJ[F#@K^G^G^[#[@@@@@@@@*@@@@G/G@@ITD@@@BD/K@@G$[@)@BIC@)@BN/K@@I9(@@@@IHQ
)@@G@@H@)@B[EU@@@A)IS@3@K^G^EOG^G@@@)^>@S@   SCA***** (059H @B(@BW@@[@^>/,0@@@HR
)@@G@@@B*@BW/,0@SW/K@@I9EV@@@A)^*[@@@@@@@@)IY@F]*@@@@@'^@@@@ONCE)  THAN D MOREHS
)@@G@@ECIFIE IS SPISSINGOR.  MLE ERREW@@@A)IZ[EK0K^G^[@K0K(K0@@@@@@@[@^0/,0@@@HT
)@@G@@@B0@BW/,0@SW/K@@I9*@@@@(/K@@I9[@@@BDC/@__"EX@@@A)I*@N#[#@@@@)^0@8@@@@@@@HU
)@@G@@OR INTALUES OR.  VLE ERR   SCA***** (091H @@K@@Z@B1@BWEY@@@A)^7[K@@@@@@@HV
)@@G@@@@@@@@,I4)  TEGORY IN CACIFIEDLY SPEPROPER OR IMISSING ARE MERVALSEZ@@@AHW
)@@G@@)I%[F]*K0K^G^[@K0K(@@@@@/,0@@@@B9@BW/,0@SW/K@@I9*@@@@)/K@@I9[@@@@(C/@@@[HX
)@@G@@'^@@@@FA@@@A)I3@V#[#[#@@) [@0@@@@@@@IMIT OOR.  LLE ERR   SCA***** (032H HY
)@@G@@@@K@@@@B'@BW@@[@ [FB@@@A) B@8@@@@@@@)I6@N]*@@@@@C/@@@['^@@@@)     CEEDEDHZ
)@@G@@ALE EXN A SCLUES I27H VAF,I5,0FC@@@A)I8[N#@K^@K0^[#[#@O@K@B=R@K@@H/K@@K IA
)@@G@@*@@@@GH@@@@+C/@@@[/K@@DS8L@@GEG_)@@[[@@@@)FD@@@A)J][EK0K0K0^G^G[@@@@@@@@IB
)@@G@@8];@JG$'0@@DRA0@@:[@)@BIC@+@@@O@)@B<R@)@@H[@@@@:C@[@@^FE@@@A)JF[F]!#[@K^IC
)@@G@@[@K^[@@@@@@@/K@@ME/K@@J3/K@@ME/K@@J-/K@@ME/K@@ME/K@@JP@CB@BW'^@@@@FF@@@AID
)@@G@@)JO[F@K0K0[@^G^G@@@@@@@@[@@@BBG@@@BBC/@@@[/K@@MM1@@@@G*@@@@GH@@@@@C@@@BBIE
)@@G@@/K@@MEFG@@@A)JX[F#[#[[K^G^[#[#[@@@@@/K@@MX[@@@BCC@@@@Y/K@@J&*@@@BC/K@@MXIF
)@@G@@[@-@V-C@)@BIR@K@BBFH@@@A)J&[F#[@^[@K0K(K0K0@@@@@@CO@BW@@[@^U/,0@@@@CN@BWIG
)@@G@@/,0@SW/K@@MX*@@@@G/G@@J%D@@@BCFI@@@A)J\[F]*K0K^G^[#[#[@@@@@@/K@@MX[@@@BDIH
)@@G@@C@@@@Y/K@@J8*@@@BD/K@@MX[@@@BCC/@__"'^@@@@FJ@@@A)J8[F#[@^[@K0K(K0K0@@@@@II
)@@G@@@CZ@BW@@[@^>/,0@@@@CY@BW/,0@SW/K@@MX*@@@@G/G@@J/D@@@BDFK@@@A)K[[F]*K0K[#IJ
)@@G@@@K^G@@@@@@@@R@)@@H/K@@KU*@@@@GH@@@@+C/@@@]/K@@MX[@@@BDC/@__"'^@@@@FL@@@AIK
)@@G@@)KE[N#[#[#@[@@@@@@*@@@@GG/@__7C@[@@^/K@@J@(@@@@GG/@__7C@]@@[O@K@B=R@K@@HIL
)@@G@@O@)@B<FM@@@A)KO[N@^G[#[@^G[@@@/K@@ME*@@@@GH@@@@+C/@@@#/K@@JC[@)@BIC@+@@]IM
)@@G@@[@@@@:C@]@@[/K@@MEFN@@@A)KY[N#[#[#[#@[@^G@[@@@BEC@[@@@/K@@ME*@@@@GG/@__"IN
)@@G@@C@]@@^O@)@B=R@)@@HO@K@B<R@K@@HFO@@@A)K*[M[@^G@^@@@@@@@/K@@ME*@@@@GG/@__'IO
)@@G@@C@[@@#[@)@BFC@-@@]/K@@ME*@@@@IG/)__"C@-@@[FP@@@A)K2[MK0^G^G^@[#@@@D[)@BGIP
)@@G@@C.@@@[ @@@@I*@@@@K/D@@K'" @@BFC[@@BEC/)@@[[@@@BGC@[@@^FQ@@@A)K/[N@@K^G^GIQ
)@@G@@^G^G@@"H@@@I" @@BEC[@@BF"C)@BOC@)@BG/=0@ME)@)@@K @@@@K*@@@@M/D)@K_FR@@@AIR
)@@G@@)LA[N#[#[#@[#@K@@@*@@@@L/DK@LLG.K__.[[K@@?;-V@@D[[@@@F"L@@@K"[@@BQ"[@@BPIS
)@@G@@[[@@@^FS@@@A)LK[N@^G@K0[@K0@@@*@@@@-/=0@L<+@)@@K @@@@K*@@@@<C.@@@[ @@@@IIT
)@@G@@*@@@@&C/)@@[/K@@MEFT@@@A)LU@3@K^G^EOG^G@@@) I@S@   SCA***** (075H @D]@BWIU
)@@G@@@@[@ I/,0@@@@D[@BW/,0@SW/K@@L<FU@@@A) L[S@@@@@@@CE)   SEQUENPOINT TH ENDIV
)@@G@@WED WIT ALLOBEL NOAND LAEIGHT OR.  WLE ERRFV@@@A)L)[F]*K0K0K0K[@K0@@@@@@IW
)@@G@@C@@@@?/K@@L?*@@@@G/C@@L*H@@@@YC@@@B#[@@@@-C/@@@['^@@@@FW@@@A)L([N#@K0^G^IX
)@@G@@G[#@@@[@)@[^C_)@@[G@)@@?C/)__"]@@@@YH@@@@YC/@@@[[@@@B#G/@__"G@@@B#FX@@@AIY
)@@G@@)L3[F#[#[#@^@K0K0@@@@@@@[@@@BBG@@@BBC/@@@[/K@@MM1@@@@G*@@@@GH@@@@@C@@@BBIZ
)@@G@@[#)@@!FY@@@A)L/[F#[#[[^G^G^G^ #@@@@@C[)@BG @[@,LR@K@@Y[[@@@YG[@@@YC.@@@[JA
)@@G@@[@+@V-C@)@BER@)@BBFZ@@@A)M [F#[#@K^[@K0K(K0@@@@@@@[@^0/,0@@@@DP@BW/,0@SWJB
)@@G@@/K@@MX8L@@L3G_)@@[[[)@BE"[)@BEGA@@@A)MI[F#[#[](@K0K^[#[]=@@@/,0@@@@DW@BWJC
)@@G@@/,0@SW/K@@MX*@@@@)/K@@MX'^@@@@@@K@@Z@DQ@BWGB@@@A)MR[F#[#[#[]*K0K0^G@@@@@JD
)@@G@@G@@@@H;@@@@<C@@@@+[@@@@)C/@@@['^@@@@@@K@@@@DX@BW@@[@ [GC@@@A)M)[N#[@K0K[JE
)@@G@@#@^G@@ @@@@I(@@@BCC/)@@[ @@@@G(@@@BDC/@@@[/K@@M3*@@@BB/K@@DS[@@@@HGD@@@AJF
)@@G@@)M%@'K^[#[]>#[#@@@) W@K@***** (072H @D*@BW@@[@ W/,0@@@@D$@BW/,0@SW/=K@M3JG
)@@G@@)@@@@IGE@@@A) Y[S@@@@@@@IFIED)Y SPECROPERLLL IMPG OR AMISSINALUES CALE VJH
)@@G@@OR.  SLE ERR   SCAGF@@@A)M1[N](@[#@[#@@@@@ @@@@I*@@@BCC/)@@[ @@@@G(@@@@IJI
)@@G@@H@)@@YC/)@@[C/@@@[/K@@Q-'^@@@@GG@@@A)M;[]K^[#[]>#[#[]*) (@C@(073H '^@@@@JJ
)@@G@@@D\@BW@@[@ (/,0@@@@D,@BW/,0@SW/=K@N#)@@@@IGH@@@A) %[S@@@@@@@ONE CA WITH JK
)@@G@@SCALESD FOR ALLOWES NOT THER IOR.  OLE ERR   SCA***** GI@@@A) 5@K@)N#@;#JL
)@@G@@[@^G^@K@@@@@/K@@P>*@@@@G/C@@NEH@@@B[C/@@@]/K@@Q-(@@@BB)     TEGORYGJ@@@AJM
)@@G@@)NE[N#[@K0^@K^G^G@(@@@@GH@@@B]C@@@B /K@@OS*@@@@G/C@@NLG/@__.C@@@BB/K@@Q-JN
)@@G@@(@@@B[GK@@@A)NO[N@^G@K0K0^ [@@[@]@V-G@]@V-;@@@@TC@@@@WA@)@@W[@@@[^R/)@@[JO
)@@G@@G@@@BBC/@__"/K@@N)GL@@@A)NY[EK[#[#[]X#[#[[@@@@@@@@@@-2@@@@BB@@@@BR/,0@@@JP
)@@G@@[@@@B>H@@@B[C/@@@]8L@@NTO/)@@[GM@@@A)N$[F[KOG^G^G[#@@@@@@@@@[@@@[^R/K@@]JQ
)@@G@@G@@@BBC/@__.@E[@BW@@@@@,@@@@B>@@@@*]@@@@V+GN@@@A)N0[F#[[KL@^ #[#@@@@@@@@JR
)@@G@@(@@@@\[@K@@\+@[@V)C/@@@[/K@@OM(@@@@GH@[@-1C@[@-0A@K@@WGO@@@A)N9[F@KOG^ #JS
)@@G@@@K0^@@@@@@@@/K@@OC(@@@@IH@)@B[C/)@@[[@@@BHC@[@*@[@)@BIC@-@-1/K@@OJGP@@@AJT
)@@G@@)O][F#[#@^[@K&K0K0@@@@@@@@@@BH@@@@BI/,0@@@/K@@OJ/K@@OM1@@@@I*@@@@I"^)@BIJU
)@@G@@C@)@BHGQ@@@A)OF[N#@^@K^[@K0K(@/,0@@@@EQ@BW/,0@SW/K@@OS8L@@N0O/K@@[/K@@OMJV
)@@G@@0@@@@G*@@@@G@EL@BWGR@@@A)OP@V#[#[]*@) 7@0@@@@@@@NE OR OR.  OLE ERR   SCAJW
)@@G@@***** (069H '^@@@@@ER@BW@@[@ 7GS@@@A) .@8@@@@@@@)OS@MK0@@@@@H@@@B[C/@@@[JX
)@@G@@AP)    OVERLERVALSOR INTALUES CALE VMORE SGT@@@A)OU[EK^G^G[#[#[#@@@@@@@@JY
)@@G@@C.@__"[@K@@2+@@@BN[@)@@1C/)@@[[@@@@0C@@@@ /K@@Q-*@@@@GGU@@@A)O<[F#@^G[#[JZ
)@@G@@#[[K0@@@@@@@[@K@@3+@]@-1C@@@@0[@@@@\C/@@@[A@)@@W[[@@[^R/)@@[G[@@BBGV@@@AKA
)@@G@@)O?[N#@K[#[#@^[#@@C@@@@0/K@@PL(@@@@GG/@__9[@@@@1G@@@@1C/@@@[/K@@P](@@@@HKB
)@@G@@H@K@@2GW@@@A)O6[EK0K0^G^G[@K:@@@@@@@'^@@@@8];@O_$'0@@#RA0@@\[@)@@2;K)@@AKC
)@@G@@C@)@@2[@@@@0;K@@@AGX@@@A)O_[F#[@K[[K0K0K^G@@@@@@C@@@@0/K@@PJ(@@@@F[@K@@FKD
)@@G@@+@]@V-C/@@@[/K@@PB/K@@O(@E:@BWGY@@@A)PC[N[K0^G^G[@^[#@C@@@@18L@@O&O/)@@[KE
)@@G@@/K@@O\*@@@@HH@K@@2[@)@@\C/)@@][@K@@3+@]@*[GZ@@@A)PM[F#[[K0^G^ #[#@@@@@@@KF
)@@G@@*@@@@KH[@@@1C[@@@G[@-@AMG@)@B[;@)@@-C@)@@1R@K@@][@@@BAHA@@@A)PV[]K^[#[]>KG
)@@G@@#[#[#@)A^@C@(105H @@K@@1@E'@BW@@[@A^/,0@@@@E9@BW/,0@SW/K@@Q-1@@@@KHB@@@AKH
)@@G@@)A [S@@@@@@@H LESSD WIDTE FIELES HAVARIABLMORE VNE OR OR.  OLE ERR   SCAKI
)@@G@@***** HC@@@A)AK@8@@@@@@@)P<@N](@@@@@/K@@Q-'^@@@@OF,I3)WIDTH VALUE SCALE KJ
)@@G@@XIMUM THE MA THAN HD@@@A)P>[N#[#@K0[@KOG@@C/@__.[@)@BHC@)@V+/K@@Q^1@@@@IKK
)@@G@@*@@@@IH@)@BBC/)@@[[@@@B]C@@@@YHE@@@A)P\[N#@^G^ #[#[#@@1@@@@I*@@@@I"^)@BIKL
)@@G@@C@)@BH[@@@BIC@]@V-A@)@@W[@@@[^R/)@@]G@@@BBHF@@@A)P9[F@K0^[@K^G^EOG@@@@@@KM
)@@G@@@@[@AR/,0@@@@FG@BW/,0@SW/K@@Q^8L@@P2O/)@@[[@@@BH/K@@P"HG@@@A)Q]@N#[]*@@@KN
)@@G@@)AR@8@@@@@@@L ENDPNTERVAOR.  ILE ERR   SCA***** (069H '^@@@@@FH@BWHH@@@AKO
)@@G@@)AY@0@@@@@@@)Q^@UK0K0@@@H@)@BCC@)@BBC/@@@[ER)   NG ORDSCENDIT IN AARE NOKP
)@@G@@OINTS HI@@@A)QB[N@@K0[@^G@@@@@C@)@BBC/@@@[/=K@QV+@@@@I @@@@I(@@@BCC/)@@[KQ
)@@G@@ @@@@G*@@@@I/C)@QEHJ@@@A)QL[N#[@@K0[@K@@@@/K@@Q-/=K@QV+@@@@I @@@@I(@@@BDKR
)@@G@@C/)@@[ @@@@G*@@@@I/C)@QPH@)@BDHK@@@A)QV@3@K0K(K0K0K%@@)A=@S@   SCA***** KS
)@@G@@(089H '^@@@@@FQ@BW@@[@A=/,0@@@@FP@BW/,0@SWHL@@@A)A$[S@@@@@@@A UB OES IN KT
)@@G@@TEGORIAST CA THE LUST BESING MND MISTHER AOR.  OLE ERRHM@@@A)A2@K@)Q-@;[KU
)@@G@@K0KOG^G@@@@@1@@@@G*@@@@GD@@@B#A@K@B>[@[@G+C@@@B]R@K@@]CALE) R LB SHN@@@AKV
)@@G@@)Q*[F@K0^G^G^^K^@@@@@@@@N@0@Q2/K@@Q3(@@@@@[@]@G+R@)@B>G@@@B];@@@@UC@@@B#KW
)@@G@@/K@@Q,HO@@@A)Q1@<@K0^^@@)A4@K@)Q5@N[K*@@@@/,0@@@[@@@U:______WRITE G@@@U:KX
)@@G@@C/@@@[@FX@BW/K@@R;HP@@@A)Q7@:#[#[#[#[#@@@@)A6@K@@@@@@@@@@@@@______WRITE KY
)@@G@@@@@@@4@@@@B@@@@@BT@@@@A4@@@@BSHQ@@@A)Q/[F#[#[@K*K0K0K0KOG@@@@@@@@4@@@@,MKZ
)@@G@@@@@@B]@@@@A6@@@@BS/,0@@@/K@@RA(@@@B^@FZ@BWHR@@@A)A8@K@)R @;#[#[@K0^G^E@@LA
)@@G@@/,0@@@[@@@B>T/@@@FC@@@B /K@@RM(@@@B @F-@BW______WRITE HS@@@A)RG[F#[#[#@KLB
)@@G@@0K0K0K^@@@@@N@0@RQ/K@@RR*@@@BB@F<@BW@@@@@4@@@@@@@@@@B>@@@@A8@@@@BSHT@@@ALC
)@@G@@)RP@F@@@@@@@)A'@K@)RQ@<#[]-#[#@@@@@@@@@@A'@@@@BS/,0@@@@F>@BW______WRITE LD
)@@G@@/K@@R;HU@@@A)RU[N#[[K0K0^G@K^@N@0@R>/K@@R&1@@@@G*@@@@GH@@@B[C/@@@]@F&@BWLE
)@@G@@@@@@@4@@@@V+@@@@BBHV@@@A)R=@F@@@@@@@)A/@K@)R>@<#[]-#[#@@@@@@@@@@A/@@@@BSLF
)@@G@@/,0@@@@F*@BW______WRITE /K@@R;HW@@@A)R(@V#[[K0@@)A"@K@)R?@V#[]-#@@@@@@BSLG
)@@G@@/,0@@@@F(@BW______WRITE @@@@@4@@@@-2@@@@BBHX@@@A)R\[F#[#[[K0K0K^[#[#@@@@LH
)@@G@@!^)@BU@F:@BW/K@@R;N@0@R6@F%@BW@@@@@4@@@@*]@@@@BB@@@@A"HY@@@A)R8[F]4K0K0KLI
)@@G@@0K0K0K0K0@@@N[@@B!R@)@B?R@K@B:9\)@B(9!)@B$R]0@BX[^)@BUH8)@@[/K@@@@HZ@@@ALJ
)@@G@@)S[@N#[#@@@@)BU@C@)S#@N#[]8@@@)BW@K@@F:@@]S82SCL/K@@@@/K@KBU@@F@@@*4@KBULK
)@@G@@N[K@B,IA@@@A)S [EK0K0K0K0K0K0K0K0@@@^[K@B,^[@@B!A@)@B?A@K@B:9:)@B(9()@B$LL
)@@G@@[^@@BUAA0@BXC8@@@CIB@@@A)SI[N@@K>K0K0K^[#@@F1@B)/K@@SSN@0@SR@F0@B)@@@@BSLM
)@@G@@/,0@@@[@@@@@G@@@@@C/@@@[/K@@SYIC@@@A)SS@N#[#@@@@)BY@C@)SU@N#[]8@@@)B)@K@LN
)@@G@@@F1@@]ERROR /K@@@@/K@KBY@@F@@[*4@KBYR]0@B-ID@@@A)SW[N#[@^@K[@K^G@@[@@@B<LO
)@@G@@[^@@RJ[^@@@?C8FK@#[^@@@:C8FK@][^@@@%C8FK@[/K@@SJAA0@B-IE@@@A)S&[MK[@K^[@LP
)@@G@@K^[@@@/K@@@@[^@@@8[^@@@#[^@@Q,[^@@SK[^@@SL[^@@@7C8FK@ [^@@@!C8FK@^IF@@@ALQ
)@@G@@)BJ[S@@@@@@@@@@@@E@@@@@[@@@@@]NS@@@@KG@@@@KB__:]      @@[@@[DISCRETE    LR
)@@G@@RANGE IG@@@A@@@@@@^[#[]>#[#[#@)A^@C@(105H @@K@@1@E'@BW@@[@A^/,0@@@@E9@BWLS
)@@G@@/,0@SW/K@@Q-1@@@@KHB@@@A@@^@@#@@B@@J@@>@@[@@(@@[@@^@B0@C@@S0@@@@4+S22SDCLT
)@@G@@      S1CKVN      S1CKVI      S1GTVT      S1GTVW      S1PCHD      S22ACPLU
)@@G@@      URSORT      S1IODR      NPRT$       NIO2$       NERR2$      NIO1$ LV
)@@G@@      NERR4$      NERR3$      S82SCL      @@[@@@@@@@S S82BLK      ]@@@C@LW
)@@G@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LX
)@@G@@)@@@N#@@@@@@)@@@8@@@@@@@@@@@@[@@@@@]@@@@J(@@@@@@_____"      GROUPSG/@__/LY
)@@G@@C@@@FPAA@@@A)@B[S@@@@@@@_____"@@@@@[@@@@AK@@@@@[@@@@@@@@@@@]S     DEPVARLZ
)@@G@@@@@@J*@@@@@[@@@@@DAB@@@A)@M[S@@@@@@@@@@@@@_____.@@@@@[@@@@AK@@@@B5@@@@@@MA
)@@G@@@@@@@]S     REPVAR@@@@@@@@@@@@AC@@@A)@X[S@@@@@@@@@@@@@@@@@@]TS    REFFECMB
)@@G@@@@@@@@@@@@P9@@@@@@@@@@@]A     NOANOV@@@@@@AD@@@A)@*[S@@@@@@@_^TNS@@@@@@NMC
)@@G@@@@@@@@@@@@@^@@@@P;@@@@@@@@@@@]      HIST  @@@@@@@@@@P'AE@@@A)@3[S@@@@@@@MD
)@@G@@@@@@@@@@@@@]      HOMVAR@@@@@@@@@@QQ@@@@@@@@@@@]      ASSOC @;&?$_AF@@@AME
)@@G@@)@"[S@@@@@@@@@@@Q4@@@@@@@@@@@]      RESID @@@@@@@@@@@@@@@@@C@@@@@[@@@@@EMF
)@@G@@@@@@QRAG@@@A)[D[S@@@@@@@@@@@@[@@@@RC@@@@@#@@@@@^S     BANKRE@;&?$_@@@@@[MG
)@@G@@@@@@@D@@@@@@@@@@@#AH@@@A)[O[S@@@@@@@LABELV@@@@@@@@@@RM@@@@@@@@@@@]T     MH
)@@G@@NODSTA@@@@@@@@@@@@@@@@@C@@@@@@AI@@@A)[Z[K@@@@@@@@@@@@@@@@@@E@@@@@@@@@@@@MI
)@@G@@_____"@@@@@[@@@@@[@@@@RR@@@@@@@@@@@]AR    AJ@@@A)[3[S@@@@@@@JACKKN      MJ
)@@G@@BKBLOG      BKB         FMAX  N     COCHRATT    BARTLEAK@@@A)["[S@@@@@@@MK
)@@G@@C     B           BA    S     LEVENEM     LEVENEZ     LEVENEIFE   AL@@@AML
)@@G@@)]D[@@@@@@@@)##@K@@@@@]Q@@@@@2      LS    LM    LZ    J           K     MM
)@@G@@F     AM@@@A)# @C@)@][##@]AH#A)CS^GSH@)@U?C@)@##/K@@@9(@@@U?[@@@U\C@FK@@MN
)@@G@@ @@@@@[@@@FQ@@@@@2AN@@@A)@E[N@^@K1)-)K0CS0H@@@U\C@[@]KA@K@#Q[@)@[^R/K@@[MO
)@@G@@G@)@U?C/)__"/K@@[#*@@@@I/C)@@HAO@@@A)@O[MK[@K^GS]A@@@@W@@@E!;O@@@=G/@@@[MP
)@@G@@T/@@[=C@@@U\/K@@@98L@@@LO/K@@[/K@@@T(@@@@GAP@@@A)@Y[F#@)]A[#@CS0@@@@@@@@MQ
)@@G@@[@@@[^R/K@@[G@@@U?C/@__"[@@@#RG@@@#RC/@@@[/K@@@<[@K@#RAQ@@@A)@$[F#@-)K0]MR
)@@G@@@C]^[#@@@@@@@@@@E,/,0@@@8L@@@$O/K@@[/K@@@)(@@@@GH@@@#RC@[@]KA@K@#QAR@@@AMS
)@@G@@)@0@3#@-QK0CS^GUA@)^K@S@I6,042MODEL,(006H @@K@#R@@K@U\@[9@FE@@[@^K/,0@@@MT
)@@G@@@[8@FEAS@@@A)^N[@@@@@@@@)@6@F],@@@@@'^@@@@DI6)  UMBEREEL RENIS MODD.  THMU
)@@G@@ECIFIEADY SPH ALREAT@@@A)@7[F#@-<^GUAH#@)]@@@@@@/K@@[#*@@@@G/G@@[@H@@@##MV
)@@G@@[@@@U?G@@@U?C/@@@[[@@@U\C@@@#RAU@@@A)[@@V#A-<K0@)^V@S@)[#@N]]-)@@@@@@@^VMW
)@@G@@/,0@@@______      MODEL [@[@]KC@@@U\R@K@U?AV@@@A)[ [M@K0CS^[#@-)@@G@@@@@MX
)@@G@@C@@@#T@]#@FE/K@@V;@@@@#T@@@@#S@@@@@@@@@@@@@@@@@@@@@@@@AW@@@A)[J[]K0CS[#@MY
)@@G@@C@@@@@)^Y@C@MODEL *@@@@I/G)@[SH/)_*<]@)@#VH@)@@@[@)@#UC@)@#S[@@@@@AX@@@AMZ
)@@G@@)^Z@K@)[R@;@K0CS[@K-CS@@@@@@^Y/,0@@@^^K@[<N8L@@@O@K@FPR@K@#U/K@@V;______NA
)@@G@@      AY@@@A)[Y[EK0CS^G]A[@K0CS^G@@@@@@@#T@@@@#W@@@@#V@@@@[<@@@@E0@@@@E\NB
)@@G@@@@@@@@@@@@#S@@@@@@AZ@@@A)[$[F#@-)@K0CS^G]A@@@@@@O@K@FQR@K@#X[@)@#XG@)@#UNC
)@@G@@C/)@J([@@@@@G@@@@@C@@@#T@]D@FEBA@@@A)[0[EK1*S4GU@-)[@@@@@@@@/K@@]]0@@@@KND
)@@G@@*@@@@KH[@@# /K@@C:(@@@U0 @@@U1[[@@U0C[[@@]BB@@@A)[9@3@K0CP=G]A[#@@)^-@S@NE
)@@G@@ONEWAY***** (031H @@K@# @]N@FE@@[@^-/,0@@@@]M@FE/,0@W0BC@@@A)^=[K@@@@@@@NF
)@@G@@@@@@@@ED)   EXCEEDWORDS NTROL UPS CO0H GRO,I5,03MIT OFR.  LI2 ERROBD@@@ANG
)@@G@@)[_[F],-)K1*S1#@]AG@@@@@G@)@U0C/)__"G/@__"[@@@#Y;@@@@-C@@@U0[@@@U0C@@@# NH
)@@G@@'^@@@@BE@@@A)]C[F#@CS[#@-)K0CS@@@@@@C@+@@]O@)@FQR@)@#X[@@@#XG@@@#XC/@@@[NI
)@@G@@[@)@FR[@@@[^R@K@E1BF@@@A)]L[F#A)]A@K0CS^GUAG@@@@ @]@)_ @]@X7A@)@#QN[@@FRNJ
)@@G@@R/)@@[[[@@#XC.@@@[8L@@]F[@-),LBG@@@A)]U[F#@-<K0]A[#@-)K0C@@@/K@@C((@@@#ZNK
)@@G@@R@K@#X[@)@#XG@)@#XC/)@@[[@@@#ZC@[@,LR@K@#XBH@@@A)]<[F#A]@-<K0]A[]A@@@@@@NL
)@@G@@/,0@@@[@)@#XG/)@@][[@@#)C[[@,M/K@@]'(@@@@KG.@__;C[[@,LBI@@@A)]?@<#@)CS^@NM
)@@G@@)^,@)@@@@@@@@@@@@@______      ______GROUPS/K@@#T@]!@FE/K@@]0@@@@#)BJ@@@ANN
)@@G@@)]0[F]C-)K0CS^G]A@@@@@@@[@@@@@G@@@@@C/@@@[@]\@FE@@@@^0@@@@^,@@@@#)@@@@E2NO
)@@G@@/,0@@@BK@@@A)]9[F@K0CS4[]E)CS^[#@@@@@]2@FE/K@@#A@@@@#)@@@@]"/,0@@@^^K@]"NP
)@@G@@N8L@,MR@K@#X/K@@#SBL@@@A)#]@+K0CS^@@)^2@)@@@@@@@@@@@@@______      ______NQ
)@@G@@GROUPS/K@@#T[@@@#XG@@@#XC/@@@#BM@@@A)#A[F#@-<K^GU@-AK0C]@@@@@@@@#I@@@@#HNR
)@@G@@@@@@E3/,0@@@^^K@#HN8L@,M^^K@#IN8L@,NR@K@#XBN@@@A)#J[F#@-)K0@]A[#@@@@@@@@NS
)@@G@@[@)@#XG@)@#XC/)@@#[@@@@@G@@@@@C/@@@[@]5@FE@@@@^4@@@@^2BO@@@A)#S[F#@-)K1+NT
)@@G@@A[@^[#@@@@@@(@@@#)/K@@#_*@@@@I/C)@#)H@)@#ZC/)@@[[@]@X7C@@@#) @@@#)BP@@@ANU
)@@G@@)#-[N@^G@-)K0]A@@@;@)@@)G/)__"H@)@#);@)@@<R@K@#-[@)@#-;K)@@[G@)@#)C/)@@[NV
)@@G@@/K@@C(BQ@@@A)#:[EK0CS4G@-)K0C]@@@@@@/,0@W0/K@@#;*@@@#<[[@@#<;D@@@O;-@K#+NW
)@@G@@C[[@M2]@)@#+G/)__"BR@@@A)#4@:#@-QK0CS^G@@@)^6@S@@@@@@@ONEWAY***** (069H NX
)@@G@@@@K@#)@#^@FE@@[@^6/,0@@@@##@FEBS@@@A)^9[K@@@@@@@@@@@@@LE,I4)VARIABROUPS NY
)@@G@@ FOR GEFINEDBEEN DS NOT ALE HAR.  SC2 ERROBT@@@A)#9[F],)]A[#@)CS^GS@@@@@NZ
)@@G@@G/@__;C@[@,LR@K@#X/K@@CK]@@@#=H@@@#<C/@^8)/K@@C('^@@@@BU@@@A)^][EK[#@-)KOA
)@@G@@^G] T#@@@@@@@@[@ #/,0@@@@#I@FE/,0@W0[@@@#XG@@@#XC/@@@]/K@@^I(@@@@GBV@@@AOB
)@@G@@)^F@F#@@@@@@) #[@@@@@@@@R OF GODIFIECOND MR.  SE2 ERROONEWAY***** (103H OC
)@@G@@@#J@FEBW@@@A) F[S@@@@@@@)     XALL KLL K, E S, A  SCALORMS -HESE FE OF TOD
)@@G@@ IN ONIS NOTROUPS BX@@@A)^G[F],)CS^GUA@K0CS^C8@@/,0@@@[@)@#XG@)@#XC/)@@#OE
)@@G@@[@@@#<C@[@,MR@K@#X/K@@C('^@@@@BY@@@A)^P@V#@-)K0@) Q@K@)^S@V#@-CK0@@@@@#<OF
)@@G@@/,0@@@@#P@FE______      @@@@#>@@@@E,@@@@#<BZ@@@A)^V@3#@-)K0CS^G@@@) S@K@OG
)@@G@@@@@@@@______      (@@@@GH@@@E5C@@@#>@#Q@FE@@@@ Q@@@@E4CA@@@A)^-[F@K=CS^GOH
)@@G@@]A[#@-)K0@@@(@@@@GH@@@E7C@@@#>@#T@FE@@@@ S@@@@E6@@@@#</,0@@@/K@@ ]CB@@@AOI
)@@G@@)^%@<@K0CS@@) U@K@)^,@N@K=@@@@/,0@@@/K@@^B______      *@@@@GH@@@E8C@@@#>OJ
)@@G@@/K@@^;CC@@@A)^0[F#@-)K0CS^G]A@K@@@@@C/@@@^/K@@^B*@@@@GH@@@E'C@@@#<@#Y@FEOK
)@@G@@@@@@ U@@@@E9@@@@#<CD@@@A)^9[F#@)CS^G@)]A[@@@@@@@/K@@ C[@@@#&C/@@@ /K@@^BOL
)@@G@@*@@@@GH@@@E;C@@@#</K@@ C[@@@#&CE@@@A) ][F#@-)^@K0CS[#@@@@@@@H@@@#&C/@@@GOM
)@@G@@ @@@#$[@@@#&C/@@@A/K@@^B*@@@@GH@@@E/C@@@#<CF@@@A) F[F#@CS^G]AH@K<*]A@@@@ON
)@@G@@@@@@#*@@@@ M/,0@@@^^K@ MN8L@,JR@K@#X[#)@#*[@@@[ C#)@#&CG@@@A) O[F#@-)K0COO
)@@G@@S[@K=*S^G@@@@#1@FE@@@@#>/,0@@@/K@@ %(@@@@GH@@@E.C@@@#>@#,@FE@@@@#>CH@@@AOP
)@@G@@) X[E^@K0CS^D]A[#@@@@@@@@@@@#$@@@@#A/,0@@@[@@@#$G@@@#$C/@@@[/K@@^B*@@@@GOQ
)@@G@@G/@__.CI@@@A) &[F#@-)^[#@)CM=G]A@@@@@@@@#$@@@@#A/,0@@@/K@@^B(@@@#$8LK@ HOR
)@@G@@G_)@@[@#4@FE@@@@#>CJ@@@A) \[N#@-)^G@)@-)@@*@@@@IH@)@#(C/)@@[C/@@@[/K@@AROS
)@@G@@(@@@@GH@@@#&C/@@@A@#8@FE@@@@#(CK@@@A) 9[M@K0C@]@@@@@@@/=K@AF+@@@@I @@@@IOT
)@@G@@*@@@@K/D@@A[H[@@#(C.@@J*C/)@@[ @@@@G1@@@@ICL@@@A)A#@:@K0CP=G]A@@@@) W@S@OU
)@@G@@@@@@@@ONEWAY***** (077H @#"@FE@@[@ W/,0@@@@#.@FE/,0@W0CM@@@A) Z[S@@@@@@@OV
)@@G@@USED)  K IS EN ALL000 WHCEED 1NOT EX1 AND XCEED MUST ER.  K 2 ERROCN@@@AOW
)@@G@@)AC[F],CS^G@-)^G@@@@@@@@*@@@@GH@@@#&C/@@@ ]@@@#=;@@@@-C@@@#([@@@#(C/@@@[OX
)@@G@@'^@@@@CO@@@A)AL[F@K0@-)K^GU@@@@@@@@@C/@__"/K@@A$(@@@@]/K@@CK]@@@#=G/@@@[OY
)@@G@@;@@@@-C@@@#(/K@@AQCP@@@A)AU[F#A]A[#A-)^[#@@@@@@@C@@@#*/K@@A>*@@@@GH@@@#(OZ
)@@G@@C@[@@]A@K@#*[@@@[ R/K@@[G@@@@]CQ@@@A)A<[F#@)]@)CS^E2A[#@@@@@@^M@FE@@[@ %PA
)@@G@@/,0@@@@^L@FE/,0@W08LK@AXO/K@@[/K@@A0[@@@#=CR@@@A)A?@F#@@@@@@) %[@@@@@@@@PB
)@@G@@HAS NO,021H ALE,I6R.  SC2 ERROONEWAY***** (028H @@K@#(CS@@@A) 2@S@)A!@3]PC
)@@G@@,-)K^G]AH#@@[@@@#%C@[@AMR@K@#=/K@@CK @@@#='^@@@@ED)    DEFINT BEENCT@@@APD
)@@G@@)A3[M^[#@-)K^G@-)@C/)@@B[@@@#:;K@@@#C@@@#%/K@@A0[@@@#=D@@@#%/K@@A91@@@@GPE
)@@G@@*@@@@GCU@@@A)A.[F#@-)[@K0CS^G]@@@@@@/K@@BC*@@@#([@@@#(C@@@#:/K@@BD*@@@@JPF
)@@G@@G/0__9[@0@#?+@)@#%CV@@@A)BA[MK0C@-)^@K0C@@/K@@B][@@@#&C/@@@ /K@@BK*@@@@GPG
)@@G@@H@@@#?C/@@@B/K@@AF[@@@#(C/@@@[CW@@@A)BK[MK0@-)[@K>*S@@@@@@#)/,0@@@/=K@CKPH
)@@G@@)@@@@I @@@@I*@@@#?C/)@@[ @@@@G*@@@#)C/@@@[CX@@@A)BU[N#@)CS[#@C]A@@*@@@@GPI
)@@G@@G/@__.C@@@#?/K@@B\(@@@@GH@@@#!C/@@@]@^:@FE/K@@CK@@@@#!CY@@@A)B=[EK^[#@-QPJ
)@@G@@K0CS^G]A@@@@@@K@#)@@K@#(@^1@FE@@[@ 5/,0@@@@^0@FE/,0@W0/K@@CK1@@@@GCZ@@@APK
)@@G@@) 5[S@@@@@@@E BUT E SCALISCRETIS A D,033H ALE,I6R.  SC2 ERROONEWAY***** PL
)@@G@@(028H DA@@@A)A@@*@@@@@@@)B!@<],)]A@@H@@@#?C/@@@[/K@@CK'^@@@@RIC)  S NUMEPM
)@@G@@011H ILE,I4,VARIABDB@@@A)B1[EK^[#@-QK0CS^G]A@@@@@@K@#)@@K@#(@^'@FE@@[@A PN
)@@G@@/,0@@@@^9@FE/,0@W0/K@@B/(@@@@GDC@@@A)A [S@@@@@@@UT VARCALE BANGE SIS A RPO
)@@G@@,030H ALE,I6R.  SC2 ERROONEWAY***** (028H DD@@@A)AK@*@@@@@@@)B'@<],)CS^@PP
)@@G@@/K@@CK(@@@#:/K@@CK'^@@@@MERIC)LPHANUH IS AI4,016IABLE,DE@@@A)B"[F]S-)K0CPQ
)@@G@@]A[#@-)@@@@@1@@@@G*@@@@GH@@@#:C@@@#,@ ]@FE/K@@CK@@@@#,@@@@#)/,0@@@DF@@@APR
)@@G@@)CB[F@K^G] T#@-)K0CS^E8@'^@@@@@@K@#(@@K@#)@ A@FE@@[@AP/,0@@@@  @FE/,0@W0PS
)@@G@@/K@@CKDG@@@A)AP[S@@@@@@@IS LES,052H BLE,I4 VARIADTH OFELD WIR.  FI2 ERROPT
)@@G@@ONEWAY***** (046H DH@@@A)A)[C@@@@@@@@@@[C@@@@@@@)     ALE,I6 OF SC WIDTHPU
)@@G@@ VALUE SCALEAXIMUM THE MS THANDI@@@A)CK[F#@-<K0C]@CS^[#@@@@@R@K@#=/K@@C+PV
)@@G@@]@)@#(;K)@@#/C)@CS/@)@C(C@)@#=[@]@)_C@@@#=DJ@@@A)CT[F#ACS^G]A[@K0CS4G@@@PW
)@@G@@[@@@#(C@[@G+R@K@FS/K@@C+*@@@#(A@K@FS[@@@#(;K@@@EC@[@G+DK@@@A)C+[F#A-)[@KPX
)@@G@@0CS1@@@@@@@@8L@@]RO/)@@[[@@@U1C@@@#(/K@@C(1@@@@G*@@@@GH@@@#(C@@@U1DL@@@APY
)@@G@@)C:[F#A-<^G]A[#@-)^G@@@@[@)@#\C@-@@]O@K@FQR@K@#X[@@@#XG@@@#UC/@@B5 @@@U3PZ
)@@G@@ @@@U2DM@@@A)C4[F#@-)K[#@-)@@@@@@@@@[@)@[^C_)@@[G/)__" @@@#1[@@@#XG/@@@[QA
)@@G@@/K@@D9(@@@#\ @@@#0DN@@@A)C.[F#@-)K0CS^G@-)K0C@@@/K@@D$(@@@#2[@@@#2C@[@@]QB
)@@G@@R@K@FRA@)@FRO@)@FQR@)@#X[#)@#QDO@@@A)DA[F]Q-)K0C]A@K0]@@@@@@/K@@DQ*@@@@GQC
)@@G@@H@@@#!C/@@@]@ $@FE/K@@DQ@@@@#!@@@@#2/,0@@@DP@@@A)DJ@;@K0CP=G]A[#@-R@@@@@QD
)@@G@@)A(@C@(041H '^@@@@@@K@#2@ :@FE@@[@A(/,0@@@@ %@FE/,0@W0DQ@@@A)A%[S@@@@@@@QE
)@@G@@ERIC) PHANUM IS AL4,016HABLE,IT VARIPENDENR.  DE2 ERROONEWAY***** DR@@@AQF
)@@G@@)DQ[MK1*S1@^@K0CS@[@@@#1G@@@#1C/@@@[/K@@GL*@@@@G/G@@DXG/@_9\[@@@U2G@@@U2QG
)@@G@@C/@@@[DS@@@A)D)[EK0CS^G]A[#A)]AG@@@@G@@@U3C/@@@[/K@@D,[[]@*[C[@@#2R@)@#0QH
)@@G@@[@)@#0G@)@#0C/)@@[DT@@@A)D([F#A-<K0CS4G@-)K0@@@@G_)@@[[@@@#XG@@@#XC/@@@[QI
)@@G@@ @@@#1[@-@,LC@)@#1R@K@U3[@@@U3DU@@@A)D2[F@^GUAH#A-)K1+A@@@@@G@@@#UC/@@@[QJ
)@@G@@[[]@,LC[@@#1R@)@U3[@)@U3G@)@U3C/)@@[8L@@C.DV@@@A)D;[F#@-)K0]A[#A-)K0C@@@QK
)@@G@@/K@@FH(@@@#\[[@@#3C[@@U2[@)@#\C@-@@]O@K@FQR@K@#X[@@@#XDW@@@A)E^[EK0@CS^GQL
)@@G@@]A[#@@@@@@@@A@)@FRO@)@FQR@)@#X[#)@#Q[@)@[^C_)@@[G/)__"[@@@#XG/@@@[DX@@@AQM
)@@G@@)EH[F#@CS[#@-)K>*S^G@@@@@@@@#!@@@@#2/,0@@@[@)@#XG@)@#XC/)@@[[@@@#2C@[@@]QN
)@@G@@R@K@FRDY@@@A)EQ[F@K0]A@K^[#@-Q@@@@@@/,0@@@@AF@FE/,0@W0/K@@E<*@@@@GH@@@#!QO
)@@G@@C/@@@]@AC@FE/K@@E<DZ@@@A)EZ[F#@-)K0CP1#A-<^@@@@@/G@@E%G/@_9\[@@@U2G@@@U2QP
)@@G@@C/@@@['^@@@@@@K@#2@AG@FE@@[@A(EA@@@A)E*[EK[#@-)K0CS^GS@@@@@@C.@@@[[@+@*[QQ
)@@G@@C@)@#2R@)@#0[@@@#0G@@@#0C/@@@[/K@@GL*@@@@GEB@@@A)E1[F#A-<K1+AH#@)]A@@@@@QR
)@@G@@G]@@#3C"@__"/K@@FF(@@@#3[[-@,LC.)@@[R@K@U3[[@@U3G[@@U3EC@@@A)E'[E^G]AH#@QS
)@@G@@C]@-)@@@@@@@@AX@FE/,0@W0/K@@FD*@@@@GH@@@#2C@]@*[A@)@#*[]@@[ R/)@@[ED@@@AQT
)@@G@@)F#@<]?-)K0CS@@@@@)A5@)@@@@@@@2 ERROONEWAY***** (039H @@K@#2@AY@FE@@[@A5QU
)@@G@@/,0@@@EE@@@A)A9[K@@@@@@@@@@@@@PVARS)ITH REFIED W SPECIS ALSO031H ILE,I4,QV
)@@G@@VARIABPVARS R.  DEEF@@@A)FB[#],)]@C]AH@@@@)B#@C@NVARS /K@@GR*@@@U28L@@EDQW
)@@G@@G_)@@[8LK@E/O/)@@[/K@@FF'^@@@@EG@@@A)B^@C@)FJ@;#@-HK0CS^[@K0@@@@@@@A%@FEQX
)@@G@@/K@@FQ/K@@FQ@@@@#4@@@@B#/,0@@@ @@@#4______EH@@@A)B @K@)FQ@3#@-HK0CS^[@@@QY
)@@G@@@@@@@@/K@@FX/K@@FX@@@@#5@@@@B /,0@@@ @@@#5______NTVARSEI@@@A)FW[F#@-)K^GQZ
)@@G@@]A[#@)]A@@@@G@@@#4C/@__"/K@@GR(@@@#4[@@@#4C@@@#5/K@@F-(@@@#5@A?@FEEJ@@@ARA
)@@G@@)F>[E^G]^!#@-)K^G@@@@@@@C/@@@]@A4@FE/K@@F1@@@@#!@@@@#Q/,0@@@[#)@#Q[@@@[^RB
)@@G@@C_)@@[EK@@@A)F,[N#@C]AH@^GSCS@A@K@#*[@@@[ R/K@@[G@@@U0C/@__"/K@@F"(@@@U0RC
)@@G@@/K@@GI(@@@@GH@@@#!EL@@@A)F8[N#A-)^@K[#A-<@G/@_9\[@@@U2G@@@U2C/@@@[8LK@F7RD
)@@G@@O/K@@[/K@@GI(@@@@GH@@@#QC@[@X7EM@@@A)G][F@^[#A-)K1+AH#A@@@@@[@)@U3G@)@U3RE
)@@G@@C/)@@[[@]@*[C@@@#QR@)@U2/K@@GL*@@@@G/G@@G EN@@@A)GF[F#ACS1@K^[#@-Q@@@@@@RF
)@@G@@/,0@@@@BD@FE/,0@W0/K@@GR8L@@F$G_)@@[[[[@,LC.@@@[R@K@U3EO@@@A)GO@V#@-)K:)RG
)@@G@@)BB@0@@@@@@@XIMUM R.  MA2 ERROONEWAY***** (066H '^@@@@@BE@FE@@[@BBEP@@@ARH
)@@G@@)BH@0@@@@@@@)GR@UK0CS@@@[@@@#XG@@@#UC/@@P;EEDED)ES EXCARIABLDENT V DEPENRI
)@@G@@OF 400EQ@@@A)GU[F#@-)K0CS^G@)]A@@@@@[@)@#6C/)@@[/K@@J[(@]@@]O@)@FQR@)@#XRJ
)@@G@@ @@@#8 @@@#7 @@@#6ER@@@A)G<[EK0CS^G@-)K0CS@@@@@@C][@@@O@K@FPR@K@#X[[)@#8RK
)@@G@@C.)@@S @@@#D @@@#C[[@@#9C.@@@]ES@@@A)G?[F#@-)K^G@-)K0CS@@@@@H@+@@]O@)@FQRL
)@@G@@R@)@#X[@@@#XG/@@@][[@@#6/K@@I\(@@@#Z[]@@#ZET@@@A)G5@'K^[#@-QK0CS@@)BN@K@RM
)@@G@@***** (090H @B)@FE@@[@BN/,0@@@@BZ@FE/,0@W0/K@@G"(@@@@IEU@@@A)BP[S@@@@@@@RN
)@@G@@IST(N)IST, HS -  HE FORMF THES ONE ONOT INST IS R.  HI2 ERROONEWAYEV@@@ARO
)@@G@@)B)@S@)G/@3],)CS^G@-)@@@[@@@#8C@[@@@O@K@FPR@K@#X/K@@J['^@@@@,MAX))(N,MINRP
)@@G@@, HISTEW@@@A)H][MK0CS@K@^G@@@@C[)@#8C/@@@[ @@@@K*@@@@G/G@@HEG/@__RC.@@@[RQ
)@@G@@[@)@#XG@)@#XC/)@@]EX@@@A)HG[MK@^[@K0CP=G@@@@[@B</,0@@@@B*@FE/,0@W0/>K@H&RR
)@@G@@+[@@@G @@@@G*@@@@M/D)@HKG.)__'EY@@@A)HQ@F#@@@@@@)B<[@@@@@@@@RVALS F INTERS
)@@G@@MBER OR.  NU2 ERROONEWAY***** (087H @B(@FEEZ@@@A)B:[@@@@@@@@)HR@F],@@@@@RT
)@@G@@'^@@@@40)   5 AND TWEEN  BE BET MUSTTH HISIED WISPECIFFA@@@A)HS[MK0@)]A[RU
)@@G@@#@@@@@*@@@@GG/@__'C@@@#8[@@@#8C/@@@*/K@@HZ1@@@@G*@@@@GH@@@#8C/@@@*FB@@@ARV
)@@G@@)H+[MK[#@CS[@K0CS@O@)@FQR@)@#X/K@@I\(@@@@GH@@@#ZC/@@@[[@@@#8C/@@@ /K@@H&RW
)@@G@@1@@@@GFC@@@A)H?[MK0]@CS[@@@@@@G/@__'C@]@@]/K@@G7*@@@@GH@@@#ZC/@@@^/K@@H;RX
)@@G@@(@@@@GH@@@#ZC/@@@#FD@@@A)H6[MK[#@-)K0CS@K@/@@@IBG/@__.C@[@@]O@K@FQR@K@#XRY
)@@G@@[@@@#XG@@@#XC/@@@[/K@@G7*@@@@GFE@@@A)I@[F@K0CS@K0C]A[#@@@@@@O@K@FPR@K@#XRZ
)@@G@@/K@@IH[@K@#C"O]@@@C/@@]VO@)@FPR@)@#X/C@@G7FF@@@A)ID[EK0CS^G@-)K0CS^G@@@@SA
)@@G@@O@)@FQR@)@#X[@@@#XG@@@#XC/@@@][@)@#CC@)@E?[@@@E?C@[@@@FG@@@A)IM[M^[@K0CSSB
)@@G@@@K0C@@/K@@I+[@0@#D"O-@@@C/)@]VO@K@FPR@K@#X/C)@G7/@)@IWG/)__.C@+@@]FH@@@ASC
)@@G@@)IW[F#@-)^G]A[#@CS^G@@@@C@)@#C[@@@#9C/@@@[[@)@#DC@)@E?[@@@E?C@]@@@O@)@FPSD
)@@G@@R@)@#XFI@@@A)I>[F#@)]@)CS^E2A[#@@@@@@CG@FE@@[@B3/,0@@@@CF@FE/,0@W0/K@@I\SE
)@@G@@*@@@@I/C)@I("^)@#DFJ@@@A)I,@F],@@@@@)B3[@@@@@@@@ALUE IIMUM VST MINR.  HISF
)@@G@@2 ERROONEWAY***** (072H '^@@@@FK@@@A)B;@*@@@@@@@)I\@V#@-<K1)@@@@@@[@K@U7SG
)@@G@@)@@@U7C@@@#9VALUE)XIMUM HAN MALESS TS NOT FL@@@A)I2[F#A-<K1*S1#@CS^G@@@@SH
)@@G@@*@@@#7[[@@#7;L@@@[G[@@#8C.@@@[[@)@U9G@)@U9T@)@U0C@)@U3FM@@@A)I;[F@^G]A[#SI
)@@G@@A-)^G]A@@@@@[@@@#XG@@@#UC/@@QR[@@@#7T@@@U3C@@@#7[@@@#7C/@@@G/K@@I"FN@@@ASJ
)@@G@@)J^[EK0CS^G]A@K0C@@@@@@@C@[@@]8L@@JE @])[*[@)@[^R@)@E1O@K@FQR@K@#XG@)@[*SK
)@@G@@C/)__"FO@@@A)JH[F#@-)K[#@-)@@@@@@@@@[@@@[^C_)@@[G/@__"[@)@#XG@)@#XC/)@@[SL
)@@G@@/K@@KO(@@@#Z[@@@#ZFP@@@A)JQ[F#@CS^G]A[#@-)K0@@@@C@[@@]R@K@FTA@)@FT[@@@FRSM
)@@G@@O@)@FQR@)@#XG@@@[*C/@__"[#)@#*FQ@@@A)JZ[F#@CS^G]A[#@]A@@@@@@N[K@FRR/0@@[SN
)@@G@@R/K@@]O@)@FQR@)@#X[@)@#XG@)@#XC/)@@][@@@#<FR@@@A)J*[F#@-)K0]@-)K0]@@@@@@SO
)@@G@@/K@@J8*@@@@GH@@@#<C@[@[1/K@@J5(@@@@GH@@@#<C@#@]AA@0@#QFS@@@A)J1[MK0]@-)KSP
)@@G@@0C@C@@8LK@J*O/0@@[O/K@@]/K@@KA[@@@#'C@@@#Q/K@@J8*@@@@GH@[@[2C@]@@[FT@@@ASQ
)@@G@@)J;[F@K0CS^G] T#@-)@@@@@@@L@@[@@L@@@@C2@FE@@[@C@/,0@@@O@K@FQR@K@#X@C1@FESR
)@@G@@/,0@W0FU@@@A)C@[S@@@@@@@D WITHBE USEANNOT 027H C ,2A6,E CODER.  TH2 ERROSS
)@@G@@ONEWAY***** (032H FV@@@A)CF@K@)K^@;],)CS^G]@)CS@@C'@FE/,0@W0/K@@KJ(@]@[*ST
)@@G@@R@)@#'/K@@KM'^@@@@R)     HOMVAFW@@@A)KF@<]?-)K0CP0@@@@)CH@)@@@@@@@2 ERROSU
)@@G@@ONEWAY***** (078H '^@@@@@C;@FE@@[@CH/,0@@@FX@@@A)CL[K@@@@@@@@@@@@@ ONCE)SV
)@@G@@E THANED MORPECIFIR IS S HOMVAIER OF MODIFE SAMER.  THFY@@@A)KJ[F#@CS[@^SW
)@@G@@G]A[#@@@@@@@ @@@#;[@@@#XG@@@#UC/@@RC8L@@JQG_)@@[[@#@[*C/@@@[R@0@#'FZ@@@ASX
)@@G@@)KS[N#@-)^@K1))C@@/,0@W0/K@@K$1@@@@I*@@@@IH@)@U0C/)@@[/K@@N-(@[@@]O@K@FQSY
)@@G@@R@K@#XGA@@@A)K+@:#@-QK0CS^E8@@)CV@S@@@@@@@ONEWAY***** (083H '^@@@@@DC@FESZ
)@@G@@@@[@CV/,0@@@@DB@FEGB@@@A)CY[S@@@@@@@ THAN D MOREIS USEROUPS D IF GECIFIETA
)@@G@@ BE SPCANNOTNKRES R.  BA2 ERROGC@@@A)C(@C@)K$@;#A-)K0CS^G]A[@@@@@@/K@@K0TB
)@@G@@*@@@#;A@)@FRO@)@FPR@)@#X[@@@#;C@@@U2ONCE) GD@@@A)K,[EK0CS[#@-)K[#@@@@@@@TC
)@@G@@[@)@#AC@<@@[/K@@LL(@@@#Z[@@@#ZC@#@@@R@0@FR[@@@#;C/@@@[GE@@@A)K7[EK0@-)K<TD
)@@G@@*S^G]A@@@@@@@@@@#>@@@@#Q@@@@#A/,0@@@[#)@#QN.@@@CC_)@@[[[@@#BC[#@@]GF@@@ATE
)@@G@@)L@[F#@-)K0]@-)K0C@@@@@@G_)@@[/K@@LZ[@@@#/C@@@#Q/K@@LC*@@@@GH@@@E.C@@@#>TF
)@@G@@@DQ@FEGG@@@A)LD@3@K^G] T#@-)@@)C%@S@VARIAB***** (067H @DY@FE@@[@C%/,0@@@TG
)@@G@@@DX@FE/,0@W08L@@K;GH@@@A)C![K@@@@@@@@@@@@@)     ACTERSY CHAROO MAN HAS TTH
)@@G@@ANKRESWITH BIFIED E SPECLE NAMGI@@@A)LJ@N],)@@@@)C7@K@)LL@V]W-)K0@@@@@@@TI
)@@G@@@@@@#.@@@@C7/,0@@@______VNAMES/K@@N-'^@@@@GJ@@@A)LO@V#@-)K@@)C9@K@)LR@V#TJ
)@@G@@@-IK0@@@@@C9/,0@@@@D+@FE______INAMES/K@@N-@@@@#"@@@@#"GK@@@A)LU[F#@-)K0CTK
)@@G@@]A@K0CS@@@@@C/)__"[@@@#_[@@@#0C/@@@[@D<@FE/K@@LZ@@@@#"@@@@#"@@@@#.GL@@@ATL
)@@G@@)L<[F#@]A[#@)CS4[#A@@@@@D@[@*[/K@@MB(@@@U2/K@@MH*@@@#ZA@K@#Q[@)@[^R/K@@[TM
)@@G@@G@)@#;GM@@@A)L?[M^[#A]A[#@-)YKC@+J_"R@)@#X[@@@#XG@@@#.;@@@@<G/@__"C@[@*[TN
)@@G@@/K@@NS1@@@@G*@@@@GGN@@@A)L6[F#@C]A[#@-)K0JE@@@@@^^K@M@N8MJ_"[[@@#BC[@@E.TO
)@@G@@[@)@#AC@)@E"/K@@MB(@@@@IH@)@E.GO@@@A)L_[F]Y)CS^G]A[#@-)K^G@@C@@@F[/K@@M,TP
)@@G@@@D4@FE@@@@F@@@@@E_@@@@#A@@@@E,@@@@M@/,0@@@GP@@@A)MC[F#@-)K0]A@K0]@@@@@@@TQ
)@@G@@/K@@M,(@@@@GH@@@#;C/@@@[[[@@#/C.@@@^[@)@#BC@)@E.[@@@#AGQ@@@A)ML[F])-)K0CTR
)@@G@@S^G]A[#@CS@@G@@@#_C/@@@[@D;@FE@@@@E,@@@@E4@@@@E4@@@@#<@@@@#_/,0@@@GR@@@ATS
)@@G@@)MU[F#@-LK0CS^G]A@K@@@@@*@@@@G/G@@M=G/@__6G@@@#/C@@@^@@D.@FE@@@@^@/,0@@@TT
)@@G@@[@@@#_GS@@@A)M<[F@^G]A[]Y-)K0CS^G@@@@@@@#/@@@@#A@@@@FR@@@@#</,0@@@[@@@FRTU
)@@G@@H@@@^@C/@@@B/K@@LEGT@@@A)M?[F#@-)K0CS[#@CS@@@@@@*@@@@GH@@@#QC/@@@[A@0@FRTV
)@@G@@ @#@@]O@0@FQR@0@#0@E@@FE@@@@^@GU@@@A)M5@+K^G]A@@)C;@S@)M9@E@@@@@@@[@]@@]TW
)@@G@@______S     BANKRER@)@FRC@@@F]/K@@M'1@@@@GGV@@@A)M'[F#@C] D#@-)K0C]A@@@@TX
)@@G@@@@@@^[@@@@N[@@@@E,@@@@#A@@@@C;/,0@@@^^K@N[N8N@@]R@0@FRGW@@@A)N#[F#@-)K0CTY
)@@G@@S^G@CS@@@@@@[@+@@@C@)@#A[@@@@@G@@@@@C@@@#TO@)@FPR@)@#0@E^@FE@@@@#TGX@@@ATZ
)@@G@@)NG[F#@]A[#@-<K0@@@@@@@@1@@@@G*@@@@GH@@@^[C@@@VZ[[)@#0G[)@#0C.)@@#[[]@@[UA
)@@G@@C[@@#BGY@@@A)NP[F@K0CS1@K1*S@@@@@@@@1@@@@G*@@@@GH@@@#;C@@@VY8L@@L&O/K@@[UB
)@@G@@[@@@VZC@@@^[/K@@NSGZ@@@A)NY[F@K0CS4G]A[#@-)K0@@@C@#@RQO@0@FPR@0@#U @@@^^UC
)@@G@@ @@@^# @@@^][@@@VYC@@@#;/K@@N-HA@@@A)N$[F#@-)K^DUA[#@)CS^G@@C@@@^ @EP@FEUD
)@@G@@/K@@N\@@@@^A@@@@^ /,0@@@/K@@N9(@@@^ [@@@^ HB@@@A)N0[MK0]A@K[#@-)@@C/@@Q4UE
)@@G@@[@@@^ G@@@^ C/@@@[/K@@N9*@@@@GH@@@^AC/@@@[[@@@^ ;@@@@<HC@@@A)N'[F#@-)K0CUF
)@@G@@S[@K0CS@@@@@C@-@@@O@K@FPR@K@#X/K@@P&(@]@@]O@)@FQR@)@#X[@@@#XG@@@#UHD@@@AUG
)@@G@@)O#[F#@CS^G]@CS^@@@@@@@@C/@__"/K@@P&[[@@^]C.@@@[/K@@OF*@@@#Z[@@@#XG/@@@]UH
)@@G@@[@)@#ZHE@@@A)OG[F#@]A[#@-)K0CS@@@@@@C@]@@@R@)@FRA@0@FRO@0@FPR@0@#X[#)@#*UI
)@@G@@[@@@[^C_)@@[G@@@#ZHF@@@A)OP[F#@-)^[#@)C]A[]?@@@@/,0@@@@E%@FE/,0@W0/K@@O+UJ
)@@G@@(@@@^]/K@@O>*@@@@GH@@@F#[@@@^BHG@@@A)OY@<#@-)K0CP0@@@@)C"@)@@@@@@@2 ERROUK
)@@G@@ONEWAY***** (023H '^@@@@@@K@^B@E:@FE@@[@C"HH@@@A)D][C@@@@@@@)O+@E@C/@@@[UL
)@@G@@SID)  ITH REONCE W THAN D MOREECIFIE IS SP5,039HR.  ,AHI@@@A)O<[F#@)CS^GUM
)@@G@@@)CS^@@@@@@@C/@@@[/K@@OV*@@@^#/K@@O,*@@@@GH@@@F^C@@@^B/K@@P-[@@@^]HJ@@@AUN
)@@G@@)O?[F#@)CS^G@)CO4[#@@@@@@@@@E_@@@@O3/,0@@@^^K@O3N8L@@]O@K@FQR@K@#X/K@@P-UO
)@@G@@[@@@^#HK@@@A)O5[F#@-)K0CS@K%CS^G@@@@@E9@FE@@@@^C/,0@@@[@@@@@G@@@@@C@@@#TUP
)@@G@@@E7@FE@@@@#T@@@@#<HL@@@A)O"[MK0]@]AH@@@@@@ @@@@G*@@@@I/C)@PCH@)@U0C/)@@[UQ
)@@G@@C/@@@[/K@@PU*@@@@GH@@@^CC/@@@]HM@@@A)PC[M^GU@@)@@@@@@@G@@@@@C/@@@[/=K@PUUR
)@@G@@+@@@@I @@@@I*@@@@K/D@@PIH[@@U3C.@@@[C/)@@[HN@@@A)PM[]K)CS^G] T#@-)K:)@@@US
)@@G@@@@@@@@'^@@@@@F@@FE@@[@DF/,0@@@@E_@FE@@@@E_/,0@@@[@@@@@HO@@@A)DF[S@@@@@@@UT
)@@G@@MASS SBE ON N NOT ILE CATPUT FSID OUR.  RE2 ERROONEWAY***** (110H HP@@@AUU
)@@G@@)DQ[S@@@@@@@PLICAT035HRE,/20X,IABLESNT VAREPENDEIPLE DE MULTERE AR IF THUV
)@@G@@TORAGEHQ@@@A)D-@*@@@@@@@)PU@V#@)CS@@@@@@@@C@@@F /K@@PZ(@@@^^LES)  VARIABUW
)@@G@@ROUPS , OR GE SETSHR@@@A)PX[F#@)CS^G@-)K0]@@@@@@8L@@OJG_)@@[[@@@#XG@@@#XUX
)@@G@@C/@@@#[@@@^^C@@@#</K@@OV[@@@^BHS@@@A)P&[F#A)]AG[#@-<@@@@@@@@C@#@X7A@)@#QUY
)@@G@@[@@@[^R/)@@[R/0@@[G@@@U0C/@__"/K@@SC(@@@U0HT@@@A)P\[F#@-)K^GUA[#@)CS4@@@UZ
)@@G@@/K@@R#(@@@U,/K@@R<(@@@#=[@)@#=C@<@)_/K@@R<(@@@#)[@@@#)HU@@@A)P8[EK1)-)K1VA
)@@G@@*S[@@@@@@@@@/K@@R[*@@@@GH@@@#)C@[@V-A@K@#*[[@@[ R/K@@[G[@@U,C.@__"HV@@@AVB
)@@G@@)Q[[F#@)]@-<K0]@-)@@@@@@C@@@#*/K@@R[*@@@@GH@@@#=C@[@Y(/K@@QZ*@@@@G/G@@Q VC
)@@G@@D@@@#=HW@@@A)QE[F#A-<K1*S1#A-)K1*S0@]@L@=BH@L@=B[@K@^D+@[@=BC/@@@_[@-@-1VD
)@@G@@G@)@U3C@-@-1[@]@X7HX@@@A)QN[F#@CS4GUA@K0]A@@@@@@C@@@^D0@@@@KH[@@^DC[@@@GVE
)@@G@@C@@@#8[@-@=BG@-@=B;@)@@YC@)@#7HY@@@A)QW[F#A-<K^GSC]A[#@@@@@@[@@@#<D@@@#=VF
)@@G@@/K@@R[0@@@@G*@@@@GD@[@Y(/K@@R<[@[@=BG@[@=BHZ@@@A)Q>[EK0CS[#@-<K0]A@@@@@@VG
)@@G@@+[)@#<C.)@@[[[@@#<D[[@Y([@@@^F;K@@@#[@0@^E+@)@#<C/)@@[IA@@@A)Q,[F#@CS^G@VH
)@@G@@C]A[#@@@@@@@H@@@^FC@@@^H/K@@R[(@@@@JG/0__"G@0@^G[[@@^H;L@@@#[[0@^GIB@@@AVI
)@@G@@)Q7[E^[#@-)K0]A[#A@@@@@@]@[@Y(G@@@^G;@@@@-C@@@^H[@@@^HC@@@^F/K@@Q/1@@@@GVJ
)@@G@@*@@@@GIC@@@A)R@[N@^@K1*S4G@C@@/K@@RN0@@@@G*@@@@GH@@@#^[@@@U,G@@@U,C/@@@[VK
)@@G@@8LK@P/O/K@@[/K@@QDID@@@A)RE@3@K0CP=G]A[#@@)D&@S@ONEWAY***** (032H @@K@#^VL
)@@G@@@F/@FE@@[@D&/,0@@@@F;@FE/,0@W0IE@@@A)D([K@@@@@@@@@@@@@)     CEEDEDLES EXVM
)@@G@@TE SCAORDINA27H CO ,I4,0MIT OFR.  LI2 ERROIF@@@A)RK[F],CS4GUA[#A-<K0CS0@VN
)@@G@@[@-@Y(C@)@#=R@K@U,[@[@V-C@@@#)R@K@U,[@@@U,C/@@@['^@@@@IG@@@A)RT[F#A-<K1*VO
)@@G@@S4GUAH#@CS@@G@@@#8;@@@@YC@@@#7R@K@U,[@-@-1C@)@U3R@K@U,[@#@X7C@@@U,IH@@@AVP
)@@G@@)R+[N#A]@CS1@^GS@@G@@@U0C/@__./K@@SC(@@@@GH@@@U0C/@@@[8L@@P!O/)@@[O/0@@[VQ
)@@G@@[@[@=BII@@@A)R?[E^G]AH#@-)K1*S^G@@@@(@@@#<[@@@#<C@[@X6[@@@FRH@@@#QC@@@U0VR
)@@G@@A@K@#Q[@@@[^R/K@@]IJ@@@A)R5[F@K0CS^G]AH#@C]@@@@@/,0@W0/K@@S^*@@@@GH@@@#<VS
)@@G@@C@]@X7A@)@#*N[K@FRR@)@#Q/K@@SAIK@@@A)R"@<#@-QK0CS@@@@@)D3@)@@@@@@@2 ERROVT
)@@G@@ONEWAY***** (106H @GQ@FE@@[@D3/,0@@@@GP@FEIL@@@A)D7[S@@@@@@@AN ONEORE THVU
)@@G@@D IN MIS USESCALE  SAME TH THEBLE WI VARIAE SAMER.  THIM@@@A)E]@)@@@@@@@VV
)@@G@@)S]@:],)]@@@O/K@@[8LK@R8O/)@@[/K@@SC'^@@@@ION)  IFICATS SPEC GROUPIN@@@AVW
)@@G@@)SB[N@^G@]A@@@@@@@)@@@@I @@@@I*@@@@KH[@@#9C.@@@[C/)@@[ @@@@G*@@@#6C/@@@[VX
)@@G@@8L@@R,IO@@@A)EA@K@)SL@3@K$CS^G]A[#@@@@@@@@@@@@#"@@@@#"@@@@#.@@@@EA/,0@@@VY
)@@G@@/=K@S-______STJBINIP@@@A)SR@F@@@@@@@)EC@K@)SS@<#@-IK0CS@@@@@@@@@#.@@@@ECVZ
)@@G@@/,0@@@@G)@FE______TVTYPE/K@@S8IQ@@@A)SW[F#@-)K^G]@]A[#@@@@@@*@#@[*A@0@#QWA
)@@G@@N.@@@AR/0@@^/K@@S8@G-@FE/K@@S-@@@@#"@@@@#"IR@@@A)S>[N@^[#@)]A@^G@@(@@@^]WB
)@@G@@C/)@@[ @@@@G(@@@^#C/@@@[/K@@S8*@@@#;8L@@S<O/0@@[/K@@S8IS@@@A)S\[M[#@@)C@WC
)@@G@@@@@@@@C/@@@[/K@@TZ/=K@S8)@@@@I;^@@@= @@@@I(@@@^^C/)@@[)@@@@I @@@@IIT@@@AWD
)@@G@@)S9[F#A-<K[#A]A[#A@@@@@@N8M@X7A@)@#Q[@)@[^R/)@@[G@)@U0C/)__"/K@@TD(@@@U0WE
)@@G@@[@@@U'IU@@@A)T][F@K^GU@-)^[#A)@@@@@@/K@@TS(@@@U28L@@T@O/)@@[@G5@FE@@@@T WF
)@@G@@@@@@U;/,0@XO^^K@T IV@@@A)TF[EK1)-)K1*]@-<@@@@@@@@@@@V@/,0@XO^^K@TON8L@*[WG
)@@G@@A@K@#Q[@@@[^R/K@@[G@@@U2C/@__"IW@@@A)TO[F@K0]@-)^G]@-<@@@@@@@@@@V@/,0@XOWH
)@@G@@[@@@FR;K@@@[C@@@^ 8L@@TJO/K@@[@G.@FE@@@@TOIX@@@A)TX[F#@-)^[@K^G]A[#@@@@@WI
)@@G@@[@@@#EC@@@FA@H]@FE/K@@WBN@0@T</K@@T=(@@@@@@H@@FE@@@@FRIY@@@A)T&[F#A-)K0CWJ
)@@G@@S@^G@@@@@@@@C[<@P9[[@@#GG[#@RL;[@@@<C[#@P8O@0@FPR@0@#U[@)@#FC@)@U\IZ@@@AWK
)@@G@@)T\[F#@CS^G]A[#@-)K0CS@@[#@@#LC#@@^^[])@#KC])@^#[]@@#JC]@@^][[@@#IC[#@QPWL
)@@G@@[[)@#HJA@@@A)T8@:#@-)K0CS^G@@@)EE@K@@@@@@@@@@@@@______WRITE C@@@#; @@@#OWM
)@@G@@ @@@#N[#)@#MC#)@^ JB@@@A)T.@;#@-PK0CS^G]A[#@@@@@)EG@C@WRITE @@@@#W@@@@#EWN
)@@G@@@@@@E\@@@@EE@@@@E6/,0@@@[@@@#PJC@@@A)EH@C@)U^@;#@-PK0CS^G]A[#@@@@@@@@@#WWO
)@@G@@@@@@[(@@@@[*@@@@EG@@@@E6/,0@@@@HJ@FE______JD@@@A)EI@K@)UF@;#@-)K^G@-)K%)WP
)@@G@@/,0@@@[@@@FRT/@@@#C@@@#;/K@@US(@@@#;@HK@FE______WRITE JE@@@A)UM[##@-)K0]WQ
)@@G@@A[#@CS0@@@@@@@@@@@G@@@U!C/@@@[@HM@FE@@@@#W@@@@@@@@@@FR@@@@EI@@@@E6JF@@@AWR
)@@G@@)EK@K@)UU@3#A-PK0CS^G]AG@@@@@@@@@@U\@@@@E,@@@@EK@@@@FB/,0@@@[@@@U!______WS
)@@G@@WRITE JG@@@A)U)@F#@@@@@@)EM@K@)U-@<#@-PK0CS@@@@@@@@@EM@@@@FB/,0@@@@HO@FEWT
)@@G@@______WRITE @@@@#WJH@@@A)U>@V#@-<K0@)EO@K@)U*@V#@-PK0@@@@@FB/,0@@@@HP@FEWU
)@@G@@______WRITE @@@@#W@@@@U0@@@@E,JI@@@A)U:@<#@-)K1*S@@@@@)EQ@K@)U\@F#@@@@@@WV
)@@G@@@HQ@FE______WRITE @@@@#W@@@@U2@@@@E,@@@@EOJJ@@@A)U0@3]%-)K0CS^GUA@)ES@K@WW
)@@G@@@@@@@@______WRITE @@@@#W@@@@U3@@@@E,@@@@EQ@@@@FB/,0@@@JK@@@A)U6[##@-PK0CWX
)@@G@@S^G]A[#@-)@@@@@@@@@HS@FE@@@@#W@@@@#6@@@@E,@@@@ES@@@@FB/,0@@@@HR@FEJL@@@AWY
)@@G@@)U"@3#@)]A@K@@@@@@)EU@K@@@@@@@______WRITE /K@@V *@@@@GH@@@#6C/@@@[/K@@VUWZ
)@@G@@(@@@#6JM@@@A)V^@;#@-PK0CS^G]A[#@@@@@)EW@C@WRITE @@@@#W@@@@#8@@@@E,@@@@EUXA
)@@G@@@@@@FB/,0@@@ @@@#8JN@@@A)EX@C@)VF@;#@-PK0CS^G]A[#@@@@@@@@@#W@@@@#C@@@@E,XB
)@@G@@@@@@EW@@@@FB/,0@@@@HX@FE______JO@@@A)EY@K@)VM@3#@-PK0CS^G]A@@@@@@@@@@@#DXC
)@@G@@@@@@E,@@@@EY@@@@FB/,0@@@@HY@FE______WRITE JP@@@A)VS[##@-)K1*S4GUAH#A-<@@XD
)@@G@@@@@@@@[@)@U5G@)@U2C@)@U5[@@@U4G@@@U0C@@@U4@HZ@FE@@@@#WJQ@@@A)V)@N#A-<@@@XE
)@@G@@)E)@K@)V+@V#A-PK0@@@@@@@@@@@FB/,0@@@[[@@U6______WRITE G[@@U3C[@@U6JR@@@AXF
)@@G@@)V>@<#@-<K1*S@@@@@)E+@K@)V(@F#@@@@@@@H=@FE______WRITE @@@@#W@@@@X8@@@@U0XG
)@@G@@@@@@E)JS@@@A)V%@3]%-)K0CS4GUA@)E=@K@@@@@@@______WRITE @@@@#W@@@@*]@@@@U2XH
)@@G@@@@@@E+@@@@FB/,0@@@JT@@@A)V0[F#@-PK0CS^GUAH#@-)K@N@0@V'@H&@FE@@@@#W@@@@,MXI
)@@G@@@@@@U3@@@@E=@@@@FB/,0@@@@H>@FEJU@@@A)V9@:@K0CP=G]A@@@@)E&@S@@@@@@@SYSTEMXJ
)@@G@@***** (029H @H*@FE@@[@E&/,0@@@@H$@FE/K@@WBJV@@@A)E(@S@)V"@3],C]@-)K0@@@@XK
)@@G@@!^)@FC@H:@FE/K@@W#N@0@W]C8)@@B'^@@@@2MOD)  IN S8 ERRORJW@@@A)W^[F]0CS^G]XL
)@@G@@A[#@-)K0CS@@9\)@F+9\@@F)9,)@FY9,@@FW9!)@FUR]0@FF[^)@FCH8)@@[/K@@@@JX@@@AXM
)@@G@@)WH@3#@-)K0CS^G]A@)FC@C@@@@@@@@@@@@@@@F@@@*4@KFCN[K@F*N[@@F$R@0@F&R@)@F>XN
)@@G@@R@K@F=JY@@@A)WN@N#@-T@@@)FE@K@)WP@+K0CS^G@9()@FU[^@@FCAA0@FFC8@@@C@H:@@]XO
)@@G@@S82MOD/K@@@@/K@KFCJZ@@@A)WT[##@-)K0CS^G]A[#@-)@@@@@@@@^[@@F$A@0@F&A@)@F>XP
)@@G@@A@K@F=9:)@F+9:@@F)9%)@FY9%@@FWKA@@@A)W-[F#@)@CK^G]A[@@@@@@@@N@0@W:@H0@FIXQ
)@@G@@@@@@E,/,0@@@[@@@@@G@@@@@C/@@@[/K@@XV^[K@F*KB@@@A)W%@<@K0CS^G@@@@@@)FG@C@XR
)@@G@@)W,@N#@-T@@@/K@@@@/K@KFG@@F@@[*4@KFGR]0@FJ@H1@FI/K@@W?KC@@@A)FI@K@)W0@;#XS
)@@G@@@)CS^@K^@@@@N@0@W8/K@@W9*@@@@G/C@@W6D@@@F?/K@@W<AA0@FJ@H1@@]ERROR KD@@@AXT
)@@G@@)W7[N@K0]A@^G@-)@@H/@@@[G@@@F?T/@@@=]@@@^IW/@@@=;O@@@=H@@@F?C/@@@[@H8@FMXU
)@@G@@/K@@XJKE@@@A)X[[N#@CS^G@@CS@@@;@0K^J;G)@@[;)/@@@C@1@@@C/)@@[E@@@@GO@K@F:XV
)@@G@@R@K@^IG/@@@[[@@@^JKF@@@A)XF@'K^[#@-)K0CS@@)FK@C@@@@@@@@@F@@#*4@KFKR@K@F!XW
)@@G@@R]0@FN@H/@FM/K@@XJN@0@XI[@1@@@KG@@@A)XM@N#@-T@@@)FM@K@)XO@<#@-)^G@[@@@F:XX
)@@G@@C8FK@@A@K@F!AA0@FN@H/@@]SETBIT/K@@@@/K@KFKKH@@@A)XS[MK0C@)]@C]@@@@[^@@UPXY
)@@G@@[^@@[BC8FK@#[^@@[AC8FK@][^@@[ C8FK@[/K@@W2[@K@F?C@VK@[KI@@@A)X+[N@K0]@)]XZ
)@@G@@@)C]@@[^@@#N[^@@W>[^@@O'[^@@W=C8FK@ [^@@[M[^@@[CC8FK@^[@@@FP[^@@[YKJ@@@AYA
)@@G@@)X?[F@K^[@K^[@K^@@@@@@@@[^@@O9[^@@[I[^@@[J[^@@PM[^@@TZ[^@@[([^@@[%[^@@]7YB
)@@G@@[^@@PLKK@@@A)X5@3@K^[@K^@@@@@@)E!@S@@@@@@G@@@@@[@@@]WK/K@@@@[^@@]8[^@@@#YC
)@@G@@[^@@#O[^@@NC[^@@NDKL@@@A)E0[S@@@@@@@ALL   @@@@@^A     X     @@@@@ S     YD
)@@G@@@@@@@A@@@@ \@@@@ ,@@[@@[@@@@@@KM@@@A)E;[S@@@@@@@FILE  PUNCH PRINT SKPERRYE
)@@G@@AVR   @@@@@B@@@@@]R           SCALE XALL  KN@@@A)FA@K@@@@@@@@@@@@@@@@@@@YF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#MODEL KO@@@A@@@@@@@-)K1*YG
)@@G@@S@@@@@)EQ@K@)U\@F#@@@@@@@HQ@FE______WRITE @@@@#W@@@@U2@@@@E,@@@@EOJJ@@@AYH
)@@G@@@@^@@^@@C@@U@@/@@[@[@@@]@@ @F,@C@@X;@@@@@[@@@@4+S1PCHD      S1ENDC      YI
)@@G@@S1ENST      S1CKVI      S1MSG4      S1CKVN      S1MSG5      S1PRFT      YJ
)@@G@@S1PRST      S1SPCT      S1VLU       S1GTVT      S1GTVW      S1GVAL      YK
)@@G@@S1GTAG      S1TCHS      S1ENCI      S1ENCB      S1CKBN      S1UFOT      YL
)@@G@@S1UFT2      S1IODR      NPRT$       NIO2$       NERR4$      NERR3$      YM
)@@G@@S82MOD      @@[@@@@@@@WPBLANK$      ^@@@C@@]@@@@S82BLK      ]@@@C@@#@@@@YN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YO
)@@G@@)@@@V#@K0@@@)@@@0@@@@@@@@@@@[=@@@@@[@@@@@@_____.      SIMEFFR@K@D G/@__"YP
)@@G@@C@@@D AA@@@A)@A[S@@@@@@@@@@@@@@@@@[=@@@@B#@@@@@@_____.      TTESTS@@@@J*YQ
)@@G@@@@@@@[@@@@@P@@@@@[AB@@@A)@L[S@@@@@@@@@@@@#@@@@@[@@@@#C@@@@WD@@@@@@_____.YR
)@@G@@ST    CONTRA@@@@J*@@@@@[@@@@@XAC@@@A)@W[S@@@@@@@_^TNS@@@@@@N@@@@@@@@@@^?YS
)@@G@@@@@@I @@@@@@@@@@@]      POLYS @;&?$__^TNS@AD@@@A)@$[S@@@@@@@@@@@[=@@@@@@YT
)@@G@@@@@@@F@@@@@[@@@@@]@@@@M1@@@@@@@@@@@]      CI    @;&?$_AE@@@A)@2[S@@@@@@@YU
)@@G@@@@@@M/@@@@@#_____/ON    ORTHOC@@@@@@@@@@M'@@@@@@@@@@@]ROR   POOLERAF@@@AYV
)@@G@@)@.[S@@@@@@@@@@@^$@@@@RX@@@@@@@@@@@]      RANGE @@@@[=@@@@@[@@@@@[@@@@@]YW
)@@G@@@@@@[=AG@@@A)[C@)@@@@@@@)@#@<#@K3K0@@@@@@@[@@@[GC@@@U\ @@@@@[@@@DA@;&?$_YX
)@@G@@@@@@@@@@@@@#@@@@@[AH@@@A)@B@<#@K0@@@)] @S@)@F@F#@@@@@@[@)@[<______E     YY
)@@G@@COMPARG/)@@[[@)@[+C/)@>) @@@[-AI@@@A)@G[F#[#@K^G[#[][#@@@@@@@@@@] /,0@@@YZ
)@@G@@][@@DBH[FK@^C[@@[+^^K@@RN8M@@@O@)@DAR@)@[<AJ@@@A)@P[E^[#[#[#[@K0K0@@@@@@ZA
)@@G@@C@@@[>@[M@C%/K@@PC@@@@[>@@@@[=@@@@DB@@@@@R@@@@@@@@@@@@AK@@@A)@Y[E^G^G^G^ZB
)@@G@@G^G^@@@@@@@@*@@@@G/C@@@*H@@@[&G@@@[+C@@@[=[@)@[&C@)@[<[@@@@@G@@@@@AL@@@AZC
)@@G@@)@$[F@K0K0^G[#[#[#@@@@@@R@)@[&[@)@[&G@)@[&C/)@@[[@@@[$C@]@@@O@)@DAR@)@[&ZD
)@@G@@/K@@[-AM@@@A)@0[N#[#[#[@^@K0^@/K@@[U*@@@@GH@@@CSC@#@@@/K@@[F*@@@@G/G@@@6ZE
)@@G@@O@0@DAR@0@[&O@)@D AN@@@A)@'[U^G@[#@@+@@@@K @@@@K(@@@@MH[)@CUC[+@@@C.@@@[ZF
)@@G@@ @@@@G(@@@@KH[@@CTC[]@@@C/@@@[AO@@@A)[ [N@K0^G[@^G^@@@*@@@@G/C@@[KH@@@[$ZG
)@@G@@C/@@@ /K@@[U[[]@@@C[@@CW[@#@@@C@@@CV/=K@[UAP@@@A)[J[F@K0^[](#[@K^@@@@@@@ZH
)@@G@@/K@@[U/K@@[X/K@@[X@[=@C%'^@@@@8];@[O$'0@@ARA0@[$/K@@[-AQ@@@A)[S[F@K[#[#@ZI
)@@G@@K0K0K@@@@@@@/K@@@+[@@@[&G@@@[&C/@@@[[@@@[&G@@@[&C/@@@[/K@@@+/K@@[UAR@@@AZJ
)@@G@@)]C@S@)[-@3#[#@K[@@@@@@@^^K@[(N8N@@@^^K@[,N8L@@@O@0@D R@0@[+______E     ZK
)@@G@@COMPARAS@@@A)[$[F] #[@K0K0K0K0K^G@@@@@@@[+@@@@[,@@@@CY@@@@CX@@@@@@@@@@[=ZL
)@@G@@@@@@[(@@@@]C/,0@@@AT@@@A)[0[N#[#[#[#@@@@@@C.@@@[ @@@@I(@[@B[C/)@@[[@@@@@ZM
)@@G@@G@@@@@C@@@[>@[(@C%@@@@[>@@@@[*AU@@@A)['[U[@@@@@@)@)@@K @@@@K(@[@I]C.@@@[ZN
)@@G@@ @@@@I(@[@I#C/)@@[/=0@]I)@)@@K @@@@K(@[@B@AV@@@A)] [N@@@^[@@@@@@@@/,0@P;ZO
)@@G@@/=0@]R+@)@@K @@@@K*@[@>ZC.@@@[ @@@@I*@[@>YC/)@@[/=0@]IAW@@@A)]J@<#[]!#[#ZP
)@@G@@@@@@@@)]F@)@@@@@@@2 ERROONEWAY***** (113H @[2@C%@@[@]F/,0@@@@[1@C%AX@@@AZQ
)@@G@@)]J[S@@@@@@@IONS FIFICATT SPECONTRAS, OR C TTESTIMEFF,MANY SE TOO ERE ARZR
)@@G@@R.  THAY@@@A)]U[S@@@@@@@THE SPAM SO  PROGRTE THEHREWRI5X,092RDS./2ARE CAZS
)@@G@@F COMP SET OOR ONEAZ@@@A)]>[S@@@@@@@DS.)  RE CAR COMPAETS OFERAL SEN SEVZT
)@@G@@ BETWEIVIDED ARE DATIONSECIFICBA@@@A)]N[F]1@K^G[#@K0K0@@@@@@[@@@[H[@)@[&ZU
)@@G@@C/)@@][@@@[(C@[@@@@[5@C%/K@@PON@0@]Q'^@@@@BB@@@A)]W[F#[#[#[#[@K0K0K^G@@@ZV
)@@G@@@["@C%/,0@QT @@@[: @@@[%/K@@^!(@@@[([[@@[IH[@@[+C[@@[<BC@@@A)]>[EK0[#[#[ZW
)@@G@@#[#[#@@@@@@@R@0@DBA@)@DBO@)@DAR@)@[&[#@@[?[@@@[^C_@@@[G@@@[(C/@__"BD@@@AZX
)@@G@@)],[EK0^G^G^G^[#[#@@@@@@[[@@[,C[@@[</K@@^:(@@@[![@)@[&G@)@[&C/)@@[[@@@[!ZY
)@@G@@C@#@@@BE@@@A)]7[M^G^G@K0K^G@@@C/@@@[@]G@C%/,0@R?[#0@[0[@@@[ C_0@@[[[@@[\ZZ
)@@G@@[[@@[<G.@@@[G/@__"BF@@@A)#[[N#@K[#@K^[#[@@/K@@PC@@@@CY/,0@Q'/K@@#*(@@@@GAA
)@@G@@H@@@[$C/@@@#/K@@#H(@@@@GH@@@[$BG@@@A)#F[F#[@K3K[@K^G^@@@@@@@/K@@PC@@@@[ZAB
)@@G@@/,0@Q'/K@@#Q*@@@@G/C@@#LD@@@U1/K@@^J@]L@C%BH@@@A)#O[N#[@K3K0[@K0K@C/@@@[AC
)@@G@@/K@@^J*@@@[%/K@@#L1@@@@G*@@@@GH@@@[ZC@@@U1/K@@^J@]P@C%BI@@@A)#Y[##[@K0K:AD
)@@G@@K0K0K0K0@@@@@@@@@@@@K@@[@@K@@@@]X@C%@@[@]0/,0@@@@]W@C%/,0@P;[@@@[%BJ@@@AAE
)@@G@@)]0[S@@@@@@@6,036HTH ,2AIED WISPECIFUMBER CELL NR.  A 2 ERROONEWAY***** AF
)@@G@@(052H BK@@@A)];@8@@@@@@@)#&@N]1@@@@@/K@@^J'^@@@@)      CELLSBER OFHE NUMAG
)@@G@@THAN TEATER  IS GRBL@@@A)#*[N#[#[#[#@K0@@@C/@@@[ @@@@K0@@@@G*@@@@GH@@@[2AH
)@@G@@C.@@@[[@)@[2C@)@[)[@@@[1C@@@[ZBM@@@A)#2[N#[@@K^G^G[#@@[#)@[3[@)@[AC#)@[1AI
)@@G@@H@)@[1/>K@^J)[@@@G @@@@G*@@@@M/D)@#6D[)@[1BN@@@A)#/[MK3@^G4G@@@@@@1@@@@KAJ
)@@G@@*@@@@KH[@@[3C[@@U1C/)@@[ @@@@G1@@@@I*@@@@ID@)@U1C/@@@[BO@@@A)^A[M^[@K0K^AK
)@@G@@G[@@@@G_0@@[8L)@#;G_)@@[@]?@C%/K@@PC@@@@[3/,0@Q'/=K@#V+@@@@I @@@@IBP@@@AAL
)@@G@@)^K[F@K0K0K0K0^G^@@@@@@@C/)@@[/K@@^:*@@@[:]@]@@@H@@@[<C@@@[\O@)@DAR@)@[,AM
)@@G@@8LK@].BQ@@@A)^T[F#[#[@K0K0K^G^@@@@@@C/@@@[/K@@^:@]3@C%/K@@^-@@@@DC@@@@[\AN
)@@G@@/,0@S1]@)@DCH@)@[<BR@@@A)^+[F#[@K0K:K0K0K0K0K?@@'^@@@@@@K@@[@@K@@@@]7@C%AO
)@@G@@@@[@#]/,0@@@@]6@C%/,0@P;[@@@[:BS@@@A)^:@MK@@@@@@)#]@8@@@@@@@S SPECCELL IAP
)@@G@@R.  A 2 ERROONEWAY***** (065H 8L@@](G_@@@[BT@@@A)#D[C@@@@@@@)^!@E@C@[@B]AQ
)@@G@@RD)   ROL WOH CONTA6,013H A ,2CE WITHAN ONMORE TIFIED BU@@@A)^,[F#@K0K0KAR
)@@G@@0K^G^G^G@@@@ @@@[: @@@[% @@@[5/K@@F>(@@@[( @@@[4[@)@[&C/)@B^[@@@[(BV@@@AAS
)@@G@@)^7[F#[#[#@[#[#[#@@@@@@@O@0@D R@0@[&[#@@[?[@@@[^C_@@@[G/@__"[[@@[LH[@@[+AT
)@@G@@C[@@[<BW@@@A) @[F#[#@K0^G^G^@@@@@@@@*@@@@G/G@@ E[@)@[&G@)@[&C/)@@][@@@[!AU
)@@G@@C@]@@@R@)@DBA@0@DBBX@@@A) D[N@^G^G@K^[#[]?/,0@@@@#L@C%/,0@P;/K@@FR*@@@@GAV
)@@G@@G/@__.[@@@[4G@@@[4C/@@@[/K@@ RBY@@@A) N@N#[#@@@@)#M@8@@@@@@@S SPECESTS IAW
)@@G@@R.  TT2 ERROONEWAY***** (075H @#M@C%@@[@#MBZ@@@A)#T@8@@@@@@@) P@N]1@@@@@AX
)@@G@@/K@@FR'^@@@@RS)   ODIFIEHOUT MCE WITHAN ONMORE TIFIED CA@@@A) R[F#[#[#[#AY
)@@G@@[#[#@K0K0@@@[@@@[\[@@@[<G/@@@^[@@@[,C@@@[< @@@[9 @@@[8 @@@[7 @@@[6CB@@@AAZ
)@@G@@) )[F@K0^G^G[#@K@@@@@@@@/K@@AS*@@@@IH@)@[$C/)@@^]@@@[!H@@@[!C/@@@[@#X@C%BA
)@@G@@/,0@R?CC@@@A) ([F#[#@K[#[#[@K@@@@@@@/,0@R?/K@@A](@@@[![@)@[7C/)@@[/K@@ 7BB
)@@G@@*@@@@IH@)@CZC@)@[ZCD@@@A) 2[F#@K0K0K^[#[#[@@@@@@/K@@A]@@@@['@@@@[Z/,0@UNBC
)@@G@@/K@@AS]@@@[!H@@@[!C/@@@[@#&@C%CE@@@A) ;[F#@K0K0K0K0K^G^@@@@@/K@@AG*@@@[5BD
)@@G@@/K@@AS[@)@[ZC@)@['[@@@[$[@@@[7C/@@@[@#(@C%CF@@@A)A^[]K0K^G^E4G^G^F@@@@@@BE
)@@G@@@@@@@@'^@@@@@#2@C%@@[@#)/,0@@@@#1@C%/,0@P;[@@@[5C/@@@[CG@@@A)#)[S@@@@@@@BF
)@@G@@ARE OUTESTS S OF TDIFIERORE MOE OR MR.  ON2 ERROONEWAY***** (102H CH@@@ABG
)@@G@@)#:@8@@@@@@@)AG@N#[@@@@@/K@@FR(@@@[!IFIED)Y SPECROPERLRE IMPE OR AEQUENCBH
)@@G@@T OF SCI@@@A)AI[MK0[#[@K0^[@@@/K@@FR8LK@AMG_)@@[@#'@C%/,0@R?[#)@[3[@@@[ BI
)@@G@@C_)@@[G@@@[!C/@__"CJ@@@A)AS[MK0^@K0^@K0@@@H@@@[$C/@@@ /K@@BB(@@@@GH@@@[$BJ
)@@G@@C/@@@#/K@@A>(@@@@GH@@@[$C/@@@[CK@@@A)A+[MK^@K3@^G0@@@@C[@@U1C/)@@[ @@@@GBK
)@@G@@1@@@@I*@@@@ID@)@U1C/@@@[/K@@B9/K@@A]*@@@@GCL@@@A)A?[N#@@K^[#[@K0@@@^A@C%BL
)@@G@@/K@@PC@@@@[Z/,0@Q'/=K@A'+@@@@I @@@@I1@@@@K*@@@@KH[@@[ZCM@@@A)A6[EK0K0K^GBM
)@@G@@^@K0K@@@@@@@/,0@P;[@@@[%C/@@@[/K@@B1*@@@[%/K@@B1[@@@[6G@@@[6C/@@@[CN@@@ABN
)@@G@@)A_[F#[]!#[#[#[#[]1@K0@@C@@@[Z/K@@B1'^@@@@@@K@@F@@K@@E@^H@C%@@[@]0/,0@@@BO
)@@G@@@^G@C%CO@@@A)BC[N#[#[#@K0@^G@@D[)@[1C/@@@[ @@@@K0@@@@G*@@@@GH@@@[2C.@@@[BP
)@@G@@[@)@[2C@)@[)[@@@[1CP@@@A)BM[N@@K^G^G[#@@@@C/@@@[[#)@[3[@)@[ C#)@[1H@)@[1BQ
)@@G@@/>K@B1)[@@@G @@@@G*@@@@M/D)@BPCQ@@@A)BW[N#H#@@K3@@@@@@ @@@@I1@@@@K*@@@@KBR
)@@G@@D[@@U1C/)@@[ @@@@G1@@@@I*@@@@IH@)@[3C@)@U1CR@@@A)B&[MK[#[#[@K0K^G@G_)@@[BS
)@@G@@@^W@C%/K@@PC@@@@[3/,0@Q'[@@@[6G@@@[6C/@@@[/=K@A'+@@@@ICS@@@A)B0[F@K0K^[#BT
)@@G@@@K0K0K@@@@@@/K@@AS]@@@[!H@@@[!C/@@@[@^)@C%/,0@R?/K@@A](@@@[!8LK@BUCT@@@ABU
)@@G@@)B9[F#[@K^G[#[#@K0@@@@@@H@)@[$C/)@@^]@@@[!H@@@[!C/@@@[@^>@C%/,0@R?/K@@A]BV
)@@G@@(@@@[!CU@@@A)C][EK^G^G[@K^G^G@@@@@@@@@@@['@@@@[Z/,0@UN/K@@CN(@@@@IH@)@CZBW
)@@G@@C@)@[Z/K@@D&*@@@@ICV@@@A)CF[F@K0^G^G^G^G^@@@@@@@C/@@@[/K@@D&[@)@[ZC@)@['BX
)@@G@@[@@@[$[@@@[9C/@@@[@^:@C%/K@@C=CW@@@A)CO[F#[#[@K^G[#[#@@@@@@@C/)@@^]@@@[!BY
)@@G@@H@@@[!C/@@@[@^3@C%/,0@R?/K@@A](@@@[![@@@[9CX@@@A)CX[F#@K^G^G[@K0K0@@@@@@BZ
)@@G@@H@@@C-C@@@[Z/K@@A]*@@@@IH@)@C)C@)@[Z/K@@D&*@@@@IH@)@[$CY@@@A)C&[EK^G^G[@CA
)@@G@@^G^G@@@@@@@@C@)@C)[@@@[9C/@@@[/K@@A]*@@@@GH@@@CWC@@@[)/K@@C0*@@@@GCZ@@@ACB
)@@G@@)C\[F#[#[#@K^G^[#H@@@@@@/K@@FR(@@@U1/K@@A]*@@@[!/K@@A]*@@@@GH@@@C)C@@@[ZCC
)@@G@@[@)@[ZDA@@@A)C8[EK0K0^G0K0K0@@@@@@@@C@@@[;[#0@[3[@)@[ C_0@@[G@)@U1C/)__"CD
)@@G@@]@@@[;H@@@[<C/@@@[DB@@@A)D[[F#[@^[#[#[#[#[#@@@@@C#)@[\G@)@[\C@)@DAH@@@[\CE
)@@G@@C@@@[;/K@@DO*@@@@G/C@@D H@@@[\DC@@@A)DE[M^G[#@K@K@@@@@8L)@DGG_)@@[O/0@@[CF
)@@G@@/K@@DV(@@@@GH@@@[3C@#@@@[#)@[0[@@@[AR@0@@IDD@@@A)DO[EK0K0K^G^[#@K@@@@@@@CG
)@@G@@8LK@C_G_0@@[@ N@C%/K@@PC@@@@[3/,0@Q'[@@@[8G@@@[8C/@@@[DE@@@A)DX@;#[@K^G^CH
)@@G@@E4G^G@)#2@K@***** (094H @ T@C%@@[@#2/,0@@@@ S@C%/,0@P;/K@@FR*@@@[8DF@@@ACI
)@@G@@)#4[S@@@@@@@SPECIFS ARE L CELLBUT ALTESTS WITH T USED HER ISR.  OT2 ERROCJ
)@@G@@ONEWAYDG@@@A)#_@)@@@@@@@)D=@:]1@^G@@(@@@@GH@@@[$C/@@@#/K@@FR'^@@@@IST)  CK
)@@G@@IRST L THE FIED INDH@@@A)D([N@^G[@^G4G@@@@1@@@@I*@@@@IH@)@[ZC@)@U1C/@@@[CL
)@@G@@/K@@A]*@@@@GH@@@[$C/@@@[/K@@EKDI@@@A)D3[M^G0[@K^G@@@@@@@@@[Z/,0@Q'/=K@E#CM
)@@G@@+@@@@I @@@@I1@@@@K*@@@@KD[@@U1C/)@@[ @@@@GDJ@@@A)D.[F@K0^G^G^[#[@@@@@@@@CN
)@@G@@C/@@@[/K@@E'*@@@[%/K@@E'[@@@[8G@@@[8C/@@@[@ <@C%/K@@PCDK@@@A)EA[F#[@K0K:CO
)@@G@@K0K0K0K0K?@@'^@@@@@@K@@F@@K@@E@ %@C%@@[@]0/,0@@@@ (@C%/,0@P;[@@@[%DL@@@ACP
)@@G@@)EJ[N@K0K0K0K0^@@@C/@@@[ @@@@K*@@@@G/G@@ESC.@@@[[@)@[2C@)@[)[@@@[1C@@@[ZCQ
)@@G@@/K@@E'DM@@@A)ET[N#@@K^G^G^G@@@[@@@[ C#)@[1H@@@[1C@@@[2/>K@E')[@@@G @@@@GCR
)@@G@@1@@@@I*@@@@IH@)@[1DN@@@A)E<[N#@K3K0@^G0@@@*@@@@KD[@@U1C/)@@[ @@@@G1@@@@ICS
)@@G@@*@@@@IH@)@[3C@)@U1C/@@@[[#)@[3DO@@@A)E![M[@^G^G^[#[@@@/K@@PC@@@@[3/,0@Q'CT
)@@G@@[@@@[8G@@@[8C/@@@[/=K@E#+@@@@I @@@@I1@@@@KDP@@@A)E7[F#@K^G^[@K0^G@@@@@@@CU
)@@G@@H@@@[!C/@@@[@ .@C%/,0@R?/K@@F](@@@[!8LK@E<G_)@@[@ 9@C%DQ@@@A)F@[F#[@K0K[CV
)@@G@@#[#[@K0@@@@@@@@@[\/,0@S1]@@@DDH@@@[<C/@@@[/K@@FR*@@@[:/K@@D&]@@@[!DR@@@ACW
)@@G@@)FD[F#[@K0K[#[@K0K:@@@@@/,0@@@@A @C%/,0@P;[@@@[:C/@@@[/K@@FR@A]@C%/K@@FHCX
)@@G@@@@@@DDDS@@@A)FM[F#[#[#[#[]1#[#[#@@@@[@]@@@C@@@[6O@)@DAR@)@[,'^@@@@@@K@@FCY
)@@G@@@@K@@E@AA@C%@@[@#]DT@@@A)FV[N#[#[#@K0^G@K@8L@@^.G_@@@[[[<@@]C[)@[9[[#@@[CZ
)@@G@@C[@@[8[@<@@@C@)@[7O@0@D R@0@[,DU@@@A)F>[F#[#[#[#[#[#[#@@@@@@1@@@@G*@@@@GDA
)@@G@@D@@@[([@)@[KC@)@[4]@@@[J]@@@[(H@@@[(C@@@[4DV@@@A)F,[F@K^G[#@K0K0K0@@@@@@DB
)@@G@@(@@@[([@@@[M[@)@[&C/)@WE[@@@[(C@[@WC@AO@C%/,0@QT/K@@F1DW@@@A)F7[F@K0K0K0DC
)@@G@@K0K0K^G@@@@@C/@__"@AX@C%/,0@QT @@@[/ @@@[5[[@@[NH[@@[+C[@@[</K@@HTDX@@@ADD
)@@G@@)G@[F#@^G^G^G^G^G@@@@@@@C@#@@@R@0@DBA@)@DBO@)@DAR@)@[&[#0@[?[@@@[^C_0@@[DE
)@@G@@G@@@[(DY@@@A)GD[F#@K0K0K0K0^G^G@@@@@*@@@[5[[@@[<G.@@@[[[@@[,C[@@[<[@)@[&DF
)@@G@@G@)@[&C/)@@[[@@@[!DZ@@@A)GM[F@K3K^G1@^G^@@@@@@@@/,0@P;[@@@[5C/@@@[/K@@G)DG
)@@G@@(@@@@GH@@@U1/K@@G)(@@@U1/K@@G)EA@@@A)GV@:#[]!#[#[]0@@@)^#@S@@@@@@@ONEWAYDH
)@@G@@***** (104H '^@@@@@A!@C%@@[@^#/,0@@@@A?@C%EB@@@A)^A[S@@@@@@@S NOT TS DOEDI
)@@G@@ONTRASWITH CIFIED S SPECWEIGHTER OF E NUMBR.  TH2 ERROEC@@@A)^L@*@@@@@@@DJ
)@@G@@)G)@<#[@K0@@C/@__" @@@[./K@@HL(@@@[!S)    F CELLMBER OTHE NUMATCH ED@@@ADK
)@@G@@)G=[F#@^G^[#[#[#@@@@@@@@C/@@@[[@@@CRC@@@[Z@A6@C%/,0@R?[#)@[0[@@@[ C_)@@[DL
)@@G@@G@@@[!EE@@@A)G![F#@K[#[#[#[@@@@@@@@@C/@@@[/K@@G8(@@@CR[@K@CR"O@@[ZC/@@]VDM
)@@G@@/K@@G3*@@@@GH@@@[$EF@@@A)G6[F#[#[@K0K^G[@@@@@@@@C/@@@[8LK@G$G_)@@[@A/@C%DN
)@@G@@/K@@PC@@@@CR/,0@Q'[@@@[.G@@@[.EG@@@A)G_[N#@^G[@@K@@@@@/=K@HL)@@@@I @@@@IDO
)@@G@@*@@@@K/D@@HBG.@__.C[@@[.C/)@@[ @@@@G(@@@[/EH@@@A)HD[]K0K^G^E4G^G^F@@@@@@DP
)@@G@@@@@@@@'^@@@@@B#@C%@@[@^Q/,0@@@@B]@C%/,0@P;[@@@[/C/@@@[EI@@@A)^Q[S@@@@@@@DQ
)@@G@@T TWO T LEASHAVE AS NOT ST DOECONTRAR.  A 2 ERROONEWAY***** (077H EJ@@@ADR
)@@G@@)^-@S@)HL@3#[#[#[#@@@@@@]@]@@@G/@@@[H@@@[<C@@@[,O@)@DAR@)@[,GHTS) RO WEIDS
)@@G@@NON-ZEEK@@@A)HR[MK[#[#[#[@K^G@C@[@I @BH@C%/,0@QT/K@@JR(@@@[([@@@[O[@@@[(DT
)@@G@@C@[@I^8L@@G#G_0@@[EL@@@A)H-[F#@K0K[@K0K^@@@@@@@@/,0@R?/K@@JR @@@[P/K@@H(DU
)@@G@@*@@@@G/G@@H$[@)@[&C/)@IB[@@@[!EM@@@A)H%[F#@K0K0^G[@K@@@@@@@@/,0@P;/K@@H9DV
)@@G@@(@@@@IH@)@[$C/)@@[]@@@[!H@@@[!C/@@@[@BO@C%EN@@@A)H3@<#[]!#[#@@@@@@)^=@)@DW
)@@G@@@@@@@@2 ERROONEWAY***** (106H @BT@C%@@[@^=/,0@@@@BS@C%EO@@@A)^*[S@@@@@@@DX
)@@G@@ERO ANWEEN ZER BET INTEG BE ANS MUSTF POLYFIER OT MODIE FIRSR.  THEP@@@ADY
)@@G@@)^3@)@@@@@@@)H7@:]1@K0@@1@@@@G*@@@@GD@@@[Z/K@@IH'^@@@@LLS)   OF CENUMBERDZ
)@@G@@D THE EQ@@@A)H/[N@^G0[#[#H@@@@/D@@ICH[@@U1C[@@[ZC/)@@[ @@@@G1@@@@I*@@@@IEA
)@@G@@D@)@U1C/@@@[/K@@H2ER@@@A)IA[M[@K0K0K0K0K^@/,0@R?/K@@JR(@@@[! @@@[Q[@@@[PEB
)@@G@@C@@@[Z/=K@H2+@@@@I @@@@I*@@@@KES@@@A)IK[F#@K0K0^G[@K@@@@@@@@/,0@P;/K@@IZEC
)@@G@@(@@@@IH@)@[$C/)@@ ]@@@[!H@@@[!C/@@@[@B>@C%ET@@@A)IT@<#[]!#[#@@@@@@)^7@)@ED
)@@G@@@@@@@@2 ERROONEWAY***** (077H @B%@C%@@[@^7/,0@@@@B(@C%EU@@@A)^;[K@@@@@@@EE
)@@G@@@@@@@@OR ))  BY / LLOWED BE FOS MUSTF POLYFIER OT MODIE FIRSR.  THEV@@@AEF
)@@G@@)IX[F]1@K0K[@K^G^E0@@@@@/,0@@@@B0@C%/,0@P;/K@@I%*@@@@G/C@@I<D@@@[!/K@@JREG
)@@G@@'^@@@@EW@@@A)I&@N#[#@@@@)  @8@@@@@@@ER OF E NUMBR.  TH2 ERROONEWAY***** EH
)@@G@@(107H @B1@C%@@[@  EX@@@A) G[S@@@@@@@R OF C NUMBECH THEOT MATDOES NPOLYS EI
)@@G@@ WITH CIFIEDGS SPESPACINGROUP EY@@@A) R@C@)I*[#]1@K3K^G^G1@@/K@@I<*@@@@GEJ
)@@G@@H@@@U1C@@@[!/K@@I0(@@@U1/K@@JR'^@@@@ELLS) EZ@@@A)I0[F#[#[#[#[#[#[@@@@@@@EK
)@@G@@C_)@@[G/@__"/K@@JR(@@@[![@)@[RH@)@[+C@)@[<[@@@[QC@@@[!FA@@@A)I9[MK0K^G[#EL
)@@G@@@K^[#@@C#@C%/,0@P;/K@@JC*@@@@GH@@@[$C/@@@ @C@@C%/,0@R?[#)@[0[@@@[^FB@@@AEM
)@@G@@)J#@V]!#[#@@) S@0@@@@@@@/ IS UR.  A 2 ERROONEWAY***** (057H @C^@C%@@[@ SEN
)@@G@@/,0@@@FC@@@A) Y@*@@@@@@@)JA@V]1@K0@@@@@@@@C@@@[Z/K@@JR'^@@@@YS)   TH POLEO
)@@G@@TLY WICORRECSED INFD@@@A)JD[F#@K0^@K0K0K@@@@@@@@/,0@Q'[@K@CR"O@@[ZC/@@]VEP
)@@G@@/K@@JL*@@@@GH@@@[$C/@@@[[@@@CRFE@@@A)JM[F#[@K0^@K0K0K0@@@@@@(@@@[![@@@[TEQ
)@@G@@[@@@[!C@[@M08L@@I'G_)@@[@CF@C%/K@@PC@@@@CRFF@@@A)JV[V@@@^@K@/K@@J?*@[@I^ER
)@@G@@/=0@J?)@)@@K @@@@K(@[@B]C.@@@[ @@@@I(@[@WCC/)@@[/K@@K?FG@@@A)J&@3@K0K:K0ES
)@@G@@K0K?@@) <@S@ONEWAY***** (082H '^@@@@@CR@C%@@[@ </,0@@@@CQ@C%/,0@P;FH@@@AET
)@@G@@) &[S@@@@@@@S IS UR POLYAST, O CONTRTESTS,LESS TSED UNT BE U CANNOR.  CIEU
)@@G@@2 ERROFI@@@A) 1@C@)J?[]K0K^G[#[@@@@@*@@@@G/C@@J5H@@@[$C/@@@]@CV@C%/,0@R?EV
)@@G@@[@@@[&C/@@M2SED)  FJ@@@A)J4[F@K0K0^G[@^G@@@@@@@@"O@@[ZC/@@]V/K@@J"*@@@@GEW
)@@G@@H@@@[$C/@@@[[@@@CRC@@@[Z/K@@KIFK@@@A)J.[N#@K0K0K@^G^@@/D@@KDD[@@CRC/)@@[EX
)@@G@@ @@@@G*@@@@I/C)@K^"^)@C+C@)@CRC/@@@[[@K@CRFL@@@A)KB[M[@K0K0K^[#[]?/,0@@@EY
)@@G@@@C>@C%/,0@P;/K@@KO[@@@[UC@@@CR/=K@KI)@@@@I @@@@I*@@@@KFM@@@A)KL@V#[#[]0@EZ
)@@G@@) 2@0@@@@@@@ PERCER.  CI2 ERROONEWAY***** (085H '^@@@@@C&@C%@@[@ 2FN@@@AFA
)@@G@@) 8[K@@@@@@@@@@@@@)     ND 100EN 0 A BETWEIS NOTED OR PECIFIERLY SIMPROPFB
)@@G@@NT IS FO@@@A)KO[MK0^[@K0^G[@@@/K@@K&*@@@@GH@@@[$C/@@@^@C:@C%/,0@R?/K@@K?FC
)@@G@@(@@@@GH@@@[!C/@@@[FP@@@A)KY[F#[#@K^G^G[@K@@@@@@@/,0@P;/K@@K?(@@@@GH@@@C=FD
)@@G@@C@@@[)/K@@K&*@@@@GH@@@C<C@@@[ZFQ@@@A)K$@:#[]!#[#[]0@@@)A]@S@@@@@@@ONEWAYFE
)@@G@@***** (070H '^@@@@@C3@C%@@[@A]/,0@@@@C2@C%FR@@@A)A [K@@@@@@@@@@@@@FFE)  FF
)@@G@@E SCHEMUST BUSED, I, IF R OF CODIFIECOND MR.  SE2 ERROFS@@@A)K?[MK0K0K[#FG
)@@G@@@@@@@@ @@@@K(@[@M;C.@@@[ @@@@I(@@@[OC/)@@[/K@@K"(@@@[S[@@@[SC@[@M9FT@@@AFH
)@@G@@)K6[]K^[#[]!#[#[]0)AJ@C@(085H '^@@@@@C/@C%@@[@AJ/,0@@@@C;@C%/,0@P;/=0@K"FI
)@@G@@)@)@@KFU@@@A)AK[S@@@@@@@OR ORTPOLYS NLESS USED UOT BE R CANNOLERROR.  POFJ
)@@G@@2 ERROONEWAY***** FV@@@A)AV@)@@@@@@@)K"@%K0^G^G@[@@@[V[@)@[&C/)@M.[@@@[(FK
)@@G@@C@[@M;)     O USEDIS ALSHOCON FW@@@A)L#[F#[#[#[#[@K0K0K0K0@@C[)@[M @@@[5FL
)@@G@@ @@@[: @@@[%/K@@M0(@@@[([[@@[WH[@@[+C[@@[<FX@@@A)LG[F#@[#[#[#[#[#@@@@@@@FM
)@@G@@R@)@DBA@0@DBO@0@DAR@0@[&[#0@[?[@@@[^C_0@@[G/@__"[[)@["FY@@@A)LP[EK0^G^G^FN
)@@G@@G^G[#@@@@@@@[[@@[<G.@@@[[[@@[,C[@@[<[@)@[&G@)@[&C/)@@[[@@@[!C@]@@@FZ@@@AFO
)@@G@@)LY[F#[#[@K3K^G4@K@@@@@@/K@@L1*@@@@G/C@@L$H@@@U1/K@@L1(@@@U1/K@@MP(@@@[!FP
)@@G@@[[@@[\GA@@@A)L$[F#[@^G^[#[]!#[#@@@@@@DV@C%@@[@AZ/,0@@@@DU@C%/,0@P;[@@@[5FQ
)@@G@@C/@@@[/K@@L1*@@@[5GB@@@A)L0@F]0@@@@@)AZ[@@@@@@@@CONTRAER OF E NUMBR.  THFR
)@@G@@2 ERROONEWAY***** (108H '^@@@@GC@@@A)A$[S@@@@@@@CELLS)ER OF E NUMBHAN THFS
)@@G@@LESS TST BE CON MU ORTHOD WITHECIFIESTS SPGD@@@A)L1[EK0[#[#[#[#[#@@@@@@@FT
)@@G@@R@)@DEA@0@DEO@0@DAR@0@[&[#)@[0[@@@[ C_)@@[G@@@[!C/@__"GE@@@A)L'[MK0^G^G^FU
)@@G@@G^[#@@0@@@@G*@@@@GH@@@["/K@@MJ(@@@["[@)@[&G@)@[&C/)@@[[@@@['C@]@@@GF@@@AFV
)@@G@@)M^[F@K0K[#[@K0K:K0@@@@@@@[@A2/,0@@@@D%@C%/,0@P;[@@@[%C/@@@[/K@@MJ*@@@[%FW
)@@G@@/K@@MJGG@@@A)MH@N#[]0@@@)A2@8@@@@@@@ SPECINUMBERR.  A 2 ERROONEWAY***** FX
)@@G@@(087H '^@@@@@D:@C%GH@@@A)A9[C@@@@@@@@@@[C@@@@@@@TS)   ONTRASR OF C NUMBEFY
)@@G@@DS THE EXCEETHOCONITH ORFIED WGI@@@A)MJ[F@K0K^G[@K0K0K0@@@@@C@@@[,O@0@DAFZ
)@@G@@R@0@[,8LK@L5G_)@@[@D,@C%/K@@PC@@@@['/,0@Q'GJ@@@A)MS[F#@^G^@K0K0K@@@@@@@@GA
)@@G@@/,0@S1]@)@DEH@)@[<C/)@@[/K@@M,*@@@[:]@#@@@G/@@@[H@@@[<GK@@@A)M-[F#[#[@K0GB
)@@G@@K[#[@K0@@@@@@D7@C%/,0@P;[@@@[:C/@@@[/K@@M,@D4@C%/K@@M&@@@@DE@@@@[\GL@@@AGC
)@@G@@)M%@3]!#[#[]0K@@@@)B]@S@ONEWAY***** (093H 8L@@LKG_0@@['^@@@@@D8@C%@@[@B]GD
)@@G@@/,0@@@GM@@@A)B [S@@@@@@@RTHOCOH AN OCE WITORE ONFIED M SPECIAST IS CONTRGE
)@@G@@E SAMER.  TH2 ERROGN@@@A)BK@S@)M0@2K0K0K0K^@@@@@/,0@QT/K@@N?(@@@[![@@@[XGF
)@@G@@[@@@[!C@[@RWRD)   ROL WON CONTGO@@@A)M6[F#[#[#[#[#H@K0K3K@@@/C)@N[H@)@U1GG
)@@G@@C@)@[!/K@@NB(@@@U1[@@@[YH@@@[+C@@@[<@E[@C%GP@@@A)M_[]K^[#[]!#[#[]0)BN@C@GH
)@@G@@(092H '^@@@@@EC@C%@@[@BN/,0@@@@EB@C%/,0@P;/K@@NB*@@@@IGQ@@@A)BO[S@@@@@@@GI
)@@G@@T LESS IS NO RANGEERS OFMODIFIER OF E NUMBR.  TH2 ERROONEWAY***** GR@@@AGJ
)@@G@@)BZ@*@@@@@@@)NB@+K0K0K@@/K@@N?(@@@[![@@@[&C/@@RYS)    F CELLMBER OTHE NUGK
)@@G@@ THAN GS@@@A)NF[MK0[#[@K0K0K0@C/@@@[[@@@CRC@@@[Z@EL@C%/,0@R?[#)@[0[@)@[^GL
)@@G@@C_)@@[G@)@[!C/)__"GT@@@A)NP[N#@K[#[#[#[@^@/K@@N&*@@@@G/C@@NZD@@@CR[@K@CRGM
)@@G@@"O@@[ZC/@@]V/K@@NV*@@@@GH@@@[$GU@@@A)NZ@:@K0K:K0K0@@@@)B=@S@@@@@@@ONEWAYGN
)@@G@@***** (062H @ES@C%@@[@B=/,0@@@@ER@C%/,0@P;GV@@@A)B$[C@@@@@@@@@@[C@@@@@@@GO
)@@G@@O)    OR ZERATIVE IS NEGRANGE ER OF MODIFIR.  A 2 ERROGW@@@A)N=[F]1@K^G^GP
)@@G@@[#@K@@@@@@@@(@@@@@8L@@NJG_)@@[@EW@C%/K@@PC@@@@CR/,0@Q'/K@@N?'^@@@@GX@@@AGQ
)@@G@@)N!@V@K^@@@@)B0@K@)N0@V#[]D#@@@@@@C>/,0@@@@E)@C%______WRITE /K@@PON@0@N0GR
)@@G@@/K@@N1GY@@@A)N3[F#[#[#[#[#[#[#[@K3@@C@@@U1/K@@N.(@@@[O @@@[_@E-@C%@@@@[*GS
)@@G@@@@@@[G@@@@C&@@@@B0GZ@@@A)N/[F#[#[#@^[#[#[#@@@@@@C@@@[_[@@@[_C@@@[M/K@@O^GT
)@@G@@1@@@@G*@@@@GH@@@[MC@@@[_[@@@[_HA@@@A)O [F#H#[#H#@^[#[#G@@@@@[@@@V)C@@@[_GU
)@@G@@/K@@OI1@@@@G*@@@@GH@@@[_C@@@V)[@@@[_T@@@U1HB@@@A)OI[EK0K0K0K3K0[@@@@@@@@GV
)@@G@@/K@@OT1@@@@G*@@@@GH@@@]@C@@@V-]@@@]@H@@@[<G@@@[+C/@@@[HC@@@A)OR@F#@@@@@@GW
)@@G@@)B2@K@)OS@<#H]D#[#@@@@@@@@@@B2@@@@C>/,0@@@[@@@V-______WRITE C@@@]@HD@@@AGX
)@@G@@)OW@:#[#[#[#[#@@@@)B4@K@@@@@@@@@@@@@______WRITE (@@@]@@E!@C%@@@@[*@@@@]@GY
)@@G@@@@@@C$HE@@@A)O-[F@K0K0^[]D#[#[#@@@@@@@@@]@@@@@B4@@@@C>/,0@@@^^K@O%N8M@@@GZ
)@@G@@O@)@D R@)@[+/K@@O!HF@@@A)O%@V@K0K0@@)B6@K@)O!@V]H#[#@@@@@@][@@@@B6/,0@@@HA
)@@G@@______NWCOMP@E0@C%@@@@[*@@@@O%HG@@@A)O0[F#[#[@K0K0YL9K@@@@@@N@0@O'[@#J_"HB
)@@G@@G/@@@[C@#J_"R@0@][@E1@C%/K@@O;@@@@[*@@@@[*HH@@@A)O9@N@K0@@@@)B8@K@)O;@V]HC
)@@G@@L#[#@@@@@@@@@@@@][@@@@B8/,0@@@______NWCOMP@E3@C%/K@@POHI@@@A)O"[F#[#[@K0HD
)@@G@@K0B>@K@@@@@@/K@@PON@0@PB[@]J_"C/@@@[R@)@][@E4@C%/K@@PC@@@@C$@@@@C$HJ@@@AHE
)@@G@@)PB@<#[]!#[#@@@@@@)B'@)@@@@@@@ ERRORSYSTEM***** (029H @E7@C%@@[@B'/,0@@@HF
)@@G@@@E6@C%HK@@@A)B"@K@)PF@;]0K^[#[#[]4@@/K@@@@!^)@C*@E'@C%/K@@PKN@0@PJC8)@@BHG
)@@G@@'^@@@@2CMP)  IN S8HL@@@A)PM[EK0K0K0K0K0K0K0K0@@@R@0@DNR@)@DMR@K@DL9\)@DJHH
)@@G@@9\@@DH9!)@DFR]0@C:[^)@C*H8)@@[HM@@@A)PV@<#[#[#[#@@@@@@)C*@C@)PZ@N#[]8@@@HI
)@@G@@/K@@@@/K@KC*@@F@@@*4@KC*N[)@DQN[K@DPN[@@DOHN@@@A)C%@K@)P-@'K0K0K0K0K0K0@HJ
)@@G@@A@K@DL9:)@DJ9:@@DH9()@DF[^@@C*AA0@C:C8@@@C@E'@@]S82CMPHO@@@A)P*[F#[#[#[#HK
)@@G@@[#[@@@@@@@@@[@@@@@G@@@@@C/@@@[/K@@UZ^[)@DQ^[K@DP^[@@DOA@0@DNA@)@DMHP@@@AHL
)@@G@@)P1[#]P#[#[@K^G^G^G@@@@@@@@@@@*4@KC?R]0@C\@F@@C,/K@@P7N@0@P6@E_@C,@@@@C$HM
)@@G@@/,0@@@HQ@@@A)C?@C@)P9@N#[]8@@@)C,@K@)P;@N#[@@@@@/K@@P,AA0@C\@F@@@]ERROR HN
)@@G@@/K@@@@/K@KC?@@F@@[HR@@@A)P.[EK3K[@K^[#[#@@@@@@@@(@@@[-@F @C2/K@@QPN@0@Q^HO
)@@G@@/K@@Q *@@@@G/C@@Q]H@@@U0C/@@@[HS@@@A)QA[F@K^[#@K0K^G^E0@@@@@/,0@@@@FD@C2HP
)@@G@@/,0@P;[@@@[-C/@@@[@FB@C2/K@@QPN@0@QD/K@@QEHT@@@A)QJ@N#[#@@@@)C@@8@@@@@@@HQ
)@@G@@ THE MTED ON REPEAUPS ISIF GRO***** (116H @FE@C2@@[@C@HU@@@A)CB[S@@@@@@@HR
)@@G@@ON THE USED CAN BEND CI IERS A MODIFITHOUTESTS WNLY TTARD, OODEL CHV@@@AHS
)@@G@@)CM@S@)QL@3]1@K^G^G^G@@@*4@KC0R]0@C3@FH@C2/K@@QPN@0@QO'^@@@@D)    RE CARHT
)@@G@@ COMPAHW@@@A)C0@C@)QR@N#[]8@@@)C2@K@)QT@N#[@@@@@/K@@P.AA0@C3@FH@@]MULGRPHU
)@@G@@/K@@@@/K@KC0@@F@@[HX@@@A)QV[N#@K0K0K0K[@^@N@0@Q&C8)@@]/K@@Q$*@@@@G/C@@Q<HV
)@@G@@H@@@DVC@@@[<[@@@DUG/@__"C@@@D HY@@@A)Q>[F@K0K0K0K0[#[#@@@@@@[@)@[<G@)@[<HW
)@@G@@C/)@@[[@[@@@C@@@DWO@K@DUR@K@[<@FM@C6/K@@Q1HZ@@@A)Q,[F@K^G^G^FL#[#[#@@@@@HX
)@@G@@R@K@DXR]0@C7[^)@C4H8)@@[/K@@@@!^)@C4@FP@C6/K@@Q5N@0@Q0IA@@@A)Q7@F#@@@@@@HY
)@@G@@)C4@C@)Q8@N#[]8@@@)C6@K@@@@@@@@FP@@]STORE /K@@@@/K@KC4@@F@@@*4@KC4IB@@@AHZ
)@@G@@)Q'[EK0K0K0^G^[#@@@@@@@@G/@__"C@@@D /K@@QV[@K@DWC@VK@@A@K@DX[^@@C4AA0@C7IA
)@@G@@C8@@@#IC@@@A)R#[F#[#[#@K0^G^G^G@@@@@R@K@[&[@)@[&G@)@[&C/)@@[[@@@[$C@[@@@IB
)@@G@@O@K@DZR@K@[&[@@@DZID@@@A)RG[F#@K0K0K0^G^G@@@@@@@$'0@@ARA0@[$[[)@[)C[-@@@IC
)@@G@@O@K@D R@K@[&[[@@[ZC[[@@@O@K@DZIE@@@A)RP[F@K%K0K^[@K^@@@@@@@@C/@@@[/K@@R<ID
)@@G@@/K@@RX/K@@RX/K@@R)/K@@R)@FX@C''^@@@@8];@RRIF@@@A)RY[F#[#@K0K0K^[#[#@@@@@IE
)@@G@@R]0@C;@F)@C'/K@@R&N@0@R>[@@@[&G@@@[&C/@@@[[@@@[&G@@@[&IG@@@A)R$@V#[#[#@@IF
)@@G@@)C8@C@)R%@N#[]8@@@)C'@C@NEXTMD/K@@@@/K@KC8@@F@@[*4@KC8R@K@D+9!)@D)IH@@@AIG
)@@G@@)C;@C@)R?@;#[#[#[@K0K0K0@@@@@@C@)@D H@@@D>C@@@D=/K@@R[A@K@D+9()@D)AA0@C;IH
)@@G@@@F)@@]II@@@A)R3[EK0K0K0K0K0K0K0K0@@@[#0@[0N[@@D$R@K@D*C#0@D>[@)@D*[@@@D$II
)@@G@@G@)@D>[@)@D&G/)__"IJ@@@A)R/[EK0K0K0K0K[@K@@@@@@@N@0@SA/K@@SB*@@@@G/C@@S^IJ
)@@G@@H@@@D=C@@@]][@@@]]G@@@[0C/@@@[IK@@@A)S [F@K0^G^G^G^G^G^G@@@@(@@@['G[@@]]IK
)@@G@@C[@@D&G@)@D=D@)@]][@@@['C@[@@@@F(@C"/K@@S*IL@@@A)SI[N@K0[#@K0^@@@@C8)@@#IL
)@@G@@/K@@SV*@@@@GH@@@['C@]@@@[#)@[3[@)@[ R@)@@KC#)@]]/K@@SYIM@@@A)SS[N@K^G@K@IM
)@@G@@K^@@@@N@0@S<8L@@R;G_0@@[O/K@@[8LK@SMG_)@@[O/)@@[@F1@C"/K@@S=N@0@SUIN@@@AIN
)@@G@@)S+[F@K0K0K!^G^G^G^G@@@@R@K@D:9\)@D(R]0@C_[^)@C/H8)@@[/K@@@@!^)@C/@F6@C"IO
)@@G@@/K@@S*IO@@@A)S:@<#[#[#[#@@@@@@)C/@C@)S\@N#[]8@@@/K@@@@/K@KC/@@F@@@*4@KC/IP
)@@G@@N[K@D,N[@@D!R@)@D?IP@@@A)C"@K@)S1@'K0K0K0K0K0K0@^[@@D!A@)@D?A@K@D:9:)@D(IQ
)@@G@@[^@@C/AA0@C_C8@@@^@F6@@]TSTREPIQ@@@A)S8[F#@K0^G^[#@K@@@@@@@@^^K@T]N8L@@@IR
)@@G@@R@K@D0/K@@R0[@K@D=C@VK@[[@K@D>C@VK@@^[K@D,IR@@@A)T[[F]T@K0K0K0K0K0K0@@@@IS
)@@G@@(@@@@GH@@@CZC@@@]#A@K@D1@F;@D]@@@@]#@@@@C$@@@@T]/,0@@@IS@@@A)TE[N@^[@K0KIT
)@@G@@0^G[@@/K@@TS(@@@@GH@@@CWC@[@@[R@K@D1@F.@D]/K@@UCN@0@TIC8)@@#/K@@TJIT@@@AIU
)@@G@@)TO[MK^[#[#@^G[@@@^^K@TZN8L@@@[#)@]^N.@@@^C_)@@]R@K@D1@F_@D]/K@@UCN@0@TRIV
)@@G@@C8)@@#IU@@@A)TY[F]T@K0K0K0K0K0^@@@@@/K@@T5(@@@@GH@@@CWC@@@]#@G#@D]@@@@]#IW
)@@G@@@@@@]^@@@@TZ/,0@@@IV@@@A)T$[N]X#[#@^@K^[#@@GB@D]/K@@UCN@0@T0C8)@@#/K@@T1IX
)@@G@@(@@@@GG/@__.@GA@D]@@@@]#/,0@@@IW@@@A)T1@+K[#@@@@)CP@K@)T5@N#@@@@@@N8L@@@IY
)@@G@@R@K@D0______      [@@@]^C/@@@B8L@@TVG_)@@[IX@@@A)T7[F@K*K^G^G^G[#[#@@@@@IZ
)@@G@@]@@@D1H@@@]^C/@@@[@GF@D]@@@@CP@@@@C$@@@@T9/,0@@@^^K@T9IY@@@A)U@[F]=K0^G^JA
)@@G@@[@K0K0@@@@@@!^)@D@@GH@D]/K@@UGN@0@UB@GG@D]@@@@@@@@@@D1@@@@@@/,0@@@IZ@@@AJB
)@@G@@)UD[#]4K0K0K0K0K0K0@@@@@@@@@@@*4@KD@N[@@D5R@K@D49\)@D2R]0@D#[^)@D@H8)@@[JC
)@@G@@/K@@@@JA@@@A)D@@C@)UL@N#[]8@@@)D]@K@)UN@MK0@@@@@AA0@D#C8@@@^@GH@@]TESTANJD
)@@G@@/K@@@@/K@KD@@@F@@@JB@@@A)UP[F#[#[#[#@K0K[@@@@@@@[^@@U#C8FK@[[^@@U[[@@@D0JE
)@@G@@C8FK@@^[@@D5A@K@D49:)@D2[^@@D@JC@@@A)UY[N@^@K[#@K0@@@@C8FK@ [@K@DVC@VK@^JF
)@@G@@[@@@D C8FK@#[^@@@QC8FK@][^@@@PC8FK@[/K@@S"JD@@@A)U*[F@K^[@K^[@K^@@@@@@@@JG
)@@G@@/K@@@@[^@@[5[^@@@^[^@@P\[^@@P0[^@@@Y[^@@@Z[^@@[4[^@@N?JE@@@A)CS[S@@@@@@@JH
)@@G@@K"K@@@AOTHEROTHER A     @@@@@@@@@@@C      SIMEFFFFECTSFFECT SIMPLEJF@@@AJI
)@@G@@)C<@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@N@@@@@AE     JJ
)@@G@@SCHEFFJG@@@A@@@@@@@@@@@@)C4@C@)Q8@N#[]8@@@)C6@K@@@@@@@@FP@@]STORE /K@@@@JK
)@@G@@/K@KC4@@F@@@*4@KC4IB@@@A@@^@@^@@C@@J@@&@@[@@%@@]@@^@D6@C@@U1@@@@@]@@@@4+JL
)@@G@@S1ENDC      S1ENST      S1IODR      S1GTAG      S1STFT      S1PCHD      JM
)@@G@@S1PRFT      S1SPCT      S1PRST      S1VLU       NERR2$      NPRT$       JN
)@@G@@NIO2$       NERR4$      NERR3$      S82CMP      @@[@@@@@@@P-BLANK$      JO
)@@G@@^@@@C@@]@@@@S82BLK      ]@@@C@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JP
)@@G@@)@@[M@[@K)--#@@@@@@[C@@S@@@@@N/,0@@@/K@@@L1@@@@G*@@@@GH@@@@@C/@@@  @@@@@JQ
)@@G@@R8VK@#AA@@@A)@E@V]UA^G@@)@^@0@@@@@@@EADINGOR.  HY2 ERR ONEWA***** (072H JR
)@@G@@@[D@@S@@[@@^/,0@@@AB@@@A)@E@8@@@@@@@)@H@N])@@@@@C/@@@['^@@@@CARDS)FEWER JS
)@@G@@VE OR  ON FITAINEDBE CON MUST AC@@@A)@J[M[@K^[#@CS@@@@[@@@@VG@@@@@C/@__"JT
)@@G@@@[I@@S/K@@[SN@0@@P/K@@@Q(@@@@@[@@@@@G@@@@@AD@@@A)@T[N[K0C]@)CS[[@@H@)@@@JU
)@@G@@C/)@@^C/@@@[@[K@@S/K@@[SN@0@@Z/K@@@)(@@@@GH@@@@WC@@@@[AE@@@A)@<[U[[@[@K@JV
)@@G@@N@0@@\/)K@@0)@@@@I @@@@I1@@@@K*@@@@KG.@__.C[@@@@C/)@@[ @@@@G*@@@@IAF@@@AJW
)@@G@@)@,[N@K0))]A[#@@@@[[)@@[C.)@@[[[@@@@C.@@@H[@-@@[C@)@@@[@[@@@C@@@U\@[M@@SJX
)@@G@@/K@@[SAG@@@A)@8[F#]^L#@--#]A@@@@@@@@C/@@[@@[U@@S@@@@@O@@@@@@@@@@@@@@@@@[JY
)@@G@@@@@@@@/,0@@@N[@@@VAH@@@A)[[@:#]A[#]A@@@@@@)@L@K@@@@@@@@@@@@@______WRITE JZ
)@@G@@[@)@@@G@)@@@C/)@[][@@@@[G@@@@[AI@@@A)[A[N@@K0-D#]A^G@@@@@@@@@@@@@V@@@@@LKA
)@@G@@@@@@@P/,0@@@[[@@@VG.@@@]T.@@@FC[@@@@8L@@@9AJ@@@A)[K[F#]A[[KO[@K0-)@@@@@@KB
)@@G@@R]0@@T@[)@@S/K@@[SN@0@[R[@@@U%G@@@U%C/@@@[@[Y@@S@@@@@#AK@@@A)[T@<#]A^GCSKC
)@@G@@@@@@@@)@Q@C@)[X@N#] K@@@/K@@@@/K@K@Q@@F@@B*4@K@QN[@@@)R@K@@Z9!)@@XAL@@@AKD
)@@G@@)@S@K@)[Z@;#]A^GCS^G@@@@C8FK@[[@K@@WC@VK@@^[@@@)A@K@@Z9()@@XAA0@@T@[)@@#KE
)@@G@@S82HEDAM@@@A)[&[N@^[@K^@K^@@@@C8FK@ [^@@[J[^@@@/C8FK@#[^@@@#[^@@@2[^@@@RKF
)@@G@@[^@@[BC8FK@][^@@@'AN@@@A)[0@:@K^[@K@)@N@S@@@@@@@@@@@@@@@@@@^@@@@[@@@@@@[KG
)@@G@@/K@@@@[^@@@[[^@@@L[^@@@J[^@@@KAO@@@A@@@@@@O]@@@DP]@@@D#[@@@@@8@@@@/K@@@DKH
)@@G@@8]T@@]NERR2$'^@C@M/K@@@#/K@@@ENCDOF$NSLT$ (@@C@R@@^@@#@@B@@A@@N@@[@@R@@[KI
)@@G@@@@#@@-@C@@[5@@@@4+S1PCHD      S1TCHS      S1IODR      NPRT$       NIO2$ KJ
)@@G@@      NERR3$      S82HED      @@[@@@@@@@[ZS82BLK      ]@@@C@@]@@@@@@@@@@KK
)@@G@@)@@[N#@K0^G[#@K0@@G"@__"C]@@#AG.)@@[C[)@#AG.@@@AC[@@#AG/)@@+C@)@#AG/@@@OKL
)@@G@@C@@@#AAA@@@A)@E@:#[#[#[#[#@@@@)@E@C@)@J@F#@@@@@@[]@@#F@@@@@E[[)@#E[[@@#DKM
)@@G@@[@)@#C[@@@#BR@K@#AAB@@@A)@K@E@)@![C@@@@@@@______MPS)  ROL DU2 CONTONEWAYKN
)@@G@@ONAL  ADDITI5X,33H(1H0,2(@@@@@AC@@@A)@L[F@K)K0K0K0^G^G@@@@@@H/@_0R]@@@@FKO
)@@G@@H@@@#GC/@@ZK@[K@]6@@@@],@@@@@!/,0@@@/K@@@QAD@@@A)@U[F@^[#[#@K^CO@@@@@@@@KP
)@@G@@@@@@@+/,0@@@^^K@@+N8M@@@O@)@#AR@)@@F/K@@@$*@@@@G/G@@@XAE@@@A)@<[##[@K0K^KQ
)@@G@@EOG^G^E)@@@@@@@@@@'^@@@@@[Q@]6@@[@@6/,0@@@/K@@@\@[O@]6/K@@@$@@@@]\AF@@@AKR
)@@G@@)@6@8@@@@@@@)@:@MK@@@@@@N@0@@,C8)@@A)     S82CP2LE IN  TROUBBUFFER***** KS
)@@G@@(031H0AG@@@A)@![F@K0K0K0^G4G4[#G@@@@(@@@U,8L@@@2[@]),LC@]@-1N.@@^:R@)@]0KT
)@@G@@ @@@@G@[T@]6/K@@GVAH@@@A)@6[F@K3K[#H#@^G0@@@@@@@+@]@G+C/@@J_[@)@[^R@)@]0KU
)@@G@@G@)@@]C/)__"/K@@[](@@@@]/K@@]AAI@@@A)@_[N#H#H@^G0K3K0@*@@@@G[@@@@JC@]@Y(KV
)@@G@@[@@@[^R/)@@[G@@@U,C/@__"8L@@@. @])*[[@M@G+AJ@@@A)[D[EK^G[#H#H#[#H@@@@@@@KW
)@@G@@/K@@[Q(@]@0$A@0@#H[@N@*[)@#@*[C/@@@]R@0@@J/K@@[U0@@@@GAK@@@A)[M[EK0K3K3KKX
)@@G@@0K3K3K^G@@@@C@@@@J/K@@[Y[@]@-1C@#@G+R@0@#H[@N@*[)@#@*[R@0@#HC/@@@[AL@@@AKY
)@@G@@)[V[M^G1@K3K[#G@@@C/)__"G@@@@]C/@__"/K@@]A(@@@@]8L@@[AO/)@@[]@]@-1G/@__"KZ
)@@G@@;K@@@#AM@@@A)[>[F#G^G^G4@K0K0@@@@@@@[@@@@GG@@@@GC/@@@[/K@@[4(@#@*[[@)@#HLA
)@@G@@[@@@[^R/0@@[G@)@U,AN@@@A)[,[F#[#GK3K3K3^[#@@@@@@C@@@@G8L@@[(O/0@@[[@#@*[LB
)@@G@@[@+@@]G@<@*[;@)@@+C@<@@]R@)@@GAO@@@A)[7[N#GK[#[#H#@^@@/K@@]^0@@@@G*@@@@GLC
)@@G@@[@@@@HC@]@Y(N[@@#HR/)@@[/K@@]A(@@@@GH@@@@]AP@@@A)][[F#[#H#GK^G^G4G^G@@@@LD
)@@G@@ @@@@L @@@@K[@@@@]C@@@@G8L@@[/O/)@@[[@]@Y(C@#@*[R@0@@HAQ@@@A)]E[F#[#[#H@LE
)@@G@@^G4G[#G@@@@@C@#@-1[@)@[^R@0@]0G@)@U,C/)__"/K@@]3(@@@U, @@@@N @@@@MAR@@@ALF
)@@G@@)]N[F#@K3K0K3^G^G^G@@@@@[@@@@RT@@@@P[[@@@Q;L@@@AC[#@0$[@0@@P+@<@0$C/)@@_LG
)@@G@@[@@@@OAS@@@A)]W[F#[#@^[#[#[#[#@@@@@@H@@@@PC@@@@N[@@@@MC@@@@R/K@@]<1@@@@GLH
)@@G@@*@@@@GH@@@@RC@@@@MAT@@@A)]>[E^[#[#[#[#[#[#@@@@@@[@@@@LG@@@@LT@@@@OC@@@@QLI
)@@G@@[@@@@NC@@@@P/K@@]%1@@@@G*@@@@GAU@@@A)],[F#H#[#[#[@^[#H@@@@@@/K@@#6(@@@U,LJ
)@@G@@/K@@ H(@@@@@8L@@]M[@)@@KG@)@@KT@)@@OC@<),LAV@@@A)]7@3]D#[#[]>#[#@@)@.@S@LK
)@@G@@INATES0COORD(/035H@](@]6@@[@@./,0@@@@]*@]6@@@@]1/,0@@@AW@@@A)[@@)@@@@@@@LL
)@@G@@)].@:]*K3@@@[@@@[^R/)@@[G@@@U,C/@__"'^@@@@  LEN)SCALE VAR    - I  AX@@@ALM
)@@G@@)#][F#[]D#[#[]>#[#[#[#G@@@M@V-@@K@@H@]0@]6@@[@[^/,0@@@@]\@]6@@@@]2/,0@@@LN
)@@G@@A@)@@HAY@@@A)#F@<#H#H]*@)[^@S@)#J@F@@@@@@@8L@@#]I7)   6,I5,2(10X,IO/)@@[LO
)@@G@@'^@@@@@@M@-1@@M@Y(AZ@@@A)#K[##H@K+K0K0K(K0K0@@@@@@@@@@@]/@]6@@[@[B/,0@@@LP
)@@G@@@];@]6@@@@]1/,0@@@/K@@#6(@@@@]BA@@@A)[B[@@@@@@@@)#S@F]*@@@@@'^@@@@)     LQ
)@@G@@  LAB4 LAB6  NO.   - J  S USED0SCALE(/036HBB@@@A)#T[EK3[#[]D#[#[#G@@@@@@LR
)@@G@@C@#@@]@#]@]6@@@@]2/,0@@@A@0@@I[@@@[^R/0@@[G@@@@]C/@__"BC@@@A)#+[F#@K0K0^LS
)@@G@@G[#@@@@@@@@@;K@@@][[K@@U;LK@@[+[@@@SC.@@@][@0@@T+@)@@SC/)@@[[@@@@SBD@@@ALT
)@@G@@)#:[F#[]>#[#[#[#[#[#[]*@'^@@@@@@K@@U@@K@@T@@K@@S@@K@@I@#B@]6@@[@[J/,0@@@LU
)@@G@@[@@@@SBE@@@A)#4@MK@@@@@@)[J@K@)#6@V]D#[#@@@@@@@@@#K@]6@@@@]1/,0@@@I6)   LV
)@@G@@(10X,48L@@#XO/0@@[BF@@@A)#9@V]>#[#@@)[L@0@@@@@@@S)    AMETERUS PARLLANEOLW
)@@G@@0MISCE(/025H@#L@]6@@[@[L/,0@@@BG@@@A)[R@K@)#/@<](@K0K3@@@@@@)[T@K@______LX
)@@G@@NSCALE@@@@U,@@@@[R/,0@HD'^@@@@______NCOORDBH@@@A)^@@<#[@K0K3@@@@@@)[V@K@LY
)@@G@@)^^@F#@@@@@@@#P@]6______NTABS @@@@@]@@@@[T/,0@HD@#O@]6BI@@@A)^ @V@K0K3@@LZ
)@@G@@)[X@K@)^C@V#[@K0@@@@@@[X/,0@HD@#Q@]6______ACCTOT@@@@U4@@@@[V/,0@HDBJ@@@AMA
)@@G@@)^F@F#@@@@@@)[Z@K@)^G@<#[@K0@@@@@@@@@@@@@@@@@@[Z/,0@HD@#R@]6______NVAR  MB
)@@G@@@@@@@KBK@@@A)[-@K@)^K@<#[@K0K3@@@@@@)[<@K@______NWMODL@@@@U?@@@@[-/,0@HDMC
)@@G@@@#S@]6______NMODELBL@@@A)^O@<#[@K0K3@@@@@@)[>@K@)^S@F#@@@@@@@#U@]6______MD
)@@G@@NDVTOT@@@@U!@@@@[</,0@HD@#T@]6BM@@@A)^T@V@K0K3@@)[$@K@)^W@V#[@K0@@@@@@[$ME
)@@G@@/,0@HD@#V@]6______NGRTOT@@@@U5@@@@[>/,0@HDBN@@@A)^Z@F#G@@@@@)[(@K@)^)@<#MF
)@@G@@[@K0K3@@@@@@@@@@U7@@@@[(/,0@HD@#W@]6______HISTAT@@@@U6BO@@@A)[:@K@)^=@<#MG
)@@G@@[@K0K0@@@@@@)[!@K@______MMCOR @@@@@L@@@@[:/,0@HD@#X@]6______HISTOTBP@@@AMH
)@@G@@)^*@<#[@K0K3@@@@@@)[\@K@)^?@F#@@@@@@@#Z@]6______NHISTS@@@@U8@@@@[!/,0@HDMI
)@@G@@@#Y@]6BQ@@@A)^!@V@K0K3@@)[1@K@)^0@V#[@K0@@@@@@[1/,0@HD@#)@]6______DATSAVMJ
)@@G@@@@@@U9@@@@[\/,0@HDBR@@@A)^3@F#G@@@@@)[3@K@)^4@<#[@K0K0@@@@@@@@@@@M@@@@[3MK
)@@G@@/,0@HD@#-@]6______HISMAX@@@@U'BS@@@A)[5@K@)^8@<#[@K0K0@@@@@@)[7@K@______ML
)@@G@@BAVAR @@@@@N@@@@[5/,0@HD@#+@]6______CLSMAXBT@@@A)^/@<#[@K0K3@@@@@@)[9@K@MM
)@@G@@) @@F#@@@@@@@#=@]6______BABUF @@@@VY@@@@[7/,0@HD@#<@]6BU@@@A) [@V@K0K3@@MN
)@@G@@)[;@K@) ^@V#[@K0@@@@@@[;/,0@HD@#>@]6______OSIZEM@@@@VZ@@@@[9/,0@HDBV@@@AMO
)@@G@@) B@F#G@@@@@)[.@K@) C@<#[@K0K3@@@@@@@@@@V-@@@@[./,0@HD@#&@]6______OSIZECMP
)@@G@@@@@@V)BW@@@A) G[F#@K^C4G4G4G4G^G@@@@@@@@@W@@@@@V@@@@@]@@@@@#@@@@U:/,0@@@MQ
)@@G@@/K@@ >*@@@@@@#$@]6BX@@@A) P[F#[#H#H#H#GK0K^G@@@@@#%@]6/K@@@:@@@@@F@@@@@@MR
)@@G@@@@@@,M@@@@*]@@@@G<@@@@M3@@@@@XBY@@@A) Y[##H@K=K3K3K^G@)[_@C@CATWTS(@@@@@MS
)@@G@@@#!@]6/K@@E3@@@@@]@@@@@#/,0@@@/K@@ >(@@@@]BZ@@@A)]@@C@) &@<@K^G^G@)][@K@MT
)@@G@@@@@@@@@@@@@@______SCLTOT@@@@@V@@@@[_/,0@HD/K@@ 3______CA@@@A) %@<#[@K0K0MU
)@@G@@@@@@@@)]#@K@) ,@F#@@@@@@@#1@]6______LABTOT@@@@@W@@@@][/,0@HD@#0@]6CB@@@AMV
)@@G@@) \[F@K0K0K0^[]L#H#@@@@@@@@@]2@@@@U7/,0@@@/K@@ _*@@@@@@#2@]6@@@@@X@@@@]#MW
)@@G@@/,0@HDCC@@@A) 8[F@K0K=K3K0K^G^G4@@@@/K@@BU(@@@U'@#6@]6/K@@E3@@@@]2@@@@U'MX
)@@G@@/,0@@@@#5@]6/K@@E3CD@@@A)A[[F#@K3[#[@K3K0@@@@@@@@@@@@H@@@@U;/,0@I([#)@@HMY
)@@G@@[@@@[^C_)@@[G@@@U,C/@__" @@@@YCE@@@A)AE[F@K0^G^G^G^G^G0@@@@@G_)@@[[@+@=9MZ
)@@G@@C@)@@HR@)@@Y[@@@@YG@@@@YC/@@@[@#.@]6/K@@AMCF@@@A)] @K@)AN@;@^[@K0K0K0@@@NA
)@@G@@@^#@]6@@@@@Y@@@@] /,0@HD/K@@AU(@@@@@8L@@AA______NCDSAVCG@@@A)AU[EK^D^G^GNB
)@@G@@^[#[]L#G@@@@@@@@='/,0@@@@^A@]6/K@@E3@@@@]2@@@@@Y/,0@@@/K@@A&*@@@@@CH@@@ANC
)@@G@@)A<[N#[@K0K0@^G^@@/,0@I([#)@@H[@@@[^C_)@@[G@@@@@C/@__" @@@@Z@^B@]6/K@@E3ND
)@@G@@@@@@@YCI@@@A)A![F#H#[@K0^G^G^G^G@@@@C@)@@HR@0@@Z[@@@@ZG@@@@ZC/@@@[@^G@]6NE
)@@G@@/K@@A7@@@@@H@@@@V@CJ@@@A)A6@N#G@@@@@)]B@K@)A8@V@K>K0@@@@@@@@@@@@]B/,0@@@NF
)@@G@@8L@@A:______IDVAR G_)@@[[@<@=9CK@@@A)A;[F#[#[#[@K0^G^G^G@@@@R@)@@)[@@@@ZNG
)@@G@@G@@@@ZC/@@@[@^L@]6/K@@BC@@@@@-@@@@@-@@@@@)CL@@@A)B^@<#[9^G0@)]D@K@)BC@MKNH
)@@G@@@@@@@@/K@@BI(@@@@@______NDVSAV[@<@=9;K)@@[C@+J_"R@0@@ZCM@@@A)BE[F@K0K0K0NI
)@@G@@^[]L#[#@@@@@@@@@]2@@@@@Z/,0@@@/K@@BU*@@@@@@^Q@]6@@@@@Z@@@@]D/,0@HDCN@@@ANJ
)@@G@@)BN[F@K0K=K3K0K^G^G^G@@@ @@@@< @@@@+@^U@]6/K@@E3@@@@@Z@@@@='/,0@@@@^T@]6NK
)@@G@@/K@@E3CO@@@A)BW[N#[#H@^G0K0K3@*@@@@GH@]@-1C@@@@=[@@@[^R/)@@[G@@@U,C/@__"NL
)@@G@@/K@@B7(@@@U, @@@@=CP@@@A)B&[MK^G4G^G0K[#@@G@@@@+C/@@@[/K@@B50@@@@G*@@@@GNM
)@@G@@D@]@Y([@@@@=C@]@-1/K@@B%1@@@@GCQ@@@A)B0[##[#H#@K0^@@@@)]F@C@NALL  (@@@@@NN
)@@G@@8L@@B<O/)@@[[@)@@<G/)@@ G@)@@<C@+@-1[@@@@+CR@@@A)]G@C@)B8@<@K^G^G@)]H@K@NO
)@@G@@@@@@@@@@@@@@______ALLTOT@@@@@+@@@@]F/,0@HD/K@@C ______CS@@@A)B/@<#[@K0K0NP
)@@G@@@@@@@@)]J@K@)C@@F#@@@@@@@^,@]6______ENTMAX@@@@@<@@@@]H/,0@HD@^!@]6CT@@@ANQ
)@@G@@)C[[F@K0K0K0[#GK0@@@@@@@R@0@]3;@)@@<C@)@U9[@[@@@C@@@@@@^\@]6@@@@@=@@@@]JNR
)@@G@@/,0@HDCU@@@A)CE[F#@K0K3^[#[#@@@@@@@@N.@@@BQ@)@#DR@)@]38L@@CH[@#)@@C@@@U,NS
)@@G@@[@)@#HN.@@@^Q@0@#ECV@@@A)CN[N#GK^G[#@[#@@@C[)@@<[[[@@KT.@@@#[[[@@JC[@@@+NT
)@@G@@[@-@@IC@)@@W8L@@CN[@])@@C@@@@]CW@@@A)CX[M[#@K0K0^G0@@@[@#)@@C@@@U?N.@@@#NU
)@@G@@Q@0@#BR@0@]3[@[@@NG@@@@X[[-@@M;[)@@<[[-@@LCX@@@A)C$[N@[#G^G0K3@@@@C@)@U5NV
)@@G@@[@[@@V[@[@@UC@@@U4[@-@@T;@)@@+C@)@U?[@[@@ST/@@@ 8L@@C>CY@@@A)C1[MK3^G[#@NW
)@@G@@^G^G0@C]@@V)G[)@@MG[)@@OT"@@@OC]@@@=;[)@@+C[)@@N[[[@@XC[@@U6[@-@@WCZ@@@ANX
)@@G@@)C;[M[#H@K0@K0@@@@C@@@#H[@[@@YG@[@@YT/@@@AC@@@@=/K@@D^(@@@U7[][@@YG]@@@MNY
)@@G@@;]@@@<DA@@@A)D [M^G[#[#@K0^@@@8L@@DG[@])@@C@@@@KN.@@@^Q@)@#CR@)@]3[@-@@-NZ
)@@G@@C@)@@L[@[@@)[@[@@ZDB@@@A)DJ[N#H@^G@K3K^G@@T/)@@AC@)@@K/K@@D-*@@@U'[@[@@$OA
)@@G@@;@@@@<C@@@@K @[@@</K@@DM*@@@U(DC@@@A)DT[M@^@K^G^G@@@@@G@@@@YC@@@@Z/K@@D0OB
)@@G@@ @[@@*/K@@D)0@@@@G*@@@@GD@[@@*]@-@@*G/)_)\DD@@@A)D<[M[#@@K^G@@@@@@C@@@@KOC
)@@G@@/K@@D01@@@@G*@@@@GG/@_)\T/@@@AC@@@@K[@[@@*G/@@");@@@@<DE@@@A)D![M[#G[#H@OD
)@@G@@@@@@@@C/@@@I/K@@D8(@@@VY @[@@%[@[@@(T/@@@#C@@@VY]@[@@$G/@_)\;@@@@+DF@@@AOE
)@@G@@)D7[MK3[#G@K0@@@@@[[)@@>C.)@@\[[[@@,C.@@[=[@-@@!C@)@V- @[@@?[@[@@:C@@@VZOF
)@@G@@[@[@@%DG@@@A)E[[]K^C=G^G^EOG^G@@@@@@@@@@@@@ \@]6@@[@]L/,0@@@@ ,@]6@@@@]1OG
)@@G@@/,0@@@/K@@EW(@@@@@DH@@@A)]L[@@@@@@@@)ED@F]*@@@@@'^@@@@)        LEND - I OH
)@@G@@EQUIRETORS RGE VEC0STORA(/036HDI@@@A)EE[EK0^G^G[#[]D#@@@@@@@@@@@]2/,0@@@OI
)@@G@@[#)@@H[@@@[^Q@0@#AR@0@]3C_)@@[G@@@@>C/@__"DJ@@@A)EN[F#[]>#[#[#@K%^@@@@@@OJ
)@@G@@8L@@EKG_)@@['^@@@@@@N)@@@@K@@H@ 6@]6@@[@]T/,0@@@@ 5@]6DK@@@A)]T@K@)EW@'KOK
)@@G@@0K0K0K0K0@@@[@@@[^Q@0@# R@0@]3Q@)@#AR@)@]3G@@@@>C/@__"4,I7) (25X,IDL@@@AOL
)@@G@@)E<[M^[#@^[@K^G@@@@A^@]6/K@@GZN@0@E?/K@@E!(@@@@@[@)@@@C@)@@>8L@@E<[@#)@@OM
)@@G@@C@])@@DM@@@A)E![F]L#H#H@K0K^EOG^G@@@@AB@]6@@[@]V/,0@@@/K@@E;@A @]6/K@@E3ON
)@@G@@@@@@U,@@@@V+/,0@@@DN@@@A)]V@0@@@@@@@)E6@V]*K@@@@N@0@E'C8)@@A'^@@@@CP2)  OO
)@@G@@IN S82OUBLE I/O TR***** (028H0DO@@@A)E9[F@K0K=K3K3K^G^D^G0@@@@@@-2/,0@@@OP
)@@G@@@AF@]6/K@@E3@@@@U,@@@@Y%/,0@@@@AE@]6/K@@GVDP@@@A)F][F#H@K0K0K^G[#G@@@@@@OQ
)@@G@@R/)@@[G@@@U,C/@__" @@@@&/K@@F$(@@@@+@AG@]6/K@@E3@@@@U,DQ@@@A)FF[MK3[@^G^OR
)@@G@@G^G^G@O@0@#FR@0@@&[@@@@&G@@@@&C/@@@[/K@@F)0@@@@G*@@@@GD@]@Y([@@@[^DR@@@AOS
)@@G@@)FP[M[@K3K^D=[@K@@/K@@F)@@@@FX@@@@FW/,0@@@^^K@FWN8M@V-^^K@FXN8N@@@[@<@@@OT
)@@G@@C/)@@]DS@@@A)FZ[F#@K^D[#[@K0K$@@@@@@/,0@@@@AU@]6/K@@E3@@@@@+@@@@@@/,0@@@OU
)@@G@@8L@@FGO/)@@[@AR@]6DT@@@A)F*[F@K0K3K0K3K0K0K0K3@@C[)@U?[[@@@]C[@@@+[@)@@[OV
)@@G@@C@)@@][@@@@@C@@@U,@AV@]6/K@@E3DU@@@A)F1[F#[#[#[#H#[#H#[#[#@@[#)@@BC#)@@=OW
)@@G@@[#@@@AC#@@U([])@@ C])@U![]@@@^C]@@@V[[)@@#DV@@@A)F'@V#[#[#G@)]-@K@)F.@V#OX
)@@G@@[]-#@@@@@@]-/,0@@@[@)@@D______S22PARC@)@U%[@@@@CC@@@@KDW@@@A)G@[F#[#[#[@OY
)@@G@@K0^G^G@@@@@@[@@@[^R@0@]0G@@@@EC/@__"@A&@]6/K@@GN@@@@@E@@@@]2@@@@@$DX@@@AOZ
)@@G@@)GD[F#[;[9^G^G^[@K@@@@@@/K@@GZN@0@GM8L@@GD[@)@@$G@)@@$C/)@@[[@]J_"C@#\_"PA
)@@G@@R@)@@$DY@@@A)GM@<#[]>#[#@@@@@@)]<@)@@@@@@@E SAVITROUBL***** (042H0@A,@]6PB
)@@G@@@@[@]</,0@@@@A!@]6DZ@@@A)]$@)@@@@@@@)GQ@:]*K^[#@@A1@]6/K@@GVN@0@GUC8)@@APC
)@@G@@'^@@@@22CP2)S IN SAMETERNG PAREA@@@A)GV[F#[]?K0K0K0K0K0K0@@@9\@@#O9,)@#MPD
)@@G@@9,@@#K9!)@#IR]0@]7[^)@]4H8)@@[/K@@@@!^)@]4EB@@@A)G=@3#[#[#[#[#[#@@)]4@C@PE
)@@G@@@@@@@@@@@@@@@@F@@@*4@K]4N[@@#VR@0@#UR@)@#TR@K@#S9\)@#QEC@@@A)G%@N#[]0@@@PF
)@@G@@)]6@K@)G?@+K0K0K0@9()@#I[^@@]4AA0@]7C8@@@D@A1@@]S82CP2/K@@@@/K@K]4ED@@@APG
)@@G@@)G0[F#[#[#[#[#[#[#[#[@@@/K@@I2^[@@#VA@0@#UA@)@#TA@K@#S9:)@#Q9:@@#O9%)@#MPH
)@@G@@9%@@#KEE@@@A)G9[#]D#[#[]>#[#[#[#@@@@@@@@@@@@K@#Y@@K@#X@A6@]'@@[@]:/,0@@@PI
)@@G@@@A5@]'@@@@]2/,0@@@EF@@@A)]:@S@)H[@3](@K^G^G^G@@@*4@K]8R]0@];@A;@]'/K@@H PJ
)@@G@@N@0@H^'^@@@@,I6)  ,3H = (2X,A6EG@@@A)]8@C@)HB@N#[]0@@@)]'@K@)HD@N#@@@@@@PK
)@@G@@C@VK@@AA0@];@A;@@]PLV   /K@@@@/K@K]8@@F@@#EH@@@A)HF[F#@K0K[#[#[#[#G@@@@@PL
)@@G@@*@@@@] @@@@X @@@@W[@@@@VC/@@@[/K@@G9[@K@#YC@VK@[[@K@#XEI@@@A)HO[N@K^[#@KPM
)@@G@@3[#H@@/G@@H)D@[@AM[@@@[^R/K@@[G@@@@]C/@__"@B^@]"/K@@H.N@0@HR/K@@HSEJ@@@APN
)@@G@@)HY[MK[#H#@K[@K3@@C@[@G+/K@@H8*@@@@H/GK@H$G/K__;[@K@@(+@[@AMC/@@@B/K@@H8PO
)@@G@@*@@@@GEK@@@A)H*[EK0K0K0^G^@K@@@@@@@@/K@@H4*@@@@G/C@@H1H@@@@(C/@@@][@@@@WPP
)@@G@@G@@@@W[@@@@%;@@@@<EL@@@A)H1[F#[#[#[#@K0K0^@@@@@@8L@@HWO/K@@[[@@@@XG@@@@XPQ
)@@G@@T/@@@ C@@@@%[@@@@WG@@@@WC@@@@%EM@@@A)H'@;@K^G^G^G^G^G@)]/@C@@@@@@@@@F@@[PR
)@@G@@*4@K]/N[@@#-R@K@#)R]0@]_@BO@]"/K@@H.N@0@H/EN@@@A)I[@N#[]0@@@)]"@K@)I#@V#PS
)@@G@@[#[#@@@@@@@@^[@@#-A@K@#)AA0@]_@BO@@]ESTSCL/K@@@@/K@K]/EO@@@A)IA[N@^G@K0^PT
)@@G@@G[#@@@[@@@@?H/@@@[G@@@#<T/@@@=]@@@@:W/@@@=;O@@@=H@@@#<C/@@@[/K@@HJEP@@@APU
)@@G@@)IK[N#[#[#[#@K0[@@C8)@@#/K@@IX*@@@@G;C@@@<;)@K@?C@[@@@R@K@#>A@K@#>O@K@#=PV
)@@G@@R@K@@:EQ@@@A)IU[F@K^G^[@K0K0K:@@@@@@H8)@@[/K@@@@!^)@#@@BY@#]/K@@I=N@0@IZPW
)@@G@@@BX@#]/K@@I)N@0@IWER@@@A)I<@<#[#[#[#@@@@@@)#@@C@)I$@N#[]0@@@/K@@@@/K@K#@PX
)@@G@@@@F@@@*4@K#@R@K@#&R]0@##[^)@#@ES@@@A)#]@K@)I(@'K0K0K0^G@@@@@C@VK@[[@@@#=PY
)@@G@@C8FK@@A@K@#&[^@@#@AA0@##C8@@@^@BY@@]TSTBITET@@@A)I0[N#[@^[@K^[@^@@[^@@^JPZ
)@@G@@C8FK@[[^@@BI[^@@AU[^@@ H[^@@E*[^@@ 3C8FK@@/K@@IB[@K@#<EU@@@A)I'[N@K[@K^[QA
)@@G@@@K^[@@[^@@E[[^@@@K[^@@AO[^@@]3[^@@B7[^@@BC[^@@ >C8FK@][^@@C [^@@A*EV@@@AQB
)@@G@@)J^[MK^[#@K0^@K0@@[@@@# C8FK@B[^@@E$C8FK@A[@K@#GC@VK@^[@@@#A[^@@F<[^@@ UQC
)@@G@@C8FK@#EW@@@A)JI@F@@@@@@@)],@0@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@[@@@@@#@@[@@[QD
)@@G@@@@@@ZK@@@@@]/K@@@@EX@@@A@@^@@^@@C@@H@@+@@[@@&@@]@@^@#$@C@@JJ@@@@@[@@@@4+QE
)@@G@@S1PCHH      S22IOD      S1PCHD      S22SC2      S22DWR      S1GTAG      QF
)@@G@@S1GTVT      S22DEF      S1STFT      NPRT$       NIO2$       NERR4$      QG
)@@G@@NERR3$      S82CP2      @@[@@@@@@@G?BLANK$      ^@@@C@@]@@@@S82BLK      QH
)@@G@@]@@@C@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QI
)@@G@@)@@@V#[#@@@@)@-@0@@@@@@@UMPS) TROL DY2 CON ONEWA4X,22H(1H0,3G/@__"C@@@#+QJ
)@@G@@R@K@#+AA@@@A)@$@C@)@#@;#[][#[#[#[] #@@@@@@@@@@#G/,0@@@@[B@#R@@@@#G@@@@@-QK
)@@G@@/,0@@@[@@@#<______AB@@@A)@E@<#@K0KK@)@*@K@)@I@N@K+@@@@/,0@@@/K@@[<______QL
)@@G@@REWIND(@@@U%[@@@@@C/@@@^@[C@#RAC@@@A)@K[F#[#[#[#[#[#[] #[#@@@[H@#R@@@@#JQM
)@@G@@/,0@@@@[G@#R@@@@@[@@@@#I@@@@#I@@@@@*@@@@#HAD@@@A)@T@V]L#[#@@)@%@S@)@W@N]QN
)@@G@@P[@@@@C@@@U%'^@@@@CARDS)0HEAD (/011H@[I@#R@@[@@%/,0@@@AE@@@A)@Y[F#[@K0K0QO
)@@G@@K^G[#@@@@@@@C@-@@[[@@@@#C@[@@@@[M@#R/K@@[<@@@@#I@@@@#G/,0@H [@@@@]AF@@@AQP
)@@G@@)@!@K@)@$@<#[@K0K0@@@@@@)@\@K@______CARDS @@@@@#@@@@@!/,0@GK[@)@@^______QQ
)@@G@@HEAD  AG@@@A)@:[F#[@K0K0K0K0^G^G@@@@ @@@@A[@@@@ T/@@@FC@@@@^@[Q@#R@@@@@^QR
)@@G@@@@@@@\/,0@GK@[P@#RAH@@@A)@4[MK0^@K0K^G^G^@/K@@[<@@@@@A@@@@@ /,0@H [@@@@AQS
)@@G@@C/@@@[/K@@@'*@@@@GH@@@@]C/@@@[AI@@@A)@"[N#[] #[#@K0@@@[@@@[^C_)@@[W/@@@FQT
)@@G@@;O@@@=G@@@@ C/@__"@[W@#R@@@@@^/,0@@@@[V@#RAJ@@@A)[C[F#[#[#[#@K0K0K=K0@@@QU
)@@G@@@@[@@1/,0@@@[@@@@CG@@@@BC/@@@E[@@@#=G@@@@BC@@@#<[#)@@BAK@@@A)[L[F#[#[#[#QV
)@@G@@[#@^D=@@@@@@8LK@[R'^K@@@C8])@@[[)@[ Q@)@#=R@)@#KH[)@@BC[)@@C@[-@#RAL@@@AQW
)@@G@@)[U@N]O@@@@@)@1@)@@@@@@@)[W@F@@@@@@@8L@@[C)     0A6,A401H*,1(20X,0G_)@@FQX
)@@G@@'^@@@@AM@@@A)[X[MK0K0K[@^G^ @@/K@@C_(@@@@][@@@@@C/@@@[/K@@@Z*@@@@G/C@@[<QY
)@@G@@]@@@@]H@@@@]C/@@@[AN@@@A)[$@3] #[#[]L#[#@@)@5@S@S -  I0SCALE(/012H@[1@#RQZ
)@@G@@@@[@@5/,0@@@@[0@#R@@@@#J/,0@@@AO@@@A)@8[@@@@@@@@)[!@F]O@@@@@'^@@@@)     RA
)@@G@@SCALENX,006HALTP,8006HSCNO,5X,6HSCAL,4X,00AP@@@A)[,[MKKK0KKK@@@@@@C/@@GDRB
)@@G@@/K@@[/0@@@@G*@@@@GD@]@AMA@)@@E[@@@[^R/)@@[G@@@@]C/@__"AQ@@@A)[8[F#[[K0K[RC
)@@G@@[K0KK@@@@@@@;K)@@#C@+@AM[@K@@F+@]@AMC/@@@B/K@@]][@)@@GD@+@AM[@@@@FAR@@@ARD
)@@G@@)][[F#[] #[#[]L#[#[#[[@@@@M@@]@@K@@E@[_@#R@@[@[@/,0@@@@["@#R@@@@#L/,0@@@RE
)@@G@@[@)@@GAS@@@A)]E@:#[#[[K>@@@@@@)[@@S@@@@@@@,I5,I1,I9,I8(6X,I6O/)@@['^@@@@RF
)@@G@@@@M@G+@@K@@G@@K@@FAT@@@A)[#@C@)]J@;@K-K0K0K=K0K0@@@@@@@]E@#R@@[@[^/,0@@@RG
)@@G@@@]D@#R@@@@#J/,0@@@8L@@[20)    AU@@@A)[^@8@@@@@@@)]Q@N]O@@@@@C/@__"'^@@@@RH
)@@G@@RSCL) 006HVA I,4X,AGS  -BLE FL0VARIA(/020HAV@@@A)]S[F[[#[]H#[@K0K-@@@@@@RI
)@@G@@/,0@@@@]K@#R/K@@#[@@@@@E/,0@@@[#)@@E[@@@[^C_)@@[G@@@U$AW@@@A)]-[F#[#@K0^RJ
)@@G@@G^G[#@@@@@@@H@@@@E;@@@@<R@)@@H[@@@@H;K@@@[G@@@@EC/@@@[@]L@#R@@@@#LAX@@@ARK
)@@G@@)]%[M[#[[K0^G^G@@@*@@@@GD@@@@J[@)@@J;C)@@O;))K@IC@+@M2]@@@@IG/@__";@@@@)RL
)@@G@@G/@__"AY@@@A)]4[EK[#[#[]L#[#[#@@@@@@@@K@@E@]R@#R@@[@[F/,0@@@]@@@@JH@@@@JRM
)@@G@@C/@^8)/K@@]91@@@@GAZ@@@A)].@<#[]OK@@)[F@K@)#[@F[@@@@@@@@@@@@(@@@U:5,I8) RN
)@@G@@(15X,I8L@@]VG_)@@['^@@@@@@K@@JBA@@@A)[H@K@)#]@3@K+K0K0K0K0@@@@@@@@@@@@#IRO
)@@G@@@@@@#I@@@@[H@@@@#L/,0@@@/K@@C_______REWINDBB@@@A)#C[F#[#@KKK0K^G@@@@@@@@RP
)@@G@@@@@@#M/,0@H [#0@@K[@@@[^C_0@@[G@@@U:C/@__"@])@#R@@@@@[BC@@@A)#L[F#[@K0K-RQ
)@@G@@K0K0K=K0K0@@@]&@#R@@[@[J/,0@@@@]>@#R@@@@#G/,0@@@@]=@#R/K@@C_@@@@#IBD@@@ARR
)@@G@@)[J@0@@@@@@@)#U@V]OK@@@@^^K@#ZN8L@@@'^@@@@______SCALNORUM)  FROM DSCALE RS
)@@G@@(016H0BE@@@A)#X@V@K0K@@@)[P@K@)#)@V#@K@@@@^^K@#>N8L@@[@](@#R______STYPE RT
)@@G@@@@@@#Z@@@@[N/,0@GKBF@@@A)#<@V@K0K@@@)[R@K@)#&@V#@K@@@@^^K@#:N8L@@]@]%@#RRU
)@@G@@______NCAT  @@@@#>@@@@[P/,0@GKBG@@@A)#(@V@K0K@@@)[T@K@)#?@V#@K@@@@^^K@#1RV
)@@G@@N8L@@#@]:@#R______NPRIM @@@@#:@@@@[R/,0@GKBH@@@A)#\@V@K0K@@@)[V@K@)#2@V#RW
)@@G@@@K@@@@^^K@#7N8L@@^@]?@#R______WTS   @@@@#1@@@@[T/,0@GKBI@@@A)#5@V@K0K@@@RX
)@@G@@)[X@K@)#8@V#@K@@@@^^K@#.N8L@@ @]!@#R______NLABEL@@@@#7@@@@[V/,0@GKBJ@@@ARY
)@@G@@)#;@V@K0K@@@)[Z@K@)#"@V#@K@@@@^^K@^#N8L@@A@],@#R______NDIGIT@@@@#.@@@@[XRZ
)@@G@@/,0@GKBK@@@A)^[@V@K0K@@@)[-@K@)^^@V#@K@@@@^^K@^DN8L@@B@]\@#R______NVALUESA
)@@G@@@@@@^#@@@@[Z/,0@GKBL@@@A)^B@V@K0K@@@)[<@K@)^E@V#@K@@@@^^K@^JN8L@@C@]0@#RSB
)@@G@@______OTHER @@@@^D@@@@[-/,0@GKBM@@@A)^H@V@K0K@@@)[>@K@)^K@V#@K@@@@^^K@^PSC
)@@G@@N8L@@D@]1@#R______MISSNG@@@@^J@@@@[</,0@GKBN@@@A)^N[F@K0K^G[#@K0@@@@@@@@SD
)@@G@@C[[@@ [@)@@MC@-@@^[@@@@LC@[@@]@]2@#R@@@@^P@@@@[>/,0@GKBO@@@A)^W[F#@K0^G^SE
)@@G@@G^[@K0@@@@@@@@@@@L/,0@H /K@@ G(@@@@M[]@@@PC][@@[[[)@@OC[-@@B[[@@@NBP@@@ASF
)@@G@@)^>[F#[@K0K-K0K0K=K0K0@@@]/@#R@@[@[$/,0@@@@];@#R@@@@#L/,0@@@@]'@#R/K@@C_SG
)@@G@@@@@@#IBQ@@@A)[$@*@@@@@@@)^,@<]OK0@@@C_)@@[G@@@@LC/@__"'^@@@@02HWT),10X,0SH
)@@G@@S -  IWEIGHT(013H BR@@@A)^2[N#@K0K-K0K0@K@/K@@ #1@@@@G*@@@@GD@]@@@@#]@#RSI
)@@G@@@@@@#L/,0@@@[#)@@E[@@@[ R@)@#+BS@@@A)^/@:]L#[#[#@@@@@@)[?@S@@@@@@@5)    SJ
)@@G@@3,E15.(10X,I@@M@@@@@K@@E@# @#R@@[@[?/,0@@@BT@@@A) [[F]P@K=K0K0K0^DK@@@@@SK
)@@G@@O/)@@['^@@@@@@M@@@@@K@@E@#F@#R@@[@[\/,0@@@/K@@ D'^@@@@BU@@@A) E@MK@@@@@@SL
)@@G@@)[\@K@) G@<#[@K0@@T/@@@FC@@@@N/K@@A((@@@@N3,I10)(10X,I8LK@^4G_)@@[BV@@@ASM
)@@G@@) K[F#[@K0K0K^G^COG^G@@@@#P@#R@@@@#L/,0@@@@#O@#R/K@@C_@@@@#I@@@@#>/,0@H SN
)@@G@@[@@@#>BW@@@A) T@2K0K0K=K0K0@@@)[1@S@ -  CALABELS(015H @#Q@#R@@[@[1/,0@@@SO
)@@G@@[@@@#>G@@@@NC/@__"BX@@@A)[4@C@) Z@;]OK0K0K-K0K0@@@@@@@@#X@#R@@@@#L/,0@@@SP
)@@G@@N[K@#>[@@@@QC/@@@['^@@@@T.)   BY@@@A) &[F#@K0K0^G[#[#@@@@@@@[@)@@QG@)@@QSQ
)@@G@@C/)@@[[@])#@C@#@@@O@0@#<R@0@@QN.)@@ER@)@#NBZ@@@A) \[F@^G^@K^D^G^G@@@@@@@SR
)@@G@@@#&@#R@@[@[5/,0@@@/K@@A@*@@@@K/D@@ 5H[@@#]C.@@@[8L)@ *CA@@@A) 8@3#[#[#[#SS
)@@G@@[#[#@@)[5@S@01H.,44,I6,0(10X,I@@K@#D@@K@#C@@K@#B@@K@#A@@K@##@@K@#[CB@@@AST
)@@G@@)[8@C@) "[#]P@^G[#@K0@@@[[@@@SC.@@@AG@)@#]C/)__"[@@@@RC/@@@#/K@@A*'^@@@@SU
)@@G@@A6)   CC@@@A)AA[F#@K0K0K0K0K0^G@@@@@C@+@#@[@^@@@C@#@#@O[@@#+R[@@@TR@)@@SSV
)@@G@@R@0@@R[@)@[A @@@@TCD@@@A)AJ[MK0[#[#@K0K0@@C")@@][]@@@RG]@@@RC"@@@[[[)@@TSW
)@@G@@G[)@@TC.)@@#[[^@@]C[]@#[[@=@@[CE@@@A)AT[F#[#[@^D^G^G^G^G@@@@R@0@#K@@K@#[SX
)@@G@@@#.@#R@@[@[9/,0@@@G.)__"8L)@AC[])@@SG])@@SCF@@@A)A+@;#@^D=[]P@@@@@)[9@K@SY
)@@G@@4,3(3X(10X,I8LK@ <'^@@@@8L)@A='^K@@@C8#)@@[[)@[AQ@0@#+CG@@@A)[;@S@)A(@3#SZ
)@@G@@[@K-K0K0K=@@/,0@@@@^D@#R@@@@#L/,0@@@/K@@C.(@@@@O6))   1H.,2A,I3,00CH@@@ATA
)@@G@@)A\@N#[#@@@@)["@8@@@@@@@002HVAER,5X,   ORD  CAT.DATA -SCALE (027H @^E@#RTB
)@@G@@@@[@["CI@@@A)] @K@)A1@;]P#[[K0^@@@@@C/@@@[/K@@A9*@@@@GH@@@@KC@@@U: @@@@ATC
)@@G@@'^@@@@02HVB),10X,0CJ@@@A)A8[N#[#@K0^G@K^G@C@@@@O/K@@B#1@@@@G*@@@@GH@@@@PTD
)@@G@@C/@@@][@@@@UT/@@@#C@@@@O[@@@@ACK@@@A)B][F#[@K0K0K^G[#@@@@@@@C/)@@]G@@@@OTE
)@@G@@C/@__"@^N@#R/K@@C_@@@@@A@@@@@U/,0@H [@@@@UCL@@@A)BF[N#@^@K0K0^G^CK/,0@@@TF
)@@G@@[#)@@E[@@@[ Q@)@#+R@)@#KC_)@@[/K@@B)1@@@@I*@@@@IH@)@@PCM@@@A)BP[F#[#[]L#TG
)@@G@@[#[#@K>@@@@@G_)@@['^@@@@@@M)@@@@K@@E@^U@#R@@[@]B/,0@@@@^T@#R@@@@#LCN@@@ATH
)@@G@@)]B@S@)BY@3@K[#@K0@@@@@@R[@@#+C_)@@[G@@@@OC/@__"/K@@C.8LK@BN15.5) 6,8X,ETI
)@@G@@(12X,ICO@@@A)B=[EK0K-K0K0K0K0K0@@@@@C@^@@@O@0@#<O@0@@OR@0@@E@^>@#R@@@@#LTJ
)@@G@@/,0@@@[#)@@E[@@@[ CP@@@A)B![MK0@^G@K0@@@@@[@0@@X+@=@@@C/)@@[[[K@@W+[@@@ITK
)@@G@@C.@@J_;K)@@[C@=@@@[@@@@V;K@@@FCQ@@@A)B7[MK0^@^[]L#[#@@@^!@#R@@[@]E/,0@@@TL
)@@G@@/K@@CA(@@@@JG/0__"/K@@CT(@@@@MH[)@@PC.)@@]CR@@@A)C[@V#[#@@@@)]E@)@@@@@@@TM
)@@G@@@@@@)@@@@@@@A6)   A6,6X,I6,9X,(12X,2@@N@@@@@K@@V@@K@@WCS@@@A)C^[F]P@K0K0TN
)@@G@@K0K0^G^G@@@@G@@@#<G@@@@E;@@@@<C@@@@OO@)@#<O@)@@OR@)@@E/K@@C''^@@@@CT@@@ATO
)@@G@@)CH[F#[]L#[#[#[#@K0@@@@@C8#@@@R@0@#=@@M@@@@@K@@V@@K@@W@^4@#R@@[@]E/,0@@@TP
)@@G@@[@@@#=CU@@@A)CQ[F]T]P@^G[@K0K0@@@@@@O@)@@OR@)@@E/K@@C*(@@@@GH@@@@XC/@@@[TQ
)@@G@@/K@@C''^@@@@'^K@@@CV@@@A)CZ@;#[]L#[#[#[#@@)]I@K@I6,4X,(12X,2@@M@@@@@K@@VTR
)@@G@@@@K@@W@^.@#R@@[@]I/,0@@@O@)@#<CW@@@A)]K@K@)C&@;]P@K0K0K0K0@@;@@@@<C@@@@OTS
)@@G@@O@0@#<O@0@@OR@0@@E/K@@C''^@@@@)     2E15.5CX@@@A)C![F#[#[#[]L#[#[#[#@@@@TT
)@@G@@@@N@@@@@K@@V@@K@@W@ ^@#R@@[@]I/,0@@@[@@@#=G@@@#<G@@@@ECY@@@A)C6[N#@K&K>[TU
)@@G@@@^[]^@/,0@@@8L@@#IG_0@@[8LK@B>G_)@@[O.@@@['^@@@@'^K@@@C8]@@@R@)@#=CZ@@@ATV
)@@G@@)D@@:#[#[]L#[#@@@@)]M@S@@@@@@@______NMODEL(1H0) @ J@#R@@[@]M/,0@@@@ I@#RTW
)@@G@@@@@@#GDA@@@A)D @<]P@K0KK)]P@K@)DD@N#[@@@@@/,0@GK@ M@#R______NWMODL@@@@U?TX
)@@G@@@@@@]N/,0@GK'^@@@@DB@@@A)DF@3#[[K0KO@@@@@@)]R@K@@@@@@@______REWINDC/@@@#TY
)@@G@@/K@@F-(@@@U!@ N@#R@@@@U!@@@@]PDC@@@A)DL[F#[]D#[#[#[#[#[#@@@@C/@__"@ R@#RTZ
)@@G@@@@@@@[@@@@#I@@@@#I@@@@]R@@@@#J/,0@@@[@@@@@DD@@@A)DU[N[[#[@K0K0K^G@C@[@@@UA
)@@G@@@ V@#R/K@@F-@@@@#I@@@@#O/,0@H [#)@@E[@@@[^C_)@@[G@@@U!DE@@@A)D=[N[^^KL[^UB
)@@G@@G@@@@@ @[@@@[]@@@YC][@@^[[)@U3C[-@@#[[@@U2C[[@@][@)@U0C@-@@[[@@@U\DF@@@AUC
)@@G@@)D,[E^G^[@K0K0K^G@@@@@@@@ >@#R/K@@F-@@@@#I@@@@#J/,0@H /K@@D7(@@@@Y @[@@]UD
)@@G@@ @[@@[DG@@@A)D7[F] #[#[]L#[#[[K0@@@@@@L@@@@@K@@Y@@K@U\@ $@#R@@[@]T/,0@@@UE
)@@G@@@ &@#R@@@@#G/,0@@@DH@@@A)E@@M@)]T[@@@@@@@@,2F12.= ,2I5 HIST 11H    ,I6,0UF
)@@G@@ MODEL***** (014H0@@L@@]@@L@@[DI@@@A)]-@C@)E]@;]P] #[#[]L#[#@@@@@@@ 0@#RUG
)@@G@@@@[@]+/,0@@@@ \@#R@@@@#G/,0@@@'^@@@@2)    DJ@@@A)]+@*@@@@@@@)ED@<]P@KOG@UH
)@@G@@@@@@#I@@@@U0/,0@H '^@@@@)     INATES COORDFACTOR(019H0DK@@@A)EH[F@K0^ #[UI
)@@G@@#@K-K0@@@@@@@@@@#L/,0@@@[@@@[ Q@0@#+R@0@#KG@@@U0C/@__"@ 3@#R/K@@F-DL@@@AUJ
)@@G@@)EQ@3#[]L#[#@K>@@@)]$@C@@@@@@@@@@@@@(I10) '^@@@@@@N)@@@ 8@#R@@[@]$/,0@@@UK
)@@G@@@ 7@#RDM@@@A)EW@;@K-K0K0K=K0K0@@@@@@)]*@C@(020H0@ "@#R@@[@]*/,0@@@@ .@#RUL
)@@G@@@@@@#G/,0@@@8LK@EODN@@@A)](@)@@@@@@@)E<@<]P@KOG@@@@@@@@@@@#I@@@@U2/,0@H UM
)@@G@@'^@@@@S)    RIABLEENT VADEPENDDO@@@A)E$[N@K0^^[#[] #@@@@@@#&/,0@@@]@@@#&UN
)@@G@@G/@__"W/@@@O;O@@@=H@@@U2C/@@@[@A[@#R/K@@F-DP@@@A)E1[F#[]L#[#@KOG^G@@@@@@UO
)@@G@@[[)@[ Q@)@#+R@)@#KG[)@U2C.)__"@A#@#R@@[@]!/,0@@@@A]@#RDQ@@@A)E'@UK&K@@@@UP
)@@G@@)]!@C@)E.@V]P] #@@@@@@@@@@@@#G/,0@@@'^@@@@(20I5)8LK@E''^K@@@C8])@@DR@@@AUQ
)@@G@@)F@@<#[]L#[#@@@@@@)],@)@@@@@@@RIABLEENT VADEPEND(031H0@AF@#R@@[@],/,0@@@UR
)@@G@@@AE@#RDS@@@A)]2@S@)F^@3]P@KOG^[#@@@@@AI@#R/K@@F-@@@@#I@@@@U3/,0@H '^@@@@US
)@@G@@)      SIZES GROUPDT@@@A)FE[MKK^G^COG^G^D@/,0@@@@AJ@#R@@@@#&/,0@@@]@@@#&UT
)@@G@@G/@__"W/@@@O;O@@@=H@@@U3C/@@@[DU@@@A)FO[F#[#@KOG^G@K&@@@@@@@'^K@@@C8^)@@UU
)@@G@@[[)@[ Q[@@#+R[@@#KG[)@U3C.)__"@AK@#R@@[@]!DV@@@A)FX[F@K>^[@K^G^G^G@@@@@@UV
)@@G@@9!)@#$R]0@#S@AS@#R/K@@F=N@0@F<8L@@DXG_)@@['^@@@@8LK@FVDW@@@A)F&[F#[#[#[#UW
)@@G@@[#[#[#[#[#@@N[K@#4N[@@#3R[@@#2R@0@#1R@)@#0R@K@#\9\)@#!9,)@#:9,@@#(DX@@@AUX
)@@G@@)F\@N#[#@@@@)#P@C@)F1@N#[]W@@@)#R@K@@AS@@]S82DMP/K@@@@/K@K#P@@F@@]*4@K#PUY
)@@G@@N[)@#5DY@@@A)F3[F#[#[#[#[#[#[#[#[#@@A[@@#2A@0@#1A@)@#0A@K@#\9:)@#!9%)@#:UZ
)@@G@@9%@@#(9()@#$AA0@#SDZ@@@A)F/[F#[#[#[@K-K0K0K=K0@@@@[@]5/,0@@@@AW@#V@@@@#LVA
)@@G@@/,0@@@/K@@HI^[)@#5^[K@#4^[@@#3EA@@@A)G @V#[#[#@@)]5@S@)GC@N]P@@@@@N@0@GFVB
)@@G@@'^@@@@,I6)  ,3H = (2X,A6@@K@#8@@K@#7@AX@#VEB@@@A)GE@<@K0K0K0@@@@@@)#T@C@VC
)@@G@@)GI@N#[]W@@@/K@@@@/K@K#T@@F@@#*4@K#TR]0@#W@A+@#V/K@@GGEC@@@A)#V@K@)GK@:#VD
)@@G@@@K0^G@)]8@K@______READ  [@K@#8C@VK@[[@K@#7C@VK@@AA0@#W@A+@@]PLV   ED@@@AVE
)@@G@@)GP[F@K+K0K0[#[#[#@@@@@@D@@@@Z@A&@#Z@@@@@Z@@@@@@@@@@@@@@@@]8@@@@@@/,0@@@VF
)@@G@@/K@@G@EE@@@A)GY[N@^[@K^G[#[#@@C/@@@[]@@@@)G@@@@ZC/@@@[@A*@#Z/K@@H[N@0@G<VG
)@@G@@/K@@G=*@@@@G/G@@G-EF@@@A)G*[N#@@K0[@K@@@@@N@0@G3/)K@G4+@@@@I @@@@I(@@@#'VH
)@@G@@C/)@@[ @@@@G*@@@@IH@)@@@C@)@@)EG@@@A)G2@3@K0K=K0K0K0@@)]'@S@DRUM I***** VI
)@@G@@(033H @@K@@Z@A?@#Z@@[@]'/,0@@@@A:@#Z/K@@H[EH@@@A)].@)@@@@@@@)G8@:]OK^[#@VJ
)@@G@@@A0@#Z/K@@G.N@0@G/C8)@@#'^@@@@ =,I8), LENDROUBLENPUT TEI@@@A)G.@3#[])K0KVK
)@@G@@0K0@@@)#X@C@@@@@@@@@@@@@@@F@@@*4@K#XR]0@#)[^)@#XH8)@@[/K@@@@!^)@#XEJ@@@AVL
)@@G@@)H#@N#[]W@@@)#Z@K@)H @+K0K0@@@C8FK@@[^@@#XAA0@#)C8@@@^@A0@@]INP   /K@@@@VM
)@@G@@/K@K#XEK@@@A)HD[F@K[#[@^[#[@@@@@@@@@/K@@@@[@@@#+[^@@GUC8FK@@/K@@GQ[@K@#'VN
)@@G@@C@VK@[[^@@G([^@@GTEL@@@A)#G[C@@@@@@@@@@@@@@@@@@@@@@@@ @@[@@[@@@@@E@@@@@[VO
)@@G@@@@[@@@@@@@@#@@@@@@@@@@@^@@@@@]EM@@@A@@@@@@ #[#[]L#[#[[K0@@@@@@L@@@@@K@@YVP
)@@G@@@@K@U\@ $@#R@@[@]T/,0@@@@ &@#R@@@@#G/,0@@@DH@@@A@@^@@#@@B@@D@@T@@[@@X@@[VQ
)@@G@@@@^@#;@C@@HM@@@@4+S1PCHH      S1PCHD      S1IODR      S1CKVI      NPRT$ VR
)@@G@@      NIO2$       NIO1$       NERR3$      NERR4$      S82DMP      @@[@@@VS
)@@G@@@@@@F3S82BLK      ]@@@C@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@[[S@@@@@@@@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@GVV
)@@G@@@@@@@G@@@@@G@@@@@G@@@@@G@@@@@GAA@B25)@G[S@@@@@@@@@@@@F@@@@@F@@@@@F@@@@@FVW
)@@G@@@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@FAB@B25)@R[S@@@@@@@@@@@@A@@@@@FVX
)@@G@@@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@F@@@@@FAC@B25)@+[S@@@@@@@VY
)@@G@@@@@@@G@@@@@G@@@@@ @@@@@G@@@@@G@@@@@G@@@@@G@@@@@^@@@@@G@@@@@C@@@@@BAD@B25VZ
)@@G@@)@![S@@@@@@@@@@@@E@@@@@E@@@@@E@@@@@E@@@@@E@@@@@E@@@@@E@@@@@G@@@@@]@@@@@GWA
)@@G@@@@@@@GAE@B25)@8[C@@@@@@@)[]@C@@@@@@@@@@@@G@@@@@G@@@@@D@@@@@[@@@@@G@@@@@#WB
)@@G@@@@@@@E@@@@@E@@@@@EAF@B25)@@[EK1#^GK1@K^GK0@@@@@@R@K@[C@[D@[ /K@@@CN@0@@BWC
)@@G@@[@@@@@C@[@@[R@K@[][)@@[]C4FK@@AG@B25)@D@N#^G@@@@)[#@C@)@F@N#^C@@@@)[ @K@WD
)@@G@@@[D@@#S22PCT/K@@@@/K@K[#@@F@@]*4@K[#C@@@@@AH@B25)@H@V#^GK@@@@@@@@@@@@@@@WE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@A@K@[CAA0@[AAI@B25@@@@@@@@ @@@WF
)@@G@@@@ @@@@@@@@@@@@@@@@@@@@@@@ @@@JJ]@@@@J]@@@PJ]@@@RJ]@@@@@@@@@@@@@@@J@]@@@WG
)@@G@@@@^@@]@@A@@[@@C@@[@@G@@@@@]@[D@C@@@KNERR3$      S22PCT      @@[@@@@@@@@HWH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[MK[@^@K@@@@@@@H@@@@@C@@@@@/K@@@U*@@@@G/G@@@CWJ
)@@G@@D@@@@@/K@@@H*@@@@G/G@@@^D@@@@@AA@C*,)@E[N@K^@K[@^GK@@@N@0@@P[@@@@@C/@@@[WK
)@@G@@/K@@@C*@@@@G/G@@@LD@@@@@/K@@@U/G@@@L/@@@@QAB@C*,)@O[F@K1#^[@K0K1@@@@@@@@WL
)@@G@@N@0@@Y[@@@@@C/@__"@[K@@#/K@@@ZN@0@@T @@@@@@[I@@#/K@@@ZAC@C*,)@X@:@K1#^GKWM
)@@G@@0@@@@@)@[@C@)@+@F#@@@@@@/K@K@[@@F@@#*4@K@[C@@@@@R]0@@^@[M@@#/K@@@ZAD@C*,WN
)@@G@@)@<@F]@@@@@@)@#@K@)@=@:#[@K@@@C8FK@[[^@@@@[^@@@DC8FK@@AA0@@^@[M@@#S22ACPWO
)@@G@@/K@@@@AE@C*,)@(@<@K^[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@WP
)@@G@@[^@@@^[^@@@C[^@@@HAF@C*,@@^@@]@@A@@[@@C@@[@@G@@@@@]@@A@C@@@!NERR3$      WQ
)@@G@@S22ACP      @@[@@@@@@@@=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F#@K0K0K0^[@K@@@@@@@WS
)@@G@@/K@@@J/K@@@H8];@@B$'0@@ARA0@@=[@@@@<R@K@@+G/@__"C@@@@+AA@C*,)@D[N@K^[@K$WT
)@@G@@K0@@@@W/@@@A;O@@@=G@@@@@C/@@@ @[C@@Z'^@@@@/K@@@J/K@@@J/K@@@V/K@@@VAB@C*,WU
)@@G@@)@N[F#@K0K0^G[@K0@@@@@@@C@@@@>8L@@@S[@])@@C@@@@R[@@@[^Q@)@@+R@)@@QG/@__"WV
)@@G@@[@@@@#AC@C*,)@W[F#[#[#[#@K^[@K@@@@@@/K@@[E/K@@@%/K@@@*8];@@+$'0@@ARA0@@=WW
)@@G@@ @@@@B @@@@A[@@@@ AD@C*,)@>[F@K^[]X#@K0K0@@@@@@@H@@@@@[@@@@AG@@@@AC/@@@[WX
)@@G@@@[M@@Z'^@@@@/K@@B*/K@@AG/K@@]2AE@C*,)@,[F@^[]@K0K0K0K-@@@@@@/,0@@@@[Q@@ZWY
)@@G@@@@@@@ @@@@@A@@@@@@/,0@@@/K@@C-*@@@@G/G@@@1AF@C*,)@7[F#[@K0K+K0K0K0@@@@@@WZ
)@@G@@G/@__4C/)@@[[@@@@C@[S@@Z@@@@@ /,0@@@@[R@@Z/K@@C;@@@@@ AG@C*,)[@[M@K0@K^@XA
)@@G@@@@@@@@/K@@@%/=0@CW+@)@@G @@@@G(@@@@KH[@@@CC.@@@EC/@@@[ @@@@I(@@@@GAH@C*,XB
)@@G@@)[E[F#@K0K0^@K^C@@@@@@@@/,0@@@/K@@C-*@@@@G/G@@[MG/@__7[@@@@AG@@@@AC/@@@[XC
)@@G@@ @@@@DAI@C*,)[N[F#[#[#[#[]H#[#[] #@@@@@@@ /,0@@@@[-@@Z@@@@@@/,0@@@@[)@@ZXD
)@@G@@@@@@@ @@@@@A@@@@@[AJ@C*,)[W[F@K0K+K0K0K0[@@@@@@@/K@@[F(@@@@GG/@__5[@@@@CXE
)@@G@@@[<@@Z@@@@@ /,0@@@@[+@@Z/K@@[7AK@C*,)[>[M^G@^G@K@@@@@@/=K@['+@@@@I @@@@IXF
)@@G@@*@@@@DC/)@@[ @@@@G*@@@@IH@)@@CC/)@@BC/@@@[AL@C*,)[\[MK0K[@K0^@@@@@[@@@@@XG
)@@G@@C/@@@^/K@@[/[@@@@@C@@@@C/K@@C-*@@@@G/C@@[4H@@@@CC/@@@#AM@C*,)[9[F@[]L#[#XH
)@@G@@[#[#[#@@@@@@(@@@@E@[\@@Z@@@@@E@@@@@A@@@@@[/,0@@@[@@@@@C/@@@ /K@@[/AN@C*,XI
)@@G@@)]][N@^G@K0K0@@@@@G/@__.C.@@@[[@+@@@C@)@@EO@)@@<R@)@@@[@@@@@G@@@@DC/@@@[XJ
)@@G@@/K@@]!AO@C*,)]G[U@@^@@@@H@@@@@C/@@@ />K@]!+[@@@G @@@@G1@@@@I*@@@@IH@-@@@XK
)@@G@@C/@@@[ @@@@K*@@@@GAP@C*,)]R[EK^[@K0K0^G^C0@@@@@@/,0@@@[@@@@DC/@@@[ @@@@AXL
)@@G@@@[7@@Z/K@@DLN@0@]V/K@@]W(@@@@GAQ@C*,)])[F#[#[] #[@K0K+K0K0@@@[/@@Z@@@@@ XM
)@@G@@/,0@@@@[;@@Z/K@@]!@@@@@ /,0@@@@['@@Z@@@@@@AR@C*,)]([F#@^[]P#[@K0K@@@@@@@XN
)@@G@@/K@@C-@[_@@Z/K@@DA@@@@@@/,0@@@/K@@[F(@@@@GG/@__5[@@@@CAS@C*,)]2[N#[#@[#[XO
)@@G@@#[#@@@ @@@@G(@@@@IH@)@@SC@)@@  @@@@H @@@@@[@@@@@C/@@@[ @@@@G @@@@FAT@C*,XP
)@@G@@)]/[MK0K0@K^G^G@@@*@@@@GH@@@@SC@@@@ /=K@#:+@@@@I @@@@I(@@@@KH[@@@TC[@@@ XQ
)@@G@@C/)@@[AU@C*,)#A[F@^G^C4G^G^COG^@@@@@/K@@#Z@@@@@ /,0@@@@]E@@Z@@@@@@/,0@@@XR
)@@G@@[@@@@GC/@@@[/K@@#DAV@C*,)#J[N#[]D#[#[#@@@@C/@@@[ @@@@I*@@@@GG/@__5C/)@@[XS
)@@G@@[@@@@C@]G@@Z@@@@@ /,0@@@@]F@@ZAW@C*,)#T[MK0@K^DOG^[#@@@]J@@Z/K@@DA@@@@@@XT
)@@G@@/,0@@@/=0@#\)@)@@G @@@@G*@@@@KH[@@@CC.@@@DAX@C*,)#<[F@K<K0K0K-K0K^G^C)@@XU
)@@G@@/,0@@@@]M@@Z/K@@^\@@@@@ /,0@@@@]L@@Z@@@@@@/,0@@@/K@@C-AY@C*,)#?[N#[#[#@KXV
)@@G@@0^@K0@(@@@@GH@@@@CC/@@@D/K@@^W(@@@@GH@@@@CC/@@@E[@@@@C@]N@@Z@@@@@ AZ@C*,XW
)@@G@@)#6[N@^G[@K0K0^@@@C/@@@#/K@@^P(@@@@GH@@@@UC@@@@ /K@@^2(@@@@GH@@@@CC/@@@AXX
)@@G@@/K@@^ BA@C*,)^@[F#[@^[@K0K[#@@@@@@@@[@@@@FC/@@@[/K@@C-*@@@@F/K@@^?/K@@C-XY
)@@G@@*@@@@G/C@@^^H@@@@CBB@C*,)^D[F#[@K=K0K0K0K0K@@@@@C/@__"/K@@^N@]=@@Z@@@@@EXZ
)@@G@@@@@@@A@@@@@[/,0@@@/K@@^L(@@@@ABC@C*,)^M[F#[#[@K>K0K^G[#@@@@@[@@@@CC/@@@]YA
)@@G@@@](@@Z/K@@DA@@@@@@/,0@@@/K@@#= @@@@A[@@@@EBD@C*,)^V[N@^G^G[#[#@K@@*@@@@IYB
)@@G@@/G)@^&G/)__7[@)@@HG@)@@HC/)@@[[@@@@AG@@@@AC/@@@[/K@@^?BE@C*,)^>[F@K)K0K0YC
)@@G@@K0K0K^G@@@@@[@@@@@C@@@@C/K@@#=@]0@@Z@@@@@ @@@@@A@@@@@[/,0@@@/K@@C-BF@C*,YD
)@@G@@)^,[N@[@@^G^@@@@@@/C@@^'D@@@@A[@)@@@C/)@@][@@@@@C/@@@ /K@@^6[@@@@@C/@@@^YE
)@@G@@/K@@^6BG@C*,)^8[MK@K0@K0@@@@@@ @@@@I*@@@@FC/)@@[ @@@@G*@@@@IH@)@@EC/)__"YF
)@@G@@C/@@@[/K@@ C*@@@@GBH@C*,) ][EK[#[#[@K=K0K0@@@@@@@@@@@A@@@@@[/,0@@@/K@@ %YG
)@@G@@[@K@@P"O@@@EC/@@]V/=K@AB)@@@@IBI@C*,) F[F#[#[#[@K*K0K0K0K0@@[@@@@J@#[@@ZYH
)@@G@@@@@@@A@@@@@V/,0@@@/K@@ $(@@@@F@]"@@Z@@@@@IBJ@C*,) O[F#@^[#[#[#[#@@@@@@@@YI
)@@G@@C/@@]V[@@@@IG@@@@IT@@@@EC@@@@J/K@@ W1@@@@G*@@@@GD@@@@EBK@C*,) X[N#[#@K0[YJ
)@@G@@#[#@K@/K@@ %[@)@@@C@)@@A[@@@@P"G@@@J;^@@@="O)@@JC/)@]V[@K@@P"O@@@IBL@C*,YK
)@@G@@) $[EK0K0K0K^G^G^G@@@@@@[@[@@@C@@@@P[@@@@PD@@@@P/K@@ ,(@@@@G[@K@@P"O@@@IYL
)@@G@@C/@@]VBM@C*,) 0[M[@K^[#[]H#[#@@#I@@Z@@@@@@/,0@@@@#H@@Z/K@@DLN@0@ 6/K@@ 7YM
)@@G@@(@@@@GH@@@@@C/@@@ BN@C*,) '[F] #[@K0K+K0K0K0@@@@G/@__/[@@@@C@#K@@Z@@@@@ YN
)@@G@@/,0@@@@#J@@Z/K@@C;@@@@@ /,0@@@BO@C*,)A#[F@^[@K>K0K^G^@@@@@@@/K@@C-@#O@@ZYO
)@@G@@/K@@DA@@@@@@/,0@@@/K@@C8/K@@AB*@@@@G/G@@AABP@C*,)AG[F]T#[@K0K0K0^@@@@@@@YP
)@@G@@C/@@@[/K@@B](@@@@GH@@@@WC@@@@ @#Q@@Z/K@@A(@@@@@ /,0@@@BQ@C*,)AP[F#[#@K[@YQ
)@@G@@K)^G@@@@@@@@@@@@@A@@@@@@/,0@@@/K@@A-*@@@@G/G@@AVH@@@@@[@@@@AG@@@@ABR@C*,YR
)@@G@@)AY[F#[#[@K0K0^@K0@@@@@@H@@@@AC/@@@[/K@@A?*@@@@GH@@@@RC@@@@ /K@@AG@#W@@ZYS
)@@G@@@@@@@ BS@C*,)A$[N#[@K0^@K0[]G@/,0@@@[@)@@@C@)@@@[@@@@BC/@@@[/K@@C-[@@@@@YT
)@@G@@C@@@@A/K@@AG]@@@@ABT@C*,)A1[N#[#@K0@^COG@@@@@@@ /,0@@@]@)@@@H@)@@@C/)@@[YU
)@@G@@]@@@@@H@@@@@C/@@@[@#&@@Z@@@@@@BU@C*,)A;[F@K0K0K0^[@K0@@@@@@@[@@@@@C@@@@AYV
)@@G@@/K@@BM/K@@A9*@@@@GH@@@@WC@@@@ @#(@@Z/K@@C;BV@C*,)B^[F@^@K0K<K0K0@@@@@@@@YW
)@@G@@C/@@@[@#1@@Z@@@@@@/,0@@@[@@@@BC/@@@[/K@@BM*@@@@G/G@@BBBW@C*,)BH[N#@@K-K0YX
)@@G@@K^G^C)/,0@@@@#4@@Z/K@@C;@@@@@ /,0@@@]@)@@@H@)@@@C/)@@[]@@@@@H@@@@@BX@C*,YY
)@@G@@)BR[N#[#[#@@[#@@@@H[@@@CC.@@@[C/@@@[ @@@@I*@@@@GG/@__/C/)@@[[@@@@C@#5@@ZYZ
)@@G@@@@@@@ BY@C*,)B-[M[@K0K^@^@@@@@/K@@B7[@@@@@C/@@@[/K@@BM/K@@BB(@@@@B/=0@C8ZA
)@@G@@)@)@@G @@@@G*@@@@KBZ@C*,)B:[MK0K0^@K^C[#@@@@@@@A@@@@@@/,0@@@/K@@CR*@@@@GZB
)@@G@@/G@@B2H@@@@@[@@@@AG@@@@AC/@@@[CA@C*,)B5[F#[#[]T#[@K0K+K0K0@@@^]@@Z@@@@@ ZC
)@@G@@/,0@@@@^[@@Z/K@@C;@@@@@ /,0@@@@^@@@Z@@@@@ CB@C*,)B"[N#@[@^G[@@@@@@C/@@@AZD
)@@G@@/K@@C-(@@@@GH@@@@CC/@@@ /K@@C80@@@@G*@@@@GG/@__/[@@@@CCC@C*,)CC[N#@K^@^CZE
)@@G@@OG^[#@@^F@@Z/K@@C;@@@@@ /,0@@@[@@@@@C/@@@]/K@@B:/K@@CG(@@@@GH@@@@CCD@C*,ZF
)@@G@@)CM[F]D#[#[#[@K0K0^@@@@@/K@@B7(@@@@GH@@@@RC@@@@ /K@@CW[@@@@C@^G@@Z@@@@@ ZG
)@@G@@/,0@@@CE@C*,)CV[N@^G@K^C4G^G@@C/@@@[@^N@@Z@@@@@@/,0@@@/K@@C81@@@@G*@@@@GZH
)@@G@@H@@@@CC/@@@#/K@@C-CF@C*,)C>[N#@@^G^COG^@@@/K@@C;@@@@@ /,0@@@[[@@@BC.@@@[ZI
)@@G@@]@)@@@H@)@@@C/)@@[]@@@@@H@@@@@CG@C*,)C\[F#[]D#[#[#@K[@@@@@@@/K@@C?*@@@@GZJ
)@@G@@/G@@C8G/@__/[@@@@C@^S@@Z@@@@@ /,0@@@@^R@@ZCH@C*,)C8[N#@K@K0K[@K@@@/K@@DHZK
)@@G@@N@0@D]C8)@@C/K@@D#(@@@@B[@@@@@C/@@@^/K@@C.[@@@@@C@@@@CCI@C*,)D]@<#[@K^G@ZL
)@@G@@)@K@*@@@@@@@2FDS)  IN S2 ERRORSYSTEM(023H0@^)@@Z/K@@DLN@0@D @^Z@@ZCJ@C*,ZM
)@@G@@)DA[F]>#[#[](@K^G^G^E0@@/K@@@@!^)@@X@^=@@Z/K@@DLN@0@DG'^@@@@@^+@@Z@@[@@KZN
)@@G@@/,0@@@CK@C*,)DJ@'K0K0K0K0K0K0@)@X@C@@@@@@@@@F@@@*4@K@XN[@@@*R@)@@$R@K@@&ZO
)@@G@@R]0@@)[^)@@XH8)@@[CL@C*,)DQ@N#[]0@@@)@Z@K@)DS@+K0K0K0@A@K@@&[^@@@XAA0@@)ZP
)@@G@@C8@@@E@^=@@]S22FDS/K@@@@/K@K@XCM@C*,)DW[F#[#@K0^[@K^@@@@@@@@[^@@AR[^@@@!ZQ
)@@G@@[^@@B,[^@@ >C8FK@[[@K@@=C@VK@@^[@@@*A@)@@$CN@C*,)D>[N@K^@K0^[#[@K@[^@@B3ZR
)@@G@@[^@@@2[@@@@+[^@@AWC8FK@#[@K@@>C@VK@][^@@A,[^@@@K[^@@]6CO@C*,)D\[MK^[@K^[ZS
)@@G@@@K^[@@[^@@]5[^@@A\[^@@CH[^@@]A[^@@^5[^@@A%[^@@B([^@@] [^@@B#C8FK@^CP@C*,ZT
)@@G@@)D9[MK^[@^[@K^[@@@[^@@C*[^@@C([^@@A7[^@@BL[^@@BKC8FK@A[^@@A5[^@@C&[^@@BIZU
)@@G@@C8FK@ CQ@C*,)E#[N@^[@K^[@K^[@@[^@@[8[^@@^![^@@^0[^@@^3[^@@ 1[^@@C9[^@@[;ZV
)@@G@@[^@@C/C8FK@C[^@@A8CR@C*,)EH@V@K^@@@@)@Q@0@@@@@@@@@@@@EB     +     -     ZW
)@@G@@      @@[@@@/K@@@@[^@@]Q[^@@[5CS@C*,)@W@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'     CT@C*,@@^@@]@@A@@H@@)@@[@@=@@@ZY
)@@G@@@@^@@(@C@@EKS1PRST      S1SKIP      S22PCT      S1WHR       S1VLU       ZZ
)@@G@@S1BACK      S1SCAN      NERR2$      NEXP1$      NPRT$       NIO2$       AA
)@@G@@NERR4$      NERR3$      S22FDS      @@[@@@@@@@DS@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[M^G@-)^G]A[#@@ @@@@@[[@@]#[@)@]][@@@][G.@__"AD
)@@G@@C[@@]@G/)__"C@)@]@G@FK@[C/@__"AA@@@C)@E[M@[#@CS@@@@@@@C[:K@[[[@@@SC.@@@[AE
)@@G@@[@)@@RC@:K@# @@@@@[@@@@@C/@__" @@@@@ @@@@@AB@@@C)@O[EK0CK[#@-)K0]A@@@@@@AF
)@@G@@[@@@@TC/@@@]@[H@[.@@@@[R@@@@]^@@@@@@/,0@@@[[)@]^;[)@@YAC@@@C)@X[F#@-)K)*AG
)@@G@@S^[#@-]K0CS@@[L@[.@@@@@U/,0@@@@[K@[./K@@O<@@@@@U/,0@@@[@@@@@C@@@@TAD@@@CAH
)@@G@@)@&[N#@]@-)K0]A@K@/K@@[R(@@@@GH@@@@VC/@@@FO@K@]]R@K@@R/K@@#M(@@@@GG/@__5AI
)@@G@@[@@@@VAE@@@C)@0[MK0]@-)^G@)CK0/,0@@@/K@@@/(@@@@GH@@@@VC/@@@[A@K@]^/K@@[(AJ
)@@G@@(@@@@GH@@@@VC/@@@#AF@@@C)@'[F#@-)^G]A@^G]A@@@@@@]@)@@RH@)@@RC/)@@[]@[@@@AK
)@@G@@R@K@]^H@@@@@C/@@@[@[T@[.@@@@@@AG@@@C)[#[EK0]@-[K0C]A[#@@@@@@C@@@@W@[Y@[.AL
)@@G@@/K@@O<@@@@@W/,0@@@/K@@^K(@@@@KH[@@@VC.@@@[AH@@@C)[G[F#@C]A[#@C]^H#@@@@@@AM
)@@G@@@@@@@T/,0@@@/K@@[B*@@@@GH@@@[TC@@@@W/K@@^K(@@@@GH@@@[SAI@@@C)[P[F#@)CS^GAN
)@@G@@@)CL^G]A@@@@@@@@[V@@@@[U/,0@@@^^K@[-N8L@@@O@K@]]R@K@@R/K@@@X@[<@[.AJ@@@CAO
)@@G@@)[Y[F#@-)K0C]A[@K0CS@@@@C/@@@[@[>@[.@@@@@Y/K@@#"@@@@@R@@@@[-@@@@@X@@@@@[AP
)@@G@@@@@@@UAK@@@C)[$[F#@)CS^G]A[#@- K0C@@/K@@O<@@@@@W/,0@@@ @@@@Z[@@@@][@@@@[AQ
)@@G@@C@@@[W/K@@#=[@@@@XAL@@@C)[0[F#@-)K0]@-)K0]A@@@@@C@)@@[C/@@@[O@K@]]R@K@@RAR
)@@G@@/K@@]H*@@@@GH@@@[XC@@@@W@[:@[.AM@@@C)[9[N#@@-)K0@C@@@@/=K@]%)@@@@IC8)@@@AS
)@@G@@(@@@@KH[@@[WC[@@@]C/)@@[C8@@@@(@@@@IH@)@[WAN@@@C)]#[F]A-)K0]A@^G]A@@@@@@AT
)@@G@@]@)@@RH@)@@RC/)@@[]@[@@@H@@@@@C/@@@[@[0@[.@@@@@@/,0@@@AO@@@C)]G[F@^G]A@KAU
)@@G@@[@K<@@@@@@@@/,0@@@/K@@]U*@@@@G/G@@]OG/@__7[@@@@ZG@@@@ZC/@@@[/K@@[BAP@@@CAV
)@@G@@)]P[F#@-)K0CS^@K0]@@@@@@/K@@[!*@@@@GH@@@@ZC/@@@D/K@@[!@[7@[.@@@@@W@@@@@ZAW
)@@G@@@@@@@[AQ@@@C)]Y[F]A-)K0CS^G@-)@@@@@@C/)@@[]@[@@@H@@@@@C/@@@[O@K@]]R@K@@RAX
)@@G@@@[;@[.@@@@@@/,0@@@AR@@@C)]$[F#@-)K^CUA[#@CS^CC@@/,0@@@[@@@@XC/@@@[@[_@[.AY
)@@G@@@@@@@@/,0@@@/K@@[!]@)@@RH@)@@RAS@@@C)]0[F#@)CS^G]A[#@C@@@@@@C/@@@[/K@@]'AZ
)@@G@@*@@@@GH@@@[SC@@@@W @@@@Y@][@[./K@@O<@@@@@WAT@@@C)]9[F#@-)K0CS^G]A@K@@@@@BA
)@@G@@C/@@@]/K@@##*@@@@GH@@@[TC@@@@WA@K@]^O@K@]#R@K@@R[@@@@YAU@@@C)#][F#@-)K^CBB
)@@G@@'A[@K0CS^G@@R@K@]^C@@@@@@]D@[./K@@O<@@@@@@/,0@@@/K@@#=*@@@@Y[@@@@YAV@@@CBC
)@@G@@)#F[E^G]A@K0C]A[#@@@@@@@O@K@]#R@K@@R/K@@#=[[@@@YC.@@@]]@)@@RH@)@@RC/)@@[BD
)@@G@@[@[@@@AW@@@C)#O[EK^C+A[#@-)K0CS^@@@@@@@@#W@@@@@X@@@@@[@@@@@U@@@@[R@@@@[YBE
)@@G@@/,0@@@^^K@#WN8L@@@AX@@@C)#X[F#@)CS^G@-)K0@@@@@@@G@@@@@C/@@@[[@@@@XG@@@@XBF
)@@G@@C/@@@[@]I@[.@@@@@Y/K@@#"@@@@@RAY@@@C)#&[M^G]A[@^@K^@@@/K@@QXN@0@#0C8)@@EBG
)@@G@@/K@@#1*@@@@G/C@@#!G@@@@SH@@@@RC/@@@#[@@@@@AZ@@@C)#0[F#@-)K0CS[#@-)K0@@@@BH
)@@G@@[@-@@@C@)@@[O@K@]@R@K@@S[@[@@@C@@@@XO@K@]#R@K@@S@]M@[.BA@@@C)#9[F#@]A[#@BI
)@@G@@-)^[]Y@@@@@@'^@@@@8];@^]$'0@@ RA0@@Y[[)@@SG[)@@SC.)@@#[[[@@[C[@@@]BB@@@CBJ
)@@G@@)^][F#@)C]@)CS^G@-)@@@@@H@@@@TC/@@@[O@K@]#R@K@@R/K@@O</K@@^B/K@@@X/K@@^KBK
)@@G@@@]R@[.BC@@@C)^F[M^G]A[@^[#@-)@C/@@@[ @@@@- @@@@)/K@@A-(@@@@@/K@@[B]@)@@RBL
)@@G@@H@)@@RC/)@@[]@[@@@BD@@@C)^P[F#@@CS^G]A[#@@@@@@@@A@K@]^O@K@]#R@K@@+[#0@@<BM
)@@G@@[@)@[^C_0@@[G@)@@@C/)__"[@@@@+BE@@@C)^Y[F#@CS^G@)CN4G]@@@@@@/K@@^(@]=@[.BN
)@@G@@'^@@@@8];@^>$'0@@^RA0@@=[@@@@=C@[@@@R@K@]^BF@@@C)^$[N@K^G]A@K0]@@@[@@@@@BO
)@@G@@C/@@@]/K@@^2*@@@@GH@@@[ZC@[@@@O@K@]@R@K@@+/K@@ ?/K@@ IBG@@@C)^1[N@K0CS[#BP
)@@G@@@C@-)@*@@@@GH@@@[-C@[@@[/K@@^_*@@@@GH@@@[)C@[@@@O@K@]@R@K@@+/K@@A-BH@@@CBQ
)@@G@@)^;[N@[@K0CS[@K=C@@@@@ ^/,0@@@^^K@ ^N8L@@@O@K@]@R@K@@+/K@@A-[@@@@@C/@@@[BR
)@@G@@/K@@^_BI@@@C)  [F#@)CS^DEA[#@)CS^@@@/K@@ X@]0@[./K@@AJ@@@@@&@@@@@>/,0@@@BS
)@@G@@@]\@[./K@@AJ@@@@@>BJ@@@C) I[F#@-)^[]O)C]A@@@@@@@N8L@@@@]2@[./K@@AJ@@@@ NBT
)@@G@@/,0@@@^^K@ NN8L@@@O@K@]@R@K@@+BK@@@C) R[F@K=*]A[@K0CS[@@@@@@8];@ -$'0@@#BU
)@@G@@RA0@@&@]3@[./K@@AJ@@@@@&@@@@ T/,0@@@^^K@ TBL@@@C) )[F]Y-)K^@K0CS^@@@@@@@BV
)@@G@@C/@@@[/K@@AJ[@@@@)G@@@@)C/@@@[/K@@ */K@@ =@]4@[.'^@@@@BM@@@C) ([F#@-)K^GBW
)@@G@@]A@K0]A@@@@@[@)@@*C@-@@[[@@@@$C@[@@@O@K@]@R@K@@+/K@@AJ[@@@@-G@@@@-BN@@@CBX
)@@G@@) 2[F#@-)^G]^(#@)CS^DC@@/,0@@@@]"@[./K@@AJ@@@@@(/,0@@@[#)@@(]@@@[ C#)@@$BY
)@@G@@H@@@@*BO@@@C) ;[F#@-)K^G]A@K^D'A@@@@@#@@[.'^@@@@8];@A#$'0@@#RA0@@&@]_@[.BZ
)@@G@@/K@@AJ@@@@@&@@@@@(BP@@@C)A^[F@K[#@-)K[#@-)@@@@@@[@@@@-G@@@@-C/@@@[/K@@AHCA
)@@G@@[@@@@)G@@@@)C/@@@[/K@@AE/K@@AABQ@@@C)AH[MK[#@-)^[#@-)@(@@@@IH@)@@)C@)@@-CB
)@@G@@8L@@^UG_0@@[[@@@@+G@@@@+C/@@@#8LK@ 5G_)@@[BR@@@C)AR[N@[#@-)[@@@@@@[@@@@@CC
)@@G@@C/@@@]/K@@A-1@@@@G*@@@@GH@@@@)C@@@@-[@)@@@C/)@@[/K@@A-BS@@@C)A-[F]A-)K0CCD
)@@G@@KOG]@-)^G@@@C@)@@UC/@@@[@#I@[./K@@O<@@@@@U/,0@@@@#H@[.@@@@@%/,0@@@BT@@@CCE
)@@G@@)A%[N#@@-)K0@C@@@@/=K@B[)@@@@IC8)@@@*@@@@KH[@@[<C[@@@UC/)@@[C8@@@@*@@@@ICF
)@@G@@H@)@[+BU@@@C)A4[F#@-)^[#@-)^[#@@@@@@C@@@@U/K@@B&(@@@@GH@@@[>C@@@@U/K@@BYCG
)@@G@@(@@@@GH@@@[=C@@@@UBV@@@C)A.[N#@C]@@)CKOG@@@@@@@W/,0@@@/K@@DO(@@@@GH@@@@@CH
)@@G@@C/@@@[/K@@DO/K@@C=(@@@@GH@@@[&BW@@@C)BB[F@K0CS^G@)CKOG]@@@@@/K@@DO@@@@@WCI
)@@G@@/,0@@@/K@@DO*@@@@GH@@@[$C@@@@W@#U@[./K@@DOBX@@@C)BK[F#@-)K0]@]A[#@@@@@@@CJ
)@@G@@H@@@[+C@@@@U[@@@@@C/@@@^/K@@DO*@@@@GH@@@[SC@@@@W@#X@[.BY@@@C)BT[EK@K^CEACK
)@@G@@[@K0@@@@@@@@@#=@[./K@@DO@@@@@W/,0@@@/K@@DS[@@@@@C/@@@#/K@@BX*@@@@GBZ@@@CCL
)@@G@@)B+[F#@-)^[]]-)K^G]A@@@@C@@@@W@#$@[./K@@DO@@@@@W/,0@@@/K@@DO*@@@@GH@@@[>CM
)@@G@@C@@@@WCA@@@C)B:[F#@C]^ #@)CS^G]A@@@@H@@@[<C@@@@W@#%@[./K@@DO@@@@@W/,0@@@CN
)@@G@@/K@@DO*@@@@GH@@@[<CB@@@C)B4[MK[#@-)K0]@CS@[@@@@:C/@@@B/K@@B"*@@@@GH@@@[=CO
)@@G@@C@@@@U[@@@@:C/@@@A/K@@DO*@@@@GCC@@@C)B"[F]]-)K^G]^D#@-)@@@@@*@@@@GG/@__5CP
)@@G@@@#1@[.@@@@@U/,0@@@@#0@[./K@@DO@@@@@U/,0@@@CD@@@C)CB[F@K0CS[@K+CS^G]A@@@@CQ
)@@G@@@@@@@U@@@@[R@@@@[Y/,0@@@^^K@CMN8L@@@O@K@]#R@K@@R/K@@DOCE@@@C)CK[F#@-)K^GCR
)@@G@@]@-)K0]A@@@@H@@@@XC/@@@]@#3@[.@@@@@Y/K@@DL@@@@@R@@@@CM@@@@@X@@@@@[CF@@@CCS
)@@G@@)CT[MK[#@C]A@K0@@@[@)@@@C@)@@:[@@@@@C@@@@[/K@@DO*@@@@GH@@@@YC/@@@^/K@@DOCT
)@@G@@(@@@@GCG@@@C)C<[F@K)*S^[#@-)K0]@@@@@/K@@DO*@@@@GH@@@[*C@@@@W@#;@[./K@@DOCU
)@@G@@@@@@@W/,0@@@/K@@O<CH@@@C)C?[F]]-)K^G]A[#@C]^^@@@/,0@@@/K@@DO*@@@@GH@@@[>CV
)@@G@@C@@@@W@#"@[./K@@DO@@@@@W/,0@@@CI@@@C)C5[F#@)CS^G]A@K^CEA@@@@@@@@@W/,0@@@CW
)@@G@@/K@@DO*@@@@GH@@@[<C@@@@W@^[@[./K@@DO@@@@@WCJ@@@C)C"[F@K0CS^G@)CKOG]@@@@@CX
)@@G@@/K@@DO@@@@@U/,0@@@/K@@DO*@@@@GH@@@[(C@@@@W@^^@[./K@@DOCK@@@C)DB[F#@-]K0CCY
)@@G@@S@K[#@@@@@@@[@@@@:C/@@@ /K@@DO*@@@@GG/@__5@^C@[.@@@@@U/,0@@@@^B@[.CL@@@CCZ
)@@G@@)DK[F@^G]A[]I-)K^G@@@@@@C/@@@[@^H@[./K@@QQ@@@@@%/,0@@@[@@@@RG@@@@RC/@@@[DA
)@@G@@/K@@CCCM@@@C)DT[M^G]A@K0]A[#@@C.)@@C[[@@@,G[@@@SC.@@@^[@)@@!G/)@@[[@)@@?DB
)@@G@@C@)@@S[@@@@@G@@@@@CN@@@C)D<[F#@-)^G]A@K0CS^@@@@@/C@@D,G@@@@SH@@@@RC/@@@]DC
)@@G@@[]@@@SG]@@@SC"@@@I[[)@@\G[)@@SCO@@@C)D?[EK[@K^G]A[#@@@@@@@@@ @[@@@O@K@]#DD
)@@G@@R@K@@?@^P@[./K@@QXN@0@D1C8)@@E/K@@D2*@@@@GCP@@@C)D5[F#@-)^G]A@K-*S^G@@@@DE
)@@G@@@^T@[.@@@@@%/,0@@@ @[@@@O@K@]#R@K@@, @[@@@O@K@]#R@K@@!CQ@@@C)D"[F#@-)K+*DF
)@@G@@S^[#@-)K0@@@*@@@@GH@@@[SC@@@@U@^W@[./K@@FA@@@@@U/,0@@@ @@@@1 @@@@0CR@@@CDG
)@@G@@)EB[V@@K@^@@H@@@@@C/@@@[/K@@EO(@@@@GH@@@@@C/@@@[/K@@EO0@@@@G*@@@@GD@@@@@DH
)@@G@@/K@@E>CS@@@C)EM[EK^G]A[#@]A[#@@@@@@@]@)@@RH@)@@RC/)@@[[@[@@@C@@@@%O@K@]#DI
)@@G@@R@K@@R/K@@D;]@@@@@CT@@@C)EV[F@K0CS^CUA[#@- K0C@@/K@@FA@@@@@U/,0@@@@^%@[.DJ
)@@G@@@@@@@%/,0@@@ @@@@0 @@@@1/K@@D;CU@@@C)E=[F#@-)K0]@CS^CEA@@@@@@@@@@U/,0@@@DK
)@@G@@[@@@@0C/@@@[/K@@E\*@@@@GH@@@[WC@@@@U@^:@[.CV@@@C)E![F@K0CK=G]A[#@]@@@@@@DL
)@@G@@/K@@F6(@@@@GG/@__4[@@@@V@^0@[.@@@@@U/,0@@@@^\@[./K@@FACW@@@C)E6[N#@@)CS[DM
)@@G@@@K$*S@@^5@[.'^@@@@8];@E_$'0@@BRA0@@V/K@@GQ1@@@@G*@@@@GG/@__8C@@@@VCX@@@CDN
)@@G@@)F@[N@K^[@K^@K0]A@H@)@@0C/)@@[[@@@@VC/@@@#/K@@OC/K@@FH/K@@GQ/K@@GW/K@@FODO
)@@G@@/K@@FOCY@@@C)FE[MK^@K0]@CS^@@@/K@@EX[@@@@1C/@@@[/K@@OC(@@@@GH@@@@1C/@@@[DP
)@@G@@/K@@FS/K@@F0(@@@@ICZ@@@C)FO[F#@)]@-)K0CS[#@@@@@@A@K@]^[@[@@@C@@@@%O@K@]#DQ
)@@G@@R@K@@R/K@@F0*@@@@G/C@@FSD@@@@0DA@@@C)FX[MK0]@CS^G@CS@@H@@@@RC/@@@[]@[@@@DR
)@@G@@R@K@]^H@@@@%C/@@@[/K@@F>*@@@@GH@@@@VC/@@@[DB@@@C)F$[F#@-)^[]Y-)K^[@@@@@@DS
)@@G@@/K@@O</K@@EW/K@@DS@ ^@[.'^@@@@8];@F?$'0@@^RA0@@V]@@@@RDC@@@C)F0[M^@K^@K0DT
)@@G@@]@@@@@/K@@GQ(@@@@GH@@@@1C/@@@[/K@@GQ/K@@FS*@@@@G/C@@F5H@@@@@C/@@@[DD@@@CDU
)@@G@@)F'[F]A-)K0CS^G@)CS^G@@@H@@@[:C@@@@U/K@@II(@@@@GH@@@[%C@@@@U@ E@[.@@@@@2DV
)@@G@@/,0@@@DE@@@C)G#[MK^G]A@K@@@@@@1@@@@G*@@@@GH@@@@@C/@@@[/K@@MV(@@@@GH@@@[?DW
)@@G@@C@@@@U/K@@MD(@@@@GDF@@@C)GH[F@K0CS[@K<*S^[#@@@@@@ P@[./K@@QQ@@@@@2/,0@@@DX
)@@G@@/K@@LF(@@@@GH@@@[$C@@@@U/K@@GQDG@@@C)GQ[M^@K^[#@)CL4G@@@@@@%/,0@@@/K@@M1DY
)@@G@@(@@@@1/K@@G</K@@H>*@@@@G/C@@GVH@@@@@C/@@@[DH@@@C)G)[F@K0C]^X#@)CS^G]A@@@DZ
)@@G@@O@K@]@R@K@@S@ X@[./K@@QQ@@@@@%/,0@@@/K@@OC@ V@[./K@@QQDI@@@C)G([F#@-)^@KEA
)@@G@@^C+A[#@@@@@@@@@@[,@@@@[!/,0@@@^^K@G5N8M@@@^^K@G3N8L@@@O@)@]#R@)@@RDJ@@@CEB
)@@G@@)G2[F#@)CS^[#@)CS^G@@@@@C/@@@[@ Y@[.@@@@@Y/K@@N_@@@@@R@@@@G5@@@@@X@@@@G3EC
)@@G@@@@@@@UDK@@@C)G;[N#@C@-)^@K0C@@/K@@HI[@@@@XC/@@@#/K@@H^*@@@@GH@@@@XC/@@@]ED
)@@G@@/K@@H (@@@@GH@@@@1DL@@@C)H [MK0]@CS^@K0CS@R@K@@?[@@@@XC/@@@B/K@@HI[@@@@XEE
)@@G@@C/@@@]/K@@HG(@@@@GH@@@@XC/@@@]DM@@@C)HJ[N#@@-)K0CS@K0@G@@@@SC/@@@][@+@@@EF
)@@G@@C@)@@XO@)@]#R@)@@S[@[@@@G/@@@[C@[@@@O@K@]#DN@@@C)HT[N#@CS^G]@C@)C@/K@@QXEG
)@@G@@N@0@H<C8)@@E/K@@H=*@@@@G/C@@H)G@@@@SH@@@@RC/@@@][@@@@SDO@@@C)H<[N#@)]A@@EH
)@@G@@@@@@@@C.@@@EC/)@@[C8@@@@1@@@@I*@@@@IG/)__9C@)@@VC/@@@[/K@@N_@ !@[.DP@@@CEI
)@@G@@)H![F#@@C]A[#@-)@@@@@@@@R@)@@RO@K@]@R@K@@S/=K@OC)@@@@IC8)@@@1@@@@K*@@@@KEJ
)@@G@@H[@@@VDQ@@@C)H6[F#@C@)CL^G]A[#@@@@@@@@@@@U@@@@@3@@@@[\/,0@@@^^K@I[N8M@@@EK
)@@G@@^^K@H_N8L@@@O@)@]#DR@@@C)H_[F@K0C]A[@K0CS[#@@@@@H@@@@3C@@@@@@ 1@[.@@@@@YEL
)@@G@@/K@@N_@@@@@R@@@@I[@@@@@X@@@@H_DS@@@C)IC[E^[#@C]^ #@)@@@@@@@@/K@@GM@@@@@WEM
)@@G@@/,0@@@/K@@G'[@@@@@C@@@@3/K@@IH1@@@@G*@@@@GDT@@@C)IL[F#@-)K0]@-[K0C]A@@@@EN
)@@G@@@ 8@[./K@@GM@@@@@W/,0@@@/K@@GM*@@@@GH@@@[0C@@@@W@ 5@[.DU@@@C)IU[F#@-)K0CEO
)@@G@@S^G]A[#@-)@@*@@@@GH@@@[1C@@@@WO@0@]#R@0@@!O@)@]#R@)@@?O@K@]#R@K@@SDV@@@CEP
)@@G@@)I<[N@^@^CUA[#@@@@G/@@@[C@]@@@@ "@[.@@@@@4/,0@@@[@#@@@C/@@@[/K@@OC*@#@@@EQ
)@@G@@/K@@GMDW@@@C)I![M@K0CS[#@-)K@@/C@@I9G@@@@SH@@@@RC/@@@][@@@@SG@@@@SC/@@@]ER
)@@G@@[@-@@@C/)@@C[@]@@@DX@@@C)I7[EK[@K^G]^ #@)@@@@@@@/K@@JM@@@@@U/,0@@@@A#@[.ES
)@@G@@/K@@QXN@0@I/C8)@@E/K@@I.*@@@@GDY@@@C)J@[F#@-]K0CS^G@)]@@@@@@/K@@JM*@@@@GET
)@@G@@/C@@JDG/@__8[@@@@V@A @[.@@@@@U/,0@@@@A^@[.DZ@@@C)JD[N#@C@)]A@K^G@@R@0@@REU
)@@G@@/K@@K](@@@@GH@@@@VC/@@@F/K@@JV*@@@@G/C@@JIG/@__4C@@@@VEA@@@C)JN[F#@CS@K0EV
)@@G@@CS^[#@@@@@@@R@)@@!/K@@OV]@)@@RH@)@@RC/)@@[]@#@@@H@@@@4C/@@@[O@0@]#EB@@@CEW
)@@G@@)JW[F#@-)K0]@C]^L#@@@@@@@@@@[\/,0@@@^^K@J(N8L@@@^^K@J$N8M@@@O@K@]#R@K@@REX
)@@G@@O@)@]@EC@@@C)J>[F#@-)K^G]@-)K^G]A@@@@AJ@[.@@@@@Y/K@@N_@@@@@R@@@@J(@@@@@XEY
)@@G@@@@@@J$@@@@@U@@@@@3ED@@@C)J,[EK0]@-#K0CS[#@@@@@@@H@@@@:C/@@@]@AM@[.@@@@@:EZ
)@@G@@/,0@@@/K@@J.(@@@@GH@@@@XC/@@@[EE@@@C)J7[F#@-BK0C]A[@K0CS@@@@C/@@@]O@0@]#FA
)@@G@@R@0@@!/K@@OC@AN@[./K@@QQ@@@@]^/,0@@@]@@@]^EF@@@C)K@[EK^G]A@K^C+A[#@@@@@@FB
)@@G@@@@@@[V@@@@[U/,0@@@^^K@KGN8M@@@O@)@]#R@)@@R/K@@N_[@#@@@EG@@@C)KD[F#@-)K0CFC
)@@G@@]A[@K0CS^G@@R@K@@!@AR@[.@@@@@Y/K@@N_@@@@@R@@@@KG@@@@@X@@@@@[@@@@@UEH@@@CFD
)@@G@@)KM[F#@-)^G@-)K0@@@@@@@@[[#@@@C.@@@#O@0@]#R@0@@![@-@@[C@)@@][@[@@@C@@@@[FE
)@@G@@O@K@]@EI@@@C)KV[F#@-)^@^G]^!#@@@@@@@@@@@@[/,0@@@[#)@@5N.@@@AC_)@@]/K@@N_FF
)@@G@@*@@@@MH[)@[2C[)@@UEJ@@@C)K=[F#@-)K0CS^G@)CK=G@@@@@@@@W/,0@@@/K@@K5(@@@@GFG
)@@G@@H@@@[WC@@@@W@A)@[.@@@@@W@@@@@5EK@@@C)K![##@]@C@-)@@@@@)@_@C@0     [@@@@5FH
)@@G@@C/@@@D8L@@K-G_)@@[/K@@N_*@@@@GG/@__5@A<@[.EL@@@C)[@@C@)K5@;]G-)K0CS^G@-)FI
)@@G@@@@@@@@H@@@@5C/@@@[@A*@[.@@@@@_@@@@[U@@@@@[/,0@@@______EM@@@C)K/[F#@-)K0]FJ
)@@G@@@-GK0CS^@@@@@@@@L^@@@@@5@@@@@[/,0@@@^^K@L^N8M@@@O@)@]@R@)@@!]@@@@5EN@@@CFK
)@@G@@)L [F#@-)K0@)CKOG]@@@@@@/K@@GM@@@@@W/,0@@@/K@@N_[@[@@@C/@@@^O@K@]#R@K@@!FL
)@@G@@@A%@[.EO@@@C)LI[F#@-)K0]@-[K0C]A@@@@@A0@[./K@@GM@@@@@W/,0@@@/K@@GM*@@@@GFM
)@@G@@H@@@[3C@@@@W@A!@[.EP@@@C)LR[F]^-)K0CS^G]A[#@-)@@C/)@@[O@)@]#R@)@@RO@0@]@FN
)@@G@@R@0@@S[@@@@6@A1@[.@@@@@W/,0@@@EQ@@@C)L)[U@^G@@@@)@)@@GC8@@@@1@@@@K*@@@@KFO
)@@G@@G.@__8C[@@@6C/@@@[C8)@@@0@@@@G*@@@@GG/@__5ER@@@C)L:[F@^@K^C+A[#@-)@@@@@@FP
)@@G@@@@@@@W@@@@@3@@@@[\/,0@@@^^K@L6N8M@@@^^K@L4N8N@@@/=0@GMES@@@C)L4[F@K0C]A[FQ
)@@G@@@K0CS[#@@@@@H@@@@3C@@@@@@A4@[.@@@@@Y/K@@N_@@@@@R@@@@L6@@@@@X@@@@L4ET@@@CFR
)@@G@@)L.[M^[#@]A@K@@@@@C/@@@ /K@@J2(@@@@GH@@@@XC/@@@][@@@@@C@@@@3/K@@M]1@@@@GFS
)@@G@@*@@@@GEU@@@C)MB[F#@)CL^G]A[#@-)K0CS@@@@@@:@@@@@X@@@@@[@@@@@U@@@@[!@@@@[UFT
)@@G@@/,0@@@/K@@HI[@@@@XEV@@@C)MK[F#@)CS^G]A[#@C@@@@@@C/@@@^/K@@GM*@@@@GH@@@[4FU
)@@G@@C@@@@[@A;@[.@@@@@Y/K@@GM@@@@@:EW@@@C)MT[F#@)CL^G]A[#@-)K0CS@@@@@@:@@@@@XFV
)@@G@@@@@@@[@@@@@U@@@@[5@@@@[U/,0@@@/K@@HI[@@@@XEX@@@C)M+[F#@)CS^G]A[#@C]A@@@@FW
)@@G@@C@@@@]/K@@GM*@@@@GH@@@[6C@@@@[@B@@[.@@@@@Y/K@@GM@@@@@:EY@@@C)M:[F#@C@-)KFX
)@@G@@^G]A@@@@@@@@C@[@@@O@K@]#R@K@@,/K@@HI[@@@@XC/@@@A/K@@GM*@@@@GH@@@[7EZ@@@CFY
)@@G@@)M4[N#@]@-)K0CS^@@H@#@@@C/@@@C/K@@NB(@@@@7O@0@]@R@0@@,/K@@N*(@@@@GG/@__/FZ
)@@G@@[@@@@7FA@@@C)M"[N@^@K0]A[#@)@@C/@@@S/K@@ND[@)@@\G@)@@\C/)@@][@@@@8C/@@@CGA
)@@G@@/K@@N**@@@@G/C@@N[FB@@@C)NC[F#@CS^G]A[#@CS^G@@@@O@K@]#R@K@@R[@]@@@O@)@]#GB
)@@G@@R@)@@,[@@@@7G@@@@7C/@@@[[@@@@8FC@@@C)NL[F#@-)^@K^C+A[#@@@@@@@@@@@8@@@@[8GC
)@@G@@/,0@@@^^K@NXN8L@@@^^K@NVN8N@@@O@0@]#R@0@@\FD@@@C)NU[F#@)CS^[#@)CS^G]A@@@GD
)@@G@@R@)@@,@BO@[.@@@@@Y/K@@N+@@@@@R@@@@NX@@@@@X@@@@NV@@@@[RFE@@@C)N<[F#@-)K0]GE
)@@G@@@-#K0CS^G@@@R@0@@R@BR@[.@@@@@@/,0@@@/K@@N_[@]@@@C@@@@XO@)@]#O@)@@7FF@@@CGF
)@@G@@)N?[F#@CS@K0CS^C+A@@@@@@@@@@[8/,0@@@]@)@@RH@)@@RC/)@@[]@#@@@H@@@@@C/@@@[GG
)@@G@@O@0@]#FG@@@C)N5[F#@-)K0CS^G]A[@K0CS@@BU@[.@@@@@Y/K@@N_@@@@@:@@@@@:@@@@@XGH
)@@G@@@@@@@[@@@@[R@@@@[YFH@@@C)N"[F@K0]@-JK0C]@)@@@@@@/K@@M1/K@@EW/K@@DS@BW@[.GI
)@@G@@'^@@@@8];@O#$'0@@ RA0@@Y/K@@N_FI@@@C)OB[F@K-*S^G]A[#@CS@@@@@]@[@@@H@@@@@GJ
)@@G@@C/@@@[O@K@]#R@K@@R@BX@[.@@@@@@/,0@@@/K@@O<FJ@@@C)OK[EK0CS^CEA[@K0CK=G@@@GK
)@@G@@@@@@@U/,0@@@@B)@[./K@@O<@@@@@U/,0@@@]@)@@RH@)@@RC/)@@[FK@@@C)OT[F#@-)^G]GL
)@@G@@@C]A[#@@@@@@[@@@@YC@@@@V/K@@ON*@@@@G/C@@O)H@@@@VC/@@@#[@@@@V@B-@[.FL@@@CGM
)@@G@@)O+[N@^G]A@K^[@K0@C/@@@[@B*@[./K@@Q-N@0@O%/K@@O:*@@@@GH@@@] C@@@@R @@@@@GN
)@@G@@/K@@N_FM@@@C)O?@'K&*S^G] [#@-)@@@@@@)[[@C@(061H @B:@[.@@[@[[/,0@@@@B%@[.GO
)@@G@@@@@@[U/,0@@@[@@@@@FN@@@C)[][S@@@@@@@)      BELOWD BY # MARKEOL USER SYMBGP
)@@G@@MPROPEOR.  ILE ERR   SCA***** FO@@@C)O3[F]+CS^G]A[#@-)^G@@@@[[@@@;C[]@@@GQ
)@@G@@O@)@]#R@)@@'[@)@@'C@)@] [@@@@9C/@@@['^@@@@FP@@@C)O/[EK0CS^G]@-)^G]A@@@@@GR
)@@G@@[@#)@@C@@@[WN.K@@FR@0@[9/K@@PB(@@@@9[#)@@/N[@@][C_)@@[FQ@@@C)P [F@K0CS[#GS
)@@G@@@CS^G]A@@@@@H@@@@;C@@@@.[@@@@"H/@@[@[@@@@.;@@@@YC@@@@/ @@@@98LK@P#FR@@@CGT
)@@G@@)PI[E^[#@)CNOG]A@@@@@@@@C/@@@[@C]@[.@@@@[Y/,0@@@/K@@QL(@@@@9/K@@P81@@@@GGU
)@@G@@*@@@@GFS@@@C)PR[F#@]A[]WCS^G]A@@@@@@@@@@[U@@@@@G@@@@]A@@@@@@/,0@@@]@@@]AGV
)@@G@@G/@__";@@@@YH@@@@/FT@@@C)P)[F#@-)K*CS^G]A@K0CO)@'^K@@@C8[)@FN.K@@ER@K@[9GW
)@@G@@@C^@[.@@[@[H/,0@@@@C#@[.@@@@['FU@@@C)P(@3@K0]A[]=)@@@@)[H@S@)     0A6,A4GX
)@@G@@(31X,18LK@P?'^K@@@C8])@@N.K@@ER@)@[98LK@P$FV@@@C)P\[N]+CS[@K^[#@)@C/@@@[GY
)@@G@@/K@@QL@CK@[./K@@Q-N@0@P6/K@@P7*@@@@GH@@@@9C/@@@]'^@@@@FW@@@C)[K@K@)P9@3#GZ
)@@G@@@-)K0CS^C2A@@@@@@@@@@@@[/,0@@@]@)@]AH@)@@;C@)@@"[@@@@9______#     FX@@@CHA
)@@G@@)P_[F#@-)K0]A[#@-)K@@@@@*@@@@G/C@@QDG@@@@R]@@@@'H@@@@'C/@@@[@CN@[.@@@@[KHB
)@@G@@@@@@]AFY@@@C)QC[F@^G]@-)K0]A[@@@@@@@/K@@PG[@@@@;C@#@@@O@0@]#R@0@@'/K@@PNHC
)@@G@@[@@@@9C/@@@]/K@@QGFZ@@@C)QL@%K^[@K0@)[M@)@@@@@@@ IN S2 ERRORSYSTEM(023H0HD
)@@G@@@CX@[./K@@Q-N@0@QP8L@@O"G_)@@[GA@@@C)[Q@C@)QQ@;])-)K0COO[@K0@@@@@@@C-@[.HE
)@@G@@/K@@Q-N@0@QW'^@@@@@CZ@[.@@[@[M/,0@@@2SDC) GB@@@C)QX[F#@-N^G]A[#@-)K0CS@@HF
)@@G@@R@K@]H9\)@]F9,@@]D9!)@]BR]0@["[^)@[;H8)@@[/K@@@@!^)@[;GC@@@C)Q&@:#@-)K0CHG
)@@G@@S^G@@@)[;@C@)Q:@F#@@@@@@/K@K[;@@F@@@*4@K[;N[K@]LN[@@]KR@0@]JR@)@]IGD@@@CHH
)@@G@@)Q?@F]*@@@@@)[.@K@)Q!@+K0CS^G@@@@@@@9()@]B[^@@[;AA0@["C8@@@G@C-@@]S22SDCHI
)@@G@@/K@@@@GE@@@C)Q1[F#@-)K0CS^G]A[#@C@@@[^@@PWC8FK@@^[K@]L^[@@]KA@0@]JA@)@]IHJ
)@@G@@A@K@]H9:)@]F9%@@]DGF@@@C)Q'[N@^G@-)^[@K^@@[^@@^0[^@@^.[^@@AT[^@@F1C8FK@^HK
)@@G@@[@K@] C@VK@#[@@@]@C8FK@][^@@@RGG@@@C)R^[N@K^[@K^[@K[@@[^@@#>C8FK@ [^@@@DHL
)@@G@@[^@@C+[^@@GE[^@@B][^@@BQ[^@@BW[^@@A)[^@@GRGH@@@C)RI[N@K^[@^[@K^[@@[^@@DUHM
)@@G@@[^@@DT[^@@EL[^@@@F[^@@EHC8FK@A[^@@^R[^@@^K[^@@@E[^@@#&GI@@@C)RS[N@^[@K[@HN
)@@G@@K[@@@@[^@@M[C8FK@E[^@@O<[^@@O?C8FK@C[^@@EM[^@@EC[^@@@HC8FK@B[^@@C)GJ@@@CHO
)@@G@@)R+@:@K^[@K@)[R@)@@@@@@@@@@@@[,     /     @@@@@@/K@@@@[^@@@I[^@@L;[^@@IAHP
)@@G@@[^@@IGGK@@@C)[V[S@@@@@@@A     X     L     U     TE    DISCRERANGE @@@@@]HQ
)@@G@@'           @@@@@CGL@@@C)[&[S@@@@@@@T     @@@@@#@@@@@A@@@@@ M     O     HR
)@@G@@W     E     C     B     S     GM@@@C)[1[K@@@@@@@@@@@@@@@@@[@@@[@@[@@@@@^HS
)@@G@@G     MISSIN@@@@@BOTHER Y     V     =     GN@@@C@@^@@]@@A@@P@@0@@[@@4@@@HT
)@@G@@@@ @]M@C@@R$S1BUF       S1SKIP      S22PCT      S1WHR       S22FDS      HU
)@@G@@S1SCAN      S1PRST      S1BACK      S1CKVN      S1GTVT      S1CKVI      HV
)@@G@@S1PRFT      S1VLU       S1PCHD      S1TCHS      NERR2$      NPRT$       HW
)@@G@@NIO2$       NIO1$       NERR4$      NERR3$      S22SDC      @@[@@@@@@@Q!HX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@K@)@@@;]]A^GCSK0--#@@[D@@L@@@@@^@@@@@^@@@@@^HY
)@@G@@@@@@@#@@@@@@/,0@@@      XT2$$SAA@C*,)@B[F#]@C]^O[#]A^G@@@@@@@@@@@^@@@@@EHZ
)@@G@@@@@@@@/K@@@Y/,0@@@/K@@@N*@@@@G/C@@@FD@@@@#AB@C*,)@K[F#]A^GCS[#@-)@@@@@@@IA
)@@G@@[@@@@AT/@@@W[@@@@ W/@@@W;O@@@=C@@@@O@[G@@L@@@@@^@@@@@^AC@C*,)@T[F#]A^[@KIB
)@@G@@0C]@-)@@@@@@@[M@@L/K@@]4N@0@@-C8)@@#@[L@@L/K@@]8N@0@@X @@@@C @@@@BAD@C*,IC
)@@G@@)@+[MK0-)^GCS^GCS@[#)@@D[@)@@S[@@@[^Q@K@@PR@K@@FC_)@@[G/)__"C@)@@RG@@@@QID
)@@G@@C/@__"AE@C*,)@?[MK0--#@C]^O[#@@@@@@@/K@@[D/,0@@@/K@@[@0@@@@G*@@@@GH@@@@AIE
)@@G@@[@@@@BG@@@@BC/@@@[AF@C*,)@6[F#@--#]A^GCSK0@@@@@@C/)@@[[@@@@CG@@@@ C@@@@CIF
)@@G@@@[V@@L@@@@@A@@@@@C@@@@@@@@@@@GAG@C*,)@_[N#]A^G@C]@)CS@@[-@@L/K@@]8N@0@[CIG
)@@G@@8L@@@:G_)@@[[@]@@@C@[)@@O@)@@SR@)@@B[@)@@BAH@C*,)[D[MK^[#@--#]A@@@0@@@@GIH
)@@G@@*@@@@GH@@@@A[@@@@BG@@@@BC/@@@[@[+@@L/K@@]4N@0@[GC8)@@#AI@C*,)[N[F@K+)CSKII
)@@G@@0CSK0-)@@@@@@[$@@L@@@@@A@@@@@C@@@@@@@@@@@G@@@@@@/K@@[3/,0@@@/K@@[-AJ@C*,IJ
)@@G@@)[W[F#]A^G]A[#]A^G@@@@@@C@@@@HO@)@@BO@)@@RR/)__"[@)@@BC/)@@[[@@@@CG@@@@ IK
)@@G@@C@@@@CAK@C*,)[>[EK+)CSK0CSK0-)@@@@@@@[:@@L@@@@@A@@@@@C@@@@@@@@@@@G@@@@@@IL
)@@G@@/K@@[3/,0@@@[@]@@@AL@C*,)[,[F#]A^[@K0C]@-)@@@@@@@[\@@L/K@@]4N@0@[6C8)@@[IM
)@@G@@@[,@@L/K@@]8N@0@[2 @@@@C @@@@BAM@C*,)[7[F#]A^[@K0--@K+)@@@@@/K@@]0/,0@@@IN
)@@G@@/K@@]D*@@@@B@[3@@L/K@@]8N@0@[; @@@@C @@@@BAN@C*,)]@[F#]A[#]A^GCSK0-)@@@@IO
)@@G@@[@@@@CG@@@@ C@@@@C@[8@@L@@@@@A@@@@@C@@@@@@@@@@@I@@@@@@AO@C*,)]D[MK0-)^GCIP
)@@G@@S^GCS@[#)@@D[@)@@S[@@@[^Q@K@@TR@K@@FC_)@@[G/)__"C@)@@RG@@@@UC/@__"AP@C*,IQ
)@@G@@)]N[MK0--#@C]^O[#@@@@@@@/K@@]0/,0@@@/K@@]$0@@@@G*@@@@GH@@@@A[@@@@BG@@@@BIR
)@@G@@C/@@@[AQ@C*,)]X[F#@--#]A^GCSK0@@@@@@C/)@@[[@@@@CG@@@@ C@@@@C@]@@@L@@@@@AIS
)@@G@@@@@@@C@@@@@@@@@@@IAR@C*,)]&[N#]A^G@C]@)CS@@]A@@L/K@@]8N@0@]\8L@@]MG_)@@[IT
)@@G@@[@[)@@C@]@@@O@)@@SR@)@@B[@)@@BAS@C*,)]0[EK^[#]A^D]A^G@@@@@@@R]0@@M[^)@@JIU
)@@G@@H8)@@[/K@@@@!^)@@J@]B@@L/K@@]4N@0@]3C8)@@#AT@C*,)]9@:#]A^GCSK0@@@@)@J@C@IV
)@@G@@)]"@F#@@@@@@/K@K@J@@F@@@*4@K@JN[@@@ZR@)@@YR@K@@X9\)@@VAU@C*,)]_@F]S@@@@@IW
)@@G@@)@L@K@)#@@<#]A^GCS@@@@@@A@K@@X9:)@@V[^@@@JAA0@@M@]B@@#S22IOD/K@@@@AV@C*,IX
)@@G@@)#^[N#]A@K[@K^[@@@[^@@[%[^@@]][^@@@7[^@@]YC8FK@@/\K@#@C8@@@^/KH@@@^[@@@ZIY
)@@G@@A@)@@YAW@C*,)#I[N@K0CSK[@^G@@@C@VK@[[@@@@PC8FK@@/\K@#@C8@@@^/K@@@@[@K@@OIZ
)@@G@@C@VK@[[@@@@R[^@@[SAX@C*,)#S[N#]@C]@C]@C@@@/\K@#@C8@@@^/K@@[7/\K@#@C8@@@[JA
)@@G@@/K@@[H/\K@#@C8@@@]/K@@@+[@K@@QAY@C*,)#+@%K0CSK@@)@E@)@@@@@@@ENDFLG@@@@@#JB
)@@G@@@@[@@@@@@@@[/K@@[/[@K@@UC@VK@[[@@@@TC8FK@@AZ@C*,)@I@C@@@@@@@@@@@@@@@@@@@JC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]BA@C*,@@@@@@@@@@@@JD
)@@G@@@@@^@@@@@@@@@@@A@@@@@@@@@@@C@@@@@@@@@@@E@@@@@@@@@@@G@@@@@@@@@@@I@@@@@@@@JE
)@@G@@@@^@@]@@A@@^@@I@@ @@+@@@@@#@@)@C@@#$S1UNIT      S1DRUM      NERR4$      JF
)@@G@@NERR3$      S22IOD      @@[@@@@@@@#BS22DWR      @@[@@@@@@@#NS22DEF      JG
)@@G@@@@[@@@@@@@#US22DRW      @@[@@@@@@@#XS22DRD      @@[@@@@@@@#)@@@@@@@@@@@@JH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F#[#@^G[#@K0@@@@@@@@JJ
)@@G@@R@0@^KG.@__.C[@@^IG/)__.C@)@^HG/@__.C8FK@[R@)@^JR@K@^IAA@@@F)@D[N#@K0^G[JK
)@@G@@#@K0@@G_)__"C#)@^KG_@__"C#@@^JG")__.C])@^JG"@@@[C]@@^JG.)__"C[)@^LAB@@@FJL
)@@G@@)@N[F#[#@K0K0^G^G^G@@@@@[[@@^Q[@)@^P[@@@^OG_)__.C#)@^K[#)@^NG_)__.C#)@^LJM
)@@G@@[#)@^MAC@@@F)@W[N#[#[#[#[#@@K@/K@@@(*@@@@@ @@@@@ @@@@@ @@@@@[#)@^V[#@@^UJN
)@@G@@[])@^T[]@@^S[[)@^RAD@@@F)@&@N@K@@@@@)[U@K@)@*@V#[][#@@@@@@@@@@@@#X/,0@@@JO
)@@G@@@[(@#!______REWIND/K@@OKN@0@@*AE@@@F)@:@<#[#[#[#@@@@@@)[W@K@)@\@F#@@@@@@JP
)@@G@@@[%@#!______REWIND@@@@@<@@@@@<@@@@@<@@@@[UAF@@@F)@0[F][#[#[#[#[#[#[#@@@@JQ
)@@G@@C/@@@[ @@@#C@[:@#!@@@@@<@@@@@<@@@@@<@@@@[W@@@@#Y/,0@@@AG@@@F)@9@3#[#@K[@JR
)@@G@@@@@@@@)[Y@K@@@@@@@______READ  /K@@N;*@@@@G/G@@@_H@@@@@[@@@#CG@@@#CAH@@@FJS
)@@G@@)@_[F][#[#[#[#[#[#[#@@@@*@@@@GD@@@@=@[0@#!@@@@@=@@@@]"@@@@#Z@@@@[Y@@@@#XJT
)@@G@@/,0@@@AI@@@F)[C@%K^DOG^G@@@@@@)[)@S@@@@@@@I/O TR***** (028H0@[3@#!@@[@[)JU
)@@G@@/,0@@@/K@@[M0@@@@GAJ@@@F)[<@S@)[H@3]SK^[#[#@@@@@R[@@#C@[6@#!/K@@OGN@0@[LJV
)@@G@@C8)@@H'^@@@@SC2)  IN S22OUBLE AK@@@F)[N[N#@^G[@K0^G^G@[@@@@>G@@@# T/@@@FJW
)@@G@@C@@@##/K@@[9(@@@@GH@@@]";K@@@]C@^@@[O[@@^OAL@@@F)[X[F#[@K0K0K0^G^@@@@@@@JX
)@@G@@*@@@@G/C@@[$H@@@]_C/@@@][@@@@>G@@@#@C@@@@>/K@@[+(@@@#]AM@@@F)[&@3@K0^G^GJY
)@@G@@^G@@@@)[&@K@@@@@@@______SKIP  (@@@@>[@@@@>G@@@@>;@@@@<C@@@# /K@@[:AN@@@FJZ
)@@G@@)[?[F@K)K0K0K0K0K0K0K0@@D@@@@=@]@@#!@@@@@=@@@@@<@@@@@>@@@@[&@@@@#X/,0@@@KA
)@@G@@/K@@@_AO@@@F)[5@+^[@@@@@)[*@K@)[9@N#[@@@@@/K@@]](@@@#]______READ  /K@@[EKB
)@@G@@/K@@@_0@@@@G*@@@@GAP@@@F)[;[F][#[#[#@K0K0K0K@@@@/G@@]AD@@@@=@] @#!@@@@@=KC
)@@G@@@@@@@@@@@@#@@@@@[*@@@@#X/,0@@@AQ@@@F)]^[MK^G^[#@@K@@@@/K@@]Q0@@@@G*@@@@GKD
)@@G@@H@@@@@T/@@@FC@@@##/K@@]=(@@@##/K@@[E*@@@@GAR@@@F)]I@V]P#[#@@)[%@0@@@@@@@KE
)@@G@@BLE INT TROUE LIMISTORAG***** (038H0@]G@#!@@[@[%/,0@@@AS@@@F)[0@K@)]L@:]KF
)@@G@@SK^[#@)[2@K@______READ  @]J@#!/K@@OGN@0@]PC8)@@H'^@@@@2)     S22SCAT@@@FKG
)@@G@@)]Q[F#@K0K)K0K0K0^G@@@@@@@@@@=@@@@@@@@@@^W@@@@[2@@@@#X/,0@@@[@@@^WT/@@@FKH
)@@G@@C@@@##AU@@@F)]Z@3#[#[@^[#@@@@@)[4@K@@@@@@@______READ  (@@@# /K@@[E*@@@@GKI
)@@G@@/G@@]=D@@@@=@]K@#!AV@@@F)]>[F@K)K0K0K0^G^G@@@@@@C/@@@]@]P@#!@@@@@=@@@@@@KJ
)@@G@@@@@@# @@@@[4@@@@#X/,0@@@/K@@#UAW@@@F)],@;#[@^[#[@@@@@@)[6@K@______READ  KK
)@@G@@*@@@@G/G@@]6D@@@@=/K@@#C*@@@@G/C@@]2H@@@]_AX@@@F)]5[F@K)K0K0K0^G^G^G@@@@KL
)@@G@@D@@@@=@]U@#!@@@@@=@@@@@@@@@@# @@@@[6@@@@#X/,0@@@/K@@[EAY@@@F)]"@N@@@@@@@KM
)@@G@@)[8@K@)#@@V@K)K0@@@@@@@@@@@@#X/,0@@@/K@@[E______READ  *@@@@G/G@@#[AZ@@@FKN
)@@G@@)##[F#[#@K0K0K0[@@@@@@@@/K@@#L(@@@@GH@@@@@C@@@#C@]X@#!@@@@@=@@@@@@@@@@# KO
)@@G@@@@@@[8BA@@@F)#G[N#[@^[@K0[@@@@C/@@@[/K@@#U0@@@@G*@@@@GD@@@@=/K@@#U/K@@[EKP
)@@G@@*@@@@G/G@@#KD@@@@=BB@@@F)#Q[F#[#@K^G^G^G^G^G@@@@C@@@#[[@)@#FC@)@#][@@@#EKQ
)@@G@@C@@@# /K@@[E*@@@@GG@@@# G@@@@=BC@@@F)#Z[F#[#[@^[#[#[#[#@@@@@[@@@#HC@@@#BKR
)@@G@@[@@@#GC@@@#@/K@@#&*@@@@G/C@@#=D@@@#G[@@@#GBD@@@F)#*[EK0^[#[#[#@K0@@@@@@@KS
)@@G@@H@)@]_C/)@@[[@@@#IC@@@#A @@@#H/K@@#!*@@@@GH@@@]_C/@@@[BE@@@F)#1[N@^[#[@^KT
)@@G@@G[#@@@[@)@[^R[@@^MC_)@@[G@)@# C/)__"/K@@^^(@@@# /K@@^E*@@@@I/C)@#4BF@@@FKU
)@@G@@)#;[N#@^G^G^@^@@@@C/@@@[8L@@#;G_)@@[O.@@@[/K@@^B*@@@@@[@K@@@+@^@@[C/@@@[KV
)@@G@@[#)@@&BG@@@F)^ [F#[@^G^@K0K0K0@@@@@@*@@@#E[@@@#DG@@@]_C/@@@[/K@@^L[@@@#DKW
)@@G@@C/@@@]/K@@^L[@@@#DBH@@@F)^I[F@^G^COG^G^[#[#@@@@@(@@@#F@##@#!/K@@[E@@@@#)KX
)@@G@@@@@@#C/,0@@@[@@@#DC/@@@A/K@@^LBI@@@F)^R[F@[] #[#[@K0K-@@@@@@/,0@@@@#B@#!KY
)@@G@@/K@@[E@@@@#X@@@@#@/,0@@@[@@@@@C/@@@[/K@@^$BJ@@@F)^)[MK0K^G^G@^G^@@/C@@^?KZ
)@@G@@H@@@]_C/@@@][@@@@@G@@@@@C@@@#@@#C@#!/K@@[E@@@@#@@@@@@@BK@@@F)^%[MK[#@^G^LA
)@@G@@G@@@@@ @@@@I*@@@@KH[@@#@C[@@##C/)@@[ @@@@G*@@@#EC/@@@[/K@@ L*@@@@GBL@@@FLB
)@@G@@)^4[MK[#[@^@^@@@@@/K@@ L[@[@@@C/@@@[/K@@^"*@@@@G/C@@^;H@@@#EC/@@@[/=K@ LLC
)@@G@@)@@@@IBM@@@F)^"[MK0^G^G[#@^G@@[@@@@$;K@@@FC@^@@[[#)@@&[@@@[^Q[@@^MR[@@#-LD
)@@G@@C_)@@[G@@@#EC/@__"BN@@@F) C[N#[#[#@@^@@@@@C/@@@[8L@@ ^G_)@@[[[O)@[+[^@@[LE
)@@G@@C.@@Z_[@>@@[C@)@@&O[K@^QR[K@@$BO@@@F) M[N#[#@@K0@@@@@@)@@@@I @@@@I*@@@@KLF
)@@G@@H[@@]_C.@@@[C/)@@[ @@@@G*@@@@IH@)@#@C@)@##BP@@@F) W[F@K0K^G^G[#@K0@@@@@@LG
)@@G@@H@@@]_C/@@@][@)@#TC@+@@@[@@@@[C@@@#+/K@@A'(@@@# /=K@A'BQ@@@F) >[M^@K0K0[LH
)@@G@@@K0@@@D@@@#T/K@@ 00@@@@G*@@@@GD@@@#T[@@@#TC@#@@@/K@@ %1@@@@G*@@@@GBR@@@FLI
)@@G@@) \[F#[#[#@^[#[#@@@@@@@@C/@@@][@@@@[C@@@#T/K@@ 71@@@@G*@@@@G"^@@#TC@@@@[LJ
)@@G@@[@@@#TBS@@@F) 8[F#[@^[#[#@^G@@@@@@@@[@K@@@+@ @@[C/@@@[O[K@^VR[K@# /K@@AILK
)@@G@@*@@@@G/C@@ /H@@@]_BT@@@F)A[[F#[#@K0K0K0K0K0K@@@@/K@@AH(@@@@@A[K@^WO[K@^NLL
)@@G@@R[K@# [@)@#TC@=@@[O[@@^TR[@@# BU@@@F)AE[F#@K0K^G^G[#[#@@@@@@D@@@#T[@@@#TLM
)@@G@@C@ @@[O[K@^VR[K@# /K@@AM[@@@#TC@^@@[R[@@^WBV@@@F)AN[M^[#[#[#[#@^@@/K@@AZLN
)@@G@@1@@@@G*@@@@G"^@@#TC@@@@[[@@@#TD@@@#T/K@@AS0@@@@G*@@@@GBW@@@F)AX[F#[#[#[#LO
)@@G@@@^G^G^G@@@@@"^@@@[C@@@@W[#)@@*N.@@@DC_)@@[[@@@@WC@@@#<[@@@@[C@@@#TBX@@@FLP
)@@G@@)A&[F@^@K0K0K0K+K0@@@@@@@@[@@U/,0@@@[@@@@(G@@@#^G@@@@*C/@@@#/K@@A5*@@@@GLQ
)@@G@@/C@@A(BY@@@F)A\@<#[#[#[#@@@@@@)['@)@@@@@@@))    ,I1,1HI2,1H.(2H(F,@@K@#^LR
)@@G@@@@K@@(@#8@#!@@@@['BZ@@@F)A3[F]T@K0K0K0^[#[#@@@@@O[@@^OR[@@#C8L@@A<G_)@@[LS
)@@G@@[@@@@W"C@@#<C@@@@W/K@@A''^@@@@CA@@@F)A/[MK0^G^G[#[#@@@[@^@@[;K@@@][[K@@?LT
)@@G@@+[@@@%C.@@@][@0@@:+@)@@%C/)@@[[@@@@%C@^@@[CB@@@F)BA@;#@K0@@@)["@K@@@@@@@LU
)@@G@@______WRITE G[K@@JG@0@@MG[)@@O;]@@@SC]@@#@;[)@@+C[)@#CCC@@@F)BH[F#[][#[#LV
)@@G@@[#[#[#[#@@@@C/@@@[@^ @#!@@@@@<@@@@@%@@@@#X@@@@["@@@@#Y/,0@@@[[K@@%CD@@@FLW
)@@G@@)BQ[F#[#[@^G[#[#[@@@@@@@/K@@B-(@@@@?[@@@@,C/@@@A[@@@@!C/@@@B/K@@BV*@@@@:LX
)@@G@@[@@@@!CE@@@F)BZ[EK0K0K0^G^G@@@@@@@@@[@@@@@G@@@@@T@@@#@[@@@@\G/@@@[H@@@@!LY
)@@G@@C@@@@,[@@@@,C/@@@ECF@@@F)B*[F#@K0K0K0^G^G^G@@@@@C@)@@,[@@@@3G@@@@3C/@@@[LZ
)@@G@@ @@@@3[@)@@2[@)@@1C/)@@[ @@@@0CG@@@F)B1[F#[#[#[#[#[#[@^@@@@@/K@@L-*@@@@GMA
)@@G@@/G@@B'H@@@#@O[@@^PR[@@@1O[K@^HR[K@@1H@)@@!CH@@@F)B'[F#[#@K0K0K^G^G^G@@@@MB
)@@G@@H@)@@2C@)@## @@@@58L@@B.[@A)#IC@@@#=[@)@[^Q[)@@!R[)@#-CI@@@F)C#[N@^@K0^@MC
)@@G@@K0@@@@C.@@@][@)@@6C@>@@@/K@@E1*@@@@IH@)@@3C@=@@[/K@@E1*@@@@I/C)@CACJ@@@FMD
)@@G@@)CH[F#[#@K0K0^G^G@@@@@@@C")@@[[]@@@1G]@@@1C"@@@F[[)@@8G[)@@1C.)@@ [[@@@7ME
)@@G@@G[@@@1CK@@@F)CQ[N#[#@^@[#@@@@@ @@@@I*@@@@?C/)@@[ @@@@S*@@@@I/G)@CXG/)__"MF
)@@G@@C_@@@[[])@@2G])@@2CL@@@F)C)[MK[#@K0^G^G@@@C@A@@[O[)@^PR[)@@7[#@@[^G#@@@6MG
)@@G@@C_@__"[@)@@9C/)@@S/$K@C2)#@@@ICM@@@F)C%[F#[#@K0K0K^G^G^G@@@@ @@@@;[@)@@7MH
)@@G@@H@)@@68L@@C$[@)@@7G@)@@7C/)@@[]@@@@9H@@@@9CN@@@F)C3[EK0[#[#[#[#[#@@@@@@@MI
)@@G@@ @@@@/A[@@^WO[@@^PR[@@@7[#0@@'[@@@[^C_0@@[G@@@@6C/@__"CO@@@F)C/[F#@K0[#[MJ
)@@G@@#@K0@@@@@@@@G[@@@5C.@@@[[@)@@7G@)@@7C/)@@[G/@__"[@@@@.C@ @@[R[K@^WCP@@@FMK
)@@G@@)D [F#@^G^G^G^G^G@@@@@@@N8O@@[R[@@^XA[)@^XO[)@^PR[)@@8[#)@@_[@@@[ C_)@@[ML
)@@G@@[[@@@"CQ@@@F)DI[F@K<K^G^G^G^G^G@@@@@(@@@@GH@@@#=C@@@[@@^9@#!@@@@[@@@@@@_MM
)@@G@@@@@@DK/,0@@@^^K@DKCR@@@F)]@@K@)DR@;@^G[@K^G@@@@@@@@@]@/,0@PG/K@@D)*@@@@GMN
)@@G@@H@@@@/C/@@@[/K@@D&______      CS@@@F)DY[F@K0K^G^[#[#[@@@@@@@C/@@@[/K@@D*MO
)@@G@@ @@@@/@^"@#!/K@@D*@@@@[@/,0@PG@^.@#!/K@@D*CT@@@F)D$[N#@K^G^G^@K[#@G@@@@;MP
)@@G@@C/@@@[/K@@EF*@@@@G/C@@D\H@@@@"C@@@@58LK@DCG_)@@[[@@@@/CU@@@F)D1[F#[#[#[#MQ
)@@G@@[#[#[#[#@@@@(@@@@MH[)@@'C[)@@6[[ @@ZC[@@@5[@>@@WC@)@@"R[K@@;[@@@@;CV@@@FMR
)@@G@@)D'[N@K0^@K^G@K@@@/K@@EF1@@@@K*@@@@KD[@@@9/K@@E^*@@@@K/D@@E@H.@@@BH[@@@"MS
)@@G@@/K@@EKCW@@@F)]]@K@)E^@;@K0K^G[#[#@@@]@@@@9H@@@@9C/@@@[@ J@#!/K@@EF@@@@]]MT
)@@G@@/,0@PG______      CX@@@F)EF[MK0K0^[#[@K0K@C/@@@C/K@@E)(@@@@:/K@@E1(@@@@;MU
)@@G@@8L@@C7G_0@@[[@@@@8G@@@@8C/@@@]CY@@@F)EP[##[@^[@K0K0K@@)]^@C@      /K@@E)MV
)@@G@@@ T@#!@@@@@;/,0@T7/K@@EX*@@@@G/C@@ETH@@@@)CZ@@@F)] @C@)EX[#@K0K0K0K[#@@@MW
)@@G@@R.)@@[G@@@@5C/@__"/K@@LQ(@@@@?@ V@#!@@@@]^/,0@S9______DA@@@F)E>[EK0K0K^DMX
)@@G@@^G^G^[#@@@@@@ -@#!@@@@E?@@@@@_@@@@#P/,0@@@^^K@E?N8Q@@[A[)@@_[@@@[^DB@@@FMY
)@@G@@)E,[MK^[#[#@K[#@@@ @@@@G(@@@# C/@@@[/K@@F9*@@@@GH@@@#IC@@@@3/K@@LQ8L@@E&MZ
)@@G@@O.)@@[DC@@@F)E8[M^G@[@K0K@@@@@/K@@F^(@@@@?/=K@FD+@@@@I @@@@I1@@@@K*@@@@KNA
)@@G@@H[@@]_C.@@@]C/)@@[DD@@@F)F][F#[#[#[@K0K0K[#@@@@@H@@@]_C/@@@^/K@@LQ[@@@#NNB
)@@G@@C@@@#&/K@@FC(@@@@:[@@@#PC@@@#>DE@@@F)FF@+K@@@@@@)]A@)@@@@@@@@@@@@@______NC
)@@G@@      R THANGREATEN.@@@GC_)@@[/K@@F=(@@@@GDF@@@F)FJ[F#[]H#[#[#[#[@K0K@@@ND
)@@G@@/K@@IM@@@@[@/,0@PG@ 2@#!@@@@[@@@@@@_@@@@]A/,0@@@[#)@@_DG@@@F)FS[F#@K^G^GNE
)@@G@@[@K^@@@@@@@@@@@@F)/,0@Q0^^K@F)N8O@@[O[@@^VR[@@# 8L@@FJG_)@@[@ 3@#!DH@@@FNF
)@@G@@)F-@:@K0K@@@)]E@S@@@@@@@@@@@@@______HAN   LESS TN.@@@DC_)@@[/K@@IM@ 5@#!NG
)@@G@@/K@@IMDI@@@F)F&[F#[]H#[#[#[#[@K0K@@@/K@@IM@@@@[@/,0@PG@ '@#!@@@@[@@@@@@_NH
)@@G@@@@@@]E/,0@@@[#)@@_DJ@@@F)F\[N#@K[@K^[@K0K@/K@@IM@ .@#!/K@@IM@@@@F5/,0@Q0NI
)@@G@@^^K@F5N8N@@@8L@@F&G_)@@[@ ;@#!DK@@@F)F9[MK0[@K0K0^[#@@(@@@@?/K@@GJ*@@@@GNJ
)@@G@@H@@@#HC@@@@3/K@@IS1@@@@G*@@@@GH@@@]_C/@@@]DL@@@F)G#[F@K0K0K0K0K0K^G^G@@@NK
)@@G@@[@@@#NC@@@#$/K@@LQ(@@@@:[@)@#QC@)@#*[@@@#PC@@@#$/K@@GCDM@@@F)GG[N#[#[@^GNL
)@@G@@[@^G^@/C@@GSH@@@@3C/@@@[/K@@HM(@@@@GH@@@]_C/@@@^/K@@LQ[@)@#OC@)@#*DN@@@FNM
)@@G@@)GQ[MK[@K^[@K0@@@@N.@@@CC_)@@[@AK@#!/K@@IM@@@@GV/,0@Q0^^K@GVN8N@@@/K@@G!NN
)@@G@@*@@@@GDO@@@F)]H@S@)G)@3#[]H#[#[#[#@@@AO@#!@@@@[@@@@@@_@@@@]H/,0@@@[#)@@_NO
)@@G@@______ESS    AND LDP@@@F)G&[F@K0K^G[@K^G^G@@@@@@O[K@^VR[K@@3/K@@IM8L@@G)NP
)@@G@@G_)@@[@AP@#!/K@@IM@@@@[@/,0@PGDQ@@@F)G\@%K^[@K@@)]K@K@)G4@F#@@@@@@@AS@#!NQ
)@@G@@______+     /K@@IM@@@@G2/,0@Q0^^K@G2N8P@@@DR@@@F)G5@V@K0K@@@)]M@K@)G8@V#NR
)@@G@@[@K0@@@@@@]M/,0@PG@AT@#!______      /K@@IM@@@@]K/,0@PGDS@@@F)G;@F@@@@@@@NS
)@@G@@)]O@K@)G/@<#[@K0K@@@@@@@/K@@IM@@@@]O/,0@PG@AU@#!______T     /K@@IMDT@@@FNT
)@@G@@)]Q@K@)H@@<#[@K0K@)]S@K@@@@@@@______      /K@@IM@@@@]Q/,0@PG@AV@#!______NU
)@@G@@O     DU@@@F)H^[F#[@K0K^G^G^G[@@@@@@^^K@HIN8Q@@[O[)@^VR[)@@3@AX@#!/K@@IMNV
)@@G@@@@@@]S/,0@PG@AW@#!DV@@@F)HH[F@K^[#[@K0K0K@@@@@@@*@@@@G/C@@HRH@@@# C@@@@3NW
)@@G@@/K@@IM@AY@#!/K@@IM@@@@HI/,0@Q0DW@@@F)HQ[F@K0K0^[@K^[#@@@@@@@@A+@#!/K@@IMNX
)@@G@@@@@@HW/,0@Q0^^K@HWN8O@@[O[@@^VR[@@# /K@@H,DX@@@F)HZ@M@)]U@S@)H-@V#[]H#@@NY
)@@G@@@@@@@@@@@@]U/,0@@@[#)@@_______REATER AND GN.@@@FC_)@@[DY@@@F)H=[F#[#[#[@NZ
)@@G@@K0K^G[@@@@@@8L@@H-G_)@@[@A$@#!/K@@IM@@@@[@/,0@PG@A&@#!@@@@[@@@@@@_DZ@@@FOA
)@@G@@)H![#@K0K0^[@K^@@@)]X@C@      /K@@IM@@@@H3/,0@Q0^^K@H3N8P@@[O[K@^VR[K@@3OB
)@@G@@/K@@IMEA@@@F)]Y@C@)H5@<#[@K0K@)]Z@K@@@@@@@@@@@@@______T     /K@@IM@@@@]XOC
)@@G@@/,0@PG@A%@#!______EB@@@F)H9@<#[@K0K@)]-@K@)H.@N#[@@@@@/,0@PG@A?@#!______OD
)@@G@@O     /K@@IM@@@@]Z/,0@PG@A:@#!EC@@@F)H_@N#[@@@@@)]<@K@)I[@<#[@K0K@/K@@IMOE
)@@G@@@@@@]</,0@PG@A!@#!______      /K@@IM@@@@]-ED@@@F)I [##[#[#@K^[@K@@)]>@C@OF
)@@G@@-     /K@@IM@@@@IF/,0@Q0^^K@IFN8Q@@@O[)@^KR[)@@3@A,@#!EE@@@F)]&@C@)IH@:#OG
)@@G@@[@K0K^G@@@@@)]$@K@______      @A0@#!/K@@IM@@@@]>/,0@PG@A\@#!______EF@@@FOH
)@@G@@)IM[F#[@K^G^G^@K0K0@@@@@[@@@@0G@@@@0C/@@@[/K@@E)@A2@#!@@@@]$/,0@S9/K@@IROI
)@@G@@(@@@@:EG@@@F)IV[F#[@^[#[#@K0K0@@@@@@R[K@@$[@@@@$C@^@@[O[@@^QR[@@@0/K@@G]OJ
)@@G@@*@@@@G/G@@IZH@@@# EH@@@F)I=[F#@^G^G^@K^G@@@@@@@@C@)@[[/K@@IS*@@@@I/C)@I?OK
)@@G@@H@)@@3[@)@[[;K)@@[C@>@@[O[K@^VEI@@@F)I![F#@K[#[#[@K0K0@@@@@@R[)@@$ @@@[]OL
)@@G@@/K@@G]]@)@@0H@)@@0C/)@@[/K@@I4(@@@@IH@)@@3EJ@@@F)I6[F#@^G^G^G^G^G@@@@@@@OM
)@@G@@C@=@@[O[@@^TR[@@@$[@K@[]G@K@[][@K@@@+@A@@[C/@@@[O[)@^VEK@@@F)I_@V#@K0@@@ON
)@@G@@)](@K@)J]@V#[@K@@@/,0@PG/K@@JC(@@@@5______,     [[@@[^C.@@@[[@)@[#EL@@@FOO
)@@G@@)J @N#[@@@@@)]:@K@)JB@<#@^G@@@H@)@[^C/)@@[C/@@@[@B @#!______(     /K@@K7OP
)@@G@@@@@@](EM@@@F)JF[M[#@^[@K0K@@@@/K@@K7@@@@]:/,0@PG/)K@JQ+@@@@I @@@@I(@@@@@OQ
)@@G@@C/)@@[ @@@@G*@@@@IEN@@@F)JP[N#@K0^@K0K0@@@ @@@@G(@@@@IH@)@#=C@)@[#C/@@@[OR
)@@G@@/K@@J9(@@@@GH@@@]_C/@@@]@BB@#!EO@@@F)JZ[MK0[@K^[#[@@@@C/@__"/K@@J.@BG@#!OS
)@@G@@/K@@K7/,0@UZ/=K@J*)@@@@I @@@@I(@@@@@C/)@@[EP@@@F)J([F#@^G^C4G^G^G^G@@@@@OT
)@@G@@@BL@#!@@@@[@@@@@[ @@@@[#/,0@@@[#)@[ [@@@[^C_)@@[G@@@#^EQ@@@F)J2[F@K0K^G[OU
)@@G@@@K^[#@@@@@@@@@@@[#/,0@Q0/K@@J.8L@@J?G_)@@[@BM@#!/K@@K7@@@@[@/,0@PGER@@@FOV
)@@G@@)J;[F@K0^G[@K0K0K0@@@@@@(@@@@@O[K@^NR[K@@$/K@@KE(@@@@GH@@@[^C/@@@]@BP@#!OW
)@@G@@/K@@K7ES@@@F)K^@3@^G[#[@@@@@@@)]!@K@@@@@@@______)     /K@@J][@)@[^C/)@@]OX
)@@G@@[@@@[#C@ @@[/K@@KIET@@@F)KE[F@K0K^G^G^G[@K0@@@@@R[)@@0/K@@K+(@@@@GH@@@# OY
)@@G@@C@@@@0@BX@#!/K@@K7@@@@]!/,0@PGEU@@@F)KN[F#@K0K0K0[#[#@@@@@@@H@)@@3[@)@[[OZ
)@@G@@;K)@@[C@=@@[O[@@^VR[@@@$[@@@@$C@A@@@O[)@^IEV@@@F)KW[MK[#[#[@^G[@@@/K@@K1PA
)@@G@@*@@@@GH@@@]_C/@@@]/K@@I5[@)@@0G@)@@0C/)@@[/K@@K+*@@@@IEW@@@F)K&@V#[#@@@@PB
)@@G@@)]\@K@)K(@V@K^G@@@@@@@]\/,0@PG/K@@K1______,     *@@@@GH@@@#BC@@@@3EX@@@FPC
)@@G@@)K?@:@K0K^[#@@@@@@)]1@K@@@@@@@@@@@@@______,     @B:@#!/K@@K7/,0@UZ@B%@#!PD
)@@G@@/K@@K7EY@@@F)K1[F#[@K^G^G^[#[#[#@@@@[@@@@S[@@@@RC@@@#(/K@@E)@B!@#!@@@@]1PE
)@@G@@/,0@S9/K@@K6(@@@@:EZ@@@F)K'[N#[#[@^G@[#@@@[#)@[AN.K@@BC_)@@[N.@@@]R.K@@[PF
)@@G@@[@)@@_C/)@@[/K@@E)(@@@@:[@@@@TFA@@@F)L^[F#[#[@K0K^D^[#[@@@@@@@@@LG@@@@[APG
)@@G@@@@@@LE/,0@@@^^K@LEN8P@#I^^K@LGN8Q@@[R[)@@_FB@@@F)LH[F#@K0K0^@K^@@@@@@@@@PH
)@@G@@/K@@E)8L@@L[O.K@@]8LK@L#G_)@@[[@@@@_G@@@@_C/@@@[@B;@#!FC@@@F)]3@K@)LQ@3#PI
)@@G@@[#[@K)K0K0@@@@@@@@@@@@]3@@@@#Y/,0@@@^^K@LXN8O@#IR[@@@!______WRITE FD@@@FPJ
)@@G@@)LW[F#[@K0K0K^G^@K0@@@@@H@@@#DC/@@@#/K@@@8(@@@#E/K@@B!@C[@#!@@@@@<@@@@LXPK
)@@G@@@@@@@\FE@@@F)L>[F@^@K0K0K0K0K0@@@@@@Q[@@^MR[@@#-R[K@^RR[)@^UG@@@#EC/@__"PL
)@@G@@/K@@NX*@@@@G/C@@L*FF@@@F)L,[M^G[@[#[#[@@@@/K@@L'*@@@@@[@K@@@+@^@@[C/@@@[PM
)@@G@@/K@@L'(@@@@GH@@@#DC/@@@[[@@@[^FG@@@F)L8[M@@K^CK@@@@@@@@@@@@@/,0@@@8L@@L\PN
)@@G@@O.K@@[O.)@@[[@^)@[;K@@@[C@^@@[[@ @@[C@A@@[FH@@@F)M][N#[@K0K0@K0^@@/K@@M-PO
)@@G@@(@@@@IH@)@#DC/)@@#[@@@@@G@@@@@C@@@#E@CL@#!/K@@[E@@@@#EFI@@@F)MG[N]^K0K^GPP
)@@G@@^G@^G@H@)@#DC/)@@[[@@@@@G@@@@@C@@@#E@CP@#!/K@@[E@@@@#E@@@@@@/,0@@@FJ@@@FPQ
)@@G@@)MQ[MK^CL#[@K0K0@@[@@@@@G@@@@@C@@@#E@CT@#!/K@@[E@@@@#E@@@@@@/,0@@@/K@@@8PR
)@@G@@(@@@@IFK@@@F)M)[F@^G[#[#[#[#@@@@@@@@[@@@[^Q[)@^RR[)@#-R[K@^UR[@@^SC_)@@[PS
)@@G@@G@@@#EC/@__"/K@@@8FL@@@F)M([F#@K0K^G^G^G^G@@@@@@C/@@@[@C)@#!@@@@#U@@@@#XPT
)@@G@@@@@@#T/,0@V@[@@@#TC@ @@[[#)@@&FM@@@F)M2[F#@K^G^G^@K^G@@@@@@@C@@@#V/K@@M"PU
)@@G@@*@@@@G/C@@M'"^@@#UC@@@#V/K@@M"(@@@@GH@@@@&FN@@@F)M;[F#[#[#[#@^G^[#@@@@@@PV
)@@G@@@@@@#T/,0@V@[@)@#TC@&@@[[@ @@[C@@@#U[@@@#U"C@@#%"@@@#TFO@@@F)N^[F#[#[#[#PW
)@@G@@[#@K[#@@@@@@[@@@#WC@^@@@/K@@NQ(@@@@GH@@@@&C@@@#E@C*@#!@@@@#V@@@@#YFP@@@FPX
)@@G@@)NH[F#[#[@^[#[#[#[#@@@@@[@)@#V"C)@#%"@)@#TC@)@#W/K@@NQ*@@@@I/C)@NM"^)@#WPY
)@@G@@C@)@#VFQ@@@F)NQ[N#@@K^@K0K0@@@[@@@[BH@@@#DC/@@@A/K@@MG8L@@M(G_)@@[O.K@@[PZ
)@@G@@O.@@@[[@A)@[C@@@#VFR@@@F)N)[MK0^G^G[#@K@@@N8O)@[^^K@N,N8O@@[[#)@@&[@)@[^QA
)@@G@@Q[@@^MR[@@#-C_)@@[G@)@#EC/)__"FS@@@F)N%[F@K^[#[@K0^[]^@@@@@@/,0@@@8L@@N&QB
)@@G@@G_)@@[@C7@#!@@@@N,@@@@[B@@@@N?/,0@V@^^K@N?FT@@@F)N3[]K0K^G^G@K@@@@)]5@C@QC
)@@G@@ENDFIL/K@@@8[@@@@@G@@@@@C@@@#E@C9@#!/K@@[E@@@@#E@@@@@@FU@@@F)]6@C@)N;@3]QD
)@@G@@[#[#[#[#[#@@)]7@C@REWIND@@@@@<@@@@@<@@@@@<@@@@]5@@@@#Y/,0@@@______FV@@@FQE
)@@G@@)]8@C@)O[@;#[][#[#[#[#[#@@@@@@@@@@@<@@@@@<@@@@@<@@@@]7@@@@#Y/,0@@@@C/@#!QF
)@@G@@______FW@@@F)OC[F#[@K^G^G^D1#[#@@@@@R]0@#,[^)@#:H8)@@[/K@@@@!^)@#:@C"@#!QG
)@@G@@/K@@OKN@0@OF@C.@#!FX@@@F)OL[F#[#[#[#[#[#[#[#[#@@R[@@^:R@0@^%R@)@^(R@K@^*QH
)@@G@@9\)@^&9\@@^=9,)@^+9,@@^)9!)@^YFY@@@F)OU@:#[#[#[#[#@@@@)#:@C@)OZ@F#@@@@@@QI
)@@G@@/K@K#:@@F@@@*4@K#:N[K@^\N[@@^,R[)@^!R[K@^?FZ@@@F)O)@F])@@@@@)#!@K@)O-@+KQJ
)@@G@@0K0K0@@@@@@@9()@^Y[^@@#:AA0@#,C8@@@I@C"@@]S22SC2/K@@@@GA@@@F)O>[F#[#[#[#QK
)@@G@@[#[#[#[#[#@@A[K@^?A[@@^:A@0@^%A@)@^(A@K@^*9:)@^&9:@@^=9%)@^+9%@@^)GB@@@FQL
)@@G@@)O,[N#[#[#[@^G[@^@N@0@O9C8)@@]/K@@O'*@@@@GH@@@@5C/@@@S/K@@VD^[K@^\^[@@^,QM
)@@G@@A[)@^!GC@@@F)O8[F@K0^G^G^G^G^G^@@@@@N@0@P][@-@@[C@)@^1R@K@@5[@@@@5G@@@@5QN
)@@G@@C/@@@[@D^@#1/K@@P#GD@@@F)P[[F@K0K0K$^G^G^G^G@@@@*4@K#\R@K@^2R]0@#2[^)@#\QO
)@@G@@H8)@@[/K@@@@!^)@#\@DB@#1/K@@PBGE@@@F)#\@C@)PE@N#[])@@@)#1@K@)PG@MK0@@@@@QP
)@@G@@AA0@#2C8@@@#@DB@@]STCHAR/K@@@@/K@K#\@@F@@@GF@@@F)PI[F#[#@K0K^C=G^G^G@@@@QQ
)@@G@@@DI@#6@@@@@U@@[@[C/,0@@@/K@@O2[@K@^1C@VK@@A@K@^2[^@@#\GG@@@F)PR[F#@K0K0KQR
)@@G@@&^G^G^C0@@@@/,0@@@[#)@[GN[@@^5C_)@@['^@@@@[@@@^5G@@@@(C/@__"@@)@^4GH@@@FQS
)@@G@@)P)[F#[#[#[#[#[#@K^G@@@@C@@@[G/K@@P:(@@@@GH@@@#=C@@@[@@DO@#6@@@@[@@@@@[GQT
)@@G@@@@@@[CGI@@@F)P([F#[@^[#[#[]H#[#@@@@@@@@@[I@@@@[C/,0@@@[@@@[IC@@@@(8L@@PYQU
)@@G@@G_)@@[/K@@P![@@@[HGJ@@@F)P2[F#[#[#[#@K[#[#@@@@@@]@@@[IH@@@[IC/@@@[/K@@P/QV
)@@G@@*@@@@GH@@@#3C@@@[@@DW@#6@@@@[@GK@@@F)P;[F@K0K0^@K0K0K0@@@@@@C@@@[I]@@@[IQW
)@@G@@H@@@[IC/@@@[/K@@Q#*@@@@GH@@@#(C@@@[@/K@@P\GL@@@F)Q^[F#[@^[#[#[#@K0@@@@@@QX
)@@G@@[#)@[G[@@@[^C#)@[HH@@@[HC@@@[I/K@@QV*@@@@G/C@@QCH@@@[HGM@@@F)QH[F]H#[#[#QY
)@@G@@[#[@K0K^G@@@@D(@#6/K@@Q+@@@@[@/,0@PG@D*@#6@@@@[@@@@@[G@@@@[C/,0@@@GN@@@FQZ
)@@G@@)QQ@%K^[@K0@)]9@K@)QV@F@@@@@@@/,0@PG______0     @D:@#6/K@@Q%N@0@QU8L@@QGRA
)@@G@@G_)@@[GO@@@F)QW[F#[@K0K^[#@K^@@@@@@@/K@@Q&N@0@Q>C8)@@]@D!@#6/K@@Q%N@0@Q-RB
)@@G@@@D?@#6/K@@Q+@@@@]9GP@@@F)Q>[F#[#[]WK0K0K0K0K0@@@*4@K#4N[@@^89\)@^6R]0@#7RC
)@@G@@[^)@#4H8)@@[/K@@@@!^)@#4@D,@#6GQ@@@F)#4@C@)Q,@N#[])@@@)#6@K@)Q0@MK0@@@@@RD
)@@G@@AA0@#7C8@@@#@D,@@]FTOBCD/K@@@@/K@K#4@@F@@@GR@@@F)Q2[F#[#[#@K0K^G@@@@@@@@RE
)@@G@@N.@@@]R/K@@[ @@@[J/K@@PN[@K@^4C@VK@@^[@@^89:)@^6[^@@#4GS@@@F)Q;[N#@K0K0^RF
)@@G@@G^G@K@/K@@RH0@@@@G*@@@@GH@@@@5[@@@[JG/@@@C[@[@@WG@@@[JC/@@@[A@K@@*GT@@@FRG
)@@G@@)R [F#[#[@K0K0K^[#[#@@@@R@)@[J@D.@#./K@@S2N@0@RG@D/@#.@@@@@*/,0@T7[@[@@ZRH
)@@G@@C@@@@5GU@@@F)RI[N#@^@K0K0K0^@@/K@@R8(@@@@GG@[@@W]@@@[JH@@@[JC/@@@[/K@@RTRI
)@@G@@(@@@@GH@@@@@C@]@@[GV@@@F)RS[N@^G[@^G^G^[#@R@)@[J/K@@R6]@[@@ZH@@@[JC/@@@[RJ
)@@G@@/K@@R-(@@@@GH@@@#8C@@@@@/K@@RHGW@@@F)R+[F#[@K0K0^[#[#@@@@@@@(@@@@GH@@@#'RK
)@@G@@C@]@@]/K@@RX(@@@@GH@@@#9C@]@@@/K@@RX(@@@[]GX@@@F)R:[F@K0^G[@^G^G@@@@@@@@RL
)@@G@@]@@@[JH@@@[JC/@@@[/K@@R4*@@@@GH@@@[JG/@@@CC@[@@W/K@@RXGY@@@F)R4[N#[#@K[#RM
)@@G@@@K0K@@*@@@@G/C@@R_H@@@@5C/@@@K[@@@@'C/@@@[8L@@Q;O/K@@[[@[@@ZC@@@[JGZ@@@FRN
)@@G@@)R"[F@^G[#@K0K0K0@@@@@@@C@@@@5[@@@[JG@@@[KC/@@@B[@@@[KC/@@@[[@@@@'C/@@@#RO
)@@G@@/K@@S[HA@@@F)SB[F#@^[#[#[#[#[#@@@@@@G@@@[JD@@@[K @@@[L[@@@[JC@@@@5/K@@SHRP
)@@G@@1@@@@G*@@@@GH@@@[JHB@@@F)SK[F#[#@K0^G^G^G^@@@@@@^^K@SYN8M)@[[@@@[LG@@@[LRQ
)@@G@@C/@@@[R@K@@'[@@@[^Q@)@[KR@)@#-HC@@@F)ST[F#[@K=K^G^[#[@K0@@@@C@@@[J8L@@SNRR
)@@G@@@EZ@#.@@@@SY@@@@[L@@@@SW/,0@@@^^K@SWN8L@#IHD@@@F)S+[N#@K^[@K0^G^G@C/)@@[RS
)@@G@@[@@@@'G@@@@'C/@@@]@E+@#./K@@S2N@0@S$/K@@S**@@@@GH@@@@5HE@@@F)S?[F#[#[@K^RT
)@@G@@[#[#[#[#@@@@R@)@^;R@K@^'R]0@#"@E>@#./K@@S2N@0@S1/K@@S#[@)@[KG@)@[JHF@@@FRU
)@@G@@)S5@N#[#@@@@)#;@C@)S7@N#[])@@@)#.@K@@E>@@]SPLIT /K@@@@/K@K#;@@F@@]*4@K#;RV
)@@G@@N[@@^/HG@@@F)S9[F#[#[#[#@K^[@@@@@@@@C/@__"/K@@Q8[^@@RT[^@@RJC8FK@@^[@@^/RW
)@@G@@A@)@^;A@K@^'AA0@#"HH@@@F)T][F#[#[#@^G[#[#@@@@@@@R@)@[NN[@@^"R/K@@[]@@@[NRX
)@@G@@G/@__8;@@@@<C@@@^_[@@@^"G@@@^_HI@@@F)TF[F#[#[#[#[#[#@K0@@@@@;K)@@[H@)@[PRY
)@@G@@H/)@@BH@@@[Q[@)@[QC@-@@Z[@@@[PC@[@@WA@)@ @HJ@@@F)TO[F#[#[#[#@^G^G^G@@@@@RZ
)@@G@@N8N)@[[@@@[RG@@@[RC/@@@[]@@@[ Q@0@[PR@0@#-R@)@ @]@)@[RHK@@@F)TX[F@K0K^D^SA
)@@G@@[#[@K0K@@@@@8LK@TT@E4@^[@@@@T<@@@@[R@@@@T-/,0@@@^^K@T-N8M@#I^^K@T<HL@@@FSB
)@@G@@)T&[EK0K0^[@K^G^G@@@@@@@R]0@^]@E8@^[/K@@T,N@0@T!8L@@TEO/K@@[[@@@[NG@@@[NSC
)@@G@@C/@@@]HM@@@F)T\@3#[#[#[#[#[#@@)#_@C@@@@@@@@@@@@@@@F@@]*4@K#_N[K@  N[@@ ^SD
)@@G@@R@0@ #R@)@ ]R@K@ [HN@@@F)T5@N#[])@@@)^[@K@)T7@V#[#[#@@@@@@@@A@)@ ]A@K@ [SE
)@@G@@AA0@^]@E8@@]CENTER/K@@@@/K@K#_HO@@@F)T'[##[#[#@K0K@@@@)];@C@MISSINN.@@@ASF
)@@G@@C_)@@[/K@@T[[@K@^_C@VK@@^[K@  ^[@@ ^A@0@ #HP@@@F)]/@K@)U]@3#[]H#[#[#[#@@SG
)@@G@@@@@@@@@F@@^ @@@@[@@@@@@_@@@@];/,0@@@[#)@@_______G     HQ@@@F)UC[F@K0K^G[SH
)@@G@@@K^[#@@@@@@@@F#@^ /K@@UTN@0@UK8L@@U]G_)@@[@F[@^ /K@@UL@@@@[@/,0@PGHR@@@FSI
)@@G@@)UL[EK^[#[#[]WK0K0@@@@@@R]0@^A[^)@^#H8)@@[/K@@@@!^)@^#@F^@^ /K@@UPN@0@UOSJ
)@@G@@C8)@@[HS@@@F)UU@V#[#[#@@)^#@C@)UX@N#[])@@@)^ @C@ADMISS/K@@@@/K@K^#@@F@@@SK
)@@G@@*4@K^#N[@@ D9\)@ BHT@@@F)^A@C@)UZ@'K0K0K0K0K^G@@@@@@@@E@@@ F/K@@U@^[@@ DSL
)@@G@@9:)@ B[^@@^#AA0@^AC8@@@]@F^@@]HU@@@F)U&[F#[#[#@K^[@K^EK@@@@@'^@@@@/K@@U6SM
)@@G@@/K@@U0/K@@U,8];@U:$'0@@#RA0@ G[@@@[T"C@@^BHV@@@F)U\[F#[#[#@K^[#[#[#@@@@@SN
)@@G@@"@@@ FC@@@[T@FG@^E/K@@U/N@0@U5]@@@@@"^@@ FC@@@[T@FE@^EHW@@@F)U8@2K^[#[#[SO
)@@G@@#@@@@@)^C@C@@@@@@@@@@@@@@@F@@^*4@K^CR]0@^F@FI@^E/K@@U/N@0@U;[@@@@@HX@@@FSP
)@@G@@)U"@N#[])@@@)^E@K@)V@@<#@K0@@@C@VK@[[@K@ FC@VK@@AA0@^F@FI@@]MODIFY/K@@@@SQ
)@@G@@/K@K^CHY@@@F)V^[N#@K^[@^[@K@@@C8FK@#[^@@@=[^@@@;[^@@#DC8FK@]/K@@U>[^@@U8SR
)@@G@@[^@@U2C8FK@][@K@ GHZ@@@F)VI[N@K[@K^[@K^[@@[^@@MM[^@@MA[^@@MN[^@@MZ[^@@MYSS
)@@G@@[^@@^&[^@@N8C8FK@^[^@@^T[^@@@-IA@@@F)VS[N@K^[@^[@K[@@@[^@@N3C8FK@A[^@@B&ST
)@@G@@[^@@B$[^@@@<C8FK@ [^@@^>[^@@@+[^@@MB[^@@N9IB@@@F)V+[F@K^G[#[@K[#@@@@@@@@SU
)@@G@@[@@@^LC8FK@C[^@@]'[^@@MH[@@@^JC8FK@B[@@@^K[^@@]%[^@@M[IC@@@F)V:[N@K[@K^GSV
)@@G@@[@K0@@C8FK@F[@@@^H[^@@]XC8FK@E[@@@^I[^@@^)[^@@[_C8FK@D[^@@# [^@@MTID@@@FSW
)@@G@@)V5@N@K@@@@@)#X@8@@@@@@@K>@@@@KG@@@@@@[@@@@@@@@B@@@@@E@@@@@]@@@@@[/K@@@@SX
)@@G@@[^@@]EIE@@@F)#=@8@@@@@@@)#3@C@)#8@C@,     0     K^@@@@.     G     MISSINSY
)@@G@@ OTHEROTHER       IF@@@F)#9@K@)^B@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SZ
)@@G@@@@@@@@@@@@@@H^@@@@(     )     IG@@@F@@@@@@@^[#[#[#[#[#@@@@@@G@@@[JD@@@[KTA
)@@G@@ @@@[L[@@@[JC@@@@5/K@@SH1@@@@G*@@@@GH@@@[JHB@@@F@@^@@]@@A@@E@@U@@[@@Y@@@TB
)@@G@@@@^@ H@C@@V7S1IODR      S22DWR      NCOD$       S1PRFT      S1PRST      TC
)@@G@@NPRT$       NIO2$       NERR4$      NERR3$      NERR2$      S22SC2      TD
)@@G@@@@[@@@@@@@O-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@A@)@@@@@@@)@@@<@K0K0K0@@@@@@@[H@ 4@@@@ N@@@@ NTG
)@@G@@/,0@JN A7,4X A8,3X A9,2XA10,1XAA@@@A)@^[MK^[@K0^G[#[#@[@@@@JT@@@ _C@@@@@TH
)@@G@@ @@@@I @@@@@@[I@ 4/K@@I]N@0@@C/K@@@D*@@@@GAB@@@A)@I@N#H#@@@@)@8@K@)@K@V#TI
)@@G@@[][#@@@@@@@@@@@@@8/,0@@@ @@@@[______ODROUT[@)@@IC@)@@OAC@@@A)@N[N#[@K^G[TJ
)@@G@@#@K[#@[@@@@[C/@@@[/K@@@X*@@@@GH@@@@KC/@@@^@[O@ 4/K@@@X/K@@@X@@@@@KAD@@@ATK
)@@G@@)@'@K@)@X@3#[] #[#[#[#@@@@@@@@@@@@@M@@@@@M@@@@@L@@@@@'/,0@@@ @@@@@______TL
)@@G@@STJBINAE@@@A)@<[F@K0^G^[#L@K+K4@@@@@@@@@@#/,0@@@/=@@[XD@@@@ /K@@[X[@@@@@TM
)@@G@@C/@@@[@[T@ 4/K@@@*AF@@@A)@?@;#[#@K0K0K@@@@)@/@K@4X,45H(1H0,1*@@@@G/G@@@4TN
)@@G@@H@@@@NG@@@@JC/@@@F@[Z@ 4@@@@@NAG@@@A)@"[@@@@@@@@)@3@F@@@@@@@/K@@@/R D)  TO
)@@G@@E C O T   R N P U F   I Y   O M A R S U M AH@@@A)@4[#]H#[#[]-#[#[]>@@@@@TP
)@@G@@@@@@@@/K@@[@'^@@@@@[=@ 4@@[@@//,0@@@@[<@ 4@@@@ O/,0@@@AI@@@A)[A[S@@@@@@@TQ
)@@G@@______R D ) E C O T   R N P U F   I Y   O M A R S U M 4X,45H(1H0,1AJ@@@ATR
)@@G@@)@/[F]L#[#[#[]H#[#[#H#@@H@@@ QC@@@@C@[%@ 4@@@@ P/,0@@@@[*@ 4@@@@ O@@@@[ATS
)@@G@@/,0@@@AK@@@A)[ []K^E^G^G[#[#@@)[L@C@(/,21X@@K@@I@@K@ _@@K@@@@[?@ 4@@[@[LTT
)@@G@@/,0@@@/K@@[I*@@@@GAL@@@A)[M[S@@@@@@@,011H 45X,I4WITH/,ABLES H VARII4,015TU
)@@G@@TS OF,CONSISECORD NPUT R,024HIAM@@@A)[X[K@@@@@@@@@@@@@OR)   6HFACTT13,00TV
)@@G@@ORDS//AL REC LOGIC4,016H,45X,IS ON,/FACTORAN@@@A)[H[F]>#H#@K^E^G^G@@@@@@TW
)@@G@@@@K@@@@[3@ 4@@[@[$/,0@@@/K@@[T(@@@@GH@@@ QC@@@@C'^@@@@AO@@@A)[Q@N#[#@@@@TX
)@@G@@)[$@8@@@@@@@I4,016TS OF,CONSISECORD NPUT R,024HI(/,21X@@K@@I@@K@ _AP@@@ATY
)@@G@@)[,[S@@@@@@@OGICAL016H L5X,I4,ON,/,4ABLES H VARII4,013/,45X,NS OF,RVATIOTZ
)@@G@@H OBSEAQ@@@A)[9@*@@@@@@@)[S@V]>]-#@@@@@@@@@@[@["/,0@@@'^@@@@LE)   VARIABUA
)@@G@@2,008HDS//T1 RECORAR@@@A)[V@N#[]=@@@)["@8@@@@@@@13,006ICAL/T07HLOG,T45,0UB
)@@G@@HFIELD36,005(1H+,T'^@@@@@[9@ 4AS@@@A)] [S@@@@@@@UMNS,T07HCOL,T54,0RECORDUC
)@@G@@5,006HYPE,T4,004HTME,T36004HNAR,T24,HNUMBEAT@@@A)]K@S@)[X@%K0@@@@@)]N@C@UD
)@@G@@VFMT  G/@__"W/@@@E;O@@@=H@@@@JC/@@@[T)    HFORMA66,006AU@@@A)]O@C@)[+@;#UE
)@@G@@[]P#[#[#[#[@@@@@@@/K@@H+@@@@@O@@@@ R@@@@@P@@@@]N/,0@@@]@@@@O______AV@@@AUF
)@@G@@)[(@<#@K0K0@)]P@K@)[!@N#[]^@@@/,0@@@ @@@@Q______TVTYPE]@@@@PH@@@@PC/@@@[UG
)@@G@@@["@ 4AW@@@A)[\@3#[#[#[#[@K0@@)]R@K@@@@@@@______VNAMES@][@ 4/K@@]J@@@@@QUH
)@@G@@@@@@@S@@@@@R@@@@]PAX@@@A)[5[F#[] #[#[#[#[@K0@@@@C/@@@[@]#@ 4/K@@[_@@@@@UUI
)@@G@@@@@@@U@@@@@T@@@@]R/,0@@@ @@@@GAY@@@A)["@3#@K0@@@)]T@K@@@@@@@@@@@@@______UJ
)@@G@@TVFMT G/@__"W/@@@E;O@@@=H@@@@QC/@@@[[@@@@GAZ@@@A)]^[F#[]P#[#[#[#[@K0@@@@UK
)@@G@@C/@@@[@]A@ 4/K@@H+@@@@@V@@@@ R@@@@@W@@@@]T/,0@@@]@@@@VBA@@@A)]H@<#[#[#[#UL
)@@G@@@@@@@@)]V@K@)]L@F@@@@@@@/K@@]W______INAMES(@@@@Q @@@@F]@@@@WH@@@@WBB@@@AUM
)@@G@@)]M[F] #[#[#[#[@K0^G@@@@[@@@@FC/@@@[@]F@ 4/K@@]>@@@@@U@@@@@U@@@@@X@@@@]VUN
)@@G@@/,0@@@BC@@@A)]V@F@@@@@@@)]X@K@)]W@<] #[#[#@@@@@@@@@@@U@@@@@X@@@@]X/,0@@@UO
)@@G@@______VNAMES/K@@]>BD@@@A)])[F#[@K0^G^G^G[#@@@@@@[@@@@)C/@@@[ @@@@Z @@@@YUP
)@@G@@[@@@@FC/@@@[@]I@ 4/K@@]>@@@@@UBE@@@A)]([F#[#[#[#[9K0K0K0@@@@C.)__"[[@@@#UQ
)@@G@@[[@@@]C[@@ T[@-J_"C@)@ SO@K@@)R@K@@P[@@@@-BF@@@A)]2[M[#@K0K0^G^G@@[#)@@<UR
)@@G@@N[K@A@C_)@@[[@@@A@G@@@ _C/@__"[#0@@+[[)@[^C_0@@[G[)@@@BG@@@A)]/[MK0K0K^GUS
)@@G@@^G^G@@ @@@@I*@@@@GC/)@@[@]Y@ 4@@@@@Y@@@@ O/,0@JN[@@@@YG@@@@YC/@@@[BH@@@AUT
)@@G@@)#A[N#[@K0K0K0@K0@)@@@@IC@@@A[ @@@@I*@@@@GC/)@@[@]Y@ 4@@@@@Y@@@@ N/,0@JNUU
)@@G@@[@)@A[BI@@@A)#K[F#[@K0K0K0@K0@@@@@@@)@)@A[ @@@@I*@@@@GC/)@@[@]Y@ 4@@@@@YUV
)@@G@@@@@@ U/,0@JN[@K@A[BJ@@@A)#T[F#[@K0K0K0@K0@@@@@@@)@)@A[ @@@@I*@@@@GC/)@@[UW
)@@G@@@]Y@ 4@@@@@Y@@@@ V/,0@JN[@0@A[BK@@@A)#+[F@K^G^G^G^G^[#[#@@@@@@@@@Y@@@@ OUX
)@@G@@/,0@JN[@@@@=@])@ 4@@@@@Y@@@@ N/,0@JN/=0@D2BL@@@A)#:[F#[#[@K0K0K0K0K^G@@@UY
)@@G@@@@@@ W/,0@JN[@@@@&@]+@ 4@@@@@Y@@@@ U/,0@JN[@@@@>@]-@ 4BM@@@A)#4[F#[#[#[@UZ
)@@G@@K0K0K0K0K@@@/,0@JN[@@@A[@]=@ 4@@@@@Y@@@@ U/,0@JN[@@@@$@]<@ 4@@@@@YBN@@@AVA
)@@G@@)#.[F#[#[#[#@K0K^G^G@@@@@@@@@Y@@@@ X/,0@JN]@@@@*G/@__"H@@@A[@]=@ 4@@@@@YVB
)@@G@@@@@@ OBO@@@A)^A[F#[#[#[#[#[@^G@@@@@@;[)@@<H[)@@<C.)@@[/>@@^QD[@@@F[@)@@%VC
)@@G@@C@)@ T[@@@@(@]>@ 4BP@@@A)^J[F#[#[#[9K0KOG^[#@@@@@@@@ V/,0@JN[])@@#C]-@@@VD
)@@G@@[]@@@]C][J_"R@K@@E][)@@EH[)@@XBQ@@@A)^S[N#[#[#@K[@K0^@8];@^<$'0@@IRA0@@:VE
)@@G@@/K@@H:*@@@@G/G@@^ZG/@__2[@@@@:@]?@ 4@@@@@YBR@@@A)^+[F](#[@K^[@K^[@@@@@@@VF
)@@G@@/K@@H:/K@@AJ/K@@ ./K@@^'/K@@^4/K@@^1/K@@H:@]\@ 4'^@@@@BS@@@A)^:[F@K^[@K^VG
)@@G@@[#[#[@@@@@@@/K@@^/[@@@@?C@@@ Y/K@@H:/K@@H:/K@@H:/K@@^7/K@@H:/K@@H:BT@@@AVH
)@@G@@)^4[F#[#[@K0K0K^G^G^G@@@C@@@ +[@@@@?C@@@ -/K@@^/[@@@@?C@@@ )/K@@^/[@@@@?VI
)@@G@@C@@@ ZBU@@@A)^.[F#[#[#[#[#@^G@@@@@@@*@@@@IH@)@@-C/)@@EC/@@@[[[@@@!C[@@ =VJ
)@@G@@[@)@@ C@)@ <[@@@@^BV@@@A) A[M^G^G@^[#[#@@@[@@@@!C@@@ >/)K@ K)@@@@I @@@@IVK
)@@G@@*@@@@KH[@@@JC[@@@YC/)@@[ @@@@GBW@@@A) K@;#[@K&K0K0K0K0@@@@@@)]Z@C@(I2,1HVL
)@@G@@@@K@@$@].@ 4@@@@]Z@@[@@%/,0@@@/K@@ S(@@@@$BX@@@A)])@C@) R[#]=K0K[@K&K0@@VM
)@@G@@@@[@@,/,0@@@/K@@ &*@@@@G/C@@ XH@@@@*C/@@@D'^@@@@P)    BY@@@A) Z@:#[#[#[#VN
)@@G@@[#@@@@)]-@S@@@@@@@1)    ,1H.,I(A1,I1@@K@@(@@K@@*@@K@@?@##@ 4@@@@]-BZ@@@AVO
)@@G@@) =[F]>@^G^@K^D=G@@@@@@@@@[@@,/,0@@@/K@@ 4*@@@@G/C@@ :H@@@@(C/@@@D/K@@BAVP
)@@G@@'^@@@@CA@@@A) !@:#[#[#[#[#@@@@)]=@S@@@@@@@1)    ,1H.,I(A1,I2@@K@@(@@K@@*VQ
)@@G@@@@K@@?@#G@ 4@@@@]=CB@@@A) 2[F]>@K&K0K0K0K0K0K0@@@@K@@(@@K@@*@@K@@?@#N@ 4VR
)@@G@@@@@@]$@@[@@,/,0@@@/K@@BA'^@@@@CC@@@A)]$@S@) ;@3]>@K0K0K^G@@@@@@@ V/,0@KOVS
)@@G@@[@@@@?C@@@ Z/K@@BA'^@@@@2)    ,1H.,I(A1,I2CD@@@A)A[[F#[#[#[@K0K0K0K0K@@@VT
)@@G@@/,0@KO@#W@ 4@@@@ &@@@@@Y@@@@ X/,0@KO@#V@ 4@@@@ U@@@@@YCE@@@A)AE[F#[#[#[#VU
)@@G@@[@K0K0K0K0@@[@)@@ C@)@ *[@@@@^C@@@ $/K@@^/@#X@ 4@@@@ &@@@@@Y@@@@ WCF@@@AVV
)@@G@@)AN[MK0K0^G^@K[#@@H[)@@*C.)@@[/K@@A?*@@@@M/D)@AVH[)@@*C.)@@D[[@@@ZG[@@@ZVW
)@@G@@C.@@@[CG@@@A)AX[EK^G[#[#[#[#[]S@@@@@/,0@@@[]@@@!C][@@ R@K@@E[[)@@E;L)@@[VX
)@@G@@C[)@@*/K@@A5(@@@@MCH@@@A)A&@<#[#[#[#@@@@@@)]%@K@)A%@F]=@@@@@'^@@@@1)    VY
)@@G@@(1HA,I@@K@@*@#*@ 4@@@@]%@@[@@,CI@@@A)A:[#@K0K0K&K0K0K0K0@@@@@@@@@@@@K@@*VZ
)@@G@@@#,@ 4@@@@]?@@[@@,/,0@@@[@@@@!C@@@ (/K@@BACJ@@@A)]?@K@)A3@;]>@K0K0[#@@@@WA
)@@G@@H@)@@-C/)@@EC/@@@[[@@@@!C@@@ %/K@@BA'^@@@@2)    (1HA,ICK@@@A)A'[M[#[#@[@WB
)@@G@@K0@@@@C@@@ :/)K@B )@@@@I @@@@I*@@@@KH[@@@JC[@@@YC/)@@[ @@@@G*@@@@ICL@@@AWC
)@@G@@)B^[F#[@^G^G^G^G[#@@@@@@G@)@@-C/)@@[O@K@@)R@K@@P[@@@@)G@@@@)C/@@@[/K@@A>WD
)@@G@@[@@@@!CM@@@A)BH[N#@K[@K0YOG^^@G/@@@][[[@@@C[@@ S[@-J_"C@)@ ?/K@@BU*@@@@IWE
)@@G@@/C)@BMG/)__3[@)@@-CN@@@A)BR[F#@K0K0K0K0YOH^G@@@@)@)@@@D@)@@ [@[J_"C@@@@!WF
)@@G@@O@K@@)R@K@@P[[)@@-C.)@@][@@@@)CO@@@A)B)[F@K<K0K0K*K0K0K0K0@@R@K@ ,@@K@@<WG
)@@G@@@^#@ 4@@[@],/,0@@@@^]@ 4@@@@ !/,0@@@/=0@B9CP@@@A)B([EK0K:K^G[#[]!@@@@@@@WH
)@@G@@8L)@B\'^K@@@C8[)@#N.)@@[R@K@ ,8L)@B%'^K@@@C8[)@[N.)@@[CQ@@@A)B2[F#[]!#[#WI
)@@G@@[#[#[]=K@@@@8LK@];G_)@@['^@@@@@@K@@,@@K@@%@@K@@&@@K@@>'^K@@@C8@@@=CR@@@AWJ
)@@G@@)B;@E@)],[C@@@@@@@A6)   1X,A3, -,I4,8,002H4,I5,IX,A6,A6,A2,36,5X,A(10X,IWK
)@@G@@G_0@@[CS@@@A)B/[F@^G^G^G^G^GB=@@@@@@C.@@@[[@-J_"C@)@ ?O@K@@)R@K@@P[@@@@)WL
)@@G@@G@@@@)C/@@@[8L@@]5CT@@@A)C [V#@@@^G@*@@@@OD]@@@QC.)@@[)[@@@O @@@@O(@@@@NWM
)@@G@@C"@@@[+.)@@]C[)@@@ @@@@K*@@@@ZCU@@@A)CK[M@K@^C4G@@@@@@@@@@ \/,0@@@[[@@@@WN
)@@G@@G[@@@@C.@@@[/>K@C*)[@@@M; @@@= @@@@M1@@@@OCV@@@A)CU@3#[#[@K*K0K0@@)]7@S@WO
)@@G@@FIELD ***** (108H0@^Z@ 4@@[@]7/,0@@@/=@@C=C@@@@@@^W@ 4CW@@@A)]'[S@@@@@@@WP
)@@G@@RAM UNS PROGBY THILOWED NOT ALUT IS RMAT BTHE FOED IN  IS USTYPE ACX@@@AWQ
)@@G@@)# @*@@@@@@@)C)@<]>@K^G@@^+@ 4/K@@I]N@0@C<'^@@@@ USED)NS ARERMATIORANSFOWR
)@@G@@LESS TCY@@@A)C=@<]-#[#[]=@@@@@)#E@)@@@@@@@UMERICALPHAN***** (053H0'^@@@@WS
)@@G@@@^=@ 4@@[@#E/,0@@@CZ@@@A)#I[S@@@@@@@RAM UNS PROGBY THILOWED 57H AL NOT,0WT
)@@G@@BUT ISJBANK  IN STEXISTS DATA DA@@@A)#T@0@@@@@@@)C*@UK0@@@@@ @@@@G*@@@@ZWU
)@@G@@C/@@@[)      USED.NS ARERMATIORANSFOLESS TDB@@@A)C:[M@@K^G@@@@@@@@T/@@@AWV
)@@G@@C@@@ _/=K@D.)@@@@I @@@@I1@@@@K*@@@@KG.@__.C[@@@@C/)@@[DC@@@A)C5[N#@K0[#@WW
)@@G@@K0@@@@G/@__;T/@@@AH@@@@<C/@@@[[#0@@<[@)@[^C_0@@[G@)@ _C/)__"[@@@@\DD@@@AWX
)@@G@@)C_[F#[#[@K0K0K0[@@@@@@@/K@@DE*@@@@GG/@__9@^\@ 4@@@@ N@@@@@0/,0@JN @@@@1WY
)@@G@@]@@@@0DE@@@A)DC[MK0@^G^G[#@@@@H@@@@+C/@@@[ @@@@2[#)@@+[@@@[ C_)@@]G@@@@@WZ
)@@G@@C/@__.[@@@@1C/@@@[DF@@@A)DM[F#[#[#[@K0K0K0@@@@@@(@@@@GG/@__"@^6@ 4@@@@ NXA
)@@G@@@@@@@3/,0@JN]@@@@3H@@@@0T@@@@\DG@@@A)DV[N@K0K0[@^[@@@@C/@@@[/K@@D\8LK@DIXB
)@@G@@G_)@@[/K@@D=(@@@@HG/K__"-@@@@2C@@@@1/K@@D=DH@@@A)D>[E^C4G^G^E^G^G^G@@@@@XC
)@@G@@@@K@@<@^"@ 4@@[@#Z/,0@@@@^.@ 4@@@@ !/,0@@@[@@@@@G@@@@@DI@@@A)D,@N]=@@@@@XD
)@@G@@)#Z@8@@@@@@@ TYPE  FIELDABETICC-ALPHNUMERI***** (078H G_0@@['^@@@@DJ@@@AXE
)@@G@@)#&[@@@@@@@@)D0@F@@@@@@@8L@@C'I4)   IABLE,OF VARTIONS BSERVAWEEN OCT BETXF
)@@G@@CONFLIDK@@@A)D1[F@K0K^C4G^G^E^G^G@@@@ D@ 4@@[@#,/,0@@@@ C@ 4@@@@ \/,0@@@XG
)@@G@@/=@@D.C@@@@@/K@@D.DL@@@A)D'@V#[]>@@@)#,@0@@@@@@@ OF INUMMARYG OF SRINTINXH
)@@G@@*****P(110H0/K@@D.'^@@@@@@K@@<DM@@@A)#4[S@@@@@@@ATION ECIFICMAT SPIN FORXI
)@@G@@ERROR SE OF  BECAUINATEDS TERMRIABLEPUT VADN@@@A)#_@S@)D.@:#[@K^[#@@@@@@XJ
)@@G@@@@@@@@@ J@ 4/K@@I]N@0@E[/K@@E]*@@@@Q I3)  RIABLEFOR VADO@@@A)^]@K@)E]@3#XK
)@@G@@[] #[#[#[#@@@@@@@@@@@@@4@@@@@S@@@@@L@@@@^]/,0@@@ @@@@H______OCHARSDP@@@AXL
)@@G@@)EC[F@K0^G^G^G^[#L@@@@@@/=@@E,D@@@@ /=K@E,+@@@@HD@@@@[[@@@@HC/@@@[@ L@ 4XM
)@@G@@/K@@EGDQ@@@A)EL[F]D#L#[#@K0K0K@@@@@@*@@@@G/G@@EVH@@@@NG@@@@QC/@@@A@ S@ 4XN
)@@G@@@@@@@N@@@@@#/,0@@@DR@@@A)^^[S@@@@@@@A R I D   V R M E S F O R A N F   T XO
)@@G@@Y   O M A R S U M 0X,63H(1H0,1DS@@@A)^J@K@)EU@3@K<K0K0K*K0@@@@@@@@@@[@^^XP
)@@G@@/,0@@@@ W@ 4@@@@ O/,0@@@/K@@E<E S)  A B L DT@@@A)E)@V#[]>@@@)^L@0@@@@@@@XQ
)@@G@@O F   R Y   M M A 3HS U 10X, 6(1H0, /K@@E$'^@@@@@ X@ 4DU@@@A)^R[C@@@@@@@XR
)@@G@@@@@[C@@@@@@@______ )    L E S I A B V A R E D   O R M N S F T R A DV@@@AXS
)@@G@@)E<[F]L#[#[#[]H#[#[]-#@@@@[@^)/,0@@@@ <@ 4@@@@ O/,0@@@@ -@ 4@@@@ O@@@@^LXT
)@@G@@/,0@@@DW@@@A)E?@N#[]=@@@)^)@8@@@@@@@YPE,/),004HTAME,8X,004HNBER,5X06HNUMXU
)@@G@@(20X,0'^@@@@@ =@ 4DX@@@A)E,[F#[#@K0K0K0K0K0YK@@@[@-J_"C@)@ SO@K@@)R@K@@WXV
)@@G@@[@@@@-[@@@@)C/@@@[ @@@@Z @@@@5DY@@@A)E7[F#[#[#@K0[#[#@@@@@@@D@@@@G[#)@@6XW
)@@G@@[[)@[^C_)@@[G[)@@QC.)__"[[@@@#[[@@@]C[@@ TDZ@@@A)F@[F@^G[#[#[#[9K0@@@@@@XX
)@@G@@[[@@@]C[[J_"R@K@@E]@)@@EH@)@@T;@)@@<H@)@@6C/)@@[/=@@FFEA@@@A)FD[F[K0K0K0XY
)@@G@@YL#[#@@@@@@@$'0@@CRA0@@:[@@@@:G/@@@[C@[J_.O@K@@RR@K@@6[[)@@#C[-@@@EB@@@AXZ
)@@G@@)FM[F@K%K0K^[@K^[@@@@@@@/K@@H9/K@@H9/K@@F=/K@@H9/K@@H9/K@@FW@ 7@ 4'^@@@@YA
)@@G@@8];@FOEC@@@A)FV[F@K0K0K0K0^G^G^@@@@@/K@@GK[[@@@5G[@@@5C.@@@[[@)@@ C@)@ 1YB
)@@G@@[@@@@^C@@@ 0/K@@F9ED@@@A)F=[F#[#[#[#[#[#@K0K0@@@H@)@@6C@)@@QC/@@@[[[@@@!YC
)@@G@@C[@@ =[@)@@ C@)@ <[@@@@^C@@@ +EE@@@A)F![M@K0@K^G@@@@@@C@@@ >/)K@F8)@@@@IYD
)@@G@@ @@@@I*@@@@KH[@@@-C.@@@EC/)@@[ @@@@G*@@@@IEF@@@A)F7[F#[@K0K0K0K0K0K0@@@@YE
)@@G@@C/@@@[[[@@@!C[@@ %[@)@@ C@)@ *[@@@@^C@@@ $/K@@GK[@@@@!EG@@@A)G@[MK0@K0K0YF
)@@G@@@@@@@@)@@@@I @@@@I*@@@@KH[@@@6C[@@@QC/)@@[ @@@@G*@@@@IH@)@@-C/)@@EEH@@@AYG
)@@G@@)GE[F@K0K0^G^G^G^G^@@@@@/=K@G$+@@@@HD@@@@[[@@@@ZG@@@@ZC/@@@[[@@@@!C@@@ :YH
)@@G@@/)K@GHEI@@@A)GN[F#L@K<K0K0K*K0K0K0@@@@K@@6@AH@ 4@@[@^$/,0@@@@AG@ 4@@@@ NYI
)@@G@@/,0@@@/=@@G$D@@@@ EJ@@@A)GW[F#@K0K:K^G[#[]?@@@@@'^K@@@C8[)@#N.K@@[R@K@ ,YJ
)@@G@@8LK@GY'^K@@@C8[)@[N.K@@[R@K@ ,EK@@@A)G>@N@K(@@@@)^$@)@@@@@@@)G$@E@@@@@@@YK
)@@G@@C/@@@[X,2A6)6,A2,34,5X,A(20X,I'^@@@@8LK@G<EL@@@A)G*[F#[#[#[#@K0K0^@@@@@@YL
)@@G@@/C)@G3G/)__3[@)@@-G@)@@-C/)@@[O@K@@)R@K@@W[@@@@)G@@@@)EM@@@A)G1[MK^GB>#[YM
)@@G@@[^G[#@[[)@@-C.)@@][@@@@)G/@@@][[[@@@C[@@ S[@-J_"C@)@ ?/K@@G;*@@@@IEN@@@AYN
)@@G@@)G;[F#[#[#[9^@K0K0@@@@@@[@)@@)G@)@@)C/)@@[8L@@E"G_)@@[[@[J_"C@@@@!O@K@@)YO
)@@G@@R@K@@WEO@@@A)H^[N#[#[#[9^G@@@@C.@@@[+/)@@]C@)@@@ @@@@G*@@@@ZC/@@@[[[[J_"YP
)@@G@@C[@@ ?O@K@@)R@K@@WEP@@@A)HI[M[@K^[#@@@@@@@[@@@@@G@@@@@C/@@@[@A&@ 4/K@@I]YQ
)@@G@@N@0@HO/)K@HP)@@@@K @@@@K(@@@@JEQ@@@A)HS@3]H#[#[]-#[#@@)^:@S@ALPHAB***** YR
)@@G@@(091H0@A(@ 4@@[@^:/,0@@@@A*@ 4@@@@ O/,0@@@ER@@@A)^,[S@@@@@@@ED BY ACCEPTYS
)@@G@@E NOT OVE ARNED ABS DEFIE(S) AARIABLRMED VRANSFOETIC TES@@@A)^9@S@)HY@<]YT
)@@G@@>@K^G@)^/@K@ ON CAS1PRVS@A?@ 4/K@@I]N@0@H-'^@@@@)     ROGRAMTHIS PET@@@AYU
)@@G@@)^"@)@@@@@@@)H+@:]X#[#@@G@@@@@C/@@@[@A!@ 4@@@@^//,0@@@______.     S1STFTYV
)@@G@@LL TO EU@@@A)H$[]K^[#[]-#[#[#@) ]@C@(043H @@K@@Y@A0@ 4@@[@ ]/,0@@@@A\@ 4YW
)@@G@@/K@@I]N@0@H%[@@@@@EV@@@A) #[S@@@@@@@______.     S1PRVS,I5)  NUMBEREMENT YX
)@@G@@BLE EL IN TA ERROR FOUNDS1PRVSEW@@@A)H\[F]>]X#[#@[@K@@@@@@@@/K@@I]N@0@H8YY
)@@G@@[@@@@@G@@@@@C/@@@[@A4@ 4@@@@ F/,0@@@'^@@@@EX@@@A)H8@F#@@@@@@) I@*@@@@@@@YZ
)@@G@@)H9@F]W@@@@@/,0@@@______VTYPE.R IN T. ERROS1PRVS@A6@ 4EY@@@A)H'[F#[#@[@KZA
)@@G@@^G^G@@@@@@@@R]0@ 5@A9@ 4/K@@I]N@0@I[[@@@@@G@@@@@C/@@@[@A7@ 4@@@@ IEZ@@@AZB
)@@G@@)I#[F#[#[#[#[#[#[#[#[#@@*4@K 2N[)@AHN[K@AGN[@@AFR@K@AE9\)@AC9,)@AA9,@@A^ZC
)@@G@@9!)@A]FA@@@A) 2@C@)IG@N#[]0@@@) 4@K@)II@N#[#@@@@9()@A]AA0@ 5@A9@@]S1PRVSZD
)@@G@@/K@@@@/K@K 2@@F@@AFB@@@A)IK[F#[#[#[#[#[#[#[@K0@@C@@@AJ/K@@KX^[)@AH^[K@AGZE
)@@G@@^[@@AFA@K@AE9:)@AC9%)@AA9%@@A^FC@@@A)IT[MK0[#[#@K^E=G@@A.@ 8'^@@@@8];@I+ZF
)@@G@@$'0@@BRA0@AM[@@@ALG@@@@IG/)__.C@)@AK;@@@@<FD@@@A)I<[F@K^[@K^[#@K0@@@@@@@ZG
)@@G@@[@@@@7CC[@@@R@K@AL/K@@JB/K@@J[/K@@I;/K@@I5/K@@I\/K@@I(FE@@@A)I?[F@K^G^G[ZH
)@@G@@#[@K^G@@@@@@@B[@ 8/K@@JHN@0@I4[@@@@7C^[@@@R@K@AL@A_@ 8/K@@JHN@0@I,FF@@@AZI
)@@G@@)I5[F#@K0K^[#[#@K0@@@@@@[@@@@7C*[@@[R@K@AL@B#@ 8/K@@JHN@0@I'[@@@@7CC[@@[ZJ
)@@G@@R@K@ALFG@@@A)I"[F@K^G^G[#[@K^G@@@@@@@BB@ 8/K@@JHN@0@JA[@@@@7C=[@@[R@K@ALZK
)@@G@@@B @ 8/K@@JHN@0@J@FH@@@A)JB[F#@K0K^[#[#[#[#@@@@@C@@@@7R@K@ANR]0@ 9@BD@ 8ZL
)@@G@@/K@@JHN@0@JG[@@@@7C)[@@[R@K@ALFI@@@A)JK@F#@@@@@@) 6@C@)JL@N#[]0@@@) 8@K@ZM
)@@G@@@@@@@@@BD@@]LST   /K@@@@/K@K 6@@F@@#*4@K 6FJ@@@A)JN[F#[#@K0^G^[#@@@@@@@@ZN
)@@G@@;@@@@<C@@@AP/K@@IS[@K@AJC@VK@[[@K@AMC@VK@@A@K@ANAA0@ 9FK@@@A)JW[F#@^G^G[ZO
)@@G@@@K%K0@@@@@@@@BH@ /'^@@@@8];@J=$'0@@BRA0@AR[@@@AQG@@@@IG/)__.C@)@AKFL@@@AZP
)@@G@@)J>[F@K^[@K^[#[#@@@@@@@@[C[@@@R@K@AQC@@@AS/K@@KD/K@@K#/K@@J./K@@J7/K@@J1ZQ
)@@G@@/K@@J:FM@@@A)J,[F@K^G^G^G[@K^G@@@@@@@BL@ //K@@KJN@0@J6[^[@@@R@K@AQC@@@ASZR
)@@G@@@BJ@ //K@@KJN@0@J0FN@@@A)J7[F#[#@K^[#[#[#@@@@@@@[*[@@[R@K@AQC@@@AS@BN@ /ZS
)@@G@@/K@@KJN@0@J/[C[@@[R@K@AQC@@@ASFO@@@A)K@[F@K^G^G^G[@K^G@@@@@@@BR@ //K@@KJZT
)@@G@@N@0@KC[=[@@[R@K@AQC@@@AS@BP@ //K@@KJN@0@K]FP@@@A)KD[F#[#@K^[#[#[#[#@@@@@ZU
)@@G@@*4@K 'R@K@ATR]0@ .@BT@ //K@@KJN@0@KI[)[@@[R@K@AQC@@@ASFQ@@@A) '@C@)KM@N#ZV
)@@G@@[]0@@@) /@K@)KO@N#[#@@@@A@K@ATAA0@ .@BT@@]SLST  /K@@@@/K@K '@@F@@^FR@@@AZW
)@@G@@)KQ[MK0^G[#[@^G@@@C@VK@[[@@@AKC8FK@@/K@@JU[@K@ASC@VK@][@K@APC@VK@[[@K@ARZX
)@@G@@C@VK@@FS@@@A)K)[N#@K^[@K^[@^@@[^@@HFC8FK@#[^@@[P[^@@]2[^@@@F[^@@DF[^@@[EZY
)@@G@@[^@@C?C8FK@][@K@ _FT@@@A)K%[N@^[@K^[@K^[@@[^@@H&[^@@H$[^@@H"[^@@CR[^@@H.ZZ
)@@G@@[^@@H4[^@@D>[^@@H5C8FK@^[^@@CBFU@@@A)K4@3@K^[@K^@@@@@@) N@S@_____8@@@@@]AA
)@@G@@@@@@@[/K@@@@[^@@@D[^@@D&[^@@CQ[^@@HQ[^@@HRFV@@@A) Q[S@@@@@@@B     F     AB
)@@G@@E     @@@@@ @@@@@A@@@@@^@@@@@#      (5XA6,@@@@@GROTATEFW@@@A) -[S@@@@@@@AC
)@@G@@ A11   A11,  A6,5XETIC  ALPHAB@@@@@@ G11.3G11.3,IC     NUMERG     FX@@@AAD
)@@G@@) ?@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EFINED***UND_____.@@[@@[_____"AE
)@@G@@)     FY@@@A@@@@@@)HY@<]>@K^G@)^/@K@ ON CAS1PRVS@A?@ 4/K@@I]N@0@H-'^@@@@AF
)@@G@@)     ROGRAMTHIS PET@@@A@@^@@ @@D@@H@@<@@[@@$@@#@@^@AU@C@@K'@@@@@[@@@@@QAG
)@@G@@@@@@@AS1GVAL      S1GTAG      S1PCHR      S1PCHD      S1PCHH      S1STFTAH
)@@G@@      NCOD$       S1SERR      NPRT$       NIO2$       NERR2$      NIO1$ AI
)@@G@@      NERR3$      S1PRVS      @@[@@@@@@@IIBLANK$      ^@@@C@@]@@@@S1CCI AJ
)@@G@@      ]@@@C@@#@@@@S1CNTL      ]@@@C@@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK
)@@G@@)@@@3#^GK^[#^G@@@@)@]@C@@@@@@@@@@@@@@@F@@[*4@K@]@[]@@^/K@@@ N@0@@^[@@@@@AL
)@@G@@C@@@@[AA@@@A)@A@N#^C@@@@)@^@K@)@C@N#^@@@@@)@[@C@KG@@@@/K@@@@AA0@@ @[]@@^AM
)@@G@@INSEG7/K@@@@/K@K@]AB@@@A@@^@@]@@A@@[@@C@@[@@G@@@@@]@@B@C@@@ENERR3$      AN
)@@G@@INSEG7      @@[@@@@@@@@C 2400     17105152           10  -4294967295    AO
)@@G@@        0   4294967295  @Q@[@@   -268435449  128)@@@2K0@CS@@)@O@C@)@#@K@AP
)@@G@@FILERECLASSP@@@@@L[@@@[IG/)__"C8:K@[R8VK@@G@@@@OC/@__"AA@@@A)@ [S@@@@@@@AQ
)@@G@@SCORESVECTORRAWFACSCORETLOADTRROTFACORTHOGSAVEDAFILECOSDFFILBCDTAPAB@@@AAR
)@@G@@)@K@)@@@@@@@)@R@*@@@@@@@@@@@^1@@@@^0@@@@^\@@@@^,@@@@^!RESID STJBANSCOEFFAS
)@@G@@SCORE AC@@@A)@W@C@)@A[##@]A[]@CS^G@@@@@@@6@@@@[K@@@@@@/,0@@@[@@@[KT/@@[CAT
)@@G@@C@FK@][@)@[J@@@@^2AD@@@A)@I[F#@CS^G]A@K0C]A@@@@@C@)@@Y/=@@[SD@@@@P @@@@@AU
)@@G@@ @@@@Z @@@@Y[@@@@PC/@@@[@[L@[EAE@@@A)@\@K@)@R@3#@-[K0CS^G]A@@@@@@@@@@@@-AV
)@@G@@@@@@@6@@@@@[@@@@@\/,0@@@[@)@@)______ALPHA AF@@@A)@X[F#@-)K^G@-)^[#@@@@@@AW
)@@G@@D@@@@+/K@@[@*@@@@GH@@@@-C/@@@]@[T@[E/K@@E3@@@@@+@@@@@YAG@@@A)@&[N@^@K0C@AX
)@@G@@-)@@@@C/)@@[ @@@@G*@@@@YC/@@@[/K@@DQ[@@@@<C/@@@ /K@@@?*@@@@G/C@@@(AH@@@AAY
)@@G@@)@0[N#@-)@^G]A@@@@ @@@@I*@@@@KH[@@@8C[@@@YC/)@@[)@@@@I @@@@I*@@@@KH[@@@7AZ
)@@G@@C[@@@YAI@@@A)@'[M^@K0C]A[#@C@@/K@@[N(@@@@GH@@@@7C@@@@Y/K@@DQ[@@@@<C/@@@[BA
)@@G@@/=K@BY)@@@@I;^@@@=AJ@@@A)[^[MK0CS@^G]A@@@@ @@@@I(@@@@KH[@@@8C[@@@YC/)@@[BB
)@@G@@ @@@@G(@@@@IH@)@@9C@)@@YC/@@@[AK@@@A)[I[MK[#@)CS^G@)C@/K@@[K/K@@@O(@@@@GBC
)@@G@@H@@@@9C@@@@)/K@@DQ[@@@@<C/@@@#/=K@@.+@@@@IAL@@@A)[S[F#@-)K^CMA[@K0CS^G@@BD
)@@G@@H@@@@'C@@@@&@[0@[E/K@@E7@@@@@&/,0@@@/K@@FI*@@@@> @@@@=AM@@@A)[-[EK^CUA[#BE
)@@G@@@CS^G]^K@@@@/,0@@@]@@@[KH@@@@$C/@@@[@[3@[E@@@@@$/,0@@@/K@@#((@@@@GAN@@@ABF
)@@G@@)[%[##@)CS^G]A[#@-)@@@@@@@@@@@C/@@@[ @@@@Q @@@@@ @@@@5 @@@@*@[4@[E/K@@E7BG
)@@G@@@@@@[KAO@@@A)@1@K@)[2@3#@-[K0CS^G]A@@@@@@@@@@@@-@@@@@6@@@@@[@@@@@1/,0@@@BH
)@@G@@[@@@@(______ALPNUMAP@@@A)[8[F#@-)K^G@-)K0@@@@@@@ @@@@G*@@@@IH@)@@;C@)@@YBI
)@@G@@C/@@@[@['@[E/K@@E7@@@@@+@@@@@YAQ@@@A)][[MK0@)CS^G@-)@@(@@@@GH@@@@-C/@@@[BJ
)@@G@@[@@@@YC@@@@//)K@]C+@@@@I @@@@I(@@@@%C/)@@[AR@@@A)]F[F@K0C]A[#@C@-)@@@@@@BK
)@@G@@[@@@@(C/@@@]/K@@]P*@@@@GH@@@@.C@@@@Y/K@@#]*@@@@-/K@@^9AS@@@A)]O[F@K0CS[@BL
)@@G@@^G]@-)@@@@@@C@@@@Y/K@@^$[@@@@@C/@@@[/K@@]W*@@@@GH@@@@"C@@@@Y/K@@^$AT@@@ABM
)@@G@@)]X[N#@C@-)K[#@CS@C@)@@YC/@@@[[@@@@<C/@@@]/K@@^$[@@@@@C/@@@]/K@@]<*@@@@GBN
)@@G@@H@@@@_AU@@@A)]$[N#@@-)K0@@@@@@C/)@@[)@@@@I @@@@I*@@@@KH[@@@8C[@@@YC/)@@[BO
)@@G@@ @@@@G*@@@@IH@)@@9AV@@@A)]1[N#@-)@[#@-)@@@*@@@@KH[@@@/C[@@@YC/)@@[)@@@@IBP
)@@G@@;^@@@= @@@@I*@@@@KH[@@@7C[@@@YAW@@@A)];[M[@^G]@-)K@@@@*@@@@G/C@@#AD@@@@+BQ
)@@G@@/K@@DQ[@@@@<C/@@@#/)K@#[)@@@@I;^@@@= @@@@IAX@@@A)# [N@^G]@CS[#@-)@*@@@@KBR
)@@G@@H[@@@7C[@@@YC/)@@[[@@@@(C/@@@^/K@@DQ[@@@@<C/@@@ /K@@#DAY@@@A)#J[M^G]A@@KBS
)@@G@@0CS@@@H[)@@9C[)@@YC.@@@[)@)@@K @@@@K*@@@@MH[)@@/C[)@@YC.@@@[ @@@@IAZ@@@ABT
)@@G@@)#T[M@K^G]@CS^G@@@C@@@@Y[@)@@<C/)@@#/K@@E7(@@@@Y/=0@BY)@)@@K;^)@@= @@@@KBU
)@@G@@*@@@@MBA@@@A)#<[F#@C@-)K^C%A[#@@@@@@@@@@[@@@@@@[/,0@@@/K@@DQ[@@@@<C/@@@]BV
)@@G@@/K@@#*(@@@@GH@@@@8BB@@@A)#?[F#@-)K<CS^[#@-)K0@@@(@@@@GH@@@@'C@@@@&@])@[EBW
)@@G@@/K@@E7@@@@@&/,0@@@ @@@@+@]Y@[EBC@@@A)#5[F@K<*S^[#@CS^[]^@@@@/,0@@@/K@@#,BX
)@@G@@[@@@@+C/@@@[@]<@[E/K@@F7@@@@@&/,0@@@/K@@#.BD@@@A)#"[F#@)CS[#@-)@@@@@@@@@BY
)@@G@@C/)@@[ @@@@G*@@@@IH@)@@7C@)@@YC/@@@[@]&@[E/K@@E7@@@@@YBE@@@A)^B[N#@-)@^GBZ
)@@G@@]A@@@@ @@@@I*@@@@KH[@@@9C[@@@YC/)@@[)@@@@I @@@@I*@@@@KH[@@@/C[@@@YBF@@@ACA
)@@G@@)^L[MK[#@-CK0CS[@@*@@@@G/G@@^WG/@__.@]%@[E@@@@@Y/,0@@@[@@@@<C/@@@#/=0@#]CB
)@@G@@)@)@@HBG@@@A)^V[F@K-*S^G@-)K0CL^G@@@@@@@[K/,0@@@]@@@[KH@@@@$C/@@@[@]?@[ECC
)@@G@@@@@@@$/,0@@@/K@@DQBH@@@A)^=@V@K0C@@@)@3@K@)^$@V]]-)K0@@@@@@[@@@@@3/,0@@@CD
)@@G@@______NUM   /K@@DQ@]!@[E/K@@E7BI@@@A)^%[F#@-)K0CS^[#@-CK0CS@@]0@[E@@@@@YCE
)@@G@@/,0@@@@]\@[E/K@@E7@@@@@+@@@@@Y@@@@@-@@@@@6BJ@@@A)^3[M^@K0C]A[@^G@@H@@@@-CF
)@@G@@C/@@@[/K@@E7(@@@@Y/K@@DQ[@@@@<C/@@@]/K@@^9*@@@@GG/@__"BK@@@A)^.[MK@K0C@]CG
)@@G@@A@@@@@D[@@@+C/)@@[ @@@@G*@@@@I/C)@  H@)@@+C/)@@EC/@@@[/K@@ \*@@@@GBL@@@ACH
)@@G@@) B[M@K[#@)]A@@@@@[@@@@QC/@@@[/K@@DQ[@@@@<C/@@@ /=K@ J+@@@@I @@@@I1@@@@KCI
)@@G@@*@@@@KBM@@@A) L[F]M-)K0CS^G]A@K^D)@@'^@@@@8];@ U$'0@@^RA0@@(@].@[E@@@@@$CJ
)@@G@@@@@@@+@@@@@[/,0@@@BN@@@A) U[F#@)C]@-)K0C]^5#@@@@@@@@[[/,0@@@/K@@ \[@@@@=CK
)@@G@@C@@@@$/K@@ ?/K@@ -/K@@ Y@]"@[EBO@@@A) <[F#@-)^G@CS^G]@@@@@@@/K@@ \[@)@@5CL
)@@G@@"@)@@5"G)@@GC@)@@J"O)@@$C/)@]V@#[@[E@@@@@+BP@@@A) ?[F#@-)K^G]A@K[#@@@@@@CM
)@@G@@[@@@@<C/@@@^/K@@ 6*@@@@GH@@@@"C@@@@Y/K@@ \[@@@@*C@@@@$BQ@@@A) 5[N@K0CS[@CN
)@@G@@[#@@@@ @@@@G(@@@@IH@)@@(C/)@@[C/@@@[/K@@AG*@@@@GH@@@@_C@@@@Y/K@@DQBR@@@ACO
)@@G@@) _[MK0@CS@^@@@@@@/=K@ 3)@@@@I;^@@@= @@@@I*@@@@=C/)@@[)@@@@I @@@@I(@@@@@CP
)@@G@@C/)@@[BS@@@A)AD[MK0C]A[#@C@-)@*@@@@GH@@@@(C/@@@[/K@@AU*@@@@GH@@@@.C@@@@YCQ
)@@G@@/K@@^$[@@@@(C/@@@#BT@@@A)AN[F@^G@-)K0C@-)@@@@@@@C@)@@YC/@@@[/K@@^$[@0@@5CR
)@@G@@"O)@@=C/)@]V[@@@@(C/@@@]/K@@ 3BU@@@A)AW[N#@@-)K0@@@@@@C/)@@[)@@@@I @@@@ICS
)@@G@@*@@@@KH[@@@7C[@@@YC/)@@[ @@@@G*@@@@IH@)@@/BV@@@A)A&[F#@-)@K[#@-)@@@@@@@@CT
)@@G@@C@@@@Y[@@@@<C/@@@]/=0@A5)@)@@H @@@@I*@@@@KH[@@@9C[@@@YBW@@@A)A\[F#@C@-)KCU
)@@G@@^G]@-)@@@@@@RA0@@(/=@@ 3D@@@@Q/K@@DQ[@@@@<C/@@@#/K@@A4*@@@@GH@@@@8BX@@@ACV
)@@G@@)A8[MK^D+A[@K^@K0@ @@@@G(@@@@=C/@@@[/K@@BT/K@@BG/K@@A_@#Y@[E'^@@@@8];@A;CW
)@@G@@$'0@@^BY@@@A)B][M^G@]@-)K0C@@@/K@@BY[@@@@=D@@@@=/)K@BF+@@@@I @@@@I*@@@@KCX
)@@G@@H[@@@@C.@@@]C/)@@[BZ@@@A)BG[M^G@]A@^@@@@@@/)K@BS+@@@@I @@@@I(@@@@5C/)@@[CY
)@@G@@ @@@@G*@@@@IH@)@@@C/)@@]C/@@@[CA@@@A)BQ[F#@-)K^G]A[@^@@@@@@@C/@@@#/K@@ 3CZ
)@@G@@*@@@@G/C@@BYH@@@@=C@@@@*/K@@BY[@@@@5D@@@@5CB@@@A)BZ[EK0C@)CS^G]A[@@@@@@@DA
)@@G@@/=@@CRD@@@@PO@)@[HR@)@@Z/K@@FE*@@@@G/G@@B=G@@@@ZH@@@@@CC@@@A)B*[EK0]A@K[DB
)@@G@@#@-)@@@@@@@@A@)@@:N[@@[IR/)@@[/K@@CA(@@@@IH@)@[]C@-@@@ @@@@> @]@@@CD@@@ADC
)@@G@@)B1[F#@-)^@K0CS^G@@@@@@@*@@@@GH@@@[#C@@@@[[@@@@>C/@@@[/K@@C^*@@@@GH@@@@[DD
)@@G@@C@]@@]CE@@@A)B'[F@^G]A[#@C@-)@@@@@@@[@@@@>C/@@@#/K@@C#*@@@@GH@@@[^C@@@@[DE
)@@G@@[@@@@>C/@@@]/K@@B.CF@@@A)C#[F@^[#@-)K0]@@@@@@@@@C/@@@[/K@@CH*@@@@GH@@@[ DF
)@@G@@C@@@@[ @@@@%8L@@B0O/)@@[/K@@CACG@@@A)CG[F#@-)K0CS[#@]A@@@@@@G@@@@ZC/@@@#DG
)@@G@@[@+@@]C@)@@][@]@@[C@@@@[O@)@[HR@)@@Z[@@@@%CH@@@A)CP[F#@)CS^G]A@K0]@@@@@@DH
)@@G@@8];@CZ$'0@@ RA0@@([@]@@@C@@@@(O@)@[HR@)@@Z/K@@C8[@@@@ZCI@@@A)CY[F]S-)K^[DI
)@@G@@@K^G]A[#@@@@C@@@@=O@)@[HR@)@@Z/K@@CH/K@@C1/K@@C(/K@@C=@^ @[E'^@@@@CJ@@@ADJ
)@@G@@)C$[EK^G]A[#@]A[#@@@@@@@[@@@@ZG@@@@ZC/@@@][@]@@[C@@@@5O@)@[HR@)@@Z/K@@C!DK
)@@G@@[@]@@[CK@@@A)C0[F@K0CS^G@-)^[#@@@@@@C@@@@Y/K@@CN[@+@@]C@)@@*[@]@@[C@@@@=DL
)@@G@@O@)@[HR@)@@Z/K@@C8CL@@@A)C9[N#@C]A@^[#@-)@C/@@@ O@)@[HR@)@@Z/K@@FE(@@@@GDM
)@@G@@H@@@@@C@@@@Z/K@@DC*@@@@GH@@@@/CM@@@A)D#[E^G]A[@K0CS[@@@@@@@@/K@@DH*@@@@GDN
)@@G@@H@@@@8C@@@@Y/K@@@O[@)@@ZG@)@@ZC/)@@[[@]@@@CN@@@A)DG[F#@-)K0]@CS^G]@@@@@@DO
)@@G@@/K@@F (@@@@Y[@@@@PC/@@@[/K@@DN*@@@@GH@@@@9C@@@@Y @@@@PCO@@@A)DP[F@K0]@-)DP
)@@G@@K[@K>@@@@@@@/,0@@@^^K@D)N8L@@[^^K@DYN8M@@Q^^K@DZN8L@@@R@)@@</K@@@OCP@@@ADQ
)@@G@@)DY[F@K^[#@-)K0CK4G]A@@@@^X@[E@@@@@$/,0@@@@^W@[E@@@@@6@@@@@6@@@@D)@@@@DZDR
)@@G@@@@@@DYCQ@@@A)D$[F]K-)K0CS^G]@CS@@@@@C/@@@][@@@@?C/@@@#/K@@D\*@@@@Y[@@@@?DS
)@@G@@@^Y@[E@@@@@Y/,0@@@CR@@@A)D0[N#@]@CS^G@-)@@;O@@@=H@@@@$C/@@@[]@@@@$H@@@@$DT
)@@G@@C/@@@[/K@@D71@@@@G*@@@@GH@@@@?CS@@@A)D'[EK0]A[#@-)[#@@@@@@@@[@)@@!G/)@@[DU
)@@G@@T/)@@GC@)@@![@@@@$G@@@@$T/@@[C]@@@@!W/@@[CCT@@@A)E#[F#@-)^[]Q)CS^G@@@@@@DV
)@@G@@C/@@@[@^&@[E@@@@@$@@@@EC/,0@@@^^K@ECN8M@@@O@)@[JR@)@@!CU@@@A)EG[E^G]@-)KDW
)@@G@@0CM^G]A@@@@@@^:@[E@@@@@,/,0@@@[@)@@,C@)@@Y/K@@F (@@@@Y[@@@@@G@@@@@CV@@@ADX
)@@G@@)EP[N#@]@CS[@K0C@@/K@@@O @@@@P/K@@EZ*@@@@GH@@@@$C/@@@E/K@@@O(@@@@GG/@__'DY
)@@G@@[@@@@$CW@@@A)EZ[MK0]@CS^@K0@@@*@@@@GH@@@@$C/@@@D/K@@@O[@@@@PC/@@@[/K@@E&DZ
)@@G@@*@@@@GH@@@@$C/@@@FCX@@@A)E([F@K0C]^D#@)CS^G]A@@@[@@@@YC@@@@,@^'@[E/K@@F EA
)@@G@@@@@@@,/,0@@@/=@@@OD@@@@P/K@@E?CY@@@A)E2[N@K0CS[@^@K^DK/,0@@@^^K@E"N8L@@[EB
)@@G@@^^K@E.N8L@@@/K@@F (@@@@GH@@@@9C@@@@)/K@@EMCZ@@@A)E/[F#@)C]A[#@-)@@@@@@@@EC
)@@G@@[@@@@@G@@@@@C/@@@[@^_@[E@@@@@6@@@@@6@@@@E"@@@@E.@@@@@WDA@@@A)F [N#@C]@-)ED
)@@G@@^[@K0@C/@@@#@ #@[E/K@@I=N@0@FHC8)@@C@ ]@[E/K@@I*N@0@FD[@@@@@C@@@@ZDB@@@AEE
)@@G@@)FJ[F#@C@-)^[#@- @@@@@@@/,0@@@ @@@@>/K@@FR*@@@@GH@@@@>C/@@@]/K@@G_(@@@@GEF
)@@G@@H@@@@>DC@@@A)FS[F#@-)K0CK=G]@-)K=CS@@@@@@&/,0@@@@ D@[E/K@@E7@@@@@&/,0@@@EG
)@@G@@@ C@[E@@@@[@@@@@@[DD@@@A)F-[N#@@)]A[#@@@@@ @@@@G(@@@@IH@)@[AC@)@@&C/@@@[EH
)@@G@@/K@@F20@@@@G*@@@@GG/@__.@ E@[EDE@@@A)F:[MK0CS@^[]I-)K@/K@@F7@@@@@&/,0@@@EI
)@@G@@/=K@F/+@@@@I @@@@I(@@@@KH[@@@_C[@@@&C/)@@[DF@@@A)F5[F#@)CS^G@-)K[#@@@@@@EJ
)@@G@@C@)@@&C/@@@[/K@@DQ[@)@@<C/)@@ [@@@@YC@@@[A/K@@FV@ I@[EDG@@@A)F"[N#@@-)K0EK
)@@G@@@C@@@@/=K@G')@@@@I @@@@I*@@@@KH[@@@9C[@@@&C/)@@[ @@@@G*@@@@IH@)@@7DH@@@AEL
)@@G@@)GC[MK0CS@^G@C@@@@/=K@G'+@@@@I @@@@I*@@@@>C/)@@[ @@@@G*@@@@IH@)@@/C@)@@&EM
)@@G@@C/@@@[DI@@@A)GM[F#@-)^[#@-)^G]@@@@@@/K@@DQ[@)@@<C/)@@][@@@@YC@@@@&/K@@GVEN
)@@G@@(@@@@GH@@@@.C@@@@&DJ@@@A)GV[F]^-)K^G@-)K0@@@@@@@ @@@@G*@@@@IH@)@@7C@)@@&EO
)@@G@@C/@@@[@ W@[E/K@@E7@@@@@&/,0@@@DK@@@A)G=[MK0CS@^@K0CS@@H@)@@/C@)@@&C/@@@[EP
)@@G@@/=K@G')@@@@I @@@@I*@@@@KH[@@@9C[@@@&C/)@@[DL@@@A)G,[M[#@]@-)K0@@@@C/)@@#EQ
)@@G@@[@@@@YC@@@[A/=K@G'+@@@@I @@@@I*@@@@>C/)@@[ @@@@G*@@@@IDM@@@A)G8[F#@)]A[#ER
)@@G@@@-)K^C%A@@@@@@@@@[/,0@@@/K@@BY[@)@@YC@)@@&[@@@@(C/@@@^/K@@DQ[@)@@<DN@@@AES
)@@G@@)H[[F#@-)K-CS^[#@-CK0CS@@ (@[E@@@@@&/,0@@@@ *@[E/K@@E7@@@@@&/,0@@@@ $@[EET
)@@G@@@@@@[@DO@@@A)HE[M[@^G]A@@@@@@@C/)@@[ @@@@G(@@@@IH@)@[AC@)@@&C/@@@[/K@@HUEU
)@@G@@0@@@@G*@@@@GG/@__.DP@@@A*[@@@@*SDFF*@C@@@A.   COPYRIGHT 1975 BY UNIVERSIEV
)@@G@@TY OF MARYLAND    @[@@@A.     @D@@@A.   QUESTIONS CONCERNING THIS SHOULDEW
)@@G@@ BE DIRECTED TO:  @[@@@A.     @ @@@A.        MARVIN V. ZELKOWITZ  @B@@@AEX
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@A.        UNIVERSITY OF MEY
)@@G@@ARYLAND     @B@@@A.        COLLEGE PARK, MARYLAND 20742     @[@@@A.     EZ
)@@G@@@G@@@A.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMFA
)@@G@@S THEY@E@@@A.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    FB
)@@G@@@[@@@A.     @G@@@A.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS FC
)@@G@@REPRESENTED BY    @G@@@A.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OFD
)@@G@@R UNIVERSITY OF MARYLAND@E@@@A.   PL/1 COMPILER REMAINS ASSOCIATED WITH FE
)@@G@@THESE PROGRAMS.   @[@@@A.     @F@@@A.        2. MODIFICATIONS MAY BE MADFF
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@A.     @G@@@A.        (A) ANY RESULTIFG
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@A.        DESCRIBINFH
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@A.        IS FI
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@A.     @G@@@A.     FJ
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@AFK
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@AFL
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    FM
)@@G@@@C@@@A.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@A.     @F@@@AFN
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@AFO
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  FP
)@@G@@@[@@@A.     @F@@@A.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTFQ
)@@G@@ED TO OTHER @G@@@A.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEFR
)@@G@@ARLY INDICATE     @G@@@A.        WHETHER THE PROGRAMS ARE EXACT COPIES OFS
)@@G@@F THE UNIVERSITY OF     @E@@@A.        MARYLAND PLUM COMPILER OR ARE MODFT
)@@G@@IFICATIONS TO IT. @[@@@A.     @G@@@A.        3. THESE CONDITIONS ONLY APFU
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@A.   AND ARE NOT MEANT TO APPLYFV
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@A.   THE PURPOSE OF THESE CONDIFW
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@A.   EXPERIMENT WITH THE COMPILER AS FX
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@A.   IS NOT SOLD AND AS LONG AS IT ISFY
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@A.   FROM PLUM.    @[@@@A.     FZ
)@@G@@@[@@@A.     @[@@@A.     @[@@@A.     @[@@@A.     @[@@@A/.    @[@@@].     GA
)@@G@@@D@@@].                        UNIVAC 1108 FORTRAN V LIBRARY@[@@@].     GB
)@@G@@@B@@@]. DEXP(X) - DOUBLE PRECISION EXPONENTIAL  @[@@@].     @]@@@].  USAGC
)@@G@@GE    @[@@@].     @^@@@].   FORTRAN V REFERENCE @F@@@].   DEXP(X), WHEREGD
)@@G@@ X REPRESENTS THE (DOUBLE PRECISION) ARGUMENT.  @[@@@].     @A@@@].   ASGE
)@@G@@SEMBLER LANGUAGE REFERENCE    @^@@@].   A     LMJ   X11,DEXP@D@@@].   A+GF
)@@G@@1   +     LOC(X)          . ADDRESS OF ARGUMENT @C@@@].   A+2   +     SEGG
)@@G@@QNUM,PRGNAM   . WALK BACK WORD@C@@@].   A+3                         . NOGH
)@@G@@RMAL RETURN @[@@@].     @A@@@].   ARGUMENT AND FUNCTION RANGE     @H@@@]GI
)@@G@@.   THE ARGUMENT MUST BE A NORMALIZED, DOUBLE PRECISION, FLOATING POINT GJ
)@@G@@NUMBER@H@@@].   NOT MORE THAN APPROXIMATELY 709.089.  THE FUNCTION RETURGK
)@@G@@NS A NORMALIZED,  @ @@@].   FLOATING POINT NUMBER.    @[@@@].     @^@@@]GL
)@@G@@.   FUNCTIONS REFERENCED@]@@@].   NONE    @[@@@].     @^@@@].   ERROR COGM
)@@G@@NDITIONS    @I@@@].   UNNORMALIZED ARGUMENTS OR ARGUMENTS GREATER THAN AGN
)@@G@@PPROXIMATELY 709.089 CAUSE    @^@@@].   ERROR TERMINATION.  @[@@@].     GO
)@@G@@@^@@@].  MATHEMATICAL METHOD  @H@@@].   THE ARGUMENT IS MULTIPLIED BY LOGP
)@@G@@G2(E) GIVING W = X*LOG2(E) = N + M/2 + T, @G@@@].   WHERE N IS AN INTEGEGQ
)@@G@@R, M IS ZERO OR ONE AND 0.LE.T.LT.1/2.  THEN    @I@@@].   E**X = 2**W = GR
)@@G@@(2**N)*(2**(M/2))*(2**T).  THE QUANTITY 2**T IS COMPUTED BY A     @I@@@]GS
)@@G@@.   RATIONAL APPROXIMATION OF THE FORM: (Q(T*T) + T*P(T*T))/(Q(T*T) - T*GT
)@@G@@P(T*T)),    @G@@@].   WHERE Q IS OF DEGREE 3 AND P IS OF DEGREE 2.  IF AGU
)@@G@@BS(X) < 2**(-59), @B@@@].   E**X = 1.  IF X < -709.089, E**X = 0. @[@@@]GV
)@@G@@.     @#@@@].  PERFORMANCE    @[@@@].     @]@@@].   ACCURACY@H@@@].     GW
)@@G@@             NO. OF    MAX. REL.    RMS REL.      MAX. NO.  FULL LENGTH GX
)@@G@@@H@@@].       ARG.        ARG.       ERROR        ERROR      ERRONEOUS  GY
)@@G@@  ACCURACY  @H@@@].      RANGE       VALUES   *10**(-17)   *10**(-17)   GZ
)@@G@@   BITS         (%)     @H@@@].   -------------- ------   -----------  -HA
)@@G@@-----------   --------  ----------- @G@@@].    (-500,0)       5000     0HB
)@@G@@.1876       0.0488           2          83@G@@@].     (0,1)         3000HC
)@@G@@     0.1562       0.0533           2          76@G@@@].    (1,709)      HD
)@@G@@  5000     0.1639       0.0542           2          72@[@@@].     @]@@@]HE
)@@G@@.   TIMING  @ @@@].    12.7 MICROSEC. IF X = 0. @C@@@].    16.0 MICROSECHF
)@@G@@. IF 0 < ABS(X) < 2**(-59).   @D@@@].   135.9 MICROSEC. IF 2**(-59).LE.AHG
)@@G@@BS(X).LT.1/4.     @C@@@].   143.1 MICROSEC. IF 1/4.LE.ABS(X) AND M = 0. HH
)@@G@@@C@@@].   149.6 MICROSEC. IF 1/4.LE.ABS(X) AND M = 1. @[@@@].     @^@@@]HI
)@@G@@.   CORE REQUIREMENTS   @A@@@].   NUMBER OF INSTRUCTIONS   103    @A@@@]HJ
)@@G@@.   SIZE OF DATA AREA         28    @A@@@].   TOTAL CORE REQUIREMENTS  1HK
)@@G@@31    @[@@@].     @]@@@]$(5)     LIT@A@@@]$(3)     AXR$                 HL
)@@G@@    . @#@@@          DCLRG .  @F@@@#         PLAR .                    DHM
)@@G@@EFINE ACTIVATION RECORD LABELS@C@@@#         USING   AREC,X10 .        PHN
)@@G@@OINT TO AREC@^@@@]BFEXPT*  RTSAVE NAME    @ @@@]         DS     A3,DRTARHO
)@@G@@G1    @ @@@]         LA,U   A3,DRTARG1    @F@@@]         LR    R3,0,A3  HP
)@@G@@          .STORE UPPER WORD OF ARG IN R3  @^@@@]         DLM   A1,0,A3  HQ
)@@G@@@ @@@]         TOP   A1,(0400040,0) @F@@@]         J     CHECK          HR
)@@G@@    .ARG IS ZERO OR UNNORMALIZED    @^@@@]         DFU   A3,A1    @H@@@]HS
)@@G@@         LDSL  A4,11              .COMPUTE 70 BIT FRACT PRODUCT OF X*LOGHT
)@@G@@(E)   @^@@@#        J       $+2 .   @ @@@#NEXP$*   STORE  X11,ARSV11 .  HU
)@@G@@@G@#@]NEXB$*   TLE   A1,(0201254242673) . NEXPB$ ENTRY, 70 BIT MANT IN AHV
)@@G@@4,A5  @G@@@#         TLE   A1,(0201254242673) . NEXPB$ ENTRY, 70 BIT MANHW
)@@G@@T IN A4,A5  @ @@@]         TLE   A1,(0170600,0) @H@@@]         J     RANHX
)@@G@@GE              .X GTR THAN 709.089 OR LESS THAN 2**-59     @^@@@]      HY
)@@G@@   LA    A0,LLOGE @A@@@]         LA    A2,ULOGE           . @A@@@]      HZ
)@@G@@   SSL   A5,1               . @E@@@]         LR    R1,A3              .SIA
)@@G@@AVE CHAR OF X IN R1     @A@@@]         MI    A0,A4              . @A@@@]IB
)@@G@@         MI    A2,A5              . @A@@@]         DA    A0,A2          IC
)@@G@@    . @A@@@]         LA    A2,LLOGE           . @A@@@]         MI    A2,ID
)@@G@@A5              . @A@@@]         DSL   A2,35              . @A@@@]      IE
)@@G@@   DA    A0,A2              . @A@@@]         LA    A2,VLLOGE          . IF
)@@G@@@A@@@]         MI    A2,A4              . @A@@@]         DSL   A2,35    IG
)@@G@@          . @A@@@]         DA    A0,A2              . @E@@@]         DSLIH
)@@G@@   A1,35              .SAVE EXTRA BITS IN A2    @A@@@]         LSSL  A1,II
)@@G@@35              . @A@@@]         DSL   A0,35              . @A@@@]      IJ
)@@G@@   MI    A4,ULOGE           . @H@@@]         DA    A4,A0              .XIK
)@@G@@*LOG(E) IN A4,A5 WITH EXTRA BITS IN A2    @A@@@]         SZ    A3       IL
)@@G@@          . @A@@@]         SR    R1,A0              . @A@@@]         ANAIM
)@@G@@,U A0,01777           . @D@@@]         JN    A0,STRND           .X LESS IN
)@@G@@THAN 1/4    @E@@@]         LDSL  A3,2,A0            .FORM X*LOG(E)=N+F WIO
)@@G@@HERE  @E@@@]         SSL   A4,2,A0            .    N=INTEGER PART IN A3 IP
)@@G@@@G@@@]         LDSL  A4,2,A0            .    AND F=FRACTIONAL PART IN A4IQ
)@@G@@,A5   @A@@@]         SZ    A1                 . @G@@@]         LDSL  A1,IR
)@@G@@2,A0            .REPLACE INTEGER BITS SHIFTED OUT WITH@F@@@]         AA IS
)@@G@@   A5,A1              .     EXTRA BITS FROM A1 INTO A5@A@@@]         SZ IT
)@@G@@   A0                 . @E@@@]         JP    A4,NOFBIT          .F LESS IU
)@@G@@THAN 1/2, M=0     @E@@@]         SZ    R1                 .R1=0 MEANS M=IV
)@@G@@1 IN F=M/2+T@A@@@]         LSSL  A4,1               . @C@@@]         SSLIW
)@@G@@   A4,1               .T IN A4,A5   @A@@@]         TP    R3             IX
)@@G@@    . @F@@@]         AA,U  A3,1               .IF ARG IS NEG, ADD ONE TOIY
)@@G@@ N    @A@@@]NOFBIT   DSL   A4,2               . @C@@@]STRND    LR    R2,IZ
)@@G@@A3              .SAVE N IN R2 @A@@@]         DLSC  A1,A4              . JA
)@@G@@@A@@@]         LA    A1,(1*/24)         . @A@@@]         DSL   A1,50,A3 JB
)@@G@@          . @A@@@]         TLE,U A3,11              . @B@@@]         DA JC
)@@G@@   A4,A1              .ROUND T@A@@@]         AA,U  A0,01766           . JD
)@@G@@@A@@@]         LA    A3,A0              . @F@@@]         DFP   A3,A4    JE
)@@G@@          .CONVERT T TO FLOATING IN A4,A5 @C@@@]         DL    A2,A4    JF
)@@G@@          .T IN A2,A3   @C@@@]         DFM   A4,A4              .TSQ IN JG
)@@G@@A4,A5 @A@@@]         DL    A0,P02             . @A@@@]         DFM   A0,JH
)@@G@@A4              . @A@@@]         DFA   A0,P01             . @A@@@]      JI
)@@G@@   DFM   A0,A4              . @A@@@]         DFA   A0,P00             . JJ
)@@G@@@D@@@]         DFM   A0,A2              .B=T*P(TSQ) IN A0,A1@A@@@]      JK
)@@G@@   DL    A2,Q02             . @A@@@]         DFA   A2,A4              . JL
)@@G@@@A@@@]         DFM   A2,A4              . @A@@@]         DFA   A2,Q01   JM
)@@G@@          . @A@@@]         DFM   A2,A4              . @D@@@]         DFAJN
)@@G@@   A2,Q00             .A=Q(TSQ) IN A2     @A@@@]         TP    R3       JO
)@@G@@          . @F@@@]         DLN   A2,A2              .CHANGE SIGN OF A IFJP
)@@G@@ ARG NEG    @F@@@]         DFAN  A2,A0              .COMPUTE 2**T=1/2+1/JQ
)@@G@@2+2B/(A-B)  @A@@@]         AA    A0,(1*/24)         . @A@@@]         DFDJR
)@@G@@   A0,A2              . @D@@@]         DL    A2,RFACT1          .ROUND FJS
)@@G@@OR POS ARG  @A@@@]         TP    R3                 . @D@@@]         DL JT
)@@G@@   A2,RFACT2          .ROUND FOR NEG ARG  @A@@@]         DFA   A0,A2    JU
)@@G@@          . @A@@@]         DFA   A0,(0.5D)          . @C@@@]         DFAJV
)@@G@@   A0,(0.5D)          .2**T IN A0,A1@A@@@]         TNZ   R1             JW
)@@G@@    . @H@@@]         DFM   A0,SQRT2           .IF F GTR THAN 1/2, (2**T)JX
)@@G@@*SQRT(2)=2**F     @A@@@]         LA    A2,R2              . @A@@@]      JY
)@@G@@   LSSL  A2,24              . @A@@@]         TP    R3                 . JZ
)@@G@@@F@@@]         LN    A2,A2              .CHANGE SIGN OF N IF ARG IS NEG KA
)@@G@@@E@@@]         AA    A0,A2              .E**ARG=(2**N)*(2**F)     @^@@@]KB
)@@G@@         DL    A3,A0 .  @^@@@]         J     RTBACK . @A@@@]RANGE    TLEKC
)@@G@@   A1,(0201254242673)   @#@@@]         J     ONE@^@@@]         DSL   A3,KD
)@@G@@72    @#@@@]         TP    R3 @G@@@]         J     RTBACK              .KE
)@@G@@ IF ARG LESS THAN -709.089, E**ARG=0@F@@@]         J     NERRB$         KF
)@@G@@    .ERROR IF ARG GTR THAN 709.089  @A@@@]ONE      LA    A3,(0.5D)      KG
)@@G@@    . @ @@@]         AA    A3,(1*/24)     @A@@@]        SSL    A4,36    KH
)@@G@@          . @H@@@]         J     RTBACK              . IF X LESS THAN 2*KI
)@@G@@*-59 OR=0, E**ARG=1.0   @D@@@]CHECK    DJZ   A1,ONE             .X=0.,  KJ
)@@G@@E**0=1.     @D@@@]         J     NERRA$             .ARG UNNORMALIZED   KK
)@@G@@@B@@@]P00      +     0202577372002614037317645 .@B@@@]P01      +     020KL
)@@G@@1773116761404516577351 .@B@@@]P02      +     0200674472634065037301121 .KM
)@@G@@@B@@@]Q00      +     0202755630100560704713217 .@B@@@]Q01      +     020KN
)@@G@@2350002644667164177003 .@B@@@]Q02      +     0201366524464577407055655 .KO
)@@G@@@C@@@]RFACT1   +     0170540000000000000000000  .     @C@@@]RFACT2   +  KP
)@@G@@   0607337777777777777777777  .     @B@@@]SQRT2    +     020015520236314KQ
)@@G@@7747363111 .@C@@@]ULOGE    +     0270524354512      .MOST SIG PART@A@@@]KR
)@@G@@LLOGE    +     0340577027357      . @D@@@]VLLOGE     +   0241777320322  KS
)@@G@@    .LEAST SIG PART     @A@^@]NAME     +     ' EXP  '           . @A@@@^KT
)@@G@@NAME     INSERT  4,'EXP','    ' . . @A@@@]         END                  KU
)@@G@@    . ___89 OR LESS THAN 2**-59     @^@@@]      *[@@@@*SDFF*@C@@@^.   COKV
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@^.     @D@@@^.   QUESTIONKW
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@^.     @ @@@^.        MARKX
)@@G@@VIN V. ZELKOWITZ  @B@@@^.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@^KY
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@^.        COLLEGE PARK, MARYLANKZ
)@@G@@D 20742     @[@@@^.     @G@@@^.        PERMISSION TO USE THESE LISTINGS LA
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@^.   REPRESENT IS GRANTED UNDER THE FLB
)@@G@@OLLOWING CONDITIONS:    @[@@@^.     @G@@@^.        1. UNLIMITED USE MAY LC
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@^.   THESE LISTINGS PROVILD
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@^.   PL/1 COMPILER LE
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@^.     @F@@@^.        2. LF
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@^.     @G@@@^LG
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   LH
)@@G@@@G@@@^.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRLI
)@@G@@OGRAM @E@@@^.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  LJ
)@@G@@@[@@@^.     @G@@@^.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIALK
)@@G@@L CORRECTIONS     @F@@@^.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLLL
)@@G@@ BE REPORTED AND  @G@@@^.        A BRIEF DESCRIPTION OF THE FEATURE ADDELM
)@@G@@D SHALL BE SUBMITTED    @C@@@^.        TO THE UNIVERSITY OF MARYLAND, ANLN
)@@G@@D     @[@@@^.     @F@@@^.        (C) NO PROGRAMS DERIVED FROM THESE LISTLO
)@@G@@INGS SHALL BE SOLD@G@@@^.        WITHOUT WRITTEN APPROVAL FROM THE UNIVELP
)@@G@@RSITY OF MARYLAND, AND  @[@@@^.     @F@@@^.        (D) COPIES OF THESE PLQ
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@^.        LOCATIONS PROVIDED THLR
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@^.        WHETHER THE PROLS
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@^.        MARYLAND LT
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@^.     @G@@@^.        3. LU
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@^.   ANLV
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@^.   THLW
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@^.   EXPERIMELX
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@^.   IS NOT SLY
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@^.   FRLZ
)@@G@@OM PLUM.    @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     MA
)@@G@@@[@@@^/.    @[@@@@.     @D@@@@.                        UNIVAC 1108 FORTRMB
)@@G@@AN V LIBRARY@[@@@@.     @F@@@@. NEXPB$ - DOUBLE PRECISION BASE TO DOUBLEMC
)@@G@@ PRECISION EXPONENT     @[@@@@.     @]@@@@.  USAGE    @[@@@@.     @^@@@@MD
)@@G@@.   FORTRAN V REFERENCE @F@@@@.   A**B, WHERE A IS THE (DOUBLE PRECISIONME
)@@G@@) BASE AND B IS THE     @A@@@@.   (DOUBLE PRECISION) EXPONENT.    @[@@@@MF
)@@G@@.     @A@@@@.   ASSEMBLER LANGUAGE REFERENCE    @ @@@@.   A     LMJ   X1MG
)@@G@@1,NEXPB$    @D@@@@.   A+1   +     LOC(A)          . ADDRESS OF BASE     MH
)@@G@@@D@@@@.   A+2   +     LOC(B)          . ADDRESS OF EXPONENT @C@@@@.   A+MI
)@@G@@3   +     SEQNUM,PRGNAM   . WALK BACK WORD@C@@@@.   A+4                 MJ
)@@G@@        . NORMAL RETURN @[@@@@.     @A@@@@.   ARGUMENT AND FUNCTION RANGMK
)@@G@@E     @H@@@@.   THE ARGUMENTS A AND B MUST BE NORMALIZED, DOUBLE PRECISIML
)@@G@@ON, FLOATING POINT@D@@@@.   NUMBERS SUBJECT TO THE FOLLOWING CONSTRAINTSMM
)@@G@@:     @C@@@@.      IF A .GT. 0, THEN B*LOG(A) < 709.089,    @A@@@@.     MN
)@@G@@ IF A = 0, THEN B .GT. 0,     @C@@@@.      IF A .LT. 0, THEN B IS A WHOLMO
)@@G@@E NUMBER.   @F@@@@.   THE FUNCTION RETURNS A NORMALIZED, DOUBLE PRECISIOMP
)@@G@@N NUMBER.   @[@@@@.     @^@@@@.   FUNCTIONS REFERENCED@#@@@@.   DLOG, DEMQ
)@@G@@XP    @[@@@@.     @^@@@@.   ERROR CONDITIONS    @I@@@@.   ERROR TERMINATMR
)@@G@@ION IS CAUSED WHEN EITHER ARGUMENT IS UNNORMALIZED OR WHEN THE    @F@@@@MS
)@@G@@.   ARGUMENT PAIR IS OUTSIDE THE ALLOWABLE RANGE NOTED ABOVE.     @[@@@@MT
)@@G@@.     @^@@@@.  MATHEMATICAL METHOD  @ @@@@.   A**B = E**(B*LOGE(A))     MU
)@@G@@@[@@@@.     @#@@@@.  PERFORMANCE    @[@@@@.     @]@@@@.   ACCURACY@H@@@@MV
)@@G@@.                  NO. OF    MAX. REL.    RMS REL.      MAX. NO.  FULL LMW
)@@G@@ENGTH @H@@@@.       ARG.        ARG.       ERROR        ERROR      ERRONMX
)@@G@@EOUS    ACCURACY  @H@@@@.      RANGE       VALUES   *10**(-17)   *10**(-MY
)@@G@@17)      BITS         (%)     @H@@@@.   -------------- ------   --------MZ
)@@G@@---  ------------   --------  ----------- @H@@@@.   A: (0.01,10)    3000NA
)@@G@@      1.5160        0.3201         5          23.7    @#@@@@.   B: (-100NB
)@@G@@,100) @G@@@@.   COMPARABLE ACCURACIES WERE OBTAINED FOR ARGUMENTS OUTSIDNC
)@@G@@E THE ABOVE @#@@@@.   INTERVAL.     @[@@@@.     @]@@@@.   TIMING  @E@@@@ND
)@@G@@.   53.0 MICROSEC.  (ADD EXECUTION TIMES FOR DLOG AND DEXP) @[@@@@.     NE
)@@G@@@^@@@@.   CORE REQUIREMENTS   @A@@@@.   NUMBER OF INSTRUCTIONS    70    NF
)@@G@@@A@@@@.   SIZE OF DATA AREA         12    @A@@@@.   TOTAL CORE REQUIREMENG
)@@G@@NTS   82    @C@@@@.   (ADD CORE REQUIREMENTS FOR DLOG AND DEXP).  @[@@@@NH
)@@G@@.     @G@@@@         AXR$                      . A,X,R REGISTERS AND J DNI
)@@G@@ESIGNATORS  @#@@@#         DCLRG .  @]@@@@$(5)     LIT@[@@@@$(3)  @C@@@@NJ
)@@G@@REXG*    SX         X11,OLDX11 .     SAVE RETURN@B@@@@         RTSAVE   NK
)@@G@@ NAME .   SAVE REGS     @ @]@@         L         A3,2,A1 .  @ @]@@      NL
)@@G@@   L         R4,0,A1    @ @[@@         L         A1,1,A1 .  @ @]@[      NM
)@@G@@   L         A2,1,A1 .  @^@@@@         SZ        SIGN @C@]@@         DLMNN
)@@G@@       A0,0,A2         . ABS(BASE)  @C@@@]         DLM       A0,0,A1    NO
)@@G@@     . ABS(BASE)  @C@]@@         DL        A4,0,A3         . EXPONENT   NP
)@@G@@@C@@@]         DL        A4,0,A2         . EXPONENT   @A@@@@         TOPNQ
)@@G@@       A4,(0400040,0)   @F@@@@         J         CHECK           . EXPONNR
)@@G@@ENT ZERO OR UNNORMALIZED@A@@@@LEGAL    TEP       A0,(0400040,0)   @D@@@@NS
)@@G@@         J         STORE           . BASE UNEQUAL ZERO@ @@@@         DJZNT
)@@G@@       A0,$+2     @D@@@@         J         NERRA$          . BASE UNNORMNU
)@@G@@ALIZED@E@@@@         DJZ       A4,NERRB$       . BASE = 0 , EXPONENT = 0NV
)@@G@@@E@@@@         JN        A4,NERRB$       . BASE = 0 , EXPONENT < 0@E@@@@NW
)@@G@@         J         3,X11           . BASE = 0 , EXPONENT > 0@D@@@@CHECK NX
)@@G@@   DJZ       A4,LEGAL        . EXPONENT LEGAL   @E@@@@         J        NY
)@@G@@ NERRA$          . EXPONENT UNNORMALIZED  @ @@@@STORE    DS        A0,BANZ
)@@G@@SE    @ @@@@         DS        A4,EXPON   @D@@@@         TN        0,A2 OA
)@@G@@           . BASE POSITIVE    @E@@@@         J         REF             .OB
)@@G@@ YES,START CALCULATIONS @G@@@@         LA,U      A3,02074        . NO,TEOC
)@@G@@ST EXPONENT FOR INTEGRAL VALUE@^@@@@         LDSL      A2,60@F@@@@      OD
)@@G@@   DFA       A4,A2           . ELIMINATE FRACTION, IF ANY   @ @@@@      OE
)@@G@@   DAN       A4,EXPON   @ @@@@         DJZ       A4,$+2     @G@@@@      OF
)@@G@@   J         NERRB$          . BASE < 0 AND EXPONENT NON-INTEGER  @ @@@@OG
)@@G@@         AA        A2,(0100,0)@E@@@@         DFA       A2,EXPON        .OH
)@@G@@ ELIMINATE UNIT, IF ANY @ @@@@         DAN       A2,EXPON   @D@@@@      OI
)@@G@@   DJZ       A2,REF          . EVEN EXPONENT    @D@@@@         SN       OJ
)@@G@@ A0,SIGN         . ODD EXPONENT     @ @@@@REF      DL          A3,BASE  OK
)@@G@@@ @@@@         LMJ        X11,DLOGX @B@@@@.         RETURN VALUE IN R1, OL
)@@G@@R2 AND R3   @H@@@@         DFU       A3,EXPON        . START Q PRECISIONOM
)@@G@@ PRODUCT  EXP*LOGE(BASE)@^@@@@         LDSC      A4,11@^@@@@         SSCON
)@@G@@       A5,1 @ @@@@         DS        A4,STOR    @ @@@@         SA       OO
)@@G@@ A3,STOR+2  @^@@@@         DL        A1,R1@^@@@@         LA        A3,R3OP
)@@G@@@^@@@@         LDSC      A2,1 @^@@@@         SSC       A3,1 @^@@@@      OQ
)@@G@@   LA        A4,A3@^@@@@         SA        A1,R2@^@@@@         SA       OR
)@@G@@ A2,A0@ @@@@         MI        A2,STOR+1  @ @@@@         MI        A4,STOS
)@@G@@OR    @^@@@@         DA        A4,A2@ @@@@         MI        A0,STOR    OT
)@@G@@@^@@@@         DSA       A4,35@^@@@@         DA        A4,A0@^@@@@      OU
)@@G@@   DLSC      A1,A4@^@@@@         SA        A1,R3@^@@@@         LA       OV
)@@G@@ A0,R2@ @@@@         AA        A0,STOR+2  @ @@@@         ANA,U     A0,01OW
)@@G@@777,A3@^@@@@         DLM       A4,A1@^@@@@         LA        A3,A0@^@@@@OX
)@@G@@         ANA,U     A0,11@^@@@@         DFP       A0,A4@A@@@@         LMJOY
)@@G@@        X11,NEXP$ .     @G@@@@         TP        SIGN            . IS BAOZ
)@@G@@SE NEGATIVE AND EXPONENT ODD  @B@@@@         DLN       A3,A3           .PA
)@@G@@ YES  @^@]@@         L         X5,R4@ @]@@         DS        A3,0,X5 .  PB
)@@G@@@ @]@@         L          X11,OLDX11@E@@@]         L          X11,OLDX11PC
)@@G@@   . RETURN RESULT IN A3-A4   @^@@@@         J         0,X11@ @@@@BASE  PD
)@@G@@   EQU        DRTARG1+2 @ @@@@EXPON    EQU         DRTARG1+4@ @@@@SIGN  PE
)@@G@@   EQU        DRTARG1+6 @ @@@@OLDX11   EQU        DRTARG1+8 @ @@@@STOR  PF
)@@G@@   EQU        DRTARG1+9 @#@#@@NAME      ' F**F '@A@@@#NAME     INSERT  5PG
)@@G@@,'F**','F   ' .   @]@@@@         END___TION RANGE     @H@@@@.   THE ARGUPH
)@@G@@MENTS A AND B MUST BE NO*[@@@@*SDFF*@C@@@^.   COPYRIGHT 1975 BY UNIVERSIPI
)@@G@@TY OF MARYLAND    @[@@@^.     @D@@@^.   QUESTIONS CONCERNING THIS SHOULDPJ
)@@G@@ BE DIRECTED TO:  @[@@@^.     @ @@@^.        MARVIN V. ZELKOWITZ  @B@@@^PK
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@^.        UNIVERSITY OF MPL
)@@G@@ARYLAND     @B@@@^.        COLLEGE PARK, MARYLAND 20742     @[@@@^.     PM
)@@G@@@G@@@^.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMPN
)@@G@@S THEY@E@@@^.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    PO
)@@G@@@[@@@^.     @G@@@^.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS PP
)@@G@@REPRESENTED BY    @G@@@^.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OPQ
)@@G@@R UNIVERSITY OF MARYLAND@E@@@^.   PL/1 COMPILER REMAINS ASSOCIATED WITH PR
)@@G@@THESE PROGRAMS.   @[@@@^.     @F@@@^.        2. MODIFICATIONS MAY BE MADPS
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@^.     @G@@@^.        (A) ANY RESULTIPT
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@^.        DESCRIBINPU
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@^.        IS PV
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@^.     @G@@@^.     PW
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@^PX
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@^PY
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    PZ
)@@G@@@C@@@^.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@^.     @F@@@^QA
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@^QB
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  QC
)@@G@@@[@@@^.     @F@@@^.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTQD
)@@G@@ED TO OTHER @G@@@^.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEQE
)@@G@@ARLY INDICATE     @G@@@^.        WHETHER THE PROGRAMS ARE EXACT COPIES OQF
)@@G@@F THE UNIVERSITY OF     @E@@@^.        MARYLAND PLUM COMPILER OR ARE MODQG
)@@G@@IFICATIONS TO IT. @[@@@^.     @G@@@^.        3. THESE CONDITIONS ONLY APQH
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@^.   AND ARE NOT MEANT TO APPLYQI
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@^.   THE PURPOSE OF THESE CONDIQJ
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@^.   EXPERIMENT WITH THE COMPILER AS QK
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@^.   IS NOT SOLD AND AS LONG AS IT ISQL
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@^.   FROM PLUM.    @[@@@^.     QM
)@@G@@@[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^/.    @[@@@@.     QN
)@@G@@@D@@@@.                        UNIVAC 1108 FORTRAN V LIBRARY@[@@@@.     QO
)@@G@@@C@@@@. NEXP1$ - INTEGER BASE TO INTEGER EXPONENT     @[@@@@.     @]@@@@QP
)@@G@@.  USAGE    @[@@@@.     @^@@@@.   FORTRAN V REFERENCE @G@@@@.   C**D, WHQQ
)@@G@@ERE C IS THE (INTEGER) BASE AND D IS THE (INTEGER) EXPONENT.@[@@@@.     QR
)@@G@@@A@@@@.   ASSEMBLER LANGUAGE REFERENCE    @ @@@@.   A     LMJ   X11,NEXPQS
)@@G@@1$    @D@@@@.   A+1   +     LOC(C)          . ADDRESS OF BASE     @D@@@@QT
)@@G@@.   A+2   +     LOC(D)          . ADDRESS OF EXPONENT @C@@@@.   A+3   + QU
)@@G@@    SEQNUM,PRGNAM   . WALK BACK WORD@C@@@@.   A+4                       QV
)@@G@@  . NORMAL RETURN @[@@@@.     @A@@@@.   ARGUMENT AND FUNCTION RANGE     QW
)@@G@@@H@@@@.   THE ARGUMENTS C AND D MUST BE INTEGER NUMBERS SUCH THAT C**D .QX
)@@G@@LE. 2**35-1,@E@@@@.   AND IF C=0 , D > 0.  THE FUNCTION RETURNS AN INTEGQY
)@@G@@ER.   @[@@@@.     @^@@@@.   FUNCTIONS REFERENCED@]@@@@.   NONE    @[@@@@QZ
)@@G@@.     @^@@@@.   ERROR CONDITIONS    @H@@@@.   ERROR TERMINATION IS CAUSERA
)@@G@@D IF C=0 AND D .LE. 0 OR IF C**D .GT. 2**35-1.  @[@@@@.     @^@@@@.  MATRB
)@@G@@HEMATICAL METHOD  @H@@@@.   C**D IS FOUND BY TAKING C AS A FACTOR ABS(D)RC
)@@G@@ TIMES.  C**D = 0 IF D < 0 AND@^@@@@.   C IS NOT 0 OR 1.    @[@@@@.     RD
)@@G@@@#@@@@.  PERFORMANCE    @[@@@@.     @]@@@@.   ACCURACY@G@@@@.   THE FUNCRE
)@@G@@TION IS EXACT FOR ALL VALUES FOR WHICH C**D .LE. 2**35-1.   @[@@@@.     RF
)@@G@@@]@@@@.   TIMING  @G@@@@.   (9.9 + 4.8*K + 6.3*M) MICROSEC., WHERE K IS RG
)@@G@@THE MOST SIGNIFICANT BIT@E@@@@.   POSITION AND M IS THE NUMBER OF ONE BIRH
)@@G@@TS IN ABS(D).     @[@@@@.     @^@@@@.   CORE REQUIREMENTS   @A@@@@.   NURI
)@@G@@MBER OF INSTRUCTIONS    28    @A@@@@.   SIZE OF DATA AREA          1    RJ
)@@G@@@A@@@@.   TOTAL CORE REQUIREMENTS   29    @[@@@@.     @A@@@@         AXRRK
)@@G@@$                     . @#@@@#         DCLRG .  @[@@@@$(3)  @ @@@@REXFXBRL
)@@G@@*     RTSAVE   NAME   . @ @]@@            L        X3,0,A1 .@A@]@@      RM
)@@G@@      L        A2,*1,A1 .   C @A@]@@            L        A4,*2,A1 .    DRN
)@@G@@@A@@@]            L        A4,0,A2 .    D @A@@@]            L        A2,RO
)@@G@@0,A1 .   C  @A@]@@        SZ    A3                 .  @A@@@@         LA,RP
)@@G@@U  A0,1               . @C@@@@         JZ    A4,EXP1D           . EXPONERQ
)@@G@@NT = 0@C@@@@         LM    A3,A2              . ABS(BASE)   @A@@@@      RR
)@@G@@   TG,U  A3,2               . @D@@@@         J     EXP1N              . RS
)@@G@@ABS(BASE) .GT. 1  @D@@@@         JNZ   A2,$+3             . ABS(BASE) = RT
)@@G@@1     @C@@@@         SZ    A0                 . BASE = 0    @E@@@@      RU
)@@G@@   JN    A4,NERRB$          . BASE = 0, EXP NEGATIVE  @D@@@@         LM RV
)@@G@@   A4,A4              . ABS(BASE) = 1     @E@@@@         AND   A3,A4    RW
)@@G@@          . EXP EVEN (0), OR ODD (1)@A@@@@EXP1N    JN    A4,EXP1C       RX
)@@G@@    . @A@@@@AGAIN    JNB   A4,SQUARE          . @A@@@@         MF    A0,RY
)@@G@@A2              . @C@@@@         JNZ   A0,NERRC$          . OVERFLOW    RZ
)@@G@@@A@@@@         DSC   A0,37              . @A@@@@SQUARE   SSL   A4,1     SA
)@@G@@          . @B@@@@         JZ    A4,BACK           . RETURN @A@@@@      SB
)@@G@@   MF    A2,A2              . @C@@@@         JNZ   A2,NERRC$          . SC
)@@G@@OVERFLOW    @A@@@@         DSC   A2,37              . @A@@@@         J  SD
)@@G@@   AGAIN              . @F@@@@EXP1C    SZ    A0                 . ABS(BASE
)@@G@@SE) .GT. 1,EXP IS NEG   @D@@@@EXP1D    JNZ   A2,BACK           . N**0 = SF
)@@G@@1, N .NE. 0 @D@@@@         J     NERRB$             . BASE = 0, EXP = 0.SG
)@@G@@@^@]@@BACK     S    A0,0,X3 . @D@@@]BACK     S    A0,A3 .              RSH
)@@G@@ETURN RESULT IN A3@^@@@@         J    RTBACK .  @#@#@[NAME     ' I**I ' SI
)@@G@@@A@@@#NAME     INSERT  5,'I**','I   ' .   @A@@@@         END            SJ
)@@G@@          . ___LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@^.   REPRESENSK
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@^.     @G@@@^.     SL
)@@G@@*[@@@@*SDFF*@C@@@A.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@ASM
)@@G@@.     @D@@@A.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@ASN
)@@G@@.     @ @@@A.        MARVIN V. ZELKOWITZ  @B@@@A.        DEPARTMENT OF CSO
)@@G@@OMPUTER SCIENCE   @A@@@A.        UNIVERSITY OF MARYLAND     @B@@@A.     SP
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@A.     @G@@@A.        PERMISSIOSQ
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@A.   REPRESENSR
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@A.     @G@@@A.     SS
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@AST
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDSU
)@@G@@@E@@@A.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@ASV
)@@G@@.     @F@@@A.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDSW
)@@G@@ED:   @[@@@A.     @G@@@A.        (A) ANY RESULTING PROGRAM, OR REPORT, PSX
)@@G@@APER OR DOCUMENTATION   @G@@@A.        DESCRIBING SUCH PROGRAM WILL CLEASY
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@A.        IS A DIALECT OF PLUM OR IS SZ
)@@G@@DERIVED FROM PLUM, AND  @[@@@A.     @G@@@A.        (B) ALL SUCH MODIFICATA
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@A.        OF ERRORS IN THTB
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@A.        A BRIEF DESCRIPTC
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@A.        TO THE UNTD
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@A.     @F@@@A.        (C) NO PROGRAMSTE
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@A.        WITHOUT WRITTENTF
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@A.     @F@@@A.     TG
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@A.     TH
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@ATI
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     TJ
)@@G@@@E@@@A.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@ATK
)@@G@@.     @G@@@A.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERTL
)@@G@@ ITSELF,    @F@@@A.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN TM
)@@G@@USING PLUM. @E@@@A.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USTN
)@@G@@ER TO @F@@@A.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRTO
)@@G@@ODUCT @G@@@A.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT TP
)@@G@@DEVELOPED   @#@@@A.   FROM PLUM.    @[@@@A.     @[@@@A.     @[@@@A.     TQ
)@@G@@@[@@@A.     @[@@@A.     @[@@@A/.    @[@@@].     @D@@@].                 TR
)@@G@@       UNIVAC 1108 FORTRAN V LIBRARY@[@@@].     @C@@@]. DLOG(X) - DOUBLETS
)@@G@@ PRECISION NATURAL LOGARITHM  @[@@@].     @]@@@].  USAGE    @[@@@].     TT
)@@G@@@^@@@].   FORTRAN V REFERENCE @F@@@].   DLOG(X), WHERE X REPRESENTS THE TU
)@@G@@(DOUBLE PRECISION) ARGUMENT.  @[@@@].     @A@@@].   ASSEMBLER LANGUAGE RTV
)@@G@@EFERENCE    @ @@@].            DL    A3,ARG     @^@@@].   A     LMJ   X1TW
)@@G@@1,DLOG@[@@@].     @A@@@].   ARGUMENT AND FUNCTION RANGE     @H@@@].   THTX
)@@G@@E ARGUMENT MUST BE A POSITIVE (NONZERO), NORMALIZED, DOUBLE PRECISION,  TY
)@@G@@@H@@@].   FLOATING POINT NUMBER.  THE FUNCTION RETURNS A NORMALIZED, FLOTZ
)@@G@@ATING POINT @]@@@].   NUMBER. @[@@@].     @^@@@].   FUNCTIONS REFERENCEDUA
)@@G@@@]@@@].   NONE    @[@@@].     @^@@@].   ERROR CONDITIONS    @H@@@].   UNUB
)@@G@@NORMALIZED, NEGATIVE OR ZERO ARGUMENTS RESULT IN ERROR TERMINATION.     UC
)@@G@@@[@@@].     @^@@@].  MATHEMATICAL METHOD  @H@@@].   IF 0.96 .LE. X .LE. UD
)@@G@@1.05, LOGE(X) IS APPROXIMATED BY P(Z), WHERE P IS A   @G@@@].   TAYLOR SUE
)@@G@@ERIES OF DEGREE TWELVE AND Z = X - 1.  IF X .LT. 0.96 OR    @H@@@].   X UF
)@@G@@.GT. 1.05, THE RANGE OF X IS REDUCED BY WRITING X = 2**B * M, WHERE     UG
)@@G@@@H@@@].   0.5 .LE. M .LT. 1.0.  THEN LOGE(X) = B * LOGE(2) + LOGE(M).  LUH
)@@G@@ET A BE THE @H@@@].   FIVE MOST SIGNIFICANT BITS OF M.  THEN LOGE(M) = LUI
)@@G@@OGE(A) + LOGE(M/A).     @H@@@].   LOGE(A) IS STORED IN A TABLE AND LOG(MUJ
)@@G@@/A) IS APPROXIMATED BY Z*Q(Z**2),   @F@@@].   WHERE Q IS A FIFTH DEGREE UK
)@@G@@POLYNOMIAL AND Z = (M - A)/(M + A). @[@@@].     @#@@@].  PERFORMANCE    UL
)@@G@@@[@@@].     @]@@@].   ACCURACY@H@@@].                  NO. OF    MAX. REUM
)@@G@@L.    RMS REL.      MAX. NO.  FULL LENGTH @H@@@].       ARG.        ARG.UN
)@@G@@       ERROR        ERROR      ERRONEOUS    ACCURACY  @H@@@].      RANGEUO
)@@G@@       VALUES   *10**(-17)   *10**(-17)      BITS         (%)     @H@@@]UP
)@@G@@.   -------------- ------   -----------  ------------   --------  ------UQ
)@@G@@----- @H@@@].   (0,0.95)        3000      0.2567        0.0419         2UR
)@@G@@          91.8    @H@@@].   (0.95,1.05)     3000      0.3295        0.11US
)@@G@@95         3          35.1    @H@@@].   (1.05,10**3)    3000      0.0814UT
)@@G@@        0.0338         1          99.3    @F@@@].   THE ACCURACY IS COMPUU
)@@G@@ARABLE OVER THE ENTIRE ARGUMENT RANGE.    @[@@@].     @]@@@].   TIMING  UV
)@@G@@@D@@@].   137.3 MICROSEC. IF X .LT. 0.96 OR X .GT. 1.05.    @C@@@].   13UW
)@@G@@3.5 MICROSEC. IF 0.96 .LE. X .LE. 1.05.   @[@@@].     @^@@@].   CORE REQUX
)@@G@@UIREMENTS   @A@@@].   NUMBER OF INSTRUCTIONS    81    @A@@@].   SIZE OF UY
)@@G@@DATA AREA         69    @A@@@].   TOTAL CORE REQUIREMENTS  150    @[@@@]UZ
)@@G@@.     @#@@@]        AXR$ .    @#@@@          DCLRG .  @C@@@#         PLAVA
)@@G@@R .  DEFINE AREC FOR X11 SAVE AREA  @E@@@#         USING   AREC,X10 .   VB
)@@G@@     POINT TO CURRENT AREC    @#@@@]$(5)    LIT .     @[@@@]$(3)  @#@@@]VC
)@@G@@BFLOGT*   J   DLOG@A@@@]          J   CDLOG .   COMPLEX     @^@@@]DLOG  VD
)@@G@@   RTSAVE  NAME   @[@@@]DLOGY @^@#@]        SZ      A3.     @ @@@]      VE
)@@G@@  LA      A2,(076,0) .  @^@@@]        DL      A0,A3 . @D@@@]        DFU VF
)@@G@@    A3,A0 .             UNPACK ARGUMENT   @F@@@]        TLE     A4,(040,VG
)@@G@@0) .        JUMP TO NERR$ IF ARGUMENT IS  @G@@@]        J       NERRA$. VH
)@@G@@            UNNORMALIZED, ZERO, OR NEGATIVE     @A@@@]        TG      A0VI
)@@G@@,(0200075341217) .@A@@@]        TG      A0,(0200141463146) .@E@@@]      VJ
)@@G@@  J       NORMAL              X.LT.0.96 OR X.GT.1.05  @D@@@]        J   VK
)@@G@@    TAYLOR .            0.96.LE.X.LE.1.05 @C@@@]NORMAL  ANA,U   A3,02000VL
)@@G@@ .          COMPUTE B   @^@@@]        SA      A3,B .  @C@@@]        AND VM
)@@G@@    A2,A4 .             A TO A3     @^@@@]        DL      A1,A4 . @B@@@]VN
)@@G@@        AA      A1,A3 .             M+A   @B@@@]        ANA     A4,A3 . VO
)@@G@@            M-A   @ @@@]        LA,U    A0,02000 .    @C@@@]        DFP VP
)@@G@@    A0,A1 .             FLOAT M+A   @^@@@]        DS      A1,R1 . @C@@@]VQ
)@@G@@        DFP     A0,A4 .             FLOAT M-A   @C@@@]        DFD     A1VR
)@@G@@,R1 .             (M-A)/(M+A) @^@@@]        DS      A1,R1 . @ @@@]      VS
)@@G@@  LA      A0,(-4,20) .  @^@@@]        DFM     A1,A1 . @F@@@]        DL  VT
)@@G@@    A4,TCOEF,*A0 .      COMPUTE LOGE(M/A)=Z*P(Z**2)   @E@@@]LOOP1   DFM VU
)@@G@@    A4,A1 .             WHERE Z=(M-A)/(M+A)     @ @@@]        DFA     A4VV
)@@G@@,TCOEF,A0 . @ @@@]        JMGI    A0,LOOP1 .    @^@@@]        DFM     A4VW
)@@G@@,R1 . @D@@@]        DS      A4,R2 .             SAVE  LOGE(M/A)/2 @G@@@]VX
)@@G@@        LA      A0,TABLE .          LOAD  MOST SIGNIF. PART OF LOGE(2)  VY
)@@G@@@G@@@]        LA      A4,TABLE-1 .        LOAD LEAST SIGNIF. PART OF LOGVZ
)@@G@@E(2)  @D@@@]        MF      A0,B .              COMPUTE B*LOGE(2) @^@@@]WA
)@@G@@        MF      A4,B .  @E@@@]        DLSC    A0,A0 .             LOCATEWB
)@@G@@ BINARY POINT     @^@@@]        TNZ     A0 .    @^@@@]        LA,U    A2WC
)@@G@@,35 . @^@@@]        LN      A2,A2 . @^@@@]        DSA     A0,1 .  @F@@@]WD
)@@G@@        DSA     A4,36,A2 .          LINE UP LINARY POINT FOR ADD  @C@@@]WE
)@@G@@        DA      A0,A4 .             B*LOGE(2)   @D@@@]        SSL     A3WF
)@@G@@,18 .             USE A AS INDEX    @D@@@]        DL      A4,TABLE-32,A3WG
)@@G@@ .    LOAD -LOGE(A)     @F@@@]        DSA     A4,36,A2 .          LINE UWH
)@@G@@P LINARY POINT FOR ADD  @D@@@]        DAN     A0,A4 .             B*LOGEWI
)@@G@@(2)+LOGE(A) @E@@@]        DFU     A3,R2 .             UNPACK  LOGE(M/A)/WJ
)@@G@@2     @F@@@]        ANA,U   A3,01777 .          MULTIPLY BY 2, SUBTRACT WK
)@@G@@BIAS  @^@@@]        TNZ     A4 .    @^@@@]        SZ      A3 .    @^@@@]WL
)@@G@@        ANU     A2,A3 . @^@@@]        LDSC    A4,11 . @F@@@]        DSA WM
)@@G@@    A4,36,A3 .          LINE UP BINARY POINT FOR ADD  @F@@@]        DA  WN
)@@G@@    A0,A4 .             B*LOGE(2)+LOGE(A)+LOGE(M/A)   @C@@@]        DLSCWO
)@@G@@    A3,A0 .             NORMALIZE   @D@@@]        DSA     A3,1 .        WP
)@@G@@      INSURE NO OVERFLOW@G@@@]         DS        A3,R2          . SAVE 7WQ
)@@G@@0 BIT MANTISSA FOR NEXPB$     @H@@@]        ANA     A2,A5 .             WR
)@@G@@SUBTRACT SHIFT COUNT FROM CHARACTERISTIC  @F@@@]        AA,U    A2,02032WS
)@@G@@ .          COMPUTE BIASED CHARACTERISTIC @F@@@]         LR,XU     R1,10WT
)@@G@@,A2       . SAVE CHARACTERISTIC FOR NEXPB$@ @@@]        LA,U    A0,01000WU
)@@G@@ .    @^@@@]        TP      A3 .    @^@@@]        LN      A0,A0 . @E@@@]WV
)@@G@@        DSA     A0,36 .             SET UP ROUNDING CONSTANT@B@@@]      WW
)@@G@@  DA      A3,A0 .             ROUND @F@@@]        DFP     A2,A3 .       WX
)@@G@@      CONVERT TO DOUBLE PRECISION   @^@@@]         J      RTBACK .@G@@@]WY
)@@G@@TAYLOR  DFAN    A0,(0.5D) .             X-1/2-1/2 TO SAVE SIGNIFICANCE  WZ
)@@G@@@ @@@]        DFAN    A0,(0.5D) .   @ @@@]        LA      A3,(-2,24) .  XA
)@@G@@@^@@@]        DL      A4,A0 . @G@@@]        DFM     A0,TCOEF,*A3 .      XB
)@@G@@EVALUATE TAYLOR SERIES AROUND X=1   @ @@@]LOOP    DFA     A0,TCOEF,A3 . XC
)@@G@@@^@@@]        DFM     A0,A4 . @ @@@]        JMGI    A3,LOOP .     @H@@@]XD
)@@G@@         DFU       A2,A0          . SAVE RESULT IN FRACTIONAL FORM FOR NXE
)@@G@@EXPB$ @^@@@]         LDSC      A3,10@^@@@]         SA        A2,R1@^@@@]XF
)@@G@@         DS        A3,R2@^@@@]          DL    A3,A0 . @ @@@]          J XG
)@@G@@     RTBACK .     @E@#@]DLOGX*     SX,H2    X11,9,X10 .    SET X11 IN X1XH
)@@G@@1 SAVE AREA @E@^@#DLOGX*     SX,H2    X11,ARSV11 .    SET X11 IN X11 SAVXI
)@@G@@E AREA@E@@@^DLOGX*     STORE    X11,ARSV11 .    SET X11 IN X11 SAVE AREAXJ
)@@G@@@^@@@]           J    DLOGY . @#@ @]NAME      ' LOG  '@D@@@ NAME        XK
)@@G@@     INSERT            4,'LOG','    ' .   @A@@@]TCOEF   +       02001400XL
)@@G@@00000 .     @B@@@]                  +       0000000000000 . @A@@@]      XM
)@@G@@  +       0577737777777 .     @A@@@]        +       0777777777777 .     XN
)@@G@@@A@@@]        +       0177752525252 .     @A@@@]        +       05252525XO
)@@G@@25253 .     @A@@@]        +       0600037777777 .     @A@@@]        +   XP
)@@G@@    0777777777777 .     @A@@@]        +       0177663146314 .     @A@@@]XQ
)@@G@@        +       0631463146315 .     @A@@@]        +       0600125252525 XR
)@@G@@.     @A@@@]        +       0252525252524 .     @A@@@]        +       01XS
)@@G@@77644444444 .     @A@@@]        +       0444444444445 .     @A@@@]      XT
)@@G@@  +       0600137777777 .     @A@@@]        +       0777777777777 .     XU
)@@G@@@A@@@]        +       0177570707070 .     @A@@@]        +       07070707XV
)@@G@@07071 .     @A@@@]        +       0600214631463 .     @A@@@]        +   XW
)@@G@@    0146314631462 .     @A@@@]        +       0177556427213 .     @A@@@]XX
)@@G@@        +       0505642721351 .     @A@@@]        +       0600225252525 XY
)@@G@@.     @A@@@]        +       0252525252524 .     @A@@@]        +       01XZ
)@@G@@77547304730 .     @A@@@]        +       0473047304731 .     @#@@@]B     YA
)@@G@@  +       0 @G@@@]        +       0216367465362 .  LEASE SIGNIFICANT 35 YB
)@@G@@BITS OF LOGE(2)   @D@@@]TABLE   +       0261344137676 .  TABLE -- LOGE(AYC
)@@G@@)     @A@@@]        +       0434757152744 .     @A@@@]        +       02YD
)@@G@@41731776276 .     @A@@@]        +       0221704636605 .     @A@@@]      YE
)@@G@@  +       0223226102115 .     @A@@@]        +       0155622360357 .     YF
)@@G@@@A@@@]        +       0205347334264 .     @A@@@]        +       00523722YG
)@@G@@06561 .     @A@@@]        +       0170244241504 .     @A@@@]        +   YH
)@@G@@    0711546624677 .     @A@@@]        +       0153651225111 .     @A@@@]YI
)@@G@@        +       0063350147253 .     @A@@@]        +       0137727643573 YJ
)@@G@@.     @A@@@]        +       0005215755715 .     @A@@@]        +       01YK
)@@G@@24425340347 .     @A@@@]        +       0050753716040 .     @A@@@]      YL
)@@G@@  +       0111513041046 .     @A@@@]        +       0466711170167 .     YM
)@@G@@@A@@@]        +       0077144343313 .     @A@@@]        +       01663362YN
)@@G@@76631 .     @A@@@]        +       0065117551710 .     @A@@@]        +   YO
)@@G@@    0533170667453 .     @ @@@]        +       0053375003265 @A@@@]      YP
)@@G@@  +       0207554375602 .     @A@@@]        +       0042136164042 .     YQ
)@@G@@@A@@@]        +       0374436757063 .     @A@@@]        +       00311465YR
)@@G@@71352 .     @ @@@]        +       0624461053416 @A@@@]        +       00YS
)@@G@@20413142654 .     @A@@@]        +       0743500642121 .     @A@@@]      YT
)@@G@@  +       0010101273047 .     @A@@@]        +       0472104216005 .     YU
)@@G@@@#@@@]        END .     ___IF. PART OF LOGE(2)  *[@@@@*SDFF*@C@@@ .   COYV
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@ .     @D@@@ .   QUESTIONYW
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@ .     @ @@@ .        MARYX
)@@G@@VIN V. ZELKOWITZ  @B@@@ .        DEPARTMENT OF COMPUTER SCIENCE   @A@@@ YY
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@ .        COLLEGE PARK, MARYLANYZ
)@@G@@D 20742     @[@@@ .     @G@@@ .        PERMISSION TO USE THESE LISTINGS ZA
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@ .   REPRESENT IS GRANTED UNDER THE FZB
)@@G@@OLLOWING CONDITIONS:    @[@@@ .     @G@@@ .        1. UNLIMITED USE MAY ZC
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@ .   THESE LISTINGS PROVIZD
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@ .   PL/1 COMPILER ZE
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@ .     @F@@@ .        2. ZF
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@ .     @G@@@ ZG
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   ZH
)@@G@@@G@@@ .        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRZI
)@@G@@OGRAM @E@@@ .        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  ZJ
)@@G@@@[@@@ .     @G@@@ .        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAZK
)@@G@@L CORRECTIONS     @F@@@ .        OF ERRORS IN THE SOURCE PROGRAMS, SHALLZL
)@@G@@ BE REPORTED AND  @G@@@ .        A BRIEF DESCRIPTION OF THE FEATURE ADDEZM
)@@G@@D SHALL BE SUBMITTED    @C@@@ .        TO THE UNIVERSITY OF MARYLAND, ANZN
)@@G@@D     @[@@@ .     @F@@@ .        (C) NO PROGRAMS DERIVED FROM THESE LISTZO
)@@G@@INGS SHALL BE SOLD@G@@@ .        WITHOUT WRITTEN APPROVAL FROM THE UNIVEZP
)@@G@@RSITY OF MARYLAND, AND  @[@@@ .     @F@@@ .        (D) COPIES OF THESE PZQ
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@ .        LOCATIONS PROVIDED THZR
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@ .        WHETHER THE PROZS
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@ .        MARYLAND ZT
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@ .     @G@@@ .        3. ZU
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@ .   ANZV
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@ .   THZW
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@ .   EXPERIMEZX
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@ .   IS NOT SZY
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@ .   FRZZ
)@@G@@OM PLUM.    @[@@@ .     @[@@@ .     @[@@@ .     @[@@@ .     @[@@@ .     AA
)@@G@@@[@@@ /.    @[@@@[.     @D@@@[.                        UNIVAC 1108 FORTRAB
)@@G@@AN V LIBRARY@[@@@[.     @C@@@[. DLOG10(X) - DOUBLE PRECISION COMMON LOGAAC
)@@G@@RITHM @[@@@[.     @]@@@[.  USAGE    @[@@@[.     @^@@@[.   FORTRAN V REFEAD
)@@G@@RENCE @F@@@[.   DLOG10(X), WHERE X REPRESENTS THE (DOUBLE PRECISION) ARGAE
)@@G@@UMENT.@[@@@[.     @A@@@[.   ASSEMBLER LANGUAGE REFERENCE    @ @@@[.     AF
)@@G@@     DL           A3,ARG@ @@@[.   A     LMJ   X11,DLOG10    @[@@@[.     AG
)@@G@@@A@@@[.   ARGUMENT AND FUNCTION RANGE     @H@@@[.   THE ARGUMENT MUST BEAH
)@@G@@ A POSITIVE (NONZERO), NORMALIZED, DOUBLE PRECISION,  @H@@@[.   FLOATINGAI
)@@G@@ POINT NUMBER.  THE FUNCTION RETURNS A NORMALIZED, FLOATING POINT @]@@@[AJ
)@@G@@.   NUMBER. @[@@@[.     @^@@@[.   FUNCTIONS REFERENCED@]@@@[.   DLOG    AK
)@@G@@@[@@@[.     @^@@@[.   ERROR CONDITIONS    @H@@@[.   UNNORMALIZED, NEGATIAL
)@@G@@VE OR ZERO ARGUMENTS RESULT IN ERROR TERMINATION.     @[@@@[.     @^@@@[AM
)@@G@@.  MATHEMATICAL METHOD  @G@@@[.   LOG10(X) IS EVALUATED BY THE IDETITY: AN
)@@G@@LOG10(X) = LOG10(E) * LOGE(X).@[@@@[.     @#@@@[.  PERFORMANCE    @[@@@[AO
)@@G@@.     @]@@@[.   ACCURACY@H@@@[.                  NO. OF    MAX. REL.    AP
)@@G@@RMS REL.      MAX. NO.  FULL LENGTH @H@@@[.       ARG.        ARG.      AQ
)@@G@@ ERROR        ERROR      ERRONEOUS    ACCURACY  @H@@@[.      RANGE      AR
)@@G@@ VALUES   *10**(-17)   *10**(-17)      BITS         (%)     @H@@@[.   --AS
)@@G@@------------ ------   -----------  ------------   --------  ----------- AT
)@@G@@@H@@@[.   (0,0.95)        3000      0.2274        0.0590         3      AU
)@@G@@    53.1    @H@@@[.   (0.95,1.05)     3000      0.3928        0.1261    AV
)@@G@@     3          35.6    @H@@@[.   (1.05,10**3)    3000      0.1472      AW
)@@G@@  0.0518         2          75.9    @F@@@[.   THE ACCURACY IS COMPARABLEAX
)@@G@@ OVER THE ENTIRE ARGUMENT RANGE.    @[@@@[.     @]@@@[.   TIMING  @#@@@[AY
)@@G@@.   8.9 MICROSEC. @A@@@[.   (ADD EXECUTION TIME FOR DLOG).  @[@@@[.     AZ
)@@G@@@^@@@[.   CORE REQUIREMENTS   @A@@@[.   NUMBER OF INSTRUCTIONS    9     BA
)@@G@@@A@@@[.   SIZE OF DATA AREA         4     @A@@@[.   TOTAL CORE REQUIREMEBB
)@@G@@NTS  13     @B@@@[.   (ADD CORE REQUIREMENTS FOR DLOG).     @[@@@[.     BC
)@@G@@@A@@@[        AXR$                      . @#@@@#         DCLRG .  @A@@@[BD
)@@G@@$(5)    LIT                       . @A@@@[$(3)                          BE
)@@G@@    . @A@@@[BFLOG1*    SX     X11,DRTARG1 .     @^@@@[           RTSAVE BF
)@@G@@NAME10@^@]@[         SZ       A3    @C@@@[          LMJ     X11,DLOGX . BG
)@@G@@    LOG OF VALUE  @A@@@[RTN     DFM     A3,LOG10          . @C@@@[      BH
)@@G@@   LX    X11,DRTARG1 .      RESTORE RETURN@A@@@[        J       0,X11   BI
)@@G@@          . @[@@@[.     @[@@@[.     @[@@@[.     @ @@@[BFLOG2*    SX    XBJ
)@@G@@11,DRTARG1 .@^@@@[           RTSAVE NAME2 @^@]@[          SZ       A3   BK
)@@G@@@ @@@[            LMJ   X11,DLOGX   @^@@@[           DFM   A3,LOG2@ @@@[BL
)@@G@@           LX     X11,DRTARG1 @^@@@[          J    0,X11    @[@@@[.     BM
)@@G@@@[@@@[.     @^@@@[LOG2     0200156125073  @^@@@[         0122560277413  BN
)@@G@@@A@@@[LOG10   +       0177767455730     . @A@@@[        +       05223345BO
)@@G@@03432     . @^@#@[NAME10  +       ' LOG10'@A@^@#NAME10  +INSERT  6,'LOG'BP
)@@G@@,'10  ' .   @A@@@^NAME10  INSERT   6,'LOG','10  ' .   @^@#@[NAME2   +   BQ
)@@G@@   ' LOG2 ' @A@^@#NAME2   +INSERT  5,'LOG','2   ' .   @A@@@^NAME2   INSEBR
)@@G@@RT   5,'LOG','2   ' .   @A@@@[        END                       . ___RSIBS
)@@G@@TY OF MARYLAND    @[@@@ .     @D@@@ .   QUESTIONS CONCERNING THIS SHOULDBT
)@@G@@ BE DIRECTED TO:  @[@@@ .     @ @@@ .        MAR*[@@@@*SDFF*@C@@@N.   COBU
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@N.     @D@@@N.   QUESTIONBV
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@N.     @ @@@N.        MARBW
)@@G@@VIN V. ZELKOWITZ  @B@@@N.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@NBX
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@N.        COLLEGE PARK, MARYLANBY
)@@G@@D 20742     @[@@@N.     @G@@@N.        PERMISSION TO USE THESE LISTINGS BZ
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@N.   REPRESENT IS GRANTED UNDER THE FCA
)@@G@@OLLOWING CONDITIONS:    @[@@@N.     @G@@@N.        1. UNLIMITED USE MAY CB
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@N.   THESE LISTINGS PROVICC
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@N.   PL/1 COMPILER CD
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@N.     @F@@@N.        2. CE
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@N.     @G@@@NCF
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   CG
)@@G@@@G@@@N.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRCH
)@@G@@OGRAM @E@@@N.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  CI
)@@G@@@[@@@N.     @G@@@N.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIACJ
)@@G@@L CORRECTIONS     @F@@@N.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLCK
)@@G@@ BE REPORTED AND  @G@@@N.        A BRIEF DESCRIPTION OF THE FEATURE ADDECL
)@@G@@D SHALL BE SUBMITTED    @C@@@N.        TO THE UNIVERSITY OF MARYLAND, ANCM
)@@G@@D     @[@@@N.     @F@@@N.        (C) NO PROGRAMS DERIVED FROM THESE LISTCN
)@@G@@INGS SHALL BE SOLD@G@@@N.        WITHOUT WRITTEN APPROVAL FROM THE UNIVECO
)@@G@@RSITY OF MARYLAND, AND  @[@@@N.     @F@@@N.        (D) COPIES OF THESE PCP
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@N.        LOCATIONS PROVIDED THCQ
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@N.        WHETHER THE PROCR
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@N.        MARYLAND CS
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@N.     @G@@@N.        3. CT
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@N.   ANCU
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@N.   THCV
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@N.   EXPERIMECW
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@N.   IS NOT SCX
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@N.   FRCY
)@@G@@OM PLUM.    @[@@@N.     @[@@@N.     @[@@@N.     @[@@@N.     @[@@@N.     CZ
)@@G@@@[@@@N/.    @D@@@J/.       EXCS  CONVERT ARITHMETIC TO CHARACTER STRING DA
)@@G@@@#@@@J.        ENTRY    @A@@@J. EXCVST DCVSTG WILL BE DIGIT STRING@C@@@JDB
)@@G@@.              DCVINT WILL BE LOCATION OF '.'   @B@@@J. EXCVSD DCVSTG WIDC
)@@G@@LL BE DEFAULT STRING    @B@@@J.              DCVINT = LENGTH OF STRING  DD
)@@G@@@#@@@J     UNLIST .     @#@@@J         AXR$ .   @#@@@J         DCLRG .  DE
)@@G@@@#@@@J         PLSD .   @#@@@J         PLWORD . @]@@@J@ADD PLTVDS @]@@@JDF
)@@G@@     LIST . @F@@@JDCVTST   EQU   DCVSV+7+FH1 .       REGULAR OR JUST DIGDG
)@@G@@IT STRING   @D@@@JDCVSTL   EQU     DCVSV+7+FH2 .     COUNT OF '+' & '.' DH
)@@G@@@^@@@JDCVSTG   EQU   DLXCON . @E@@@JDCVFDS   EQU   DCVSTG+10 .         SDI
)@@G@@RCATCH SPACE FOR CVEDIT @#@@@J         CEND .   @#@@@J/.       ENTRY    DJ
)@@G@@@#@@@JEXCS     CSECT 3 .@E@@@JLOG2Y*   PROC  *1,2 .              CONVERTDK
)@@G@@ 2**Y TO 10**X    @A@@@J         MPYS  LOG2Y(1,1),19728,I . @D@@@J      DL
)@@G@@   SSA   LOG2Y(1,1),16 .     LOG 2 = 19728/65536@#@@@J         END .    DM
)@@G@@@E@@@JLOADSG*  PROC  *1,3 .              LOAD SIGNED QUARTERWORD  @B@@@JDN
)@@G@@         LOAD  LOADSG(1,1),LOADSG(1,2) .  @A@@@J         SLB   LOADSG(1,DO
)@@G@@1),27 .     @A@@@J         SSA   LOADSG(1,1),27 .     @#@@@J         ENDDP
)@@G@@ .    @C@@@JEXCVST*  LLOC .                    STRING ENTRY @C@@@J      DQ
)@@G@@   MOVE  DCVTST,0,I .        SET FLAG     @^@@@J         GOTO  CVSTR .  DR
)@@G@@@D@@@JEXCVSD*  LLOC .                    DEFAULT STRING     @D@@@J      DS
)@@G@@   MOVE  DCVTST,1,I .        SET DEFAULT STRING @D@@@JCVSTR    LOCAL .  DT
)@@G@@                 APPARENT ENTRY     @C@@@J         STORE A2,DCVSV .     DU
)@@G@@     SAVE REGS    @ @@@J         STORE X2,DCVSV+1 .   @ @@@J         STODV
)@@G@@RE F,DCVSV+2 .    @C@@@J         STORED                    A7,DCVSV+3 . DW
)@@G@@@ @@@J         STORED A9,DCVSV+5 .  @ @@@J         STORE X3,DCVSV+9     DX
)@@G@@@F@@@J         LOAD  F,DCVFLG.           GET TYPE OF VARIABLE TO CONVERTDY
)@@G@@@D@@@J         LOADA A3,KFZERO .         CLEAR OUTPUT AREA  @ @@@J      DZ
)@@G@@   LOADA A2,DCVSTG .    @D@@@J         LOAD  R1,20,I .           CLEAR 2EA
)@@G@@0 WORDS     @^@@@J         LINK  MO$VEZ . @D@@@J         SETPC 4,DCVSTG EB
)@@G@@.          SET TO WRITE STRING@E@@@J         IF    SDDCBN,ON THEN,CVSTBNEC
)@@G@@ . -> BINARY SOURCE     @^@@@J/.       FLOAT DECIMAL  @#@@@JCVFLDC   LABED
)@@G@@EL .  @E@@@J         LOADA   X3,DCVFLT .       PLACE WHERE NUMBER IS    EE
)@@G@@@E@@@J         LINK    CVSGPT .          PUT IN THE SIGN IF NEEDED@E@@@JEF
)@@G@@         IF    SDFXFL,OFF THEN,CVFXDC . -> FIXED DECIMAL    @C@@@J      EG
)@@G@@   LOADD A7,DCVFLT .         GET NUMBER   @E@@@J         IF    A7,NE,0,IEH
)@@G@@ THEN,CVSCL0 . -> NON ZERO NUMBER   @E@@@J         MOVE DCVINT,0,I .    EI
)@@G@@     SET EXPONENT TO ZERO     @D@@@J         IF    DCVTST,ZERO THEN,CVRTEJ
)@@G@@N . -> NO '.'     @C@@@J         LOAD    A8,'.',I .        GET A '.'    EK
)@@G@@@G@@@J         IF  DCVSTL,NZERO  THEN,CVFLD1 . IN SECOND OR THIRD POSITIEL
)@@G@@ON?   @D@@@J         STORE   A8,DCVSTG+FQ2 .   SECOND POSITION    @C@@@JEM
)@@G@@         GOTO  CVSCL9 .            -> FINISH    @#@@@JCVFLD1   LABEL .  EN
)@@G@@@D@@@J         STORE   A8,DCVSTG+FQ3 .   THIRD POSITION HERE@C@@@J      EO
)@@G@@   GOTO  CVSCL9 .            -> FINISH    @C@@@JCVSCL0   LABEL .        EP
)@@G@@           SCALE NUMBER @B@@@J.        DCVFLT = .C*2**X = C.*2**(X-074)=EQ
)@@G@@@A@@@J.        C.*10**(LOG 2 * (X-074) )  @D@@@J         IF    A7,GE,0,IER
)@@G@@ THEN,CVSCL0B . -> + NUMBER   @C@@@J         DLN A7,A7   .       GET ABSES
)@@G@@(NUMBER)    @ @@@J         STORED A7,DCVFLT .   @#@@@JCVSCL0B  LABEL .  ET
)@@G@@@D@@@J         LINK CVSCL0A .            CONVERT NUMBER     @D@@@J      EU
)@@G@@   GOTO CVSCL9 .             FINISH OUT THE FORM@ @@@J/.     DIGIT STRINEV
)@@G@@G PRODUCER  @F@@@JCVSCL0A  LOCAL .                   USED FOR BOTH FIXEDEW
)@@G@@ AND FLOAT  @C@@@J         SRB   A7,24 .             LEAVE 20XX   @B@@@JEX
)@@G@@         SUB   A7,02074,I .        (X-074)@D@@@J         LOG2Y A7 .     EY
)@@G@@           LOG 2 *(X-074)     @E@@@JCVSCL1   LABEL .                   AEZ
)@@G@@7=EXPONENT OF 10 NEEDED @ @@@J         LOADD A9,DCVFLT .    @G@@@J      FA
)@@G@@   IF    A7,EQ,0,I THEN,CVSCL2 .                 -> NO SCALING    @B@@@JFB
)@@G@@         LOADM A8,A7 .             SCALE  @F@@@J         IF    A7,LT,0,IFC
)@@G@@ THEN,CVSC1A .                 -> NEG SCF @B@@@JCVSC1B   LABEL .        FD
)@@G@@           + SCF  @E@@@J         LOADA X3,CVDINS .         DIVIDE BY POWFE
)@@G@@ERS OF 10   @C@@@J         GOTO  CVSC1D .            -> MERGE     @D@@@JFF
)@@G@@CVSC1A   LABEL .                   -SCF, MULTIPLY     @ @@@J         LOAFG
)@@G@@DA X3,CVMINS .    @C@@@JCVSC1D   LABEL .                   SCALE NUMBER FH
)@@G@@@D@@@J         IF    A8,LT,KFLTSZ/2+1,I THEN,CVSC1C . -> OK @D@@@J      FI
)@@G@@   LOAD  A3,KFLTSZ,I .       SET MAX EXPONENT   @^@@@J         EX    0,XFJ
)@@G@@3 .   @ @@@J         SUB   A8,KFLTSZ/2,I .@D@@@J         GOTO  CVSC1D . FK
)@@G@@           -> SCALE SOME MORE @#@@@JCVSC1C   LABEL .  @^@@@J         LOAFL
)@@G@@D  A3,A8 .  @^@@@J         SLB   A3,1 .   @B@@@J         EX    0,X3 .   FM
)@@G@@           SCALE  @F@@@JCVSCL2   LABEL .                   A7=EXP OF 10,FN
)@@G@@ A9-A10=NUMBER    @B@@@J         IF A9,LT,KKPW10+34  THEN,CVSCSM  @B@@@JFO
)@@G@@         IF A9,LT,KKPW10+36  THEN,CVSCL3  @^@@@J         ADD A7,1,I     FP
)@@G@@@^@@@J         LOAD A8,1,I    @^@@@J         GOTO  CVSC1B   @#@@@JCVSCSMFQ
)@@G@@   LABEL .  @^@@@J         SUB A7,1,I     @^@@@J         LOAD A8,1,I    FR
)@@G@@@^@@@J         GOTO CVSC1A    @#@@@JCVSCL3   LABEL .  @D@@@J         ADDFS
)@@G@@ A7,18,I .             FIX UP MAGINITUDE  @B@@@J         FADDD A9,CVDONEFT
)@@G@@ .         ROUND  @E@@@J         DFU   A8,A9 .             A8=EXP A9-A10FU
)@@G@@ = DIGITS   @F@@@J         SUB     A8,02074,I .       ALIGN TO BE AN INTFV
)@@G@@EGER  (???) @E@@@J         STORE   A8,X3 .           'BORROW AN 'X' REGIFW
)@@G@@STER  @F@@@J         LDSL    A9,0,X3 .           SHIFT OVER TO PROPER BOFX
)@@G@@UNDS  @E@@@J         LINK  CVCVD               . PUT DIGITS IN STRING   FY
)@@G@@@G@@@J         IF    DCVTST,NZERO THEN,JMP . DO WE HAVE TO PRINT EXPONENFZ
)@@G@@T     @F@@@J         POP     1 .               DELETE ONE LINK ON RETURNGA
)@@G@@ STACK@C@@@J         LOADSG  A7,DCVDQ .        GET THE SCALE@C@@@J      GB
)@@G@@   LOADN   A7,A7 .           GET -(SCALE) @D@@@J         ADD     A7,1,I GC
)@@G@@ACCOUNT FOR THE FIRST DIGIT   @E@@@J         ADD     A7,DCVINT .       AGD
)@@G@@DD IN THE MAGINUTUDE .  @E@@@J         STORE   A7,DCVINT .       SAVE THGE
)@@G@@E POSITION OF '.' @E@@@J         GOTO    CVRTN .           -> GO TO PAD GF
)@@G@@THE OUTPUT  @#@@@JCVSCL9   LABEL .  @[@@@J.     @F@@@J.      # OF DIGITSGG
)@@G@@ TO SKIP = P + 1(FOR '.') + DCVSTL(FOR SIGN)    @[@@@J.     @B@L@J      GH
)@@G@@   LOAD  A8,DCVDP .          GET P  @B@@@L         LOAD  A7,DCVDP .     GI
)@@G@@     GET P  @B@L@J         ADD     A8,1,I .          FOR '.'@B@@@L      GJ
)@@G@@   ADD     A7,1,I .          FOR '.'@D@L@J         ADD A8,DCVSTL .      GK
)@@G@@     COUNT IN THE SIGN  @D@@@L         ADD A7,DCVSTL .           COUNT IGL
)@@G@@N THE SIGN  @D@@@J         SETPC 4,DCVSTG .          SET TO WRITE E+XXX GM
)@@G@@@F@L@J         STORE A8,A3 .             SAVE # OF DIGITS FOR LATER     GN
)@@G@@@F@@@L         STORE A7,A3 .             SAVE # OF DIGITS FOR LATER     GO
)@@G@@@D@L@J         DSC     A7,2 .            GET # OF WORDS     @D@@@L      GP
)@@G@@   SRBD    A7,2 .            GET # OF WORDS     @F@L@J         ADD     XGQ
)@@G@@2,A8 .           ADD IN NUMBER OF WORDS TO SKIP @F@@@L         ADD     XGR
)@@G@@2,A7 .           ADD IN NUMBER OF WORDS TO SKIP @C@L@J         SRB     AGS
)@@G@@7,34 .           GET REMAINDER@C@@@L         SRB     A8,34 .           GGT
)@@G@@ET REMAINDER@E@L@J         ADD   A2,A7 .             NOW OFFSET CHAR POIGU
)@@G@@NTER  @E@@@L         ADD   A2,A8 .             NOW OFFSET CHAR POINTER  GV
)@@G@@@D@@@J         LOAD A7,DCVINT .          GET MAGINITUDE     @D@@@J      GW
)@@G@@   ADD     A3,5,I .          ACCOUNT FOR E+DDD  @E@@@J         STORE A3,GX
)@@G@@DCVINT .         SAVE NUMBER OF DIGITS    @B@@@J         LOAD  A8,'E',I GY
)@@G@@.          PUT E  @C@@@J         IF SDFXFL,ON THEN,CVSC9F . E OR F?     GZ
)@@G@@@^@@@J         LOAD A8,'F',I .@#@@@JCVSC9F   LABEL .  @#@@@J         PUTHA
)@@G@@C .   @B@@@J         CVE   A7,R .              +DDD   @C@@@J         LOAHB
)@@G@@D  A8,'+',I  .     ASSUME  POSITIVE @B@@@J         IF A7,GE,0,I   THEN,CHC
)@@G@@VSC9B .     @C@@@J         LOAD A8,'-',I   .   NO IT IS NEGITIVE  @#@@@JHD
)@@G@@CVSC9B   LABEL .  @#@@@J         PUTC   . @^@@@J         LOAD  A7,A4 .  HE
)@@G@@@B@@@J         SLB   A7,9 .             DDD0    @C@@@J         SETL  A10HF
)@@G@@,3,I .           3 DIGITS     @^@@@J         LINK CVCVD5 .  @D@@@J      HG
)@@G@@   GOTO  CVEDFN .            PAD WITH BLANKS    @[@@@J.     @B@@@J.     HH
)@@G@@   PUT DIGIT STRING INTO DCVSTG     @[@@@J.     @#@@@JCVCVD    LOCAL .  HI
)@@G@@@D@K@J         DIV     A9,CVPW10+8 .     DIVIDE BY 10**8    @D@@@K      HJ
)@@G@@   DIV     A9,CVPW10+9 .     DIVIDE BY 10**9    @E@K@J         SETL    AHK
)@@G@@3,10,I .         10 DIGITS IN UPPER HALF  @E@M@K         SETL    A3,9,I HL
)@@G@@.          9 DIGITS IN UPPER HALF   @E@@@M         SETL    A3,10,I .    HM
)@@G@@     10 DIGITS IN UPPER HALF  @#@@@JCVCVD1   LABEL .  @D@@@J         LOAHN
)@@G@@D    A8,0,I .          CLEAR UPPER HALF   @D@@@J         DIV     A8,CVPWHO
)@@G@@10,A3 .    PRODUCE FIRST DIGIT@C@@@J         ADD     A8,'0',I .        AHP
)@@G@@DD IN ZONE  @E@@@J         IF A8,NE,'0',I THEN,CVCVD2 . SKIP LEADING ZERHQ
)@@G@@OS    @D@@@J         SUB     A7,1,I .          ONE FEWER CHARS    @F@@@JHR
)@@G@@         LOOP    A3,CVCVD1 .       GET A DIFFERENT LEADING DIGIT  @F@@@JHS
)@@G@@CVCVD2   LABEL .                   LEADING DIGIT NOT ZERO HERE    @D@@@JHT
)@@G@@         PUTC .                    SET FIRST CHAR     @D@@@J         STOHU
)@@G@@RE   A7,DCVINT .       SAVE MAGNITUDE     @D@K@J         IF DCVTST,ZERO HV
)@@G@@THEN,CVCVD3 . PUT O_T '.'?    @D@@@K         IF DCVTST,ZERO THEN,CVCVD3 HW
)@@G@@. PUT OUT '.'?    @B@@@J         LOAD    A8,'.',I .        GET '.'@E@@@JHX
)@@G@@         PUTC .                    PLACE PERIOD INTO STRING @E@@@JCVCVD3HY
)@@G@@   LABEL .                   HERE TO FINISH NUMBER    @E@@@M         SUBHZ
)@@G@@     A3,1,I .          ACCOUNT FOR FIRST DIGIT  @D@@@J         LINK    CIA
)@@G@@VCVD4 .          PUT OUT LAST DIGITS@E@@@J         LOAD    A9,A10 .     IB
)@@G@@     GET LOWER HALF OF NUMBER @F@K@J         SETL    A3,8,I .          SIC
)@@G@@AY 8 DIGITS IN LOWER HALF     @F@@@K         SETL    A3,9,I .          SID
)@@G@@AY 9 DIGITS IN LOWER HALF     @D@@@J         LINK    CVCVD4 .          PIE
)@@G@@UT OUT LOWER HALF @B@@@J         JMP .                     RETURN @D@@@JIF
)@@G@@CVCVD4   LLOC .                    PUT OUT DIGITS HERE@F@@@J         LOAIG
)@@G@@D    A8,0,I .          CLEAR UPPER HALF FOR DIVIDE    @D@@@J         DIVIH
)@@G@@     A8,CVPW10,A3 .    PRODUCE NEXT DIGIT @C@@@J         ADD     A8,'0',II
)@@G@@I .        ADD IN ZONE  @E@@@J         PUTC .                    PUT CHAIJ
)@@G@@R INTO STRING     @D@@@J         LOOP    A3,CVCVD4 .       DO OTHER CHARIK
)@@G@@S     @E@K@J         LJMP .                    RETURN FOR O_HER PARTS   IL
)@@G@@@E@@@K         LJMP .                    RETURN FOR OTHER PARTS   @#@@@JIM
)@@G@@CVCVD5   LLOC .   @^@@@J         LDSC  A7,9 .   @^@@@J         AND,U A8,IN
)@@G@@0777 .@B@@@J         IF A9,GE,'0',I THEN,CVCVD6 .     @B@@@J         SUBIO
)@@G@@ A8,A9    .GET RID OF JUNK    @B@@@J         ADD  A8,'0',I  .  ADD IN ZEIP
)@@G@@RO    @#@@@JCVCVD6   LABEL .  @#@@@J         PUTC .   @B@K@J         LOOIQ
)@@G@@P  A10,CVCVD3 .        6 LOWER@B@@@K         LOOP  A10,CVCVD5 .        6IR
)@@G@@ LOWER@#@@@J         LJMP  .  @ @@@J/.       FIXED DECIMAL DATA   @#@@@JIS
)@@G@@CVFXDC   LABEL .  @C@@@J         LOADD A7,DCVFFT .         GET FORM     IT
)@@G@@@E@@@J         IF    A7,NE,0,I THEN,CVFXD1 . -> NON ZERO NUMBER   @#@@@JIU
)@@G@@CVFXD2   LABEL .  @D@@@J         IF DCVTST,NZERO THEN,CVFXD4 . DIGIT STRIV
)@@G@@ING?  @E@@@J         MOVE    DCVINT,0,I .      SET EXPONENT TO ZERO     IW
)@@G@@@C@@@J         GOTO    CVRTN .           -> RETURN    @#@@@JCVFXD4   LABIX
)@@G@@EL .  @D@@@J         LOADD A9,KKD0 .           SET ZERO DIGITS    @C@@@JIY
)@@G@@         GOTO  CVEDIT .            EDIT NUMBER  @#@@@JCVFXD1   LABEL .  IZ
)@@G@@@B@@@J         IF    A7,GE,0,I THEN,CVFXD5 .    @^@@@J         DLN A7,A7JA
)@@G@@ .    @#@@@JCVFXD5   LABEL .  @C@@@J         STORED                    AJB
)@@G@@7,DCVFLT .  @G@@@J         IF A7,GE,KKPW10+36 THEN,CVEDT2 . DO IN FLOAT JC
)@@G@@FORMAT IF TOO BIG @E@@@J         LOADD A9,A7 .             GET READY TO JD
)@@G@@TRY TO DFU  @E@@@J         DFU   A8,A9 .             A8=EXP A9-A10 = DIGJE
)@@G@@ITS   @D@@@J         SUB A8,02074,I .          FIX UP SHIFT COUNT @D@@@JJF
)@@G@@         IF A8,LT,1,I THEN,CVENEW . MUST SHIFT RIGHT  @D@@@J         STOJG
)@@G@@RE A8,X3 .             SHIFT LEFT HERE    @C@@@J         LDSL A9,0,X3 . JH
)@@G@@           SHIFT IT     @B@@@J         GOTO CVEDIT .             ->MERGEJI
)@@G@@@D@@@JCVENEW   LABEL .                   SHIFT  RIGHT HERE  @F@@@J      JJ
)@@G@@   IF A8,LT,-73,I THEN,CVEDT2 . ****** CHECK SCALEING???    @D@@@J      JK
)@@G@@   STOREN A8,X3 .            CORRECT SHIFT COUNT@^@@@J         DSL A9,0,JL
)@@G@@X3 .  @D@@@JCVEDIT   LABEL .                   A9-A10 = DIGITS    @E@@@JJM
)@@G@@         IF    DCVTST,NZERO THEN,CVEDT1 . -> DEFAULT STRING @[@@@J.     JN
)@@G@@@A@@@J.                EDIT TYPE HERE     @[@@@J.     @G@@@J         GOTJO
)@@G@@O  CVSCL0A .       PUT DIGITS INTO STRING, RETURN FROM THERE@#@@@JCVEDT1JP
)@@G@@   LABEL .  @B@@@J         LOADSG A8,DCVDQ .         GET Q  @C@@@J      JQ
)@@G@@   IF    A8,LT,0,I THEN,CVEDT2 . -> Q<0   @C@@@J         IF    A8,GT,DCVJR
)@@G@@DP THEN,CVEDT2 . DIGITS @F@@@J.                                  Q=>0  QJS
)@@G@@<=P. WRITE PPPP.PPPPP   @G@@@J         LOADD A6,A9 .             GET NUMJT
)@@G@@BER TO BE CONVERTED INTO A6   @E@@@J         DIV   A6,CVTTOT .         SJU
)@@G@@EPARATE INTO 2 PARTS    @F@@@J         LOAD  A4,0,I .            A4=TOTAJV
)@@G@@L DIGITS PLACED SO FAR  @B@@@J         LOAD  A9,A8 .             A9=Q   JW
)@@G@@@E@@@J         SETL  A10,10,I .           A10=#OF DIGITS IN A7    @E@@@JJX
)@@G@@         SETPC 4,DCVFDS .          POINT TO SCRATCH AREA    @E@@@J      JY
)@@G@@   IF  A9,EQ,0,I THEN,CVEDT9 . DON'T PUT '.' IF Q=0   @#@@@JCVEDT3   LABJZ
)@@G@@EL .  @D@@@J         IF    A9,EQ,0,I THEN,CVEDT4 . TIME FOR '.'?  @D@@@JKA
)@@G@@         SRBD  A7,36 .             GET READY TO DIVIDE@D@@@J         DIVKB
)@@G@@   A7,10,I .           GET DIGIT INTO A8  @E@@@J         ADD   A8,'0',I KC
)@@G@@.            ADD IN CODE FOR ZERO   @#@@@J         PUTC .   @E@@@J      KD
)@@G@@   ADD   A4,1,I .            ONE MORE CHAR PLACED     @E@@@J         SUBKE
)@@G@@   A9,1,I .            ONE FEWER Q DIGIT LEFT   @C@@@J         LOOP  A10KF
)@@G@@,CVEDT3 .        DO NEXT DIGIT@B@@@J         SRBD  A6,36 .             QKG
)@@G@@>10   @D@@@J         SETL  A10,10,I .           DO OTHER 10 DIGITS@^@@@JKH
)@@G@@         GOTO  CVEDT3 . @#@@@JCVEDT4   LABEL .  @C@@@J         LOAD  A8,KI
)@@G@@'.',I .          TIME FOR '.' @#@@@J         PUTC .   @E@@@J         LOAKJ
)@@G@@D    A9,1,I .          A9 TELLS IF '.' PUT OUT  @#@@@JCVEDT9   LABEL .  KK
)@@G@@@B@@@J         IF A7,NE,0,I THEN,CVEDT5 . OK    @D@@@J         IF A6,NE,KL
)@@G@@0,I THEN,CVEDT6 . STILL NUMBER LEFT @G@@@J         LOAD A8,'0',I .   NO KM
)@@G@@NUMBER LEFT AFTER '.', PUT IN LEADING ZERO@#@@@J         PUTC .   @C@@@JKN
)@@G@@         ADD A4,1,I .              ONE MORE CHAR@C@@@J         GOTO CVEDKO
)@@G@@SG .             GO BLANK PAD @#@@@JCVEDT5   LABEL .  @C@@@J         IF KP
)@@G@@   A7,EQ,0,I THEN,CVEDT6 . EMPTY A7 @^@@@J         SRBD  A7,36 .  @^@@@JKQ
)@@G@@         DIV   A7,10,I .@ @@@J         ADD   A8,'0',I .     @#@@@J      KR
)@@G@@   PUTC .   @D@@@J         ADD   A4,1,I .            ANOTHER CHAR PLACEDKS
)@@G@@@D@@@J         LOOP  A10,CVEDT5 .        DUMP REST OF A7    @#@@@JCVEDT6KT
)@@G@@   LABEL .  @G@@@J         IF    A6,EQ,0,I THEN,CVEDSG . OUT OF NUMBER,GKU
)@@G@@O FILL WITH ZERO'S@F@@@J         IF A10,LT,0,I THEN,CVEDT8 . DON'T FILL KV
)@@G@@IF ALREADY FULL   @F@@@J         LOAD  A8,'0',I .          FILL OUT FOR KW
)@@G@@A7 SINCE A6 NOT=0 @#@@@JCVEDT7   LABEL .  @#@@@J         PUTC .   @^@@@JKX
)@@G@@         ADD   A4,1,I . @E@@@J         LOOP  A10,CVEDT7 .        DUMP 0 KY
)@@G@@FOR REST OF A7    @#@@@JCVEDT8   LABEL .  @C@@@J         SRBD  A6,36 .  KZ
)@@G@@           MOVE A6 OVER @D@@@J         SETL  A10,10,I .          AT MOSTLA
)@@G@@ TEN DIGITS @^@@@J         GOTO  CVEDT5 . @#@@@JCVEDSG   LABEL .  @E@@@JLB
)@@G@@         IF DCVSTL,ZERO THEN,CVED10 . WAS THERE A SIGN?     @C@@@J      LC
)@@G@@   LOAD A8,DCVSTG .          PICK UP SIGN @D@@@J         SRB A8,27 .    LD
)@@G@@           GET INTO POSITION  @#@@@J         PUTC .   @#@@@JCVED10   LABLE
)@@G@@EL .  @B@@@J         LOAD  A5,DCVDP .          GET P  @E@@@J         SUBLF
)@@G@@   A5,A4 .             HOW MANY BLANKS TO PUT?  @D@@@J         ADD   A4,LG
)@@G@@DCVSTL .            ACCOUNT FOR '+' @D@@@J         ADD     A4,A9 .      LH
)@@G@@     ACCOUNT FOR '.'    @ @@@J         LOAD  A8,' ',I .     @#@@@JCVEDS1LI
)@@G@@   LABEL .  @E@@@J         PUTC .                     PUT IN LEADING BLALJ
)@@G@@NK    @E@@@J         ADD   A4,1,I .            ACCOUNT FOR EXTRA BLANK  LK
)@@G@@@D@@@J         LOOP  A5,CVEDS1 .         PUT IN OTHER BLANKS@E@@@J      LL
)@@G@@   STORE A4,DCVINT .          # OF CHARS IN STRING    @^@@@J         SRBLM
)@@G@@D  A4,2 .   @C@@@J         SRB     A5,34 .           GET REMAINDER@D@@@JLN
)@@G@@         LOAD X3,A4 .              GET AN 'X' REGISTER@F@@@J         SETLO
)@@G@@PC 4,DCVSTG .          PUT LETTERS IN PROPER PLACE    @B@@@J         IF LP
)@@G@@   A5,EQ,0,I THEN,CVEDS2 .    @F@@@J         LOAD  A8,DCVFDS,X3 .       LQ
)@@G@@GET WORD READY TO REVERSE     @F@@@J         LOAD  A7,A5 .             FLR
)@@G@@IGURE HOWMANY BITS TO MOVE    @^@@@J         MPYS  A7,9,I . @D@@@J      LS
)@@G@@   LOAD X3,A7 .              SET SHIFT COUNT    @C@@@J         LSSC  A8,LT
)@@G@@0,X3 .           MOVE A8 OVER @E@@@J         SETL  A5,A5 .             HLU
)@@G@@OW MANY LETTERS IN A8?  @C@@@J         GOTO  CVEDS3 .            -> MERGLV
)@@G@@E     @#@@@JCVEDS2   LABEL .  @D@@@J         SUB   A4,1,I .            OLW
)@@G@@NE FEWER WORDS    @D@@@J         IF    A4,LT,0,I THEN,CVEDFN . ->FINISH LX
)@@G@@UP    @E@@@J         LOAD X3,A4 .              USE 'X' REGISTER AGAIN   LY
)@@G@@@E@@@J         LOAD  A8,DCVFDS,X3 .      GET NEXT WORD TO REVERSE @^@@@JLZ
)@@G@@         SETL  A5,4,I . @#@@@JCVEDS3   LABEL .  @#@@@J         PUTC .   MA
)@@G@@@^@@@J         SRB   A8,9 .   @ @@@J         LOOP  A5,CVEDS3 .    @^@@@JMB
)@@G@@         GOTO  CVEDS2 . @#@@@JCVEDT2   LABEL .  @ @@@J         LOADD A7,MC
)@@G@@DCVFLT .    @D@@@J         LINK  CVSCL0A .             DIGIT STRING     MD
)@@G@@@C@@@J         LOADSG                    A7,DCVDQ .   @^@@@J         ADDME
)@@G@@ A7,DCVINT .@ @@@J         STORE A7,DCVINT .    @^@@@J         GOTO CVSCMF
)@@G@@L9 .  @^@@@J/.       FLOAT BINARY   @C@@@JCVSTBN   LABEL .              MG
)@@G@@     BINARY SOURCE@G@@@J         IF    SDFXFL,OFF THEN,CVFXBN .         MH
)@@G@@        -> FIXED BINARY @B@@@J         LOAD  A7,DCVBP .          BIN P  MI
)@@G@@@D@@@J         LOG2Y A7 .                LOG2 BIN P = DEC P @E@@@J      MJ
)@@G@@   ADD A7,1,I .              FIX P AS PER PL/1 RULES  @B@@@J         STOMK
)@@G@@RE A7,DCVDP .          DEC P  @E@@@J         GOTO  CVFLDC .            -ML
)@@G@@> DO AS FLOAT DECIMAL   @^@@@J/.       FIXED BINARY   @E@@@JCVFXBN   LABMM
)@@G@@EL .                   CONVERT TO FIXED DECIMAL @C@@@J         LOADSG A7MN
)@@G@@,DCVBQ .         BINARY Q     @F@@@J         LOADN   A6,A7 .           GMO
)@@G@@ET NEG OF SCALE TO ''UNSCALE''@C@@@J         LOG2Y A7 .                DMP
)@@G@@ECIMAL Q    @C@@@J         STORE A7,DCVDQ .          DECIMAL Q    @C@@@JMQ
)@@G@@         LOAD  A8,DCVBP .          BINARY P     @C@@@J         LOG2Y A8 MR
)@@G@@.                DECIMAL P    @E@@@J         ADD A8,1,I .              FMS
)@@G@@IX P AS PER PL/1 RULES  @C@@@J         STORE A8,DCVDP .          DECIMALMT
)@@G@@ P    @C@@@J         LOADM A8,DCVINT .         GET NUMBER   @B@@@J      MU
)@@G@@   STORE A8,DCVFFT+1 .       CONVERT@D@@@J         ADD     A6,02074,I . MV
)@@G@@     SET TO PROPER SCALE@C@@@J         SLB     A6,24 .           LEFT JUMW
)@@G@@STIFY @D@@@J         STORE   A6,DCVFFT .       SET AS EXPONENT    @C@@@JMX
)@@G@@         LOADD A9,DCVFFT .         NORMALIZE    @^@@@J         FADDD A9,MY
)@@G@@KKD0 .@^@@@J         DLM   A9,A9 .  @D@@@J         LOADA   X3,DCVINT .  MZ
)@@G@@     POINT TO NUMBER    @D@@@J         LINK    CVSGPT .          PUT '+'NA
)@@G@@ OR '-'     @E@@@J         IF DCVINT,ZERO THEN,CVFXD2 . HANDLE LIKE FIXENB
)@@G@@D DEC.@D@@@J.                                  SCALE BY DECIMAL Q @C@@@JNC
)@@G@@         LOADA X3,CVDINS .         +SF, MPY     @C@@@J         IF    A7,ND
)@@G@@LT,0,I THEN,CVFXB3 . +SCF     @C@@@J         LOADA X3,CVMINS .         -NE
)@@G@@SF, DIVIDE  @#@@@JCVFXB3   LABEL .  @B@@@J         LOADM A7,A7 .        NF
)@@G@@     ABS(Q) @#@@@JCVFXB4   LABEL .  @D@@@J         IF    A7,LT,KFLTSZ/2+NG
)@@G@@1,I THEN,CVFXB5 . ->OK  @D@@@J         LOAD  A3,KFLTSZ,I .       SET MAXNH
)@@G@@ EXPONENT   @^@@@J         EX    0,X3 .   @ @@@J         SUB   A7,KFLTSZNI
)@@G@@/2,I .@^@@@J         GOTO  CVFXB4 . @#@@@JCVFXB5   LABEL .  @^@@@J      NJ
)@@G@@   LOAD  A3,A7 .  @^@@@J         SLB   A3,1 .   @B@@@J         EX    0,XNK
)@@G@@3 .              SCALE  @C@@@J         FADDD A9,KUNZRO .         TRUNCATNL
)@@G@@E     @ @@@J         STORED A9,DCVFFT .   @D@@@J         GOTO  CVFXDC . NM
)@@G@@           -> FIXED DECIMAL   @E@@@J/.       PUT SIGN INTO STRING AFTER NN
)@@G@@CHECKING IF YOU SHOULD  @[@@@J.     @#@@@JCVSGPT   LLOC .   @D@@@J      NO
)@@G@@   MOVE    DCVSTL,0,I .      SET NO SIGN PUT OUT@D@@@J         IF DCVTSTNP
)@@G@@,ZERO  THEN,LJMP . DIGIT STRING ONLY@ @@@J         USING   WORD,X3 .    NQ
)@@G@@@D@@@J         IF 0400,ON,W1Q1  THEN,CVSGP1 . NUMBER WAS NEG@E@@@JCVSGP3NR
)@@G@@   LABEL .                   COME HERE FROM NEG ZERO  @E@@@J         LOANS
)@@G@@D    A8,'+',I .        SET LEADING BLANK IF POS @G@@@J         IF      SNT
)@@G@@DRLCX,ON   THEN,CVSGP2 . IF COMPLEX,DON'T BLOCK '+'   @ @@@J         LOANU
)@@G@@D    A8,' ',I .   @B@@@J         GOTO    CVSGP2 .          ->MERGE@ @@@JNV
)@@G@@CVSGP1   LABEL . NUMBER IS NEG@ @@@J         LOAD    A8,'-',I .   @D@@@JNW
)@@G@@         IF W1,ZERO THEN,CVSGP3 .  STOP SIGN IF ZERO  @ @@@JCVSGP2   LABNX
)@@G@@EL . MEGRE HERE   @#@@@J         PUTC .   @D@@@J         MOVE    DCVSTL,NY
)@@G@@1,I .      SET ONE CHAR OUT   @#@@@J         LJMP .   @ @@@J/.       RETNZ
)@@G@@URN TO CALLER     @D@@@JCVEDFN   LABEL .                   FILLWITH BLANOA
)@@G@@KS    @D@@@J         IF    DCVTST,ZERO THEN,CVRTN . -> NO PADDING @B@@@JOB
)@@G@@         LOAD  A8,' ',I .          PAD    @^@@@J         SETL  A7,3,I . OC
)@@G@@@#@@@JCVFLP    LABEL .  @#@@@J         PUTC .   @ @@@J         LOOP  A7,OD
)@@G@@CVFLP .     @B@@@J         LOADD A7,KBLANK .         8 MORE @^@@@J      OE
)@@G@@   USING WORD,X2 .@^@@@J         STORED A7,W1 . @#@@@JCVRTN    LABEL .  OF
)@@G@@@ @@@J         LOAD  A2,DCVSV .     @ @@@J         LOAD  X2,DCVSV+1 .   OG
)@@G@@@ @@@J         LOAD  F,DCVSV+2 .    @ @@@J         LOADD A7,DCVSV+3 .   OH
)@@G@@@ @@@J         LOADD A9,DCVSV+5 .   @ @@@J         LOAD  X3,DCVSV+9 .   OI
)@@G@@@^@@@J         JMP . RETURN   @#@@@JEXCS     CSECT 3 .@#@@@JCVDINS   SFWOJ
)@@G@@   0 .@A@@@J         FDIVD A9,KKPW10-2,A3 .     @#@@@JCVMINS   SFW   0 .OK
)@@G@@@A@@@J         FMPYD A9,KKPW10-2,A3 .     @B@@@JCVDONE   SF    020014000OL
)@@G@@0000 .     ROUND  @#@@@JFILL(1)  SF    0 .@B@@@JCVTTOT   SF    100000000OM
)@@G@@00 .       10**10 @#@@@J         CEND .   @#@@@J         END .    ___ERSON
)@@G@@*[@@@@*SDFF*@C@@@D.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@DOO
)@@G@@.     @D@@@D.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@DOP
)@@G@@.     @ @@@D.        MARVIN V. ZELKOWITZ  @B@@@D.        DEPARTMENT OF COQ
)@@G@@OMPUTER SCIENCE   @A@@@D.        UNIVERSITY OF MARYLAND     @B@@@D.     OR
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@D.     @G@@@D.        PERMISSIOOS
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@D.   REPRESENOT
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@D.     @G@@@D.     OU
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@DOV
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDOW
)@@G@@@E@@@D.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@DOX
)@@G@@.     @F@@@D.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDOY
)@@G@@ED:   @[@@@D.     @G@@@D.        (A) ANY RESULTING PROGRAM, OR REPORT, POZ
)@@G@@APER OR DOCUMENTATION   @G@@@D.        DESCRIBING SUCH PROGRAM WILL CLEAPA
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@D.        IS A DIALECT OF PLUM OR IS PB
)@@G@@DERIVED FROM PLUM, AND  @[@@@D.     @G@@@D.        (B) ALL SUCH MODIFICAPC
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@D.        OF ERRORS IN THPD
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@D.        A BRIEF DESCRIPPE
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@D.        TO THE UNPF
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@D.     @F@@@D.        (C) NO PROGRAMSPG
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@D.        WITHOUT WRITTENPH
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@D.     @F@@@D.     PI
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@D.     PJ
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@DPK
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     PL
)@@G@@@E@@@D.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@DPM
)@@G@@.     @G@@@D.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERPN
)@@G@@ ITSELF,    @F@@@D.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN PO
)@@G@@USING PLUM. @E@@@D.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USPP
)@@G@@ER TO @F@@@D.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRPQ
)@@G@@ODUCT @G@@@D.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT PR
)@@G@@DEVELOPED   @#@@@D.   FROM PLUM.    @[@@@D.     @[@@@D.     @[@@@D.     PS
)@@G@@@[@@@D.     @[@@@D.     @[@@@D/.    @[@@@ .     @D@@@ .                 PT
)@@G@@       UNIVAC 1108 FORTRAN V LIBRARY@[@@@ .     @B@@@ . DATAN(X) - DOUBLPU
)@@G@@E PRECISION ARCTANGENT  @[@@@ .     @]@@@ .  USAGE    @[@@@ .     @^@@@ PV
)@@G@@.   FORTRAN V REFERENCE @F@@@ .   DATAN(X), WHERE X REPRESENTS THE (DOUBPW
)@@G@@LE PRECISION) ARGUMENT. @[@@@ .     @A@@@ .   ASSEMBLER LANGUAGE REFERENPX
)@@G@@CE    @#@@@ .   DL      A3,X  @ @@@ .   A     LMJ   X11,DATAN     @G@@@ PY
)@@G@@.   DATAN AND DATAN2 ARE ENTRY POINTS TO A FUNCTION WHICH COMPUTES THE  PZ
)@@G@@@D@@@ .   ARCTANGENT OF ONE OR TWO ARGUMENTS RESPECTIVELY.  @[@@@ .     QA
)@@G@@@A@@@ .   ARGUMENT AND FUNCTION RANGE     @I@@@ .   THE ARGUMENT MUST BEQB
)@@G@@ A NORMALIZED, DOUBLE PRECISION, FLOATING POINT NUMBER.     @H@@@ .   THQC
)@@G@@E FUNCTION RETURNS A NORMALIZED, FLOATING POINT NUMBER IN THE INTERVAL  QD
)@@G@@@#@@@ .   (-PI/2,PI/2). @[@@@ .     @^@@@ .   FUNCTIONS REFERENCED@]@@@ QE
)@@G@@.   NONE    @[@@@ .     @^@@@ .   ERROR CONDITIONS    @D@@@ .   UNNORMALQF
)@@G@@IZED ARGUMENTS CAUSE ERROR TERMINATION.   @[@@@ .     @^@@@ .  MATHEMATIQG
)@@G@@CAL METHOD  @G@@@ .   IF ABS(X) .GE. 4.0, LET Z = 1/X AND ARCTAN(X) = PIQH
)@@G@@/2 - ARCTAN(Z).   @E@@@ .   IF ABS(X) < 0.25, LET Z = X AND ARCTAN(X) = QI
)@@G@@ARCTAN(Z).  @I@@@ .   IF 0.25 .LE. ABS(X) .LT. 4.0, LET X = TAN(Q + Y), QJ
)@@G@@WHERE ABS(TAN(Q)) < 0.25.     @G@@@ .   THEN Z = TAN(Q) = (TAN(Q + Y) - QK
)@@G@@TAN(Y))/(TAN(Q + Y) * TAN(Y) + 1)   @F@@@ .   ARCTAN(X) = Q + Y, WHERE YQL
)@@G@@ IS IN A TABLE AND Q = ARCTAN(Z).   @G@@@ .   ARCTAN(Z) IS APPROXIMATED QM
)@@G@@BY A RATIONAL APPROXIMATION OF THE FORM   @G@@@ .   Z*P(Z**2)/Q(Z**2), WQN
)@@G@@HERE P AND Q ARE 4TH AND 5TH DEGREE POLYNOMIALS @#@@@ .   RESPECTIVELY. QO
)@@G@@@ @@@ .   ARCTAN(-X) = -ARCTAN(X).  @[@@@ .     @#@@@ .  PERFORMANCE    QP
)@@G@@@[@@@ .     @]@@@ .   ACCURACY@H@@@ .                  NO. OF    MAX. REQQ
)@@G@@L.    RMS REL.      MAX. NO.  FULL LENGTH @H@@@ .       ARG.        ARG.QR
)@@G@@       ERROR        ERROR      ERRONEOUS    ACCURACY  @H@@@ .      RANGEQS
)@@G@@       VALUES   *10**(-17)   *10**(-17)      BITS         (%)     @H@@@ QT
)@@G@@.   -------------- ------   -----------  ------------   --------  ------QU
)@@G@@----- @H@@@ .   (-0.5,0.5)      8000      0.4542        0.1318         3QV
)@@G@@          26.5    @H@@@ .   (0.5,10.0)      1000     -0.2316        0.07QW
)@@G@@03         2          60.9    @F@@@ .   AS THE ARGUMENT INCREASES IN MAGQX
)@@G@@NITUDE THE ACCURACY IMPROVES. @[@@@ .     @]@@@ .   TIMING  @B@@@ .   12QY
)@@G@@1.9 MICROSEC. FOR ABS(X) < 0.25.    @D@@@ .   154.5 MICROSEC. FOR 0.25 .QZ
)@@G@@LE. ABS(X) .LT. 4.0.    @B@@@ .   150.1 MICROSEC. FOR ABS(X) .GE. 4.0.  RA
)@@G@@@[@@@ .     @^@@@ .   CORE REQUIREMENTS   @A@@@ .   NUMBER OF INSTRUCTIORB
)@@G@@NS    87    @A@@@ .   SIZE OF DATA AREA         51    @A@@@ .   TOTAL CORC
)@@G@@RE REQUIREMENTS  138    @[@@@ .     @[@@@ .     @E@@@ . DATAN2 - DOUBLE RD
)@@G@@PRECISION ARCTANGENT OF RATIO (X1/X2).    @[@@@ .     @]@@@ .  USAGE    RE
)@@G@@@[@@@ .     @^@@@ .   FORTRAN V REFERENCE @H@@@ .   DATAN2(X1,X2), WHERERF
)@@G@@ X1 AND X2 REPRESENT (DOUBLE PRECISION) ARGUMENTS.    @[@@@ .     @A@@@ RG
)@@G@@.   ASSEMBLER LANGUAGE REFERENCE    @^@@@ .         DL    A3,X1   @^@@@ RH
)@@G@@.         DL    A1,X2   @ @@@ .   A     LMJ   X11,DATAN2    @G@@@ .   DARI
)@@G@@TAN AND DATAN2 ARE ENTRY POINTS TO A FUNCTION WHICH COMPUTES THE  @D@@@ RJ
)@@G@@.   ARCTANGENT OF ONE OR TWO ARGUMENTS RESPECTIVELY.  @[@@@ .     @A@@@ RK
)@@G@@.   ARGUMENT AND FUNCTION RANGE     @H@@@ .   ALL PAIRS OF NORMALIZED, DRL
)@@G@@OUBLE PRECISION, FLOATING POINT NUMBERS EXCEPT  @H@@@ .   (0.0,0.0) ARE RM
)@@G@@VALID ARGUMENTS.  THE FUNCTION RETURNS A NORMALIZED FLOATING@B@@@ .   PORN
)@@G@@INT NUMBER IN THE INTERVAL (-PI,PI).@[@@@ .     @^@@@ .   FUNCTIONS REFERO
)@@G@@RENCED@]@@@ .   NONE    @[@@@ .     @^@@@ .   ERROR CONDITIONS    @H@@@ RP
)@@G@@.   ERROR TERMINATION IS CAUSED IF ONE OR BOTH ARGUMENTS ARE UNNORMALIZERQ
)@@G@@D     @A@@@ .   OR IF BOTH ARGUMENTS ARE ZERO.  @[@@@ .     @^@@@ .  MATRR
)@@G@@HEMATICAL METHOD  @H@@@ .   IF X2 = 0 AND X1 .NE. 0, THEN ARCTAN(X1/X2) RS
)@@G@@= PLUS OR MINUS PI/2, WHERE   @C@@@ .   THE SIGN OF THE RESULT IS THE SART
)@@G@@ME AS X1.   @A@@@ .   IF X2 .NE. 0, LET Z = X1/X2.    @G@@@ .   IF ABS(ZRU
)@@G@@) .GE. 4.0 LET W = 1/Z AND ARCTAN(Z) = PI/2 - ARCTAN(W).    @E@@@ .   IFRV
)@@G@@ ABS(Z) < 0.25, LET W = Z AND ARCTAN(Z) = ARCTAN(W).  @I@@@ .   IF 0.25 RW
)@@G@@.LE. ABS(Z) .LT. 4.0, LET Z = TAN(Q + Y), WHERE ABS(TAN(Q)) < 0.25.     RX
)@@G@@@G@@@ .   THEN W = TAN(Q) = (TAN(Q + Y) - TAN(Y))/(TAN(Q + Y) * TAN(Y) +RY
)@@G@@ 1)   @F@@@ .   ARCTAN(Z) = Q + Y, WHERE Y IS IN A TABLE AND Q = ARCTAN(RZ
)@@G@@W).   @G@@@ .   ARCTAN(W) IS APPROXIMATED BY A RATIONAL APPROXIMATION OFSA
)@@G@@ THE FORM   @G@@@ .   W*P(W**2)/Q(W**2), WHERE P AND Q ARE 4TH AND 5TH DSB
)@@G@@EGREE POLYNOMIALS @#@@@ .   RESPECTIVELY. @ @@@ .   ARCTAN(-Z) = -ARCTANSC
)@@G@@(Z).  @F@@@ .   THE QUADRANT IS DETERMINED BY THE SIGNS OF THE ARGUMENTSSD
)@@G@@.     @[@@@ .     @#@@@ .  PERFORMANCE    @[@@@ .     @]@@@ .   ACCURACYSE
)@@G@@@H@@@ .                  NO. OF    MAX. REL.    RMS REL.      MAX. NO.  SF
)@@G@@FULL LENGTH @H@@@ .       ARG.        ARG.       ERROR        ERROR     SG
)@@G@@ ERRONEOUS    ACCURACY  @H@@@ .      RANGE       VALUES   *10**(-17)   *SH
)@@G@@10**(-17)      BITS         (%)     @H@@@ .   -------------- ------   --SI
)@@G@@---------  ------------   --------  ----------- @H@@@ .     X1:(-1,1)   SJ
)@@G@@  5000     -0.4171        0.0917         3          54.6    @#@@@ .     SK
)@@G@@X2:(-1,1)   @G@@@ .   AS THE QUOTIENT X1/X2 INCREASES IN MAGNITUDE THE ASL
)@@G@@CCURACY INCREASES.@[@@@ .     @]@@@ .   TIMING  @B@@@ .     147.3 MICROSSM
)@@G@@EC. FOR ABS(Z) < 0.25.  @D@@@ .     179.9 MICROSEC. FOR 0.25 .LE. ABS(Z)SN
)@@G@@ .LT. 4.0.  @B@@@ .     175.5 MICROSEC. FOR 4.0 .LE. ABS(Z).@[@@@ .     SO
)@@G@@@^@@@ .   CORE REQUIREMENTS   @A@@@ .   NUMBER OF INSTRUCTIONS    87    SP
)@@G@@@A@@@ .   SIZE OF DATA AREA         51    @A@@@ .   TOTAL CORE REQUIREMESQ
)@@G@@NTS  138    @[@@@ .     @^@@@           AXR$      .   @#@@@ $(5)      LISR
)@@G@@T     @[@@@ $(3)  @B@@@ BFATAN*   J         DATAN       . -> 1 ARG@C@@@ SS
)@@G@@          J         CDATAN      . -> 1 COMPLEX  @ @@@           RTSAVE  ST
)@@G@@  NDATAN .  @A@@@           DS         A1,DRTARG2 .   @A@@@           DSSU
)@@G@@        A3,DRTARG1 .    @ @@@           L,U       A0,DRTARG1@ @@@       SV
)@@G@@    L,U       A1,DRTARG2@C@@@ DATAN2    DL        A4,0,A1            . 2SW
)@@G@@ND ARG@ @@@           LMJ       A2,ARGTST @ @@@           DS        A4,RSX
)@@G@@1     @E@@@           S         A4,TEMP2           . SIGN OF 2ND ARG    SY
)@@G@@@F@@@           DJZ       A4,ZERO2           . SECOND ARGUMENT IS ZERO  SZ
)@@G@@@C@@@           DL        A4,0,A0            . 1ST ARG@ @@@           LMTA
)@@G@@J       A2,ARGTST @ @@@           DFD       A4,R1     @F@@@           TNTB
)@@G@@Z       A4                 . IS QUOTIENT EQUAL TO ZERO@I@@@           DLTC
)@@G@@N       A4,A4              . YES, NEG. SIGN FOR QUADRANT PROJECTION     TD
)@@G@@@D@@@           J         COMP               . NO OVERFLOW  @D@@@ ZERO2 TE
)@@G@@    DL        A4,0,A0            . 1ST ARGUMENT @F@@@           DJZ     TF
)@@G@@  A4,NERRB$          . BOTH ARGUMENT ARE ZERO   @F@@@           DL      TG
)@@G@@  A3,PIOV2           . OVERFLOW, LOAD  PI/2     @G@@@           LMJ     TH
)@@G@@  A2,ARGTST          . TO SEE IF 1ST ARG UNNORMALIGED @F@@@           TPTI
)@@G@@        A4                 . 1ST ARGUMENT IS NEGATIVE @C@@@           DLTJ
)@@G@@N       A3,A3              . YES    @A@@@ RTBACK*    LA       A0,DRTSA0 TK
)@@G@@.     @ @@@           LMJ       X5,EXML . @ @@@           J         0,X1TL
)@@G@@1 .   @ @@@ DATAN       RTSAVE   NDATAN   @ @@@           DS       A3,DRTM
)@@G@@TARG1 @A@@@           L,U      A0,DRTARG1 .     @E@@@           SZ      TN
)@@G@@  TEMP2              . SET ENTRY FLAG     @ @@@           SZ         A3 TO
)@@G@@.     @C@@@           DL        A4,0,A0            . ARG    @ @@@       TP
)@@G@@    LMJ       A2,ARGTST @H@@@ COMP      S         A4,TEMP1           . STQ
)@@G@@IGN IF RESULT BETWEEN -PI/2 AND PI/2@H@@@           SZ,H2     TEMP1     TR
)@@G@@         . PRESUME ABS(ARG) IS SMALLER THAN 4.0 @E@@@           DLM     TS
)@@G@@  A4,A4              . ABS(ARG)=TAN(X Y)  @ @@@           DFU       A1,ATT
)@@G@@4     @H@@@           TG,U      A1,02003           . IS ABS(ARG) EQUAL OTU
)@@G@@R LARGER THAN 4.0 @C@@@           J         LARGE              . YES    TV
)@@G@@@G@@@           TLE,U     A1,01777           . IS ABS(ARG) LESS THAN 0.2TW
)@@G@@5     @C@@@           J         SMALL              . YES    @A@@@       TX
)@@G@@    LDSL      A2,0176001,A1   @ @@@           DSL       A2,59     @ @@@ TY
)@@G@@          JNB       A3,$+2    @F@@@           A,U       A3,1            TZ
)@@G@@   . MAKE TABLE INDEX EVEN    @ @@@           L,U       A0,02072  @C@@@ UA
)@@G@@          DFP       A0,A2              . TAN(Y) @ @@@           DS      UB
)@@G@@  A1,R1     @ @@@           DFM       A1,A4     @ @@@           DFA     UC
)@@G@@  A1,ONE    @E@@@           DFAN      A4,R1              . TAN(X Y)-TAN(UD
)@@G@@Y)    @I@@@           DFD       A4,A1              . TAN(X) , ABS(TAN(X)UE
)@@G@@) IS LESS THAN 0.25     @ @@@ BACK      DS        A4,TANX   @ @@@       UF
)@@G@@    DFM       A4,A4     @ @@@           DS        A4,R1     @ @@@       UG
)@@G@@    L         A2,(-4,12)@D@@@           LR,U      R3,3               . 4UH
)@@G@@ ITERATIONS @C@@@           DL        A4,COEFF+6,A2      . B10    @C@@@ UI
)@@G@@          DL        A0,COEFF+4,A2      . A9     @ @@@ LOOP      DFM     UJ
)@@G@@  A4,R1     @H@@@           DFA       A4,COEFF+2,A2      . ADD COEFFICIEUK
)@@G@@NT B OF DENOMINATOR     @ @@@           DFM       A0,R1     @G@@@       UL
)@@G@@    DFA       A0,COEFF,*A2       . ADD COEFFICIENT A OF NOMINATOR @ @@@ UM
)@@G@@          JGD       R3,LOOP   @ @@@           DFM       A4,R1     @D@@@ UN
)@@G@@          DFA       A4,COEFF           . ADD B0 (=A1) @ @@@           DFUO
)@@G@@D       A0,A4     @C@@@           DFM       A0,TANX            . ANGLE XUP
)@@G@@@D@@@           DFA       A0,TABLE,A3        . ADD ANGLE Y  @G@@@       UQ
)@@G@@    TNZ,H2    TEMP1              . IS ABS(ARG) LOWER THAN 4.0     @C@@@ UR
)@@G@@          J         FIN                . YES    @ @@@           DLN     US
)@@G@@  A0,A0     @ @@@           DFA       A0,PIOV2  @D@@@ FIN       TP      UT
)@@G@@  TEMP1              . IS SIGN NEG  @C@@@           DLN       A0,A0     UU
)@@G@@         . YES    @D@@@          DL         A3,A0              . SET RETUV
)@@G@@URN   @A@@@          LA         A0,DRTSA0 .     @ @@@          LMJ      UW
)@@G@@  X5,EXML . @F@@@           TNZ       TEMP2              . IS THERE ONE UX
)@@G@@ARG ONLY    @C@@@           J         0,X11              . YES    @E@@@ UY
)@@G@@          TN        TEMP2              . IS 2ND ARG NEG     @C@@@       UZ
)@@G@@    J         0,X11              . NO     @G@@@           DLM       A3,AVA
)@@G@@3              . RESULT IN 2ND OR 3RD QUADRANT  @D@@@           DFAN    VB
)@@G@@  A3,PI              . ABS(X Y)-PI  @F@@@           TP        TEMP1     VC
)@@G@@         . IS RESULT IN 2ND QUADRANT@C@@@           DLN       A3,A3     VD
)@@G@@         . NO     @ @@@           J         0,X11     @D@@@ ARGTST    TEVE
)@@G@@P       A4,(0400040,0)     . TEST ARG     @G@@@           J         0,A2VF
)@@G@@               . ARG UNEQUAL ZERO AND NORMALIZED@ @@@           DLM     VG
)@@G@@  A4,A4     @F@@@           DJZ       A4,0,A2            . RETURN IF LEGVH
)@@G@@AL ZERO     @E@@@           J         NERRA$             . ARG IS UNNORMVI
)@@G@@ALIZED@F@@@ LARGE     SX,H2     X11,TEMP1          . ABS(ARG) IS 4.0 OR VJ
)@@G@@LARGER@ @@@           DS        A4,R1     @ @@@           DL        A4,OVK
)@@G@@NE    @D@@@           DFD       A4,R1              . 1.0/ABS(ARG) @D@@@ VL
)@@G@@SMALL     SZ        A3                 . TAN(Y)=0.0   @^@@@           J VM
)@@G@@        BACK@[@@@ .     @ @@@ .         ATAND - IN DEGREES  @[@@@ .     VN
)@@G@@@[@@@ .     @^@@@ BFATND*  J         DEG1 @#@@@A         LOCAL .  @A@A@ VO
)@@G@@         DFM       A3,PIOV180 .     @A@A@          DFM       A1,PIOV180 VP
)@@G@@.     @ @A@         J         BFATAN+2.   @A@@@A         LMJ      X11,BFVQ
)@@G@@ATAN+2.     @E@@@ABFATAND1 LABEL .                   CONVERT TO DEGREES VR
)@@G@@HERE  @E@@@A         DFD     A3,PIOV180 .      WAS RADIANS , NOW DEGREESVS
)@@G@@@#@@@A         JMP .    @ @A@ DEG1     DFM       A3,PIOV180 @#@@@ADEG1  VT
)@@G@@   LOCAL .  @^@A@          J        DATAN @ @@@A         LMJ     X11,DATVU
)@@G@@AN .  @E@C@A         GOTO    BFATAD1 .         GO CONVERT TO DEGREES    VV
)@@G@@@E@@@C         GOTO    BFATAND1 .        GO CONVERT TO DEGREES    @ @@@ VW
)@@G@@TEMP2     EQU       DRTTMP    @ @@@ TEMP1     EQU       DRTTMP+1  @ @@@ VX
)@@G@@TANX      EQU       DRTTMP+2  @ @@@ ONE       +         0200140,0 @^@@@ VY
)@@G@@         +         0    @^@@@ PIOV180* 0177343575065 .@^@@@           04VZ
)@@G@@5123516212 .@A@@@ PIOV2*    +         0200162207732   @A@@@           + WA
)@@G@@        0504205506043   @A@@@ PI        +         0200262207732   @A@@@ WB
)@@G@@          +         0504205506043   @C@@@ COEFF     +         0203647014WC
)@@G@@575      . A1     @A@@@           +         0630000000000   @C@@@       WD
)@@G@@    +         0203756155321      . B2     @A@@@           +         0464WE
)@@G@@000000000   @C@@@           +         0203747553221      . A3     @A@@@ WF
)@@G@@          +         0760000000000   @C@@@           +         0203746035WG
)@@G@@673      . B4     @A@@@           +         0530000000000   @C@@@       WH
)@@G@@    +         0203665071467      . A5     @A@@@           +         0760WI
)@@G@@000000000   @C@@@           +         0203562575117      . B6     @A@@@ WJ
)@@G@@          +         0440000000000   @C@@@           +         0203463510WK
)@@G@@537      . A7     @A@@@           +         0200000000000   @C@@@       WL
)@@G@@    +         0203256656465      . B8     @A@@@           +         0600WM
)@@G@@000000000   @C@@@           +         0203064657637      . A9     @A@@@ WN
)@@G@@          +         0000000000000   @C@@@           +         0202466403WO
)@@G@@020      . B10    @^@@@ TABLE     +         0   @^@@@           +       WP
)@@G@@  0   @A@@@           +         0177773261470   @A@@@           +       WQ
)@@G@@  0126067323665   @A@@@           +         0200062207732   @A@@@       WR
)@@G@@    +         0504205506043   @A@@@           +         0200076714136   WS
)@@G@@@A@@@           +         0450076646617   @A@@@           +         0200WT
)@@G@@143333414   @A@@@           +         0456567621066   @A@@@           + WU
)@@G@@        0200146055553   @A@@@           +         0626511552054   @A@@@ WV
)@@G@@          +         0200147760273   @A@@@           +         0267520527WW
)@@G@@777   @A@@@           +         0200151270207   @A@@@           +       WX
)@@G@@  0706261151131   @A@@@           +         0200152332144   @A@@@       WY
)@@G@@    +         0521723477115   @ @A@ NDATAN   +          ' ATAN '  @A@@@AWZ
)@@G@@NDATAN   INSERT  5,'ATA','N   ' .   @#@@@           END     ___       DFXA
)@@G@@D       A4,A1              . TAN(X) , ABS(TAN(X)*[@@@@*SDFF*@C@@@^.   COXB
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@^.     @D@@@^.   QUESTIONXC
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@^.     @ @@@^.        MARXD
)@@G@@VIN V. ZELKOWITZ  @B@@@^.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@^XE
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@^.        COLLEGE PARK, MARYLANXF
)@@G@@D 20742     @[@@@^.     @G@@@^.        PERMISSION TO USE THESE LISTINGS XG
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@^.   REPRESENT IS GRANTED UNDER THE FXH
)@@G@@OLLOWING CONDITIONS:    @[@@@^.     @G@@@^.        1. UNLIMITED USE MAY XI
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@^.   THESE LISTINGS PROVIXJ
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@^.   PL/1 COMPILER XK
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@^.     @F@@@^.        2. XL
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@^.     @G@@@^XM
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   XN
)@@G@@@G@@@^.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRXO
)@@G@@OGRAM @E@@@^.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  XP
)@@G@@@[@@@^.     @G@@@^.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAXQ
)@@G@@L CORRECTIONS     @F@@@^.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLXR
)@@G@@ BE REPORTED AND  @G@@@^.        A BRIEF DESCRIPTION OF THE FEATURE ADDEXS
)@@G@@D SHALL BE SUBMITTED    @C@@@^.        TO THE UNIVERSITY OF MARYLAND, ANXT
)@@G@@D     @[@@@^.     @F@@@^.        (C) NO PROGRAMS DERIVED FROM THESE LISTXU
)@@G@@INGS SHALL BE SOLD@G@@@^.        WITHOUT WRITTEN APPROVAL FROM THE UNIVEXV
)@@G@@RSITY OF MARYLAND, AND  @[@@@^.     @F@@@^.        (D) COPIES OF THESE PXW
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@^.        LOCATIONS PROVIDED THXX
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@^.        WHETHER THE PROXY
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@^.        MARYLAND XZ
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@^.     @G@@@^.        3. YA
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@^.   ANYB
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@^.   THYC
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@^.   EXPERIMEYD
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@^.   IS NOT SYE
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@^.   FRYF
)@@G@@OM PLUM.    @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     YG
)@@G@@@[@@@^/.    @[@@@@.     @D@@@@.                        UNIVAC 1108 FORTRYH
)@@G@@AN V LIBRARY@[@@@@.     @B@@@@. DSQRT(X) - DOUBLE PRECISION SQUARE ROOT YI
)@@G@@@[@@@@.     @]@@@@.  USAGE    @[@@@@.     @^@@@@.   FORTRAN V REFERENCE YJ
)@@G@@@F@@@@.   DSQRT(X), WHERE X REPRESENTS THE (DOUBLE PRECISION) ARGUMENT. YK
)@@G@@@[@@@@.     @A@@@@.   ASSEMBLER LANGUAGE REFERENCE    @^@@@@.          DYL
)@@G@@L   A3,ARG  @ @@@@.   A     LMJ   X11,DSQRT     @[@@@@.     @A@@@@.   ARYM
)@@G@@GUMENT AND FUNCTION RANGE     @I@@@@.   THE ARGUMENT MUST BE A NON-NEGATYN
)@@G@@IVE, NORMALIZED, DOUBLE PRECISION, FLOATING     @H@@@@.   POINT NUMBER. YO
)@@G@@ THE FUNCTION RETURNS A NON-NEGATIVE, NORMALIZED, FLOATING  @#@@@@.   POYP
)@@G@@INT NUMBER. @[@@@@.     @^@@@@.   FUNCTIONS REFERENCED@]@@@@.   NONE    YQ
)@@G@@@[@@@@.     @^@@@@.   ERROR CONDITIONS    @F@@@@.   UNNORMALIZED OR NEGAYR
)@@G@@TIVE ARGUMENTS CAUSE ERROR TERMINATION.   @H@@@@.   THE ARGUMENT APPEARSYS
)@@G@@ IN UNPACKED DOUBLE PRECISION FORMAT IN REGISTERS     @#@@@@.   A3, A4-AYT
)@@G@@5.    @[@@@@.     @^@@@@.  MATHEMATICAL METHOD  @H@@@@.   WRITE X = 2**(YU
)@@G@@2*E) * M, WHERE E IS AN INTEGER AND 0.25 .LE. M .LT. 1.0.   @ @@@@.   SQYV
)@@G@@RT(X) = 2**E * SQRT(M)  @G@@@@.   SQRT(M) IS APPROXIMATED USING A POLYNOYW
)@@G@@MIAL APPROXIMATION OF THE FORM@D@@@@.   C4 * M**4 + C3 * M**3 + C2 * M**YX
)@@G@@2 + C1 * M + C0   @G@@@@.   THIS APPROXIMATION IS IMPROVED WITH TWO NEWTYY
)@@G@@ON-RAPHSON ITERATIONS.  @[@@@@.     @#@@@@.  PERFORMANCE    @[@@@@.     YZ
)@@G@@@]@@@@.   ACCURACY@H@@@@.                  NO. OF    MAX. REL.    RMS REZA
)@@G@@L.      MAX. NO.  FULL LENGTH @H@@@@.       ARG.        ARG.       ERRORZB
)@@G@@        ERROR      ERRONEOUS    ACCURACY  @H@@@@.      RANGE       VALUEZC
)@@G@@S   *10**(-18)   *10**(-18)      BITS         (%)     @H@@@@.   --------ZD
)@@G@@------ ------   -----------  ------------   --------  ----------- @H@@@@ZE
)@@G@@.   (0.25,0.5)      3000      0.8459        0.4125         0         100ZF
)@@G@@.0    @H@@@@.   (0.5,1.0)       3000     -0.6063        0.2981         1ZG
)@@G@@          99.9    @H@@@@.   (0,25)          5000      0.8566        0.38ZH
)@@G@@15         1         100.0    @E@@@@.   RESULTS ARE COMPARABLE FOR ARGUMZI
)@@G@@ENTS GREATER THAN 25.   @[@@@@.     @]@@@@.   TIMING  @A@@@@.   76.3 MICZJ
)@@G@@ROSEC. IF X .NE. 0.     @ @@@@.    7.8 MICROSEC. IF X = 0.  @[@@@@.     ZK
)@@G@@@^@@@@.   CORE REQUIREMENTS   @A@@@@.   NUMBER OF INSTRUCTIONS    40    ZL
)@@G@@@A@@@@.   SIZE OF DATA AREA         15    @A@@@@.   TOTAL CORE REQUIREMEZM
)@@G@@NT    55    @[@@@@.     @#@@@@         AXR$     @#@@@]         DCLRG .  ZN
)@@G@@@]@@@@$(5)     LIT@[@@@@$(3)  @^@@@@BFSQRT*   J     DSQRT . @C@@@@      ZO
)@@G@@    J     CDSQRT .            COMPLEX     @^@@@@DSQRT    RTSAVE NAME    ZP
)@@G@@@B@[@@         SZ        A3                  .  @D@@@@         DL       ZQ
)@@G@@ A0,A3               . ARG IN A0,A1 @E@@@@         DS        A0,R2      ZR
)@@G@@         . STORE ARG IN R2,R3 @G@@@@         DFU       A3,A0            ZS
)@@G@@   . CHAR IN A3 , MANT IN A4,A5     @I@@@@         AA,U      A3,01757   ZT
)@@G@@         . ADD BIAS - 22(FRACTIONAL) + 6(COEF) - 1    @H@@@@         DSCZU
)@@G@@       A2,1                . CHAR FOR FIRST ESTIMATE, CHAR/2 IN A3@I@@@@ZV
)@@G@@         SSL       A2,35               . 0 IF CHAR ODD , 1 IF EVEN, (COEZW
)@@G@@F INDEX)    @ @@@@         TLE       A4,(040,0) @H@#@@         J        ZX
)@@G@@ ZERO                . ARG IS NON-POSITIVE OR UNNORMALIZED  @H@@@#      ZY
)@@G@@   J         ZEROX                . ARG IS NON-POSITIVE OR UNNORMALIZED ZZ
)@@G@@@E@@@@         LDSL      A4,10,A2            . LEFT JUSTIFY MANT  @B@@@@AA
)@@G@@         SA        A4,R1               . Z@C@@@@         MF        A4,E,AB
)@@G@@A2             . EZ     @C@@@@         AA        A4,D,A2             . EAC
)@@G@@Z + D @D@@@@         MF        A4,R1               . EZZ + DZ     @D@@@@AD
)@@G@@         AA        A4,C,A2             . EZZ + DZ + C @E@@@@         MF AE
)@@G@@       A4,R1               . EZZZ + DZZ + CZ    @E@@@@         AA       AF
)@@G@@ A4,B,A2             . EZZZ + DZZ + CZ + B@F@@@@         MF        A4,R1AG
)@@G@@               . EZZZZ + DZZZ + CZZ + BZ  @G@@@@         AA        A4,A,AH
)@@G@@A2             . EZZZZ + DZZZ + CZZ + BZ + A    @H@@@@         DFP      AI
)@@G@@ A3,A4               . FIRST APPROXIMATION (Q1) IN A4,A5    @C@@@@      AJ
)@@G@@   DFD       A0,A4               . ARG/Q1 @D@@@@         DFA       A0,A4AK
)@@G@@               . ARG/Q1 + Q1  @F@@@@         ANA       A0,(0100,0)      AL
)@@G@@   . (1/2)*(ARG/Q1 + Q1) = Q2 @C@@@@         DL        A4,R2            AM
)@@G@@   . ARG    @C@@@@         DFD       A4,A0               . ARG/Q2 @H@@@@AN
)@@G@@         TG        A0,A4               . TEST FOR FLOATING POINT ROUNDINAO
)@@G@@G     @^@@@@         J         ROUND@F@@@@         DA        A0,(01D)   AP
)@@G@@         . ROUND WHEN A4 GREATER    @E@@@@         TOP       A0,(040,0) AQ
)@@G@@         . ADDITION OVERFLOW? @C@@@@         AA        A0,(040,0)       AR
)@@G@@   . YES    @E@@@@RETURN   TOP       A4,(040,0)          . ADDITION OVERAS
)@@G@@FLOW? @C@@@@         AA        A4,(040,0)          . YES    @D@@@@      AT
)@@G@@   DFA       A0,A4               . ARG/Q2 + Q2  @F@@@@         ANA      AU
)@@G@@ A0,(0100,0)         . (1/2)*(ARG/Q2 + Q2) = Q3 @ @@@@BACK     DL       AV
)@@G@@ A3,A0.     @ @@@@         J         RTBACK .   @D@#@@ZERO     DJZ      AW
)@@G@@ A0,BACK            . ARG = 0.0     @D@@@#ZEROX     DJZ       A0,BACK   AX
)@@G@@         . ARG = 0.0    @F@@@@         J         NERRA$              . AAY
)@@G@@RG < 0 OR UNNORMALIZED  @F@@@@ROUND    DA        A4,(01D)            . RAZ
)@@G@@OUND WHEN A4 NOT GREATER@ @@@@         J         RETURN     @^@]@@NAME  BA
)@@G@@      ' SQRT '    @A@@@]NAME     INSERT  5,'SQR','T   ' .   @F@@@@A     BB
)@@G@@   +         0012273521505       . 0.22906994529/(8*SQRT(2))@E@@@@      BC
)@@G@@   +         0016522123747       . 0.22906994529/8    @F@@@@B        +  BD
)@@G@@       0165562172450       . 1.3006690496/(4*SQRT(2)) @E@@@@         +  BE
)@@G@@       0123174245456       . 1.3006690496/8     @G@@@@C        -        BF
)@@G@@ 0244465464430       . -0.90932104982/(2*SQRT(2))     @E@@@@         -  BG
)@@G@@       0072144503525       . -0.90932104982/8   @F@@@@D        +        BH
)@@G@@ 0265313040305       . 0.50104207633/SQRT(2)    @E@@@@         +        BI
)@@G@@ 0040042113110       . 0.50104207633/8    @F@@@@E        -         01277BJ
)@@G@@47535113       . -0.12146838249*SQRT(2)   @I@@@@         -         00076BK
)@@G@@14001010       . -0.12146838249/8  ADJUSTED THROUGH 1.0     @]@@@@      BL
)@@G@@   END___IVE, NORMALIZED, FLOATING  @#@@@@.   POINT NUMBER. @[@@@@.     BM
)@@G@@@^@@@@.   FUNCTIONS REFERENCED@]@@@@.   NONE    @[@@@@.     @^@@@@.   ERBN
)@@G@@ROR CONDITIONS    @F@@@@*[@@@@*SDFF*@C@@@D.   COPYRIGHT 1975 BY UNIVERSIBO
)@@G@@TY OF MARYLAND    @[@@@D.     @D@@@D.   QUESTIONS CONCERNING THIS SHOULDBP
)@@G@@ BE DIRECTED TO:  @[@@@D.     @ @@@D.        MARVIN V. ZELKOWITZ  @B@@@DBQ
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@D.        UNIVERSITY OF MBR
)@@G@@ARYLAND     @B@@@D.        COLLEGE PARK, MARYLAND 20742     @[@@@D.     BS
)@@G@@@G@@@D.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMBT
)@@G@@S THEY@E@@@D.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    BU
)@@G@@@[@@@D.     @G@@@D.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS BV
)@@G@@REPRESENTED BY    @G@@@D.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OBW
)@@G@@R UNIVERSITY OF MARYLAND@E@@@D.   PL/1 COMPILER REMAINS ASSOCIATED WITH BX
)@@G@@THESE PROGRAMS.   @[@@@D.     @F@@@D.        2. MODIFICATIONS MAY BE MADBY
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@D.     @G@@@D.        (A) ANY RESULTIBZ
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@D.        DESCRIBINCA
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@D.        IS CB
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@D.     @G@@@D.     CC
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@DCD
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@DCE
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    CF
)@@G@@@C@@@D.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@D.     @F@@@DCG
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@DCH
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  CI
)@@G@@@[@@@D.     @F@@@D.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTCJ
)@@G@@ED TO OTHER @G@@@D.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLECK
)@@G@@ARLY INDICATE     @G@@@D.        WHETHER THE PROGRAMS ARE EXACT COPIES OCL
)@@G@@F THE UNIVERSITY OF     @E@@@D.        MARYLAND PLUM COMPILER OR ARE MODCM
)@@G@@IFICATIONS TO IT. @[@@@D.     @G@@@D.        3. THESE CONDITIONS ONLY APCN
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@D.   AND ARE NOT MEANT TO APPLYCO
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@D.   THE PURPOSE OF THESE CONDICP
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@D.   EXPERIMENT WITH THE COMPILER AS CQ
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@D.   IS NOT SOLD AND AS LONG AS IT ISCR
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@D.   FROM PLUM.    @[@@@D.     CS
)@@G@@@[@@@D.     @[@@@D.     @[@@@D.     @[@@@D.     @[@@@D/.    @[@@@ .     CT
)@@G@@@D@@@ .                        UNIVAC 1108 FORTRAN V LIBRARY@[@@@ .     CU
)@@G@@@D@@@ . NEXP9$ - DOUBLE PRECISION BASE TO INTEGER EXPONENT  @[@@@ .     CV
)@@G@@@]@@@ .  USAGE    @[@@@ .     @^@@@ .   FORTRAN V REFERENCE @G@@@ .   A*CW
)@@G@@*B, WHERE A IS THE (DOUBLE PRECISION) BASE AND B IS THE (INTEGER) @#@@@ CX
)@@G@@.   EXPONENT.     @[@@@ .     @A@@@ .   ASSEMBLER LANGUAGE REFERENCE    CY
)@@G@@@ @@@ .   A     LMJ   X11,NEXP9$    @D@@@ .   A+1   +     LOC(A)        CZ
)@@G@@  . ADDRESS OF BASE     @D@@@ .   A+2   +     LOC(B)          . ADDRESS DA
)@@G@@OF EXPONENT @C@@@ .   A+3   +     SEQNUM,PRGNAM   . WALK BACK WORD@C@@@ DB
)@@G@@.   A+4                         . NORMAL RETURN @[@@@ .     @A@@@ .   ARDC
)@@G@@GUMENT AND FUNCTION RANGE     @H@@@ .   THE ARGUMENT A MUST BE A NORMALIDD
)@@G@@ZED, DOUBLE PRECISION NUMBER AND B MUST BE@H@@@ .   AN INTEGER SUCH THATDE
)@@G@@ A**B .LE. 2.**1022-1.  A AND B MUST NOT BOTH BE ZERO.@F@@@ .   THE FUNCDF
)@@G@@TION RETURNS A NORMALIZED, DOUBLE PRECISION NUMBER.   @[@@@ .     @^@@@ DG
)@@G@@.   FUNCTIONS REFERENCED@]@@@ .   NONE    @[@@@ .     @^@@@ .   ERROR CODH
)@@G@@NDITIONS    @H@@@ .   ERROR TERMINATION IS CAUSED WHEN THE BASE IS UNNORDI
)@@G@@MALIZED OR WHEN BOTH A  @H@@@ .   AND B ARE ZERO.  ERROR TERMINATION IS DJ
)@@G@@ALSO CAUSED IF THE FUNCTION VALUE   @^@@@ .   EXCEEDS 2.**1022-1. @[@@@ DK
)@@G@@.     @^@@@ .  MATHEMATICAL METHOD  @G@@@ .   THE BASE IS TAKEN AS A FACDL
)@@G@@TOR ABS(B) TIMES.  IF B IS NEGATIVE, THE  @G@@@ .   RECIPROCAL IS COMPUTDM
)@@G@@ED.  IF A**B < 10**(-308), ZERO IS RETURNED.    @[@@@ .     @#@@@ .  PERDN
)@@G@@FORMANCE    @[@@@ .     @]@@@ .   ACCURACY@H@@@ .                  NO. ODO
)@@G@@F    MAX. REL.    RMS REL.      MAX. NO.  FULL LENGTH @H@@@ .       ARG.DP
)@@G@@        ARG.       ERROR        ERROR      ERRONEOUS    ACCURACY  @H@@@ DQ
)@@G@@.      RANGE       VALUES   *10**(-17)   *10**(-17)      BITS         (%DR
)@@G@@)     @H@@@ .   -------------- ------   -----------  ------------   ----DS
)@@G@@----  ----------- @H@@@ .   A: (0.01,10)    3000      0.1862        0.06DT
)@@G@@10         2          74.5    @#@@@ .   B: (-100,100) @G@@@ .   COMPARABDU
)@@G@@LE ACCURACIES WERE OBTAINED FOR ARGUMENTS OUTSIDE THE ABOVE @#@@@ .   INDV
)@@G@@TERVAL.     @[@@@ .     @]@@@ .   TIMING  @D@@@ .   AVERAGE TIME = (43.3DW
)@@G@@ + 21.5*K + 16.9*M) MICROSEC. @F@@@ .   WHERE K IS THE MOST SIGNIFICANT DX
)@@G@@BIT POSITION OF THE EXPONENT  @G@@@ .   AND M IS THE NUMBER OF 1 BITS INDY
)@@G@@ THE ABSOLUTE VALUE OF THE EXPONENT.@D@@@ .   ADD 20.3 MICROSEC. IF THE DZ
)@@G@@EXPONENT IS NEGATIVE.   @[@@@ .     @^@@@ .   CORE REQUIREMENTS   @A@@@ EA
)@@G@@.   NUMBER OF INSTRUCTIONS    81    @A@@@ .   SIZE OF DATA AREA         EB
)@@G@@17    @A@@@ .   TOTAL CORE REQUIREMENTS   98    @[@@@ .     @#@@@       EC
)@@G@@   AXR$     @#@@@          DCLRG .  @]@@@ $(5)     LIT@[@@@ $(3)  @ @@@ ED
)@@G@@REXFLT*   RTSAVE   NAME .     @^@@@           L        A0,A1@ @@@       EE
)@@G@@    L        A1,A2 .    @B@@@          DL        A10,(01766200000000000)EF
)@@G@@@G@@@          SZ        A12                  . ONE (70 BIT) IN A10,A11,EG
)@@G@@A12   @F@@@          DLM       A4,0,A0              . ABS(DP BASE) IN A4EH
)@@G@@,A5   @H@@@          LR        R1,0,A0              . 1ST WORD OF BASE FEI
)@@G@@OR SIGN IN R1     @ @@@          LA        A2,0,A1    @F@@@          SA EJ
)@@G@@       A2,SIGN              . EXPONENT STORED IN SIGN @F@@@          LM EK
)@@G@@       A9,A2                . ABS(INTEGER EXP) IN A9  @H@@@          LR EL
)@@G@@       R3,A9                . ABS(EXP) FOR ODD-EVEN TEST IN R3    @A@@@ EM
)@@G@@         TEP       A4,(0400040,0)   @E@@@          J         NX90       EN
)@@G@@          . BASE UNEQUAL ZERO @ @@@          DJZ       A4,$+2     @E@@@ EO
)@@G@@         J         NERRA$               . BASE UNNORMALIZED @E@@@       EP
)@@G@@   JZ        A9,NERRB$            . BASE AND EXP ZERO @^@@@ NX90     DFUEQ
)@@G@@       A0,A4@^@@@          LDSC      A1,11@^@@@          SSC       A2,1 ER
)@@G@@@G@@@          ANA,U     A0,02000             . BASE (70 BIT) IN A0,A1,AES
)@@G@@2     @ @@@ NX91     JNB       A9,NX92    @ @@@          LA        A5,A1ET
)@@G@@1     @ @@@          LA        A7,A12     @ @@@          LA        A3,A1EU
)@@G@@1     @^@@@          MI        A5,A2@^@@@          MI        A7,A1@^@@@ EV
)@@G@@         DA        A7,A5@^@@@          MF        A3,A1@^@@@          DSAEW
)@@G@@       A7,34@^@@@          DA        A7,A3@ @@@          DLSC      A11,AEX
)@@G@@7     @ @@@          AA        A10,A0     @ @@@          ANA       A10,AEY
)@@G@@13    @^@@@          SSL       A12,1@^@@@ NX92     SSL       A9,1 @ @@@ EZ
)@@G@@         JZ        A9,NX93    @^@@@          LA        A5,A1@^@@@       FA
)@@G@@   LA        A7,A2@^@@@          LA        A3,A1@^@@@          MI       FB
)@@G@@ A5,A2@^@@@          MI        A7,A1@^@@@          DA        A7,A5@^@@@ FC
)@@G@@         MF        A3,A1@^@@@          DSA       A7,34@^@@@          DA FD
)@@G@@       A7,A3@^@@@          DLSC      A1,A7@^@@@          AA        A0,A0FE
)@@G@@@^@@@          ANA       A0,A3@^@@@          SSL       A2,1 @^@@@       FF
)@@G@@   J         NX91 @^@@@ NX93     LSSL      A12,1@A@@@          DA       FG
)@@G@@ A11,(02000D)     @ @@@          DSL       A11,11     @ @@@          AA,FH
)@@G@@U      A10,11     @ @@@ NX94     TG,U      A10,03777  @D@@@          J  FI
)@@G@@       NERRC$               . OVERFLOW    @E@C@          JN    A10,ZERO FJ
)@@G@@           . UNDERFLOW OR OVERFLOW  @E@@@C         JN    A10,ZEROXX     FK
)@@G@@       . UNDERFLOW OR OVERFLOW@ @@@          DFP       A10,A11    @ @@@ FL
)@@G@@         DL        A0,A11     @E@@@          TN        R1               FM
)@@G@@    . BASE NEGATIVE     @C@@@          J         NX95                 . FN
)@@G@@NO    @^@@@          LA        A4,R3@ @@@          JNB       A4,NX95    FO
)@@G@@@^@@@          DLN       A0,A0@^@@@ NX95     TN        SIGN @^@B@       FP
)@@G@@   J         OUT  @^@@@B         J         OUTT @ @@@          DL       FQ
)@@G@@ A11,A0     @ @@@          DL        A0,(1.0D)  @G@@@          DFD      FR
)@@G@@ A0,A11              . NEGATIVE EXP , TAKE RECIPROCAL @E@B@ OUT      DS FS
)@@G@@       A0,A3 .         RETURN RESULT IN A3-A4   @E@@@BOUTT      DS      FT
)@@G@@  A0,A3 .         RETURN RESULT IN A3-A4  @ @@@          J         RTBACFU
)@@G@@K     @^@C@ ZERO     DSL   A0,72    @^@@@CZEROXX     DSL   A0,72  @^@@@ FV
)@@G@@         TN    SIGN     @C@B@          J     OUT                 . UNDERFW
)@@G@@FLOW  @C@@@B         J     OUTT                 . UNDERFLOW @C@@@       FX
)@@G@@   J     NERRC$              . OVERFLOW   @A@@@ NAME     INSERT  5,'F**'FY
)@@G@@,'I   ' .   @ @@@ SIGN     EQU   DRTARG1+1 .    @]@@@          END___ANGFZ
)@@G@@E     @H@@@ .   THE ARGUMENT A MUST BE A NORMALIZED, DOUBLE PRECISION NUGA
)@@G@@*[S@@@*SDFF*@C@@@N.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@NGB
)@@G@@.     @D@@@N.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@NGC
)@@G@@.     @ @@@N.        MARVIN V. ZELKOWITZ  @B@@@N.        DEPARTMENT OF CGD
)@@G@@OMPUTER SCIENCE   @A@@@N.        UNIVERSITY OF MARYLAND     @B@@@N.     GE
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@N.     @G@@@N.        PERMISSIOGF
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@N.   REPRESENGG
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@N.     @G@@@N.     GH
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@NGI
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDGJ
)@@G@@@E@@@N.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@NGK
)@@G@@.     @F@@@N.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDGL
)@@G@@ED:   @[@@@N.     @G@@@N.        (A) ANY RESULTING PROGRAM, OR REPORT, PGM
)@@G@@APER OR DOCUMENTATION   @G@@@N.        DESCRIBING SUCH PROGRAM WILL CLEAGN
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@N.        IS A DIALECT OF PLUM OR IS GO
)@@G@@DERIVED FROM PLUM, AND  @[@@@N.     @G@@@N.        (B) ALL SUCH MODIFICAGP
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@N.        OF ERRORS IN THGQ
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@N.        A BRIEF DESCRIPGR
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@N.        TO THE UNGS
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@N.     @F@@@N.        (C) NO PROGRAMSGT
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@N.        WITHOUT WRITTENGU
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@N.     @F@@@N.     GV
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@N.     GW
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@NGX
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     GY
)@@G@@@E@@@N.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@NGZ
)@@G@@.     @G@@@N.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERHA
)@@G@@ ITSELF,    @F@@@N.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN HB
)@@G@@USING PLUM. @E@@@N.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USHC
)@@G@@ER TO @F@@@N.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRHD
)@@G@@ODUCT @G@@@N.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT HE
)@@G@@DEVELOPED   @#@@@N.   FROM PLUM.    @[@@@N.     @[@@@N.     @[@@@N.     HF
)@@G@@@[@@@N.     @[@@@N.     @[@@@N/.    @#@@@M/         AXR$ .  @#@@@M      HG
)@@G@@    DCLRG . @]@@@M@ADD PLTVDS @]@@@M@ADD EXCDS  @#@@@M          PLWORD  HH
)@@G@@@#@@@N          PLAR    @^@@@MHIST      CSECT     3 . @B@@@MPLDUMP*   LOHI
)@@G@@CAL .                  ENTRY  @F@@@M          IF        040,OFF,DGOPT3 THJ
)@@G@@HEN,PLDA  . -> NO LABEL LIST  @ @@@M          LINK      HILBL .   @#@@@MHK
)@@G@@PLDA      LABEL . @F@N@M          IF        0200,OFF,DGOPT3 THEN, PLDB .HL
)@@G@@ -> NO HISTOGRAM  @F@@@N          IF        0200,OFF,DGOPT3 THEN,PLDB . HM
)@@G@@-> NO HISTOGRAM   @^@@@M          LINK HIENTR . @#@@@MPLDB      LABEL . HN
)@@G@@@G@@@N         IF    020,OFF,DGOPT3 THEN,PLDCX . -> NO STMT STATIC LANG HO
)@@G@@ANAL  @^@@@N         LINK  EXSRDT . @#@@@NPLDCX    LABEL .  @#@@@M      HP
)@@G@@   JMP .    @^@@@M/ .       HISTOGRAMS    @[@@@M.     @C@@@M.         EXHQ
)@@G@@ECUTION ROUTINE TO PRODUCE CHARTS   @[@@@M.     @E@@@MEXHIST*   LLOC  . HR
)@@G@@                 EXECUTION HISTOGRAMS     @D@@@M          LOAD      A3,RHS
)@@G@@11 .       STATEMENT NUMBER   @C@@@M          LA,H2     A4,DRSTMT-1,A3 .HT
)@@G@@ UP COUNT   @ @@@M          ADD       A4,1,I .  @A@@@M          SA,H2   HU
)@@G@@  A4,DRSTMT-1,A3 .@B@@@M          LJMP .                   RETURN @[@@@MHV
)@@G@@.     @[@@@M.     @[@@@M.     @[@@@M.     @[@@@M.     @#@@@MHIENTR    LOHW
)@@G@@CAL . @D@@@M          LOAD      A11,0,I  .     FIND MAX COUNT     @A@@@MHX
)@@G@@          LOAD      X3,DHSCAN .     @A@@@M          SETL      A9,DHSTMT HY
)@@G@@.     @#@@@MHILP1     LABEL . @A@@@M          LOAD      A8,W1H2,*X3 .   HZ
)@@G@@@B@@@M          IF        A8,LT,A11 THEN,HILP2  @C@@@M          LOAD    IA
)@@G@@  A11,A8 .       NEW MAX.     @#@@@MHILP2     LABEL . @ @@@M          LOIB
)@@G@@OP      A9,HILP1 .@D@N@M          LOAD      X4,0,I .       FIND SHIFT FAIC
)@@G@@CTOR  @#@N@MHILP4     LABEL . @D@N@M          IF        A11,LT,18,I THENID
)@@G@@,HILP3 . ->SCALED @C@N@M          SRB       A11,1 .      SCALE NUMBER   IE
)@@G@@@ @N@M          ADD       X4,1,I .  @D@N@M          GOTO      HILP4  .  IF
)@@G@@     ->SCALE SOME MORE  @D@@@N          LOAD       X4,1,I .      GET DIVIG
)@@G@@IDE FACTOR  @E@@@N          IF          A11,LT,17,I THEN,HILP3 . -> NO DIH
)@@G@@IVIDE @D@@@N          ADD        A11,15,I .      ROUND UPWARDS    @C@@@NII
)@@G@@          SRB        A11,4 .        SCALE FACTOR@ @@@N          LOAD    IJ
)@@G@@   X4,A11 . @#@@@MHILP3     LABEL . @E@@@M          LOAD      A14,3,I . IK
)@@G@@     ASSUME BATCH 4 COL/PAGE  @E@@@M          IF        040,OFF,DGOPT3 TIL
)@@G@@HEN,HILP5 . -> BATCH    @D@@@M          LOAD      A14,1,I .      ->DEMANIM
)@@G@@D 2 COL/PAGE@#@@@MHILP5     LABEL . @ @@@M          LOAD      A8,A14    IN
)@@G@@@D@@@N          ADD       A8,1,I .           NUMBER PER LINE@C@@@M      IO
)@@G@@    MPYS      A8,50,I .      NUMBER/PAGE  @A@@@M          LOAD      A15,IP
)@@G@@DHSTMT .    @D@@@M          SUB       A15,1,I .      FLOOR(NUM-1/PAGE)  IQ
)@@G@@@ @@@M          SRBD      A15,36 .  @C@@@M          DI        A15,A8 .  IR
)@@G@@     NUM PAGES-1  @D@@@M          LOAD      A11,1,I .      NEXT STMT NUMIS
)@@G@@.     @E@@@M          IF        A14,NE,1,I THEN,HIPGLP . -> NOT DEMAND  IT
)@@G@@@B@@@M          LOAD      A15,0,I  .     1PAGE  @#@@@MHIPGLP    LABEL . IU
)@@G@@@D@@@M          SETL      A13,50,I .     ASSUME FULL PAGE   @ @@@M      IV
)@@G@@    LOAD      A10,50,I .@E@N@M          IF        A15,NE,0,I THEN,HIPGLPIW
)@@G@@2  . ->FULL PAGE  @E@@@N          IF        A15,NE,0,I THEN,HIPGLP2  . -IX
)@@G@@>FULL PAGE  @D@@@M          LOAD      A10,DHSTMT .        NUM STMTS     IY
)@@G@@@E@@@M          SUB       A10,A11    .        NUM REMAINING-1     @E@@@MIZ
)@@G@@          ADD       A10,2,I    .        NUM REMAINING+1     @E@@@N      JA
)@@G@@   IF         A14,EQ,1,I THEN,HIPGLP4 . -> TERMINAL   @E@@@N         ADDJB
)@@G@@        A10,2,I .            NUM REMAINING+3    @E@N@M          IF      JC
)@@G@@  040,ON,DGOPT3 THEN,HIPGLP4 . -> TERMINAL@E@N@M          ADD       A10,JD
)@@G@@2,I   .         NUM REMAINING+3     @B@N@MHIPGLP4   SRB       A10,1 .   JE
)@@G@@          /2@B@@@NHIPGLP4   SRB       A10,1 .             /2@D@@@N      JF
)@@G@@    IF    A14,EQ,1,I THEN,HIPGLP5 . ->TERMINAL  @^@@@N          SRB   A1JG
)@@G@@0,1 . @C@N@M          IF        040,ON,DGOPT3 THEN,HIPGLP5 .@ @N@M      JH
)@@G@@    SRB       A10,1 .   @C@@@MHIPGLP5   LOAD      A13,A10 .           COJI
)@@G@@UNT   @ @@@M          SETL      A13 .     @#@@@MHIPGLP2   LABEL . @D@N@MJJ
)@@G@@          MOVE      DGOLIN,HHDR,4 .     PRINT HEADER  @D@@@N          MOJK
)@@G@@VE      DGOLIN,HHDR,12 .     PRINT HEADER @D@@@N          CVE       X4,RJL
)@@G@@ .         PRINT SCALE FACTOR @ @@@N         STORE A4,DGOLIN+8 .  @^@@@MJM
)@@G@@         LOAD  X2,63,I .@F@N@M         IF    040,OFF,DGOPT3 THEN,HIPGLP1JN
)@@G@@7 . -> NOT TERMINAL     @E@@@N         IF    A14,NE,1,I THEN,HIPGLP17 . JO
)@@G@@-> NOT TERMINAL   @C@@@M         LOAD  X2,1,I .           TERMINAL SKIP JP
)@@G@@@#@@@MHIPGLP17 LABEL .  @A@@@M          LOADA     X1,DGOLIN  .    @ @@@MJQ
)@@G@@          LINK      GOPRNT  . @#@@@MHIPGLP3   LABEL . @ @@@M          LOJR
)@@G@@AD      A12,A14  .@ @@@M          LOAD      X7,A11 .  @E@@@M          SUJS
)@@G@@B       X7,A10  .           STMT NUM AT LEFT    @A@@@M          LOAD    JT
)@@G@@  X3,DHLINE .     @#@@@MHILNLP    LABEL . @D@@@M          ADD       X7,AJU
)@@G@@10 .       NEXT STMT NUMBER . @B@N@M          CVE       X7,DHTEMP .    CJV
)@@G@@ONVERT@B@@@N          CVE       X7,R .    CONVERT     @ @@@N         STOJW
)@@G@@RE      A4,0,X3 . @B@N@M          LOAD      A7,DHTEMP+1 .  BBBNNN @B@N@MJX
)@@G@@          SSC       A7,30 .        BBNNNB @A@N@M          LOADA     X5,DJY
)@@G@@HSTRT .     @B@@@M          LOAD      X6,DHSTRT-1+FH2,X7 .  @B@N@M      JZ
)@@G@@    CVE       X6,DHTEMP .    BBBCCC @A@@@N          CVE       X6,R .    KA
)@@G@@BBBCCC@A@N@M          LOAD      A8,DHTEMP+1 .   @C@N@M          DSC     KB
)@@G@@  A7,66 .        BNNNB BBBCCCB@ @N@M          STORED    A7,0,X3 . @A@N@MKC
)@@G@@          LOADD     A8,KBLANK .     @ @@@N         STORED A3,1,X3 .     KD
)@@G@@@ @N@M          LOAD      A3,X6 .   @ @@@N          LOAD      A4,X6 .   KE
)@@G@@@D@@@N          LOAD      A3,0,I .       GET SCALED NUMBER  @ @@@N      KF
)@@G@@    DI        A3,X4 .   @E@@@N         SLB   A3,1 .            2 TIMES NKG
)@@G@@O. OF *'S NEEDED  @E@N@M         SRB   A3,0,X4 .                 SCALE NKH
)@@G@@UMBER OF *'S@A@N@M          LOAD      A7,DKSTAR .     @A@@@N          LOKI
)@@G@@ADD     A7,DKSTAR .     @B@N@M          IF        A3,GE,7,I THEN,HIDOT1 KJ
)@@G@@@C@@@N          IF        A3,GE,2*9,I THEN,HIDOT1     @C@N@M          LOKK
)@@G@@AD      A7,DKSTR1,A3 . SET 0-6 *'S  @C@@@N          LOADD     A7,DKSTR1,KL
)@@G@@A3 . SET 0-8 *'S  @ @@@N         STORED     A7,4,X3 . @A@@@N         LOAKM
)@@G@@DD      A7,KBLANK .     @ @@@M          GOTO      HIDN .    @#@@@MHIDOT1KN
)@@G@@    LABEL . @ @N@M          SUB       A3,6,I .  @ @@@N          SUB     KO
)@@G@@  A3,2*8,I .@C@N@M          LOAD      A8,DKSTAR  .   *'S 7-12     @D@N@MKP
)@@G@@          IF        A3,GE,7,I THEN,HIDOT2 . -> >12 *'S@C@@@N         STOKQ
)@@G@@RED     A7,4,X3 .      SET 8 *'S    @A@N@M          LOAD      A8,DKSTR1,KR
)@@G@@A3  . @A@@@N          LOADD     A7,DKSTR1,A3  . @^@N@M          GOTO    KS
)@@G@@  HIDN@#@N@MHIDOT2    LABEL . @ @N@M          SUB       A3,6,I .  @C@N@MKT
)@@G@@          LOAD      A9,DKSTR1,A3  .  CHAR 13-18 @#@@@MHIDN      LABEL . KU
)@@G@@@ @N@M          STORED    A7,2,X3 . @ @@@N          STORED    A7,6,*X3 .KV
)@@G@@@ @N@M          STORE     A9,4,*X3 .@D@@@M          LOOP      A12,HILNLPKW
)@@G@@ .   ->  FIELDS/LINE    @C@@@M          LOADA     X1,DGOLIN      PRINT LKX
)@@G@@INE   @ @@@M          LINK      GOPRTL .  @ @@@M         ADD        A11,KY
)@@G@@1,I . @C@@@M          LOOP      A13,HIPGLP3 .  ->DO  PAGE   @ @@@M      KZ
)@@G@@    LOAD      A11,X7 .  @C@@@M          ADD       A11,1,I .      NEXT PALA
)@@G@@GE REF@C@@@M          LOOP      A15,HIPGLP .  -> NEXT PAGE  @C@@@M      LB
)@@G@@    JMP .                    ->RETURN     @[@@@M.     @[@@@M.     @[@@@MLC
)@@G@@.     @#@@@M.        EXTRAC   @[@@@M.     @[@@@M.     @#@@@MEXTRAC*  LLOLD
)@@G@@C .   @#@@@NEXPFLW*  LLOC .   @E@@@M         IF    01,OFF,DGOPT3 THEN,LJLE
)@@G@@MP . ->NO FLOWTRACE     @#@@@M         LOCAL .  @^@Q@M         STORE X1,LF
)@@G@@DEXSV @^@@@Q         STORE X1,DEXSV @ @Q@M         STORE X2,DEXSV+1     LG
)@@G@@@ @@@Q         STORE X2,DEXSV+1     @ @Q@M         STORE X3,DEXSV+2     LH
)@@G@@@ @@@Q         STORE X3,DEXSV+2     @ @Q@M         STORED A7,DEXSV+3    LI
)@@G@@@ @@@Q         STORED A7,DEXSV+3    @D@@@M         CVE   R11,R .        LJ
)@@G@@GET STATEMENT NUMBER    @B@@@N         LA    A3,EXTRCN .    > <T   NNN  LK
)@@G@@@B@@@N         LDSC  A3,18 .        <<T   NNNT>>@B@N@M         STORE A4,LL
)@@G@@DGOLIN .    PRINT IT    @B@@@N         STORED A3,DGOLIN .    PRINT IT   LM
)@@G@@@ @@@M         LOADA X1,DGOLIN .    @^@@@M         LINK  GOPRTL . @^@Q@MLN
)@@G@@         LOAD  X1,DEXSV @^@@@Q         LOAD  X1,DEXSV @ @Q@M         LOALO
)@@G@@D  X2,DEXSV+1     @ @@@Q         LOAD  X2,DEXSV+1     @ @Q@M         LOALP
)@@G@@D  X3,DEXSV+2     @ @@@Q         LOAD  X3,DEXSV+2     @ @Q@M         LOALQ
)@@G@@DD A7,DEXSV+3     @ @@@Q         LOADD A7,DEXSV+3     @#@@@M         JMPLR
)@@G@@ .    @#@@@NEXTRCN   +' ><T' .@B@@@N/.        FLOW PROC AND RETURN FROM LS
)@@G@@PROC  @[@@@N.     @B@@@NEXPFLN*  LOCAL .               PROC ENTRY @A@Q@NLT
)@@G@@         STORED A8,ARSVA8,X10 .     @ @@@Q         STORED A8,DEXWK2 .   LU
)@@G@@@D@@@N         LOAD  A8,R11 .        STMT NUMBER OF ENTRY   @C@@@N      LV
)@@G@@   LOAD  X5,ARDYNM,X10 . CALLING ACT REC  @D@@@N         LOAD  A9,ARSTMTLW
)@@G@@,X5 .  STMT NUMBER OF CALL    @D@O@N         LOAD  X5,ARESDP,X5 .  PROC LX
)@@G@@SD (ENTRY SD)     @D@@@O         LOAD  X5,ARESDP,X10 .  PROC SD (ENTRY SLY
)@@G@@D)    @B@@@N         EXERR ERPRFL,I,I LEVEL,5 'NONUM' @ @Q@N         LOALZ
)@@G@@DD A8,ARSVA8,X10 .@ @@@Q         LOADD A8,DEXWK2 .    @#@@@N         JMPMA
)@@G@@ .    @[@@@N.     @[@@@N.     @[@@@N.     @D@@@NEXRTFL*  LOCAL .        MB
)@@G@@        RETURN STMT TEACE     @A@@@N         STORED A8,ARSVA8,X10 .     MC
)@@G@@@^@Q@P         STORE X5,DEXSV @^@@@Q         STORE X5,DEXWK4@D@@@N      MD
)@@G@@   LOAD  A8,R11 .         RETURN STMT NUMBER    @D@@@N         LOAD  A9,ME
)@@G@@ARSTMT,X10 .  LOC. OF CALL STMT     @E@@@N         LOAD  X5,ARESDP,X10 .MF
)@@G@@  SD OF ROUTINE RETURNING TO  @B@@@N         EXERR ERRTFL,I,I LEVEL,5 'NMG
)@@G@@ONUM' @ @@@N         LOADD A8,ARSVA8,X10 .@^@Q@P         LOAD X5,DEXSV  MH
)@@G@@@^@@@Q         LOAD X5,DEXWK4 @#@@@N         JMP .    @C@@@M/ .      LABMI
)@@G@@EL INFORMATION -   GOTO HISTORY     @[@@@M.     @[@@@M.     @[@@@M.     MJ
)@@G@@@ @@@M.         GENERATE LABEL DATA @[@@@M.     @#@@@MHILBL     LOCAL . MK
)@@G@@@E@N@M          MOVE      DGOLIN,DHGOTO,2 .   PRINT 'GOTO HISTORY'@E@@@NML
)@@G@@          MOVE      DGOLIN,DHGOTO,3 .   PRINT 'GOTO HISTORY'@ @@@M      MM
)@@G@@    LOADA     X1,DGOLIN @ @@@M          LINK      GOPRTL .  @F@@@M      MN
)@@G@@    LOAD      X4,DHLINX .         SET PTR TO PRINT LINE     @D@@@M      MO
)@@G@@    SETL      A15,LDXGOS,I .      SET COUNT     @E@@@M          LOADA   MP
)@@G@@  A14,DEXGOS+LDXGOS-1 .  POINT TO LAST    @E@@@M          SUB       A14,MQ
)@@G@@DEXGOF.         SUBTRACT CURRENT    @A@@@M          LOADXM    X3,DEXGOF MR
)@@G@@.     @ @@@M          LOADXI    X3,1,I .  @#@@@MHILBLC    LABEL . @D@@@MMS
)@@G@@          LOAD      A13,0,*X3  .        GET LABEL     @E@@@M          IFMT
)@@G@@        A13,EQ,0,I THEN,HILBLA . ->NULL BRANCH  @D@N@M          CVE     MU
)@@G@@  A13,DHTEMP .        FIELDATA LABEL@D@@@N          CVE       A13,R .   MV
)@@G@@     FIELDATA LABEL     @C@N@M          LOAD      A8,DHTEMP+1 .       BBMW
)@@G@@BNNN  @C@N@M          SLB       A8,12 .             BNNN@@  @C@N@M      MX
)@@G@@    ADD       A8,' -',I .         BNNNB-  @C@N@M          SSC       A8,6MY
)@@G@@ .              -BNNNB  @ @N@M          STORE     A8,0,*X4 .@ @@@N      MZ
)@@G@@    STORE     A4,0,*X4 .@#@@@MHILBLA    LABEL . @F@@@M          LOOP    NA
)@@G@@  A14,HILBLB .        POINT TO HEAD OF BUFFER   @A@@@M          LOADXM  NB
)@@G@@  X3,DEXGOS+FU .  @E@@@M          LOAD      A14,999,I .         SET INFINC
)@@G@@NITE COUNT  @#@@@MHILBLB    LABEL . @E@@@M          LOOP      A15,HILBLCND
)@@G@@ .        LOOP FOR ALL LABELS @D@@@M          LOADA     X1,DGOLIN .     NE
)@@G@@    PRINT LINE    @ @@@M          LINK      GOPRTL .  @C@@@M          JMNF
)@@G@@P .                    ->RETURN     @[@@@M.     @[@@@M.     @[@@@M.     NG
)@@G@@@C@@@M/.        FLOW, NOFLOW AND SIGNAL STATEMENT     @#@@@MEXFLOW*   LLNH
)@@G@@OC .  @ @@@M         LOAD  A3,0,X11 .     @^@@@M         J   *$,A3 .    NI
)@@G@@@^@@@M         +EXFLW      . 1@ @@@M         +EXNFLW      . 2     @ @@@MNJ
)@@G@@         +EXSIGN       . 3    @C@@@N         +EXFLWP .       4     FLOW NK
)@@G@@TRACE ON    @C@@@N         +EXNFLWP .      5     NOFLOW TRACE     @C@@@MNL
)@@G@@EXFLW    LABEL .              FLOW STATEMENT    @ @@@M         SET   1,ONM
)@@G@@N,DGOPT3 .  @#@@@M         LJMP  1 .@#@@@MEXNFLW   LABEL .  @ @@@M      NN
)@@G@@   SET   1,OFF,DGOPT3 . @#@@@M         LJMP  1 .@ @@@MEXSIGN   STORE X11NO
)@@G@@,DEXSGN .   @D@@@M         EXERR EXERSIGN,I LEVEL,1 .  SIGNAL ERROR     NP
)@@G@@@ @@@M         LOAD  X11,DEXSGN .   @^@@@M         GOTO   1,X11 . @[@@@NNQ
)@@G@@.     @B@@@NEXFLWP   LABEL .               FLOW PWOC  @ @@@N         SETNR
)@@G@@   2,ON,DGOPT3 .  @#@@@N         LJMP 1 . @B@@@NEXNFLWP  LABEL .        NS
)@@G@@       NOFLOW PROC@ @@@N         SET   2,OFF,DGOPT3 . @#@@@N         LJMNT
)@@G@@P 1 . @#@@@M/.        DATA    @ @Q@MDHTEMP    EQU       DEXSVE  . @ @@@QNU
)@@G@@DHTEMP    EQU       DEXSVE  . @C@N@MDHLINE    SAC       +5,DGOLIN-(IN 63NV
)@@G@@,0,1,0)     @C@@@NDHLINE    SAC       +8,DGOLIN-(IN 63,0,1,0)     @C@@@MNW
)@@G@@DHLINX    SAC       +1,DGOLIN-(IN 63,0,1,0)     @ @@@MDHSCAN    SAC     NX
)@@G@@  +1,DRSTMT @^@@@MDHGOTO    SFW       0   @^@@@M          'GOTO HISTORY'NY
)@@G@@@^@@@MHHDR      SFW       0   @A@N@M          'EXECUTION HISTOGRAMS    'NZ
)@@G@@@E@@@N          'EXECUTION HISTOGRAMS    EACH * =     EXECUTIONS '@^@@@MOA
)@@G@@DKSTR1    SFW       0   @#@N@M          '      '@#@N@M          '*     'OB
)@@G@@@#@N@M          '**    '@#@N@M          '***   '@#@N@M          '****  'OC
)@@G@@@#@N@M          '***** '@^@@@N         '        '     @^@@@N         '* OD
)@@G@@      '     @^@@@N         '**      '     @^@@@N         '***     '     OE
)@@G@@@^@@@N         '****    '     @^@@@N         '*****   '     @^@@@N      OF
)@@G@@   '******  '     @^@@@N         '******* '     @#@@@NDKSTAR   SFW   0 .OG
)@@G@@@^@@@N         '********'     @ @N@MDKSTAR    SF        '******'  @#@@@MOH
)@@G@@          CEND    @A@@@MEXERSIGN  EQU   86 .    SIGNAL MSG  @F@@@NERPRFLOI
)@@G@@    EQU   1 .     <CALL PROC-NAME AT STMT-NO FROM STMT-NO>  @G@@@NERRTFLOJ
)@@G@@    EQU   2 .     <RETURN TO PROC-NAME AT STMT-NO FROM STMT-NO>   @#@@@MOK
)@@G@@          END     ___X1,DEXSV @ @Q@M         LOAD  X2,DEXSV+1     @ @@@QOL
)@@G@@         LOAD  X2,DEXSV+*[S@@@*SDFF*@C@@@K.   COPYRIGHT 1975 BY UNIVERSIOM
)@@G@@TY OF MARYLAND    @[@@@K.     @D@@@K.   QUESTIONS CONCERNING THIS SHOULDON
)@@G@@ BE DIRECTED TO:  @[@@@K.     @ @@@K.        MARVIN V. ZELKOWITZ  @B@@@KOO
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@K.        UNIVERSITY OF MOP
)@@G@@ARYLAND     @B@@@K.        COLLEGE PARK, MARYLAND 20742     @[@@@K.     OQ
)@@G@@@G@@@K.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMOR
)@@G@@S THEY@E@@@K.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    OS
)@@G@@@[@@@K.     @G@@@K.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS OT
)@@G@@REPRESENTED BY    @G@@@K.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OOU
)@@G@@R UNIVERSITY OF MARYLAND@E@@@K.   PL/1 COMPILER REMAINS ASSOCIATED WITH OV
)@@G@@THESE PROGRAMS.   @[@@@K.     @F@@@K.        2. MODIFICATIONS MAY BE MADOW
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@K.     @G@@@K.        (A) ANY RESULTIOX
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@K.        DESCRIBINOY
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@K.        IS OZ
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@K.     @G@@@K.     PA
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@KPB
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@KPC
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    PD
)@@G@@@C@@@K.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@K.     @F@@@KPE
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@KPF
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  PG
)@@G@@@[@@@K.     @F@@@K.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTPH
)@@G@@ED TO OTHER @G@@@K.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEPI
)@@G@@ARLY INDICATE     @G@@@K.        WHETHER THE PROGRAMS ARE EXACT COPIES OPJ
)@@G@@F THE UNIVERSITY OF     @E@@@K.        MARYLAND PLUM COMPILER OR ARE MODPK
)@@G@@IFICATIONS TO IT. @[@@@K.     @G@@@K.        3. THESE CONDITIONS ONLY APPL
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@K.   AND ARE NOT MEANT TO APPLYPM
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@K.   THE PURPOSE OF THESE CONDIPN
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@K.   EXPERIMENT WITH THE COMPILER AS PO
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@K.   IS NOT SOLD AND AS LONG AS IT ISPP
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@K.   FROM PLUM.    @[@@@K.     PQ
)@@G@@@[@@@K.     @[@@@K.     @[@@@K.     @[@@@K.     @[@@@K/.    @#@@@I      PR
)@@G@@   AXR$ .   @#@@@I         DCLRG .  @#@@@I         PLWORD   @#@@@I      PS
)@@G@@   PLAC     @#@@@I         PLSD     @]@@@I@ADD PLTVDS @#@@@IEXMT     CSEPT
)@@G@@CT 3 .@B@@@I/ .      EXECUTION DATA GATHERING ROUTINE @[@@@I.     @[@@@IPU
)@@G@@.     @[@@@I.     @^@@@IMETCAL*  PROC  *1,2 .   @B@@@I         LX,U  X5,PV
)@@G@@DSREXL+METCAL(1,1)-1 .  @^@@@I         J     METCMN . @#@@@I         ENDPW
)@@G@@ .    @^@@@IMETTBL*  PROC  *1 .     @B@@@IK        DO    METTBL(1,1) , MPX
)@@G@@ETCAL K     @#@@@I         END .    @[@@@I.     @[@@@I.     @[@@@I.     PY
)@@G@@@#@@@IEXMETR*  LLOC .   @B@@@I         METTBL DSRSTL . GENERATE TABLES  PZ
)@@G@@@#@@@IMETCMN   LABEL .  @^@@@I         LA,H2 A3,0,X5 .@^@@@I         ADDQA
)@@G@@   A3,1,I . @^@@@I         SA,H2 A3,0,X5 .@^@@@I         J     EXHIST . QB
)@@G@@@B@@@I/ .      PRINT OUT GATHERED STATISTICS    @[@@@I.     @[@@@I.     QC
)@@G@@@#@@@IEXSRDT*  LOCAL .  @E@@@I         LOAD  A12,0,I .           CLEAR CQD
)@@G@@OMPILE STMT COUNTS@F@@@I         LOAD  A15,0,I .           CLEAR EXECUTIQE
)@@G@@ON STMT COUNTS    @E@@@I         SETL  A13,DSRSTL,I .      NUMBER OF STMQF
)@@G@@TS TYPES    @C@@@I         LXM,U X5,DSRCGL .         START OF LIST@^@@@IQG
)@@G@@         LXI,U X5,1 .   @#@@@IMETLP1   LABEL .  @E@@@I         ADD   A12QH
)@@G@@,W1H2,X5 .       ADD STATIC STMT COUNT    @G@@@I         ADD   A15,W1H2+QI
)@@G@@DSRSTL,*X5 .                   EXECUTION COUNTS @E@@@I         LOOP  A13QJ
)@@G@@,METLP1 .        ->LOOP FOR ALL STMT TYPES@D@@@J         STORE A15,A15+1QK
)@@G@@ .          SAVE STMT COUNT   @B@J@I         MOVE  DGOLIN,METLN1,6 .   HQL
)@@G@@EADING@B@@@J         MOVE  DGOLIN,METLN1,8 .   HEADING@ @@@I         LOAQM
)@@G@@DA X1,DGOLIN .    @^@@@I         LOAD  X2,4,I . @E@@@I         LINK  GOPQN
)@@G@@RNT .            'STATIC LANG ANALYSIS'   @A@J@I         MOVE  DGOLIN,MEQO
)@@G@@TLN2,12 .   @A@@@J         MOVE  DGOLIN,METLN2,17 .   @ @@@I         LOAQP
)@@G@@D  A7,DSRCMT .    @^@@@I         CVE   A7,R .   @D@J@I         STORE A4,QQ
)@@G@@DGOLIN+2 .       NUMBER OF COMMENTS @D@@@J         STORE A4,DGOLIN+3 .  QR
)@@G@@     NUMBER OF COMMENTS @^@@@I         CVE   A12,R .  @D@J@I         STOQS
)@@G@@RE A4,DGOLIN+6 .       COMPILE STATEMENTS @D@@@J         STORE A4,DGOLINQT
)@@G@@+8 .       COMPILE STATEMENTS @^@@@I         CVE   A15,R .  @^@@@J      QU
)@@G@@   LDSC  A3,18 .  @E@J@I         STORE A4,DGOLIN+11 .      EXECUTION STAQV
)@@G@@TEMENTS     @E@@@J         STORED A3,DGOLIN+15 .      EXECUTION STATEMENQW
)@@G@@TS    @ @@@I         LOADA X1,DGOLIN .    @^@@@I         LOAD  X2,3,I . QX
)@@G@@@^@@@I         LINK  GOPRNT . @A@J@I         MOVE  DGOLIN+1,METLN3,5 .  QY
)@@G@@@A@@@J         MOVE  DGOLIN+2,METLN3,7 .  @ @@@I         LOADA X1,DGOLINQZ
)@@G@@ .    @^@@@I         LOAD  X2,2,I . @D@@@I         LINK  GOPRNT .       RA
)@@G@@     'COMPILE EXECUTION'@ @J@I         MOVE  DGOLIN,METLN4,6@ @@@J      RB
)@@G@@   MOVE  DGOLIN,METLN4,9@ @@@I         LOADA X1,DGOLIN .    @E@@@I      RC
)@@G@@   LINK  GOPRTL .            'NUMBER %     NUMBER %'  @E@@@I         SETRD
)@@G@@L  A13,DSRSTL,I .      PRINT OUT EACH COUNT     @ @@@I         LXM,U X5,RE
)@@G@@DSRCGL .    @D@@@I         LXM,U X6,METSTM .         FIELDATA NAMES     RF
)@@G@@@^@J@I         LXI,U X6,1 .   @^@@@J         LXI,U X6,2 .   @E@@@IMETLP2RG
)@@G@@   LABEL .                   EACH LINE BEGINS HERE    @C@@@I         SETRH
)@@G@@L  A11,2,I .           2 FIELDS/LINE@C@@@I         LOAD  X7,0,I .       RI
)@@G@@     0 THEN 3     @^@@@I         LOAD  X8,0,I . @E@J@I         LA    A3,RJ
)@@G@@0,*X6 .          GET FIELDATA STMT NAME   @E@@@J         LOADD  A3,0,*X6RK
)@@G@@ .          GET FIELDATA STMT NAME  @ @J@I         STORE A3,DGOLIN .    RL
)@@G@@@ @@@J         STORED A3,DGOLIN .   @#@@@IMETLP3   LABEL .  @^@@@I      RM
)@@G@@   LOAD  A3,X5 .  @E@@@I         ADD   A3,X8 .             POINT TO PROPRN
)@@G@@ER COUNT    @ @@@I         LOAD  A8,W1H2,A3 .   @^@@@I         CVE   A8,RO
)@@G@@R .   @^@@@J         LDSC  A3,18 .  @C@J@I         SA    A4,DGOLIN+1-(INRP
)@@G@@ 63,0,1,0),X7 .   @C@@@J         DS    A3,DGOLIN+2-(IN 63,0,1,0),X7 .   RQ
)@@G@@@C@@@I         MI,U  A8,1000   .         GET PERCENT  @ @@@I         DI RR
)@@G@@   A8,A12,X7 .    @^@@@I         CVE   A8,R .   @C@J@I         SLBD  A3,RS
)@@G@@30 .             XXXXXX X00000@C@@@J         SLBD  A3,27 .             XRT
)@@G@@XXXXX X00000@C@J@I         SLB   A3,6 .              XXXXX0 X00000@C@@@JRU
)@@G@@         SLB   A3,9 .              XXXXX0 X00000@C@@@I         ADD   A3,RV
)@@G@@'.',I .          XXXXX. X00000@B@J@I         SRBD  A3,30 .             XRW
)@@G@@XXX.X @B@@@J         SRBD  A3,27 .             XXXX.X @C@J@I         SA RX
)@@G@@   A4,DGOLIN+2-(IN 63,0,1,0),X7 .   @C@@@J         SA    A4,DGOLIN+4-(INRY
)@@G@@ 63,0,1,0),X7 .   @ @@@I         ADD   X8,DSRSTL,I .  @^@J@I         ADDRZ
)@@G@@   X7,3,I . @^@@@J         ADD   X7,4,I . @ @@@I         LOOP  A11,METLPSA
)@@G@@3 .   @ @@@I         LOADA X1,DGOLIN .    @^@@@I         LINK  GOPRTL . SB
)@@G@@@^@@@I         ADD   X5,1,I . @ @@@I         LOOP  A13,METLP2 .   @#@@@ISC
)@@G@@         JMP .    @^@@@I/ .      DATA STORAGE   @#@@@IMETLN1   SFW   0 .SD
)@@G@@@C@J@I         'STATIC/DYNAMIC STATEMENT COUNTS     ' @C@@@J         'STSE
)@@G@@ATIC/DYNAMIC STATEMENT COUNTS '     @#@@@IMETLN2   SFW   0 .@H@J@I '  COSF
)@@G@@MMENTS =XXXXXX      STATEMENTS =XXXXXX   EXECUTED STATEMENTS =XXXXXX'   SG
)@@G@@@G@@@J '  COMMENTS =XXXX    STATEMENTS =XXXX   EXECUTED STATEMENTS =XXXXSH
)@@G@@  '   @#@@@IMETLN3   SFW   0 .@B@J@I         'COMPILATION       EXECUTIOSI
)@@G@@N   ' @B@@@J        ' COMPILATION     EXECUTION  '    @#@@@IMETLN4   SFWSJ
)@@G@@   0 .@C@J@I         'TYPE   COUNT    %        COUNT    % ' @C@@@J      SK
)@@G@@   'TYPE     COUNT     %     COUNT     %' @#@@@IMETSTM   LABEL .  @#@J@ISL
)@@G@@         'BEGIN ' @^@@@J         'BEGIN   '     @#@J@I         'CALL  ' SM
)@@G@@@^@@@J         'CALL    '     @#@J@I         'CLOSE ' @^@@@J         'CLSN
)@@G@@OSE   '     @#@J@I         'DCL   ' @^@@@J         'DECLARE '     @#@J@ISO
)@@G@@         'END   ' @^@@@J         'END     '     @#@J@I         'ENTRY ' SP
)@@G@@@^@@@J         'ENTRY   '     @#@J@I         'FORMAT' @^@@@J         'FOSQ
)@@G@@RMAT  '     @#@J@I         'GET   ' @^@@@J         'GET     '     @#@J@ISR
)@@G@@         'GOTO  ' @^@@@J         'GOTO    '     @#@J@I         'IF    ' SS
)@@G@@@^@@@J         'IF      '     @#@J@I         'OPEN  ' @^@@@J         'OPST
)@@G@@EN    '     @#@J@I         'PROC  ' @^@@@J         'PROC    '     @#@J@ISU
)@@G@@         'PUT   ' @^@@@J         'PUT     '     @#@J@I         'RETRN ' SV
)@@G@@@^@@@J         'RETURN  '     @#@J@I         'STOP  ' @^@@@J         'STSW
)@@G@@OP    '     @#@J@I         'NULL  ' @^@@@J         'NULL    '     @#@J@ISX
)@@G@@         'DO    ' @^@@@J         'DO      '     @#@J@I         'DO WHL' SY
)@@G@@@^@@@J         'DO WHILE'     @#@J@I         'DO ITR' @^@@@J         'DOSZ
)@@G@@ ITER '     @#@J@I         'DO LTD' @^@@@J         'DO CASE '     @#@J@ITA
)@@G@@         'ASGN  ' @^@@@J         'ASG GEN '     @#@J@I         'A=B   ' TB
)@@G@@@^@@@J         'ASG 0 OP'     @^@J@I         'A=B+C     '   @^@@@J      TC
)@@G@@   'ASG 1 OP'     @#@J@I         '-     ' @^@@@J         '-       '     TD
)@@G@@@#@J@I         '-     ' @^@M@J         '-       '     @^@@@M         'FLTE
)@@G@@OW    '     @#@J@I         'EXIT  ' @^@@@J         'EXIT    '     @#@J@ITF
)@@G@@         'FLOW  ' @^@M@J         'FLOW    '     @^@@@M         'ON      TG
)@@G@@'     @#@J@I         'NOFLOW' @^@M@J         'NOFLOW  '     @^@@@M      TH
)@@G@@   'REVERT  '     @#@J@I         'SIGNAL' @^@@@J         'SIGNAL  '     TI
)@@G@@@]@J@I 'DLETED'   @^@@@J         'DELETED '     @^@@@J         'ALLOCATETJ
)@@G@@'     @^@@@J         'FREE    '     @^@@@J         'LEAVE   '     @^@L@JTK
)@@G@@         '        '     @^@@@L         'READ    '     @^@L@J         'DOTL
)@@G@@ RPEAT'     @^@@@L         'WRITE   '     @^@@@M         '-       '     TM
)@@G@@@^@@@M         'SYSTEM  '     @#@@@I         END .    ___.       NUMBER TN
)@@G@@OF COMMENTS @D@@@J         STORE A4,DGOLIN+3 .       NUMBER OF COMMENTS TO
)@@G@@@^@@@I         CVE   A12*[S@@@*SDFF*@C@@@#.   COPYRIGHT 1975 BY UNIVERSITP
)@@G@@TY OF MARYLAND    @[@@@#.     @D@@@#.   QUESTIONS CONCERNING THIS SHOULDTQ
)@@G@@ BE DIRECTED TO:  @[@@@#.     @ @@@#.        MARVIN V. ZELKOWITZ  @B@@@#TR
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@#.        UNIVERSITY OF MTS
)@@G@@ARYLAND     @B@@@#.        COLLEGE PARK, MARYLAND 20742     @[@@@#.     TT
)@@G@@@G@@@#.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMTU
)@@G@@S THEY@E@@@#.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    TV
)@@G@@@[@@@#.     @G@@@#.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS TW
)@@G@@REPRESENTED BY    @G@@@#.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OTX
)@@G@@R UNIVERSITY OF MARYLAND@E@@@#.   PL/1 COMPILER REMAINS ASSOCIATED WITH TY
)@@G@@THESE PROGRAMS.   @[@@@#.     @F@@@#.        2. MODIFICATIONS MAY BE MADTZ
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@#.     @G@@@#.        (A) ANY RESULTIUA
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@#.        DESCRIBINUB
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@#.        IS UC
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@#.     @G@@@#.     UD
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@#UE
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@#UF
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    UG
)@@G@@@C@@@#.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@#.     @F@@@#UH
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@#UI
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  UJ
)@@G@@@[@@@#.     @F@@@#.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTUK
)@@G@@ED TO OTHER @G@@@#.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEUL
)@@G@@ARLY INDICATE     @G@@@#.        WHETHER THE PROGRAMS ARE EXACT COPIES OUM
)@@G@@F THE UNIVERSITY OF     @E@@@#.        MARYLAND PLUM COMPILER OR ARE MODUN
)@@G@@IFICATIONS TO IT. @[@@@#.     @G@@@#.        3. THESE CONDITIONS ONLY APUO
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@#.   AND ARE NOT MEANT TO APPLYUP
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@#.   THE PURPOSE OF THESE CONDIUQ
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@#.   EXPERIMENT WITH THE COMPILER AS UR
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@#.   IS NOT SOLD AND AS LONG AS IT ISUS
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@#.   FROM PLUM.    @[@@@#.     UT
)@@G@@@[@@@#.     @[@@@#.     @[@@@#.     @[@@@#.     @[@@@#/.    @#@@@@      UU
)@@G@@   AXR$     @#@@@@         DCLRG    @#@@@@         PLAR     @#@@@@      UV
)@@G@@   PLWORD   @#@[@@         PLSD     @#@@@[.        PLSD     @#@@@@EXDI  UW
)@@G@@   CSECT 3 .@^@@@@         USING AREC,X10 @[@@@@.     @[@@@@.     @[@@@@UX
)@@G@@.     @^@@@@.        A3=DV OF ARRAY @ @@@@.        A2=DIMENSION NUMBER  UY
)@@G@@@ @@@@.        X11 -> MAX DIMENSION @^@@@@.       RETURN TO 1,X11 @[@@@@UZ
)@@G@@.     @[@@@@.     @[@@@@.     @[@@@@.     @^@@@@.         DIMENSION     VA
)@@G@@@[@@@@.     @#@@@@BFDIMT*   LOCAL . @C@@@@          LOAD  X5,X11 .      VB
)@@G@@       SAVE RETURN@D@@@@         LINK   BFDCHK .             CHECK ARGUMVC
)@@G@@ENT   @D@@@@          LOAD  A3,W1H1+2,A3 .       GET EXTENT-1     @^@@@@VD
)@@G@@          ADD   A3,1,I .@^@@@@          JMP   1 .     @[@@@@.     @[@@@@VE
)@@G@@.     @[@@@@.     @[@@@@.     @#@@@@.         LBOUND  @[@@@@.     @#@@@@VF
)@@G@@BFLBND*   LOCAL . @^@@@@          LOAD  X5,X11 .@^@@@@          LINK  BFVG
)@@G@@DCHK  @A@@@@          LOAD  A3,W1XH2+2,A3 .     @^@@@@          JMP   1 VH
)@@G@@.     @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@.     @#@@@@VI
)@@G@@.         HBOUND  @[@@@@.     @#@@@@BFHBND*   LOCAL . @^@@@@          LOVJ
)@@G@@AD  X5,X11 .@^@@@@         LINK   BFDCHK .@C@@@]         LOAD    A2,A3 .VK
)@@G@@           POINT TO DV  @ @]@@          LOAD  A3,W1XH2+2,A3 @D@@@]      VL
)@@G@@    LOAD  A3,W1XH2+2,A2 .    GET LOWER BOUND    @ @]@@          ADD   A3VM
)@@G@@,W1H1,A3 .  @D@@@]          ADD   A3,W1H1+2,A2 .     ADD IN EXTENT - 1  VN
)@@G@@@^@@@@          JMP   1 .     @[@@@@.     @[@@@@.     @[@@@@.     @B@@@@VO
)@@G@@.         SUB TO CHHEK VALIDITY OF ARG    @[@@@@.     @[@@@@.     @#@@@@VP
)@@G@@BFDCHK    LLOC .  @ @@@@          USING WORD,X5 .     @C@@@@          IFVQ
)@@G@@    A2,GT,W1 THEN,BFDC01 . -> TOOBIG@D@@@@         IF     A2,LT,1,I THENVR
)@@G@@,BFDC01 . -> TOOSMALL   @C@@@@          SUB   A2,1,I .           DIM NUMVS
)@@G@@BER-1 @C@@@@          SLB   A2,1 .            2*(DIM-1)     @^@[@@      VT
)@@G@@     ADD  A3,A2 . @E@@@[          ADD   A3,W1U+1,A2 .      POINT TO PROPVU
)@@G@@ER PAIR     @#@@@@          LJMP .  @[@@@@.     @C@@@@BFDC01    LOCAL . VV
)@@G@@              INVALID ARG.    @ @@@@          STORED A7,ARSVA7 .  @ @@@@VW
)@@G@@         STORE  A9,ARSVA9 .   @^@@@@          LOAD  A7,A3 . @^@@@@      VX
)@@G@@    LOAD  A8,A2 . @ @@@@          LOAD   A9,W1,X5 .   @ @^@@          EXVY
)@@G@@ERR EREXDM LEVEL,1@^@@@^          ONER EREXDM,1 @ @@@@         LOAD   A9VZ
)@@G@@,ARSVA9 .   @^@@@@          LOAD  A3,A7 . @ @@@@          LOADD A7,ARSVAWA
)@@G@@7     @#@@@@          JMP .   @[@@@@.     @^@@@@EREXDM   EQU   99 .     WB
)@@G@@@]@@@@         END___OT BE ASSIGNED BECAUSE:    *[S@@@*SDFF*@C@@@ .   COWC
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@ .     @D@@@ .   QUESTIONWD
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@ .     @ @@@ .        MARWE
)@@G@@VIN V. ZELKOWITZ  @B@@@ .        DEPARTMENT OF COMPUTER SCIENCE   @A@@@ WF
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@ .        COLLEGE PARK, MARYLANWG
)@@G@@D 20742     @[@@@ .     @G@@@ .        PERMISSION TO USE THESE LISTINGS WH
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@ .   REPRESENT IS GRANTED UNDER THE FWI
)@@G@@OLLOWING CONDITIONS:    @[@@@ .     @G@@@ .        1. UNLIMITED USE MAY WJ
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@ .   THESE LISTINGS PROVIWK
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@ .   PL/1 COMPILER WL
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@ .     @F@@@ .        2. WM
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@ .     @G@@@ WN
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   WO
)@@G@@@G@@@ .        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRWP
)@@G@@OGRAM @E@@@ .        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  WQ
)@@G@@@[@@@ .     @G@@@ .        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAWR
)@@G@@L CORRECTIONS     @F@@@ .        OF ERRORS IN THE SOURCE PROGRAMS, SHALLWS
)@@G@@ BE REPORTED AND  @G@@@ .        A BRIEF DESCRIPTION OF THE FEATURE ADDEWT
)@@G@@D SHALL BE SUBMITTED    @C@@@ .        TO THE UNIVERSITY OF MARYLAND, ANWU
)@@G@@D     @[@@@ .     @F@@@ .        (C) NO PROGRAMS DERIVED FROM THESE LISTWV
)@@G@@INGS SHALL BE SOLD@G@@@ .        WITHOUT WRITTEN APPROVAL FROM THE UNIVEWW
)@@G@@RSITY OF MARYLAND, AND  @[@@@ .     @F@@@ .        (D) COPIES OF THESE PWX
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@ .        LOCATIONS PROVIDED THWY
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@ .        WHETHER THE PROWZ
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@ .        MARYLAND XA
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@ .     @G@@@ .        3. XB
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@ .   ANXC
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@ .   THXD
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@ .   EXPERIMEXE
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@ .   IS NOT SXF
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@ .   FRXG
)@@G@@OM PLUM.    @[@@@ .     @[@@@ .     @[@@@ .     @[@@@ .     @[@@@ .     XH
)@@G@@@[@@@ /.    @#@@@]         AXR$     @#@@@]         DCLRG    @#@@@]      XI
)@@G@@   UNLIST   @]@@@]@ADD PLTVDS @]@@@]@ADD EXCDS  @#@@@]         LIST     XJ
)@@G@@@#@@@]         PLWORD   @#@@@]         PLAR     @#@@@]         PLSD     XK
)@@G@@@^@#@]         USING ARDVDT,A2@^@@@#         USING ARDVDT,X5@ @@@]      XL
)@@G@@   USING AREC,X10 .     @#@@@]RTDT     CSECT 3  @#@@@]/ .      TIME BIF XM
)@@G@@@#@^@#BFTIME*    LOCAL .@#@@@^BFDATE*    LOCAL .@ @@@#           STORE XXN
)@@G@@1,DEXSVE .  @C@@@#           LINK  ZTIME .       GET TIME AND DATE@D@@@#XO
)@@G@@           LINK  BFTMAL .      GET DV IN ACT. REC.    @C@@@#           LXP
)@@G@@OADD    A3,W1,X1 .     MM/D D/YY    @A@@@#           STORE A4,W1H1+1,X5 XQ
)@@G@@.     @B@@@#           SRBD  A3,27 .       M M/DD     @ @@@#           SXR
)@@G@@TORE A4,W1H2,X5 . @A@@@#           SRBD  A3,27 .       MM   @ @@@#      XS
)@@G@@     STORE A4,W1H1,X5 . @ @@@#           LOAD  X1,DEXSVE .  @#@@@#      XT
)@@G@@     JMP .  @[@@@#.     @[@@@#.     @#@^@#BFDATE*    LOCAL .@#@@@^BFTIMEXU
)@@G@@*    LOCAL .@ @@@#           STORE X1,DEXSVE .  @^@@@#           LINK  ZXV
)@@G@@TIME .@ @@@#           LINK  BFTMAL .     @A@@@#           LOAD  A3,W1+2XW
)@@G@@,X1 .     HH@ @@@#           STORE A3,W1H1,X5 . @C@@@#           LOADD  XX
)@@G@@  A3,W1+3,X1 .      :MM: SSXX @C@@@#           SRBD  A3,18 .           :XY
)@@G@@M    M:SS   @A@@@#           STORE A4,W1H1+1,X5 .     @C@@@#           SXZ
)@@G@@RBD  A3,27                    :MM   @ @@@#           STORE A4,W1H2,X5 . YA
)@@G@@@ @@@#           LOAD  X1,DEXSVE .  @#@@@#           JMP .  @[@@@#.     YB
)@@G@@@[@@@#.     @G@A@#BFTMAL     LLOC .                   ALLOCATE STACK SPAYC
)@@G@@CE FOR 6 CHAR     @G@@@ABFTMAL     LOCAL .                   ALLOCATE STYD
)@@G@@ACK SPACE FOR 6 CHAR    @ @@@#           LOAD  X5,AREPTR .  @ @A@#      YE
)@@G@@     LOADA A2,4,X5 .    @^@@@A         STKCHK  4,I .  @E@A@#           IYF
)@@G@@F    A2,LE,ADPEND THEN,BFTMX1 .  ->OK SPACE     @^@A@#            LOCAL YG
)@@G@@.     @ @A@#           LINK  WROVFL .     @^@A@#           UNSTK X11 .  YH
)@@G@@@#@A@#BFTMX1     LABEL .@E@@@#           STORE X5,2,X5 .            DV PYI
)@@G@@OINTS TO STRING   @D@A@#           STORE A2,AREPTR .          NEW TOP OFYJ
)@@G@@ STACK@C@@@#           MOVE  ARDVSZ+2,EXTIML .     +6,6     @#@A@#      YK
)@@G@@     LJMP . @#@@@A           JMP .  @^@@@#EXTIML     SFW   0 .    @#@@@#YL
)@@G@@           +6,6   @#@@@#           CEND . @#@#@]BFTIME*  LLOC .   @ @#@]YM
)@@G@@         SA    A0,DRTSA0 .    @^@#@]         ER    DATE$    @^@#@]      YN
)@@G@@   LOAD  A3,A1 .  @^@#@]         GOTO  EXTIMG . @[@#@].     @[@#@].     YO
)@@G@@@[@#@].     @[@#@].     @[@#@].     @#@#@]BFDATE*  LLOC .   @ @#@]      YP
)@@G@@   SA    A0,DRTSA0 .    @^@#@]         ER    DATE$    @^@#@]         LOAYQ
)@@G@@D  A3,A0 .  @^@#@]         LSSC  A3,24 .  @#@#@]EXTIMG   LABEL .  @ @#@]YR
)@@G@@        LA       A0,DRTSA0 .  @ @#@]         LOAD  A1,AREPTR .    @^@#@]YS
)@@G@@         LOADA A2,3,A1 .@B@#@]         IF    A2,LE,ADPEND THEN,EXTIMH   YT
)@@G@@@#@#@]         LOCAL .  @^@#@]         LINK  WROVFL   @#@#@]         UNSYU
)@@G@@TK X11@#@#@]EXTIMH   LABEL .  @^@#@]         STORE A2,AREPTR@ @#@]      YV
)@@G@@   STORE A3,W1,A1 .     @^@#@]         STORE A1,0,A2 .@ @#@]         MOVYW
)@@G@@E  ARDVSZ,EXTIML .@#@#@]         LJMP .   @#@#@]EXTIML   SFW   0 .@#@#@]YX
)@@G@@         +6,6     @#@@@]/ .      CLOCK BIF@#@@@]BFCLCK*  LOCAL .  @ @@@]YY
)@@G@@         DS    A7,DRTARG1 .   @ @@@]         SX    X1,DRTARG2 .   @ @@@]YZ
)@@G@@         LOAD  A7,DGOCTM .    @^@@@]         LINK  ZTINT .  @ @@@]      ZA
)@@G@@   ADD   A7,DEXCLK .    @^@@@]         LOAD  A3,A7 .  @#@@@]BFCLRT   LABZB
)@@G@@EL .  @ @@@]         DL    A7,DRTARG1     @ @@@]         LX    X1,DRTARGZC
)@@G@@2     @#@@@]         JMP .    @[@@@].     @[@@@].     @[@@@].     @[@@@]ZD
)@@G@@.     @ @@@].        CLOCK PSEUDO VARIABLE@[@@@].     @#@@@]BFCLPV*  LOCZE
)@@G@@AL    @ @@@]         DS    A7,DRTARG1     @ @@@]         SX    X1,DRTARGZF
)@@G@@2     @ @@@]         STORE A3,DEXCLK .    @^@@@]         LOAD  A7,0,I . ZG
)@@G@@@^@@@]         LINK  ZTINT .  @ @@@]         STORE X1,DGOCTM .    @^@@@]ZH
)@@G@@         GOTO  BFCLRT . @#@@@]         END .    ___AINS ASSOCIATED WITH ZI
)@@G@@THESE PROGRAMS.   @[@@@ .     @F@@@ .        2. MODIFICATIONS MAY BE MADZJ
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@ .     @G@@@ .        (A) ANY RESULTIZK
)@@G@@*[S@@@*SDFF*@C@@@].   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@]ZL
)@@G@@.     @D@@@].   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@]ZM
)@@G@@.     @ @@@].        MARVIN V. ZELKOWITZ  @B@@@].        DEPARTMENT OF CZN
)@@G@@OMPUTER SCIENCE   @A@@@].        UNIVERSITY OF MARYLAND     @B@@@].     ZO
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@].     @G@@@].        PERMISSIOZP
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@].   REPRESENZQ
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@].     @G@@@].     ZR
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@]ZS
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDZT
)@@G@@@E@@@].   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@]ZU
)@@G@@.     @F@@@].        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDZV
)@@G@@ED:   @[@@@].     @G@@@].        (A) ANY RESULTING PROGRAM, OR REPORT, PZW
)@@G@@APER OR DOCUMENTATION   @G@@@].        DESCRIBING SUCH PROGRAM WILL CLEAZX
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@].        IS A DIALECT OF PLUM OR IS ZY
)@@G@@DERIVED FROM PLUM, AND  @[@@@].     @G@@@].        (B) ALL SUCH MODIFICAZZ
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@].        OF ERRORS IN THAA
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@].        A BRIEF DESCRIPAB
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@].        TO THE UNAC
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@].     @F@@@].        (C) NO PROGRAMSAD
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@].        WITHOUT WRITTENAE
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@].     @F@@@].     AF
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@].     AG
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@]AH
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     AI
)@@G@@@E@@@].        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@]AJ
)@@G@@.     @G@@@].        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERAK
)@@G@@ ITSELF,    @F@@@].   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN AL
)@@G@@USING PLUM. @E@@@].   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USAM
)@@G@@ER TO @F@@@].   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRAN
)@@G@@ODUCT @G@@@].   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT AO
)@@G@@DEVELOPED   @#@@@].   FROM PLUM.    @[@@@].     @[@@@].     @[@@@].     AP
)@@G@@@[@@@].     @[@@@].     @[@@@]/.    @#@@@@         AXR$ .   @B@@@@      AQ
)@@G@@   DCLRG .                   FOR PIT@#@@@[.          UNLIST @^@[@@.     AR
)@@G@@     @ADD PLTVDS  @#@@@[. @ADD,P PLTVDS   @]@@@@. @ADD EXCDS@#@@@[.     AS
)@@G@@     LIST . @^@@@@RAND     CSECT   3 .    @E@@@@ONEHAL   +02000400000000AT
)@@G@@00000000000 . FLOATING ONE HALF     @D@@@@BIGCON   +011060471625 .      AU
)@@G@@     BIG (ASSUMED) PRIME@D@@@@MASK     +0377777777777 .          MASK TOAV
)@@G@@ MASK POS   @E@@@@EXRAND   EQU     53 .              ARG FOR RAND OUT OFAW
)@@G@@ RANGE@B@@@@.                                  .5 USED@[@@@@.     @E@@@@AX
)@@G@@BFRAND*  LLOC .                    ENTRY POINT FOR RAND     @ @[@@      AY
)@@G@@   DL      A3,*0,X11 .  @C@@@@         LOADD   A2,A3 .           GET SEEAZ
)@@G@@D     @D@@@@         IF      A2,GT,0,I THEN,BFRAN1 . IS THIS POS? @^@@@@BA
)@@G@@         LOCAL . NOPE   @C@[@@         EXERR   EXRAND,LEVEL,1 .  WRONG VBB
)@@G@@ALUE  @C@#@[         EXERR   EXRAND  LEVEL,1 .  WRONG VALUE @C@@@#      BC
)@@G@@   ONER    EXRAND,1 .        WRONG VALUE  @D@@@@         UNSTK   X11 .  BD
)@@G@@           GET RETURN ADDRESS @C@@@@         LOADD   A2,ONEHAL .       ABE
)@@G@@SSUME .5    @E@@@@BFRAN1   LABEL .                   MERGE WITH VALID SEBF
)@@G@@ED    @E@@@@         OR,U A3,1 .               MAKE BOTTOM HALF ODD     BG
)@@G@@@C@@@@         LOAD    A3,A4 .           GET ODD HALF @ @@@@         MPYBH
)@@G@@S    A2,BIGCON .  @D@@@@         MF      A3,BIGCON .       RANDOMIZE NUMBI
)@@G@@BER   @D@@@@         ADD     A2,A3 .           ADD HALFS TO GETHER@C@@@@BJ
)@@G@@         SSL     A4,1 .            SHIFT ONE BIT@C@@@@         AND     ABK
)@@G@@2,MASK .         MAKE POS     @C@@@@         LOAD    A2,01765,I .      GBL
)@@G@@ET EXPONENT @F@@@@         DLCF    A2,A3 .           MAKE INTO A BIG SMABM
)@@G@@LL NUMBER   @D@[@@         DS      A3,*0,X11 .       SAVE FOR FORTRAN   BN
)@@G@@@B@[@@         LJMP    2 .SKIP TWO ON RETURN    @F@@@[         LJMP .   BO
)@@G@@                 RETURN WITH NUMBER IN A3-A4    @#@@@[         CEND .   BP
)@@G@@@#@@@@         END .    ___ . ED$$RECOVERY@CAT       005223K*ED$$A.,F4/2BQ
)@@G@@//4000 .    @USE  ED$$A,*[S@@@*SDFF*@C@@@S.   COPYRIGHT 1975 BY UNIVERSIBR
)@@G@@TY OF MARYLAND    @[@@@S.     @D@@@S.   QUESTIONS CONCERNING THIS SHOULDBS
)@@G@@ BE DIRECTED TO:  @[@@@S.     @ @@@S.        MARVIN V. ZELKOWITZ  @B@@@SBT
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@S.        UNIVERSITY OF MBU
)@@G@@ARYLAND     @B@@@S.        COLLEGE PARK, MARYLAND 20742     @[@@@S.     BV
)@@G@@@G@@@S.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMBW
)@@G@@S THEY@E@@@S.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    BX
)@@G@@@[@@@S.     @G@@@S.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS BY
)@@G@@REPRESENTED BY    @G@@@S.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OBZ
)@@G@@R UNIVERSITY OF MARYLAND@E@@@S.   PL/1 COMPILER REMAINS ASSOCIATED WITH CA
)@@G@@THESE PROGRAMS.   @[@@@S.     @F@@@S.        2. MODIFICATIONS MAY BE MADCB
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@S.     @G@@@S.        (A) ANY RESULTICC
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@S.        DESCRIBINCD
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@S.        IS CE
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@S.     @G@@@S.     CF
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@SCG
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@SCH
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    CI
)@@G@@@C@@@S.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@S.     @F@@@SCJ
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@SCK
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  CL
)@@G@@@[@@@S.     @F@@@S.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTCM
)@@G@@ED TO OTHER @G@@@S.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLECN
)@@G@@ARLY INDICATE     @G@@@S.        WHETHER THE PROGRAMS ARE EXACT COPIES OCO
)@@G@@F THE UNIVERSITY OF     @E@@@S.        MARYLAND PLUM COMPILER OR ARE MODCP
)@@G@@IFICATIONS TO IT. @[@@@S.     @G@@@S.        3. THESE CONDITIONS ONLY APCQ
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@S.   AND ARE NOT MEANT TO APPLYCR
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@S.   THE PURPOSE OF THESE CONDICS
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@S.   EXPERIMENT WITH THE COMPILER AS CT
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@S.   IS NOT SOLD AND AS LONG AS IT ISCU
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@S.   FROM PLUM.    @[@@@S.     CV
)@@G@@@[@@@S.     @[@@@S.     @[@@@S.     @[@@@S.     @[@@@S/.    @#@@@Q      CW
)@@G@@   AXR$  .  @#@@@Q         DCLRG .  @#@@@Q         UNLIST . @#@@@Q@ADD,PCX
)@@G@@ PLTVDS     @#@@@Q         LIST .   @#@@@Q         CEND  .  @#@@@Q      CY
)@@G@@   PLWORD . @#@@@Q         PLIOCB . @#@@@Q         PLSD  .  @#@@@Q      CZ
)@@G@@   PLAR  .  @#@@@Q         PLIOCB . @F@@@QEXAI     CSECT 3 .            DA
)@@G@@     COUNT LINENO REMOTE FORMAT     @ @@@Q         USING AREC,X10 .     DB
)@@G@@@^@T@Q/.       ENDFILE BIF    @[@T@Q.     @[@T@Q.     @#@T@QBFENDT*  LOCDC
)@@G@@AL .  @ @T@Q         STORE X3,ARSAX3 .    @ @T@Q         USING SDSECT,A3DD
)@@G@@ .    @ @T@Q         LOADA X3,SDIOFN .    @C@T@Q         WRIOCB .       DE
)@@G@@           GET IOCB     @^@T@Q         USING IOCB,X3 .@C@T@R         STODF
)@@G@@RED  A5,ARSVA5 .       SAVE REGS    @ @T@Q         LOAD  F,IOCBF1 .     DG
)@@G@@@D@T@Q         IF    IOCBOP,OFF THEN,EXIOF1 .  -> NOT OPEN  @D@T@Q      DH
)@@G@@   IF    IOCBIN,OFF THEN,EXIOF2 . -> OUTPUT     @C@R@Q         LOAD  A3,DI
)@@G@@060,I .          ASSUME FALSE @C@T@R         LOAD  A3,'0',I .          ADJ
)@@G@@SSUME FALSE @E@T@Q         IF    IOCBEF,OFF THEN,BFENF1 . -> RETURN FALSDK
)@@G@@E     @C@R@Q         LOAD  A3,061,I .          RETURN TRUE  @C@T@R      DL
)@@G@@   LOAD  A3,'1',I .          RETURN TRUE  @#@T@QBFENF1   LABEL .  @ @T@QDM
)@@G@@         LOAD  X3,ARSAX3 .    @C@T@R         LOADD   A5,ARSVA5 .       RDN
)@@G@@ESET REGS   @^@T@Q         UNSTK X11 .    @D@T@Q         GOTO  EXA3DV . DO
)@@G@@-> CONVERT TO TEMP STRING     @#@T@QEXIOF1   LABEL .  @ @T@Q         STODP
)@@G@@RE X3,ARSAX3 .    @E@T@Q         LOAD  X3,IOCCBP .           RESET IOCB DQ
)@@G@@TO EMPTY    @^@T@Q         USING WORD,X3  @ @T@Q         MOVE  W1,KBLANKDR
)@@G@@,2 .  @ @T@Q         LOAD  X3,ARSAX3 .    @#@T@QEXIOF2   LABEL .  @ @T@QDS
)@@G@@         EXERR ERENDF LEVEL,0 @ @R@Q         LOAD  A3,061,I .     @ @T@RDT
)@@G@@         LOAD  A3,'1',I .     @A@T@Q         GOTO  BFENF1 . -> RETURN   DU
)@@G@@@[@@@Q/.    @^@@@Q.        LINENO BIF     @[@@@Q.     @#@@@QBFLINO*  LOCDV
)@@G@@AL .  @A@@@Q         LOAD  X5,A3 .      SAVE SD @ @@@Q         STORE X3,DW
)@@G@@ARSAX3 .    @ @@@Q         USING SDSECT,A3 .    @C@@@Q         LOADA X3,DX
)@@G@@SDIOFN .         GET IOCB     @#@@@Q         WRIOCB . @^@@@Q         USIDY
)@@G@@NG IOCB,X3 .@C@@@R         STORED  A5,ARSVA5 .       SAVE REGS    @C@@@QDZ
)@@G@@         LOAD  F,IOCBF1.           CHECK STATUS @D@@@Q         IF    IOCEA
)@@G@@BOP,OFF THEN,EXIOL1 . -> CLOSED FILE@E@@@Q         IF    IOCBPT,OFF THENEB
)@@G@@,EXIOL3 . -> NOT PRINT FILE   @C@@@Q         LOAD  A3,IOCBLN .         GEC
)@@G@@ET LINE NO  @^@@@Q         ADD   A3,1,I . @E@@@Q         LOAD  X3,ARSAX3ED
)@@G@@ .         RESET X3 FROM CALLER     @D@@@R         LOADD   A5,ARSVA5 .  EE
)@@G@@     GET SAVED REGS     @C@@@Q         JMP .                     ->RETUREF
)@@G@@N     @#@@@QEXIOL1   LABEL .  @ @@@Q         STORE X1,ARSAX1 .    @C@@@QEG
)@@G@@         LOADA X1,EXIOLM .         GET BIF NAME @B@@@Q         GOTO  EXIEH
)@@G@@OC2 .            MSG    @#@@@QEXIOL3   LABEL .  @ @@@Q         STORE X1,EI
)@@G@@ARSAX1 .    @ @@@Q         LOADA X1,EXIOLM .    @#@@@QEXIOL5   LABEL .  EJ
)@@G@@@A@T@Q         EXERR ERIOLN LEVEL,1 .     @ @@@T         ONER    ERIOLN,EK
)@@G@@1 .   @ @@@Q         LOAD  X1,ARSAX1 .    @#@@@QEXIOL4   LABEL    @C@@@QEL
)@@G@@         LOAD  A3,0,I .            SET O VALUE  @ @@@Q         LOAD  X3,EM
)@@G@@ARSAX3 .    @D@@@R         LOADD   A5,ARSVA5 .       GET SAVED REGS     EN
)@@G@@@C@@@Q         JMP .                     -> RETURN    @A@@@Q/.       PAGEO
)@@G@@ENO BUILT IN FUNCTION   @[@@@Q.     @[@@@Q.     @#@@@QBFPANO*  LOCAL .  EP
)@@G@@@B@@@Q         LOAD  X5,A3 .       SAVE SD PTR  @ @@@Q         STORE X3,EQ
)@@G@@ARSAX3 .    @ @@@Q         USING SDSECT,A3 .    @C@@@Q         LOADA X3,ER
)@@G@@SDIOFN .         GET IOCB     @#@@@Q         WRIOCB . @^@@@Q         USIES
)@@G@@NG IOCB,X3 .@C@@@R         STORED  A5,ARSVA5 .       SAVE REGS    @ @@@QET
)@@G@@         LOAD  F,IOCBF1 .     @D@@@Q         IF    IOCBOP,OFF THEN,EXOP0EU
)@@G@@1 . -> NOT OPEN   @E@@@Q         IF    IOCBPT,OFF THEN,EXOP02 . -> NOT PEV
)@@G@@RINT FILE   @ @@@Q         LOAD  A3,IOCBPN .    @C@@@Q         ADD   A3,EW
)@@G@@1,I .      GET ACTUAL COUNT   @ @@@Q         LOAD  X3,ARSAX3 .    @D@@@REX
)@@G@@         LOADD   A5,ARSVA5 .       GET SAVED REGS     @C@@@Q         JMPEY
)@@G@@ .                     -> RETURN    @#@@@QEXOP01   LABEL .  @ @@@Q      EZ
)@@G@@   STORE X1,ARSAX1 .    @ @@@Q         LOADA X1,EXIOPN .    @^@@@Q      FA
)@@G@@   GOTO  EXIOC2 . @#@@@QEXOP02   LABEL .  @ @@@Q         STORE X1,ARSAX1FB
)@@G@@ .    @ @@@Q         LOADA X1,EXIOPN .    @ @@@Q         GOTO  EXIOL5 . FC
)@@G@@-> MSG@ @@@R/.       PAGENO PSEUDO VAR    @[@@@R.     @[@@@R.     @#@@@RFD
)@@G@@BFPNPV*  LOCAL .  @D@@@R         STORE   A2,ARSVA7 .       SAVE DESIRED FE
)@@G@@VALUE @B@@@R         LOAD  X5,A3 .       SAVE SD PTR  @ @@@R         STOFF
)@@G@@RE X3,ARSAX3 .    @ @@@R         USING SDSECT,A3 .    @C@@@R         LOAFG
)@@G@@DA X3,SDIOFN .         GET IOCB     @#@@@R         WRIOCB . @^@@@R      FH
)@@G@@   USING IOCB,X3 .@C@@@R         STORED  A5,ARSVA5 .       SAVE REGS    FI
)@@G@@@ @@@R         LOAD  F,IOCBF1 .     @D@@@R         IF    IOCBOP,OFF THENFJ
)@@G@@,EXOP01 . -> NOT OPEN   @E@@@R         IF    IOCBPT,OFF THEN,EXOP02 . ->FK
)@@G@@ NOT PRINT FILE   @E@@@R         LOAD    A2,ARSVA7 .       GET BACK DESIFL
)@@G@@RED COUNT   @D@@@R         SUB     A2,1,I .          GET CORRECT COUNT  FM
)@@G@@@C@@@R         STORE   A2,IOCBPN .       SET NEW COUNT@ @@@R         LOAFN
)@@G@@D  X3,ARSAX3 .    @D@@@R         LOADD   A5,ARSVA5 .       GET SAVED REGFO
)@@G@@S     @C@@@R         JMP .                     -> RETURN    @[@@@Q/.    FP
)@@G@@@B@@@Q.         COUNT BIF NOT IN ANSCII STANDARD@[@@@Q.     @[@@@Q. .   FQ
)@@G@@@^@@@Q. .        COUNT BIF    @[@@@Q. .   @#@@@Q. EXCNT*   LOCAL .@^@@@QFR
)@@G@@.          LOAD  X5,A3 .@C@@@Q.          LOADA A3,SDIOFN .         GET IFS
)@@G@@OCB   @^@@@Q.          WRIOCB .     @C@@@Q.          LOAD  F,IOCBF1 .   FT
)@@G@@       GET FLAGS  @D@@@Q.          IF    IOCBOP,OFF THEN,EXIOC1 .  CLOSEFU
)@@G@@D FILE@ @@@Q.          LOAD  A3,IOCBCN .  @C@@@Q.          JMP .        FV
)@@G@@             ->RETURN   @#@@@Q. EXIOC1   LABEL .@ @@@Q.          STORE XFW
)@@G@@1,ARSAX1 .  @C@@@Q.          LOADA X1,EXIOCM .         NAME OF BIF@#@@@QFX
)@@G@@EXIOC2   LABEL .  @C@@@Q         MOVE  IOCBFL,KBLANK,2 .   CLEAR NAME   FY
)@@G@@@A@T@Q         EXERR ERIOCM LEVEL,1 .     @ @@@T         ONER    ERIOCM,FZ
)@@G@@1 .   @E@U@Q         LOAD  X1,IOCCBP .            RESET IOCB TO EMPTY   GA
)@@G@@@E@@@U         LOAD  X1,IOCBBP .            RESET IOCB TO EMPTY   @^@@@QGB
)@@G@@         USING WORD,X1  @ @@@Q         MOVE  W1,KBLANK,2 .  @ @@@Q      GC
)@@G@@   LOAD  X1,ARSAX1 .    @D@@@Q         GOTO  EXIOL4 .            -> RETUGD
)@@G@@RN O VALUE  @[@@@Q/.    @F@@@Q.        EXFTGO                    INITIALGE
)@@G@@IZE FORMAT STATEMENT    @[@@@Q.     @D@@@Q.              A6=0 [GET], 1 [GF
)@@G@@PUT], 2 [FORMAT STMT]   @ @@@Q.              A1=SD OF FORMAT@ @@@Q.     GG
)@@G@@         A2=INV COUNT   @B@@@Q.              X11=RETURN TO R(LABEL)     GH
)@@G@@@G@@@Q.              THE REMOTE FORMAT IS CALLED AND RETURNS A SAVE AREAGI
)@@G@@.     @F@@@Q.              THE CURRENT FORMAT STACK IS SCANNED TO CHECK GJ
)@@G@@FOR   @G@@@Q.              RECURSIVE FORMATS (IF SAVE AREA IN STACK). THGK
)@@G@@IS ENTRY    @B@@@Q.              IS THEN ADDED TO STACK.    @C@@@Q.     GL
)@@G@@           NOTE:ARFMAT IS IN W1H1+3,X10   @^@@@Q.        STACK ELT:     GM
)@@G@@@G@@@Q.                -------------------------------------------------GN
)@@G@@-     @G@@@Q.                I     POINTER TO        I GET!PUT   I  RETUGO
)@@G@@RN    I     @G@@@Q.                I      NEXT ELTMENT     I  FLAG     IGP
)@@G@@   ADDRESS  I     @G@@@Q.                -------------------------------GQ
)@@G@@-------------------     @[@@@Q.     @[@@@Q.     @^@@@QEXFTGO*        LLOGR
)@@G@@C .   @ @@@Q         USING SDSECT,A1 .    @E@@@Q         IF    SD4FLB+SDGS
)@@G@@4UDF,ON,SDCLS4 THEN,EXFT01 . ->OK   @#@R@Q         LOCAL .  @#@@@REXFT02GT
)@@G@@A  LOCAL .  @D@@@QEXFT02   LABEL .                   INVALID FORMATMSG  GU
)@@G@@@ @@@Q         STORE X1,ARSAX1 .    @^@@@Q         LOAD  X1,A1 .  @A@T@QGV
)@@G@@         EXERR ERIO25 LEVEL,1 .     @ @@@T         ONER    ERIO25,1 .   GW
)@@G@@@ @@@Q         LOAD  X1,ARSAX1 .    @#@@@Q         JMP   .  @#@@@QEXFT01GX
)@@G@@   LABEL .  @E@R@Q         IF    A2,NE,ARINCT THEN,EXFT02 .  ->NON LOCALGY
)@@G@@ FMAT @E@@@R         IF    A2,NE,ARINCT THEN,EXFT02A .  ->NON LOCAL FMATGZ
)@@G@@@C@@@Q         LOAD  A3,SDADD .          GOTO FMAT    @D@@@Q         LOAHA
)@@G@@D  A4,X11 .            SAVE RETURN ADDRESS@^@@@Q         LINK  0,A3 .   HB
)@@G@@@D@@@Q         LOAD  A2,X5 .             SAVE STACK PTR     @F@@@Q      HC
)@@G@@   LOADA A3,ARFMAT .         SEE IF A2 IS ON FMAT STACK     @#@@@QEXFT04HD
)@@G@@   LABEL .  @^@@@Q         USING WORD,A3 .@E@@@Q         IF    W1H1,ZEROHE
)@@G@@ THEN,EXFT03 .  ->END OF LIST, VALID@E@@@Q         IF    A2,NE,W1H1 THENHF
)@@G@@,EXFT05.  ->NOT RECURSIVE     @^@@@Q         STACK A4 .     @B@@@Q      HG
)@@G@@   GOTO  EXFT02 .            MSG    @#@@@QEXFT05   LABEL .  @C@@@Q      HH
)@@G@@   LOAD  A3,W1H1 .           NEXT IN CHAIN@^@@@Q         GOTO  EXFT04  .HI
)@@G@@@#@@@QEXFT03   LABEL .  @^@@@Q         USING WORD,A3 .@D@@@Q         STOHJ
)@@G@@RE X5,W1H1 .           SET FORWARD LINK   @^@@@Q         USING WORD,X5 .HK
)@@G@@@D@@@Q         MOVE  W1H1,0,I .          SET END OF LIST    @G@@@Q      HL
)@@G@@   SLB   A6,17 .             PUT GET!PUT FLAG IN SIGN BIT POSITION@^@@@QHM
)@@G@@         ADD   A4,A6 .  @D@@@Q         STORE A4,W1H2 .           SET RETHN
)@@G@@URN ADDRESS @D@@@Q         GOTO  0,X11 .             EXECUTE FORMAT     HO
)@@G@@@[@@@Q.     @D@@@Q.        EXFTRT                    RETURN FROM FORMAT HP
)@@G@@@[@@@Q.     @#@@@QEXFTRT*  LLOC  .  @E@@@Q         LINK  EXFTGT .       HQ
)@@G@@     GET LAST STACK ENTRY.    @^@@@Q         USING WORD,A3 .@D@@@Q      HR
)@@G@@   MOVE  W1H1,0,I .          SET NEW LIST END   @D@@@Q         LOAD  A2,HS
)@@G@@W1,X5 .          GET STACK ELT.     @D@@@Q         SLB     A2,19 .      HT
)@@G@@     DROP GET!PUT FLAG  @G@@@Q         SRB     A2,19 .           GET INTHU
)@@G@@O NORMAL ADDRESS POSITION     @G@R@Q         LOAD    X11,R8 .          RHV
)@@G@@ESET X11 TO BE RELOADED ON RETURN   @G@@@R         LOAD    X11,ARDED .  HW
)@@G@@     RESET X11 TO BE RELOADED ON RETURN   @^@@@Q         GOTO  0,A2 .   HX
)@@G@@@[@@@Q.     @D@@@Q.        EXFMAT                    FORMAT CALL EDIT   HY
)@@G@@@[@R@Q.     @#@R@Q. EXFMAT*  LOCAL .@D@R@Q.          LINK  EXFTGT .     HZ
)@@G@@       GET STACK ELEMENT@^@R@Q.          UNSTK X11.   @D@R@Q.          LIA
)@@G@@OAD  A2,W1.              SEE IF GET OR PUT@D@R@Q.          IF    A2,LT,0IB
)@@G@@,I THEN,EXPTED ELSE,EXGTED .  @[@@@Q.     @C@@@Q.        SINCE THE FIRSTIC
)@@G@@ FORMAT STACK ELT. SAYS @D@@@Q.        WETHER THIS IS GET OR PUT I THINKID
)@@G@@ THAT ONE   @C@@@Q.        SHOULD CHECK THAT STACK ELT TO DECIDE  @[@@@QIE
)@@G@@.     @D@@@QEXFMAT*  LLOC .                    MY ENTRY POINT     @F@@@QIF
)@@G@@         LOAD    A2,ARFMAT .       POINT TO FIRST ELT.IN CHAIN    @D@@@QIG
)@@G@@         LOAD    A2,W1XH2,A2 .     GET STACK ELT.     @C@@@Q         IF IH
)@@G@@A2,LT,0,I THEN,EXPTED ELSE,EXGTED . @[@@@Q.     @E@@@Q.        EXFTGT   II
)@@G@@                 GET LAST STACK ELEMENT   @[@@@Q.     @#@@@QEXFTGT   LLOIJ
)@@G@@C  .  @G@@@Q         LOADA A3,ARFMAT .         POINT TO NEXT TO LAST ITEIK
)@@G@@M IN LIST   @F@@@Q         LOAD    X5,ARFMAT .       POINT TO FIRST ELT.IL
)@@G@@ IN LIST    @D@@@QEXFTG1   LABEL .                   SEARCH FOR END     IM
)@@G@@@^@@@Q         USING WORD,X5  @C@@@Q         IF    W1H1,ZERO THEN,LJMP .IN
)@@G@@ END OF LIST@F@@@Q         LOAD  A3,X5 .             SAVE NEXT TO LAST CIO
)@@G@@HAIN ENTRY  @D@@@Q         LOAD  X5,W1H1,X5 .        GET NEXT STACK LINKIP
)@@G@@@^@@@Q         GOTO  EXFTG1 . @#@@@Q/.       DATA     @#@@@QEXAI     CSEIQ
)@@G@@CT 3 .@C@R@QEXIOEF   SF    'BENDFI' .         7,ENDFILE     @C@T@REXIOEFIR
)@@G@@   INSERT  7,'END','FILE' . 7,ENDFILE     @ @R@QFILL(1)  SF    'LE    ' IS
)@@G@@.     @C@R@QEXIOLM   SF    'BLINEN' .          6,LINENO     @C@@@REXIOLMIT
)@@G@@   INSERT  6,'LIN','ENO ' .  6,LINENO     @ @R@QFILL(1)  SF    'O     ' IU
)@@G@@.     @C@R@QEXIOPN   SF    'APAGEN' .          6,PAGENO     @C@@@REXIOPNIV
)@@G@@   INSERT  6,'PAG','ENO ' .  6,PAGENO     @^@R@QFILL(1) SF     'O     ' IW
)@@G@@@#@@@Q         CEND .   @F@@@QERIOLN   EQU   25 .                LINENO.IX
)@@G@@ FILE NOT A PRINT FILE  @F@@@QERIOCM   EQU   26 .                'BCX1'.IY
)@@G@@ FILE 'SDX5' IS NOT OPEN@F@@@QERIO25   EQU   27 .                'SDX1' IZ
)@@G@@ ILLEGAL FORMAT LABEL   @F@T@QERENDF   EQU   91 .                 ENDFILJA
)@@G@@E. NOT OPEN FOR INPUT   @#@@@Q         END   .  ___ FORMAT STATEMENT    JB
)@@G@@@[@@@Q.     @D@@@Q.              A6=0 [GET], 1 [PUT], 2 [FORMAT STMT]   JC
)@@G@@*[S@@@*SDFF*@C@@@C.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@CJD
)@@G@@.     @D@@@C.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@CJE
)@@G@@.     @ @@@C.        MARVIN V. ZELKOWITZ  @B@@@C.        DEPARTMENT OF CJF
)@@G@@OMPUTER SCIENCE   @A@@@C.        UNIVERSITY OF MARYLAND     @B@@@C.     JG
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@C.     @G@@@C.        PERMISSIOJH
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@C.   REPRESENJI
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@C.     @G@@@C.     JJ
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@CJK
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDJL
)@@G@@@E@@@C.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@CJM
)@@G@@.     @F@@@C.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDJN
)@@G@@ED:   @[@@@C.     @G@@@C.        (A) ANY RESULTING PROGRAM, OR REPORT, PJO
)@@G@@APER OR DOCUMENTATION   @G@@@C.        DESCRIBING SUCH PROGRAM WILL CLEAJP
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@C.        IS A DIALECT OF PLUM OR IS JQ
)@@G@@DERIVED FROM PLUM, AND  @[@@@C.     @G@@@C.        (B) ALL SUCH MODIFICAJR
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@C.        OF ERRORS IN THJS
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@C.        A BRIEF DESCRIPJT
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@C.        TO THE UNJU
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@C.     @F@@@C.        (C) NO PROGRAMSJV
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@C.        WITHOUT WRITTENJW
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@C.     @F@@@C.     JX
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@C.     JY
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@CJZ
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     KA
)@@G@@@E@@@C.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@CKB
)@@G@@.     @G@@@C.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERKC
)@@G@@ ITSELF,    @F@@@C.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN KD
)@@G@@USING PLUM. @E@@@C.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USKE
)@@G@@ER TO @F@@@C.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRKF
)@@G@@ODUCT @G@@@C.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT KG
)@@G@@DEVELOPED   @#@@@C.   FROM PLUM.    @[@@@C.     @[@@@C.     @[@@@C.     KH
)@@G@@@[@@@C.     @[@@@C.     @[@@@C/.    @#@@@B         AXR$ .   @#@@@B      KI
)@@G@@   DCLRG .  @#@@@B         PLWORD . @#@@@D         PLAC .   @#@@@B      KJ
)@@G@@   UNLIST   @]@@@B@ADD PLTVDS @]@@@B@ADD EXCDS  @#@@@B         LIST .   KK
)@@G@@@#@@@BNERR     CSECT 3 .@B@@@B/ .      WORKSPACE FOR RUN TIME ROUTINES  KL
)@@G@@@^@@@BDRTNAM*  EQU   DEXRTS . @^@@@BDRTSA0*  EQU   DEXRTS+1 @^@@@BDRTARGKM
)@@G@@1* EQU   DEXRTS+2 @^@@@BDRTARG2* EQU   DEXRTS+4 @^@@@BDRTTMP*  EQU   DEXKN
)@@G@@RTS+6 @^@@@B/ .      ERROR RETURNS  @C@@@BNERRC$*  LABEL .              KO
)@@G@@     OVERFLOW     @ @C@B         LA,U  A8,DRTNAM .    @ @@@C         LA KP
)@@G@@   A8,DRTNAM .    @ @@@B         LA    A0,DRTSA0 .    @E@C@B         EXEKQ
)@@G@@RR ERRTOV LEVEL,2 . 'OVERFLOW IN 'NAME' 0 USED  @G@E@C         ONUNIT ERKR
)@@G@@RTOV,ACCDOV,2 R,I,R DRTNAM+(IN 63,0,1,0),8 DEXMAX,0   @I@F@E         ONUKS
)@@G@@NIT ERRTOV,ACCDOV,2 NERRX,NERRX,LJMP DRTNAM+(IN 63,0,1,0),8 DEXMAX,0    KT
)@@G@@@I@@@F         ONUNIT ERRTOV,ACCDOV,2 NERRX,NERRX,KLUK DRTNAM+(IN 63,0,1KU
)@@G@@,0),8 DEXMAX,0    @A@@@C.        OVERFLOW IN 'NAME'. 0 USED @^@E@B      KV
)@@G@@   GOTO  NERRX .  @[@@@B.     @[@@@B.     @[@@@B.     @D@@@BNERRB$*  LABKW
)@@G@@EL .                   ILLEGAL ARGUMENTS  @#@@@BNERRA$*  LABEL .  @ @@@BKX
)@@G@@         LA    A0,DRTSA0 .    @ @C@B         LA,U A8,DRTNAM .     @ @@@CKY
)@@G@@         LA   A8,DRTNAM .     @D@C@B         EXERR ERRTIL LEVEL,2 . 'ILLKZ
)@@G@@EGAL ARGUMENT'    @C@@@C         ONER ERRTIL,2 . 'ILLEGAL ARGUMENT'     LA
)@@G@@@#@@@BNERRX    LABEL .  @C@C@B         FLINK X5,EXLM .           RESTORELB
)@@G@@ REGS @C@@@C         FLINK X5,EXML .           RESTORE REGS @D@@@B      LC
)@@G@@   LOADD A1,KKD0 .           COMPLEX RETURN     @C@@@B         LOADD A3,LD
)@@G@@KKD0 .           REAL RETURN  @#@@@FKLUK     LABEL .  @#@@@B         LJMLE
)@@G@@P .   @C@@@B/ .      COMPLEX FUNCTIONS NOT YET INSTALLED    @]@@@BCDSQRTLF
)@@G@@*     @]@@@CRTCABF*     @]@@@CRTCABX*     @[@@@BCDLOG*@[@@@BCDCOS*@[@@@BLG
)@@G@@CDSIN*@[@@@BCDTAN*@]@@@BCDATAN*     @E@C@B         EXERR EXERNI LEVEL,2 LH
)@@G@@. 'COMPLEX NOT IN, 0 USED'    @D@@@C         ONER EXERNI,2 . 'COMPLEX NOLI
)@@G@@T IN, 0 USED'     @^@@@B        GOTO NERRX .    @^@@@B/ .      ERROR MESLJ
)@@G@@SAGES @D@@@BERRTOV   EQU   93 .                OVERFLOW IN FCN    @C@@@BLK
)@@G@@ERRTIL   EQU   94 .                ILLEGAL ARGS @E@@@BEXERNI   EQU   95 LL
)@@G@@.                COMPLEX NOT INSTALLED    @#@@@B         END .    ___   LM
)@@G@@     COMPLEX NOT INSTALLED    @#@@@A         END .    ___@@HR#@^<F9)@^<WLN
)@@G@@*[S@@@*SDFF*@C@@@C.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@CLO
)@@G@@.     @D@@@C.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@CLP
)@@G@@.     @ @@@C.        MARVIN V. ZELKOWITZ  @B@@@C.        DEPARTMENT OF CLQ
)@@G@@OMPUTER SCIENCE   @A@@@C.        UNIVERSITY OF MARYLAND     @B@@@C.     LR
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@C.     @G@@@C.        PERMISSIOLS
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@C.   REPRESENLT
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@C.     @G@@@C.     LU
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@CLV
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDLW
)@@G@@@E@@@C.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@CLX
)@@G@@.     @F@@@C.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDLY
)@@G@@ED:   @[@@@C.     @G@@@C.        (A) ANY RESULTING PROGRAM, OR REPORT, PLZ
)@@G@@APER OR DOCUMENTATION   @G@@@C.        DESCRIBING SUCH PROGRAM WILL CLEAMA
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@C.        IS A DIALECT OF PLUM OR IS MB
)@@G@@DERIVED FROM PLUM, AND  @[@@@C.     @G@@@C.        (B) ALL SUCH MODIFICAMC
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@C.        OF ERRORS IN THMD
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@C.        A BRIEF DESCRIPME
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@C.        TO THE UNMF
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@C.     @F@@@C.        (C) NO PROGRAMSMG
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@C.        WITHOUT WRITTENMH
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@C.     @F@@@C.     MI
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@C.     MJ
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@CMK
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     ML
)@@G@@@E@@@C.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@CMM
)@@G@@.     @G@@@C.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERMN
)@@G@@ ITSELF,    @F@@@C.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN MO
)@@G@@USING PLUM. @E@@@C.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USMP
)@@G@@ER TO @F@@@C.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRMQ
)@@G@@ODUCT @G@@@C.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT MR
)@@G@@DEVELOPED   @#@@@C.   FROM PLUM.    @[@@@C.     @[@@@C.     @[@@@C.     MS
)@@G@@@[@@@C.     @[@@@C.     @[@@@C/.    @B@@@A/.       EXCN  ARITHMETIC NUMBMT
)@@G@@ER CONVERTER@#@@@A         AXR$ .   @#@@@A         DCLRG .  @#@@@A      MU
)@@G@@   PLSD .   @#@@@E         PLIOCB . @#@@@D         PLAC .   @#@@@A      MV
)@@G@@   UNLIST . @]@@@A@ADD PLTVDS @#@@@A         LIST .   @]@@@A@ADD EXCDS  MW
)@@G@@@]@@@A@ADD IOSET  @#@@@A         CEND .   @#@@@A         PLWORD . @#@@@AMX
)@@G@@/.       ENTRY    @#@@@AX        PROC  1 .@^@@@ALD1SC*    NAME  1 .     MY
)@@G@@@^@@@ALD6SC*    NAME  6 .     @^@@@ALD0SC*    NAME  0 .     @B@@@A      MZ
)@@G@@   LOAD  X(1,1),X(1,2)-FQ3+FXH2 .   @ @@@A         SSA   X(1,1),9 .     NA
)@@G@@@D@@@A         DO      (X(0,0)=0)=0 , LSSC   X(1,1),X(0,0) .@#@@@A      NB
)@@G@@   END .    @#@@@AEXCNTRY  CSECT 3 .@#@@@AEXCN*    LLOC .   @B@@@ACVCV* NC
)@@G@@   LOCAL .                   ENTRY  @ @@@A         STORED A7,DCVSV+2 .  ND
)@@G@@@ @@@A         STORE A9,DCVSV+4 .   @ @@@A         STORE X1,DCVSV .     NE
)@@G@@@ @@@A         STORE X2,DCVSV+1 .   @ @@@A         STORE F,DCVSV+5 .    NF
)@@G@@@ @@@A         MOVE IOCVSC,KKD0,2   @C@@@A         LOAD  X2,DCVARR .    NG
)@@G@@     SOURCE ADDR  @C@@@A         LOAD  X1,0,I .            SET ADDRESS 0NH
)@@G@@@C@@@A         LOAD  F,DCVTL .           GET TYPE LEFT@D@@@A         IF NI
)@@G@@   SDDCBN,ON THEN,CVEN01 . -> LEFT BINARY @B@@@A         ADD   X1,4,I . NJ
)@@G@@           YES    @#@@@ACVEN01   LABEL .  @F@@@A         IF    SDFXFL,OFNK
)@@G@@F THEN,CVEN02 .                LEFT FLOAT @^@@@A         ADD X1,2,I .   NL
)@@G@@@#@@@ACVEN02   LABEL .  @D@@@A         LOAD  F,DCVTR .           GET TYPNM
)@@G@@E RIGHT     @B@@@A         IF    SDDCBN,ON THEN,CVEN03 .    @^@@@A      NN
)@@G@@   ADD   X1,1,I . @#@@@ACVEN03   LABEL .  @F@B@A         LOAD  X11,CVTB+NO
)@@G@@(IN 0,H1,0,0),X1 .             ASSME H1   @D@@@B         LOAD  X11,CVTB+NP
)@@G@@FH1,X1 .             ASSME H1 @C@@@A         IF    SDFXFL,ON THEN,LJMP .NQ
)@@G@@ -> YUP, H1 @B@B@A         LOAD  X11,CVTB+(IN 0,H2,0,0),X1 .@A@@@B      NR
)@@G@@   LOAD  X11,CVTB+FH2,X1 .    @D@@@A         GOTO  0,X11 .             -NS
)@@G@@> GO TO ROUTINE   @^@@@AEXCN1     CSECT 3 .     @ @@@ACVTB     SAC   CVBNT
)@@G@@XBF,CVBXBX .@ @@@AFILL(1)  SAC   CVBXDF,CVBXDX .@ @@@AFILL(1)  SAC   CVBNU
)@@G@@FBF,CVBFBX .@ @@@AFILL(1)  SAC   CVBFDF,CVBFDX .@ @@@AFILL(1)  SAC   CVDNV
)@@G@@XBF,CVDXBX .@ @@@AFILL(1)  SAC   CVDXDF,CVDXDX .@ @@@AFILL(1)  SAC   CVDNW
)@@G@@FBF,CVDFBX .@ @@@AFILL(1)  SAC   CVDFDF,CVDFDX .@#@@@A         CEND .   NX
)@@G@@@[@@@A.     @[@@@A.     @[@@@A.     @#@@@ACVDFBF   LABEL .  @#@@@ACVBFDFNY
)@@G@@   LABEL .  @#@@@ACVBFBF   LABEL .  @#@@@ACVDFDF   LABEL .  @#@@@ACVBFDXNZ
)@@G@@   LABEL .  @#@@@ACVDFDX   LABEL .  @B@@@A         LOADD A7,W1,X2 .     OA
)@@G@@     SOURCE @B@@@A         LD1SC  A9,DCVQR .          QR*2  @B@@@A      OB
)@@G@@   LINK  CVDVPT .            /10**QR@C@@@A         GOTO  CVCVST .       OC
)@@G@@     -> RETURN    @[@@@A.     @[@@@A.     @[@@@A.     @#@@@ACVBXDX   LABOD
)@@G@@EL .  @D@@@B         LOADD   A7,W1,X2 .        PICK UP NUMBER     @B@@@AOE
)@@G@@         LD1SC  A9,DCVQR .          QR*2  @B@@@A         LINK  CVDVPT . OF
)@@G@@           /10**QR@F@@@B         LOADA   X2,A7 .           A7-A8 NOW CONOG
)@@G@@TAIN NUMBER...    @#@@@ACVBXBF   LABEL .  @#@@@ACVBXDF   LABEL .  @B@@@AOH
)@@G@@         LD0SC  A3,DCVQL .          QL    @D@@@A         DFU A6,0,X2 .  OI
)@@G@@             UNPACK SOURCE    @D@@@A         SUB A6,02074,I .          SOJ
)@@G@@ET SHIFT COUNT    @D@@@A         SUB A3,A6 .             SCALE-SHIFT COUOK
)@@G@@NT    @E@@@A         IF A3,LT,25,I THEN,CVBXD4 . IS NUMBER TOO BIG?     OL
)@@G@@@E@@@A         IF A3,LT,60,I THEN,CVBXD5 . IS NUMBER TOO SMALL    @D@@@AOM
)@@G@@         GOTO    CVBXOK .          -> REPLACE W/ZERO  @#@@@ACVBXD4   LABON
)@@G@@EL .  @E@@@A         IF      A7,EQ,0,I THEN,CVBXOK . IF ZERO NO MESS    OO
)@@G@@@D@D@A         EXERR ERCV25 LEVEL,1 .    NUMBER OUT OF RANGE@C@@@D      OP
)@@G@@   STORE   A1,IOCBA1,X3 .    RESTORE IOCB @ @@@D         USING   IOCB,X3OQ
)@@G@@ .    @A@@@D         MOVE    IOCBX1,DCVSV .     @A@@@D         MOVE    IOR
)@@G@@OCBF1,DCVSV+5 .   @A@@@D         MOVE    IOCBLF,DCVSV+2 .   @H@@@D      OS
)@@G@@   ONUNIT  ERCV25,ACCDSI,1  RDGBFS,CVBXOK,CVBXD5  DCVSV,6  DCVARL,1     OT
)@@G@@@#@@@ACVBXOK   LABEL .  @D@B@A         LOAD    A9,0,I .          SET DEFOU
)@@G@@AULT VALUE  @D@@@B         SRBD    A7,72 .           SET DEFAULT VALUE  OV
)@@G@@@#@@@ACVBXD5   LABEL .  @B@B@A         DSA A8,0,A3 .             SHIFT  OW
)@@G@@@B@@@B         DSA A7,0,A3 .             SHIFT  @C@@@A         LOAD  X2,OX
)@@G@@DCVARL .         TARGET ADDR  @ @B@A         STORE A9,W1,X2 .     @ @@@BOY
)@@G@@         STORE A8,W1,X2 .     @C@@@A         GOTO  CVCVRT .            -OZ
)@@G@@> RETURN    @[@@@A.     @[@@@A.     @[@@@A.     @#@@@ACVDXDF   LABEL .  PA
)@@G@@@#@@@ACVDXBF   LABEL .  @B@@@A         LOADD A7,W1,X2 .          SOURCE PB
)@@G@@@B@@@A         LD1SC  A9,DCVQL .          QL    @B@@@A         LINK  CVDPC
)@@G@@VMT .            10**QR @ @@@A         FADDD A7,KUNZRO .    @B@@@A      PD
)@@G@@   GOTO  CVCVST .            RETURN @[@@@A.     @[@@@A.     @[@@@A.     PE
)@@G@@@#@@@ACVDXDX   LABEL .  @ @@@A         LOADD A7,W1,X2 .     @ @@@A      PF
)@@G@@   LD1SC  A9,DCVQR .    @ @@@A         LD1SC A3,DCVQL .     @C@@@A      PG
)@@G@@   SUB   A9,A3 .             (QR-QL)*8    @C@@@A         LINK  CVDVPT . PH
)@@G@@           /10**(QR-QL) @ @@@A         FADDD A7,KUNZRO .    @C@@@A      PI
)@@G@@   GOTO  CVCVST .            -> RETURN    @[@@@A.     @[@@@A.     @[@@@APJ
)@@G@@.     @#@@@ACVBXBX   LABEL .  @B@@@A         LOAD  A7,W1,X2 .          SPK
)@@G@@OURCE @B@@@A         LD0SC  A3,DCVQR .          QR    @B@@@A         LD0PL
)@@G@@SC  A9,DCVQL .          QL    @B@@@A         SUB   A3,A9 .             QPM
)@@G@@R-QL  @E@@@A         IF      A3,GE,36,I THEN,CVBXOK . DON'T UNDERFLOW   PN
)@@G@@@E@@@A         IF    A3,GE,0,I THEN,CVBXB1 .                 >=0  @^@@@APO
)@@G@@         LOADN A3,A3 .  @E@@@A         IF      A3,GE,36,I THEN,CVBXD4 . PP
)@@G@@DON'T OVERFLOW    @D@@@A         SLBD    A6,36 .           SHIFT A7 INTOPQ
)@@G@@ A6   @G@@@A         DSA     A6,36 .           SHIFT BACK INTO A7 W/SIGNPR
)@@G@@ EXTENSION  @E@@@A         LDSC  A6,1,A3 .           SCALE BY POWER OF TPS
)@@G@@WO    @F@@@A         IF      A6,NE,0,I THEN,CVBXD4 . CHECK TO SEE IF OVEPT
)@@G@@RFLOW @D@@@A         DSA     A6,1 .            RESTORE NUMBER     @C@@@APU
)@@G@@         GOTO  CVBXB2 .            -> CONTINUE  @#@@@ACVBXB1   LABEL .  PV
)@@G@@@C@@@A         SSA   A7,0,A3 .           SHIFT DOWN   @#@@@ACVBXB2   LABPW
)@@G@@EL .  @C@@@A         LOAD  X2,DCVARL .         TARGET ADDR  @ @@@A      PX
)@@G@@   STORE A7,W1,X2 .     @C@@@A         GOTO  CVCVRT .            -> RETUPY
)@@G@@RN    @[@@@A.     @[@@@A.     @[@@@A.     @#@@@ACVDXBX   LABEL .  @#@@@APZ
)@@G@@CVDFBX   LABEL .  @#@@@ACVBFBX   LABEL .  @B@@@A         LOAD  A8,W1,X2 QA
)@@G@@.          SOURCE @D@@@A         LOAD  A7,KUNZRO .          MAKE IT FLOAQB
)@@G@@T EXP @D@@@A         IF    A8,GT,0,I THEN,CVBFB3 . -> + NUMBER    @D@@@AQC
)@@G@@         LOADN A7,A7 .             NEGATE EXPONENT    @#@@@ACVBFB3   LABQD
)@@G@@EL .  @B@@@A         LD6SC  A9,DCVQR .          SCALE @C@@@A         ADDQE
)@@G@@   A9,0200140,I .      ADD EXPONENT @B@B@A         STORE A9,IOCVSC+(IN 0QF
)@@G@@,H1,0,0) .  @ @@@B         STORE A9,IOCVSC+FH1 .@B@@@A         FDIVD A7,QG
)@@G@@IOCVSC .          SCALE @ @@@A         LD1SC A9,DCVQL .     @C@@@A      QH
)@@G@@   LINK  CVDVMT .            SCALE *10**QL@A@@@A         FADDD A7,KUNZROQI
)@@G@@ . TRUNC    @C@@@A         GOTO  CVCVST .            -> RETURN    @ @@@AQJ
)@@G@@/.       UTILITY ROUTINES     @#@@@ACVCVST   LABEL .  @B@@@A         LOAQK
)@@G@@D  X2,DCVARL .         TARGET @ @@@A         STORED A7,W1,X2 .    @B@@@AQL
)@@G@@CVCVRT   LABEL .                   RETURN @ @@@A         LOAD  F,DCVSV+5QM
)@@G@@ .    @ @@@A         LOADD A3,DCVSV .     @^@@@A         STORED A3,X1 . QN
)@@G@@@ @@@A         LOADD A7,DCVSV+2 .   @ @@@A         LOAD A9,DCVSV+4 .    QO
)@@G@@@C@@@A         JMP .                     -> RETURN    @[@@@A.     @[@@@AQP
)@@G@@.     @[@@@A.     @#@@@ACVDVPT   LLOC .   @C@@@A         LOADN A9,A9 .  QQ
)@@G@@           DO MPY 10**-Q@#@@@ACVDVMT   LLOC .   @B@@@A         LOADM A3,QR
)@@G@@A9.              ABS(Q) @#@@@ACVDVM3   LABEL .  @D@@@A         IF    A3,QS
)@@G@@LT,KFLTSZ+1,I THEN,CVDVDN . -> DONE @B@@@A         IF    A9,LT,0,I THEN,QT
)@@G@@CVDVDV .    @A@@@A         FMPYD A7,KKPW10+KFLTSZ-2 . @^@@@A         GOTQU
)@@G@@O  CVDVM2 . @#@@@ACVDVDV   LABEL .  @A@@@A         FDIVD A7,KKPW10+KFLTSQV
)@@G@@Z-2 . @#@@@ACVDVM2   LABEL .  @ @@@A         SUB   A3,KFLTSZ,I .  @^@@@AQW
)@@G@@         GOTO  CVDVM3 . @#@@@ACVDVDN   LABEL .  @A@@@A         IF    A3,QX
)@@G@@EQ,0,I THEN,LJMP .@C@@@A         IF    A9,LT,0,I THEN,CVCVDX . -> DIVIDEQY
)@@G@@@A@@@A         FMPYD A7,KKPW10-2,A3 .     @#@@@A         LJMP .   @#@@@AQZ
)@@G@@CVCVDX   LABEL .  @A@@@A         FDIVD A7,KKPW10-2,A3 .     @#@@@A      RA
)@@G@@   LJMP .   @^@@@AEXCN1     CSECT 3 .     @ @@@ADCVMXN   SF    037777777RB
)@@G@@7777 .@#@@@A         CEND .   @B@@@AERCV25 EQU 10 .    NUMBER OUT OF RANRC
)@@G@@GE    @#@@@A         END .    ___  A7-A8 NOW CONTAIN NUMBER...    @#@@@ARD
)@@G@@CVBXBF   LABEL .  @#@@@ACVBXDF   LABEL .  @B@@@A         LD0SC  A3,DCVQLRE
)@@G@@*[S@@@*SDFF*@C@@@Z.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@ZRF
)@@G@@.     @D@@@Z.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@ZRG
)@@G@@.     @ @@@Z.        MARVIN V. ZELKOWITZ  @B@@@Z.        DEPARTMENT OF CRH
)@@G@@OMPUTER SCIENCE   @A@@@Z.        UNIVERSITY OF MARYLAND     @B@@@Z.     RI
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@Z.     @G@@@Z.        PERMISSIORJ
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@Z.   REPRESENRK
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@Z.     @G@@@Z.     RL
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@ZRM
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDRN
)@@G@@@E@@@Z.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@ZRO
)@@G@@.     @F@@@Z.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDRP
)@@G@@ED:   @[@@@Z.     @G@@@Z.        (A) ANY RESULTING PROGRAM, OR REPORT, PRQ
)@@G@@APER OR DOCUMENTATION   @G@@@Z.        DESCRIBING SUCH PROGRAM WILL CLEARR
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@Z.        IS A DIALECT OF PLUM OR IS RS
)@@G@@DERIVED FROM PLUM, AND  @[@@@Z.     @G@@@Z.        (B) ALL SUCH MODIFICART
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@Z.        OF ERRORS IN THRU
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@Z.        A BRIEF DESCRIPRV
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@Z.        TO THE UNRW
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@Z.     @F@@@Z.        (C) NO PROGRAMSRX
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@Z.        WITHOUT WRITTENRY
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@Z.     @F@@@Z.     RZ
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@Z.     SA
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@ZSB
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     SC
)@@G@@@E@@@Z.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@ZSD
)@@G@@.     @G@@@Z.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERSE
)@@G@@ ITSELF,    @F@@@Z.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN SF
)@@G@@USING PLUM. @E@@@Z.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USSG
)@@G@@ER TO @F@@@Z.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRSH
)@@G@@ODUCT @G@@@Z.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT SI
)@@G@@DEVELOPED   @#@@@Z.   FROM PLUM.    @[@@@Z.     @[@@@Z.     @[@@@Z.     SJ
)@@G@@@[@@@Z.     @[@@@Z.     @[@@@Z/.    @ @@@Y.        LEXICAL ANALYSIS     SK
)@@G@@@^@@@Y. DESTROYS X1-X5 A7-A11 @B@@@Y. SETS   A14=DLXAC A15=DLXACN F=DLXCSL
)@@G@@L     @#@@@Y         AXR$ .   @#@@@Y         DCLRG .  @G@@@Y         REGSM
)@@G@@S A7,A8,A9,A10,A11,A12,A13,A14,A15,A3 X1,X2,X3,X4,X5,X6,X7,;@A@@@Y      SN
)@@G@@         X8,X9,X10,A1,A2 .    @G@@@Y         ALREG A7,A8,A9,A10,A11,A12,SO
)@@G@@A13,A14,A15 X1,X2,X3,X4,X5,X6,X7,;  @ @@@Y               X8,X9,X10 .    SP
)@@G@@@[@@@Y.     @^@@@Y.        SETUP DSECTS   @#@@@Y         UNLIST . @]@Z@YSQ
)@@G@@@ADD PLTVDS @#@@@Z@ADD,P PLTVDS     @#@Z@Y         LIST .   @]@Z@Y@ADD PSR
)@@G@@LSAW  @#@@@Z@ADD,P EXCDS .    @#@@@Z         LIST .   @E@@@Y         PLWSS
)@@G@@ORD .                  WORD DESIGNATION DSECT   @E@@@Y         PLSD .   ST
)@@G@@                 SYMBOL TABLE DESCRIPTOR  @C@@@Y         PLAC .         SU
)@@G@@           ALPHA CODE   @#@@@+         PLIOCB . @#@@@Y         PLAR .   SV
)@@G@@@F@@@YACCMT    EQU   0001 .              COMMENT TOKEN , INTERNAL ONLY  SW
)@@G@@@D@@@YACECMT   EQU   0002 .              END COMMENT */     @^@@@YUPPERCSX
)@@G@@* PROC *0,3 .     @^@@@Y         LOAD  A3,DCVINT@D@@@Y         AND,U A3,SY
)@@G@@0777-040 .   CONVERT TO UPPER CASE  @ @@@Y         STORE A4,DCVINT .    SZ
)@@G@@@#@@@Y         END .    @B@@@Y/ .      LEXICAL ANALYZER - MAIN DRIVER   TA
)@@G@@@^@@@YLXSTOP   EQU   128 .    @#@@@YGETCX* PROC .     @C@Z@Y         LOATB
)@@G@@D   A3,DGOPSV+1 .    GET CHAR-1 LEFT@C@@@Z         LOAD   A3,DEXLXS+7 . TC
)@@G@@   GET CHAR-1 LEFT@E@@@Y         ADD   A3,1,I .          GET TRUE NUMBERTD
)@@G@@ REMAINING  @D@@@Y         LOOP  A3,GETCX2 .       VALID CHAR TO GET    TE
)@@G@@@C@@@Y         ADD   A3,1,I .          SET COUNT TO -1@B@@@Y         LOATF
)@@G@@D  A8,LXSTOP,I .     SET EOF  @B@@@Y         GOTO  GETCX1 .          -> TG
)@@G@@MERGE @#@@@YGETCX2   LABEL .  @B@@@Y         EX    0,*A1 .           GETTH
)@@G@@ CHAR @^@@@Z         SLB     A8,29 .@E@@@Z         SRB     A8,29 .      TI
)@@G@@     KEEP ONLY 7 BITS FOR CHAR@#@@@YGETCX1   LABEL .  @D@@@Y         SUBTJ
)@@G@@   A3,1,I .          DELETE CHAR COUNT.   @ @Z@Y         STORE  A3,DGOPSTK
)@@G@@V+1 . @ @@@Z         STORE  A3,DEXLXS+7 . @#@@@Y         END .    @^@-@YTL
)@@G@@LXERR*   PROC  *1 .     @A@-@Y         EXERR LXERR(1,1) LEVEL,1 . @#@-@YTM
)@@G@@         END .    @G@@@YLXT*     PROC  1 .                 SPEC SYMBOL ETN
)@@G@@NTRY,NUMBER CLASS,TOKEN @G@@@YXX       FORM  9,9,18 .            ///////TO
)@@G@@///////////////////////////// @D@@@Y         DO    LXT(1,2)>I ,Y(1) EQU TP
)@@G@@LXT(1,2)-LXNQP .  @D@@@Y         DO    LXT(1,2)=I ,Y(1) EQU LXNLPN-LXNQPTQ
)@@G@@ .    @B@@@Y         XX    LXT(1,1),Y(1),LXT(1,3) .   @#@@@Y         ENDTR
)@@G@@ .    @G@@@YLXOP     FORM  18,9,9 .    *********************************TS
)@@G@@************@#@@@YEXLX     CSECT 3 .@C@@@YLXILRT   LABEL .              TT
)@@G@@     ERROR RETTRN @ @@@Y         MOVE  DLXACN,0,I .   @ @@@Y         MOVTU
)@@G@@E  DLXCLN,0777,I .@ @@@Y         MOVE  DLXSZN,7,I .   @ @@@Y         LOATV
)@@G@@DA A3,DLXCON .    @ @@@Y         STORE A3,DLXBCN .    @A@@@Y         MOVTW
)@@G@@E  DLXCON,LXERNM,2 .    @#@@@YLXCRTN   LABEL .  @E@@@Y         LOAD  X11TX
)@@G@@,1,I .           SKIP 1 WORD ON RETURN    @C@@@Y         GOTO  LXERRI . TY
)@@G@@            -> RETURN   @^@@@YLXERNM   SF    '*ERR' . @^@@@YFILL(1)  SF TZ
)@@G@@   'OR* ' . @#@@@Y         CEND .   @C@@@YLXCDND   LABEL .              UA
)@@G@@     END OF IMAGE @E@@@Y         LOAD  X11,0,I .           SKIP NO WORDSUB
)@@G@@ ON RETURN  @#@@@YLXERRI   LABEL .  @ @Z@Y         LOAD  A2,DGOCSV .    UC
)@@G@@@ @@@Z         LOAD  A2,DEXLXS .    @ @Z@Y         LOAD  X2,DGOCSV+1 .  UD
)@@G@@@ @@@Z         LOAD  X2,DEXLXS+1 .  @ @Z@Y         LOAD  X3,DGOCSV+2 .  UE
)@@G@@@ @@@Z         LOAD  X3,DEXLXS+2 .  @ @Z@Y         LOAD  X4,DGOCSV+3 .  UF
)@@G@@@ @@@Z         LOAD  X4,DEXLXS+3 .  @ @Z@Y         LOADD A5,DGOCSV+4 .  UG
)@@G@@@ @@@Z         LOADD A5,DEXLXS+4 .  @ @Z@Y         LOAD  X5,DGOPSV .    UH
)@@G@@@ @@@Z         LOAD  X5,DEXLXS+6 .  @ @Z@Y         LOADD A7,DGOPSV+1 .  UI
)@@G@@@ @@@Z         LOADD A7,DEXLXS+7 .  @ @Z@Y         LOADD A9,DGOPSV+3 .  UJ
)@@G@@@ @@@Z         LOADD A9,DEXLXS+9 .  @ @Z@Y         LOAD  A11,DGOPSV+5 . UK
)@@G@@@ @@@Z         LOAD  A11,DEXLXS+11 .@E@@@Y         A,H2 X11,0,A0 .   ADJUL
)@@G@@UST RETURN ADDRESS BY 1 OR 0  @C@@@Y         JGD  A0,0,X11 .   RETURN ANUM
)@@G@@D POP STACK @F@@@YEXLXI*   LOCAL .                   MAIN ENTRY POINT FRUN
)@@G@@OM SYNA .   @ @Z@Y         STORE A2,DGOCSV .    @ @@@Z         STORE A2,UO
)@@G@@DEXLXS .    @ @Z@Y         STORE X2,DGOCSV+1 .  @ @@@Z         STORE X2,UP
)@@G@@DEXLXS+1 .  @ @Z@Y         STORE X3,DGOCSV+2 .  @ @@@Z         STORE X3,UQ
)@@G@@DEXLXS+2 .  @ @Z@Y         STORE X4,DGOCSV+3 .  @ @@@Z         STORE X4,UR
)@@G@@DEXLXS+3 .  @ @Z@Y         STORED A5,DGOCSV+4 . @ @@@Z         STORED A5US
)@@G@@,DEXLXS+4 . @ @Z@Y         STORE X5,DGOPSV .    @ @@@Z         STORE X5,UT
)@@G@@DEXLXS+6 .  @ @Z@Y         STORED A7,DGOPSV+1 . @ @@@Z         STORED A7UU
)@@G@@,DEXLXS+7 . @ @Z@Y         STORED A9,DGOPSV+3 . @ @@@Z         STORED A9UV
)@@G@@,DEXLXS+9 . @ @Z@Y         STORE A11,DGOPSV+5 . @ @@@Z         STORE A11UW
)@@G@@,DEXLXS+11 .@#@@@YLXCRIN   LABEL .  @D@@@Y         GETCX .              UX
)@@G@@      GET NEXT CHARCTER @#@@@YLXCRI2   LABEL .  @F@@@Y         LOAD  X3,UY
)@@G@@A8 .             PUT CHARACTER INTO INDEX REG   @G@@@Y         LOAD  X3,UZ
)@@G@@LXTRTB,X3 .      GET ADDRESS OF ROUTINE FROM TABLE    @H@@@Y         GOTVA
)@@G@@O  0,X3 .              -> PROPER ROUTINE FOR LEADING CHARACTER    @A@@@YVB
)@@G@@. LXTRTB SQ    OPERATOR CLASS ENTRY @A@@@Y.        SQ    NUMBER CLASS ENVC
)@@G@@TRY   @B@@@Y.        SH    FIRST CHARACTER TOKEN CLASS@D@@@YLXTRTB  LABEVD
)@@G@@L .                      BRANCH TABLE .   @G@@@Y         DO    040 , LXTVE
)@@G@@ 2,I,LXILGL .                  ASCII 000 TO 037 @C@@@Y         LXT   2,IVF
)@@G@@,LXCRIN .        040 BLANK    @B@@@Y         LXT   2,I,LXILGL .        0VG
)@@G@@41 !  @D@@@Y         LXT   2,I,LXILGL .        042 DOUBLE QUOTE   @B@@@YVH
)@@G@@         LXT   2,I,LXILGL .        043 #  @B@@@Y         LXT   2,I,LXILGVI
)@@G@@L .        044 $  @B@@@Y         LXT   2,I,LXILGL .        045 %  @B@@@YVJ
)@@G@@         LXT   2,I,LXILGL .        046 &  @B@@@Y         LXT   2,I,LXSCOVK
)@@G@@N .        047 '  @B@@@Y         LXT   2,I,LXSPEC .        050 (  @B@@@YVL
)@@G@@         LXT   3,I,LXSPEC .        051 )  @B@@@Y         LXT   2,I,LXILGVM
)@@G@@L .         052 * @B@Z@Y         LXT   5,I,LXSPEC .        053 +  @B@@@ZVN
)@@G@@         LXT   4,I,LXSPEC .        053 +  @B@Z@Y         LXT   26,I,LXSPVO
)@@G@@EC .       054 ,  @B@@@Z         LXT    8,I,LXSPEC .       054 ,  @B@Z@YVP
)@@G@@         LXT   8,I,LXSPEC .        055 -  @B@@@Z         LXT   6,I,LXSPEVQ
)@@G@@C .        055 -  @B@@@Y         LXT   2,LXNLPD,LXNDEC .   056 .  @B@@@YVR
)@@G@@         LXT   2,I,LXILGL .        057 /  @B@@@Y         LXT   1,LXNLP1,VS
)@@G@@LXNCON .   060 0  @B@@@Y         LXT,1,LXNLP1,LXNCON .     061 1  @F@@@YVT
)@@G@@         DO 8 , LXT 1,LXNLP2,LXNCON .                  062-071 2-9@B@@@YVU
)@@G@@         LXT   2,I,LXILGL .        072 :  @C@Z@Y         LXT   6,I,LXSPEVV
)@@G@@C .        073 SEMICOLON@C@@@Z         LXT   5,I,LXSPEC .        073 SEMVW
)@@G@@ICOLON@B@@@Y         LXT   2,I,LXILGL .        074 <  @B@Z@Y         LXTVX
)@@G@@   18,I,LXSPEC .       075 =  @B@@@Z         LXT    7,I,LXSPEC .       0VY
)@@G@@75 =  @B@@@Y         LXT   2,I,LXILGL .        076 >  @B@@@Y         LXTVZ
)@@G@@   2,I,LXILGL .        077 ?  @B@@@Y         LXT   2,I,LXILGL .        1WA
)@@G@@00 @  @B@@@Y         LXT   1,I,LXALFA .        101 A  @B@@@Y         LXTWB
)@@G@@   1,LXNBIN,LXALFA .   102 B  @B@@@Y         LXT   1,I,LXALFA ,        1WC
)@@G@@03 C  @B@@@Y         LXT   1,I,LXALFA .        104 D  @B@@@Y         LXTWD
)@@G@@   1,LXNEXP,LXALFA .   105 E  @B@@@Y         LXT   1,I,LXALFA .        1WE
)@@G@@06 F  @B@@@Y         LXT   1,I,LXALFA .        107 G  @B@@@Y         LXTWF
)@@G@@   1,I,LXALFA .        110 H  @B@Z@Y         LXT   1,LXNCP,LXALFA .    1WG
)@@G@@11 I  @B@@@Z         LXT   1,LXNCMP,LXALFA .    111 I @C@@@Y         DO WH
)@@G@@17 , LXT 1,I,LXALFA .  112-132 J-Z  @C@@@Y         DO 3 , LXT 2,I,LXILGLWI
)@@G@@ .   133-135 [\]  @B@@@Y         LXT   2,I,LXILGL .        136 ^  @C@@@YWJ
)@@G@@         LXT   1,I,LXALFA .        137 BREAK    @B@@@Y         LXT   2,IWK
)@@G@@,LXILGL .        140    @C@@@Y         LXT   0,I,LXALFA .        141 LC WL
)@@G@@A     @C@@@Y         LXT   0,LXNBNF,LXALFA .   142 LC B     @C@@@Y      WM
)@@G@@   LXT   0,I,LXALFA .        143 LC C     @C@@@Y         LXT   0,I,LXALFWN
)@@G@@A .        144 LC D     @C@@@Y         LXT   0,LXNEXF,LXALFA .   145 LC WO
)@@G@@E     @D@@@Y         DO 3 , LXT 0,I,LXALFA .   146-150 LC F G H   @C@Z@YWP
)@@G@@         LXT   0,LXNCMP,LXALFA .   151 LC I     @C@@@Z         LXT   0,LWQ
)@@G@@XNCMQ,LXALFA .   151 LC I     @D@@@Y         DO 17 , LXT 0,I,LXALFA .  1WR
)@@G@@52-172_ LC J-Z    @C@@@Y         DO 5 , LXT 2,I,LXILGL .   0173-177     WS
)@@G@@@D@@@Y         LXT   2,I,LXCDND .        0200 STOP CHAR     @C@@@YLXCTRTWT
)@@G@@   LABEL .                   RETURN POINT @F@@@Y         +LXALF2 .      WU
)@@G@@           LOWER CASE, CONVERT TO UPPER   @E@@@Y         +LXALF3 .      WV
)@@G@@           UPPER CASE AND DIGITS .  @[@@@-.     @[@@@-.     @[@@@-.     WW
)@@G@@@[@@@-.     @D@@@-.        ROUTINE TO SAVE IO REGS FOR ON UNIT CALL     WX
)@@G@@@#@@@-LXIOSV   LOCAL .  @ @@@-         LOAD    X3,DEXLXS+2 .@ @@@-      WY
)@@G@@   USING   IOCB,X3 .    @ @@@-         LINK    ONIOSN .     @A@@@-      WZ
)@@G@@   MOVE    IOCBLF,DEXLXS+7 .  @A@@@-         MOVE    IOCBF1,DEXLXS+4 .  XA
)@@G@@@#@@@-         JMP .    @F@@@Y/ .      NAME CRACKING ROUTINE     A8=CHARXB
)@@G@@ACTER , X3=LXTRTB ENTRY @#@@@YLXALFA   LABEL .  @A@@@Y         MOVE  DLXXC
)@@G@@CON,KBLANK,16 .   @F@@@Y         SETPC 4,DLXCON .          MOVE NAME TO XD
)@@G@@WORD BOUNDARY     @E@@@Y         SETL  A9,63,I .           SET MAXIMUM NXE
)@@G@@AME SIZE    @#@@@YLXALF2   LABEL .  @E@@@Y         SET   040,OFF,A8 .   XF
)@@G@@      CONVERT TO UPPER CASE   @#@Z@YLXALF2   LABEL .  @#@@@ZLXALF3   LABXG
)@@G@@EL .  @F@@@Y         PUTC .                    PUT CHARACTER INTO OUTPUTXH
)@@G@@ AREA @D@@@Y         GETCX .                    GET NEXT INPUT    @^@@@YXI
)@@G@@         LOAD  X3,A8 .  @C@@@Y         L,Q1  A3,LXTRTB,X3 .  TYPE OF CHAXJ
)@@G@@R     @E@@@Y         IF    A3,GE,2,I THEN,LXALF4 . -> END OF STRING     XK
)@@G@@@ @@@Y         LOAD  X3,LXCTRT,A3 . @^@@@Y         LOOP A9,0,X3 . @E@Z@YXL
)@@G@@LXALF3   LABEL .                   PRINT MESSAGE AND RETTRN @F@-@Y      XM
)@@G@@   LXERR  LXER02 .           [EROR MESSAGE, NAME TOO LONG]  @D@-@Y      XN
)@@G@@   GOTO  LXILRT .             -> ERROR RETTRN   @^@@@-.        'NAME TOOXO
)@@G@@ LONG'@C@@@-         LINK    LXIOSV .          SAVE REGS    @H@@@-      XP
)@@G@@   ONUNIT  LXER02,ACCDER,1  RDGBFS,LXILRT,LXILRT  DEXWK1,4  DEXMAX,0    XQ
)@@G@@@#@@@YLXALF0   LABEL .  @F@-@Y         LXERR   LXER63 .          NAME NOXR
)@@G@@T FOUND IN HASH TABLE   @B@@@-.        'NAME NOT FOUND IN HASH TABLE'   XS
)@@G@@@ @@@-         LINK    LXIOSV .     @F@@@-         ONUNIT  LXER63,ACCDERXT
)@@G@@,1  RDGBFS,I,R  DEXWK1,4  DEXMAX,0  @C@@@Y         LOAD  A9,DLXSZN .    XU
)@@G@@     ASSUME STRING@ @@@Y         GOTO    LXSCE1 .     @#@@@YLXALF4   LABXV
)@@G@@EL .  @F@@@Y         LINK  LXRERR .            REREAD CHARACTER NEXT TIMXW
)@@G@@E     @D@@@Y         LPCNT A9,63,I .           FIND SIZE OF WORD  @D@@@YXX
)@@G@@         STORE A9,DLXSZN .         SAVE SIZE OF TOKEN @D@@@Y         LINXY
)@@G@@K  LXSRCH .            SEARCH FOR NAME .  @D@@@Y         GOTO  LXALF0 . XZ
)@@G@@           -> NAME NOT FOUND  @B@@@Y.        RETURN WITH X2=BCD ENTRY ADYA
)@@G@@DRESS @ @@@Y         USING SDBCD,X2 .     @F@@@Y         LOAD  A8,SDBCLSYB
)@@G@@ .         SEE IF ILLEGAL RESERVED WWRD   @E@@@Y         IF    A8,EQ,LXRYC
)@@G@@SWD,I THEN,LXALF0 . -> YUP, ERROR   @C@@@Y         STORE A8,DLXCLN .    YD
)@@G@@      SET CLASS   @B@@@Y         MOVE  DLXACN,0,I .        SET VAR@E@@@YYE
)@@G@@         STORE X2,DLXIDN .         SAVE PTR TO SD ENTRY     @D@@@Y      YF
)@@G@@   LOADA X2,SDBBCD .         SAVE PTR TO STRING @ @@@Y         STORE X2,YG
)@@G@@DLXBCN .    @C@@@Y         GOTO  LXCRTN .            -> RETURN    @D@@@YYH
)@@G@@LXILGL   LABEL .                   ILLEGAL SYMBOL .   @^@-@Y         LXEYI
)@@G@@RR LXER04 . @D@-@Y         GOTO  LXILRT .            -> IGNORE SYMBOL . YJ
)@@G@@@ @@@-.        'ILLEGAL SYMBOL'     @ @@@-         LINK    LXIOSV .     YK
)@@G@@@H@@@-         ONUNIT  LXER04,ACCDER,1  RDGBFS,LXILRT,LXILRT  DEXWK1,4  YL
)@@G@@DEXMAX,0    @ @@@Y/ .      SYMBOL TABLE SEARCH  @ @@@Y.        ENTRY A9=YM
)@@G@@ L'STRING   @ @@@Y.              DLXCON=STRING  @A@@@Y.        EXIT  X2=YN
)@@G@@ -> BCD ENTRY     @#@@@YLXSRCH   LOCAL .  @F@@@Y         LOAD  A10,A9 . YO
)@@G@@           GET NUMBER OF WORDS IN STRING  @^@@@Y         ADD   A10,3,I .YP
)@@G@@@^@@@Y         SRB   A10,2 .  @D@@@Y         LOAD  A8,A10 .            SYQ
)@@G@@AVE SIZE OF STRING@G@@@Y         LINK  LXHASH .            GET HASH A8= YR
)@@G@@INCREMENT, A7=INITIAL   @F@@@Y         LOAD  X3,A7 .             SET INIYS
)@@G@@TIAL ENTRY IN INDEX REG @ @@@Y         LOADA X3,HTBLS,X3 .  @E@@@Y      YT
)@@G@@   SETL  A11,1023,I .        SET MAX SEARCH LENGTH    @#@@@YLXSLOP   LABYU
)@@G@@EL .  @^@@@Y         USING WORD,X3 .@D@@@Y         IF    W1H1,ZERO THEN,YV
)@@G@@LXSNEW .   -> NEW WNTRY @D@@@Y         LSDP  X2,W1H1 .           GET BCDYW
)@@G@@ POINTER    @ @@@Y         USING SDBCD,X2 .     @B@@@Y         IF    A9,YX
)@@G@@NE,SDBCNT THEN,LXSLP1 . @F@@@Y         IF    SDBBCD,EQ,DLXCON,R,A10 THENYY
)@@G@@,LXSFND . -> FOUND ENTRY@#@@@YLXSLP1   LABEL .  @F@@@Y         LOOP  A11YZ
)@@G@@,LXSLP2 .        -> LOOP TO NEXT TABLE ENTRY    @E@@@YLXSNEW   LABEL .  ZA
)@@G@@             NEW ENTRY, I.E. NOT IN TABLE @C@@@Y         JMP .          ZB
)@@G@@           NOT IN TABLE @D@@@YLXSLP2   LABEL .                   GET NEWZC
)@@G@@ ADDRESS    @C@@@Y         ADD   X3,A8 .             GET NEW VALUE@^@@@YZD
)@@G@@         LOAD  A7,X3    @G@@@Y         IF    A7,LT,HTBLS+1023,I THEN,LXSZE
)@@G@@LOP . -> LOOP GOR NEXT ENTRY  @E@@@Y         SUB   X3,1023,I .         BZF
)@@G@@ACKUP TO START OF TABLE @E@@@Y         GOTO  LXSLOP .            -> LOOPZG
)@@G@@ FOR NEW ENTRY    @E@@@YLXSFND   LABEL .                   FOUND PREVIOUZH
)@@G@@S SD FOR IT @^@@@Y         LOADA A7,TVST .@E@@@Y         IF    A7,LT,X2 ZI
)@@G@@THEN,JMP1 ELSE,JMP . -> KEYWORD     @A@@@Y/ .      LXHASH    HASH FUNCTIZJ
)@@G@@ON    @C@@@Y.        ENTRY A8= SIZE OF STRING  IN WORDS     @ @@@Y.     ZK
)@@G@@         DLXCON=STRING  @A@@@Y.        EXIT  A7=INITIAL VALUE     @C@@@YZL
)@@G@@.              A8=INCREMENT USED IF COLLISION   @#@@@YLXHASH   LLOC .   ZM
)@@G@@@C@@@Y         LOAD  A7,0,I .         GET CONSTANT    @D@@@Y         LOAZN
)@@G@@DA X2,DLXCON .         SET TO READ STRING @E@@@Y         LOADXI X2,1,I .ZO
)@@G@@           SET AUTO INCREMENT OF 1  @F@@@Y         SETL  A8    .        ZP
)@@G@@     SET NUMBER OF WORDS TO LOOP ON @#@@@YLXHLOP   LABEL .  @D@@@Y      ZQ
)@@G@@   ADD   A7,0,*X2 .          ADD IN NEW WORD    @E@@@Y         LOOP  A8,ZR
)@@G@@LXHLOP .         -> LOOP FOR ALL WORDS    @E@@@Y         SRBD  A7,36 .  ZS
)@@G@@           HALF OF NUMBER INTO A8   @F@@@Y         DIV   A7,1023,I .    ZT
)@@G@@     GET HASH VALUE AS REMAINDER    @E@@@Y         LOAD  A7,A8 .        ZU
)@@G@@     PUT HASH IN RETURNED REG @F@@@Y         LOAD A8,31,I .            GZV
)@@G@@ET NEW OFFSET IF COLLISION    @ @@@Y         LJMP .     -> RETURN @#@@@YZW
)@@G@@LEXI     CSECT 3 .@^@@@YDLXZER   SF    '000E' . @^@@@YFILL(1)  SF    '+0ZX
)@@G@@00' . @#@@@Y         CEND     @A@@@Y/ .      LXRERD - REREAD CHARACTER  ZY
)@@G@@@B@@@YLXRERD*  LLOC .                   ENTRY   @^@@@Y         ADD   A7,ZZ
)@@G@@1,I . @C@@@Y         TNE   A1,KLCH4W .         IS IS S1     @D@@@Y      AA
)@@G@@   GOTO  LXRER2 .            -> YUP, SET TO S6  @D@@@Y         SUB   A1,AB
)@@G@@1,I .            SET SN TO SN-1     @B@@@Y         LJMP .               AC
)@@G@@     RETURN @#@@@YLXRER2   LABEL .  @C@@@Y         SUB X1,1,I .         AD
)@@G@@     PEVIOUS WORD @B@@@Y         ADD   A1,3,I .            S6     @F@@@YAE
)@@G@@         LJMP .                                        RETURN     @E@@@YAF
)@@G@@LXRERR   LOCAL .                    REREAD FROM THIS ROUTINE@ @Z@Y      AG
)@@G@@   LOAD    A7,DGOPSV+1 .@ @@@Z         LOAD    A7,DEXLXS+7 .@^@@@Y      AH
)@@G@@   LINK LXRERD .  @ @Z@Y         STORE   A7,DGOPSV+1 .@ @@@Z         STOAI
)@@G@@RE   A7,DEXLXS+7 .@#@@@Y         JMP .    @G@@@Y/ .      OPERATOR CRACKEAJ
)@@G@@R          A8=CHARACTER , X3=A(LXTRTB ENTRY)    @#@@@YLXSPEC   LABEL .  AK
)@@G@@@^@@@Y         LOAD  X3,A8 .  @F@@@Y         LOADA X3,LXTRTB,X3 .      PAL
)@@G@@OINT TO OPERATOR TABLE CODE   @^@@@Y         USING WORD,X3  @D@@@Y      AM
)@@G@@   LOAD  X3,W1Q1 .           GET OPTBL OFFSET   @F@@@Y         LOADA X4,AN
)@@G@@LXOPTB-2,X3 .  X4=A(OPTBL ENTRY FOR OPERATOR)   @ @@@Y         USING  WOAO
)@@G@@RD,X4 .     @C@@@Y         MOVE  DLXACN,W1H1 .       SETUP ACN    @C@@@YAP
)@@G@@         MOVE  DLXCLN,W1Q3 .       MOVE CLASS   @H@Z@Y         STORE A8,AQ
)@@G@@DLXCON+(IN 0,Q2,0,0) .          SET BCD STRING FR OPERATOR  @H@@@Z      AR
)@@G@@   STORE A8,DLXCON+(IN 0,Q1,0,0) .          SET BCD STRING FR OPERATOR  AS
)@@G@@@ @@@Y         MOVE  DLXSZN,1,I .   @ @@@Y         LOADA A3,DLXCON .    AT
)@@G@@@ @@@Y         STORE A3,DLXBCN .    @C@@@Y         GOTO LXCRTN .        AU
)@@G@@     -> RETURN    @B@@@Y. LXOPTB SH    ALPHA CODE FOR OPERATOR    @ @@@YAV
)@@G@@.        SQ    LEXICAL CLASS  @D@@@Y.        SQ    NUMBER OF SPLIT OPERAAW
)@@G@@TORS (ON FIRST)   @E@@@Y.              SECOND OPERATOR CHARACTER (ON REMAX
)@@G@@AINING)     @A@@@YLXOPTB   LXOP  ACLPAR,LXLP,0 .     (@A@@@Y         LXOAY
)@@G@@P  ACRPAR,LXRP,0 .     )@A@@@Y         LXOP  ACBPL,LXPS,0 .      +@A@@@YAZ
)@@G@@         LXOP  ACSEMI,LXRSWD,0 .   ;@A@@@Y         LXOP  ACBMN,LXPS,0 . BA
)@@G@@     -@A@@@Y         LXOP  ACEQ,LXBN,0 .       =@A@@@Y         LXOP  ACCBB
)@@G@@OMA,LXCM,0 .     ,@A@@@Y/ .      PARSE NUMBER CONSTANTS     @^@@@Y.     BC
)@@G@@   DLXFLG SET TO: @ @@@Y.        BIT 0 - E PRESENT    @ @@@Y.        BITBD
)@@G@@ 1 - I PRESENT    @ @@@Y.        BIT 2 - B PRESENT    @ @@@Y.        BITBE
)@@G@@ 3 - . PRESENT    @G@@@YLXNDEC   LABEL .                   INITIAL . SEEBF
)@@G@@ IF QUALIFIED NAME SEP. @^@@@Y         LOAD  R1,X1    @^@@@Y         LOABG
)@@G@@D  R2,A1    @C@@@Y         GETCX .                    GET DIGIT   @D@Z@YBH
)@@G@@         IF    A8,GE,'0',I THEN,LXNDC2 . -> NUMBER    @D@@@Z         IF BI
)@@G@@   A8,LT,'9'+1,I THEN,LXNDC2 . -> NUMBER  @E@@@Y         LOAD  A3,ACQNS,BJ
)@@G@@I .    SET QUALIFIED NAME SEPARATOR @ @@@Y         STORE A3,DLXACN .    BK
)@@G@@@C@@@Y         MOVE  DLXCLN,LXQN,I .     SET CLASS    @D@@@Y         LINBL
)@@G@@K  LXRERR .            REREAD NEXT TIME   @C@@@Y         GOTO  LXCRTN . BM
)@@G@@            -> RETURN   @#@@@YLXNDC2   LABEL .  @^@@@Y         LOAD  X1,BN
)@@G@@R1 .  @^@@@Y         LOAD  A1,R2 .  @C@@@Y         LOAD  A8,'.',I .     BO
)@@G@@     SET . TO READ@C@@@YLXNCON   LABEL .   NUMBER CONSTANT ENTRY POINT  BP
)@@G@@@E@@@Y         LOAD  F,0010,I .          SET FLAG REG TO LZ SWITCH@D@@@YBQ
)@@G@@         LOADA A3,KFZERO .         CLEAR TO '000000'  @G@@@Y         LOABR
)@@G@@DA A2,DLXCON .                                       *******@G@@@Y      BS
)@@G@@   LOAD  R1,18,I .                                         *******@G@@@YBT
)@@G@@         LINK MO$VEZ .             FILL WIRH ZEROES              *******BU
)@@G@@@C@@@Y         MOVE  DLXCON+18,DLXZER,2 .  SET 0E+000 @E@@@Y         MOVBV
)@@G@@E DCVINT,0,I .         SET PREVIOUS DIGIT TO 0  @F@@@Y         MOVE  DCVBW
)@@G@@SV,KBLANK .      CLEAR WORD 1 OF DIGIT AREA     @E@@@Y         LOAD  A3,BX
)@@G@@1,I .            INITIALIZE AT 1 WORD     @C@@@Y         SETL  A4,4,I . BY
)@@G@@           4 CHAR/WORD  @C@@@Y         STORED A3,DCVFFT .        SAVE VABZ
)@@G@@LUES  @G@@@Y         SETPC 4,DLXCON .          STORE NUMBER INTO COLLEXTCA
)@@G@@ION AREA    @#@@@Y         PUTC .   @D@@@Y         MOVE  DLXCS,'+',I .  CB
)@@G@@      SET TO + NUMBER   @C@@@Y         LOAD  A9,0,I .            # DIGITCC
)@@G@@S=0   @D@@@Y.         L0AD  A10,0,I.            # LEADING O'S =0  @ @@@YCD
)@@G@@         STORE A8,DCVINT .    @E@@@Y         GOTO  LXNLQ1 .            -CE
)@@G@@> HAVE FIRST CHARACTER  @#@@@YLXNLOP   LABEL .  @D@@@Y         GETCX .  CF
)@@G@@                  GET NEXT CHARACTER@#@@@YLXNLQ    LABEL .  @C@@@Y      CG
)@@G@@   LINK  LXPC .              SAVE CHAR    @#@@@YLXNLQ1   LABEL .  @^@@@YCH
)@@G@@         USING WORD,X3 .@G@@@Y         LOADA X3,LXTRTB .         POINT TCI
)@@G@@O MAIN TOKEN CRACKING TABLE   @G@@@Y         ADD   X3,A8 .             PCJ
)@@G@@OINT TO ENTRY FOR THIS CHARACTER    @G@@@Y         LOAD  X3,W1Q2 .      CK
)@@G@@     HEY OFFSET IN NUMBER CRACKING PART   @C@@@Y         GOTO  LXNQP,X3 CL
)@@G@@.          GO TO ROUTINE@B@@@YLXNQP    LABEL .   START OF NUMBER CRACKERCM
)@@G@@@F@@@Y         GOTO  LXNLPN .            SAVE CHARACTER AND ENT NUMBER  CN
)@@G@@@#@@@YLXNLP2   LABEL .  @C@@@Y         SET   0001,ON .           B IS ILCO
)@@G@@LEGAL @#@@@YLXNLP1   LABEL .  @D@@@Y         SET   0010,OFF .          TCP
)@@G@@URN OFF LZ SWITCH @#@@@YLXNLP3   LABEL .  @F@@@Y         PUTC  .        CQ
)@@G@@           PUT DIGIT IN COLLEXTION AREA   @#@@@YLXNLP5   LABEL .  @F@@@YCR
)@@G@@         ADD   A9,1,I .            ADD ONE TO NUMBER OF DIGITS    @C@@@YCS
)@@G@@         GOTO  LXNLOP .            -> NEXT DIGIT@C@@@YLXNLPZ   LABEL .  CT
)@@G@@                 ZERO FOUND   @B@@@Y         IF    0010,OFF THEN,LXNLP3 CU
)@@G@@.     @F@@@Y.         ADD   A10,1,I .            ADD 1 IF SIGNIFICANT DICV
)@@G@@GIT   @C@@@Y         SET   0004,ON .           LZ SWITCH ON @B@@@Y.     CW
)@@G@@    IF    0040,OFF THEN,LXNLOP.     @E@@@Y.         SUB   A11,1,I.      CX
)@@G@@      ADJUST CURRENT MODIFIER @C@@@Y         GOTO  LXNLOP .            -CY
)@@G@@> NEXT DIGIT@^@@@YLXNLPD   LABEL .   DIGIT@E@@@Y         IF 0040,ON THENCZ
)@@G@@,LXNER1 .  -> TWO DECIMAL POINTS    @C@@@Y         SET   0040,ON .      DA
)@@G@@     SET . FLAG   @C@@@Y         STORE   A9,DLXCMD .       SET MODIFIER DB
)@@G@@@D@@@Y         GOTO  LXNLOP .            -> GET NEXT DIGIT  @C@@@YLXNEXFDC
)@@G@@   LABEL .                   LOWER CASE E @#@@@Y         UPPERC . @ @@@YDD
)@@G@@LXNEXP   LABEL .   E FOUND    @D@@@Y         LOADA X4,DLXCON+19 .      PDE
)@@G@@OINT TO EXPONENT  @C@@@Y         SET   0400,ON .           SET E FOUND  DF
)@@G@@@A@@@Y.        LOOK FOR EXPONENT SIGN     @#@@@YLXNESG   LABEL .  @A@@@YDG
)@@G@@         GETCX . READ NEXY SYMBOL   @C@@@Y         LINK  LXPC .         DH
)@@G@@     SAVE CHAR    @D@@@Y         IF    A8,EQ,'+',I THEN,LXNEPL . ->+ SIGDI
)@@G@@N     @C@@@Y         IF A8,EQ,'-',I THEN,LXNEMI . - FOUND   @B@@@Y      DJ
)@@G@@   IF    A8,LT,'0',I THEN LXNER4 .  @D@@@Y         IF    A8,GE,'9'+1,I TDK
)@@G@@HEN,LXNER4 ELSE,LXNEDG .@^@@@Y         USING WORD,X4  @A@@@YLXNEMI   LABDL
)@@G@@EL .   MINUS SIGN FOUND @ @@@Y         MOVE  W1Q1,'-',I .   @#@@@YLXNEPLDM
)@@G@@   LABEL .  @D@@@Y         SET   0002,ON .           SET SIGN SWITCH    DN
)@@G@@@D@@@Y         GETCX .                    READ EXPONENT     @C@@@Y      DO
)@@G@@   LINK  LXPC .              SAVE CHAR    @C@@@Y         IF    A8,LT,'0'DP
)@@G@@,I THEN,LXNER5 . ->ERROR@C@@@Y         IF    A8,GE, '9'+1,I THEN,LXNER5 DQ
)@@G@@.     @#@@@YLXNEDG   LABEL .  @F@@@Y         LOAD    A3,W1Q2 .         CDR
)@@G@@HECK TO SEE IF TOO MANY CHARS.@G@@@Y         IF    A3,NE,'0',I  THEN,LXNDS
)@@G@@ER3 . -> TOO MANY DIGITS IN EXPONENT@#@@@YLXNDG1   LABEL .  @C@@@Y      DT
)@@G@@   LOAD  A3,W1Q1 .           SAVE EXPONENT@B@@@Y         LOAD  A4,W1 .  DU
)@@G@@           0DDD   @B@@@Y         SLB   A4,9 .              DDD0   @B@@@YDV
)@@G@@         ADD   A4,A8 .             DDDD   @^@@@Y         STORE A4,W1 .  DW
)@@G@@@D@@@Y         STORE A3,W1Q1 .           RESET EXPONENT     @A@@@Y      DX
)@@G@@   GETCX . READ NEXT CHARACTER@E@@@Y         IF    A8,GE,'9'+1,I THEN,LXDY
)@@G@@NLPN . -> END OF NUMBER @C@@@Y         LINK  LXPC .              SAVE CHDZ
)@@G@@AR    @D@@@Y         IF    A8,GE,'0',I THEN,LXNEDG . -> DIGIT     @E@@@YEA
)@@G@@         IF    A8,EQ,'B',I THEN,LXNBNE . -> BINARY NUMBER   @E@@@Y      EB
)@@G@@   IF    A8,EQ,0142,I THEN,LXNBNF . ->LOWER CASE B    @#@@@YLXNED2   LABEC
)@@G@@EL .  @C@@@Y         IF A8,EQ,'I',I THEN,LXNCMP . IMAGINARY @E@@@Y      ED
)@@G@@   IF    A8,EQ,0151,I THEN,LXNCMQ . ->LOWER CASE I    @A@@@YLXNLPN   LABEE
)@@G@@EL .   END OF NUMER LOOP@C@@@Y         IF    A8,EQ,LXSTOP,I THEN,LXNL0X EF
)@@G@@.     @^@@@Y         LINK  LXRERR . @#@@@YLXNL0X   LABEL .  @A@@@Y      EG
)@@G@@   IF    0040,ON THEN,LXNLO . @G@@@Y         STORE   A9,DLXCMD .       SEH
)@@G@@AVE NUMBER OF DIGITS BEFORE '.'     @#@@@YLXNLO    LABEL .  @F@@@Y      EI
)@@G@@   STORE A9,DLXPRE .         SAVE NUMBER OF DIGITS IN NUMBER@D@@@Y      EJ
)@@G@@   STORE F,DLXFLG .          SAVE FLAGS FOR SYNA@D@@@Y         LOAD  A9,EK
)@@G@@DCVFFT .         SET CALL TO LXSRCH @F@@@Y         SLB   A9,2 .         EL
)@@G@@     NUMBER OF CHARACTERS AT 4/WORD @#@@@YLXN01    LABEL .  @D@@@Y      EM
)@@G@@   STORE A9,DLXSZN .         SAVE STRING SIZE   @H@)@Z         LOADD   AEN
)@@G@@3,DCVFFT .       GET # OF WRDS AND 4-# CHARS-1 IN LAST WD   @H@@@)      EO
)@@G@@   LOADD   A2,DCVFFT .       GET # OF WRDS AND 4-# CHARS-1 IN LAST WD   EP
)@@G@@@F@)@Z         ADD     A4,1,I .          4 - # OF CHARS IN LAST WORD    EQ
)@@G@@@F@@@)         ADD     A3,1,I .          4 - # OF CHARS IN LAST WORD    ER
)@@G@@@E@@@)         MPYS    A3,9,I .          NUMBER OF BITS TO SHIFT  @E@)@ZES
)@@G@@         LOAD    A6,DCVSV-1,A3 .   GET LAST WORD WORKED ON  @E@@@)      ET
)@@G@@   LOAD    A6,DCVSV-1,A2 .   GET LAST WORD WORKED ON  @F@)@Z         LSSEU
)@@G@@C    A6,0,A4 .         SHIFT BLANKS TO RIGHT OF WORD  @F@@@)         LSSEV
)@@G@@C    A6,0,A3 .         SHIFT BLANKS TO RIGHT OF WORD  @E@)@Z         STOEW
)@@G@@RE   A6,DCVSV-1,A3 .   STORE BACK INTO STRING   @E@@@)         STORE   AEX
)@@G@@6,DCVSV-1,A2 .   STORE BACK INTO STRING   @D@@@Y         LOADA A9,DCVSV EY
)@@G@@.          POINT TO STRING    @ @@@Y         STORE A9,DLXBCN .    @A@@@YEZ
)@@G@@         MOVE  DLXCLN,LXIDCN,I .    @C@@@Y         GOTO  LXND41 .       FA
)@@G@@      ->RETURN    @#@@@YLXPC     LLOC .   @C@@@Y         LOADD A3,DCVFFTFB
)@@G@@ .         SET REGS     @C@@@Y         LOAD  A6,DCVSV-1,A3 .     GET WORFC
)@@G@@D     @E@@@Y         SLB   A6,9 .              LEAVE SPACE FOR CHARACTERFD
)@@G@@@D@@@Y         ADD   A6,DCVINT .         ADD LAST CHARACTER @E@@@Y      FE
)@@G@@   STORE A8,DCVINT .         SAVE DIGIT FOR NECT TIME @ @@@Y        STORFF
)@@G@@E  A6,DCVSV-1,A3 .@E@@@Y         LOOP  A4,LXPC2 .          -> MORE CHARSFG
)@@G@@ IN WORD    @C@@@Y         ADD   A3,1,I .            ADD 1 TO WORD@^@@@YFH
)@@G@@         SETL  A4,4,I . @D@@@Y         LOAD  A6,KBLANK .         CLEAR NFI
)@@G@@EXT WORD    @ @@@Y         STORE A6,DCVSV-1,A3 .@#@@@YLXPC2    LABEL .  FJ
)@@G@@@C@@@Y         STORED A3,DCVFFT .        RESET REGS   @C@@@Y         LJMFK
)@@G@@P .                    -> RETURN    @^@@@YLXND40   EQU   LXCRTN . @^@@@YFL
)@@G@@LXND41   EQU   LXCRTN . @[@@@Y/ .   @^@@@Y         USING WORD,X4 .@#@@@YFM
)@@G@@LXNBNF   LABEL .  @E@@@Y         UPPERC .                  CONVERT TO UPFN
)@@G@@PER CAS B   @C@@@YLXNBNE   LABEL .                   FOUND 'B'    @#@@@YFO
)@@G@@LXNBIN   LABEL .  @D@@@Y         IF    0001,ON THEN,LXNER6 . -> ILLEGAL FP
)@@G@@'B'   @#@@@YLXNBN2   LABEL .  @C@@@Y         SET   0100,ON .           SFQ
)@@G@@ET B FOUND  @^@@@Y         LINK  LXPC .   @#@@@YLXNBN3   LABEL .  @D@@@YFR
)@@G@@         GETCX .                    GET NEXT CHARACTER@D@@@Y         IF FS
)@@G@@   A8,EQ,0151,I THEN,LXNCMQ . LOWER CASE I@D@@@Y         IF    A8,NE,'I'FT
)@@G@@,I THEN,LXNLPN . -> END NUMBER@#@@@YLXNCMQ   LABEL .  @E@@@Y         UPPFU
)@@G@@ERC .                  CONVERT I TO UPPER CAS   @#@@@YLXNCMP   LABEL .  FV
)@@G@@@D@@@Y         SET   0200,ON .           SET 'I' SWITCH     @E@@@Y      FW
)@@G@@   GETCX .                    READ NECT CHARACTER     @C@@@Y         GOTFX
)@@G@@O  LXNLPN .            -> END NUMBER@^@@@Y.        ERROR MESSAGES @#@@@YFY
)@@G@@LXNER1   LABEL .  @D@-@Y         LXERR LXER20 .            2 DECIMAL POIFZ
)@@G@@NTS   @C@-@Y         GOTO  LXNLPN .            -> END NUMBER@ @@@-.     GA
)@@G@@   'TWO DECIMAL POINTS' @ @@@-         LINK    LXIOSV .     @H@@@-      GB
)@@G@@   ONUNIT  LXER20,ACCDER,1  RDGBFS,LXNLPN,LXNLPN  DEXWK1,4  DEXMAX,0    GC
)@@G@@@#@@@YLXNER2   LABEL .  @D@-@Y         LXERR LXER21 .            E AT ENGD
)@@G@@D OF CARD   @C@-@Y         GOTO LXNLPN .             -> END NUMBER@ @@@-GE
)@@G@@.        'E AT END OF CARD'   @ @@@-         LINK    LXIOSV .     @H@@@-GF
)@@G@@         ONUNIT  LXER21,ACCDER,1  RDGBFS,LXNLPN,LXNLPN  DEXWK1,4  DEXMAXGG
)@@G@@,0    @#@@@YLXNER3   LABEL .  @G@-@Y         LXERR LXER22 .            TGH
)@@G@@OO MANY DIGITS USE LASE 3 (IN EXP)  @D@-@Y         GOTO  LXNDG1 .       GI
)@@G@@     -> FINISH EXPONENT @C@@@-.        'TOO MANY DIGITS - USE LAST 3 (INGJ
)@@G@@ EXP)'@ @@@-         LINK    LXIOSV .     @H@@@-         ONUNIT  LXER22,GK
)@@G@@ACCDER,1  RDGBFS,LXNDG1,LXNDG1  DEXWK1,4  DEXMAX,0    @#@@@YLXNE3A   LABGL
)@@G@@EL .  @D@-@Y         LXERR LXER22 .            TOO MANY DIGITS    @C@-@YGM
)@@G@@         GOTO  LXNED2 .            -> USE LAST 3@ @@@-.        'TOO MANYGN
)@@G@@ DIGITS'    @ @@@-         LINK    LXIOSV .     @H@@@-         ONUNIT  LGO
)@@G@@XER22,ACCDER,1  RDGBFS,LXNED2,LXNED2  DEXWK1,4  DEXMAX,0    @#@@@YLXNER5GP
)@@G@@   LABEL .  @#@@@YLXNER4   LABEL .  @D@-@Y         LXERR LXER23 .       GQ
)@@G@@     ILLEGAL EXPONENT   @C@-@Y         GOTO  LXNLPN .            -> END GR
)@@G@@NUMBER@ @@@-.        'ILLEGAL EEXPONENT'  @ @@@-         LINK    LXIOSV GS
)@@G@@.     @H@@@-         ONUNIT  LXER23,ACCDER,1  RDGBFS,LXNLPN,LXNLPN  DEXWGT
)@@G@@K1,4  DEXMAX,0    @#@@@YLXNER6   LABEL .  @E@-@Y         LXERR LXER24 . GU
)@@G@@           ILLEGAL BUNARY NUMBER    @E@-@Y         GOTO  LXNBN3 .       GV
)@@G@@     -> TREAT AS NON BINARY   @A@@@-.        'ILLEGAL BINARY NUMBER'    GW
)@@G@@@ @@@-         LINK    LXIOSV .     @H@@@-         ONUNIT  LXER24,ACCDERGX
)@@G@@,1  RDGBFS,LXNBN3,LXNBN3  DEXWK1,4  DEXMAX,0    @^@@@Y/ .      PARSE STRGY
)@@G@@INGS  @#@@@YLXSCON   LABEL .  @E@@@Y         MOVE  DLXCON,KBLANK,20 .  CGZ
)@@G@@LEAR COLLECTION AREA    @F@@@Y         SETPC 4,DLXCON .          SETUP SHA
)@@G@@TRING COLLECTION AREA   @C@@@Y         LOAD  A9,0,I .            LENGTH=HB
)@@G@@0     @D@@@Y         LOAD  F,0,I .             CLEAR FLAG REG     @#@@@YHC
)@@G@@LXSCLP   LABEL .  @D@@@Y         GETCX .                    GET NEXT CGAHD
)@@G@@RACTER@B@Z@Y         IF    A8,EQ,'O',I THEN,LXSCD1 .  @B@@@Z         IF HE
)@@G@@   A8,EQ,'0',I THEN,LXSCD1 .  @F@@@Y         IF    A8,EQ,'1',I THEN,LXSCHF
)@@G@@D1 . -> POSSIBLE BINARY STRING@E@@@Y         IF    A8,NE,'''',I THEN,LXSHG
)@@G@@C2 . -> NOT BIT STING   @B@@@YLXSC1    LABEL .                   FOUND 'HH
)@@G@@@D@@@Y         GETCX  .                   READ SECOND QUOTE @F@@@Y      HI
)@@G@@   IF    A8,NE,'''',I THEN,LXSCND . -> NOT ' , END STRING   @#@@@YLXSCADHJ
)@@G@@   LABEL .  @F@@@Y         SET   0001,ON .           SET NOT VALID BIT SHK
)@@G@@TRING DLAG  @#@@@YLXSCD1   LABEL .  @D@@@Y         ADD   A9,1,I .       HL
)@@G@@     ADD ONE TO LENGTH  @G@@@Y         PUTC .                    PUT CHAHM
)@@G@@RACTER INTO COLLECTION AREA   @D@@@Y         GOTO  LXSCLP .            -HN
)@@G@@> READ NEXT INPUT @#@@@YLXSC2    LABEL .  @C@@@Y         IF    A8,NE,LXSHO
)@@G@@TOP,I THEN,LXSCAD .     @#@@@YLXSCND   LABEL .  @E@@@Y         STORE A8,HP
)@@G@@DLXCHR .         SAVE LAST CHAR, MAYBE 'B'@F@@@Y         IF    0001,OFF HQ
)@@G@@THEN,LXSCBD .   -> SO FAR VALID BIT STRING@C@@@Z         LINK    LXRERR HR
)@@G@@.          REREAD TOKEN @#@@@YLXSCE1   LABEL .  @E@@@Y         MOVE  DLXHS
)@@G@@CLN,LXIDCS,I .   SET CHARACTER STRING FLAG@D@@@Y         STORE A9,DLXSZNHT
)@@G@@ .         SET SIZE OF STRING @ @@@Y         LOADA X2,DLXCON .    @ @@@YHU
)@@G@@         STORE X2,DLXBCN .    @^@@@Y         GOTO  LXCRTN . @#@@@YLXSCBDHV
)@@G@@    LABEL . @D@@@Y         LOAD  A8,DLXCHR .         GET NEXT SYMBOL    HW
)@@G@@@D@@@Y         IF   A8,EQ,'B',I THEN,LXSCB1 . -> BINARY B   @D@Z@Y      HX
)@@G@@   IF    A8,NE,0142,I THEN,LXSCE1 . ->END STRING@D@@@Z         IF    A8,HY
)@@G@@NE,0142,I THEN,LXSCE2 . ->END STRING@E@@@Y         SET   040,OFF,A8 . COHZ
)@@G@@NVERT LOWER CASE B TO UPPER   @#@@@YLXSCB1   LABEL .  @F@@@Y         MOVIA
)@@G@@E  DLXCHR,0,I .        CLEAR OUT NEXT SYMBOL BYTE     @ @@@Y         LOAIB
)@@G@@D  F,0100,I .     @C@@@Y         GOTO  LXSCE1 .            -> RETURN    IC
)@@G@@@#@@@YLXSCE2   LABEL .  @^@@@Y         LINK  LXRERR . @^@@@Y         GOTID
)@@G@@O LXSCE1 .  @E@-@YLXER02   EQU   11 .                NAME > 31 CHARACTERIE
)@@G@@S     @E@@@-LXER02   EQU   11 .                NAME > 63 CHARACTERS     IF
)@@G@@@D@@@YLXER04   EQU   12 .                ILLEGAL SYMBOL     @F@@@YLXER21IG
)@@G@@   EQU   14 .                NUMBER ACROSS CARD BOUNDARY    @F@@@YLXER05IH
)@@G@@   EQU   15 .                STRING ACROSS CARD BOUNDARY    @F@@@YLXER20II
)@@G@@   EQU   17 .                2 DECIMAL POINTS IN NUMBER     @F@@@YLXER22IJ
)@@G@@   EQU   18 .                TOO MANY DIGITS IN EXPONENT    @D@@@YLXER23IK
)@@G@@   EQU   19 .                ILLEGAL EXPONENT   @E@@@YLXER24   EQU   20 IL
)@@G@@.                ILLEGAL BINARY NUMBER    @E@@@YLXER26   EQU   21 .     IM
)@@G@@           ILLEGAL SYMBOL IN NUMBER @H@@@YLXER63   EQU     47 .         IN
)@@G@@     NAME NOT IN HASH TABLE  (TEMP**********)   @#@@@Y         END .    IO
)@@G@@___         GET NEXT CHARACTER@D@@@Y         IF *[S@@@*SDFF*@C@@@#.   COIP
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@#.     @D@@@#.   QUESTIONIQ
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@#.     @ @@@#.        MARIR
)@@G@@VIN V. ZELKOWITZ  @B@@@#.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@#IS
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@#.        COLLEGE PARK, MARYLANIT
)@@G@@D 20742     @[@@@#.     @G@@@#.        PERMISSION TO USE THESE LISTINGS IU
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@#.   REPRESENT IS GRANTED UNDER THE FIV
)@@G@@OLLOWING CONDITIONS:    @[@@@#.     @G@@@#.        1. UNLIMITED USE MAY IW
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@#.   THESE LISTINGS PROVIIX
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@#.   PL/1 COMPILER IY
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@#.     @F@@@#.        2. IZ
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@#.     @G@@@#JA
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   JB
)@@G@@@G@@@#.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRJC
)@@G@@OGRAM @E@@@#.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  JD
)@@G@@@[@@@#.     @G@@@#.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAJE
)@@G@@L CORRECTIONS     @F@@@#.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLJF
)@@G@@ BE REPORTED AND  @G@@@#.        A BRIEF DESCRIPTION OF THE FEATURE ADDEJG
)@@G@@D SHALL BE SUBMITTED    @C@@@#.        TO THE UNIVERSITY OF MARYLAND, ANJH
)@@G@@D     @[@@@#.     @F@@@#.        (C) NO PROGRAMS DERIVED FROM THESE LISTJI
)@@G@@INGS SHALL BE SOLD@G@@@#.        WITHOUT WRITTEN APPROVAL FROM THE UNIVEJJ
)@@G@@RSITY OF MARYLAND, AND  @[@@@#.     @F@@@#.        (D) COPIES OF THESE PJK
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@#.        LOCATIONS PROVIDED THJL
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@#.        WHETHER THE PROJM
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@#.        MARYLAND JN
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@#.     @G@@@#.        3. JO
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@#.   ANJP
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@#.   THJQ
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@#.   EXPERIMEJR
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@#.   IS NOT SJS
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@#.   FRJT
)@@G@@OM PLUM.    @[@@@#.     @[@@@#.     @[@@@#.     @[@@@#.     @[@@@#.     JU
)@@G@@@[@@@#/.    @#@@@]         AXR$ .   @#@@@]         DCLRG .  @#@@@]      JV
)@@G@@   UNLIST . @]@@@]@ADD PLTVDS @#@@@]         LIST .   @]@@@]@ADD EXCDS  JW
)@@G@@@]@@@]@ADD IOSET  @#@@@]         CEND .   @#@@@]         PLSD .   @#@@@]JX
)@@G@@         PLAR .   @#@@@]         PLAC .   @#@@@]         PLIOCB . @#@@@]JY
)@@G@@         PLWORD . @#@@@]EXGP     CSECT 3 .@ @@@]         USING AREC,X10 JZ
)@@G@@.     @B@@@]/.       GET STATEMENT - OPEN AND CLOSE   @A@@@]IFCL*    PROKA
)@@G@@C  *1,2  .   IF CLOSE   @ @@@]         XOR,U  A3,IFCL(1,1) .@ @@@]      KB
)@@G@@   JZ A4,IFCL(1,2) .    @#@@@]         END .    @A@@@]IFNCL*   PROC *1,2KC
)@@G@@ .    IF NOT CLOSE@ @@@]         XOR,U A3,IFNCL(1,1) .@ @@@]          JNKD
)@@G@@Z A4,IFNCL(1,2) . @#@@@]         END .    @[@@@].     @C@@@].        EXGKE
)@@G@@TOP                    GET OPEN     @[@@@].     @#@@@]EXGTOP*  LOCAL .  KF
)@@G@@@D@@@]         LOAD    R8,X1 .           GET SKIP COUNT     @D@@@]      KG
)@@G@@   LOAD    R7,X2 .           GET SD POINTER     @ @@@]         USING   AKH
)@@G@@REC,X10 .   @A@@@]         MOVE    ARWORK+1,0,I .     @A@@@]         MOVKI
)@@G@@E    ARWORK+2,0,I .     @D@@@]         LOAD  X5,X11 .            SAVE PTKJ
)@@G@@R TO FLAGS  @C@@@]         LINK  EXIOIN .            SAVE REGS    @#@@@#KK
)@@G@@RDOP00   LABEL .  @D@@@]         LOADA  X3,KFDIN .         POINT TO 'SYSKL
)@@G@@IN'   @C@@@]         LINK  WRGTIO .            GET IOCB     @F@@@#      KM
)@@G@@   IF      IOCBRC,OFF,IOCBF2  THEN,RDOP01 . NOT RECORD I/O  @A@ @#      KN
)@@G@@   EXERR   ERIO11 LEVEL,2 .   @F@@@          ONUNIT  ERIO11,ACCDER,2  RDKO
)@@G@@GBFS,I,R  DEXWK1,4  DEXMAX,0  @ @@@#         USING   IOCB,X3 .    @C@@@#KP
)@@G@@         LOAD    F,IOCBF1 .        GET FLAGS    @ @@@#         LOAD    XKQ
)@@G@@6,0,I .     @C@@@#         WRCLOS .                  CLOSE FILE   @E@@@#KR
)@@G@@         GOTO    RDOP00 .          TRY AGAIN W/O RECORD I/O @#@@@#RDOP01KS
)@@G@@   LABEL .  @D@@@]         IF    IOCBOP,ON  THEN,RDOP02 . ->OPEN FILE   KT
)@@G@@@#@@@]RDOP04   LABEL .  @C@@@]         RDOPEN RDOP43,RDOP43,WRNDD1 . OPEKU
)@@G@@N FILE@#@@@]RDOP02   LABEL .  @D@@@]         IF    IOCBIN,ON THEN,RDOP43KV
)@@G@@  . SEE IF INPUT  @D@#@]         LOADA A8,IOCBSD .         POINT TO FILEKW
)@@G@@ NAME @C@@@#         LOAD A8,R7 .         POINT TO FILE NAME@E@ @]      KX
)@@G@@   EXERR ERIO00 LEVEL,1 .    FILE NOT OPEN FOR INPUT  @H@@@          ONUKY
)@@G@@NIT  ERIO00,ACCDER,1  RDGBFS,RDOP04,RDOP04  DEXWK1,4  DEXMAX,0    @C@ @]KZ
)@@G@@         GOTO  RDOP04 .            -> TRY AGAIN @#@@@]RDOP43   LABEL .  LA
)@@G@@@D@@@]         STORE X3,ARWORK .         SAVE PTR TO IOCB   @E@@@]      LB
)@@G@@   LOAD  A7,IOCBLF-FH1 .     CHARS-1 LEFT INBUFFER    @^@@@]         SSALC
)@@G@@   A7,18.   @D@@@]         IF    A7,LT,0,I THEN,RDOP44 . -> EMPTY BUFFERLD
)@@G@@@C@@@]         LOAD  A1,IOCBA1 .         SET TO READ  @ @@@]         LOALE
)@@G@@D  X1,IOCBX1 .    @ @@@]         LOADXI  A1,1,I .     @ @@@]         LOALF
)@@G@@DXI  X1,1,I .     @^@@@]         GOTO  RDOP10 . @C@@@]RDOP44   LABEL  . LG
)@@G@@                 END OF BUFFER@^@@@]         USING WORD,X5 .@F@@@]      LH
)@@G@@   IF    ICGTFF,OFF,W1Q4 THEN,RDOP45 . ->NO FILE OPTION     @C@@@]      LI
)@@G@@   STORE R7,IOCBSD .         SAVE SD PTR  @#@@@]RDOP45   LABEL .  @C@@@]LJ
)@@G@@         LINK RDSKIP .             READ RECORD  @#@@@]RDOP10   LABEL .  LK
)@@G@@@C@@@]         MOVE  ARWORK+1,W1 .       SAVE FLAGS   @E@@@]         IF LL
)@@G@@   ICGTSF,OFF,W1Q4  THEN,IORET1 .  ->NO SKIP    @D@#@]         LOAD  A9,LM
)@@G@@R8 .             GET  SKIP COUNT    @D@@@#         LOAD  A10,R8 .       LN
)@@G@@      GET  SKIP COUNT   @E@#@]         IF    A9,GT,0,I THEN,RDOP15 .   >LO
)@@G@@O, ->VALID SKIP   @E@@@#         IF    A10,GT,0,I THEN,RDOP15 .   >O, ->LP
)@@G@@VALID SKIP  @B@#@]         LOAD  A9,1,I .            SKIP(1)@C@@@#      LQ
)@@G@@   LOAD  A10,1,I .            SKIP(1)     @#@@@]RDOP15   LABEL    @^@#@]LR
)@@G@@         SETL  A9 .     @^@@@#         SETL  A10 .    @#@@@]RDOP16   LABLS
)@@G@@EL .  @^@@@]         LINK  RDSKIP . @ @#@]         LOOP  A9,RDOP16 .    LT
)@@G@@@ @@@#         LOOP  A10,RDOP16 .   @^@@@]         GOTO  IORET1 . @D@@@]LU
)@@G@@WRNDD1   LABEL .                   OPEN INPUT ERROR   @C@@@]         LOALV
)@@G@@D  X5,0,I .            RETURN CODE  @#@@@]WRNDMG   LABEL .  @D@#@]      LW
)@@G@@   LOADA A8,IOCBSD .         POINT TO FILE NAME @C@@@#         LOAD A8,RLX
)@@G@@7 .         POINT TO FILE NAME@E@ @]         EXERR ERIO01  LEVEL,1 .   ELY
)@@G@@RROR IN FILE 'SDA8'     @F@@@          ONUNIT  ERIO01,ACCDER,1  RDGBFS,ILZ
)@@G@@,R  DEXWK1,4  DEXMAX,0  @^@@@]         GOTO  $+1,X5 . @^@@@]         GOTMA
)@@G@@O  RDOP43 . @^@@@]         GOTO  WROP43 . @D@@@]WRNDD2   LABEL  .       MB
)@@G@@           OPEN OUTPUT ERROR  @C@@@]         LOAD  X5,1,I .            RMC
)@@G@@ETURN CODE  @^@@@]         GOTO  WRNDMG . @[@@@].     @E@@@].        EXGMD
)@@G@@TCL                    GET CLOSE  (STRING ONLY) @[@@@].     @#@@@]EXGTCLME
)@@G@@*  LABEL .  @E@#@]         IF    IOCBTP,OFF,ARWORK+(IN 0,Q4,0,2) THEN,LJMF
)@@G@@MP .  @D@@@#         IF    IOCBTP,OFF,ARWORK+FQ4+2 THEN,LJMP .    @D@#@]MG
)@@G@@         MOVE  AREPTR,ARWORK+(IN 0,H2,0,0) .  POP TEMP@C@@@#         MOVMH
)@@G@@E  AREPTR,ARWORK+FH2 .  POP TEMP    @#@@@]         LJMP  .  @B@@@]/.    MI
)@@G@@   PUT STATEMENT   OPEN AND CLOSE   @[@@@].     @C@@@].        EXPTOP   MJ
)@@G@@                 PUT OPEN     @[@@@].     @#@@@]EXPTOP*  LOCAL .  @D@@@]MK
)@@G@@         LOAD    R8,X1 .           GET SKIP COUNT     @D@@@]         LOAML
)@@G@@D    R7,X2 .           GET SD POINTER     @A@@@]         MOVE    ARWORK+MM
)@@G@@2,0,I .     @E@#@]         MOVE    ARWORK+(IN 0,H1,0,1),01000,I . SET PUMN
)@@G@@T STMT@D@@@#         MOVE    ARWORK+FH1+1,01000,I . SET PUT STMT  @D@@@]MO
)@@G@@         LOAD  X5,X11 .            SAVE PTR TO FLAGS  @C@@@]         LINMP
)@@G@@K  EXIOIN .            SAVE REGS    @#@@@#WROP00   LABEL .  @D@@@]      MQ
)@@G@@   LOADA X3,KFDOUT .         GET 'SYSPRINT'     @^@@@]         LINK  WRGMR
)@@G@@TIO . @F@@@#         IF      IOCBRC,OFF,IOCBF2  THEN,WROP01 .  NOT RECORMS
)@@G@@D I/O @A@ @#         EXERR   ERIO11 LEVEL,2 .   @F@@@          ONUNIT  EMT
)@@G@@RIO11,ACCDER,2  RDGBFS,I,R  DEXWK1,4  DEXMAX,0  @C@@@#         LOAD    FMU
)@@G@@,IOCBF1 .        GET FLAGS    @ @@@#         LOAD    X6,0,I .     @#@@@#MV
)@@G@@         WRCLOS.  @E@@@#         GOTO    WROP00 .          TRY AGAIN W/OMW
)@@G@@ RECORD I/O @#@@@#WROP01   LABEL .  @C@@@]         IF    IOCBOP,ON THEN,MX
)@@G@@WROP02 .  ->OPEN  @#@@@]WROP04   LABEL .  @D@@@].        SET   IOCBPT,ONMY
)@@G@@ .         ASSUME PRINT FILE  @D@@@]         MOVE  IOCBLZ,DZZLZ .     SEMZ
)@@G@@T DEFAULT LINESIZE@D@@@]         WROPEN WROP44,WROP43,WRNDD2 .  ->OPEN FNA
)@@G@@ILE   @#@@@]WROP02   LABEL .  @E@@@]         IF    IOCBOT,ON THEN,WROP45NB
)@@G@@ .  ->OPEN FOR OUTPUT   @D@#@]         LOADA A8,IOCBSD .         POINT TNC
)@@G@@O FILE NAME @C@@@#         LOAD A8,R7 .         POINT TO FILE NAME@A@ @]ND
)@@G@@         EXERR ERIO23 LEVEL,1 .     @H@@@          ONUNIT  ERIO23,ACCDERNE
)@@G@@,1  RDGBFS,WROP04,WROP04  DEXWK1,4  DEXMAX,0    @E@ @]         GOTO  WRONF
)@@G@@P04 .                 -> TRY TO OPEN IT   @#@@@]WROP43   LABEL .  @ @#@]NG
)@@G@@         LOAD  A7,IOCBLF .    @ @@@#         LOAD  A7,IOCBLF-FH1 .@^@@@#NH
)@@G@@         SSA     A7,18 .@^@#@]         SSA   A7,18 .  @D@@@]         IF NI
)@@G@@   A7,GE,0,I THEN,WROP03 .  BUFFER OK     @#@@@]WROP44   LABEL    @D@@@]NJ
)@@G@@         MOVE  IOCBLN,0,I .             SET TO LINE O @#@@@]WROP45   LABNK
)@@G@@EL .  @D@@@]         STORE R7,IOCBSD .         SAVE SD OF FILE    @G@@@]NL
)@@G@@         IF      IOCBST,ON THEN,WROP03 . DON'T RESET IF ALREADY STARTED NM
)@@G@@@ @@@]         SETL  A7,IOCBLZ .    @ @@@]         STORE A7,IOCBLF .    NN
)@@G@@@#@@@]WROP03   LABEL  . @ @#@]         LOAD  A7,IOCBLF .    @ @@@#      NO
)@@G@@   LOAD  A7,IOCBLF-FH1 .@^@@@#         SSA     A7,18 .@ @@@]         LOANP
)@@G@@D  A2,IOCBA1 .    @ @@@]         LOAD  X2,IOCBX1 .    @^@@@]         LOANQ
)@@G@@DXI A2,1,I .@^@@@]         LOADXI X2,1,I .@C@@@]         STORE X3,ARWORKNR
)@@G@@ .         SAVE IOCB PTR@#@@@]WROP10   LABEL .  @^@@@]         USING WORNS
)@@G@@D,X5 .@E@@@]         IF    ICGTPF,OFF,W1Q4 THEN,WROP11 .    ->NO PAGE   NT
)@@G@@@E@@@]         IF    IOCBPT,ON THEN,WROP12 .  -> PAGE PRINT FILE  @E@@@]NU
)@@G@@         LOADA A8,WRPAGM .        'PAGE' OPTION INVALID     @A@ @]      NV
)@@G@@   EXERR ERIO1X LEVEL,1 .     @ @@@          ONER    ERIO1X,1 .   @C@@@]NW
)@@G@@         GOTO  WROP11 .            -> CHECK SKIP@#@@@]WROP12   LABEL .  NX
)@@G@@@C@@@]         LINK  WRPAGE .            PUT PAGE     @#@@@]WROP11   LABNY
)@@G@@EL .  @F@@@]         IF    ICGTSF+ICGTLN,OFF,W1Q4 THEN,IORET1 . ->NO SKINZ
)@@G@@P     @D@#@]         LOAD  A9,R8 .             GET SKIP NUMBER    @D@@@#OA
)@@G@@         LOAD  A10,R8 .             GET SKIP NUMBER   @F@@@]         IF OB
)@@G@@   ICGTSF,OFF,W1Q4 THEN,WROP13 .    ->LINE OPTION     @E@#@]         IF OC
)@@G@@   A9,GE,0,I THEN,WROP15 .  ->POSITIVE SKIP     @E@@@#         IF    A10OD
)@@G@@,GE,0,I THEN,WROP15 .  ->POSITIVE SKIP    @D@@@]         LOAD  X5,IOCBLNOE
)@@G@@  .             PRINT LINE    @ @@@]         MOVE  IOCBLN,0,I .   @D@@@]OF
)@@G@@         LINK  WRSKIP  .                PRINT LINE    @ @@@]         STOOG
)@@G@@RE X5,IOCBLN .    @E@@@]         MOVE  IOCBSK,0,I .             NO PAGE OH
)@@G@@MOVEMENT    @ @@@]         SET   IOCBST,ON .    @C@@@]         GOTO  IOROI
)@@G@@ET1 .                 ->RETURN@#@@@]WROP15   LABEL .  @F@@@]         IF OJ
)@@G@@   IOCBPT,ON THEN,WROP16 .  IF NOT PRINT ONLY SKIP 1  @B@#@]         LOAOK
)@@G@@D    A9,1,I .          SKIP 1 @B@@@#         LOAD    A10,1,I .          OL
)@@G@@SKIP 1@#@@@]WROP16   LABEL .  @D@#@]         SETL  A9 .                 OM
)@@G@@    SET SKIP COUNT@E@@@#         SETL  A10 .                     SET SKION
)@@G@@P COUNT     @#@@@]WROP17   LABEL .  @C@@@]         LINK  WRSKIP .       OO
)@@G@@          SKIP    @ @#@]         LOOP  A9,WROP17 .    @ @@@#         LOOOP
)@@G@@P  A10,WROP17 .   @C@@@]         GOTO  IORET1 .                 ->RETURNOQ
)@@G@@@#@@@]WROP14   LABEL .  @^@@@]         LINK  WRLINE . @C@@@]         GOTOR
)@@G@@O  IORET1 .                 ->RETURN@#@@@]WROP13   LABEL .  @G@@@]      OS
)@@G@@   IF    IOCBPT,ON THEN,WROP14 .  ->LINE OPTION ON PRINT FILE-OK  @F@@@]OT
)@@G@@         LOADA A8,WRLINM .              'LINE' OPTION INVALID     @A@ @]OU
)@@G@@         EXERR ERIO1X LEVEL,1 .     @ @@@          ONER    ERIO1X,1 .   OV
)@@G@@@D@@@]         GOTO  IORET1 .            ->IGNORE COMMAND   @[@@@].     OW
)@@G@@@C@@@].        WRGTIO                    GET IOCB     @[@@@].     @F@@@]OX
)@@G@@         USING WORD,X5 .           X5-> FLAGS IN CALLER'S CORE    @#@@@]OY
)@@G@@WRGTIO*  LOCAL .  @C@@@]         LOAD  A3,W1Q4,X5 .     GET I/O FLAGS   OZ
)@@G@@@E@#@]         STORE A3,ARWORK+(IN 0,Q3,0,2) .  SAVE I/O TYPE     @C@@@#PA
)@@G@@         STORE A3,ARWORK+FQ3+2 .  SAVE I/O TYPE @D@@@]         MOVE  IODPB
)@@G@@TAF,0,I .        RESET NUMBER FLAG  @E@@@]         MOVE  ARFMAT,0,I .   PC
)@@G@@     NOT IN REMOTE FORMAT     @E@@@]         IF    ICGTKF,ON,W1Q4 THEN,WPD
)@@G@@ROPST .  ->STRING I/O   @F@@@]         IF    ICGTFF,OFF,W1Q4 THEN,WROP32PE
)@@G@@ .  ->USE SYSIN/SYSPRINT@C@@@]         LOAD  X3,R7 .             POINT TPF
)@@G@@O SD  @ @@@]         USING SDSECT,X3 .    @D@@@]         LOADA X3,SDIOFNPG
)@@G@@ .         POINT TO FILENAME  @#@@@]WROP32   LABEL .  @C@@@]         WRIPH
)@@G@@OCB .                  GET IOCB     @^@@@]         USING IOCB,X3 .@[@@@]PI
)@@G@@.     @C@#@].        THE COUNT BOF IS NOT IN ANSII STANDARD @C@@@#.     PJ
)@@G@@   THE COUNT BIF IS NOT IN ANSII STANDARD @[@@@].     @C@@@].         MOPK
)@@G@@VE  IOCBCN,0,I .        COUNT=O .   @#@@@]WROP33   LABEL .  @ @@@]      PL
)@@G@@   LOAD  F,IOCBF1 .     @C@@@]         JMP   .                   ->RETURPM
)@@G@@N     @[@@@].     @^@@@].        STRING I/O     @[@@@].     @#@@@]WROPSTPN
)@@G@@   LABEL .  @^@@@]         USING WORD,X5  @E@@@]         POP   1 .      PO
)@@G@@ DELETE RETURN ADDRESS FROM STACK   @E@@@]         LOADA X3,ARWORK .    PP
)@@G@@    BUFFER TO STRING WORKSPACE@B@@@]         LOAD  X5,R7 .             GPQ
)@@G@@ET DV @D@@@]         LOAD  F,IOCBSR,I .       SET STRING I/O .    @E@@@]PR
)@@G@@         IF    X5,NZERO THEN,WROP20 .   ->NOT TEMP STRING   @ @@@]      PS
)@@G@@   LOAD  X5,AREPTR .    @^@@@]         SUB   X5,2,I . @D@@@]         ADDPT
)@@G@@   F,IOCBTP,I .        SET TEMP STRING    @#@@@]WROP20   LABEL .  @ @@@]PU
)@@G@@         USING ARDVDT,X5 .    @ @@@]         STORE X5,IOCBAD .    @D@#@]PV
)@@G@@         LOAD  A2,KSCH6W .         SET TO WRITE STRING@D@@@#         LOAPW
)@@G@@D  A2,KSCH4W .         SET TO WRITE STRING@ @@@]         LOAD  X2,ARDVPTPX
)@@G@@ .    @C@@@]         ADD   F,IOCBOT,I .       SET OPTOUT    @D@@@]      PY
)@@G@@   LOAD  A7,ARDVML .         ASSUME MAX LENGTH  @H@#@]         IF    010PZ
)@@G@@00,ON,ARWORK+(IN 0,H1,0,1) THEN,WROPS1 . ->WRITE STRING     @F@@@#      QA
)@@G@@   IF    01000,ON,ARWORK+FH1+1 THEN,WROPS1 . ->WRITE STRING @D@@@]      QB
)@@G@@   LOAD  A7,ARDVCL .         CURRENT LENGTH     @E@@@]         IF    ARDQC
)@@G@@VUN,OFF,ARDVKY THEN,WROPS2 . -> VALID     @E@ @]         EXERR EXSTRI LEQD
)@@G@@VEL,2 .    UNINITIALIZED STRING     @ @@@          ONER    EXSTRI,1 .   QE
)@@G@@@#@@@]WROPS2   LABEL .  @C@@@]         LXOR  F,IOCBIN+IOCBOT,I .  SET TOQF
)@@G@@ INPUT@^@@@]         LOAD  X1,X2 .  @ @#@]         LOAD  A1,KLCH6W .    QG
)@@G@@@ @@@#         LOAD  A1,KLCH4W .    @#@@@]WROPS1   LABEL .  @#@@@]      QH
)@@G@@   SETL  A7.@C@@@]         GOTO  IORET1 .            ->RETURN     @[@@@]QI
)@@G@@.     @D@@@].        EXPTCL.                   CLOSE PUT STMT     @[@@@]QJ
)@@G@@.     @#@@@]EXPTCL*  LOCAL .  @^@@@]         LINK  EXIOIN . @D@#@]      QK
)@@G@@   LOAD  A3,ARWORK+(IN 0,Q3,0,2) .  GET I/O TYPE@C@@@#         LOAD  A3,QL
)@@G@@ARWORK+FQ3+2 .  GET I/O TYPE  @ @@@]         AND,U A3,ICGTLF .    @E@@@]QM
)@@G@@         IF    A4,NE,ICGTDF,I THEN,WRCLI4 . -> NOT DATA STMT@D@@@]      QN
)@@G@@   PUTCH ';' .               CLOSE PUT DATA     @#@@@]WRCLI4   LABEL .  QO
)@@G@@@E@@@]         IF    IOCBSR,OFF THEN,WRCLIR .  ->NOT STRING, DONE @B@@@]QP
)@@G@@         LOAD  X5,IOCBAD .         GET DV @ @@@]         USING ARDVDT,X5QQ
)@@G@@ .    @D@@@]         SET   ARDVUN,OFF,ARDVKY . SET UNIT FLAG OFF  @E@@@]QR
)@@G@@         IF    ARDVVR,ON,ARDVKY THEN,WRCLI3 .  ->VARYING    @D@@@]      QS
)@@G@@   LOAD  A8,' ',I .          PAD WITH BLANKS    @#@@@]WRCLSM   LABEL .  QT
)@@G@@@#@@@]         PUTC  .  @ @@@]         LOOP  A7,WRCLSM .    @C@@@]      QU
)@@G@@   GOTO  IORET0 .            ->RETURN     @#@@@]WRCLI3   LABEL .  @D@@@]QV
)@@G@@         LOAD  A3,ARDVML .         GET MAX LENGTH     @^@@@]         SUBQW
)@@G@@   A3,A7 .  @D@@@]         SUB   A3,1,I .            CURRENT LENGTH     QX
)@@G@@@E@@@]         STORE A3,ARDVCL .         SET AS CURRENT LENGTH    @C@@@]QY
)@@G@@         GOTO  IORET0 .            ->RETURN     @D@@@]WRCLIR   LABEL .  QZ
)@@G@@                 SEE IF R OPTION    @E@@@]         IF    1,OFF,DGOPT4 THRA
)@@G@@EN,IORET0 . ->NO R OPTION     @E@@@]         IF    IOCBST,OFF THEN,IORETRB
)@@G@@0 . ->BUFFER NOT STARTED@A@@@].        SEE IF ANY CHARS IN BUFFER @ @@@]RC
)@@G@@         SETL  A3,IOCBLZ .    @D@@@]         IF    A3,EQ,A7 THEN,IORET0 RD
)@@G@@. ->FULL BUFFER   @C@@@]         LINK  WRSKIP .            PRINT BUFFER RE
)@@G@@@ @@@]         GOTO  IORET0 . ->QUIT@#@@@]/.       GET LIST @[@@@].     RF
)@@G@@@C@@@].        EXGTLT                    GET LIST     @[@@@].     @#@@@]RG
)@@G@@EXGTLT*  LOCAL .  @E@@@]         GETLNK X5 .               POINT TO FLAGRH
)@@G@@S IN CORE   @C@@@]         LINK  EXIOIN .            INITIALIZE   @C@@@]RI
)@@G@@         MOVE  IONUM,0,I .         CLEAR FLAGS  @D@@@]         LINK  RDCRJ
)@@G@@PYS .            INITIALIZE COPY    @^@@@]         USING WORD,X5 .@C@@@]RK
)@@G@@         MOVE  IODED,W1 .          SAVE DED     @D@@@]         LINK  RDLRL
)@@G@@IST .            GET NEXT DATA ITEM @#@@@]IORETA   LABEL .  @ @@@]      RM
)@@G@@   MOVE  AREPTR,IOSTLT .@C@@@]         GOTO  IORET1 .            -> RETURN
)@@G@@RN    @[@@@].     @D@@@].        RDLIST                    DATA ITEM REARO
)@@G@@D     @[@@@].     @#@@@]RDLIST*  LOCAL .  @ @@@]         MOVE  IOSTLT,ARRP
)@@G@@EPTR .@[@@@].     @C@#@].        THE COUNT BOF IS NOT IN ANSII STANDARD RQ
)@@G@@@C@@@#.        THE COUNT BIF IS NOT IN ANSII STANDARD @[@@@].     @E@@@]RR
)@@G@@.         LINK  WRCNT .             UP NO OF ITEMS READ     @E@@@]      RS
)@@G@@   IF    SDARST,ON,IODCL1 THEN,RDSTRG . -> STRING DATA@C@@@]         LINRT
)@@G@@K  RDNUMB .            GET NUMBER   @F@@@]         IF    01,ON,IONUM THERU
)@@G@@N,JMP .   ->ERROR, NO CONVERSION    @E@@@]         SETL  R2,2,I .       RV
)@@G@@     LOOP TWICE IF COMPLEX    @#@@@]RDLST2   LABEL .  @C@@@]         MOVRW
)@@G@@E  DCVTL,IODCLS .      SETUP CONVERT@C@@@]         MOVE  DCVLQP,IODSP . RX
)@@G@@     SETUP TARGET @D@@@]         STORE F,IOCBF1 .          SAVE I/O FLAGRY
)@@G@@S     @ @@@]         MOVE DCVARL,IODTA5   @D@@@]         LOAD  F,ION1FG RZ
)@@G@@.          GET TYPE READ IN   @^@@@]         STORE F,DCVTR .@D@@@]      SA
)@@G@@   IF    SDDCBN,ON THEN,RDLT41 .  ->BINARY DATA @E@@@]         LOADA X5,SB
)@@G@@ION1FF .         ASSUME FIXED DECIMAL     @C@@@]         IF    SDFXFL,OFSC
)@@G@@F THEN,RDLT42 . ->YUP   @D@@@]         LOADA X5,ION1FL .         ->FLOATSD
)@@G@@ DECIMAL    @#@@@]RDLT42   LABEL .  @ @@@]         MOVE  DCVRQP,IONDQP .SE
)@@G@@@C@@@]         GOTO  RDLT40 .            ->CONVERT    @#@@@]RDLT41   LABSF
)@@G@@EL .  @D@@@]         LOADA X5,ION1IN .         ASSUME FIXED BINARY@C@@@]SG
)@@G@@         IF    SDFXFL,OFF THEN,RDLT43 .  ->YUP  @C@@@]         LOADA X5,SH
)@@G@@ION1FL .         FLOAT BINARY @#@@@]RDLT43   LABEL .  @ @@@]         MOVSI
)@@G@@E  DCVRQP,IONBQP .@#@@@]RDLT40   LABEL .  @D@@@]         STORE X5,DCVARRSJ
)@@G@@ .          SET SOURCE ADDR   @D@@@]         LOAD  F,IOCBF1 .          RSK
)@@G@@ESET I/O FLAGS    @B@@@]         LINK  EXCN .              CONVERT@E@@@]SL
)@@G@@         IF    SDRLCX,OFF,IODCLS THEN,JMP . -> NOT COMPLEX  @D@@@]      SM
)@@G@@   LOAD  X5,IODTA5 .         GET TARGET ADDRESS @E@@@]         ADD   X5,SN
)@@G@@2,I .            POINT TO COMPLEX ADDRESS @C@@@]         IF    SDFXFL,ONSO
)@@G@@,IODCLS THEN,RDLT48 .   @C@@@]         IF    SDDCBN,OFF,IODCLS THEN,RDLTSP
)@@G@@48 .  @^@@@]         SUB   X5,1,I . @#@@@]RDLT48   LABEL .  @D@@@]      SQ
)@@G@@   STORE X5,IODTA5 .         ADDR OF COMPLEX    @E@@@]         MOVE  IONSR
)@@G@@1IN,DCVINT,DCVSIZ     MOVE COMPLEX ITEM . @C@@@#         MOVE    ION1FG,SS
)@@G@@DCVFLG .   MOVE FLAGS   @C@@@]         LOOP  R2,RDLST2 .         -> DO CST
)@@G@@OMPLEX@B@@@]         JMP .                     RETURN @[@@@].     @C@@@]SU
)@@G@@.        RDSTRG                    READ STRING  @[@@@].     @#@@@]RDSTRGSV
)@@G@@*  LABEL .  @E@@@]         IF    IOCMA,ZERO THEN,RDST01 . ->LAST NOT COMSW
)@@G@@MA    @#@@@]RDST03   LABEL .  @C@@@]         LINK  IORDTK .            GSX
)@@G@@ET TOKEN    @D@@@]         IF    IOCMA,NZERO THEN,JMP .   ->IGNORE ,,   SY
)@@G@@@D@@@]         GOTO  RDST02 .            ->CHECK FOR STRING @#@@@]RDST01SZ
)@@G@@   LABEL .  @C@@@]         LINK  IORDTK .            READ TOKEN   @E@@@]TA
)@@G@@         IF    IOCMA,NZERO THEN,RDST01 . -> FIRST COMMA     @#@@@]RDST02TB
)@@G@@   LABEL .  @D@@@]         IF    LXIDCS,ON,DLXCLN THEN,RDST04 . ->STRINGTC
)@@G@@@D@@@]         LINK  IORDER .            WRONG TOKEN TYPE   @C@@@]      TD
)@@G@@   GOTO  RDST03 .            TRY AGAIN    @#@@@]RDST04   LABEL .  @ @@@]TE
)@@G@@         STORE A1,IOCBA1 .    @C@@@]         LOAD  A2,IODTA5 .         STF
)@@G@@ET TARGET   @C@@@]         MOVE  IOFMDV,0,I .       CLEAR FLAGS   @D@@@]TG
)@@G@@         LOADA A3,DLXCON .         POINT TO STRING    @E@@@]         STOTH
)@@G@@RE A3,IONADR .         STORE POINTER IN D.V.    @D@#@]         LOADA A3,TI
)@@G@@IONADR .         NOW POINT TO D.V.  @D@#@]         LOAD  A4,DLXSZN .    TJ
)@@G@@     GET CHAR COUNT     @D@@@]         LOADA  X11,EXCCA .      ASSUME CHTK
)@@G@@AR STRING   @D@#@]         IF    SDCHBT,OFF THEN,RDST05 . ->NOT BIT     TL
)@@G@@@E@@@#         IF    SDCHBT,OFF,IODCLS THEN,RDST05 . ->NOT BIT    @C@@@]TM
)@@G@@         LOADA  X11,EXBBA .      BIT ASSIGNMENT @#@@@]RDST05   LABEL .  TN
)@@G@@@ @@@]         USING WORD,X11 .     @D@@@#         LOADA A3,IONADR .    TO
)@@G@@     NOW POINT TO D.V.  @D@@@#         LOAD  A4,DLXSZN .         GET CHATP
)@@G@@R COUNT     @E@@@]         STORE A4,IONMLN .         SET LENGTH IN DOPE TQ
)@@G@@VECTOR@ @@@]         STORE A4,IONCLN .    @C@@@]         STORE   F,IOCBFTR
)@@G@@1 .        SAVE FLAGS   @^@@@]         LINK  0,X11 .  @C@@@]         LOATS
)@@G@@D    F,IOCBF1 .        RESTORE FLAGS@C@@@]         LOAD  A1,IOCBA1 .    TT
)@@G@@     RESET A1     @^@@@]         LOADXI A1,1,I .@B@@@]         JMP .    TU
)@@G@@                 RETURN @[@@@].     @C@@@].        RDNAME               TV
)@@G@@     READ NAME    @[@@@].     @#@@@]RDNAME*  LOCAL .  @#@@@]RDNM01   LABTW
)@@G@@EL .  @C@@@]         LINK  IORDTK .            GET TOKEN    @C@@@]      TX
)@@G@@   LOAD  A3,DLXCLN .         GET CLASS    @D@@@]         IFCL  LXCM,RDNMTY
)@@G@@01 .       ->IGNORE COMMA     @B@@@]         IFCL  LXRSWD,RDNMD1 .     -TZ
)@@G@@>';'  @#@@@]RDNAM1   LABEL    @C@@@]         IFCL  LXID,JMP1 .         -UA
)@@G@@>VALID NAME @E@@@]         IF    A3,LT,020,I THEN,JMP1 . (ARE YOU SURE??UB
)@@G@@?)    @D@#@]         LOAD  A8,DLXIDN .         GET BCD POINTER    @E@ @]UC
)@@G@@         EXERR ERIO08 LEVEL,1 .    BCA8 IS INVALID NAME     @ @@@       UD
)@@G@@   LINK    ONIOSN .     @F@@@          ONUNIT  ERIO08,ACCDNA,1  RDGBFS,IUE
)@@G@@,R  DEXWK1,4  DEXMAX,0  @#@@@]RDNMD1   LABEL .  @C@@@]         SET   01,UF
)@@G@@ON,IONUM .       ERROR FLAG   @C@@@]         JMP   .                   -UG
)@@G@@> RETURN    @[@@@].     @C@@@].        RDNUMB                    READ NUUH
)@@G@@MBER  @[@@@].     @#@@@]RDNUMB*  LOCAL .  @E@@@]         MOVE  ION1IN,ZEUI
)@@G@@RO,DCVSIZ       CLEAR WORKSPACE     @C@@@]         PUTLNK RDNS00,I .    UJ
)@@G@@     SET STATE O  @E@@@]         IF    IOCMA,NZERO THEN,IORDTK . IGNORE UK
)@@G@@IF COMMA    @D@@@]                         .         IF COMMA, RETURN   UL
)@@G@@@^@@@]         LINK  IORDTK . @#@@@]RDNS10   LABEL .  @E@@@]         IF UM
)@@G@@   IOCMA,ZERO THEN,RDNS11 . ->NOT FIRST COMMA   @#@@@]RDNS1Y   LABEL .  UN
)@@G@@@^@@@]         LINK  IORDTK . @#@@@]RDNS00   LABEL .  @E@@@]         IF UO
)@@G@@   IOCMA,NZERO THEN,RDNMD1 . 2 COMMAS,IGNORE    @#@@@]RDNS11   LABEL .  UP
)@@G@@@C@@@]         LOAD  A8,DLXCLN .         SEE IF SIGN  @E@@@]         IF UQ
)@@G@@   A8,NE,LXPS,I THEN,RDNS01 . ->NOPE,NUMBER     @ @@@]         LOAD A3,DUR
)@@G@@LXACN .     @C@@@]         IF    A3,NE,ACBMN,I THEN,RDNSIX . SET -@C@@@]US
)@@G@@         SET   0100,ON,IONUM .     SET - FLAG . @#@@@]RDNSIX   LABEL    UT
)@@G@@@C@@@]         LINK  IORDTK .            GET NUMBER   @#@@@]RDNS01   LABUU
)@@G@@EL .  @#@@@]RDNS20   LABEL .  @ @@@]         AND,U A8,LXIDCN .    @C@@@]UV
)@@G@@         IF    A9,NE,0,I THEN,RDNS21 . ->NUMBER @^@@@]         LINK  IORUW
)@@G@@DER . @C@@@]         GOTO  RDNS1Y .            TRY AGAIN    @#@@@]RDNS21UX
)@@G@@   LABEL .  @D@@@]         IF    0100,OFF,IONUM THEN,RDNS22 . ->+ NUMBERUY
)@@G@@@B@@@]         MOVE  DLXCS,'-',I .       SET -  @A@@@]         SET   010UZ
)@@G@@0,OFF,IONUM .     @#@@@]RDNS22   LABEL .  @F@@@]         STORE   F,IOCBFVA
)@@G@@1 .                              *********@B@@@]         LINK       CVNUVB
)@@G@@M .        CONVERT@F@@@]         LOAD    F,IOCBF1 .                     VC
)@@G@@         *********@E@@@]         IF    DLXCI,ON,DLXFLG THEN,RDNS03 . ->1VD
)@@G@@MAG PART    @C@@@]         MOVE  ION1IN,DCVINT,DCVSIZ .   SET REAL@C@@@#VE
)@@G@@         MOVE    ION1FG,DCVFLG .   MOVE FLAGS   @D@@@]         MOVE  DCVVF
)@@G@@INT,ZERO,DCVSIZ .     CLEAR IMAG    @#@@@]RDNS04   LABEL .  @F@@@]      VG
)@@G@@   IF    A7,LT,0,I THEN,JMP . -> END OF CARD, IGNORE NO.    @C@#@]      VH
)@@G@@   LINK  RDGET1 .            SET IF BLANK @ @@@#         SUB     A7,1,I VI
)@@G@@.     @ @@@#         ADD     A9,1,I .     @#@@@]         GETC .   @E@@@]VJ
)@@G@@         IF    A8,EQ,' ',I THEN,JMP . BLANK,END OF NUMBER   @C@@@]      VK
)@@G@@   LINK  LXRERD .            REREAD TOKON @C@@@]         LINK  IORDTK . VL
)@@G@@           GET TOKON    @C@@@]         IF    IOCMA,NZERO THEN,JMP .   ->VM
)@@G@@COMMA @ @@@]         LOAD A3,DLXACN .     @D@@@]         IF    A3,NE,ACSVN
)@@G@@EMI,I THEN,RDNS06 . ->NOT ';' @#@@@]RDNS07   LABEL .  @F@@@]         IF VO
)@@G@@   ICGTDF,OFF,IOCBSF THEN,RDNSX6 . ->NOT DATA STMT    @A@@@]          LIVP
)@@G@@NK  LXRERD .   REREAD ; @#@@@]         JMP .    @#@@@]RDNSX6   LABEL .  VQ
)@@G@@@^@@@]         LINK  IORDER . @#@@@]         JMP   .  @#@@@]RDNS06   LABVR
)@@G@@EL .  @ @@@]         LOAD A3,DLXCLN .     @D@@@]         IF    A3,EQ,LXPVS
)@@G@@S,I THEN,RDNS25 .   ->SIGN    @D@@@]RDNS26   LABEL.                    NVT
)@@G@@OT N+NI, MISSING +@^@@@]         LINK  IORDER . @C@@@]         GOTO  RDNVU
)@@G@@S1Y .            -> TRY AGAIN @#@@@]RDNS25   LABEL .  @ @@@]         LOAVV
)@@G@@D A3,DLXACN .     @C@@@]         IF    A3,EQ,ACBPL,I THEN,RDNS05 . ->+  VW
)@@G@@@ @@@]         SET   0100,ON,IONUM .@#@@@]RDNS05   LABEL .  @F@@@]      VX
)@@G@@   IF    LXIDCN,OFF,DLXCLN THEN,RDNS26 .    ->NOT NUM,ERROR @E@@@]      VY
)@@G@@   IF    DLXCI,OFF,DLXFLG THEN,RDNS26  .    ->NOT IMAG@E@@@]         IF VZ
)@@G@@   0100,OFF,IONUM THEN, RDNS27 .      ->NOT -   @ @@@]         MOVE  DLXWA
)@@G@@PS,'-',I .  @A@@@]         SET   0100,OFF,IONUM .     @#@@@]RDNS27   LABWB
)@@G@@EL .  @F@@@]         STORE   F,IOCBF1 .                              ***WC
)@@G@@******@^@@@]         LINK  CVNUM .  @F@@@]         LOAD    F,IOCBF1 .   WD
)@@G@@                           *********@#@@@]RDNS03   LABEL .  @F@#@]      WE
)@@G@@   IF    A3,LT,0,I THEN,JMP .     ->END OF CARD, RETURN     @F@@@#      WF
)@@G@@   IF    A7,LT,0,I THEN,JMP .     ->END OF CARD, RETURN     @^@#@]      WG
)@@G@@   LINK  RDGET1.  @ @@@#         SUB     A7,1,I .     @ @@@#         ADDWH
)@@G@@     A9,1,I .     @B@@@#. DO WE NEED GETC HERE AS IN REAL PART    @B@@@]WI
)@@G@@         IF    A8,EQ,' ',I THEN,JMP .     @^@@@]         LINK  LXRERD . WJ
)@@G@@@^@@@]         LINK  IORDTK . @D@@@]         IF    IOCMA,NZERO THEN,JMP WK
)@@G@@ELSE,RDNS07 .     @[@@@].     @C@@@].        IORDTK                    RWL
)@@G@@EAD A TOKEN @[@@@].     @#@@@]IORDTK*  LOCAL .  @E@@@A         LINK    OWM
)@@G@@NIOSC .          SAVE REGS FOR ONSOURCE   @E@@@]         MOVE  IOCMA,0,IWN
)@@G@@ .         TURN OFF COMMA FLAG .    @#@@@]IORDT3   LABEL .  @C@@@]      WO
)@@G@@   LINK  EXLXI .            GET TOKEN     @D@@@]         GOTO  IORDT1 . WP
)@@G@@           -> END OF IMAGE    @ @@@]         LOAD A8,DLXCLN .     @B@@@]WQ
)@@G@@         IF    A8,NE,LXCM,I THEN,IORDT4 . @ @@@]         MOVE  IOCMA,1,IWR
)@@G@@ .    @#@@@]IORDT4   LABEL .  @F@@@#         IF      010,OFF,DSPLYA  THEWS
)@@G@@N,IORDT6 .   ON => EXDB CALL  @F@@@#         IF      A8,NE,LXRP,I  THEN,WT
)@@G@@IORDT5 .  MAKE ) LOOK LIKE ,  @ @@@#         MOVE    IOCMA,1,I .  @#@@@#WU
)@@G@@IORDT5   LABEL .  @^@@@#         JMP .   RETURN @#@@@#IORDT6   LABEL .  WV
)@@G@@@ @@@]         STORE A1,DLXX2 .     @ @@@]         STORE X1,DLXX1 .     WW
)@@G@@@ @@@]         LOADXM A1,IOCBA1 .   @ @@@]         LOADXM X1,IOCBX1 .   WX
)@@G@@@^@@@]         LINK  RDCOPY . @ @@@]         LOADXM A1,DLXX2 .    @ @@@]WY
)@@G@@         LOADXM X1,DLXX1 .    @#@@@]         JMP .    @#@@@]IORDT1   LABWZ
)@@G@@EL .  @D@@@]         IF    IOCBSR,ON THEN,IORDT2 .  ->STRING GET  @^@@@]XA
)@@G@@         LINK  RDGBUF . @C@@@]         GOTO  IORDT3 .            TRY AGAXB
)@@G@@IN    @#@@@]IORDT2   LABEL .  @C@ @]         EXERR ERIO09 LEVEL,1 .    EXC
)@@G@@ND OF STRING@ @ @#         LINK    RDGBFS .     @ @@@          LINK    OXD
)@@G@@NIOSN .     @H@@@          ONUNIT  ERIO09,ACCDER,1  RDGBFS,RDGBFS,RDGBFSXE
)@@G@@  DEXWK1,4  DEXMAX,0    @#@#@]         JMP   .  @#@@@#FILL(1)   CSECT 3 XF
)@@G@@@#@@@#WRIOSM    SFW  0  @^@@@#         '*ERROR* '     @[@@@].     @C@@@]XG
)@@G@@.        IORDER                    TOKEN ERROR  @[@@@].     @#@@@]IORDERXH
)@@G@@*  LOCAL .  @ @#@]         LOADA A8,DLXSPN .    @D@#@]         EXERR ERIXI
)@@G@@O10 LEVEL,1 .    BCA8 IS ILLEGAL    @D@ @#         EXERR ERIO10 LEVEL,1 XJ
)@@G@@.    TOKEN IS ILLEGAL   @ @@@          LINK    ONIOSN .     @F@@@       XK
)@@G@@   ONUNIT  ERIO10,ACCDER,1  RDGBFS,I,R  DEXWK1,4  DEXMAX,0  @^@@@]      XL
)@@G@@   LINK  IORDTK . @#@@@]         JMP   .  @#@@@]         CSECT 3 .@#@#@]XM
)@@G@@WRLINM   SFW  0 . @ @#@]FILL(1)  SF      '^LINE '     @D@@@#WRLINM   INSXN
)@@G@@ERT  4,'LIN','E   ' .  INSERT FOR MESSAGE @#@#@]WRPAGM   SFW  0 . @ @#@]XO
)@@G@@FILL(1)  SF      '^PAGE ' .   @B@@@#WRPAGM   INSERT  4,'PAG','E   ' .  'XP
)@@G@@'     @#@@@]         CEND     @E@@@]ERIO00   EQU  28 .                 FXQ
)@@G@@ILE NOT OPEN FOR INPUT  @E@@@]ERIO01   EQU  29 .                 ERROR IXR
)@@G@@N FILE 'SDA8'     @E@@@]ERIO23   EQU  34 .                 FILE NOT OPENXS
)@@G@@ FOR OUTPUT @D@@@]ERIO1X   EQU  30 .                 PAGE OPTION INVALIDXT
)@@G@@@D@@@]ERIO08   EQU  31 .                 BCA8 IS INVALID    @C@@@]ERIO09XU
)@@G@@   EQU  32 .                 END OF STRING@D@@@]ERIO10   EQU  33 .      XV
)@@G@@           BCA8 IS ILLEGAL    @^@^@#ERIO11   EQU     35 .   @^@@@^ERIO11XW
)@@G@@   EQU     13 .   @E@@@]EXSTRI   EQU   50 .                UNINITIALIZEDXX
)@@G@@ STRING     @]@@@]         END___LINK       CVNU*[S@@@*SDFF*@C@@@#.   COXY
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@#.     @D@@@#.   QUESTIONXZ
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@#.     @ @@@#.        MARYA
)@@G@@VIN V. ZELKOWITZ  @B@@@#.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@#YB
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@#.        COLLEGE PARK, MARYLANYC
)@@G@@D 20742     @[@@@#.     @G@@@#.        PERMISSION TO USE THESE LISTINGS YD
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@#.   REPRESENT IS GRANTED UNDER THE FYE
)@@G@@OLLOWING CONDITIONS:    @[@@@#.     @G@@@#.        1. UNLIMITED USE MAY YF
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@#.   THESE LISTINGS PROVIYG
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@#.   PL/1 COMPILER YH
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@#.     @F@@@#.        2. YI
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@#.     @G@@@#YJ
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   YK
)@@G@@@G@@@#.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRYL
)@@G@@OGRAM @E@@@#.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  YM
)@@G@@@[@@@#.     @G@@@#.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAYN
)@@G@@L CORRECTIONS     @F@@@#.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLYO
)@@G@@ BE REPORTED AND  @G@@@#.        A BRIEF DESCRIPTION OF THE FEATURE ADDEYP
)@@G@@D SHALL BE SUBMITTED    @C@@@#.        TO THE UNIVERSITY OF MARYLAND, ANYQ
)@@G@@D     @[@@@#.     @F@@@#.        (C) NO PROGRAMS DERIVED FROM THESE LISTYR
)@@G@@INGS SHALL BE SOLD@G@@@#.        WITHOUT WRITTEN APPROVAL FROM THE UNIVEYS
)@@G@@RSITY OF MARYLAND, AND  @[@@@#.     @F@@@#.        (D) COPIES OF THESE PYT
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@#.        LOCATIONS PROVIDED THYU
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@#.        WHETHER THE PROYV
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@#.        MARYLAND YW
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@#.     @G@@@#.        3. YX
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@#.   ANYY
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@#.   THYZ
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@#.   EXPERIMEZA
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@#.   IS NOT SZB
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@#.   FRZC
)@@G@@OM PLUM.    @[@@@#.     @[@@@#.     @[@@@#.     @[@@@#.     @[@@@#.     ZD
)@@G@@@[@@@#/.    @#@@@]/        AXR$     @#@@@]         DCLRG .  @#@@@]      ZE
)@@G@@   UNLIST   @]@@@]@ADD PLTVDS @]@@@]@ADD EXCDS  @]@@@]@ADD IOSET  @#@@@]ZF
)@@G@@         LIST     @^@@@]IODTA    EQU   IOCMA .  @#@@@]         CEND     ZG
)@@G@@@#@@@]         PLSD     @#@@@]        PLAC .    @#@@@]         PLAR     ZH
)@@G@@@#@@@]         PLIOCB   @#@@@]         PLWORD   @#@@@]EDIT     CSECT 3  ZI
)@@G@@@F@#@]KKSTAR   SFW     0 .               A WORD OF STARS FOR EDIT OUTPUTZJ
)@@G@@@H@#@]         +'******' .                                              ZK
)@@G@@   SIX STARS@#@@@]RDMPY    SFW   0 .@A@@@]         FMPYD A9,KKPW10-2,X5 ZL
)@@G@@.     @#@@@]RDDIV    SFW   0 .@A@@@]         FDIVD A9,KKPW10-2,X5 .     ZM
)@@G@@@^@@@]DWRZRO   EQU   KFZERO . @ @@@]         USING AREC,X10 .     @^@@@]ZN
)@@G@@         USING IOCB,X3 .@^@@@]/ .      FORMAT ROUTINES@^@@@].        R8=ZO
)@@G@@ PTR TO DED @^@@@].        X11=PTR TO FED @A@@@].        R,R6,R7=FORMAT ZP
)@@G@@OPERANDS    @A@@@].        R2,R3,R4=COMPLEX OPERANDS  @ @@@].        A5=ZQ
)@@G@@DATUM ADDRESS     @^@@@]EXGTED*          LLOC . @E@@@]         STORE X11ZR
)@@G@@,AREXFT+FH2 .           SAVE PTR TO FED   @F@@@]         LINK    EXEDST ZS
)@@G@@.          GO UNDO X TO R REGISTER CHANGES@C@@@]         LINK  EXIOIN . ZT
)@@G@@           SAVE REGS    @C@@@]         LOAD  A10,0,I .           GET EDIZU
)@@G@@T     @C@@@#         LINK    RDCPYS .          COPY OPTION  @#@@@]EXCMMNZV
)@@G@@   LABEL .  @D@@@]         LOAD  X5,AREXFT .             PTR TO FED     ZW
)@@G@@@D@@@]         MOVE  RDCFLG,0,I .        CLEAR COMPLEX FLAG @E@@@]EXCMPXZX
)@@G@@   LABEL .                   COMPLEX RETURN POINT     @[@@@].     @D@@@]ZY
)@@G@@.        THE COUNT BIF WAS DELETED FROM THE STANDARD  @[@@@].     @C@@@]ZZ
)@@G@@.         LINK  WRCNT .             COUNT BIF   @C@#@]         LINK  RDCAA
)@@G@@PYS .            COPY OPTION  @^@@@]         USING WORD,X5 .@D@@@]      AB
)@@G@@   LOAD  X4,W1Q1 .           FORMAT ROUTINE     @F@@@]         LOAD  A9,AC
)@@G@@W1Q2 .           SAVE OPERNADS PRESENT FLAGS    @D@@@]         LOAD  X11AD
)@@G@@,RDFMAT,X4 .     ASSUME GET EDIT    @D@@@]         IF    A10,EQ,0,I THENAE
)@@G@@,LJMP . ->YUP, GET EDIT @C@@@]         LOAD  X11,WRFMAT,X4 .     PUT EDIAF
)@@G@@T     @#@@@]         LJMP .   @[@@@].     @[@@@].     @[@@@].     @#@@@]AG
)@@G@@EXPTED*  LLOC .   @D@@@]         STORE X11,AREXFT+FH2 .    SAVE PTR TO FAH
)@@G@@ED    @F@@@]         LINK    EXEDST .          GO UNDO X TO R REGISTER CAI
)@@G@@HANGES@C@@@]         LINK  EXIOIN .            ENTRY POINT  @C@@@]      AJ
)@@G@@   MOVE  IODTA,0,I .         CLEAR FLAGS  @C@@@]         LOAD    A10,IOCAK
)@@G@@BLZ .      GET LINESIZE @C@@@]         SUB     A10,1,I .         GET SIZAL
)@@G@@E-1   @G@@@]         STORE   A10,IOLSTA .      SET LAST TAB TO STOP ''ENAM
)@@G@@D AROUND''  @C@@@]         LOAD  A10,1,I .           SET PUT EDIT @B@@@]AN
)@@G@@         GOTO  EXCMMN .            ->MERGE@[@@@].     @D@@@].        EXEAO
)@@G@@DST - UNDO THE CHANGE TO THE X REGISTERS  @[@@@].     @#@@@]EXEDST   LLOAP
)@@G@@C .   @C@@@]         LOAD    R8,ARDED .        GET DED PTR  @D@#@]      AQ
)@@G@@   SR,H2   R8,0,*A0 .        SAVE RETURN ADDRESS@D@@@#         SR,H2   RAR
)@@G@@8,1,*A0 .        SAVE RETURN ADDRESS@D@@@]         LOAD    R5,W1XU,X1 . AS
)@@G@@     GET FIRST PAREMETER@D@@@]         LOAD    R6,W1XU,X2 .      GET SECAT
)@@G@@OND PRAM    @C@@@]         LOAD    R7,W1XU,X3 .      GET THIRD    @D@@@]AU
)@@G@@         LOADD   A1,X1 .           FIND COMPLEX ONES  @C@@@]         SRBAV
)@@G@@D    A1,18 .           MOVE XI TO XM@E@@@]         LOAD    R2,W1XU,A1 . AW
)@@G@@     GET COMPLEX FIRST PRAM   @E@@@]         LOAD    R3,W1XU,A2 .      GAX
)@@G@@ET SECOND COMPLEX PARM  @C@@@]         LOAD    A1,X3 .           GET LASAY
)@@G@@T SET @D@@@]         SRB     A1,18 .           GET XI INTO XM     @E@@@]AZ
)@@G@@         LOAD    R4,W1XU,A1 .      GET THIRD COMPLEX PARM   @B@@@]      BA
)@@G@@   LJMP .                    RETURN @[@@@].     @[@@@].     @[@@@].     BB
)@@G@@@[@@@].     @ @@@]WRFMAT   EQU   +(IN 0,H1,0,$) @ @@@]RDFMAT   EQU   +(IBC
)@@G@@N 0,H2,0,$) @B@@@]         +WREDTA,RDEDTA .          A     A@B@@@]      BD
)@@G@@   +WREDTB,RDEDTB .          B     B@B@@@]         +WREDTE,RDEDTE .     BE
)@@G@@     E     E@B@@@]         +WREDTF,RDEDTF .          F     F@F@@@]      BF
)@@G@@   +WREDTR,RDEDTR .          P     P (NOT IMPLEMENTED*)     @B@@@]      BG
)@@G@@   +WREDTLN,RDEDTR .         LINE  *@C@@@]         +WREDTSK,RDEDTSK .   BH
)@@G@@     SKIP  SKIP   @B@@@]         +WREDTPG,RDEDTR .         PAGE  *@B@@@]BI
)@@G@@         +WREDTX,RDEDTX .          X     X@C@@@]         +WREDTCL,RDEDTCBJ
)@@G@@L .        COL   COL    @B@@@]         +WREDTC,RDEDTC .          C     CBK
)@@G@@@E@@@]         +WREDTR,RDEDTR .          R     R (COMPILER ERROR) @[@@@]BL
)@@G@@.     @[@@@].     @[@@@].     @D@@@]RDEDTR   LABEL .                   IBM
)@@G@@LLEGAL OPTION     @#@@@]WREDTR   LABEL .  @ @ @]         EXERR ERFM13 LEBN
)@@G@@VEL,2 @ @@@          LINK    ONIOSN .     @F@@@          ONUNIT  ERFM13,BO
)@@G@@ACCDER,2  RDGBFS,I,R  DEXWK1,4  DEXMAX,0  @[@@@].     @[@@@].     @[@@@]BP
)@@G@@.     @F@@@]IORTNM   LABEL .                   RETURN TO DED FOR NEXT DABQ
)@@G@@TUM   @F@@@]         LOAD  A3,RDCFLG .         SEE IF IN MIDST OF COMPLEBR
)@@G@@X     @F@@@]         IF    A3,ODD THEN,WREDC1 .                    ->COMBS
)@@G@@PLEX  @[@@@].     @[@@@].     @[@@@].     @B@@@].        NORMAL RETURN TBT
)@@G@@O NEXT DATUM ITEM @[@@@].     @#@@@]IORETN   LABEL .  @D@@@]         LOABU
)@@G@@D  A3,AREXFT .             POINT TO FED   @^@@@]         ADD   A3,1,I . BV
)@@G@@@F@@@]         STORE A3,AREXFT+FH2 .         UP PTR TO NEW FORMAT CODE  BW
)@@G@@@D@@@]         GOTO  IORET1 .            ->RETURN TO DATUM  @[@@@].     BX
)@@G@@@[@@@].     @[@@@].     @G@@@].        RETURN TO NEXT FORMAT ITEM (CARRIBY
)@@G@@AGE CONTROL FORMAT PROCESSED) @[@@@].     @#@@@]IORETF   LABEL .  @G@@@]BZ
)@@G@@         LOADA   X11,IORTF1 .      COME BACK HERE AFTER FIXING REGS     CA
)@@G@@@D@@@]         LOCAL .                   SET RETURN ADDR    @F@@@]      CB
)@@G@@   GOTO  IORET0 .            -> ''RETURN'', THEN COME HERE  @G@@@]IORTF1CC
)@@G@@   LABEL .                   RESET REG. FOR ADDITIONAL FORMAT     @E@@@]CD
)@@G@@         LOADD   A5,IODTA5 .       POINT TO ADDR OF DATA    @C@@@]      CE
)@@G@@   UNSTK   X11 .             POINT TO DED @D@@@]         LOAD    X5,AREXCF
)@@G@@FT .       GOTO NEXT FMT ITEM @D@@@]         GOTO    1,X5 .            SCG
)@@G@@KIP FED ON RETURN @[@@@].     @[@@@].     @A@@@].        IMPLIED CONVERSCH
)@@G@@ION ERROR   @[@@@].     @[@@@].     @#@@@]WREDTR2  LABEL .  @#@@@]WREDTRCI
)@@G@@4   LABEL . @D@ @]         EXERR ERFM16 LEVEL,2 .    IMPLIED CONVERSION CJ
)@@G@@@C@ @]         GOTO  IORTNM .            ->RETURN     @ @@@          LINCK
)@@G@@K    ONIOSN .     @H@A@          ONUNIT  ERFM16,ACCDCV,2  RDGBFS,IORTNM,CL
)@@G@@IORTNM  DEXWK1,4  DEXMAX,0    @H@@@A         ONUNIT  ERFM16,ACCDER,2  RDCM
)@@G@@GBFS,IORTNM,IORTNM  DEXWK1,4  DEXMAX,0    @C@@@]/ .      COLUMN, LINE, PCN
)@@G@@AGE, SKIP AND X FORMAT  @[@@@].     @[@@@].     @#@@@].        COLUMN   CO
)@@G@@@[@@@].     @[@@@].     @#@@@]RDEDTCL  LABEL .  @F@@@]         IF    A9,CP
)@@G@@EQ,3,I THEN,WREDTR . ->NO COL SPECIFIED, ERROR  @E@@@]         IF    IOCCQ
)@@G@@BSR,ON THEN,WREDTR . ->STRING IO, ERROR   @D@@@]         LOAD  A9,R5 .  CR
)@@G@@           GET COL NUMBER     @E@@@]         IF    A9,GT,0,I THEN,RDECL3CS
)@@G@@ . -> POS COL NUMBER    @D@@@]         LOAD  A9,1,I .            DEFAULTCT
)@@G@@ TO COL 1   @#@@@]RDECL3   LABEL .  @F@@@]         IF    A9,LT,IOCBLZ THCU
)@@G@@EN,RDECL4 .              ->TOO BIG  @D@@@]         LOAD  A9,IOCBLZ .    CV
)@@G@@     SET MAX COL NUMBER @#@@@]RDECL4   LABEL .  @D@@@]         LOAD  A10CW
)@@G@@,IOCBLZ .        SIZE IN RECORD     @C@@@]         SUB   A10,A7 .       CX
)@@G@@     NUMBER LEFT-1@C@#@]         ADD   A10,1,I .           COLUMN NUMBERCY
)@@G@@@G@@@]         IF    A9,EQ,A10 THEN,IORETF .                 ->CORRECT CCZ
)@@G@@OL    @D@@@]         IF    A9,LT,A10 THEN,RDECL1 . ->NEXT LINE    @E@@@]DA
)@@G@@         SUB   A9,A10 .            NUMBER OF CHARS TO RED   @E@@@]      DB
)@@G@@   GOTO  RDGETX .            READ THAT MANY AND IGNORE@#@@@]RDECL1   LABDC
)@@G@@EL .  @C@@@]         LINK  RDSKIP .            NEXT RECORD  @C@@@]      DD
)@@G@@   SUB   A9,1,I .            NEXT BUF     @D@@@]         IF    A9,EQ,0,IDE
)@@G@@ THEN,IORETF . ->AT COL 1     @F@@@]         GOTO  RDGETX .            -DF
)@@G@@>READ RECORD AND IGNORE COLS  @[@@@].     @[@@@].     @[@@@].     @[@@@]DG
)@@G@@.     @[@@@].     @D@@@]WREDTCL  LABEL .                   PUT EDIT COLUDH
)@@G@@MN    @F@@@]         IF    A9,EQ,3,I THEN,WREDTR . -> NO COL NUMBER SPECDI
)@@G@@IFIED @D@@@]         IF    IOCBSR,ON THEN,WREDTR . -> STRING IO   @D@@@]DJ
)@@G@@         LOAD  A9,R5 .             GET COL NUMBER     @C@@@]         LINDK
)@@G@@K  WRECOL .            GO TO COLUMN @E@@@]         GOTO  IORETF .       DL
)@@G@@     ->RETURN TO FORMAT ITEM  @[@@@].     @[@@@].     @[@@@].     @[@@@]DM
)@@G@@.     @F@@@]RDGETX   LABEL .                   READ CHARACTERS COUNT IN DN
)@@G@@A9    @D@@@]         LOAD  A10,A9 .            COUNT OF CHARACTERS@D@@@]DO
)@@G@@         LINK  RDGET .             GET SPACE FOR THEM @D@@@#         DSLDP
)@@G@@     A9,2  .           DIVIDE BY FOUR     @D@@@#         ADD     X1,A9 .DQ
)@@G@@           ADD IN WORD OFFSET @D@@@#         SRB     A10,34 .          FDR
)@@G@@INISH DIVIDEING   @G@#@]RDGTX1   LABEL .                   UP X1 AND A1 DS
)@@G@@PTRS TO INPUT BUFFER    @D@#@]         IF    A10,LT,6,I THEN,RDGTX2 . ->DT
)@@G@@LAST WORD   @^@#@]         SUB   A10,6,I .@^@#@]         ADD   X1,1,I . DU
)@@G@@@^@#@]         GOTO  RDGTX1 . @C@#@]RDGTX2   LABEL .                   LDV
)@@G@@AST WORD    @C@@@]         IF    A10,EQ,0,I THEN,IORETF . -> DONE @D@@@]DW
)@@G@@         SETL A10 .                NUMBER REMAINING   @#@#@]RDGTX3   LABDX
)@@G@@EL .  @#@@@#RDGTX1   LABEL .  @#@@@]         GETC .   @ @#@]         LOODY
)@@G@@P  A10,RDGTX3 .   @ @@@#         LOOP  A10,RDGTX1 .   @C@@@]         GOTDZ
)@@G@@O  IORETF .            -> RETURN    @[@@@]/.    @[@@@].     @#@@@].     EA
)@@G@@   LINE     @[@@@].     @[@@@].     @#@@@]WREDTLN  LABEL .  @H@@@]      EB
)@@G@@   IF    A9,EQ,3,I THEN,WREDTR .                 NO LINE NUMBER SPEC    EC
)@@G@@@D@@@]         IF    IOCBSR,ON THEN,WREDTR . -> STRING IO   @E@@@]      ED
)@@G@@   IF    IOCBPT,OFF THEN,WREDTR . ->NOT PRINT FILE    @^@@@]         LOAEE
)@@G@@D  A9,R5 .  @^@@@]         LINK  WRLINE   @F@@@]         GOTO  IORETF . EF
)@@G@@           ->RETURN TO NEXT FORMAT ITEM   @[@@@].     @[@@@].     @#@@@]EG
)@@G@@.        PAGE     @[@@@].     @[@@@].     @#@@@]WREDTPG  LABEL .  @D@@@]EH
)@@G@@         IF    IOCBSR,ON THEN,WREDTR . -> STRING IO   @E@@@]         IF EI
)@@G@@   IOCBPT,OFF THEN,WREDTR . -> NOT PRINT FILE   @^@@@]         LINK  WRPEJ
)@@G@@AGE . @^@@@]         GOTO  IORETF . @[@@@]/.    @[@@@].     @#@@@].     EK
)@@G@@   SKIP     @[@@@].     @[@@@].     @#@@@]RDEDTSK  LABEL .  @D@@@]      EL
)@@G@@   IF    IOCBSR,ON THEN,WREDTR . -> STRING IO   @C@@@]         SETL  A10EM
)@@G@@,R5 .            SKIP COUNT   @E@@@]         IF    A9,EQ,3,I THEN,RDESK1EN
)@@G@@ . ->DEFAULT SKIP OF 1  @E@@@]         IF    A10,GE,0,I THEN,RDESK2 . ->EO
)@@G@@ POS SKIP COUNT   @#@@@]RDESK1   LABEL .  @C@@@]         SETL  A10,1,I .EP
)@@G@@           DEFAULT OF 1 @#@@@]RDESK2   LABEL .  @^@@@]         LINK  RDSEQ
)@@G@@KIP . @ @@@]         LOOP  A10,RDESK2 .   @F@@@]         GOTO  IORETF . ER
)@@G@@           ->RETURN TO NEXT FORMAT ITEM   @[@@@].     @[@@@].     @[@@@]ES
)@@G@@.     @[@@@].     @[@@@].     @#@@@]WREDTSK  LABEL .  @F@@@]         IF ET
)@@G@@   IOCBSR,ON THEN,WREDTR .                 =>STRING IO@F@@@]         IF EU
)@@G@@   A9,EQ,3,I THEN,WRESK1 .                 ->NO COUNT @C@@@]         SETEV
)@@G@@L  A10,R5 .            SKIP COUNT   @F@@@]         IF    A10,GE,0,I THENEW
)@@G@@,WRESK2 .                ->POS COUNT@D@@@]         IF    IOCBPT,OFF THENEX
)@@G@@,WRESK1 . -> NOT PRINT  @[@@@].     @D@@@].        PRINT FILE, BACKUP TOEY
)@@G@@ CURRENT LINE START     @[@@@].     @^@@@]         LINK  WRSKIP . @ @@@]EZ
)@@G@@         MOVE  IOCBSK,0,I .   @ @@@]         SET   IOCBST,ON .    @D@@@]FA
)@@G@@         GOTO  IORETF .            ->NEXT FORMAT ITEM @#@@@]WRESK1   LABFB
)@@G@@EL .  @C@@@]         SETL  A10,1,I .           DEFAULT 1    @#@@@]WRESK2FC
)@@G@@   LABEL .  @^@@@]         LINK  WRSKIP . @ @@@]         LOOP  A10,WRESKFD
)@@G@@2 .   @^@@@]         GOTO  IORETF . @[@@@]/.    @[@@@].     @]@@@].     FE
)@@G@@   X  @[@@@].     @[@@@].     @#@@@]RDEDTX   LABEL .  @D@@@]         IF FF
)@@G@@   A9,EQ,3,I THEN,WREDTR . ->NO OPERAND   @^@@@]         LOAD  A9,R5 .  FG
)@@G@@@B@@@]         IF    A9,LE,0,I THEN,IORETF .    @E@@@]         GOTO  RDGFH
)@@G@@ETX .            ->READ AND IGNORE CHARS  @#@@@]WREDTX   LABEL .  @D@@@]FI
)@@G@@         IF    A9,EQ,3,I THEN,WREDTR . -> NO OPERANSD @^@@@]         LOAFJ
)@@G@@D  A9,R5 .  @E@@@]         IF    A9,LE,0,I THEN,IORETF . X COUNT MUST BEFK
)@@G@@ >=0  @^@#@]         SETGC 6,KBLANK @^@@@#         SETGC 4,KBLANK @E@@@]FL
)@@G@@         IF    A9,LT,133,I THEN,WREDX1 . -> MAX COUNT OF 132@ @@@]      FM
)@@G@@   LOAD  A9,132,I .     @#@@@]WREDX1   LABEL .  @C@@@]         LINK  WRPFN
)@@G@@FLD .            PUT BLANKS   @^@@@]         GOTO  IORETF . @#@@@]/ .   FO
)@@G@@   COMPLEX  @[@@@].     @[@@@].     @#@@@].        COMPLEX  @[@@@].     FP
)@@G@@@[@@@].     @#@@@]RDEDTC   LABEL .  @#@@@]WREDTC   LABEL .  @D@@@]      FQ
)@@G@@   STORE R5,RDCSVE .         SAVE OP 2 REGS     @ @@@]         STORE R6,FR
)@@G@@RDCSVE+1    @ @@@]         STORE R7,RDCSVE+2 .  @^@@@]         LOAD  R5,FS
)@@G@@R2 .  @^@@@]         LOAD  R6,R3 .  @^@@@]         LOAD  R7,R4 .  @ @@@]FT
)@@G@@         STORE A10,RDCTPE .   @ @@@]         STORE X5,RDCPTR .    @^@@@]FU
)@@G@@         USING WORD,X5 .@C@@@]         MOVE  RDCFTP,W1Q3 . SET FORMAT TYFV
)@@G@@PE    @E@@@]         LOAD  A3,W1Q2 .           GET OPERAND 1-2 FLAGS    FW
)@@G@@@D@@@]         SRB   A3,3 .              OPERAND 1 FLAGS    @ @@@]      FX
)@@G@@   STORE A3,RDCFFG .    @D@@@]         LOADA X5,RDCFED .         POINT TFY
)@@G@@O DUMMY FED @ @@@]         MOVE  RDCFLG,1,I .   @F@@@]         GOTO  EXCFZ
)@@G@@MPX .            ->PROCESS FIRST PART OF COMPLEX@[@@@].     @[@@@].     GA
)@@G@@@[@@@].     @[@@@].     @[@@@].     @H@@@]WREDC1   LABEL .              GB
)@@G@@     PROCESSED FIRST FORMAT ITEM FOR COMPLEX    @ @@@]         MOVE  RDCGC
)@@G@@FLG,2,I .   @E@@@]         LOAD  R5,RDCSVE .         RESTORE OPERAND 2 RGD
)@@G@@EGS   @ @@@]         LOAD  R6,RDCSVE+1    @ @@@]         LOAD  R7,RDCSVEGE
)@@G@@+2 .  @C@@@]         LOAD  X5,RDCPTR .         POINT TO FED @ @@@]      GF
)@@G@@   MOVE  RDCFTP,W1Q4 .  @ @@@]         MOVE  RDCFFG,W1Q2    @ @@@]      GG
)@@G@@   LOADA X5,RDCFED .    @ @@@]         LOAD  A10,RDCTPE .   @C@@@]      GH
)@@G@@   LOAD  A8,IODTA5 .         DATUM ADDRESS@C@@@]         ADD   A8,2,I . GI
)@@G@@           IMAG PART    @B@@@]         LOAD  X4,AREXFT .         DED PTRGJ
)@@G@@@^@@@]         USING WORD,X4 .@E@@@]         IF    SDRLCX,OFF,W1Q2 THEN,GK
)@@G@@WREC003 . ->REAL DATUM  @F@@@]         IF    SDFXFL,ON,W1Q2 THEN,WREC004GL
)@@G@@ . -> 2 WORD NUMBER     @F@@@]         IF    SDDCBN,OFF,W1Q2 THEN,WREC00GM
)@@G@@4 . -> 2 WORD DATUM     @E@@@]         SUB   A8,1,I .            FIXED BGN
)@@G@@INARY (1 WORD)    @#@@@]WREC004  LABEL .  @ @@@]         STORE A8,IODTA5GO
)@@G@@ .    @E@@@]         GOTO  EXCMPX .            ->PROCESS IMAGINARY PART GP
)@@G@@@#@@@]WREC003  LABEL .  @D@@@]         MOVE  RDCSVE,KKD0,2 .     CLEAR WGQ
)@@G@@ORKSPACE    @I@@@]         LOADA A5,RDCSVE .         DUMMY SPACE FOR IMAGR
)@@G@@G READ IN PART (IF INPUT)     @E@@@]         GOTO  WREC004 .           PGS
)@@G@@ROCESS IMAGINARY PART   @^@@@]/ .      A AND B FORMAT @[@@@].     @[@@@]GT
)@@G@@.     @#@@@].        INPUT    @[@@@].     @[@@@].     @#@@@]RDEDTA   LABGU
)@@G@@EL .  @C@@@]         LOAD  A10,10,I .          SET A FORMAT @#@@@]RDEDTBGV
)@@G@@   LABEL .  @F@@@]         IF    A9,EQ,3,I THEN,WREDTR . ->NO SECIFIED FGW
)@@G@@IELD WIDTH  @B@@@]         LOAD  X5,R8 .             DED PTR@^@@@]      GX
)@@G@@   USING WORD,X5 .@E@@@]         IF    SDARST,OFF,W1Q2 THEN,WREDTR2 . ->GY
)@@G@@CONVERSION  @C@@@]         LOAD  X5,IODTA5 . DATUM DOPE VECTOR    @ @@@]GZ
)@@G@@         USING ARDVDT,X5 .    @D@@@]         MOVE  IOFMDV,W1,2 .       SHA
)@@G@@AVE DOPE VECTOR   @E@@@]         SET   ARDVUN,OFF,ARDVKY . SET UNITIALIZHB
)@@G@@ED BIT OFF  @B@@@]         LOAD  A9,R5 .             COUNT  @F@@@]      HC
)@@G@@   IF    A9,LT,1,I THEN,RDEPAD . ->PAD, NULL FIELD WIDTH    @C@@@]      HD
)@@G@@   LINK  RDGET .             READ CHARS   @^@@@]         LOAD  A9,R5 .  HE
)@@G@@@D@@@]         LOAD  X2,IONADR .         POINT TO TARGET    @^@#@]      HF
)@@G@@   SETPC 6,0,X2 . @^@@@#         SETPC 4,0,X2 . @D@@@]         LOAD  A6,HG
)@@G@@IONMLN .         MAX FIELD LENGTH   @G@@@]         IF    A10,NE,0,I THENHH
)@@G@@,RDEDA2 . ->A FMAT, DON'T SKIP BLANKS     @#@@@]RDEDB1   LABEL .  @ @@@]HI
)@@G@@         LOOP  A9,RDEDB2 .    @C@@@]         GOTO  RDEDPX .            -HJ
)@@G@@>PAD STRING @#@@@]RDEDB2   LABEL .  @#@@@]         GETC .   @E@@@]      HK
)@@G@@   IF    A8,EQ,' ',I THEN,RDEDB1 . ->BLANK LEADERS    @#@@@]RDEDA2   LABHL
)@@G@@EL .  @ @@@]         LOOP  A9,RDEDB3 .    @B@@@]         GOTO  RDEDPX . HM
)@@G@@           ->PAD  @#@@@]RDEDB3   LABEL .  @ @@@]         LOOP  A6,RDEDB4HN
)@@G@@ .    @ @@@]         GOTO  RDEDRX .->DONE @#@@@]RDEDB4   LABEL .  @#@@@]HO
)@@G@@         GETC .   @F@@@]         IF    A10,NE,0,I THEN,RDEDA3 . ->A FMATHP
)@@G@@, ALL CHARS VALID @G@@@]         IF    A8,EQ,' ',I THEN,RDEDR2 . ->TRAILHQ
)@@G@@ING BLANKS ON B INPUT   @F@@@]         IF    A8,EQ,'1',I THEN,RDEDA3 .  HR
)@@G@@             1 INPUT    @F@@@]         IF    A8,EQ,'0',I THEN,RDEDA3 .  HS
)@@G@@             0 INPUT    @E@@@]         LOAD  A8,'0',I .          SET DEFHT
)@@G@@AULT CHARACTER    @A@ @]         EXERR ERFM18 LEVEL,2 .     @ @@@       HU
)@@G@@   LINK    ONIOSN .     @F@@@          ONUNIT  ERFM18,ACCDER,2  RDGBFS,IHV
)@@G@@,R  DEXWK1,4  DEXMAX,0  @#@@@]RDEDA3   LABEL .  @#@@@]         PUTC .   HW
)@@G@@@D@@@]         GOTO  RDEDA2 .            ->NEXT CHARACTER   @E@@@]RDEPADHX
)@@G@@   LABEL .                   FILL IN PADDING CHARACTER@C@@@]         LOAHY
)@@G@@D  A6,IONMLN .         STRING LENGTH@ @@@]         LOAD  X2,IONADR .    HZ
)@@G@@@^@#@]         SETPC 6,0,X2 . @^@@@#         SETPC 4,0,X2 . @#@@@]RDEDPXIA
)@@G@@   LABEL .  @G@@@]         IF    ARDVVR*010000,OFF,IOFMFG THEN,RDEDP4 . IB
)@@G@@-> FIXED LENGTH   @G@@@]         SUB   A6,IONMLN .         SET VARYING TIC
)@@G@@O CURRENT LENGTH READ   @C@@@]         LOADN A6,A6 .             AVOID -ID
)@@G@@NUMBER@ @@@]         LOAD  X5,IODTA5 .    @ @@@]         STORE A6,ARDVCLIE
)@@G@@,X5 . @D@@@]         GOTO  IORETN .            ->NEXT FORMAT ITEM @#@@@]IF
)@@G@@RDEDP4   LABEL .  @C@@@]         IF    A6,LT,1,I THEN,IORETN . ->DONE   IG
)@@G@@@E@@@]         LOAD  A8,'0',I .          SET PADDING CHARACTER    @D@@@]IH
)@@G@@         IF    A10,EQ,0,I THEN,RDEDP2 . ->BIT STRING  @ @@@]         LOAII
)@@G@@D  A8,' ',I .     @#@@@]RDEDP2   LABEL .  @ @@@]         LOOP  A6,RDEDP3IJ
)@@G@@ .    @^@@@]         GOTO  IORETN . @#@@@]RDEDP3   LABEL .  @E@@@]      IK
)@@G@@   PUTC .                    PUT PADDING CHARACTER    @D@@@]         GOTIL
)@@G@@O  RDEDP2 .            ->NEXT CHARACTER   @#@@@]RDEDRX   LABEL .  @D@@@]IM
)@@G@@         ADD   A6,1,I .            GET LENGTH OF 0    @#@@@]RDEDR2   LABIN
)@@G@@EL .  @D@#@]         IF    A9,LT,6,I THEN,RDEDR3 . ->LAST WORD    @^@#@]IO
)@@G@@         SUB   A9,6,I . @^@#@]         ADD   X1,1,I . @^@#@]         GOTIP
)@@G@@O  RDEDR2 . @D@@@#         DSC     A8,38 .           DIVIDE BY FOUR     IQ
)@@G@@@D@@@#         ADD     X1,A8 .           ADD IN WORD OFFSET @D@@@#      IR
)@@G@@   SRB     A9,34 .           FINISH DIVISION    @#@#@]RDEDR3   LABEL .  IS
)@@G@@@B@@@]         IF    A9,EQ,0,I THEN,RDEDPX .    @^@@@]         SETL  A9 IT
)@@G@@.     @#@@@]RDEDR4   LABEL .  @#@@@]         GETC .   @ @@@]         LOOIU
)@@G@@P  A9,RDEDR4 .    @^@@@]         GOTO  RDEDPX . @[@@@].     @[@@@].     IV
)@@G@@@[@@@].     @#@@@].        OUTPUT   @[@@@].     @[@@@].     @[@@@].     IW
)@@G@@@#@@@]WREDTA   LABEL .  @ @@@]         LOAD  A10,10,I .     @#@@@]WREDTBIX
)@@G@@   LABEL .  @B@@@]         LOAD  X5,R8 ,             DED PTR@^@@@]      IY
)@@G@@   USING WORD,X5 .@E@@@]         IF    SDARST,OFF,W1Q2 THEN,WREDTR2 . ->IZ
)@@G@@CONVERSION  @F@@@]         IF    SDCHBT,ON,W1Q2 THEN,WREDA2 . ->BIT OUTPJA
)@@G@@UT VALID    @G@@@]         IF    A10,EQ,10,I THEN,WREDA2 . ->A FORMAT, BJB
)@@G@@OTH B AND CH VALID@C@@@].        CHARCTER STRING ON B FORMAT, CONVERT   JC
)@@G@@@B@@@]         STORE   A2,IOCBA1 .       SAVE A2@E@@@]         LOAD  A2,JD
)@@G@@0,I .            CONVERT TO TEMPORARY     @B@@@]         LOAD  A3,IODTA5JE
)@@G@@ .         SURCE  @^@@@]         LINK  EXBCA .  @C@@@]         LOAD    AJF
)@@G@@2,IOCBA1 .       RESET A2     @C@@@]         LOADXI  A2,1,I .          SJG
)@@G@@ET INCREMENT@H@@@]. ....................................................JH
)@@G@@....................... @H@@@]. ....  NOTE : THIS ASSUMES THE FOLLOWING JI
)@@G@@CALLING SEQUENCE TO EXBCA     ....  @H@@@]. ....  A2 = TARGET D. V. (0 IJJ
)@@G@@F TEMP)  A3 = SOURCE D. V. (OR 0)           ....@H@@@]. ....  IF SOURCE JK
)@@G@@D. V. IS A TEMPORARY, THEN TARGET D. V. WILL BE SOURCE  ... @H@@@]. ....JL
)@@G@@....................................................................... JM
)@@G@@@E@@@]         MOVE  IODTA5,0,I .        SOURCE IS NOW TEMPORARY  @#@@@]JN
)@@G@@WREDA2   LABEL .  @C@@@]         LOAD  X4,IODTA5 .         GET D.V.     JO
)@@G@@@F@@@]         IF    IODTA5,NZERO THEN,WREDB1 .              ->VALID DV JP
)@@G@@@E@@@]         LOAD  X4,AREPTR .         POP TEMP STRING STACK    @^@@@]JQ
)@@G@@         SUB   X4,2,I . @ @@@]         USING ARDVDT,X4 .    @ @@@]      JR
)@@G@@   MOVE  AREPTR,ARDVPT .@#@@@]WREDB1   LABEL .  @D@@@]         MOVE  IOFJS
)@@G@@MDV,ARDVOR,2 .   SAVE DOPE VECTOR   @D@@@]         IF    ARDVUN,OFF,ARDVJT
)@@G@@KY THEN,WREDB2 . -.OK   @E@@@]         MOVE  IOFMDV,UNINIT,2 .   SET UNIJU
)@@G@@NITIALIZED DV     @#@@@]WREDB2   LABEL .  @ @@@]         LOAD  X1,IONADRJV
)@@G@@ .    @^@#@]         SETGC 6,0,X1 . @^@@@#         SETGC 4,0,X1 . @F@@@]JW
)@@G@@         IF  A9,EQ,3,I THEN,WREDB4 . NO FIELD WIDTH SPECIFIED     @D@@@]JX
)@@G@@         LOAD  A9,IONCLN .         LENGTH OF STRING   @D@@@]         IF JY
)@@G@@   A9,LT,R5 THEN,WREDB3 . ->DV<FIELDWIDTH @F@@@]         LOAD  A9,R5 .  JZ
)@@G@@           PUT OUT FIELD WIDTH (TRUNCATE) @C@^@]WREDB5   LABEL . HERE IFKA
)@@G@@ PAD LESS THAN LINE SIZE@D@^@]         IF    A9,LE,0,I THEN,IORETN . ->NKB
)@@G@@ULL FIELD   @^@^@]         LINK  WRPFLD . @B@^@]         GOTO  IORETN . KC
)@@G@@           ->DONE @D@@@^         GOTO    WREDB5 .          GO WRITE IT OKD
)@@G@@UT    @#@@@]WREDB3   LABEL .  @C@@@]         LINK  WRPFLD .            PKE
)@@G@@UT STRING   @D@@@]         LOAD  A9,R5 .             PAD WITH BLANKS    KF
)@@G@@@ @@@]         SUB   A9,IONCLN .    @ @#@]         SETGC 6,KBLANK .     KG
)@@G@@@ @@@#         SETGC 4,KBLANK .     @I@@@^         IF      IOCBSR,ON,IOCKH
)@@G@@BF1  THEN,WREDB5 . STRING I/O=>JUST PAD IN STRING     @E@@@]         IF KI
)@@G@@ A9,LE,IOCBLZ  THEN,WREDB5 . HE CAN HANDLE IT   @G@@@]         SUB     AKJ
)@@G@@9,A7 .           ACCOUNT FOR THOSE LEFT IN BUFFER     @E@@@]         SUBKK
)@@G@@     A9,1,I .          ACCOUNT FOR ALL OF THEM  @D@@@]         LINK    WKL
)@@G@@RSKIP .          SKIP TO NEXT LINE  @G@@@]WREDB6   LABEL .              KM
)@@G@@     HERE IF MORE THAN 132 BLANKS NEEDED  @E@@@]         IF  A9,LE,IOCBLKN
)@@G@@Z  THEN,WREDB5 . NOT FULL LINE LEFT @E@@@]         SUB     A9,IOCBLZ .  KO
)@@G@@     ACCOUNT FOR THAT LINE    @D@@@]         LINK    WRSKIP .          SKP
)@@G@@KIP ANOTHER LINE  @C@@@]         GOTO    WREDB6 .          TRY AGAIN    KQ
)@@G@@@D@@@]WREDB4   LABEL .                   NO WIDTH SPECIFIED @C@@@]      KR
)@@G@@   LOAD    A9,IONCLN .       GET STR SIZE @#@@@^WREDB5   LABEL .  @C@@@]KS
)@@G@@         IF A9,EQ,0,I THEN,IORETN . DONE IF NULL@D@@@]         LINK    WKT
)@@G@@RPFLD .          PUT INTO BUFFER    @C@@@]         GOTO    IORETN .     KU
)@@G@@     DONE FOR NOW @^@@@]/ .      E AND F INPUT  @[@@@].     @[@@@].     KV
)@@G@@@[@@@].     @[@@@].     @B@@@]RDEDTE   LABEL .                   E INPUTKW
)@@G@@@E@@@]         LINK  RDEDFC .            STANDARD FORMAT INPUT    @C@@@]KX
)@@G@@         MOVE  IONUM,1,I .         SET E FORMAT @F@@@]         IF    DLXKY
)@@G@@CB+DLXCI,ON,DLXFLG THEN,RDEDCN . ->CONVERSION   @E@@@]         GOTO  RDEKZ
)@@G@@E10 .            ->MERGE WITH F FORMAT    @[@@@].     @[@@@].     @[@@@]LA
)@@G@@.     @[@@@].     @#@@@]RDEDCN   LABEL .  @C@@@]         LOADA X11,RDEE1LB
)@@G@@0 .        CONVERSION   @#@@@]         LOCAL .  @C@@@]         GOTO  RDELC
)@@G@@DF5 .            ->SET DEFAULT@[@@@].     @[@@@].     @[@@@].     @[@@@]LD
)@@G@@.     @[@@@].     @#@@@].        F INPUT  @[@@@].     @[@@@].     @#@@@]LE
)@@G@@RDEDTF   LABEL .  @C@@@]         LINK  RDEDFC .            GET NUMBER   LF
)@@G@@@C@@@]         MOVE,IONUM,0,I .          SET F FORMAT @G@@@]         IF LG
)@@G@@   DLXCI+DLXCB+DLXCE,ON,DLXFLG THEN,RDEDCN . ->CONVERSION   @C@@@]RDEE10LH
)@@G@@   LABEL .                   E ENTRY POINT@F@@@]         IF    DLXCP,ON,LI
)@@G@@DLXFLG THEN,RDEF10 . ->IGNORE Q SPECS     @C@@@]         IF    A10,GE,2,LJ
)@@G@@I THEN,RDEF10 . ->NO Q  @B@@@]         LOAD  A9,R6 .             GET Q  LK
)@@G@@@E@@@]         IF    A9,LT,0,I THEN,WREDTR4 . ->OPERAND ERROR     @B@@@]LL
)@@G@@         SUB   A9,DLXCMD-FH2+FXH2 . SCALE @^@@@]         LOADN A9,A9 .  LM
)@@G@@@D@@@]         STORE A9,DLXCMD .         SET SCALE FACTOR   @#@@@]RDEF10LN
)@@G@@   LABEL .  @G@@@]         STORE   A5,IOCBF1 .       SAVE FLAGS THROUGH LO
)@@G@@CVNM        ***** @D@@@]         LINK  CVNUM .             CONVERT NUMBELP
)@@G@@R     @G@@@]         LOAD    A5,IOCBF1 .       SAVE FLAGS THROUGH CVNM  LQ
)@@G@@      ***** @D@@@]         IF    IONUM,NZERO THEN,RDEF11 . ->E FORMAT   LR
)@@G@@@D@@@]         IF A10,EQ,0,I THEN,RDEF23 . SCALE SPECIFIED? @D@@@]      LS
)@@G@@   LOAD    R7,0,I .          SET SCALE TO ZERO  @B@@@]RDEF23   LABEL .  LT
)@@G@@                 MERGE  @F@@@]         IF    SDFXFL,OFF,DCVFLG THEN,RDEFLU
)@@G@@22 . ->SCALE FIXED DEC. @^@@@]         LOAD  A4,R7 .  @D@@@]         LOALV
)@@G@@DD A9,DCVFLT .         GET UNSCALED NUMBER@C@@@]         LOADA A3,RDMPY LW
)@@G@@.          +SCALE FACTOR@C@@@]         IF    A4,GE,0,I THEN,RDEF02 . ->OLX
)@@G@@K     @D@@@]         LOADA A3,RDDIV .          - SCALE FACTOR     @^@@@]LY
)@@G@@         LOADN A4,A4 .  @#@@@]RDEF02   LABEL .  @F@@@]         IF    A4,LZ
)@@G@@LE,KFLTSZ/2,I THEN,RDEF03 . ->SCALE LAST PART   @ @@@]         LOAD  X5,MA
)@@G@@KFLTSZ,I .  @B@@@]         EX    0,A3 .              SCALE  @D@@@]      MB
)@@G@@   SUB   A4,KFLTSZ/2,I .     ADJUST EXPONENT    @D@@@]         GOTO  RDEMC
)@@G@@F02 .            SCALE REMAINDER    @D@@@]RDEF03   LABEL .              MD
)@@G@@     SCALE LAST PART    @C@@@]         IF    A4,EQ,0,I THEN,RDEF04 . ->DME
)@@G@@ONE   @^@@@]         SLB   A4,1 .   @^@@@]         LOAD  X5,A4 .  @B@@@]MF
)@@G@@         EX    0,A3 .              SCALE  @#@@@]RDEF04   LABEL .  @F@@@]MG
)@@G@@         STORED  A9,DCVFLT.        SAVE SCALED NUMBER  SCALED     @^@@@]MH
)@@G@@         GOTO  RDEF11 . @D@@@]RDEF22   LABEL .                   SCALE FMI
)@@G@@IXED DECIMAL@ @@@]         LOAD  A3,DCVDQ .     @^@@@]         SUB   A3,MJ
)@@G@@R7 .  @ @@@]         STORE A3,DCVDQ .     @#@@@]RDEF11   LABEL .  @D@@@]MK
)@@G@@         MOVE  DCVTR,DCVFLG .      SET TYPE RIGHT     @ @@@]         LOAML
)@@G@@DA X5,DCVFLT .    @D@@@]         IF    SDFXFL,ON,DCVTR THEN,RDED21 . ->FMM
)@@G@@LOAT  @B@@@]         LOADA X5,DCVFFT .         FIXED  @#@@@]RDED21   LABMN
)@@G@@EL .  @E@@@]         STORE X5,DCVARR .         POINT TO RIGHT HAND SIDE MO
)@@G@@@D@@@]         MOVE  DCVRQP,DCVDQP .     SET SCALE AND PRE  @D@@@]      MP
)@@G@@   MOVE  DCVARL,IODTA5 .     SET ADDRESS OF LHS @C@@@]         LOAD  X5,MQ
)@@G@@R8 .             PTR TO DED   @^@@@]         USING WORD,X5 .@F@@@]      MR
)@@G@@   MOVE  DCVLQP,W1H2 .       GET SCALE AND PRE OF VARIABLE  @F@@@]      MS
)@@G@@   MOVE  DCVTL,W1Q2 .        GET TYPE OF VARIABLE    *****  @B@@@]      MT
)@@G@@   LINK  CVCV .            CONVERT  @B@@@]         GOTO  IORTNM .       MU
)@@G@@     ->DONE @[@@@]/.    @F@@@].        RDEDFC                    READ NUMV
)@@G@@MBERS INTO FIXED FORMATS@[@@@].     @[@@@].     @[@@@].     @[@@@].     MW
)@@G@@@#@@@]RDEDFC   LOCAL .  @D@@@]         LOAD  A10,A9 .            SAVE FEMX
)@@G@@D FLAGS     @C@@@]         LOAD  X5,R8 .             DED FLAGS    @^@@@]MY
)@@G@@         USING WORD,X5 .@E@@@]         IF    SDARST,ON,W1Q2 THEN,WREDTR2MZ
)@@G@@ . ->CONVERSION   @E@@@]         IF A10,EQ,3,I THEN,WREDTR . NO FIELD WINA
)@@G@@DTH GIVEN   @C@@@]         LOAD  A9,R5 .             FIELD WIDTH  @E@@@]NB
)@@G@@         IF    A9,LE,0,I THEN,IORTNM . ->NEG FIELD WIDTH    @G@@@]      NC
)@@G@@   LINK  RDGET .             ALLOCATE SPACE FROM INPUT BUFFER     @D@@@]ND
)@@G@@         LOAD    A8,A7 .           SAVE LEFT IN LINE  @D@@@]         SETNE
)@@G@@L  A7,A9 .              SET SIZE OF TOKEN @D@@@]         LOAD    A9,A8 .NF
)@@G@@           A8 WILL GO AWAY... @D@@@]         LINK  EXLXI .             CNG
)@@G@@ONVERT TO NUMBER  @C@@@]         GOTO  RDEDF1 .            ->NO TOKEN   NH
)@@G@@@E@@@]         IF    LXPS,NSAME,DLXCLN THEN,RDEDF2 . ->NOT SIGN   @C@@@]NI
)@@G@@         LOAD  R1,DLXCS .          SAVE SIGN    @C@@@]         LINK  EXLNJ
)@@G@@XI .             GET NUMBER   @B@@@]         GOTO  RDEDF5 .            -NK
)@@G@@>ERROR@C@@@]         STORE R1,DLXCS .          SET SIGN     @#@@@]RDEDF2NL
)@@G@@   LABEL .  @E@@@]         ADD   A7,1,I .            SET TRUE LENGTH LEFNM
)@@G@@T .   @E@@@]         GOTO    RDEDF3 .          GO TO BOTTOM OF LOOP     NN
)@@G@@@ @@@]RDEDF6   LABEL . TOP OF LOOP  @C@@@]         GETC .               NO
)@@G@@     GET INTO A8  @G@@@]         IF      A8,NE,' ',I THEN,WREDT2R . -> ENP
)@@G@@RROR IF NOT ALL BLANKS  @D@@@]RDEDF3   LABEL .                   BOTTOM NQ
)@@G@@OF LOOP     @F@@@]         LOOP    A7,RDEDF6 .       CHECK IF BUFFER ALLNR
)@@G@@ BLANKS     @E@@@]         IF    LXIDCN,OFF,DLXCLN THEN,WREDT2R . ->NOT NS
)@@G@@NUMBER@#@@@]RDEDF4   LABEL .  @F@@@]         STORE   A9,A7 .           SNT
)@@G@@ET END OF BUFFER BACK CORRECT @C@@@]         JMP .                     -NU
)@@G@@>RETURN     @E@#@]RDEDF1   LABEL .                   USE DEFAULTT ZERO NNV
)@@G@@UMBER @E@@@#RDEDF1   LABEL .                   USE DEFAULT ZERO NUMBER  NW
)@@G@@@ @#@]         MOVE  DLXCON,'+0',I .@A@@@#         MOVE  DLXCON+FH1,'+0'NX
)@@G@@,I .  @E@#@]         MOVE    DLXCON+12+FH2,'000',I . CLEAR EXPONENT     NY
)@@G@@@F@@@#         MOVE  DLXCON+19,DWRZRO .  CLEAR EXPONENT          ***    NZ
)@@G@@@A@@@]         MOVE  DLXCLN,LXIDDN,I .    @ @@@]         MOVE  DLXCMD,0,OA
)@@G@@I .   @ @@@]         MOVE  DLXPRE,1,I .   @ @@@]         MOVE  DLXFLG,0,OB
)@@G@@I .   @C@@@]         GOTO  RDEDF4 .            ->CONTINUE   @#@@@]RDEDF5OC
)@@G@@   LABEL .  @C@ @]         EXERR ERFMCM .            CONVERSION   @D@ @]OD
)@@G@@         GOTO   RDEDF1 .            ->USE DEFAULT ZERO@ @@@          LINOE
)@@G@@K    ONIOSN .     @H@@@          ONUNIT  ERFMCM,ACCDCV,2  RDGBFS,RDEDF1,OF
)@@G@@RDEDF4  DEXWK1,4  DEXMAX,0    @C@@@]WREDT2R  LABEL .                   EOG
)@@G@@RROR HERE   @D@@@]         STORE   A9,A7 .           RESET END OF BUFFEROH
)@@G@@@D@@@]         GOTO    WREDTR2 .         GOTO PROPER ERROR  @^@@@]/ .   OI
)@@G@@   E AND F OUTPUT @[@@@].     @[@@@].     @[@@@].     @C@@@]WREDTE   LABOJ
)@@G@@EL .                   E OUTPUT     @F@@@]         LINK  WREDFC .       OK
)@@G@@     PUT NUMBER INSTANDARD FORM     @E@@@]         IF  A9,GE,3,I THEN,WROL
)@@G@@EDTR . MUST SUPPLY ONE ARGS   @D@@@]         LOAD    X5,IODTA5 .       POM
)@@G@@OINT TO NUMBER    @C@@@]         LOAD    A4,W1,X5 .        PICKUP NUMBERON
)@@G@@@E@@@]         IF A9,LT,2,I THEN,WRE003 . SET UP EXTRA DEFAULT?   @D@@@]OO
)@@G@@         LOAD    A9,R5 .           GET FIELD WIDTH .  @E@@@]         SUBOP
)@@G@@     A9,7,I .          ACCOUTN FOR 'E+DDD',&'D.'@C@@@]         IF A4,GE,OQ
)@@G@@0,I THEN,WRE002 . IS IT NEG?  @F@@@]         SUB     A9,1,I .          NOR
)@@G@@UMBER IS NEG,ALLOW FOR '-'    @B@@@]WRE002   LABEL .                   MOS
)@@G@@ERGE  @D@@@]         STORE   A9,R6 .           SET PRE TO TRY     @D@@@]OT
)@@G@@         ADD     A9,1,I .          SET OVERALL PRE    @D@@@]         LOAOU
)@@G@@D    X5,R8 .           GET DED POINTER    @E@@@]         LOAD    A3,W1Q4OV
)@@G@@,X5 .      PICK UP NUMBER'S PRE     @C@@@#         STORE   A5,IOCBF1 .  OW
)@@G@@     SAVE FLAGS   @E@#@]         LOAD    A6,W1Q2,X5 .      PICK UP TYPE OX
)@@G@@AND CLASS   @E@@@#         LOAD    A5,W1Q2,X5 .      PICK UP TYPE AND CLOY
)@@G@@ASS   @C@#@]         AND,U   A6,SDDCBN .       SEE IF BINARY@C@@@#      OZ
)@@G@@   AND,U   A5,SDDCBN .       SEE IF BINARY@C@@@#         LOAD    A5,IOCBPA
)@@G@@F1 .       RESTORE FLAGS@D@#@]         IF A7,EQ,0,I THEN,WRE020 . IS IT PB
)@@G@@BINARY?     @D@@@#         IF A6,EQ,0,I THEN,WRE020 . IS IT BINARY?     PC
)@@G@@@E@@@]         MPYS    A3,19728,I .      FIGURE OUT DECIMAL PRE   @D@@@]PD
)@@G@@         SSA     A3,16 .           LOG2=19728/65536   @E@@@]         ADDPE
)@@G@@     A3,1,I .          FIX AS PER PL/1 RULES    @B@@@]WRE020   LABEL . MPF
)@@G@@EGRE WITH PRE IN A3     @D@@@]         SUB     A3,1,I .          COMPUTEPG
)@@G@@ DEFAULT PRE@E@@@]         IF A3,GE,R6 THEN,WRE007 . THAT WOULD BE TOO LPH
)@@G@@ONG   @D@@@]         STORE   A3,R6 .           USE THAT INSTEAD   @E@@@]PI
)@@G@@         GOTO    WRE006 .          NOW COMPUTE OVERALL PRE  @C@@@]WRE003PJ
)@@G@@   LABEL .                   D WAS GIVEN  @D@@@]         IF    A9,EQ,0,IPK
)@@G@@ THEN,WRE001 . ->DEFAULT 1    @#@@@]WRE006   LABEL .  @E@@@]         LOAPL
)@@G@@D    A9,R6 .           GET # DIGITS AFTER '.'   @F@@@]         ADD     APM
)@@G@@9,1,I .          # DIGITS =#DIGITS AFTER'.'+1   @D@@@]         STORE   APN
)@@G@@9,R7 .           FAKE THIRD ARG     @#@@@]WRE001   LABEL .  @E@@@]      PO
)@@G@@   LOAD    A9,R7 .           GET NUM OF SIG DIGITS    @E@@@]WRE007   LABPP
)@@G@@EL .                   JOIN HERE FROM ABOVE     @E@@@]         SUB     APQ
)@@G@@9,R6 .           SUB NUMBER AFTER '.'     @G@@@]         IF      A9,LT,0PR
)@@G@@,I THEN,WREDTZ . # OF DIGITS BEFORE '.' <0?     @F@@@]         STORE   APS
)@@G@@9,IONADR .       SET # OF DIGITS BEFORE '.'     @C@@@]         LOAD    APT
)@@G@@10,DCVINT .      GET EXPONENT @E@@@]         SUB     A10,A9 .          FPU
)@@G@@IGURE OUT TRUE EXPONENT @E@@@]         IF  A4,NE,0,I THEN,WRE010 . EXPONPV
)@@G@@ENT=0 FOR ZERO    @C@@@]         LOAD    A10,0,I .         SET EXP=0    PW
)@@G@@@B@@@]WRE010   LABEL .                   MERGE  @D@@@]         STORE   APX
)@@G@@10,DCVINT .      SAVE FOR LATER     @F@@@]         LOAD  A3,R5 .        PY
)@@G@@      REMOVE E+000 FROM FIELD WIDTH @^@@@]         SUB   A3,5,I . @^@@@]PZ
)@@G@@         STORE A3,R5 .  @C@@@]         MOVE  R7,0,I .            SET NO QA
)@@G@@SCALE @C@@@]         MOVE  IONUM,1,I .         E FORMAT     @^@@@]      QB
)@@G@@   GOTO  WRF003 . @G@@@]WREDTZ   LABEL .                   HERE IF ERRORQC
)@@G@@,SEE IF CAN USE *****'S @D@@@]         LOAD    A9,R5 .           CHECK FQD
)@@G@@IELDWIDTH   @F@@@]         IF      A9,GE,256,I THEN,WREDTR4 . FIELDWIDTHQE
)@@G@@ TOO BIG    @F@@@]         IF      A9,LT,1,I THEN,WREDTR4 . FIELD WIDTH QF
)@@G@@TOO SMALL?  @E@@@]         GOTO    WRF050 .          FILL FIELD WITH '*'QG
)@@G@@ 'S   @[@@@].     @[@@@].     @[@@@].     @[@@@].     @[@@@].     @E@@@]QH
)@@G@@WRE100   LABEL .                   END E - PRINT EXPONET    @^@@@]      QI
)@@G@@   PUTCH 'E' .    @ @@@]         LOAD  A8,DCVINT .    @ @@@]         CVEQJ
)@@G@@   A8,DLXCON .    @E@#@]         SETGC 6,DLXCON+1 .        SET TO MOVE EQK
)@@G@@XPONENT     @E@@@#         SETGC 4,DLXCON+1 .        SET TO MOVE EXPONENQL
)@@G@@T     @C@#@]         ADD   A1,3,I .            START WITH S4@C@@@#      QM
)@@G@@   ADD   A1,1,I .            START WITH Q2@D@@@]         LOAD    A8,'+',QN
)@@G@@I .        ASSUME POSITIVE    @C@@@]         LOAD    A10,DCVINT .      GQO
)@@G@@ET EXPONENT @C@@@]         IF A10,GE,0,I THEN,WRE101 . YEP '+' OK @D@@@]QP
)@@G@@         LOAD    A8,'-',I .        EXPONENT IS NEG    @B@@@]WRE101   LABQQ
)@@G@@EL .                   MERGE  @D@@@]         LINK    WRPFD1 .          PQR
)@@G@@UT SIGN IN BUFFER @E@@@]         SETL    A10,3,I .         THREE CHARS TQS
)@@G@@O PUT OUT   @C@@@]WRE102   LABEL .                   TOP OF LOOP  @D@@@]QT
)@@G@@         GETC .                    CHECK NEXT CHAR    @G@@@]         IF QU
)@@G@@     A8,GE,'0',I THEN,WRE103 . REPLACE ' ''S WITH '0''S     @C@@@]      QV
)@@G@@   LOAD    A8,'0',I .        GET A ZERO   @F@@@]WRE103   LABEL .        QW
)@@G@@           MERGE HERE WITH CHAR IN A8     @C@@@]         LINK    WRPFD1 QX
)@@G@@.          PUT IT OUT   @D@@@]         LOOP    A10,WRE102 .      PUT OUTQY
)@@G@@ ALL THREE  @C@@@]         GOTO  IORTNM .            ->RETURN     @[@@@]QZ
)@@G@@.     @[@@@].     @[@@@].     @[@@@].     @[@@@].     @^@@@].        F FRA
)@@G@@ORMAT OUTPUT@[@@@].     @[@@@].     @C@@@]WREDTF   LABEL .              RB
)@@G@@     F FORMAT     @C@@@]         MOVE    IONUM,0,I .       F FORMAT     RC
)@@G@@@F@@@]         LINK  WREDFC .            FIXED FORMAT CHARACTER STRING  RD
)@@G@@@C@@@]         MOVE  IONADR,DCVINT .     SAVE COUNT   @E@@@]         IF RE
)@@G@@   A9,EQ,3,I THEN,WREDTR . ->NO FIELD WIDTH     @E@@@]         IF    A9,RF
)@@G@@EQ,0,I THEN,WRF003 . ALL 3 ARGS GIVEN     @F@@@]         LOAD  R7,0,I . RG
)@@G@@           AT MOST 2 ARGS GIVEN,DEFAULT=0 @E@@@]         IF    A9,EQ,1,IRH
)@@G@@ THEN,WRF003 .   ->YES,2 ARGS GIVEN @C@@@]         LOAD  R6,0,I .       RI
)@@G@@     NO P GIVEN   @#@@@]WRF003   LABEL .  @C@@@]         LOAD  A3,R5 .  RJ
)@@G@@           GET LENGTH   @D@@@]         IF    A3,GE,256,I THEN,WREDTR4 . RK
)@@G@@->ERROR     @E@@@]         IF A3,LE,0,I THEN,WREDTR4 . ->NEG FEILD IS NORL
)@@G@@T GOOD@^@@@]         LOAD  A4,R6 .  @B@@@]         IF    A4,LT,0,I THEN,RM
)@@G@@WRF050 . Q<0@C@@@]         IF    A3,LE,R6 THEN,WRF050 . FW<=Q     @C@@@]RN
)@@G@@         LOAD  A10,IONADR-FH2+FXH2 . SIG DIGITS @^@@@]         LOAD  A9,RO
)@@G@@A10 . @F@@@]         ADD   A10,A4 .            NUMBER OF  DIGITS NON ZERRP
)@@G@@O     @[@@@].     @C@@@].        SET ONLY FIRST 'A10' DIGITS NONZERO    RQ
)@@G@@@[@@@].     @^@@@]         LOAD  A3,A10 . @G@@@]         IF      A3,GE,0RR
)@@G@@,I THEN,WRF001 . DON'T SET A -# OF CHARS TO ZERO@D@@@]         LOAD    ARS
)@@G@@3,0,I .          SET TO ZERO INSTEAD@B@@@]WRF001   LABEL .              RT
)@@G@@     MERGE  @C@#@]         DSA   A3,36 .             NUMBER DIGITS@C@@@#RU
)@@G@@         SRBD  A3,2 .              NUMBER DIGITS@D@#@]         DIV   A3,RV
)@@G@@6,I .            A3=WORDS, A4=REM.  @F@@@#         SRB     A4,34 .      RW
)@@G@@     A3 = WORDS , A4 = REMAINDER    @D@@@]         LOADA X1,DLXCON .    RX
)@@G@@     POINT TO STRING    @^@@@]         ADD   X1,A3 .  @C@#@]         SUBRY
)@@G@@   A4,6,I .            -(6-REM)     @C@@@#         SUB   A4,4,I .       RZ
)@@G@@     -(4-REM)     @B@#@]         LOADN A4,A4 .             (6-REM)@B@@@#SA
)@@G@@         LOADN A4,A4 .             (4-REM)@F@#@]         MPYS  A4,6,I . SB
)@@G@@           BITS TO CLEAR IN LAST WORD     @F@@@#         MPYS  A4,9,I . SC
)@@G@@           BITS TO CLEAR IN LAST WORD     @^@@@]         LOAD  X5,A4 .  SD
)@@G@@@ @@@]         LOAD  A4,DWRZRO .    @ @@@]         LOAD  A3,W1,X1 .     SE
)@@G@@@C@@@]         SRB   A3,0,X5 .           CLEAR BITS   @D@@@]         SLBSF
)@@G@@D  A3,0,X5 .           REPLACE BY '0'     @ @@@]         STORE A3,W1,X1 SG
)@@G@@.     @ @@@]         LOAD  A3,DWRZRO .    @^@@@]         SETL  A4,5,I . SH
)@@G@@@#@@@]WRCLP    LABEL .  @^@@@]         ADD   X1,1,I . @ @@@]         STOSI
)@@G@@RE A3,W1,X1 .     @ @@@]         LOOP  A4,WRCLP .     @D@#@]         SETSJ
)@@G@@GC 6,DLXCON .          SET TO READ NUMBER @D@@@#         SETGC 4,DLXCON SK
)@@G@@.          SET TO READ NUMBER @D@@@]         ADD   A9,R7 .             ASL
)@@G@@DD IN SCALE FACTOR@C@@@]         STORE A9,IONADR .         LOC OF '.'   SM
)@@G@@@[@@@].     @[@@@].     @[@@@].     @[@@@].     @A@@@].        PRINT DIGSN
)@@G@@ITS BEFORE '.'    @[@@@].     @[@@@].     @[@@@].     @C@@@]         LOASO
)@@G@@D  A4,R5 .             FIELD WIDTH  @^@@@]         SUB   A4,R6 .  @B@@@]SP
)@@G@@         IF    R6,ZERO THEN,WRFX01 . ->Q=0@C@@@]         SUB   A4,1,I . SQ
)@@G@@           PLACE FOR .  @#@@@]WRFX01   LABEL .  @E@@@]         LOAD  A9,SR
)@@G@@IONADR-FH2+FXH2 . NUMBER LEADING DIGITS   @D@@@]         LOADA   X11,WRFSS
)@@G@@100 .      ASSUME TO BE NORMAL@F@@@]         IF  A9,GE,1,I THEN,WRF022 .ST
)@@G@@ IS THERE ANYTHING BEFORE '.'?@[@@@].     @B@@@].        FORCE LEADING DSU
)@@G@@IGITS TO BE ZERO  @[@@@].     @E@@@]         STORE   A9,A10 .          SSV
)@@G@@AVE POSITION OF '.'     @E@@@]         LOAD    A9,1,I .          SAY ONESW
)@@G@@ LEADING ZERO     @E@#@]         SETGC   6,DWRZRO .        POINT TO '000SX
)@@G@@000'...     @E@@@#         SETGC   4,DWRZRO .        POINT TO '000000'..SY
)@@G@@.     @D@@@]         LOADA   X11,WRF017 .      SET RETURN POINT   @D@@@]SZ
)@@G@@WRF022   LOCAL .                   SAVE RETURN POINT  @D@@@]         LOATA
)@@G@@D    X5,IODTA5 .       GET DATA ADDRESS   @ @@@]         USING   WORD,X5TB
)@@G@@ .    @D@@@]         LOAD    A8,'+',I .        ASSUME POSITIVE    @F@@@]TC
)@@G@@         LOAD    A3,W1 .           PICK UP FIRST WORD OF NUMBER   @D@@@]TD
)@@G@@         IF      A3,GE,0,I THEN,WRF020 . IS IT NEG ?  @D@@@]         LOATE
)@@G@@D    A8,'-',I .        SET MINUS SIGN     @D@@@]         SUB     A4,1,I TF
)@@G@@.          SHORTEN FIELD WIDTH@#@@@]WRF020   LABEL .  @G@@@]         STOTG
)@@G@@RE   A8,DLXPS .        SAVE THE SIGN                     ** @#@@@]WRF011TH
)@@G@@   LABEL .  @C@@@]         IF    A9,GT,A4 THEN,WRF007 . ->TRUNCATE@D@@@]TI
)@@G@@         IF    A9,LT,A4 THEN,WRF008 . ->BLANK PADDING @#@@@]WRF012   LABTJ
)@@G@@EL .  @C@@@]         LOAD    A8,DLXPS .        GET THE SIGN @E@@@]      TK
)@@G@@   IF      A8,NE,'-',I THEN,WRF021 . NO SIGN TO OUTPUT@C@@@]         STOTL
)@@G@@RE   A9,R5 .           SAVE COUNT   @D@@@]         LINK    WRPFD1 .     TM
)@@G@@     PUT OUT THE SIGN   @C@@@]         LOAD    A9,R5 .           RELOAD TN
)@@G@@COUNT @G@@@]WRF021   LABEL .                   MERGE HERE TO PRINT LEADITO
)@@G@@NG DIGITS   @F@@@]         IF A9,EQ,1,I THEN,WRFZOK . THE LAST CHAR BEFOTP
)@@G@@RE'.' IS OK @D@@@]         STORE   A9,R5 .           SAVE THE COUNT     TQ
)@@G@@@F@@@]         GETC .                    CHECK IF FIRST CHAR IS ZERO    TR
)@@G@@@G@@@]         IF  A8,NE,'0',I THEN,WRFZEN . OK,STOP SUPPRESSING LEADINGTS
)@@G@@ ZEROS@E@@@]         LOAD    A8,' ',I .        REPLACE IT WITH A BLANK  TT
)@@G@@@F@@@]         LINK    WRPFD1 .          PUT THE BLANK INTO THE BUFFER  TU
)@@G@@@D@@@]         LOAD    A9,R5 .           RESET THE COUNT    @C@@@]      TV
)@@G@@   LOOP    A9,WRF021 .       GO TRY AGAIN @F@@@]WRFZEN   LABEL .        TW
)@@G@@           END OF LEADING ZERO SUPPRESSION@E@@@]         LINK    WRPFD1 TX
)@@G@@.          PRINT OUT CURRENT CHAR   @C@@@]         LOAD    A9,R5 .      TY
)@@G@@     RESET COUNT  @F@@@]         LOOP    A9,WRFZOK .       ACCOUNT FOR TTZ
)@@G@@HIS LAST CHAR     @E@@@]WRFZOK   LABEL .                   NOW PUT OUT AUA
)@@G@@LL THE REST @C@@@]         LINK  WRPFLD .            PRINT DIGITS @E@@@]UB
)@@G@@         JMP .                     NOW DO '.' AND SO FORTH  @F@@@]WRF007UC
)@@G@@   LABEL .                   TRUNCATION HERE,FILL WITH STARS@F@@@]      UD
)@@G@@   POP     1 .               REMOVE RETURN STORED AT WRF022 @C@@@]WRF050UE
)@@G@@   LABEL . ENTRY POINT FOR OTHER ROUTINES @G@@@]         LOAD    A9,DEXWUF
)@@G@@K1 .       GET FIELD WIDTH                ***** @F@#@]         LOAD    RUG
)@@G@@1,14,I .         SET TO SET DLXCON TO STARS     @F@@@#         LOAD    RUH
)@@G@@1,20,I .         SET TO SET DLXCON TO STARS     @C@@@]         LOADXM  XUI
)@@G@@5,DLXCON,I .     POINT THERE  @C@@@]         LOADXI  X5,1,I .          SUJ
)@@G@@ET INCREMENT@D@@@]         LOADA   A3,KKSTAR .       POINT TO STARS     UK
)@@G@@@G@@@]         BT      X5,0,*A3 .        SET DLXCON TO STARS            UL
)@@G@@***** @E@@@]         LOAD    A10,A9 .          FILL FIELD WITH STARS    UM
)@@G@@@ @@@]WRF040   LABEL . TOP OF LOOP  @D@#@]         SETGC   6,DLXCON .   UN
)@@G@@     POINT TO STARS     @D@@@#         SETGC   4,DLXCON .        POINT TUO
)@@G@@O STARS     @E@#@]         IF  A10,LT,85,I THEN,WRF041 . DLXCON WIDE ENOUP
)@@G@@UGH?  @E@@@#         IF  A10,LT,81,I THEN,WRF041 . DLXCON WIDE ENOUGH?  UQ
)@@G@@@E@#@]         LOAD    A9,84 .           ONLY TRY 84 AT A TIME    @E@@@#UR
)@@G@@         LOAD    A9,80 .           ONLY TRY 80 AT A TIME    @E@@@]      US
)@@G@@   LINK    WRPFLD .          PRINT THAT HUNK OF 84    @D@#@]         SUBUT
)@@G@@     A10,84,I .        84 LESS TO DO NOW  @D@@@#         SUB     A10,80,UU
)@@G@@I .        80 LESS TO DO NOW  @C@@@]         GOTO    WRF040 .          TUV
)@@G@@RY AGAIN    @F@@@]WRF041   LABEL .                   FEWER THAN 84 STARSUW
)@@G@@ LEFT TO PUT@D@@@]         LOAD    A9,A10 .          GET SIZE LEFT TO DOUX
)@@G@@@C@@@]         LINK    WRPFLD .          PUT THEM OUT @E@@@]         GOTUY
)@@G@@O    IORTNM .          GO RETURN TO NEXT ITEM   @#@@@]WRF008   LABEL .  UZ
)@@G@@@G@@@]         STORE   X1,DEXWK4 .       SAVE POINTER TO BUFFER         VA
)@@G@@***** @C@#@]         SETGC 6,KBLANK .          BLANK PADDING@C@@@#      VB
)@@G@@   SETGC 4,KBLANK .          BLANK PADDING@D@@@]         STORE   A9,R5 .VC
)@@G@@           SAVE #OF SIG CHARS @E@@@]         SUB     A4,A9 .           HVD
)@@G@@OWMANY LEADING BLANKS?  @E@@@]         LOAD    A9,A4 .           GET INTVE
)@@G@@O PROPER REGISTER @C@@@]         LINK  WRPFLD.             PRINT BLANKS VF
)@@G@@@[@#@].     @D@#@].        SETGC 6,DLXCON .          STRING START .     VG
)@@G@@@[@#@].     @G@@@]         LOAD    X1,DEXWK4 .       POINT TO PROPER BUFVH
)@@G@@FER         ***** @E@#@]         LOAD    A1,KLCH6W .       POINT TO GETCVI
)@@G@@ ROUTINE    @E@@@#         LOAD    A1,KLCH4W .       POINT TO GETC ROUTIVJ
)@@G@@NE    @^@@@]         LOAD  A9,R5    @D@@@]         GOTO    WRF012 .     VK
)@@G@@     GO PRINT INT PART  @D@@@]WRF017   LABEL .                   HERE IFVL
)@@G@@ NO INT PART@D@@@]         IF  R6,ZERO THEN,WRF200 . IS THERE A Q PART  VM
)@@G@@@C@@@]         PUTCH   '.' .             YES,PRINT '.'@E@@@]         LOAVN
)@@G@@D    A9,A10 .          PICK UP POSITION OF '.'  @E@@@]         IF      AVO
)@@G@@9,EQ,0,I THEN,WRF034 . PRINT Q PART THERE @D@@@]         LOAD    A10,R6 VP
)@@G@@.          GET SIZE OF Q PART @G@@@]         LOADN   A9,A9 .           HVQ
)@@G@@OWMANY ZEROS AFTER '.' BEFORE NUMBER@E@@@]         SUB     A10,A9 .     VR
)@@G@@     ANYSPACE LEFT FOR NUMBER @B@@@]         IF  A10,GE,0,I THEN,WRF030 VS
)@@G@@. YES @D@@@]         LOAD    A10,0,I .         SAY NO ROOM LEFT   @D@@@]VT
)@@G@@         LOAD    A9,R6 .           PUT ONLY Q ZEROS   @C@@@]WRF030   LABVU
)@@G@@EL .                   MERGE HERE   @E@@@]         STORE   A10,R6 .     VV
)@@G@@     SET NUMBER OF CHARS LEFT @D@@@]         LOAD    A10,A9 .          GVW
)@@G@@ET NUMBER OF ZEROS@ @@@]WRF031   LABEL . TOP OF LOOP  @D@#@]         SETVX
)@@G@@GC   6,DWRZRO .        POINT TO ZEROS     @D@@@#         SETGC   4,DWRZRVY
)@@G@@O .        POINT TO ZEROS     @G@#@]         IF  A10,LT,13,I THEN,WRF032VZ
)@@G@@ . BREAK IT UP INTO 12 CHAR HUNKS   @G@@@#         IF  A10,LT,9,I THEN,WWA
)@@G@@RF032 . BREAK IT UP INTO 8 CHAR HUNKS     @D@#@]         LOAD    A9,12,IWB
)@@G@@ .         DO 12 CHARS NOW    @C@@@#         LOAD    A9,8,I .         DOWC
)@@G@@ 8 CHARS NOW@C@@@]         LINK    WRPFLD .          OUTPUT THEM  @D@#@]WD
)@@G@@         SUB     A10,12,I .        ACCOUNT FOR THEM   @D@@@#         SUBWE
)@@G@@     A10,8,I .        ACCOUNT FOR THEM    @C@@@]         GOTO    WRF031 WF
)@@G@@.          GO TRY AGAIN @ @@@]WRF032   LABEL . LAST TIME NOW@E@@@]      WG
)@@G@@   LOAD    A9,A10 .          GET COUNT OF ZEROS LEFT  @E@@@]         LINWH
)@@G@@K    WRPFLD .          PUT OUT THE LAST OF THEM @C@@@]         IF  R6,ZEWI
)@@G@@RO THEN,WRF200 . ALL DONE?    @D@@@]WRF034   LABEL .                   PWJ
)@@G@@OINT TO NUMBER NOW@D@#@]         SETGC   6,DLXCON .        AFTER LEADINGWK
)@@G@@ ZEROS@D@@@#         SETGC   4,DLXCON .        AFTER LEADING ZEROS@D@@@]WL
)@@G@@         GOTO    WRF033 .          GO PRINT Q NOW     @[@@@].     @[@@@]WM
)@@G@@.     @[@@@].     @A@@@].        Q     FRACTIONAL DIGITS    @[@@@].     WN
)@@G@@@[@@@].     @[@@@].     @#@@@]WRF100   LABEL .  @C@@@]         IF    R6,WO
)@@G@@ZERO THEN,WRF200 . ->DONE     @#@@@]         PUTCH '.'@E@@@]WRF033   LABWP
)@@G@@EL .                   MERGE HERE FROM ABOVE    @B@@@]         LOAD  A9,WQ
)@@G@@R6 .             Q SIZE @C@@@]         IF    A9,LT,48,I THEN,WRF103 . ->WR
)@@G@@OK    @D@@@]         SUB   A9,48,I .           DO ONLY 48 NOW     @^@@@]WS
)@@G@@         STORE A9,R6 .  @^@@@]         LOAD  A9,48,I .@^@@@]         LINWT
)@@G@@K  WRPFLD . @#@@@]WRF101   LABEL .  @C@#@]         SETGC 6,DWRZRO .     WU
)@@G@@     ZERO FILL    @C@@@#         SETGC 4,DWRZRO .          ZERO FILL    WV
)@@G@@@^@@@]         LOAD  A9,R6 .  @D@#@]         IF    A9,LT,13,I THEN,WRF10WW
)@@G@@3 . ->OK FOR REST @D@@@#         IF    A9,LT,9,I THEN,WRF103 . ->OK FOR WX
)@@G@@REST  @^@#@]         SUB   A9,12,I .@^@@@#         SUB   A9,8,I . @^@@@]WY
)@@G@@         STORE A9,R6 .  @^@#@]         LOAD  A9,12,I .@^@@@#         LOAWZ
)@@G@@D  A9,8,I . @^@@@]         LINK  WRPFLD . @^@@@]         GOTO  WRF101 . XA
)@@G@@@#@@@]WRF103   LABEL .  @C@@@]         LINK  WRPFLD .            PUT FIEXB
)@@G@@LD    @#@@@]WRF200   LABEL .  @D@@@]         IF    IONUM,ZERO THEN,IORTNXC
)@@G@@M . -> F FORMAT   @A@@@]         GOTO  WRE100 . ->E FORMAT  @[@@@]/.    XD
)@@G@@@G@@@].        WREDFC                    PUT OUTUT NUMBER IN STANDARD FOXE
)@@G@@RM    @[@@@].     @[@@@].     @[@@@].     @#@@@]WREDFC   LOCAL .  @C@@@]XF
)@@G@@         LOAD  X5,R8 .             DED INFO     @^@@@]         USING WORXG
)@@G@@D,X5 .@D@@@]         IF    SDARST,ON,W1Q2 THEN,WREDTR2 . ->ERROR  @C@@@]XH
)@@G@@         LOAD  A3,W1Q2 .           CALL CVSTR   @E@@@]         AND,U A3,XI
)@@G@@SDDCBN+SDFXFL .  LEAVE NEC. FLAGS ONLY    @ @@@]         STORE A4,DCVFLGXJ
)@@G@@ .    @D@@@]         LOAD  A3,W1H2 .           PICK UP Q AND P    @C@@@]XK
)@@G@@         STORE A3,DCVBQP .         SET Q AND P  @C@@@]         STORE A3,XL
)@@G@@DCVDQP .         SET Q AND P  @C@@@]         LOAD  X5,IODTA5 .         DXM
)@@G@@ATUM ADDR   @C@@@]         LOADD A3,W1 .             DATUM VALUE  @C@@@]XN
)@@G@@         STORED                    A3,DCVFFT .  @C@@@]         STORED   XO
)@@G@@                 A3,DCVFLT .  @ @@@]         STORE A3,DCVINT .    @F@@@#XP
)@@G@@         STORE   R5,DEXWK1 .       SAVE R5 THRU CVE PROC *****    @F@@@#XQ
)@@G@@         STORE   R6,DEXWK2 .       SAVE R6 THRU CVE PROC *****    @G@#@]XR
)@@G@@         STORE   R5,DEXWK1 .       SAVE R5 THRU CVE PROC          ***** XS
)@@G@@@G@#@]         STORE   R6,DEXWK2 .       SAVE R5 THRU CVE PROC          XT
)@@G@@***** @D@@@]         LINK  EXCVST .            CONVERT TO STRING  @F@@@#XU
)@@G@@         LOAD    R5,DEXWK1 .       SAVE R5 THRU CVE PROC *****    @F@@@#XV
)@@G@@         LOAD    R6,DEXWK2 .       SAVE R6 THRU CVE PROC *****    @G@#@]XW
)@@G@@         LOAD    R5,DEXWK1 .       RESTORE R5                     ***** XX
)@@G@@@G@#@]         LOAD    R6,DEXWK2 .       RESTORE R6                     XY
)@@G@@***** @B@@@]         JMP .                     RETURN @[@@@].     @[@@@]XZ
)@@G@@.     @[@@@].     @ @@@].        DLXCON =+DIGIT STRING@C@@@].        DCVYA
)@@G@@INT=LOCATION AFTER DLXCON OF '.'    @[@@@].     @[@@@].     @^@@@]/ .   YB
)@@G@@   DATA STORAGE   @#@@@]UNINIT   SFW   0 .@#@@@]         +$+2 .   @#@#@]YC
)@@G@@         +6,6     @#@@@#         +4,4     @#@@@#KKSTAR   SFW 0 .  @F@#@]YD
)@@G@@         +'******' .               UNINITIALIZED CHARACTER STRING @F@@@#YE
)@@G@@         +'****' .                 UNINITIALIZED CHARACTER STRING @#@@@]YF
)@@G@@         CEND .   @E@@@]ERFM13   EQU   78 .                INVALID FORMAYG
)@@G@@T OPTION    @D@@@]ERFM16   EQU   79 .                IMPLIED CONVERSION YH
)@@G@@@C@@@]ERFM19   EQU   80 .                SIZE ERROR   @D@@@]ERFMCM   EQUYI
)@@G@@   81 .                CONVERSION ERROR   @F@@@]ERFM18   EQU   82 .     YJ
)@@G@@           ILLEGAL CHARACTER, 0 USED .    @]@@@]         END___        PYK
)@@G@@*[S@@@*SDFF*@C@@@O.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@OYL
)@@G@@.     @D@@@O.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@OYM
)@@G@@.     @ @@@O.        MARVIN V. ZELKOWITZ  @B@@@O.        DEPARTMENT OF CYN
)@@G@@OMPUTER SCIENCE   @A@@@O.        UNIVERSITY OF MARYLAND     @B@@@O.     YO
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@O.     @G@@@O.        PERMISSIOYP
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@O.   REPRESENYQ
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@O.     @G@@@O.     YR
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@OYS
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDYT
)@@G@@@E@@@O.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@OYU
)@@G@@.     @F@@@O.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDYV
)@@G@@ED:   @[@@@O.     @G@@@O.        (A) ANY RESULTING PROGRAM, OR REPORT, PYW
)@@G@@APER OR DOCUMENTATION   @G@@@O.        DESCRIBING SUCH PROGRAM WILL CLEAYX
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@O.        IS A DIALECT OF PLUM OR IS YY
)@@G@@DERIVED FROM PLUM, AND  @[@@@O.     @G@@@O.        (B) ALL SUCH MODIFICAYZ
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@O.        OF ERRORS IN THZA
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@O.        A BRIEF DESCRIPZB
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@O.        TO THE UNZC
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@O.     @F@@@O.        (C) NO PROGRAMSZD
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@O.        WITHOUT WRITTENZE
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@O.     @F@@@O.     ZF
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@O.     ZG
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@OZH
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     ZI
)@@G@@@E@@@O.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@OZJ
)@@G@@.     @G@@@O.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERZK
)@@G@@ ITSELF,    @F@@@O.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN ZL
)@@G@@USING PLUM. @E@@@O.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USZM
)@@G@@ER TO @F@@@O.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRZN
)@@G@@ODUCT @G@@@O.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT ZO
)@@G@@DEVELOPED   @#@@@O.   FROM PLUM.    @[@@@O.     @[@@@O.     @[@@@O.     ZP
)@@G@@@[@@@O.     @[@@@O.     @[@@@O/.    @#@@@N          AXR$ .  @#@@@N      ZQ
)@@G@@    DCLRG . @#@@@N          UNLIST .@#@@@N@ADD PLTVDS  .    @#@@@N@ADD EZR
)@@G@@XCDS  .     @#@@@N          LIST .  @#@@@N          PLAR .  @D@@@N      ZS
)@@G@@    PLAC  .                  SET ALPHA CODE     @#@@@N          PLSD .  ZT
)@@G@@@#@@@N          PLWORD .@^@@@NEXERW0   EQU     54 .   @^@@@NEXERW1    EQZU
)@@G@@U       96 .@^@@@NEXERW2    EQU       97 .@ @@@N          ORIGIN    DEXWZV
)@@G@@K3 .  @#@@@NSDLOC     SH .    @]@@@NEXMSZER   SH@#@@@NEXRTRN    SF .    ZW
)@@G@@@]@O@NEX10TP SF.  @C@@@O. EX10TP SF.         DELETED BY M. ZELKOWITZ    ZX
)@@G@@@[@@@N .    @#@@@N .        NOTE    @[@@@N .    @E@@@N .        IF THIS ZY
)@@G@@IS CHANGES TO USE DEXWK3 OR DEXWK4 THEN   @B@@@N .        CHANGES MUST BZZ
)@@G@@E MADE TO EXDB    @[@@@N .    @[@@@N .    @[@@@N .    @^@@@NPLMP      CSAA
)@@G@@ECT     3 . @^@@@NEXJUMP    SFW       0 . @ @@@N          GOTO      EXNEAB
)@@G@@XT .  @F@@@NPLPMDP*   LOCAL .                     ENTRY POINT FOR PMD ROAC
)@@G@@UTINE @ @@@O         USING   SDSECT,X4 .  @B@O@N          STORE X10,EX10AD
)@@G@@TP . SAVE X10     @G@@@N          MOVE      EXMSZER,0,I .     ZERO OUT RAE
)@@G@@IGHT HALF OF SD WORD    @H@@@N          MOVE      EXRTRN,EXJUMP .   STORAF
)@@G@@E INTO D-BANK 'GOTO' INSTRUCTION    @ @@@N          USING     AREC,X10 .AG
)@@G@@@G@@@O          IF         DPMSTT,SAME,DGOPT5 THEN,EXRETN .  SIZE LIST RAH
)@@G@@ETURN @H@O@N          LOAD      A8,ARSTMT .       LOAD IN THE CURRENT STAI
)@@G@@ATEMENT NUMBER    @G@@@N          LOAD      A9,ARESDP .       LOAD IN SDAJ
)@@G@@ POINTER TO ENTRY SD    @E@@@O         IF      A9,NE,0,I  THEN,PLPMD1 . AK
)@@G@@NORMAL A.R. BLOCK @E@@@O         LOAD    X10,ARDYNM .      SKIP ON UNIT AL
)@@G@@AUX BLOCK   @ @@@O         LOAD    A9,ARESDP .  @#@@@OPLPMD1   LABEL .  AM
)@@G@@@H@@@O          LOAD      A8,R11 .          LOAD IN THE CURRENT STATEMENAN
)@@G@@T NUMBER    @I@@@N          EXERR     EXERW1,I,I  LEVEL,1  'NONUM' . PRIAO
)@@G@@NT OUT CURRENT PROC. LEVE     @G@@@N          LOAD      X4,ARBSDP .     AP
)@@G@@  GET THE SD POINTER TO THE SD BLOCK@E@@@O         LOAD    A1,SDBKDP .  AQ
)@@G@@     GET CURRENT BLOCK DEPTH  @F@@@O         SUB     A1,1,I .          AAR
)@@G@@LREADY PRINTED OUTERMOST LEVEL@E@Q@O         LOADA   X9,ARSTLK .       IAS
)@@G@@NIT PTR TO STATIC LINKS @E@R@Q         LOADXM  X9,ARSTLK,I .     INIT PTAT
)@@G@@R TO STATIC LINKS @E@@@R         LOADA   X6,ARSTLK .       INIT PTR TO SAU
)@@G@@TATIC LINKS @^@R@O         ADD     X9,A1 .@^@@@R         ADD     X6,A1 .AV
)@@G@@@E@@@N          LINK      EXDUMP .          DUMP LOCAL VARIABLES  @#@@@NAW
)@@G@@EXLOOP    LABEL . @G@@@N          LOAD      X1,2,I .          LOAD IN SKAX
)@@G@@IP COUNT (MINUS ONE).   @D@@@N          LINK      EXPTOP .          GENEAY
)@@G@@RATE A SKIP @E@@@N          +         ICGTSF .          WITH THE SKIP BIAZ
)@@G@@T SET.@F@@@O         IF      DPMSTA,OFF,DGOPT5 THEN,EXNST . NOT ACCESSIBBA
)@@G@@LE    @D@R@O         LOAD    X10,0,X9 .         GO UP STATIC LINKS@D@@@RBB
)@@G@@         LOAD    X10,0,X6 .         GO UP STATIC LINKS@D@R@O         SUBBC
)@@G@@     X9,1,I .          UP PTR(OR DOWN PTR)@D@@@R         SUB     X6,1,I BD
)@@G@@.          UP PTR(OR DOWN PTR)@ @@@O         GOTO    EXNSTA .     @#@@@OBE
)@@G@@EXNST    LABEL .  @ @O@N          USING     AREC,X10 .@D@O@N         LOABF
)@@G@@D    A7,ARBSDP .       SAVE OLD SD POINTER@I@@@N          LOAD      X10,BG
)@@G@@ARDYNM .      GET DYNAMIC LINK TO THE CALLING BLOCK'S A     @G@O@N      BH
)@@G@@   IF      DPMSTT,OFF,DGOPT5 THEN,EXNSTA . IS STATIC LIST OFF     @G@O@NBI
)@@G@@         IF      A7,EQ,ARBSDP THEN,EXLOOP . EQ=>BLOCK VARS. PRINTED ONCEBJ
)@@G@@@#@@@NEXNSTA   LABEL .  @G@@@O          LOAD      A9,ARESDP .       LOADBK
)@@G@@ IN SD POINTER TO SD BLOCK    @E@@@O         IF      A9,NE,0,I  THEN,EXNBL
)@@G@@ST1 . NORMAL A.R. BLOCK @E@@@O         LOAD    X10,ARDYNM .      SKIP ONBM
)@@G@@ UNIT AUX BLOCK   @ @@@O         LOAD    A9,ARESDP .  @#@@@OEXNST1   LABBN
)@@G@@EL .  @G@@@N          LOAD      X4,ARBSDP .       GET THE SD POINTER TO BO
)@@G@@THE SD BLOCK@A@@@N          USING     SDSECT,X4 .     @I@O@N          IFBP
)@@G@@        SDBKDP,ZERO  THEN,EXRETN . NO MORE PROCEDURE BLOCKS: RETURN.    BQ
)@@G@@@I@@@O          IF        SDBKDP,ZERO  THEN,EXRETN . NO MORE PROCEDURE BBR
)@@G@@LOCKS: RETURN.    @H@@@N          LOAD      A8,ARSTMT .       LOAD IN THBS
)@@G@@E CURRENT STATEMENT NUMBER    @G@O@N          LOAD      A9,ARESDP .     BT
)@@G@@  LOAD IN SD POINTER TO SD BLOCK    @H@@@N          EXERR     EXERW2,I,IBU
)@@G@@  LEVEL,1  'NONUM' . PRINT OUT PROCEDURE LEVEL  @F@@@N          LINK    BV
)@@G@@  EXDUMP .          AND DUMP LOCAL VARIABLES    @H@@@N          GOTO    BW
)@@G@@  EXLOOP .          LOOP UNTIL THERE ARE NO MORE PROCEDURES @#@@@NEXRETNBX
)@@G@@    LABEL . @C@@@O         IF      DPMSTT,OFF,DGOPT5  THEN,JMP .  @ @@@NBY
)@@G@@         LOAD    A7,ADPCSE .  @D@@@N         SUB     A7,ADPSDE . SIZE OFBZ
)@@G@@ SYMBOL TABLE     @C@O@N         LOAD    A8,0,I . STATIC STORAGE SIZE   CA
)@@G@@@C@@@O         LOAD    A8,ADBCSZ . SIZE OF BETA CODE  @ @@@N         LOACB
)@@G@@D    A9,DCGLCG .  @C@@@N         SUB     A9,ADPCSE .       SIZE OF CODE CC
)@@G@@@ @@@N         LOAD    A10,DEXMAX . @D@@@N         SUB     A10,DCGLCG . CD
)@@G@@     RUNTIME STACK SIZE @ @O@N         LOAD    A11,ADPCND . @ @@@O      CE
)@@G@@   LOAD    A11,ADPEND . @F@@@P         IF      DSYALC,ZERO THEN,EXRTN1 .CF
)@@G@@ NO FILES OR BASED STRG @D@@@P         LOAD    A11,ADPCND .      USE CURCG
)@@G@@RENT END    @#@@@PEXRTN1   LABEL .  @E@@@N         SUB     A11,DEXMAX . CH
)@@G@@     AMOUNT OF UNUSED CORE    @F@@@N         EXERR   EXERW0,I,I LEVEL,1 CI
)@@G@@'NONUM' . PRINT SIZE LIST     @B@O@N          LOAD X10,EX10TP . RESTORE CJ
)@@G@@X10   @^@@@N          JMP . RETURN  @[@@@N .    @H@@@NEXDUMP    LOCAL . CK
)@@G@@                    ROUTINE WHICH DUMPS LOCAL VARIABLES     @F@@@N      CL
)@@G@@    LOAD      X1,1,I .          LOAD IN SKIP COUNT: ONE.    @G@@@N      CM
)@@G@@    LINK      EXPTOP .          INTIALIZE DATA AND GENERATE A SKIP@F@@@NCN
)@@G@@          +         ICGTSF++ICGTDF .  SKIP AND DATA MODE BITS ON  @#@@@NCO
)@@G@@EXNEXT    LABEL . @F@@@N          LOAD      X4,SDNXDC .       LOAD IN LICP
)@@G@@NK TO NEXT SD     @I@@@N          IF        X4,ZERO THEN,JMP . LINK = ZECQ
)@@G@@RO: NO MORE SDS IN CURRENT BLOCK    @F@@@P         IF      SD4RFE,OFF,SDCR
)@@G@@CLS4  THEN,EXNEXT . NEVER REFERENCED@F@@@N          LOAD      A7,SDCLS0 CS
)@@G@@.       GET STORAGE CLASS OF SD     @G@@@N          LAND      A7,017,I .CT
)@@G@@        RETAIN ONLY THE LOW-ORDER BITS    @G@@@N          IF        A7,ECU
)@@G@@Q,SD0ART,I  THEN,EXARRY . CLASS: ARITHMETIC.    @F@@@N          IF      CV
)@@G@@  A7,EQ,SD0STR,I  THEN,EXARRY . CLASS: STRINGS. @G@@@N          IF      CW
)@@G@@  A7,EQ,SD0STU,I  THEN,EXCKAO . CLASS: STRUCTURE.     @H@@@N          IFCX
)@@G@@        DPMALL,ON,DGOPT5  THEN,EXOK . CLASS: OTHERS, CHECK OPTION.@H@@@NCY
)@@G@@          GOTO      EXNEXT .          OTHER OPTION NOT ONE, CHECK OTHER CZ
)@@G@@SDS   @#@@@NEXARRY    LABEL . @I@@@N          IF        SDARRY,ON,SDCLS2DA
)@@G@@ THEN,EXCKAO . IF ARRAY SD CHECK ARRAY OPTIO    @H@@@N          IF      DB
)@@G@@  DPMSCL,ON,DGOPT5  THEN,EXOK . IF SCALAR OPTION ON DUMP SD.@F@@@N      DC
)@@G@@    GOTO      EXNEXT .          IF NOT, CHECK ON OTHER SDS. @B@@@NEXCKAODD
)@@G@@    LABEL .   CHECK ARRAY OPTION    @I@@@N          IF        DPMARR,OFFDE
)@@G@@,DGOPT5  THEN,EXNEXT . IF OPTION OFF CHECK OTHERS     @H@@@NEXOK      LADF
)@@G@@BEL .                                    IF OPTION ON DUMP SD.    @G@@@NDG
)@@G@@         IF SDMEMS,ON,SDCLS2 THEN,EXNEXT . DON'T PRINT STRUCTURE MEMBERSDH
)@@G@@@F@@@N          STORE     X4,SDLOC .        STORE SD IN ARGUMENT LIST   DI
)@@G@@@F@@@N          LOADA     X11,SDLOC .       POINTER TO ARGUMENT LIST    DJ
)@@G@@@G@@@N          LOAD      X1,1,I .          SPECIFY THAT A SD LIST FOLLODK
)@@G@@WS.   @D@@@N          GOTO      EXPTDT .          CALL I/O ROUTINE@#@@@NDL
)@@G@@          END .   ___ LOAD      X4,ARBSDP .       GET THE SD POINTER TO DM
)@@G@@THE SD BLOCK@E@@@O         LOAD    A1,SDBKDP .       GET CURRENT BLOCK DDN
)@@G@@*[S@@@*SDFF*@C@@@=.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@=DO
)@@G@@.     @D@@@=.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@=DP
)@@G@@.     @ @@@=.        MARVIN V. ZELKOWITZ  @B@@@=.        DEPARTMENT OF CDQ
)@@G@@OMPUTER SCIENCE   @A@@@=.        UNIVERSITY OF MARYLAND     @B@@@=.     DR
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@=.     @G@@@=.        PERMISSIODS
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@=.   REPRESENDT
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@=.     @G@@@=.     DU
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@=DV
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDDW
)@@G@@@E@@@=.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@=DX
)@@G@@.     @F@@@=.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDDY
)@@G@@ED:   @[@@@=.     @G@@@=.        (A) ANY RESULTING PROGRAM, OR REPORT, PDZ
)@@G@@APER OR DOCUMENTATION   @G@@@=.        DESCRIBING SUCH PROGRAM WILL CLEAEA
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@=.        IS A DIALECT OF PLUM OR IS EB
)@@G@@DERIVED FROM PLUM, AND  @[@@@=.     @G@@@=.        (B) ALL SUCH MODIFICAEC
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@=.        OF ERRORS IN THED
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@=.        A BRIEF DESCRIPEE
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@=.        TO THE UNEF
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@=.     @F@@@=.        (C) NO PROGRAMSEG
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@=.        WITHOUT WRITTENEH
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@=.     @F@@@=.     EI
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@=.     EJ
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@=EK
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     EL
)@@G@@@E@@@=.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@=EM
)@@G@@.     @G@@@=.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILEREN
)@@G@@ ITSELF,    @F@@@=.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN EO
)@@G@@USING PLUM. @E@@@=.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USEP
)@@G@@ER TO @F@@@=.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PREQ
)@@G@@ODUCT @G@@@=.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT ER
)@@G@@DEVELOPED   @#@@@=.   FROM PLUM.    @[@@@=.     @[@@@=.     @[@@@=.     ES
)@@G@@@[@@@=.     @[@@@=.     @[@@@=/.    @#@@@<         AXR$ .   @#@@@<      ET
)@@G@@   DCLRG .  @#@@@<         UNLIST . @#@@@<@ADD PLTVDS .     @]@@@<@ADD EEU
)@@G@@XCDS .@#@@@<         LIST .   @#@@@<         PLWORD . @#@@@<         PLAEV
)@@G@@R .   @#@@@=         PLAC .   @#@@@<         PLSD .   @C@@@<XXXXX    CSEEW
)@@G@@CT   3 .               LOCAL DATA   @F@@@<LHSSIZ   EQU  DEXWK1+FH1 .    EX
)@@G@@     WORKSPACE FOR CONCAT ROUTINES  @B@@@<LHSREM   EQU  DEXWK1+FH2 .    EY
)@@G@@        ''  @B@@@<RHSSIZ   EQU     DEXWK2+FH1 .         ''  @B@@@<RHSREMEZ
)@@G@@   EQU     DEXWK2+FH2 .         ''  @F@@@<FAKEDV   EQU  DEXWK3 .        FA
)@@G@@     IT ALSO NEEDS A 2-WRD AREA     @D@@@<SVDVTY   EQU     SVDVFG-FH1+FSFB
)@@G@@2 .  FLAGS IN SAVE AREA @C@@@=SVDVKY   EQU     SVDVFG-FH1+FS1     . DITTFC
)@@G@@O     @E@@@<OUTSFT   SFW     0 .               SHIFT FOR CHAR ALIGNMENT FD
)@@G@@@C@@@<         +36 .                     0 CHARS LEFT @C@@@<         +27FE
)@@G@@ .                     1 CHAR LEFT  @C@@@<         +18 .                FF
)@@G@@     2 CHARS LEFT @C@@@<         +9 .                      3 CHARS LEFT FG
)@@G@@@C@@@<         +0 .                      4 CHARS LEFT @G@@@<BFINIT*  SFWFH
)@@G@@     0 .               INITIALIZATION FOR SOME AND EVERY    @D@@@<      FI
)@@G@@   +0,0,0,0,0,0 .             SAY BIT STRING    @E@@@<         +1,1 .   FJ
)@@G@@                 MAX AND CURRENT LENGTHS  @D@@@<KIRBY2*  LLOC .         FK
)@@G@@           EXEC USES THIS DATA@E@=@<         '0000' .                   FL
)@@G@@PADDING FOR BIT STRING  @D@@@<         '    ' .                   PADDINFM
)@@G@@G FOR CHAR  @E@@@=         '0000' .                   PADDING FOR BIT STFN
)@@G@@RING  @G@@@<BITBIT   SFW     0 .               INSTRUCTION USED IN BIT TFO
)@@G@@O BIT ASSIGN@G@@@<CHARCH   SFW     0 .               INSTRUCTION FOR CHAFP
)@@G@@R TO CHAR ASSIGN  @E@>@<.        LOAD    A4,0,*A3 .        LOAD THE WORDFQ
)@@G@@ NEEDED     @E@@@>         LOAD    A4,0,*A3 .        LOAD THE WORD NEEDEFR
)@@G@@D     @G@@@<CHRBI1   LABEL .                    TOP OF CHAR TO BIT CONVEFS
)@@G@@RSION LOOP  @^@@@=         STACK   A1 .   @^@@@=         STACK   X1 .   FT
)@@G@@@ @@@=         SETGC   4,0,A3 .     @ @@@=         STORE   A1,ONIOSV+4 .FU
)@@G@@@ @@@=         STORE   X1,ONIOSV+5 .@^@@@=         UNSTK   X1 .   @^@@@=FV
)@@G@@         UNSTK   A1 .   @A@@@=         MOVE    ONIOSV+3,0,I .     @D@@@<FW
)@@G@@         LOAD    A4,0,*A3 .        LOAD THE CHARS     @F@@@<         ANDFX
)@@G@@     A4,NOTONE .       DON'T WORRY ABOUT THOSE BITS   @F@=@<         XORFY
)@@G@@     A5,KIRBY2 .       CHECK FOR PROPER BIT PATTERN   @F@@@=         XORFZ
)@@G@@     A5,KIRBY2+1 .     CHECK FOR PROPER BIT PATTERN   @C@@@<         IF GA
)@@G@@ A6,EQ,0,I THEN,CHRBI2 . IT WAS O.K.@B@=@<         STACK   X5 .         GB
)@@G@@     SAVE X5@C@=@<         LOCAL .                   SAVE X11     @F@=@<GC
)@@G@@         EXERR   EREXIF  LEVEL,2 . ILLEGAL CHAR IN BIT STRING     @C@=@<GD
)@@G@@         UNSTK  X11 .             RECOVER X11   @C@=@<         UNSTK  X5GE
)@@G@@ .              RECOVER X5    @F@@@<         SETL    R1,4,I .          SGF
)@@G@@ET COUNT TO FOUR CHARS IN WORD@C@@@<CHRBI4   LABEL .                   TGG
)@@G@@OP OF LOOP  @C@@@<         SRBD    A4,9 .            GET A CHAR   @D@@@<GH
)@@G@@         SRB     A5,27 .           RIGHT JUSTIFY IT   @C@@@<         IF GI
)@@G@@ A5,EQ,'0',I THEN,CHRBI3 . '0' IS OK@D@@@=         IF      A5,EQ,'1',I  GJ
)@@G@@THEN,CHRBI3 . '1' IS OK @^@@@=         STACK   A1 .   @^@@@=         STAGK
)@@G@@CK   X1 .   @^@@@=         LOAD    X1,A3 .@ @@@=         SUB     X1,1,I GL
)@@G@@.     @G@@@=         SETGC   4,0,X1 .          SET GETC REGS TO BEGIN. OGM
)@@G@@F BAD WORD  @^@@@=         ADD     A1,R1 .@F@@@=         GETC .         GN
)@@G@@           SET GETC REGS TO CORRECT VALUES@ @@@=         STORE   A1,ONIOGO
)@@G@@SV .  @ @@@=         STORE   X1,ONIOSV+1 .@ @@@=         SUB     X1,ONIOGP
)@@G@@SV+5 .@^@@@=         LOAD    A1,X1 .@^@@@=         SLB     A1,2 . @^@@@=GQ
)@@G@@         LOAD    A5,R1 .@B@@@=         IF      A5,EQ,3,I  THEN,CHRBI5 . GR
)@@G@@@^@@@=         ADD     A1,R1 .@ @@@=         ADD     A1,1,I .     @#@@@=GS
)@@G@@CHRBI5   LABEL .  @ @@@=         STOREN  A1,ONIOSV+2 .@^@@@=         UNSGT
)@@G@@TK   X1 .   @^@@@=         UNSTK   A1 .   @C@@@&         LOCAL .        GU
)@@G@@           SAVE X11     @F@&@=         ONUNIT  EREXCV,ACCDCV,2  JMP,I,CHGV
)@@G@@RBI3  DEXWK1,8  DEXMAX,1@G@$@&         ONUNIT  EREXCV,ACCDCV,2  R,CHRBI6GW
)@@G@@,CHRBI3  DEXWK1,8  DEXMAX,1   @G@@@$         ONUNIT  EREXCV,ACCDCV,2  R,GX
)@@G@@CHRBI6,CHRBI7  DEXWK1,8  DEXMAX,1   @^@@@&         UNSTK   X11 .  @E@@@&GY
)@@G@@         JMP .                     GET OUT OF STATEMENT     @#@@@&CHRBI6GZ
)@@G@@   LABEL .  @E@=@<         LOAD    A5,'1',I .        OTHERWISE IT IS A 'HA
)@@G@@1'    @E@@@=         LOAD    A5,'0',I .        OTHERWISE IT IS A '0'    HB
)@@G@@@#@@@$CHRBI7   LABEL .  @C@$@<CHRBI3   LABEL .                   MERGE HHC
)@@G@@ERE   @D@@@&         UNSTK   X11 .             RESTORE LOOP COUNT @C@@@$HD
)@@G@@CHRBI3   LABEL .                   MERGE HERE   @E@@@<         SRBD    AHE
)@@G@@5,9 .            MERGE WITH OTHER CHARS   @D@@@<         LOOP    R1,CHRBHF
)@@G@@I4 .       DO ALL FOUR CHARS  @C@@@<         LOAD    A4,A6 .           SHG
)@@G@@ET RETURN   @E@@@<CHRBI2   LABEL .                   ->MERGE HERE IF O.KHH
)@@G@@.     @D@@@<         LMJ     X5,0,X5 .         RETURN AND RESET X5@G@@@<HI
)@@G@@CHRBIT   LABEL .                   START OF CHAR TO BIT CONVERSION LOOP HJ
)@@G@@@D@@@<         LMJ     X5,CHRBI1 .       GO TO TOP OF LOOP  @F@@@<NOTTERHK
)@@G@@   +1,1,1,1 .                USED WITH XOR TO SWITCH BITS   @G@@@<NOTONEHL
)@@G@@   +0776776776776 .          CONSTANT TO AND OUT EVERY ONES BIT   @F@@@<HM
)@@G@@ALLBIT   +0777777777777 .          MASK WORD FOR IN STRING COMPARE@D@@@<HN
)@@G@@HIGHBT   +0177177177177 .          BITS FOR HIGH BIF  @G@@@<FORTHR    -4HO
)@@G@@,-3 .                  USED TO SET UP FOR JILOOP IN ROUTINES@G@@@<FORFORHP
)@@G@@    -4,-4 .                  USED TO SET UP FOR JILOOP IN ROUTINES@G@@@<HQ
)@@G@@UNSPFL   +03006014030 .             CONSTANT FILL FOR BIT CONVERSION    HR
)@@G@@@G@@@<EXLN1    SFW     0 .               MAX AND CURRENT LENGTHS FOR EXDHS
)@@G@@VA3   @#@@@<         +1,1 .   @F@@@<EBTMSK   SFW     0 .               FHT
)@@G@@LAGS FOR BIT AND,OR,AND NOT   @D@@@<         +0,0,ARDVTM,0,0,0 .       SHU
)@@G@@TRING IS ON STACK @G@@@<STRDVZ   EQU     2 .               SIZE OF DV ONHV
)@@G@@ STRING STACK      **** @E@@@<EXSTNI   EQU     50 .              STRING HW
)@@G@@NOT INITIALIZED . @F@@@<EREXIF   EQU     51 .              ILLEGAL CHAR HX
)@@G@@IN BIT STRING     @^@@@=EREXCV   EQU     81 .   @F@@@<EXSBST   EQU     9HY
)@@G@@8 .              'STR' OUT OF RANGE IN SUBSTR   @F@=@<EXERLW   EQU     0HZ
)@@G@@777 .            COUNTER NEG IN LOW/HIGH ***    @F@=@<EXCOPY   EQU     0IA
)@@G@@777 .            NEG COUNTER FOR COPY    ***    @G@@@=EXCOPY   EQU     1IB
)@@G@@03 .             NEG COUNTER FOR COPY/LOW/HIGH    *** @F@@@<EXINDX   INSIC
)@@G@@ERT  5,'IND','EX  ' .   THE WORD INDEX FOR ERROR MSG  @F@@@<EXLENG   INSID
)@@G@@ERT  6,'LEN','GTH ' .  THE WORD LENGTH FOR ERROR MSG  @C@@@=EXCOPS   INSIE
)@@G@@ERT  4,'COP','Y   ' .  THE WORD COPY@C@@@=EXLOWS   INSERT  3,'LOW' .    IF
)@@G@@     THE WORD LOW @C@@@=EXHIGS   INSERT  4,'HIG','H   ' .  THE WORD HIGHIG
)@@G@@@C@@@<BFCLAT*  SFW 0 .                   COLATE BIF   @D@@@<         $+2IH
)@@G@@ .                     POINT TO THE STRING@E@@@<         +128,128 .     II
)@@G@@           MAX AND CURRENT LENGTHS  @D@@@<K        DO 32 , +000001002003IJ
)@@G@@+(K-1)*004004004004 .   @[@@@<.     @[@@@<.     @B@@@<.        TABLES FOIK
)@@G@@R USE BY EXBOOL FUNCS   @F@@@<.                FORMAT: +'XXXX'-BIT STRINIL
)@@G@@G TO MATCH THAT SUPPLIED@C@@@<.                                BY THE USIM
)@@G@@ER.   @G@@@<.                       +ADDRESS-THE ADDRESS OF THE PROPER IIN
)@@G@@NSTRUCTIONS @E@@@<.                                FOR THE FUNCTION DESIIO
)@@G@@RED   @[@@@<.     @F@@@<EXBOLL   LABEL .                   TOP OF LIST OIP
)@@G@@F LOGIC FUNCTIONS @D@@@<         +'0000' .                 FALSE-ALL ZERIQ
)@@G@@OS    @ @@@<         +EXBL01,EXBL01 .     @B@@@<         +'0001' .      IR
)@@G@@           A & B  @ @@@<         +EXBL02,EXBL02 .     @B@@@<         +'0IS
)@@G@@010' .                 A & ^B @ @@@<         +EXBL05,EXBL03 .     @B@@@<IT
)@@G@@         +'0011' .                  A     @ @@@<         +EXBL06,EXBL04 IU
)@@G@@.     @B@@@<         +'0100' .                 ^A & B @ @@@<         +EXIV
)@@G@@BL03,EXBL05 .     @A@@@<         +'0101' .                 B@ @@@<      IW
)@@G@@   +EXBL04,EXBL06 .     @C@@@<         +'0110' .                 A # B  IX
)@@G@@(XOR) @ @@@<         +EXBL07,EXBL07 .     @B@@@<         +'0111' .      IY
)@@G@@           A ! B  @ @@@<         +EXBL08,EXBL08 .     @B@@@<         +'1IZ
)@@G@@000' .                 A ^! B @ @@@<         +EXBL09,EXBL09 .     @E@@@<JA
)@@G@@         +'1001' .                 A = B   (A & B ! ^A & ^B)@ @@@<      JB
)@@G@@   +EXBL10,EXBL10 .     @B@@@<         +'1010' .                 ^B     JC
)@@G@@@ @@@<         +EXBL13,EXBL11 .     @B@@@<         +'1011' .            JD
)@@G@@     A ! ^B @ @@@<         +EXBL14,EXBL12 .     @B@@@<         +'1100' .JE
)@@G@@                 ^A     @ @@@<         +EXBL11,EXBL13 .     @B@@@<      JF
)@@G@@   +'1101' .                 ^A ! B @ @@@<         +EXBL12,EXBL14 .     JG
)@@G@@@B@@@<         +'1110' .                 A ^& B @ @@@<         +EXBL15,EJH
)@@G@@XBL15 .     @F@@@<EXBOL1   LABEL .                   ADDRESS OF FUNCTIONJI
)@@G@@ OF ALL ONES@B@@@<         +'1111' .                 TRUE   @ @@@<      JJ
)@@G@@   +EXBL16,EXBL16 .     @[@@@<.     @E@@@<.        AND NOW THE CORRESPONJK
)@@G@@DING FUNCTIONS TO WORK WITH   @D@@@<.                THE EXDOIT LOOP THAJL
)@@G@@T COUNTS CHARS AND@B@@@<.                ALIGNS ON WORD BOUNDRIES @[@@@<JM
)@@G@@.     @E@@@<EXBL01   LOAD    A5,KFZERO .       '0000' GET ALL ZEROS     JN
)@@G@@@D@@@<ANDINS   SFW     0 .               AND INSTRUCTION    @C@@@<EXBL02JO
)@@G@@   AND     A4,0,*A3 .        '0001'=A & B @C@@@<EXBO31   LOAD    A5,0,*AJP
)@@G@@3 .        '0010'=A & ^B@C@@@<         XOR     A5,NOTTER .       GET NOTJQ
)@@G@@ OF B @D@@@<         AND     A4,A6 .           DO THE AND NEEDED  @B@@@<JR
)@@G@@         LMJ     X5,0,X5 .         RETURN @D@@@<EXBL03   LMJ     X5,EXBOJS
)@@G@@31 .       '0010' COMES HERE  @C@@@<EXBL04   LOAD    A5,A4 .           'JT
)@@G@@0011'=A     @D@@@<EXBO51   XOR     A4,NOTTER .       '0100'= ^A & B     JU
)@@G@@@C@@@<         AND     A5,0,*A3 .        AND IN B     @E@@@<         LOAJV
)@@G@@D    A5,A6 .           GET IN PROPER REGISTER   @B@@@<         LMJ     XJW
)@@G@@5,0,X5 .         RETURN @D@@@<EXBL05   LMJ     X5,EXBO51 .       '0100' JX
)@@G@@COMES HERE  @C@@@<EXBL06   LOAD    A5,0,*A3 .        '0101'=B     @F@@@<JY
)@@G@@XORIN1   AND     A4,NOTTER .       AND OUT '0000' (TOP OF LOOP)   @G@@@<JZ
)@@G@@         LA      A4,A5 .           PUT BACK IN THE CORRECT REGISTER     KA
)@@G@@@D@@@<         XOR     A4,0,*A3 .        NOW SWITCH THE BITS@F@@@<      KB
)@@G@@   LMJ     X5,0,X5 .         RETURN AND RESET THE POINTER   @F@@@<XORINSKC
)@@G@@   SFW     0 .               START OF XOR INSTRUCTION GROUP @E@@@<EXBL07KD
)@@G@@   LMJ     X5,XORIN1 .       '0110' COMES HERE = XOR  @D@@@<ORINS    SFWKE
)@@G@@     0 .               OR INSTRUCTION     @C@@@<EXBL08 . OR      A4,0,*AKF
)@@G@@3 .        '0111'=A ! B @D@@@<EXBO91   OR      A4,0,*A3 .        '1000'=KG
)@@G@@ A ^! B     @C@@@<         XOR     A5,NOTTER .       GET THE 'NOT'@E@@@<KH
)@@G@@         LOAD    A5,A6 .           GET IN PROPER REGISTER   @B@@@<      KI
)@@G@@   LMJ     X5,0,X5 .         RETURN @D@@@<EXBL09   LMJ     X5,EXBO91 .  KJ
)@@G@@     '1000' COMES HERE  @F@@@<EXBO10   AND     A4,NOTTER .       '1001'=KK
)@@G@@ A = B (NOT OF XOR)     @C@@@<         XOR     A5,0,*A3 .        XOR WITKL
)@@G@@H B   @E@@@<         LOAD    A4,A6 .           GET IN PROPER REGISTER   KM
)@@G@@@C@@@<         XOR     A4,NOTTER .       TAKE THE NOT @B@@@<         LMJKN
)@@G@@     X5,0,X5 .         RETURN @D@@@<EXBL10   LMJ     X5,EXBO10 .       'KO
)@@G@@1001' COMES HERE  @C@@@<EXBO11   LOAD    A4,0,*A3 .        '1010'= ^B   KP
)@@G@@@C@@@<         XOR     A4,NOTTER .       TAKE THE NOT @B@@@<         LMJKQ
)@@G@@     X5,0,X5 .         RETURN @D@@@<EXBL11   LMJ     X5,EXBO11 .       'KR
)@@G@@1010' COMES HERE  @C@@@<EXBO12   LOAD    A5,0,*A3 .        '1011'=A ! ^BKS
)@@G@@@D@@@<         XOR     A5,NOTTER .       GET THE NOT OF B   @D@@@<      KT
)@@G@@   OR      A4,A6 .           OR TO FORM RESULT  @B@@@<         LMJ     XKU
)@@G@@5,0,X5 .         RETURN @D@@@<EXBL12   LMJ     X5,EXBO12 .       '1011' KV
)@@G@@COMES HERE  @C@@@<EXBL13 . XOR     A4,NOTTER .       '1100'= ^A   @D@@@<KW
)@@G@@EXBO14   XOR     A4,NOTTER .       '1101'= ^A ! B     @E@@@<         LOAKX
)@@G@@D    A4,A5 .           GET INTO PROPER REGISTER @B@@@<         OR      AKY
)@@G@@4,0,*A3 .        OR IN B@B@@@<         LMJ     X5,0,X5 .         RETURN KZ
)@@G@@@D@@@<EXBL14   LMJ     X5,EXBO14 .       '1101' COMES HERE  @D@@@<EXBO15LA
)@@G@@   AND     A4,0,*A3 .        '1110'= A ^& B     @E@@@<         LOAD    ALB
)@@G@@4,A5 .           GET INTO PROPER REGISTER @C@@@<         XOR     A4,NOTTLC
)@@G@@ER .       TAKE THE NOT @B@@@<         LMJ     X5,0,X5 .         RETURN LD
)@@G@@@D@@@<EXBL15   LMJ     X5,EXBO15 .       '1110' COMES HERE  @F@@@<EXBL16LE
)@@G@@   OR      A4,NOTTER .       '1111'= TRUE, TURN ON ALL ONES @[@@@<.     LF
)@@G@@@C@@@<.        THIS IS THE TABLE FOR USE WITH DECAT   @[@@@<.     @D@@@<LG
)@@G@@EXDCAT   +'000' .                 RETURN NULL STRING  @#@@@<         +STLH
)@@G@@NULL .@C@@@<         +'001' .                 RETURN AFTER  @#@@@<      LI
)@@G@@   +BFAFT1 .@C@@@<         +'010' .                 RETURN PATTERN@#@@@<LJ
)@@G@@         +BFDCAA .@D@@@<         +'011' .                 RETURN PATT!!ALK
)@@G@@FTER  @#@@@<         +BFDCAB .@C@@@<         +'100' .                 RELL
)@@G@@TURN BEFORE @#@@@<         +BFBFO1 .@E@@@<         +'101' .             LM
)@@G@@    RETURN ALL BUT PATTERN    @#@@@<         +BFDCAC .@E@@@<         +'1LN
)@@G@@10' .                 RETURN BEFORE!!PATTERN    @#@@@<         +BFDCAD .LO
)@@G@@@D@@@<EXDCA1   +'111' .                 RETURN ENTIRE STRING@#@@@<      LP
)@@G@@   +BFDCAE .@[@@@<.     @G@@@<.                                  AND NOWLQ
)@@G@@ THE ROUTINE FOR ALTC COMMAND @[@@@<.     @F@@@<ALTCDA   +1,ALTC1 .     LR
)@@G@@            POITNER TO INITIALIZE ROUTINE @E@@@<         LOADXM  X11,W1QLS
)@@G@@4,*X5 .    GET LAST CHAR IN WORD    @D@@@<         LMJ     X2,0,X2 .    LT
)@@G@@     RETURN TO CODE     @C@@@<ALTC1    LABEL .                   TOP OF LU
)@@G@@LOOP  @E@@@<         LOADXM  X11,W1Q1,X5 .     GET FIRST CHAR IN WORD   LV
)@@G@@@ @@@<         LOADXM  X11,W1Q2,X5 .@ @@@<         LOADXM  X11,W1Q3,X5 .LW
)@@G@@@D@@@<         LMJ     X2,ALTCDA+1 .     GO GET FOURTH CHAR @[@@@<.     LX
)@@G@@@ @@@<.        PROC TO DO ALTCS     @[@@@<.     @G@@@<ALTC*    PROC  *1,LY
)@@G@@1 .              PROC TO GET CHARS FROM ALT STRING    @C@@@<         EX LZ
)@@G@@     0,*X2 .           GET NEXT CHAR@#@@@<         END .    @^@@@<BACKC MA
)@@G@@   +1,BACKC1 .    @E@@@<         LOAD    A5,W1Q4,X5 .      GET THE LAST MB
)@@G@@QUARTER WORD@D@@@<         LMJ     X2,0,X2 .         RETURN TO THE CODE MC
)@@G@@@ @@@<         LOAD    A5,W1Q3,X5 . @ @@@<         LOAD    A5,W1Q2,X5 . MD
)@@G@@@F@@@<         LOAD    A5,W1Q1,*X5 .     REMEMBER TO MOVE BACK A WORD   ME
)@@G@@@#@@@<BACKC1   LABEL .  @ @@@<         LMJ     X2,BACKC+1 . @E@@@</.    MF
)@@G@@   STRING HANDLEING ROUTINES CALLED BY COMPILED CODE  @[@@@<.     @E@@@<MG
)@@G@@.        DO TEST CHECK A BIT STRING AND RETURN TRUE IF A'1'B@E@@@<.     MH
)@@G@@           IS FOUND BY RETURNING DIRECTLY, ELSE RETURN@F@@@<.           MI
)@@G@@     FALSE BY SKIPPING ONE INSTRUCTION ON RETURN .    @[@@@<.     @E@@@<MJ
)@@G@@DOTEST*  LOCAL . FUDGE THE DO TEST BY USING THE IF TEST     @E@@@<.     MK
)@@G@@                             AND REVERSING THE RETURNS@D@@@<         LINML
)@@G@@K    IFTEST .          CALL IFTEST...     @G@@@<         GOTO    DOTES1 MM
)@@G@@.          REMEMBER TO SKIP ONE IF FALSE...     @E@@@<         JMP .    MN
)@@G@@                RETURN DIRECTLY IF TRUE . @A@@@<DOTES1   LABEL . SKIP ONMO
)@@G@@E ON RETURN @#@@@<         JMP 1 .  @[@@@<.     @G@@@<.        IFTEST  CMP
)@@G@@HECK A BIT STRING FOR A '1'B AND RETURN TRUE IF FOUND @F@@@<.           MQ
)@@G@@     BY SKIPPING ONE INSTRUCTION,ELSE RETURN FALSE    @B@@@<.           MR
)@@G@@     BY JUST JUMPING BACK     @[@@@<.     @B@@@<IFTEST*  LLOC .  CHECK BMS
)@@G@@IT STRING FOR '1'B@ @@@<         USING   AREC,X10 .   @ @@@<         USIMT
)@@G@@NG   ARDVDT,A3 .  @D@@@<         MOVE    SVEPTR,AREPTR .   SAVE FOR ERROMU
)@@G@@R MSGS@D@@@<         STORE   X1,ARSAX1 .       SAVE X1 THRU GETC  @B@@@<MV
)@@G@@         STORE   A8,ARSVA8 .       ''     @D@@@<         IF  A3,NE,0,I TMW
)@@G@@HEN,IFTES1 . REAL OR TEMP VAR?@D@@@<         LOAD    A3,SVEPTR .       IMX
)@@G@@T WAS TEMP,FIND DV@C@@@<         SUB     A3,2,I .          POINT TO V.O.MY
)@@G@@@F@@@<         MOVE    SVEPTR,ARDVPT .   'POP' TEMP STRING FROM STACK   MZ
)@@G@@@B@@@<IFTES1   LABEL . DV NOW POINTED TO BY A3  @D@@@<         SETL    ANA
)@@G@@2,ARDVCL .       GET CURRENT LENGTH @G@@@<         IF    A2,LT,0,I THEN,NB
)@@G@@IFTES6 .         NULL STMT TRUE  MVZ1/74  @D@@@<         LOAD  X1,ARDVPTNC
)@@G@@ .                     MVZ1/74@D@@@<         SETGC 4,0,X1 .             ND
)@@G@@           MVZ1/74@D@@@<IFTES2   LABEL .                   LOOP THRU HERNE
)@@G@@E     @C@@@<         GETC .                    GET NEXT CHAR@D@@@<      NF
)@@G@@   IF  A8,NE,'0',I  THEN,IFTES3 . IS THIS A '0'?@C@@@<         LOOP    ANG
)@@G@@2,IFTES2 .       WAS '0'B     @F@@@<IFTES6   LABEL .                    NH
)@@G@@                       MVZ1/74@C@@@<         LOAD    A8,ARSVA8 .       RNI
)@@G@@ESET A8     @C@@@<         LOAD    X1,ARSAX1 .       RESET X1     @F@@@<NJ
)@@G@@         MOVE    AREPTR,SVEPTR .   SET TO TRUE VALUE FOR RETURN   @F@@@<NK
)@@G@@         LJMP .                    WAS ALL '0'BS RETURN FALSE     @C@@@<NL
)@@G@@IFTES3   LABEL .                   WASN'T '0'B  @E@@@<         IF  A8,NENM
)@@G@@,'1',I  THEN,IFTES5 . NOT A '0'B OR A '1'B@E@@@<IFTES4   LABEL .        NN
)@@G@@           RETURN FROM ERROR CALL   @C@@@<         LOAD    A8,ARSVA8 .  NO
)@@G@@     RESET A8     @C@@@<         LOAD    X1,ARSAX1 .       RESET X1     NP
)@@G@@@F@@@<         MOVE    AREPTR,SVEPTR .   SET TO TRUE VALUE FOR RETURN   NQ
)@@G@@@G@@@<         LJMP 1 .                   FOUND A''NOT '0'B'', RETURN TRNR
)@@G@@UE    @C@@@<IFTES5   LOCAL .                   ERROR HERE   @F@=@<      NS
)@@G@@   EXERR   EREXIF  LEVEL,2 . ILLEGAL CHAR IN BIT STRING     @D@@@=      NT
)@@G@@   ONER   EREXIF,2 . ILLEGAL CHAR IN BIT STRING @D@@@<         UNSTK   XNU
)@@G@@11 .             PICK UP RETURN ADDR@F@@@<         GOTO    IFTES4 .     NV
)@@G@@     IT WASN'T ALL '0'BS WAS IT?    @[@@@<.     @[@@@<.     @[@@@<.     NW
)@@G@@@E@@@<.        EXA3DV  PUT THE BIT IN A3 INTO A STRING, AND CREATE@D@@@<NX
)@@G@@.                A DOPE VECTOR FOR THE NEW STRING     @[@@@<.     @B@@@<NY
)@@G@@EXA3DV*  LLOC .  BIT IN A3 TO DV CONVERT  @ @@@<         USING   ARDVDT,NZ
)@@G@@A2 .  @D@@@<         LOAD    A1,AREPTR .       END OF STRING STACK@E@@@<OA
)@@G@@         LOADA   A2,3,A1 .         WILL WE OVERFLOW CORE?   @E@=@<      OB
)@@G@@   IF  A2,LE,ADPEND  THEN,EXA3D1 . -> YES WE WILL     @E@@@=         IF OC
)@@G@@ A2,LE,ADPCND  THEN,EXA3D1 . -> YES WE WILL     @D@@@<         LOCAL .  OD
)@@G@@                 OVERFLOW OF CORE   @E@@@<         LINK    WROVFL .     OE
)@@G@@     GOTO OVERFLOW ROUTINE    @D@@@<         UNSTK   X11 .             IOF
)@@G@@F ER'ED TO MCORE$ @C@@@<EXA3D1   LABEL . -> NO WORRY OF OVERFLOW HERE   OG
)@@G@@@F@@@<         STORE   A2,AREPTR .       STORE NEW TOP OF STRING STACK  OH
)@@G@@@D@@@<         STORE   A3,W1Q1,A1 .      PUT STRING AWAY    @C@@@<      OI
)@@G@@   LOADA   A2,1,A1 .         CREATE DV    @D@@@<         STORE   A1,0,A2OJ
)@@G@@ .         REMEMBER THE V.O.  @F@@@<         MOVE    ARDVSZ,EXLN1 .    SOK
)@@G@@ET MAX LEN AND CUR LEN IN DV  @B@@@<         LJMP .                    ROL
)@@G@@ETURN @[@@@</.    @D@@@<.                GENERAL STRING HANDLEING FUNCTIOM
)@@G@@ONS   @[@@@<.     @E@@@<POPA3    LLOC .  FIND STRING OF A3,AND SEE IF INON
)@@G@@ITIALIZED   @E@@@<         STORED  A5,ARSVA5 .       SAVE IN CASE OF INIOO
)@@G@@T     @C@@@<POPA3F   LLOC .                    FAKE ENTRY   @E@@@<      OP
)@@G@@   MOVE    SVDVOR,0,I .      SET TO ZERO TO START     @F@@@<         MOVOQ
)@@G@@E    SVEPTR,AREPTR .   LEAVE AREPTR FOR ERROR MSGS    @E@@@<         IF OR
)@@G@@A3,NE,0,I  THEN,POPA31 . STRING ON STRING STACK?@D@@@<         LOAD    AOS
)@@G@@3,SVEPTR .       -> YES,GET THE DV  @F@@@<         SUB     A3,STRDVZ,I .OT
)@@G@@     POINT TO THE BEGINING OF THE DV@D@@@<         USING   ARDVDT,A3 .  OU
)@@G@@     SET PROPER USING   @F@@@<         MOVE    SVEPTR,ARDVPT .   'POP' TOV
)@@G@@HE STRING FROM THE STACK@[@@@<.     @B@@@<.         SET     SOMETHING,ONOW
)@@G@@,SOMEWHERE? @[@@@<.     @ @@@<POPA31   LABEL . ->MERGE HERE @F@@@<      OX
)@@G@@   LOAD    A5,ARDVKY .       PICK UP THE FLAGS FOR A3'S DV  @C@@@<      OY
)@@G@@   GOTO    POPA22 .          MERGE THERE  @[@@@<.     @A@@@<.           OZ
)@@G@@     DO THE SAME FOR A2 @[@@@<.     @F@@@<POPA2*   LLOC .  FIND THE STRIPA
)@@G@@NG FOR A2,AND SEE IF INITIALIZED .  @F@@@<          IF  A2,NE,0,I  THEN,PB
)@@G@@POPA21 . IS IT ON THE STRING STACK? @C@@@<         LOAD    A2,SVEPTR .  PC
)@@G@@     ->YES IT IS  @F@@@<         SUB     A2,STRDVZ,I .     POINT TO THE PD
)@@G@@START OF THE DV   @ @@@<         USING   ARDVDT,A2 .  @F@@@<         MOVPE
)@@G@@E    SVEPTR,ARDVPT .   'POP' THE STRING FROM THE STACK@[@@@<.     @B@@@<PF
)@@G@@.        SET     SOMETHING,ON,SOMEWHERE?  @[@@@<.     @ @@@<POPA21   LABPG
)@@G@@EL . -> MERGE HERE@F@@@<         LOAD    A5,ARDVKY .       PICK UP THE FPH
)@@G@@LAGS FOR A2'S DV  @E@@@<POPA22   LABEL .                   -> MERGE HEREPI
)@@G@@ FROM ABOVE @E@@@<         IF      ARDVUN,OFF THEN,LJMP . OK IF INITIALIPJ
)@@G@@ZED   @F@@@<         LOCAL .                   ->NOT INITIALIZED,TELL THPK
)@@G@@E USER@E@=@<         EXERR   EXSTNI LEVEL,2 . TELL THE USER HE BLEW IT  PL
)@@G@@@D@@@=         ONER   EXSTNI,2 . TELL THE USER HE BLEW IT   @#@@@<      PM
)@@G@@   JMP .    @G@@@<EXDVCR   LLOC .                    CREATE A DV FROM A1PN
)@@G@@,AND THE DATA IN  @F@@@<.                                  THE SAVE AREAPO
)@@G@@ AND THEN RETURN  @[@@@<.     @C@@@<         LOAD    A6,SVDVOR .       GPP
)@@G@@ET THE FLAGS@E@@@<         ADD     A6,SVEPTR .       ADD A PTR TO THE STPQ
)@@G@@RING  @E@@@<         STORE   A6,0,*A1 .        STORE INTO THE NEW DV    PR
)@@G@@@F@@@<         LOAD    A6,SVDVSZ .       MOVE MAX AND CURRENT LENGTHS   PS
)@@G@@@D@@@<         STORE   A6,0,*A1 .        INTO THE NEW DV    @D@@@<      PT
)@@G@@   STORE   A1,AREPTR .       UPDATE THE ENDPTR  @G@@@<         LOADD   APU
)@@G@@5,ARSVA5 .       PICK UP IN CASE OF INITALIZATION     @E@@@<         JMPPV
)@@G@@ .                     RETURN TO USER FROM HERE @[@@@<.     @[@@@<.     PW
)@@G@@@[@@@<.     @F@@@<CHKROM   LLOC .                    COME HERE TO CHECK PX
)@@G@@ABOUT SPACE @E@@@<         SRBD    A5,2 .           ASSUME # OF CHARS INPY
)@@G@@ A5   @F@@@<         SRB     A6,34 .           A5 = NUMBER OF WORDS , A6PZ
)@@G@@ = REM@E@@@<         STORE   A5,R1 .           HANG ONTO THAT COUNT     QA
)@@G@@@D@@@<         ADD     A5,2,I .          ACCOUNT FOR DV     @C@@@<      QB
)@@G@@   IF A6,EQ,0,I THEN,CHKRO1 . ANY EXTRA'S?@E@@@<         ADD     A5,1,I QC
)@@G@@.          YES,ACCOUNT FOR THEM TOO @#@@@<CHKRO1   LABEL .  @C@@@<      QD
)@@G@@   ADD     A5,SVEPTR .       ADD IN ENDPTR@F@@@<         IF      A5,LE,AQE
)@@G@@REPTR THEN,LJMP . ROOM ENOUGH ALREADY     @F@@@<         STORE   A5,AREPQF
)@@G@@TR .       SAVE ROOM IN CASE OF ERROR     @D@=@<         IF A5,LE,ADPENDQG
)@@G@@ THEN,LJMP . ENOUGH ROOM LEFT?@D@@@=         IF A5,LE,ADPCND THEN,LJMP .QH
)@@G@@ ENOUGH ROOM LEFT?@E@@@<         LOCAL .                   ERROR,NEED MOQI
)@@G@@RE ROOM     @B@@@<CHKRO2   LABEL . HERE TO TRY SOME MORE    @B@@@<      QJ
)@@G@@   LINK    WROVFL .          GET IT @E@@@<         LOAD    A6,AREPTR .  QK
)@@G@@     SEE IF WE GOT ENOUGH?    @E@=@<         IF A6,LE,ADPEND THEN,JMP . QL
)@@G@@->OK ENOUGH ROOM NOW    @E@@@=         IF A6,LE,ADPCND THEN,JMP . ->OK EQM
)@@G@@NOUGH ROOM NOW    @E@@@<         GOTO    CHKRO2 .          NO NEED MORE QN
)@@G@@ROOM STILL  @[@@@<.     @[@@@<.     @D@@@<.        EXTMPS: CALLED TO POIQO
)@@G@@NT TO A STRING TEMPORARY@E@@@<.                THAT IS BEING PASSED TO AQP
)@@G@@ USER FUNCTION    @[@@@<.     @[@@@<.     @#@@@<EXTMPS*  LLOC .   @ @@@<QQ
)@@G@@         USING   AREC,X10 .   @F@@@<         LOAD    A1,AREPTR,X10 .   PQR
)@@G@@OINT TO END OF STRING STACK   @E@@@<         SUB     A1,2,I .          PQS
)@@G@@OINT TO STRING'S DV     @F@@@<         LJMP .                    NOW WASQT
)@@G@@N'T THAT EASY!!!!??     @[@@@=.     @D@@@=.        HERE IF MUST COPY TEMQU
)@@G@@P STRINGS TO SAFE PLACE @F@@@=.        LOAD PASSED IN D.V. POINTER INTO QV
)@@G@@A2 AND LINK TO HERE     @C@@@=.        RETURN POINTER TO NEW PLACE FOR SQW
)@@G@@TRING @[@@@=.     @#@@@=BFTEMPA2 LLOC .   @E@@@=         IF A2,NE,0,I THQX
)@@G@@EN,POPA2 . JUST CHECK UNINIT FLAGS  @[@@@=.     @C@@@=.        HERE MUSTQY
)@@G@@ COPY STRING TO END OF STACK  @[@@@=.     @D@@@=         LOCAL .        QZ
)@@G@@           SAVE RETURN ADDRESS@D@@@=         LOAD    A2,SVEPTR .       GRA
)@@G@@ET END OF CORE    @C@@@=         SUB     A2,2,I .          POINT TO D.V.RB
)@@G@@@ @@@=         USING   ARDVDT,A2 .  @C@@@=         MOVE    SVEPTR,ARDVPTRC
)@@G@@ .   POP STRING   @D@@@=         LOAD    A5,ARDVCL,A2 .    GET CURRENT LRD
)@@G@@ENGTH @E@@@=         STORE   A5,SVDVCL .       SAVE LENGTH FOR LATER    RE
)@@G@@@C@@@=         SRB     A5,2 .            DIVIDE BY 4  @F@@@=         ADDRF
)@@G@@     A5,1,I .          A REMANIDER 3 OUT OF 4 TIMES   @C@@@=         STORG
)@@G@@RE   A5,R1 .           SET FOR BT   @E@@@=         LOAD    X11,AREPTR . RH
)@@G@@     POINT TO WHERE IT GOES   @G@@@=         STORE   X11,SVDVPT .      SRI
)@@G@@AVE POINTER TO WHERE STRING WILL BE @F@@@=         ADD     A5,AREPTR .  RJ
)@@G@@     SEE IF WELL RUN OUT OF ROOM?   @E@@@=         ADD     A5,2,I .     RK
)@@G@@     LEAVE ROOM FOR THE D.V.  @E@@@=         STORE   A5,AREPTR .       SRL
)@@G@@AVE IN CASE OF ERROR    @E@@@=BFRVS5   LABEL .                   COME BARM
)@@G@@CK TO TRY AGAIN   @E@@@=         IF A5,LE,ADPCND THEN,BFRVS6 . IT WILL FRN
)@@G@@IT HERE     @E@@@=         LINK    WROVFL .          GO GET ROOM AS NEEDRO
)@@G@@ED    @E@@@=         GOTO    BFRVS5 .          SEE IF ENOUGH ROOM GOTTENRP
)@@G@@@D@@@=BFRVS6   LABEL .                   ENOUGH ROOM HERE   @C@@@=      RQ
)@@G@@   MOVE    SVDVTY,ARDVTY .   SAVE FLAGS   @D@@@=         LOAD    A2,ARDVRR
)@@G@@PT,A2 .    POINT TO STRING    @B@@@=         LOADXI  A2,1,I .          SRS
)@@G@@ET INC@B@@@=         LOADXI  X11,1,I .         SET INC@D@@@=         BT RT
)@@G@@     X11,0,*A2 .       MOVE THAT STRING   @C@@@=         LOAD    A2,SVDVRU
)@@G@@OR .       MOVE THE D.V.@C@@@=         STORE   A2,W1,X11 .       SET INTRV
)@@G@@O D.V.@D@@@=         LOAD    A2,SVDVOR+1 .     GET THE LENGTH INFO@D@@@=RW
)@@G@@         STORE   A2,W1+1,X11 .     SET THE LENTH INFO @F@@@=         LOARX
)@@G@@D    A2,W1U,X11 .      GET THE ADDRESS OF THE D.V.    @D@@@=         MOVRY
)@@G@@E    SVDVOR,0,I .      CLEAR FLAGS AND PTR@G@@@=         JMP .          RZ
)@@G@@           RETURN TO ROUTINE THAT CALLED ME     @F@@@</.       EXSTMP: ASA
)@@G@@LLOCATE A STRING TEMP TO CONTAIN A RETURNING    @D@@@<.                RSB
)@@G@@ESULT FROM A USER STRING FUNCTION   @[@@@<.     @#@@@<EXSTMP*  LOCAL .  SC
)@@G@@@D@@@<         STORED  A5,ARSVA5 .       SAVE THE REGISTERS @D@@@<      SD
)@@G@@   MOVE    SVEPTR,AREPTR .   SAVE THE ENDPTR    @F@@@<         USING   ASE
)@@G@@RDVDT,A1 .       A1 POINTS TO THE DV TEMPLATE   @A@=@<         MOVE    SSF
)@@G@@VDVTY,ARDVTY .    @C@@@=         MOVE    SVDVFG,ARDVFG .   SAVE FLAGS   SG
)@@G@@@D@@@<         LOAD    A5,ARDVML .       ALLOCATE MAX LEN   @D@@@<      SH
)@@G@@   STORE   A5,SVDVML .       SAVE FOR LATER     @E@@@<         LINK    CSI
)@@G@@HKROM .          IS THERE ENOUGH ROOM?    @D@@@<         LOAD    A1,AREPSJ
)@@G@@TR .       SET WHERE IT SET IT@F@@@<         SUB     A1,2,I .          PSK
)@@G@@OINT TO WHERE THE DV GOES     @E@@@<         MOVE    ARDVPT,SVEPTR .   SSL
)@@G@@ET POINTER TO BEGINING  @D@@@<         MOVE    ARDVML,SVDVML .   SET MAXSM
)@@G@@ LENGTH     @E@@@<         MOVE    ARDVCL,0,I .      SAY NOTHING IS THERSN
)@@G@@E     @F@=@<         MOVE    ARDVTY,SVDVTY .      SET VARYING FLAG (MAYBSO
)@@G@@E)    @E@@@=         MOVE    ARDVTY,SVDVTY .      SET CHAR/BIT FLAG     SP
)@@G@@@D@@@=         MOVE    ARDVKY,SVDVKY .   SET VAR FLAG IF VAR@E@@@<      SQ
)@@G@@   SET     ARDVUN,ON,ARDVKY . SAY THAT IT IS UNINIT   @E@@@<         LOASR
)@@G@@DD   A5,ARSVA5 .       RESET REGISTERS USED     @#@@@<         JMP .    SS
)@@G@@@[@@@</.    @B@@@<.                BIT HANDLEING ROUTINES   @[@@@<.     ST
)@@G@@@B@@@<.                EXOR,EXAND, AND EXNOT    @[@@@<.     @ @@@<EXNOT*SU
)@@G@@   LOCAL . BITWISE NOT  @D@@@<         USING   ARDVDT,A3 .       SET UP SV
)@@G@@THE USING   @D@@@<         LINK    POPA3 .           DV SHOULD BE IN A3 SW
)@@G@@@E@@@<         LOAD    A2,ARDVCL .       GET THE CURRENT LENGTH   @D@@@<SX
)@@G@@         STORE   A2,SVDVCL .       BUILD THE NEW DV   @B@@@<         STOSY
)@@G@@RE   A2,SVDVML .       ''     @D@@@<         LOAD    A5,A2 .           CSZ
)@@G@@HECK FOR OVERFLOW @E@@@<         LINK    CHKROM .          CHECK IF ROOMTA
)@@G@@ AVAILABLE  @E@@@<         MOVE    SVDVFG,EBTMSK .   SET THE RIGHT FLAGSTB
)@@G@@ IN DV@E@@@<         AH      A2,FORFOR .       GET SET FOR THE JILOOP   TC
)@@G@@@H@@@<         LOAD    A1,SVEPTR .       RESULT SHOULD GO ON THE STRING TD
)@@G@@STACK .     @D@@@<         LOADXI  A1,1,I .          SETTO WRITE RESULT TE
)@@G@@@D@@@<         LOAD    A3,ARDVPT .       POINT TO THE STRING@[@@@<.     TF
)@@G@@@G@@@<.                NOTE:    YOU DON'T KNOW WHERE THE DV IS AFTER THITG
)@@G@@S     @[@@@<.     @E@@@<         LOADXI  A3,1,I .          SET TO LOOK ATH
)@@G@@T STRING    @#@@@<EXNOT1   LABEL .  @D@@@<         LOAD    A4,0,*A3 .   TI
)@@G@@     GET THE OPERAND    @D@@@<         XOR     A4,NOTTER .       DO THE TJ
)@@G@@NOT BY XOR  @C@@@<         STORE   A5,0,*A1 .        SAVE RESULT  @D@@@<TK
)@@G@@         JILOOP  A2,EXNOT1 .       ARE WE DONE YET?   @G@@@<         GOTTL
)@@G@@O    EXDVCR .          CREATE THE DV FOR RESULT AND RETURN  @[@@@</.    TM
)@@G@@@D@@@<.        ALL OF THE BIT LOGICAL OPERATORS AND THE BOOL@E@@@<.     TN
)@@G@@           BUILT IN FUNCTION WORK THE SAME (BASICALLY)@[@@@<.     @F@@@<TO
)@@G@@BFBOOL*  LOCAL .                   BUILT IN BIT LOGICAL FUNCTION  @D@@@<TP
)@@G@@         STORE   A3,ARSVA8 .       SAVE A3 FOR LATER  @E@@@<         LOATQ
)@@G@@D    A3,A1 .           GET POINTER TO THIRD ARG @D@@@<         LINK    PTR
)@@G@@OPA3 .           FIND THIRD ARG     @C@@@<         LOAD    A1,A3 .      TS
)@@G@@     SAVE IN A1   @D@@@<         LINK    POPA2 .           FIND SECOND ATT
)@@G@@RG    @D@@@<         LOAD    A3,A2 .           PUT IN RHS REG...  @C@@@<TU
)@@G@@         LOAD    A2,ARSVA8 .       GET FIRST ARG@C@@@<         LINK    PTV
)@@G@@OPA2 .           FIND LHS     @E@@@<         LOAD    A4,ARDVCL,A1 .    GTW
)@@G@@ET LENGTH OF RELATIONS  @E@@@<         IF      A4,GE,4,I THEN,BFB001 . 4TX
)@@G@@ OR MORE IS ENOUGH@D@@@<         LOAD    A5,KFZERO .       GET PADDING..TY
)@@G@@.     @E@@@<         LOAD    X5,A4 .           GET COUNT INTO INDEX REG TZ
)@@G@@@D@@@<         LOAD    A1,ARDVPT,A1 .    POINT TO STRING    @E@@@<      UA
)@@G@@   LOAD    A4,W1,A1 .        GET FIRST WORD OF STRING @D@@@<         SRBUB
)@@G@@     A4,*OUTSFT,X5 .   SHIFT OUT THE BAD  @D@@@<         SLBD    A4,*OUTUC
)@@G@@SFT,X5 .   SHIFT IN THE GOOD  @C@@@<         GOTO    BFB002 .          MUD
)@@G@@ERGE THERE  @ @@@<BFB001   LABEL . LEN>=4 HERE  @D@@@<         LOAD    AUE
)@@G@@1,ARDVPT,A1 .    POINT TO RELATIONS @D@@@<         LOAD    A4,W1,A1 .   UF
)@@G@@     GET FIRST WORD     @B@@@<BFB002   LABEL . NOW HAVE 4 OR MORE CHARS UG
)@@G@@@D@@@<         LOADA   A1,EXBOLL-2 .     GET ADDR. OF TABLE @F@@@<      UH
)@@G@@   LOADXI  A1,2,I .          SET UP TO SEARCH TABLE FOR FUN.@D@@@<      UI
)@@G@@   LOAD    R1,16,I .         SET REPEAT COUNT   @B@@@<         SE      AUJ
)@@G@@4,2,*A1 .        SEARCH @D@@@<         GOTO    BFB003 .          ERROR HUK
)@@G@@ERE *****   @E@@@<BFB004   LABEL .                   RETURN FROM ERROR HUL
)@@G@@ERE   @H@@@<         LOAD    X5,W1H2+1,A1 .    POINT TO THE INSTRUCTIONSUM
)@@G@@ FOR THE FUN.     @D@@@<         LOAD    A6,ARDVCL,A2 .    GET THE LEN OUN
)@@G@@F LHS @ @@@<         USING   ARDVDT,A3 .  @E@@@<         IF A6,LE,ARDVCLUO
)@@G@@ THEN,EXDOI1 . LHS SHORTER THAN RHS?@F@@@<         LDSC    A2,36 .      UP
)@@G@@     ->YES SO SWITCH SIDES     *****@D@@@<         LOAD    A6,ARDVCL,A2 UQ
)@@G@@.    GET THE SHORTER LEN@G@@@<         LOAD    X5,W1H1+1,A1 .    SWITCHEUR
)@@G@@D SIDES ,SO USE COMPLEMENT FUN@C@@@<         GOTO    EXDOI1 .          -US
)@@G@@>MERGE THERE@E@@@<BFB003   LABEL .                   TAKE CARE OF ERROR UT
)@@G@@HERE  @D@@@<         LOADA   A1,EXBOL1 .       USE '1111' FOR FUN @F@=@<UU
)@@G@@         EXERR   EREXIF LEVEL,2 .  ILLEGAL CHAR IN BIT STRING     @D@@@=UV
)@@G@@         ONER   EREXIF,2 .  ILLEGAL CHAR IN BIT STRING@D@@@<         GOTUW
)@@G@@O    BFB004 .          GO ON FROM THERE   @D@@@<EXXORB*  LLOC .         UX
)@@G@@           REAL ENTRY FOR XOR @G@@@<         LOADA   X5,XORINS .       PUY
)@@G@@OINT TO THE INSTRUCTIONS FOR XOR    @C@@@<         GOTO    EXDOIT .     UZ
)@@G@@     MERGE THERE  @C@@@<EXANDB*   LLOC .                   REAL ENTRY   VA
)@@G@@@F@@@<         LOADA   X5,ANDINS .       POINT TO THE AND INSTRUCTION   VB
)@@G@@@D@@@<         GOTO    EXDOIT .          -> MERGE THERE .   @D@@@<EXORB*VC
)@@G@@    LLOC .                   REAL ENTRY FOR OR  @F@@@<         LOADA   XVD
)@@G@@5,ORINS .        POINT TO THE OR INSTRUCTION    @E@@@<EXDOIT   LOCAL .  VE
)@@G@@                 APPARENT ENTRY IS HERE   @D@@@<         LINK    POPA3 .VF
)@@G@@           FIND OTHER OPERAND @D@@@<         LINK    POPA2 .           FVG
)@@G@@IND LEFT OPERAND  @F@@@<         LOAD    A6,ARDVCL,A2 .    GET THE SIZE VH
)@@G@@OF THE STRING     @ @@@<         USING   ARDVDT,A3 .  @E@@@<         IF VI
)@@G@@ A6,LE,ARDVCL THEN,EXDOI1 . IS IT THE SMALLEST  @E@@@<         LDSC    AVJ
)@@G@@2,36 .           -> NOPE SWITCH THEM .    @D@@@<         LOAD    A6,ARDVVK
)@@G@@CL,A2 .    A2-LARGEST STRING  @#@@@<EXDOI1   LABEL .  @F@@@<         STOVL
)@@G@@RE   A6,SVDVCL .       SAVE THE LENGTH OF THE SMALLER @D@@@<         AH VM
)@@G@@     A6,FORTHR .       SET UP FOR JI LOOP @G@@@<         STORE   A6,ARSVVN
)@@G@@A8 .       SAVE TILL AFTER CHECKING FOR ROOM    @F@@@<         LOAD    AVO
)@@G@@5,ARDVCL,A3 .    GET LENGTH OF LONGER STRING    @B@@@<         STORE   AVP
)@@G@@5,SVDVML .       SAVE IT@[@@@<.     @ @@@<.        CHECK FOR OVERFLOW   VQ
)@@G@@@[@@@<.     @E@@@<         LINK    CHKROM .          CHECK IF ROOM AVAILVR
)@@G@@ABLE  @E@@@<         LOAD    X11,ARSVA8 .      GET CHAR INFO FOR JMGI   VS
)@@G@@@D@@@<         LOAD    A3,ARDVPT,A3 .    POINT TO THE STRING@C@@@<      VT
)@@G@@   LOADXI  A3,1,I .          SET INCREMENT@E@@@<         LOAD    A2,ARDVVU
)@@G@@PT,A2 .    POINT TO OTHER STRING    @ @@@<         LOADXI  A2,1,I .     VV
)@@G@@@[@@@<.     @F@@@<.                NOTE:    NOW THE DV S  ARE LOST FOR AVW
)@@G@@LL TIME     @[@@@<.     @F@@@<         LOAD    A1,SVEPTR .       RESULT VX
)@@G@@GOES ON STRING STACK .  @ @@@<         LOADXI  A1,1,I .     @E@@@<      VY
)@@G@@   JILOOP  X11,EXDOI2 .      FEWER THAN FOUR CHARS ?  @C@@@<         GOTVZ
)@@G@@O    EXDOI3 .          <4 CHARS .   @ @@@<EXDOI2   LABEL . >4 CHARS     WA
)@@G@@@D@@@<         LOAD    A4,0,*A2 .        PICK UP ONE OPERAND@D@@@<      WB
)@@G@@   EX      0,X5 .             DO THE AND OR OR  @E@@@<         STORE   AWC
)@@G@@5,0,*A1 .        PUT THE RESULT AWAY .    @D@@@<         JILOOP  X11,EXDWD
)@@G@@OI2 .      KEEP GOING IF MORE @C@@@<EXDOI3   LABEL .                   <WE
)@@G@@4 CHARS LEFT@E@@@<         LOAD    X11,W1U+7,X11 .   GET COUNT OF CHARS WF
)@@G@@LEFT  @D@@@<         IF  X11,ZERO THEN,EXDOI4 . DONE ON EVEN WORD?@D@@@<WG
)@@G@@         LOAD    A4,0,A2 .         GET LAST CHARS     @C@@@<         LOAWH
)@@G@@D    A5,KFZERO .       PICK UP ZEROS@E@@@<         SRB     A4,*OUTSFT,X1WI
)@@G@@1 .  SHIFT OUT USELESS BITS   @D@@@<         SLBD    A4,*OUTSFT,X11 .  SWJ
)@@G@@HIFT IN EXTRA '0'S@C@@@<         EX      0,X5 .             DO THE ORINGWK
)@@G@@@F@@@<         STORE   A5,0,*A1 .        STORE THE RESULT AFTER PADDING WL
)@@G@@@E@@@<         SUB     X11,4,I .         FIX UP THE CHAR COUNT    @#@@@<WM
)@@G@@EXDOI4   LABEL .  @E@@@<         ADD     X11,SVDVML .      ADD LENGTH OFWN
)@@G@@ LONGEST ONE@E@@@<         SUB     X11,SVDVCL .      SUB LENGTH OF SHORTWO
)@@G@@ER    @D@@@<         LOADXI  X11,-4,I .        RESET INCREMENT    @E@@@<WP
)@@G@@         LOAD    A4,KFZERO .       GET ZEROS TO PAD WITH    @E@@@<      WQ
)@@G@@   JILOOP  X11,EXDOI5 .      COUNT OFF OTHER CHARS    @ @@@<         GOTWR
)@@G@@O    EXDOI7 .     @#@@@<EXDOI5   LABEL .  @E@@@<         EX      0,X5 . WS
)@@G@@            OR WITH PADDING NOW     @C@@@<         STORE   A5,0,*A1 .   WT
)@@G@@     STORE RESULT @E@@@<         JILOOP  X11,EXDOI5 .      FINISH OUT EXWU
)@@G@@TRA CHARS   @#@@@<EXDOI7   LABEL .  @E@@@<         MOVE    SVDVFG,EBTMSKWV
)@@G@@ .   SAY DV IS FOR BIT STRING @D@@@<         MOVE    SVDVCL,SVDVML .   SWW
)@@G@@AY CURRENT LENGTH @E@@@<         GOTO    EXDVCR .          CREATE THE DVWX
)@@G@@ AND RETURN @ @@@</.       STRING ASSIGNMENTS   @E@@@<.                AWY
)@@G@@SSIGN THE STRING POINTED TO BY A3 INTO    @C@@@<.                THE STRWZ
)@@G@@ING POINTED TO BY A2    @E@@@<.                A3 CAN BE ZERO TO INDICATXA
)@@G@@E THE STRING STACK@[@@@<.     @A@@@<EXBBA*   LLOC .  BIT INTO BIT ASSIGNXB
)@@G@@@G@@@<         LOADA   X5,BITBIT .       POINT TO THE INSTRUCTIONS FOR TXC
)@@G@@HIS   @E@@@<         GOTO    EXBCA1 .          GO DO THE ASSIGNMENT     XD
)@@G@@@E@@@<EXBCA*   LLOC .                    CHAR INTO BIT ASSIGNMENT @G@@@<XE
)@@G@@         LOADA   X5,CHRBIT .       POINT TO INSTRUCTIONS TO DO CHECKING XF
)@@G@@@C@@@<EXBCA1   LABEL .                   MERGE HERE   @D@@@<         LOAXG
)@@G@@D    A4,ARDVVR*0100,I . IF LHS IS TEMP    @D@@@<         STORE   A4,SVDVXH
)@@G@@FG .       THEN SET FLAGS     @F@@@<         LOAD    A4,KFZERO .       SXI
)@@G@@AVE THE PAD CHARS FOR E-Z REF @D@@@<         GOTO    EXSTAS .          GXJ
)@@G@@O DO ASSIGNMENT   @E@@@<EXCCA*   LLOC .                    CHAR INTO CHAXK
)@@G@@R ASSIGNMENT@E@@@<EXCBA*   LLOC .                    BIT INTO CHAR ASSIGXL
)@@G@@NMENT @E@@@<         LOADA   X5,CHARCH .       POINT TO INSTRUCTION     XM
)@@G@@@E@=@<         LOAD    A4,(ARDVVR++ARBTCH)*0100,I . IF LHS IS TEMP@E@@@=XN
)@@G@@         LOAD    A4,(ARDVVR++ARCHBT)*0100,I . IF LHS IS TEMP@C@@@<      XO
)@@G@@   STORE   A4,SVDVFG .       SET THE FLAGS@D@@@<         LOAD    A4,KBLAXP
)@@G@@NK .       GET PADDING CHARS  @F@@@<EXSTAS   LOCAL .                   AXQ
)@@G@@PPARENT ENTRY FOR ASSIGNMENT  @D@@@<         STORE   A4,SVPADD .       SXR
)@@G@@ET PADD CHARS     @C@@@<         LINK    POPA3 .           FIND RHS     XS
)@@G@@@D@@@<         IF A2,NE,0,I THEN,EXSTA7 . IS LHS A TEMP?    @[@@@<.     XT
)@@G@@@A@@@<.        ASSIGN STRING INTO A TEMP  @[@@@<.     @F@@@<         LOAXU
)@@G@@DA   X11,EXSTA8 .      ->NO, SET EXTRA FAKE RETURN    @D@@@<         LOCXV
)@@G@@AL .                   STACK FIXER ROUTINE@D@@@<         LOADA   A2,SVDVXW
)@@G@@OR .       POINT TO A TEMP. DV@E@@@<         MOVE    SVDVPT,SVEPTR .   SXX
)@@G@@ET THE TARGET ADDR.     @F@@@<         LOAD    A5,ARDVSZ,A3 .    GET THEXY
)@@G@@ SIZES OF THE RESULT    @C@@@<         STORE   A5,ARDVSZ,A2 .    SAVE THXZ
)@@G@@EM    @D@@@<         LOAD    A5,ARDVCL,A2 .    GET THE SIZE TO BE @E@@@<YA
)@@G@@         LINK    CHKROM .          CHECK IF ROOM AVAILABLE  @E@@@<EXSTA7YB
)@@G@@   LABEL .                   MERGE HERE FROM ABOVE    @E@@@<         USIYC
)@@G@@NG   ARDVDT,A2 .       THIS DV IS AROUND LONGER @C@@@<         LOAD    FYD
)@@G@@,ARDVKY .        GET FLAGS    @E@@@<         SET     ARDVUN,OFF .      IYE
)@@G@@T WILL BE INIT.ED HERE  @E@@@<         STORE   F,ARDVKY .        SAVE INYF
)@@G@@ PROPER PLACE     @E@@@<         LOAD    A6,ARDVCL,A3 .    HOW MANY CHARYG
)@@G@@S TO MOVE?  @D@@@<         IF  A6,LE,ARDVML  THEN,EXSTA1 . TOO LONG?    YH
)@@G@@@B@@@<         LOAD    A6,ARDVML .       -> YES @C@@@<EXSTA1   LABEL .  YI
)@@G@@                 ->MERGE HERE @E@@@<         STORE   A6,ARDVCL .       SYJ
)@@G@@AVE # OF CHARS MOVED    @D@@@<         AH      A6,FORTHR .       SET UP YK
)@@G@@FOR JILOOP  @D@@@<         LOAD    X11,A6 .          GET INTO X REG     YL
)@@G@@@D@@@<         LOAD    A1,ARDVPT .       POINT TO TARGET    @E@@@<      YM
)@@G@@   LOAD    A3,ARDVPT,A3 .    POINT TO SOURCE STRING   @[@@@<.     @D@@@<YN
)@@G@@.        NOTE:   AFTER THIS YOU CAN'T FIND A3'S DV    @[@@@<.     @C@@@<YO
)@@G@@         LOADXI  A1,1,I .          SET INCREMENT@C@@@<         LOADXI  AYP
)@@G@@3,1,I .          SET INCREMENT@E@@@<         JILOOP  X11,EXSTA2 .      MYQ
)@@G@@ORE THAN FOUR CHARS?    @B@@@<         GOTO    EXSTA3 .          -> NOPEYR
)@@G@@@F@@@<EXSTA2   LABEL .                   MORE THAN 4 CHARS LEFT HERE    YS
)@@G@@@F@@@<         EX      0,X5 .            DO THE PROPER LOAD/CHECKING    YT
)@@G@@@D@@@<         STORE   A4,0,*A1 .        STORE IT AWAY .    @D@@@<      YU
)@@G@@   JILOOP  X11,EXSTA2 .      KEEP GOING IF MORE @D@@@<EXSTA3   LABEL .  YV
)@@G@@                 <4 CHARS LEFT HERE @E@@@<         LOAD     X11,W1U+7,X1YW
)@@G@@1 .  FIND OUT HOW MANY LEFT   @E@@@<         IF  X11,ZERO  THEN,EXSTA4 .YX
)@@G@@ END ON WORD BOUNDRY?   @E@@@<         LOAD    A4,0,A3 .         ->NO,PIYY
)@@G@@CK UP LAST ONES   @D@@@<         LOAD    A5,SVPADD .       PICK UP PADDIYZ
)@@G@@NG    @D@@@<         SRB     A4,*OUTSFT,X11 .  GET RID OF JUNK    @D@@@<ZA
)@@G@@         SLBD    A4,*OUTSFT,X11 .  SHIFT IN PADDING   @E@@@<         LOAZB
)@@G@@DXM  A3,A4,I .         FAKE OUT EXECUTE LOOPS   @E@@@<         EX      0ZC
)@@G@@,X5 .            DO THE LOAD/CHECK AGAIN  @D@@@<         STORE   A4,0,*AZD
)@@G@@1 .        SAVE THE RESULT    @F@@@<         SUB     X11,4,I .         AZE
)@@G@@CCOUNT FOR THOSE LAST CHARS   @E@@@<EXSTA4   LABEL .                   -ZF
)@@G@@>PAD HERE IF NEEDED     @G@@@<         IF  ARDVVR,ON,ARDVKY  THEN,EXSTA9ZG
)@@G@@ . ->DON'T PAD IF VARRYING    @C@@@<         ADD     X11,ARDVML .      AZH
)@@G@@DD MAX LEN  @D@@@<         SUB     X11,ARDVCL .      SUB 'CURREBT LEN'  ZI
)@@G@@@C@@@<         LOADXI  X11,-4,I .        RESET INC    @E@@@<         LOAZJ
)@@G@@D    A4,SVPADD .       PICK UP PADDING CHARS    @D@@@<         JILOOP  XZK
)@@G@@11,EXSTA5 .      PADDING TO BE DONE?@C@@@<         GOTO    EXSTA6 .     ZL
)@@G@@     ALL DONE     @D@@@<EXSTA5   LABEL .                   TOP OF PADDINZM
)@@G@@G LOOP@B@@@<         STORE   A4,0,*A1 .        PAD    @E@@@<         JILZN
)@@G@@OOP  X11,EXSTA5 .      KEEP GOING TILL DONE     @C@@@<EXSTA6   LABEL .  ZO
)@@G@@                 FINISH HERE  @F@@@<         MOVE    ARDVCL,ARDVML .   SZP
)@@G@@ET PROPER MAX & CURRENT LENS  @F@@@<EXSTA9   LABEL .                   MZQ
)@@G@@ERGE HERE TO SET THE ENDPTR   @C@@@<         MOVE    AREPTR,SVEPTR .   SZR
)@@G@@ET TRUE END @F@@@<         LOADD   A5,ARSVA5 .       GET IN CASE OF INITZS
)@@G@@IALIZATION  @C@@@<         JMP .                     ALL DONE     @E@@@<ZT
)@@G@@EXSTA8   LABEL .                   COME HERE IF LHS IS TEMP @E@@@<      ZU
)@@G@@   MOVE    SVDVPT,0,I .      SET UP TO USE ROUTINE    @F@@@<         GOTZV
)@@G@@O    EXDVCR .          GO CREATE THE DV AND RETURN    @^@@@</.          ZW
)@@G@@     EXCONC @G@@@<.                                  CONCATENATE TWO STRZX
)@@G@@INGS TOGETHER     @[@@@<.     @ @@@<.        ON ENTRY:  A3-> RHS  @ @@@<ZY
)@@G@@.                   A2-> LHS  @[@@@<.     @ @@@<.        UTILITY ROUTINEZZ
)@@G@@S     @[@@@<.     @F@@@<EXCONA   LLOC .                    GET SIZES & CAA
)@@G@@HECK FOR OVERFLOW @D@@@<         LOAD    A5,ARDVCL,A3 .    GET RHS LENGTAB
)@@G@@H     @C@@@<         SRBD    A5,2 .            DIVIDE BY 4  @E@@@<      AC
)@@G@@   SRB     A6,34 .           COUNT OF CHARS LEFT OVER @D@@@<         IF AD
)@@G@@A6,EQ,0,I THEN,EXCOA1 . ANY REMAINDER?    @D@@@<         ADD     A5,1,I AE
)@@G@@.          ACCOUNT FOR IT TOO @C@@@<EXCOA1   LABEL .                   -AF
)@@G@@> MERGE HERE@D@@@<         STORE   A5,RHSSIZ .       SAVE THE RHS SIZE  AG
)@@G@@@E@@@<         STORE   A6,RHSREM .       SAVE THE REMAINDER TOO   @F@@@<AH
)@@G@@         LOAD    A5,ARDVCL,A2 .    REPEAT THE PROCESS FOR LHS     @C@@@<AI
)@@G@@         SRBD    A5,2 .            DIVIDE BY 4  @E@@@<         SRB     AAJ
)@@G@@6,34 .           COUNT OF CHARS LEFT OVER @D@@@<         IF      A6,EQ,0AK
)@@G@@,I THEN,EXCOA2 . ANY REM HERE?@D@@@<         ADD     A5,1,I .          AAL
)@@G@@CCOUNT FOR IT     @C@@@<EXCOA2   LABEL .                   ->MERGE AGAINAM
)@@G@@@E@@@<         STORE   A5,LHSSIZ .       SAVE THE SIZE COMPUTED   @E@@@<AN
)@@G@@         STORE   A6,LHSREM .       SAVE THIS REMANDER TOO!  @F@@@<      AO
)@@G@@   ADD     A5,RHSSIZ .       TOTAL WORDS NEEDED BY STRINGS  @F@@@<      AP
)@@G@@   ADD     A5,2,I .          ACCOUNT FOR THE DV TO BE MADE  @F@@@<      AQ
)@@G@@   ADD     A5,SVEPTR .       POINT TO WHERE IT WILL END     @E@@@<      AR
)@@G@@   IF A5,LE,AREPTR THEN,LJMP . IT ALREADY FITS THERE  @D@@@<         STOAS
)@@G@@RE   A5,AREPTR .       SET NEW ENDPTR     @G@@@=EXCOA3   LABEL .        AT
)@@G@@           HERE TO CHECK AVAILABLE SPACE AGAIN  @C@=@<         IF A5,LE,AU
)@@G@@ADPEND THEN,LJMP . ->OK ?     @C@@@=         IF A5,LE,ADPCND THEN,LJMP .AV
)@@G@@ ->OK ?     @C@@@<         LOCAL .                   ->NOT OK HERE@D@@@<AW
)@@G@@         LINK    WROVFL .          GO DO SOMETHING    @D@@@<         UNSAX
)@@G@@TK   X11 .             SET TO TRY AGAIN   @E@=@<         GOTO    EXCONA AY
)@@G@@.          TAKE IT FROM THE TOP     @E@@@=         GOTO    EXCOA3 .     AZ
)@@G@@     TAKE IT FROM THE TOP     @D@@@</.               START OF CONCATT. RBA
)@@G@@OUTINES PROPER    @[@@@<.     @E@@@<EXCONC*  LOCAL .                   OBB
)@@G@@NE ENTRY POINT FOR ALL  @D@@@<         IF A2,EQ,0,I THEN,EXCONB . LHS TOBC
)@@G@@ BE TEMP    @E@@@<         STORED  A5,ARSVA5 .       SAVE FOR INITALIZATBD
)@@G@@ION   @D@@@<         LINK    POPA2 .           CHECK IF INIT .    @D@@@<BE
)@@G@@         IF A3,NE,0,I THEN,EXCOND . RHS IS NOT IN TEMP@D@@@<         LINBF
)@@G@@K    POPA3F .          HERE RHS IS IN TEMP@E@@@<         LINK    EXCONA BG
)@@G@@.          SET UP THE NEEDED DATA   @D@@@<         LOAD    X5,RHSSIZ .  BH
)@@G@@     HOW LONG IS RHS    @D@@@<         ADD     X5,1,I .          MOVE THBI
)@@G@@E DV TOO!   @D@@@<         LOAD    R1,W1U+1,X5 .     SET REPEAT COUNT   BJ
)@@G@@@E@@@<         ADD     X5,ARDVPT,A3 .    POINT TO LAST WORD OF RHS@C@@@<BK
)@@G@@         LOADXI  X5,-1,I .         SET INCREMENT@D@@@<         ADD     ABL
)@@G@@3,LHSSIZ .       THE DV WILL MOVE   @F@@@<         LOAD    A1,X5 .      BM
)@@G@@     POINT TO LAST WORD TO BE MOVED @G@@@<         ADD     A1,LHSSIZ .  BN
)@@G@@     ADD IN # OF WORDS OF SPACE NEEDED    @F@@@<         IF LHSREM,NZEROBO
)@@G@@  THEN,EXCON1 . DID THIS WORK OUT RIGHT?  @F@@@<         LOAD    A4,W1U+BP
)@@G@@1,A1 .     POINT TO WHERE DV SHOULD GO    @F@@@<         BT      A1,0,*XBQ
)@@G@@5 .        MOVE THE RHS TO HIGHER CORE    @D@@@<         LOAD    R1,LHSSBR
)@@G@@IZ .       SET REPEAT COUNT   @D@@@<         LOADXI  X5,1,I .          SBS
)@@G@@ET POS INCREMENT  @D@@@<         LOADXM  X5,SVEPTR .       POINT TO TARGBT
)@@G@@ET    @C@@@<         LOADXI  A1,1,I .          SET POS INC  @C@@@<      BU
)@@G@@   LOADXM  A1,ARDVPT,A2 .    POINT TO LHS @F@@@<         BT      X5,0,*ABV
)@@G@@1 .        MOVE THE STRING INTO PLACE     @E@@@<         LOADXM  A1,A4 .BW
)@@G@@           POINT TO WHERE DV GOES   @E@@@<         GOTO    EXCONE .     BX
)@@G@@     GOTO END OF CONCATT.     @E@@@<EXCON1   LABEL .                   RBY
)@@G@@EMAINDER OF LHS ^= 0    @F@@@<         BT      A1,0,*X5 .        MOVE THBZ
)@@G@@E STRING TO HIGHER CORE @F@@@<         ADD     A1,1,I .          POINT TCA
)@@G@@O FIRST WORD OF RHS     @E@@@<         STORE   A1,ARDVPT,A3 .    REMEMBECB
)@@G@@R WHERE RHS IS    @E@@@<         GOTO    EXCON2 .          PUT LHS ON TECC
)@@G@@MP STACK    @E@@@<EXCOND   LABEL .                   NEITHER SIDE IN TEMCD
)@@G@@PS    @C@@@<         LINK    POPA3F .          CHECK IF INIT@F@@@<      CE
)@@G@@   LINK    EXCONA .          SET COUNTS & CHECK FOR OVERFLOW@F@@@<EXCON2CF
)@@G@@   LABEL .                   PUT LHS ON TEMP STACK HERE     @D@@@<      CG
)@@G@@   LOAD    R1,LHSSIZ .       GET COUNT OF LHS   @D@@@<         LOAD    ACH
)@@G@@1,SVEPTR .       POINT TO TEMP STACK@C@@@<         LOADXI  A1,1,I .     CI
)@@G@@     SET INCREMENT@D@@@<         LOAD    X5,ARDVPT,A2 .    POINT TO LHS CJ
)@@G@@STRING@C@@@<         LOADXI  X5,1,I .          SET INCREMENT@E@@@<      CK
)@@G@@   BT      A1,0,*X5 .        MOVE LHS TO TEMP STACK   @E@@@<         GOTCL
)@@G@@O    EXCOB1 .          HANDLE AS OTHER CASE     @D@@@<EXCONB   LABEL .  CM
)@@G@@                 LHS IS IN TEMPS    @E@@@<         LINK    POPA3 .      CN
)@@G@@     FIND RHS & SEE IF INIT   @E@@@<         LINK    POPA2 .           FCO
)@@G@@IND LHS & SEE IF INIT   @E@@@<         LINK    EXCONA .          CHECK SCP
)@@G@@IZES & OVERFLOW   @D@@@<         LOADD   A5,ARDVOR,A2 .    MOVE THE DV OCQ
)@@G@@F LHS @E@@@<         STORED  A5,FAKEDV .       SAVE IT IN A ''FAKE''DV  CR
)@@G@@@D@@@<         LOADA   A2,FAKEDV .       NOW POINT TO IT    @E@@@<      CS
)@@G@@   LOAD    A1,SVEPTR .       POINT TO START OF STRING @D@@@<         ADDCT
)@@G@@     A1,LHSSIZ .       POINT TO END OF LHS@E@@@<EXCOB1   LABEL .        CU
)@@G@@           A1 POINTS TO END OF LHS  @C@@@<         LOADXI  A1,1,I .     CV
)@@G@@     SET INCREMENT@F@@@<         LOAD    X5,ARDVPT,A3 .    POINT TO THE CW
)@@G@@SECOND STRING     @C@@@<         LOADXI  X5,1,I .          SET INCREMENTCX
)@@G@@@E@@@<         LOAD    R1,RHSSIZ .       HOW MANY WORDS IN RHS    @D@@@<CY
)@@G@@         IF LHSREM,NZERO  THEN,EXCOB2 . ANY REMAINDER?@D@@@<         BT CZ
)@@G@@     A1,0,*X5 .        MOVE RHS INTO PLACE@C@@@<         GOTO    EXCONE DA
)@@G@@.          ALL DONE     @E@@@<EXCOB2   LABEL .                   ''MERGEDB
)@@G@@ING'' TO BE DONE  @F@@@<         SUB     A1,1,I .          SET IT TO POIDC
)@@G@@NT TO LAST WORD   @E@@@<         LOAD    X11,LHSREM .      HOW MANY EXTRDD
)@@G@@A CHARS     @D@@@<         IF RHSREM,ZERO THEN,EXCOB3 . ->'REMAINDER'=4?DE
)@@G@@@D@@@<         LOOP    R1,EXCOB3 .       START THE LOOP     @E@@@<EXCOB3DF
)@@G@@   LABEL .                   LOOP TO MERGE STRINGS    @E@@@<         LOADG
)@@G@@D    A4,0,A1 .         GET THE STRING THERE NOW @E@@@<         LOAD    ADH
)@@G@@5,0,*X5 .        GET THE STRING TO MERGE  @D@@@<         SRB     A4,*OUTDI
)@@G@@SFT,X11 .  SHIFT OUT TRASH    @C@@@<         SLBD    A4,*OUTSFT,X11 .  MDJ
)@@G@@ERGE THE TWO@D@@@<         STORED  A4,0,*A1 .        SAVE THE RESULT    DK
)@@G@@@D@@@<         LOOP    R1,EXCOB3 .       FINISH THE LOOP    @D@@@<      DL
)@@G@@   LOAD    A4,X11 .          GET LEFTOVER ON LHS@E@@@<         ADD     ADM
)@@G@@4,RHSREM .       ADD LEFTOVER FROM RHS    @F@@@<         IF      A4,LE,4DN
)@@G@@,I THEN,EXCONE . ->FLOW INTO NEXT WORD?   @C@@@<         ADD     A1,1,I DO
)@@G@@.          ->YES IT DOES@C@@@<EXCONE   LABEL .                   FIX DV DP
)@@G@@HERE  @E@@@<         MOVE    SVDVOR,0,I .      SAY NO FLAGS ON HERE     DQ
)@@G@@@E@@@<         LOAD    A4,ARDVTY,A2 .    PICK UP FLAGS OF LHS     @D@@@<DR
)@@G@@         LOAD    A5,ARDVTY,A3 .    PICK UP RHS FLAGS  @D@@@<         OR DS
)@@G@@     A4,A5 .           OR THEM TOGETHER   @D@@@<         STORE   A5,SVDVDT
)@@G@@OR+FS2 .   SAVE RESULT'S TYPE @D@@@<         LOAD    A4,ARDVCL,A3 .    GDU
)@@G@@ET RHS LEN....    @D@@@<         ADD     A4,ARDVCL,A2 .    FIGURE TOTAL DV
)@@G@@LENGTH@C@@@<         STORE   A4,SVDVML .       SET MAX LEN  @D@@@<      DW
)@@G@@   STORE   A4,SVDVCL .       SET CURRENT LENGTH @G@@@<         GOTO    EDX
)@@G@@XDVCR .          GO CREATE DV FOR RESULT AND RETURN   @^@@@</.       STRDY
)@@G@@ING COMPARE @[@@@<.     @D@@@<.        INPUT:  A3 AND A2 CONTAIN POINTERDZ
)@@G@@S TO DV OR 0@F@@@<.                TO INDICATE THAT A STRING IS ON THE SEA
)@@G@@TRING STACK @[@@@<.     @E@@@<.        OUTPUT:     IN A1 A -1 IF LHS(A2)EB
)@@G@@ ''<''RHS (A3)    @C@@@<.                          A +1 IF LHS ''>'' RHSEC
)@@G@@@C@@@<.                          A  0 IF LHS ''='' RHS@[@@@<.     @F@@@<ED
)@@G@@EXBTCM*  LLOC .                    ENTRY FOR BIT TO BIT COMPARES  @D@@@<EE
)@@G@@         LOAD    A4,KFZERO .       GET PADDING CHARS  @D@@@<         GOTEF
)@@G@@O    EXCOMP .          GO TO REAL ENTRY   @F@@@<EXSTCM*  LLOC .         EG
)@@G@@           ENTRY FOR STRING COMPARESIONS  @D@@@<         LOAD    A4,KBLAEH
)@@G@@NK .       GET PADDING CHARS  @C@@@<EXCOMP   LOCAL .                   MEI
)@@G@@ERGE HERE   @D@@@<         STORE   A4,SVPADD .       SET PADDING CHARS  EJ
)@@G@@@C@@@<         LINK    POPA3 .           FIND RHS     @C@@@<         LINEK
)@@G@@K    POPA2 .           FIND LHS     @F@=@<         LOAD    A1,1,I .     EL
)@@G@@     SET FUNCTION VALUE IF LHS > RHS@[@@@=.     @C@@@=.        A1 NOW GEEM
)@@G@@TS LOADED BY GENERATED CODE   @[@@@=.     @F@@@=.        LOAD    A1,1,I EN
)@@G@@.          SET FUNCTION VALUE IF LHS > RHS@[@@@=.     @D@@@<         LOAEO
)@@G@@D    A6,ARDVCL,A2 .    GET SIZE OF LHS    @C@@@<         USING   ARDVDT,EP
)@@G@@A3 .       SET THE USING@F@@@<         IF  A6,LE,ARDVCL THEN,EXCOM1 . ISEQ
)@@G@@ LHS LONGER THAN RHS?   @D@@@<         LOAD    A6,ARDVCL,A3 .    GET SHOER
)@@G@@RTER LENGTH @D@@@<         LDSC    A2,36 .           SWITCH LHS & RHS   ES
)@@G@@@F@=@<         LOAD    A1,-1,I .         SET FUNCTION VALUE REVERSED    ET
)@@G@@@F@@@=         LOADN   A1,A1 .           SET FUNCTION VALUE REVERSED    EU
)@@G@@@C@@@<EXCOM1   LABEL .                   MERGE HERE   @F@@@<         STOEV
)@@G@@RE   A6,SVDVCL .       SAVE THE LENGTH OF THE SHORTER @D@@@<         AH EW
)@@G@@     A6,FORTHR .       SET UP FOR JILOOP  @E@@@<         LOAD    X11,A6 EX
)@@G@@.          GET INTO PROPER REGISTER @F@@@<         LOAD    A6,ARDVCL,A3 EY
)@@G@@.    GET THE LENGTH OF THE LONGER   @B@@@<         STORE   A6,SVDVML .  EZ
)@@G@@     SAVE IT@D@@@<         LOAD    A3,ARDVPT,A3 .    POINT TO THE STRINGFA
)@@G@@@C@@@<         LOAD    A2,ARDVPT,A2 .    POINT TO LHS @B@@@<         LOAFB
)@@G@@DXI  A3,1,I .          SET INC@B@@@<         LOADXI  A2,1,I .          SFC
)@@G@@ET INC@C@@@<         JILOOP  X11,EXCOM2 .      START LOOP   @E@@@<      FD
)@@G@@   GOTO    EXCOM3 .          <4 CHARS ON LHS TO START @C@@@<EXCOM2   LABFE
)@@G@@EL .                   >4 CHARS LEFT@B@@@<         LOAD    A4,0,*A2 .   FF
)@@G@@     GET LHS@B@@@<         LOAD    A5,0,*A3 .        GET RHS@E@@@<      FG
)@@G@@   IF  A4,NE,A5 THEN,EXCOME . NOT EQUAL ...ALMOST DONE@C@@@<         JILFH
)@@G@@OOP  X11,EXCOM2 .      MORE LEFT?   @E@@@<EXCOM3   LABEL .              FI
)@@G@@     <4 CHARS LEFT ON LHS     @E@@@<         LOAD    X11,W1U+7,X11 .   SFJ
)@@G@@ET PROPER CHAR COUNT    @E@@@<         LOAD    A4,0,*A2 .        GET LASFK
)@@G@@T CHARS ON LHS    @D@@@<         LOAD    A5,SVPADD .       GET THE PADDIFL
)@@G@@NG    @D@@@<         SRB     A4,*OUTSFT,X11 .  SHIFT OUT JUNK     @D@@@<FM
)@@G@@         SLBD    A4,*OUTSFT,X11 .  SHIFT IN PADDING   @[@@@<.     @F@@@<FN
)@@G@@.        LENGTH OF LONGER - LEN. OF SHORTER + LEFT OVER OF SHORTER@B@@@<FO
)@@G@@.                =LEFT OVER OF LONGER     @[@@@<.     @F@@@<         ADDFP
)@@G@@     X11,SVDVML .      ADD LEN OF LONGER TO LEFTOVER  @D@@@<         SUBFQ
)@@G@@     X11,SVDVCL .      SUB LEN OF SHORTER @F@@@<         SUB     X11,3,IFR
)@@G@@ .         SET TO TRAP IF <4 LEFT ON RHS  @D@@@<         LOADXI  X11,-4,FS
)@@G@@I .        RESET INCREMENT    @E@@@<         JILOOP  X11,EXCOM5 .      GFT
)@@G@@O ON IF ENOUGH LEFT     @E@@@<         GOTO    EXCOM6 .          <4 CHARFU
)@@G@@S LEFT ON RHS     @B@@@<EXCOM5   LABEL . >4 CHARS LEFT ON RHS     @B@@@<FV
)@@G@@         LOAD    A5,0,*A3 .        GET RHS@D@@@<         IF  A4,NE,A5  TFW
)@@G@@HEN,EXCOME . IF NE THEN DONE  @D@@@<         LOAD    A4,SVPADD .       SFX
)@@G@@ET LHS = PADDING  @F@@@<         JILOOP  X11,EXCOM5 .      SEE IF REST OFY
)@@G@@F RHS IS PADDING  @E@@@<EXCOM6   LABEL .                   <4 CHARS LEFTFZ
)@@G@@ ON RHS     @E@@@<         LOADXM  X11,W1U+7,X11 .   GET COUNT OF CHARS GA
)@@G@@LEFT  @E@@@<         LOAD    A5,0,*A3 .        GET LAST CHARS OF RHS    GB
)@@G@@@C@@@<         LOAD    A6,SVPADD .       GET PADDING  @D@@@<         SRBGC
)@@G@@     A5,*OUTSFT,X11 .  SHIFT OUT JUNK     @D@@@<         SLBD    A5,*OUTGD
)@@G@@SFT,X11 .  SHIFT IN PADDING   @D@@@<         IF  A4,NE,A5  THEN,EXCOME .GE
)@@G@@ IS LHS = RHS?    @G@@@<         LOAD    A1,0,I .          YES,SET RETURGF
)@@G@@N TO SAY THEY'RE EQUAL  @C@@@<         GOTO    EXCOM7 .          GO FINIGG
)@@G@@SH UP @D@@@<EXCOME   LABEL .                   LHS NE RHS HERE    @G@@@<GH
)@@G@@         LOAD    R1,1,I .          SET REPEAT COUNT FOR MASG INSTR.     GI
)@@G@@@E@@@<         LOAD    R2,ALLBIT .       SET MASK FOR MASG INSTR. @C@@@<GJ
)@@G@@         MASG    A5,A4 .           IS LHS > RHS?@E@@@<         LOADN   AGK
)@@G@@1,A1 .           MASG FAILED...SWITCH     @C@@@<EXCOM7   LABEL .        GL
)@@G@@           ALL DONE HERE@D@@@<         MOVE    AREPTR,SVEPTR .   SET TRUGM
)@@G@@E ENDPTR NOW@F@@@<         LOADD   A5,ARSVA5 .       GET IN CASE OF INITGN
)@@G@@ IN PROGRESS@D@@@<         JMP .                     RETURN TO USER     GO
)@@G@@@[@@@</.    @B@@@<.                REVERSE BUILT IN FUNC    @[@@@<.     GP
)@@G@@@A@@@<BFRVSE*  LOCAL . REVERSE A STRING   @ @@@=         USING   ARDVDT,GQ
)@@G@@A3 .  @F@@@=         LOAD    A2,A3 .           SAVE TO CHECK IF IT IS A GR
)@@G@@ TEMP @E@@@=         LINK    POPA3 .           START STRING ROUTINES    GS
)@@G@@@F@@@=         MOVE    SVEPTR,AREPTR .   REPLACE THE STRING ON THE STACKGT
)@@G@@@D@@@=         LINK    BFTEMPA2 .        FIX TEMP IN A2     @G@@@=      GU
)@@G@@   LOAD    A3,A2 .           GET ADDRESS OF STRING AS IT IS NOW   @D@=@<GV
)@@G@@         LINK    POPA3 .           POINT TO THE ARG   @ @=@<         USIGW
)@@G@@NG   ARDVDT,A3 .  @C@@@<         MOVE    SVDVTY,ARDVTY .   SAVE FLAGS   GX
)@@G@@@B@@@<         STORE   A8,ARSVA8 .       SAVE A8@B@@@<         STORE   XGY
)@@G@@2,ARSAX2 .       SAVE X2@D@@@<         LOAD    A5,ARDVCL .       PICK UPGZ
)@@G@@ LENGTH     @B@@@<         STORE   A5,SVDVCL .       SAVE IT@E@@@<      HA
)@@G@@   STORE   A5,SVDVML .       SET LENGTHS OF RESULT    @E@@@<         LINHB
)@@G@@K    CHKROM .          CHECK IF ROOM AVAILABLE  @E@@@<         LOAD    AHC
)@@G@@2,KSCH4W .       POINT TO PUTC ROUTINE    @E@@@<         LOADXM  X2,SVEPHD
)@@G@@TR .       POINT TO PLACE FOR RESULT@B@@@<         LOADXI  X2,1,I .     HE
)@@G@@     SET INC@D@@@<         LOAD    A3,ARDVPT,A3 .    POINT TO STRING    HF
)@@G@@@E@@@<         ADD     A3,R1 .           COUNT IN NUMBER OF WORDS @C@@@<HG
)@@G@@         SUB     A3,1,I .          MAKE 0-ORIGIN@C@@@=         MOVE    SHH
)@@G@@VDVPT,0,I .      CLEAR FLAGS  @C@@@<         IF A6,EQ,0,I THEN,BFRVS2 . HI
)@@G@@ANY EXTRAS  @C@@@<         MOVE    SVDVPT,1,I .      SET FLAG     @D@@@<HJ
)@@G@@         LOAD    X5,A6 .           GET NUM OF EXTRAS  @C@@@<         LOAHK
)@@G@@D    A8,W1+1,A3 .      GET LAST WORD@D@@@<         SRB     A8,*OUTSFT,X5HL
)@@G@@ .   SHIFT OUT JUNK...  @D@@@<         LOOP    A6,BFRVS3 .       GO TO CHM
)@@G@@HAR LOOP    @D@@@<BFRVS3   LABEL .                   TOP OF CHAR LOOP   HN
)@@G@@@E@@@<         PUTC .                    PUT OUT LAST CHAR IN A8  @D@@@<HO
)@@G@@         SRB     A8,9 .            MOVE TO NEXT CHAR  @D@@@<         LOOHP
)@@G@@P    A6,BFRVS3 .       DUMP ALL OF A8     @B@@@<BFRVS2   LABEL . DO NEXTHQ
)@@G@@ WHOLE WORD NOW   @D@@@<         LOOP    R1,BFRVS4 .       LOOP UNTIL DOHR
)@@G@@NE    @F@@@<         LOAD    A1,X2 .           POINT TO LAST WORD STOREDHS
)@@G@@ TO   @F@@@<         ADD     A1,SVDVPT .       ADD IN FLAG FOR EXTRA CHAHT
)@@G@@RS    @C@@@<         MOVE    SVDVPT,0,I .      RESET TO ZERO@D@@@<      HU
)@@G@@   LOAD    A8,ARSVA8 .       GET READY TO RETURN@B@@@<         LOAD    XHV
)@@G@@2,ARSAX2 .       GET X2 @D@@@<         GOTO    EXDVCR .          GO CREAHW
)@@G@@TE A DV     @E@@@<BFRVS4   LABEL .                   STILL MORE WORDS TOHX
)@@G@@ GO   @D@@@<         LOAD    A8,W1,A3 .        GET ''NEXT WORD''  @E@@@<HY
)@@G@@         SETL    A6,4,I .          SET TO DO FOUR CHARS     @D@@@<      HZ
)@@G@@   LOOP    A3,BFRVS3 .       GO DO NEXT WORD    @[@@@</.    @B@@@<.     IA
)@@G@@           VERIFY BUILT IN FUNCTION @[@@@<.     @E@@@<BFVERY*  LOCAL .  IB
)@@G@@                 ENTRY POINT FOR VERIFY   @B@@@<         STORE   X2,ARSAIC
)@@G@@X2 .       SAVE X2@C@@@<         LINK    POPA3 .           FIND RHS     ID
)@@G@@@C@@@<         LINK    POPA2 .           FIND LHS     @ @@@<         USIIE
)@@G@@NG   ARDVDT,A2 .  @E@@@<         IF ARDVCL,ZERO THEN,BFVER7 . LHS ZERO,RIF
)@@G@@ESULT=0     @ @@@<         USING   ARDVDT,A3 .  @D@@@<         IF ARDVCLIG
)@@G@@,NZERO THEN,BFVER1 . ->RHS NOT ZERO @D@@@<         LOAD    A3,1,I .     IH
)@@G@@     SET DEFAULT RESULT @B@@@<         GOTO    BFVER4 .          RETURN II
)@@G@@@#@@@<BFVER1   LABEL .  @E@@@<         LOAD    X2,ALTCDA .       POINT TIJ
)@@G@@O GETC ROUTINE    @B@=@<         LOADXI,X5,1,I .           SET INC@B@@@=IK
)@@G@@         LOADXI  X5,1,I .          SET INC@D@@@<         LOADXM  X5,TRNSIL
)@@G@@WK,I .     POINT TO WORKSPACE @D@@@<         LOADA   X11,KKD0 .        PIM
)@@G@@OINT TO ZEROS     @E@@@<         LOAD    R1,256,I .        SET TO CLEAR IN
)@@G@@256 WORDS   @D@@@<         BT      X5,0,*X11 .       ZERO OUT WORKSPACE IO
)@@G@@@C@@@<         LOADXM  X5,ARDVPT,A3 .    POINT TO RHS @C@@@<         LOAIP
)@@G@@D    A6,ARDVCL,A3 .    GET LENGTH   @D@@@<         LOOP    A6,BFVER2 .  IQ
)@@G@@     COUNT FIRST CHAR   @#@@@<BFVER2   LABEL .  @C@@@<         ALTC .   IR
)@@G@@                 GET NEXT CHAR@[@@@=.     @G@@@=.        IT WAS DECIDED IS
)@@G@@TO LIMIT CHARS TO EIGHT BITS FOR THE PRESENT    @[@@@=.     @F@@@=      IT
)@@G@@   LOAD    A4,X11 .          PREPARE TO MAKE EIGHT BITS     @E@@@=      IU
)@@G@@   AND,U   A4,0377 .         LEAVE ONLY EIGHT BITS    @D@@@=         LOAIV
)@@G@@DXM  X11,A5 .          GET BACK INTO X11  @ @@@<         USING   WORD,X1IW
)@@G@@1 .   @F@@@<         SR      R12,TRNSWK-(IN 63,0,1,0),X11 . SET FLAG IN IX
)@@G@@TABLE @D@@@<         LOOP    A6,BFVER2 .       DO IT FOR ALL CHARS@C@@@<IY
)@@G@@         LOADXM  X5,ARDVPT,A2 .    POINT TO LHS @D@@@<         LOAD    AIZ
)@@G@@6,ARDVCL,A2 .    GET LENGTH OF LHS  @E@@@<         LOAD    X2,ALTCDA .  JA
)@@G@@     RESET POINTER TO ROUTINE @D@@@<         LOOP    A6,BFVER3 .       CJB
)@@G@@OUNT FIRST CHAR   @#@@@<BFVER3   LABEL .  @C@@@<         ALTC .         JC
)@@G@@           GET NEXT CHAR@[@@@=.     @G@@@=.        IT WAS DECIDED TO LIMJD
)@@G@@IT CHARS TO EIGHT BITS FOR THE PRESENT    @[@@@=.     @F@@@=         LOAJE
)@@G@@D    A4,X11 .          PREPARE TO MAKE EIGHT BITS     @E@@@=         ANDJF
)@@G@@,U   A4,0377 .         LEAVE ONLY EIGHT BITS    @D@@@=         LOADXM  XJG
)@@G@@11,A5 .          GET BACK INTO X11  @E@@@<         TNZ     TRNSWK-(IN 63JH
)@@G@@,0,1,0),X11 . SKIP IF NOT ZERO@F@@@<         GOTO    BFVER5 .          IJI
)@@G@@T WAS ZERO->NOT IN STRING     @E@@@<         LOOP    A6,BFVER3 .       KJJ
)@@G@@EEP GOING TO THE END    @E@@@<BFVER7   LABEL .                   COME HEJK
)@@G@@RE FROM START     @F@@@<         LOAD    A3,0,I .          RAN OUT RETURJL
)@@G@@N ZERO ANSWER     @E@@@<BFVER4   LABEL .                   MERGE HERE FRJM
)@@G@@OM BELOW    @C@@@<         LOAD    X2,ARSAX2 .       RESET X2     @C@@@<JN
)@@G@@         MOVE    AREPTR,SVEPTR .   RESET AREPTR @C@@@<         LOADD   AJO
)@@G@@5,ARSVA5 .       GET A5 BACK  @#@@@<         JMP .    @E@@@<BFVER5   LABJP
)@@G@@EL .                   HERE IF CHAR NOT IN RHS  @D@@@<         LOAD    AJQ
)@@G@@3,ARDVCL,A2 .    GET CURRENT LENGTH @E@@@<         SUB     A3,A6 .      JR
)@@G@@     GET DIST INTO STRING     @C@@@<         GOTO    BFVER4 .          JJS
)@@G@@OIN THERE   @[@@@</.    @C@@@<.                TRANSLATE BUILT IN FUNCTIJT
)@@G@@ON    @[@@@<.     @E@@@<BFTRNS*  LOCAL .                   TRANSLATE ENTJU
)@@G@@RY POINT    @C@@@<         LINK    POPA3 .           GET THIRD ARG@D@@@<JV
)@@G@@         LINK    POPA2 .           GET SECOND ARG     @F@@@<         LDSJW
)@@G@@C    A1,36 .           SWITCH A1&A2 TO FIND FIRST ARG.@D@@@<         LINJX
)@@G@@K    POPA2 .           FIND FIRST ARG.    @E@@@<         STORE   A8,ARSVJY
)@@G@@A8 .       SAVE REGS TO BE USED     @ @@@<         STORE   X1,ARSAX1 .  JZ
)@@G@@@ @@@<         STORE   X2,ARSAX2 .  @ @@@<         USING   ARDVDT,A2 .  KA
)@@G@@@D@@@<         LOAD    A5,ARDVTY .       GET STRING TYPE    @C@@@<      KB
)@@G@@   STORE   A5,SVDVTY .       SAVE TYPE    @D@@@<         LOAD    A8,' ',KC
)@@G@@I .        ASSUME CHARSTRING  @D@=@<         IF ARBTCH,ON THEN,BFTRNC . KD
)@@G@@->YEP CHAR DATA   @D@@@=         IF ARCHBT,OFF THEN,BFTRNC . ->YEP CHAR KE
)@@G@@DATA  @D@@@<         LOAD    A8,'0',I .        IT IS BIT STRING   @ @@@<KF
)@@G@@BFTRNC   LABEL . MERGE HERE   @D@@@<         STORE   A8,SVPADD .       SKG
)@@G@@AVE PADDING CHAR  @D@@@<         STORE   A2,DEXWK1 .       SAVE FIRST ARKH
)@@G@@G     @D@@@<         LOAD    A2,A1 .           GET BACK SECOND ARG@B@@@<KI
)@@G@@         LOADXI  X1,1,I .          SET INC@C@@@<         LOADXM  X1,0,I KJ
)@@G@@.          GET ZERO     @F@@@<         SETL    R1,256,I .        SET TO KK
)@@G@@INITALIZE WORKSPACE     @ @@@<BFTRN1   LABEL . TOP OF LOOP  @G@@@<      KL
)@@G@@   STORE   X1,TRNSWK,*X1 .   SET TO COLLATE SEQ.,SAY NOT FOUND    @E@@@<KM
)@@G@@         LOOP    R1,BFTRN1 .       GO THRU ALL 256 WORDS    @D@@@<      KN
)@@G@@   LOAD    X2,ALTCDA .       PREPARE FOR ALTC   @D@@@<         LOAD    XKO
)@@G@@5,ARDVPT,A3 .    POINT TO STHIRD ARG@B@@@<         LOADXI  X5,1,I .     KP
)@@G@@     SET INC@C@@@<         LOAD    R1,ARDVCL,A3 .    SET LENGTH   @C@@@<KQ
)@@G@@         LOAD    A1,KLCH4W .       SET FOR GETC @B@@@<         LOADXI  XKR
)@@G@@1,1,I .          SET INC@D@@@<         LOADXM  X1,ARDVPT,A2 .    POINT TKS
)@@G@@O SECOND ARG@F@@@<         LOAD    A6,ARDVCL,A2 .    GET LENGTH OF SECONKT
)@@G@@D STRING    @D@@@<         GOTO    BFTRN3 .          GO TO START LOOP   KU
)@@G@@@C@@@<BFTRN2   LABEL .                   TOP OF LOOP  @F@@@<         GETKV
)@@G@@C .                    GET CHAR FROM SECOND STRING    @F@@@<BFTRN5   LABKW
)@@G@@EL .                   COME HERE WHEN SECOND ARG OUT  @E@@@<         ALTKX
)@@G@@C .                    GET CHAR FROM 3RD ARG.   @[@@@=.     @G@@@=.     KY
)@@G@@   IT WAS DECIDED TO LIMIT CHARS TO EIGHT BITS FOR THE PRESENT    @[@@@=KZ
)@@G@@.     @F@@@=         LOAD    A4,X11 .          PREPARE TO MAKE EIGHT BITLA
)@@G@@S     @E@@@=         AND,U   A4,0377 .         LEAVE ONLY EIGHT BITS    LB
)@@G@@@D@@@=         LOADXM  X11,A5 .          GET BACK INTO X11  @ @@@<      LC
)@@G@@   USING   WORD,X11 .   @E@@@<         TZ,H1   TRNSWK-(IN 63,0,1,0),X11 LD
)@@G@@. SKIP IF FOUND   @G@@@<         STORE   A8,TRNSWK,X11 . SET CHAR TO CHALE
)@@G@@NGE TO,CLEAR H1 TO SAY  @F@@@<.                                         LF
)@@G@@              FOUND     @D@@@<BFTRN3   LABEL .                   START LLG
)@@G@@OOP HERE    @E@@@<         LOOP    R1,BFTRN4 .       ->STILL SOME IN 3RDLH
)@@G@@ ARG? @D@@@<         GOTO    BFTRN6 .          OUT OF 3RD ARG.    @#@@@<LI
)@@G@@BFTRN4   LABEL .  @F@@@<         LOOP    A6,BFTRN2 .       ->STILL SOME LJ
)@@G@@IN SECOND ARG.?   @B@@@<         LOAD    A8,SVPADD .       NOPE!  @D@@@<LK
)@@G@@         GOTO    BFTRN5 .          OK...USE BLANKS    @C@@@<BFTRN6   LABLL
)@@G@@EL . NOW TRANSLATE THE FIRST ARG.   @D@@@<         LOAD    A2,DEXWK1 .  LM
)@@G@@     POINT TO FIRST ARG.@E@@@<         LOADXM  A1,SVEPTR .       POINT TLN
)@@G@@O END OF CORE...  @C@@@<         LOAD    A5,ARDVCL,A2 .    GET LENGTH   LO
)@@G@@@E@@@<         LINK    CHKROM .          CHECK IF ROOM AVAILABLE  @C@@@<LP
)@@G@@         LOAD    A6,ARDVCL,A2 .    GET LENGTH   @D@@@<         IF A6,EQ,LQ
)@@G@@0,I THEN,BFTRNA . IS STRING NULL?   @E@@@<         STORE   A6,SVDVCL .  LR
)@@G@@     SET LENGTH IN SAVE AREA  @B@@@<         STORE   A6,SVDVML .       'LS
)@@G@@'     @C@@@<         LOAD    X2,ALTCDA .       SET FOR ALTC @D@@@<      LT
)@@G@@   LOADXM  X5,ARDVPT,A2 .    POINT TO STRING    @D@@@<         GOTO    BLU
)@@G@@FTRN7 .          GET INTO THIS LOOP @E@@@<BFTRN8   LABEL .              LV
)@@G@@     TOP OF TRANSLAT LOOP     @D@@@<         SLB     A8,9 .            GLW
)@@G@@ET ROOM FOR CHAR  @D@@@<         ADD     A8,TRNSWK+FQ4,X11 ADD IN NEW CHLX
)@@G@@AR    @C@@@<         LOOP    R1,BFTRN9 .       A8 FULL YET? @D@@@<      LY
)@@G@@   STORE   A8,0,*A1 .        YES -> DUMP IT     @D@@@<BFTRN7   LABEL .  LZ
)@@G@@                 ENTER LOOP HERE    @E@@@<         SETL    R1,4,I .     MA
)@@G@@     SET TO FOUR CHARS FOR A8 @D@@@<BFTRN9   LABEL .                   OMB
)@@G@@THER HALF OF LOOP @E@@@<         ALTC .                    GET CHAR TO TMC
)@@G@@RANSLATE    @[@@@=.     @G@@@=.        IT WAS DECIDED TO LIMIT CHARS TO MD
)@@G@@EIGHT BITS FOR THE PRESENT    @[@@@=.     @F@@@=         LOAD    A4,X11 ME
)@@G@@.          PREPARE TO MAKE EIGHT BITS     @E@@@=         AND,U   A4,0377MF
)@@G@@ .         LEAVE ONLY EIGHT BITS    @D@@@=         LOADXM  X11,A5 .     MG
)@@G@@     GET BACK INTO X11  @E@@@<         LOOP    A6,BFTRN8 .       GO UNTIMH
)@@G@@L OUT OF STRING   @F@@@<         LOADN   A2,R1 .           GET -(0-ORIGIMI
)@@G@@N) COUNT OF A8    @E@@@<         ADD     A2,3,I .          MAKE INTO TRUMJ
)@@G@@E COUNT     @F@@@<         IF      A2,EQ,0,I THEN,BFTRNA . DON'T SAVE BLMK
)@@G@@ANK WORD    @C@@@<         SLB     A8,*OUTSFT,A2 .   LEFT JUSTIFY @D@@@<ML
)@@G@@         STORE   A8,0,*A1 .        PUT INTO STRING    @#@@@<BFTRNA   LABMM
)@@G@@EL .  @D@@@<         LOAD    A8,ARSVA8 .       RESET REGS USED    @ @@@<MN
)@@G@@         LOAD    X1,ARSAX1 .  @ @@@<         LOAD    X2,ARSAX2 .  @E@@@<MO
)@@G@@         GOTO    EXDVCR .          GO CREATE DV FOR STRING  @[@@@</.    MP
)@@G@@@A@@@<.        SUBSTR BUILT IN FUNCTION   @[@@@<.     @B@@@<BFSBST*  LLOMQ
)@@G@@C .  ENTRYPOINT FOR SUBSTR    @E@@@<         LOAD    A4,W1,X11 .       GMR
)@@G@@ET FLAG ABOUT THIRD ARG.@D@@@<         ADD     X11,1,I .         SKIP FLMS
)@@G@@AG ON RETURN@A@@@<         LOCAL . SAVE RETURN ADDRESS@ @@@<         USIMT
)@@G@@NG   ARDVDT,A3 .  @D@@@<         LINK    POPA3 .           FIND STRING AMU
)@@G@@RG    @C@@@<         MOVE    SVDVTY,ARDVTY .   SAVE FLAGS   @E@@@=BFREDOMV
)@@G@@   LABEL . POINT OF RETURN FROM ONUNIT TO REDO SUBSTR @F@@@<         IF MW
)@@G@@     ARDVCL,NZERO THEN,BFSBS1 . RETURN NULL IF NULL   @ @@@<STNULL . CREMX
)@@G@@ATE A NULL STRING @D@@@<         LOAD    A5,0,I .          SET LENGTH TOMY
)@@G@@ 0    @D@@@<         LINK    CHKROM .          SEE IF ROOM FOR DV @E@@@<MZ
)@@G@@         MOVE    SVDVSZ,0,I .      SET LENGTHS TO BE NULL   @E@@@<      NA
)@@G@@   LOAD    A1,SVEPTR .       POINT TO STRING STACK    @B@@@<         LOANB
)@@G@@DXI  A1,1,I .          SET INC@F@@@<         GOTO    EXDVCR .          GNC
)@@G@@O CREATE DV FOR NULL STRING   @E@@@<BFSBS1   LABEL .                   SND
)@@G@@TRING ARG. NOT NULL     @D@@@<         IF A2,GE,1,I THEN,BFSBS3 . INDEX NE
)@@G@@TOO SMALL?  @ @@@=         LOAD    A2,1,I .     @B@@@<BFSBS2   LABEL . INF
)@@G@@NDEX OUT OF RANGE HERE  @E@@@<         LOADA   X5,EXINDX .       POINT TNG
)@@G@@O STRING FOR MSG  @D@=@<         EXERR EXSBST LEVEL,2 .    INDEX OUT OF NH
)@@G@@RANGE @ @@@=.        INDEX OUT OF RANGE   @C@@@=         LINK    SUBERR NI
)@@G@@.          GO RAISE STRG@ @@@=         GOTO    BFREDO .     @D@@@=      NJ
)@@G@@   LOAD    A2,1,I .          ASSUME INDEX OF 1  @C@=@<         LOAD    ANK
)@@G@@2,1,I .          ASSUME 1     @D@@@<BFSBS3   LABEL .                   INL
)@@G@@NDEX NOT TOO SMALL@E@@@<         IF  A2,GT,ARDVCL THEN,BFSBS2 . INDEX TONM
)@@G@@O LARGE     @D@@@<         IF A4,NE,0,I THEN,BFSBS4 . LEN SUPPLIED?     NN
)@@G@@@D@@@<         LOAD    A1,ARDVCL .       GET STRING LENGTH  @C@@@<      NO
)@@G@@   SUB     A1,A2 .           SUB INDEX    @E@@@<         ADD     A1,1,I NP
)@@G@@.          CORRECT AS PER RULES     @C@@@<BFSBS4   LABEL .              NQ
)@@G@@     LEN NOW KNOWN@D@@@<         IF A1,GE,0,I THEN,BFSBS6 . LEN TOO SMALNR
)@@G@@L?    @ @@@=         LOAD    A1,1,I .     @D@@@<BFSBS5   LABEL .        NS
)@@G@@           LEN OUT OF RANGE   @E@@@<         LOADA   X5,EXLENG .       PNT
)@@G@@OINT TO STRING FOR MSG  @D@=@<         EXERR EXSBST LEVEL,2 .    LENGTH NU
)@@G@@OUT OF RANGE@D@=@<         LOAD    A1,1,I .          USE 1 BY DEFAULT   NV
)@@G@@@ @@@=.        LENGTH OUT OF RANGE  @D@@@=         LINK    SUBERR .     NW
)@@G@@     RAISE STRINGRANGE  @D@@@=         GOTO    BFREDO .          REDO OPNX
)@@G@@ERATION     @D@@@=         LOAD    A1,1,I .          ASSUME LENGTH OF 1 NY
)@@G@@@#@@@<BFSBS6   LABEL .  @C@@@<         LOAD    A4,A2 .           GET INDNZ
)@@G@@EX    @C@@@<         ADD     A4,A1 .           ADD IN LEN   @F@@@<      OA
)@@G@@   SUB     A4,1,I .          CORRECT FOR 1-ORIGIN INDEX     @D@@@<      OB
)@@G@@   IF A4,GT,ARDVCL THEN,BFSBS5 . LEN TOO LONG   @C@@@<         STORE   AOC
)@@G@@1,SVDVCL .SET LENGTH OF RESULT@B@@@<         STORE   A1,SVDVML .       'OD
)@@G@@'     @F@@@<         LOAD    A4,A2 .           FIGURE OUT PLACEMENT IN WOE
)@@G@@ORDS  @D@@@<         SUB     A4,1,I .          MAKE 0-ORIGIN .    @C@@@<OF
)@@G@@         SRBD    A4,2 .            DIVIDE BY 4  @D@@@<         SRB     AOG
)@@G@@5,34 .           GET CHARS LEFT OVER@D@@@<         LOAD    A2,ARDVPT .  OH
)@@G@@     POINT TO STRING    @D@@@<         ADD     A2,A4 .           HOW FAROI
)@@G@@ INTO STRING@E@@@<         LOAD    X5,4,I .          HOW MANY CHARS LEFTOJ
)@@G@@ OVER @D@@@<         SUB     X5,A5 .           GET 4-LEFTOVER     @F@@@<OK
)@@G@@         ADD     A4,SVEPTR .       ROOM ENOUGH FOR THIS MESS?     @D@@@<OL
)@@G@@         ADD     A4,3,I .          ACCOUNT FOR DV TOO @F@@@<         IF OM
)@@G@@     A4,LE,AREPTR THEN,BFSBS7 . ROOM ALREADY THERE    @E@@@<         STOON
)@@G@@RE   A4,AREPTR .       SAVE IN CASE OF ERROR    @G@@@=BFSBS9   LABEL .  OO
)@@G@@                 CHECK TO SEE IF ENOUGH ROOM GOTTEN   @D@=@<         IF OP
)@@G@@A4,LE,ADPEND THEN,BFSBS7 . ROOM IN CORE?  @D@@@=         IF A4,LE,ADPCNDOQ
)@@G@@ THEN,BFSBS7 . ROOM IN CORE?  @C@@@<         LINK    WROVFL .          GOR
)@@G@@ET MORE     @E@@@=         GOTO    BFSBS9 .          SEE IF WE GOT ENOUGOS
)@@G@@H!    @D@@@<BFSBS7   LABEL .                   ROOM TO GROW HERE  @E@@@<OT
)@@G@@         AH      A1,FORFOR .       GET CHAR COUNT FOR LOOP  @C@@@<      OU
)@@G@@   LOAD    X11,A1 .          GET INTO REG @F@@@<         LOAD    A1,SVEPOV
)@@G@@TR .       POINT TO END OF STRING STACK   @B@@@<         LOADXI  A1,1,I OW
)@@G@@.          SET INC@E@@@<         LOADXI  A2,1,I .          SET INC IN WOOX
)@@G@@RD POINTER  @C@@@<BFSBS8   LABEL .                   TOP OF LOOP  @C@@@<OY
)@@G@@         LOADD   A4,0,*A2 .        GET WORDS    @D@@@<         SLBD    AOZ
)@@G@@4,*OUTSFT,X5 .   SHIFT OUT JUNK     @D@@@<         STORE   A4,0,*A1 .   PA
)@@G@@     SAVE THIS WORD     @D@@@<         JILOOP  X11,BFSBS8 .      LOOP UNPB
)@@G@@TIL DONE    @D@@@<         GOTO EXDVCR .             GO CREATE THE DV   PC
)@@G@@@[@@@=.     @[@@@=.     @[@@@=.     @F@@@=SUBERR   LOCAL .              PD
)@@G@@     ROUTINE TO RAISE STRINGRANGE   @ @@@=         USING   ARDVDT,A3 .  PE
)@@G@@@I@@@=         MOVE    SVDVSZ,ARDVSZ .   SAVE CURRENT LENGTHS TO SEE IF PF
)@@G@@CHANGED BY ON     @F@@@=         ONUNIT  EXSBST,ACCDST,2  R,JMP1,JMP1  DPG
)@@G@@EXWK1,8  DEXMAX,0 @ @@@=         LOAD    A5,ARDVSZ .  @I@@@=         IF PH
)@@G@@     A5,EQ,SVDVSZ  THEN,JMP1 ELSE,JMP . STRING NOT CHANGED IN ON UNI    PI
)@@G@@@E@@@</.       INDEX BIF...RETURN THE INDEX OF A STRING IN A3     @[@@@<PJ
)@@G@@.     @[@@@<.     @D@@@<BFINDX*  LOCAL .                   ENTRY FOR INDPK
)@@G@@EX    @D@@@<         LINK    POPA3 .           GET SECOND ARG     @C@@@<PL
)@@G@@         LINK    POPA2 .           GET FIRST ARG@F@@@<BFAFBF   LABEL .  PM
)@@G@@                 ENTRY FOR BEFORE & AFTER BIFS  @D@@@<         STORE   APN
)@@G@@8,ARSVA8 .       SAVE REGISTERS USED@B@@@<         STORE   X1,ARSAX1 .  PO
)@@G@@     ''     @B@@@<         STORE   X2,ARSAX2 .       ''     @D@@@<      PP
)@@G@@   MOVE    SVDVTY,ARDVTY .   SAVE FOR OTHER BIFS@ @@@<         USING   APQ
)@@G@@RDVDT,A3 .  @D@@@<         IF ARDVCL,NZERO THEN,BFIND2 . IS RHS NULL?   PR
)@@G@@@A@@@<BFIND1   LABEL . HERE IF RETURNING 0@D@@@<         LOAD    A3,0,I PS
)@@G@@.          SET INDEX TO ZERO  @C@@@<         GOTO    BFIND6 .          GPT
)@@G@@O RETURN    @#@@@<BFIND2   LABEL .  @D@@@<         USING   ARDVDT,A2 .  PU
)@@G@@     SET TO SUBJECT     @D@@@<         IF ARDVCL,ZERO THEN,BFIND1 . ->REPV
)@@G@@TURN ZERO   @B@@@<         LOADXI  X5,1,I .          SET INC@B@@@<      PW
)@@G@@   LOADXI  X1,1,I .          ''     @E@@@<         LOADXM  X1,ARDVPT,A2 PX
)@@G@@.    POINT TO SUBJECT STRING  @E@@@<         LOAD    A1,KLCH4W .       PPY
)@@G@@OINT TO GETC ROUTINE    @D@@@<         LOAD    A4,ARDVCL,A2 .    GET SUBPZ
)@@G@@JECT LENGTH @D@@@<         SUB     A4,ARDVCL,A3 .    SUB PATTERN LENGTH QA
)@@G@@@E@@@<         ADD     A4,1,I .          DO ONCE IF SAME LENGTH   @E@@@<QB
)@@G@@         SETL    A5,ARDVCL,A3 .    SET TO LENGTH OF PATTERN @E@@@<      QC
)@@G@@   STORE   A5,DEXWK1 .       SAVE FOR RESETING BELOW  @E@@@<         STOQD
)@@G@@RE   X1,DEXWK2+FH1 .   SAVE SUBJECT WORD POINTER@E@@@<         STORE   AQE
)@@G@@1,DEXWK2+FH2 .   SAVE SUBJECT CHAR POINTER@E@@@<BFIND5   LABEL .        QF
)@@G@@           TOP OF COMPARESION LOOP  @E@@@<         LOOP    A4,BFIND3 .  QG
)@@G@@     SHOULD WE TRY AGAIN?     @F@@@<         GOTO    BFIND1 .          NQH
)@@G@@OT ENOUGH SUBJECT LEFT NOW    @#@@@<BFIND3   LABEL .  @G@@@<         LOAQI
)@@G@@DXM  X1,DEXWK2+FH1 .   POINT TO WHERE WE LEFT OFF IN SUBJECT@B@@@<      QJ
)@@G@@   LOADXM  A1,DEXWK2+FH2 .   ''     @E@@@<         LOAD    R1,DEXWK1 .  QK
)@@G@@     SET TO COUNT OFF PATTERN @E@@@<         LOADXM  X5,ARDVPT,A3 .    PQL
)@@G@@OINT TO START OF PATTERN@E@@@<         LOAD    X2,ALTCDA .       POINT TQM
)@@G@@O ATLC ROUTINE    @B@@@<         GETC .  GET NEXT CHAR IN SUBJECT @F@@@<QN
)@@G@@         STORE   X1,DEXWK2+FH1 .   SAVE SUBJECT STRING POINTERS   @B@@@<QO
)@@G@@         STORE   A1,DEXWK2+FH2 .   ''     @C@@@<BFIND4   LABEL . SEARCH QP
)@@G@@THRU SUBJECT FOR PATTERN@E@@@<         ALTC .                    GET NEXQQ
)@@G@@T PATTERN CHAR    @ @@@<         USING   WORD,X11 .   @G@@@<         IF QR
)@@G@@  A8,NE,W1U THEN,BFIND5 . NO MATCH,RESET POINTERS&TRY AGAIN @E@@@<      QS
)@@G@@   GETC .                    GET NEXT SUBJECT CHAR    @F@@@<         LOOQT
)@@G@@P    R1,BFIND4 .       TRY TO MATCH WHOLE PATTERN     @[@@@<.     @^@@@<QU
)@@G@@.        MATCH HERE     @[@@@<.     @G@@@<         LOAD    A3,DEXWK2+FH1QV
)@@G@@ .   POINTER TO BEGINING OF PATT IN SUJECT@F@@@<         SUB     A3,ARDVQW
)@@G@@PT,A2 .    FIGURE OUT HOW FAR WE WENT     @G@@@<         MPYS    A3,4,I QX
)@@G@@.          FIGURE OUT HOW MANY CHARS THAT IS    @F@@@<         LOAD    AQY
)@@G@@1,DEXWK2+FH2 .   GET BEGINNING CHAR POINTER     @E@@@<         ANA,H2  AQZ
)@@G@@1,KLCH4W.        GET OFSET IN CHAR POINTER@D@@@<         ADD     A3,A1 .RA
)@@G@@           ADD COUNTS TOGETHER@E@@@<BFIND6   LABEL .                   MRB
)@@G@@ERGE HERE FROM ABOVE    @D@@@<         LOAD    A8,ARSVA8 .       RESET URC
)@@G@@SED REGS    @B@@@<         LOAD    X1,ARSAX1 .       ''     @D@@@<      RD
)@@G@@   MOVE    AREPTR,SVEPTR .   POP TEMP STRINGS   @E@@@<         LOADD   ARE
)@@G@@5,ARSVA5 .       RESET THESE REGS TOO     @B@@@<         JMP .          RF
)@@G@@           RETURN @ @@@</.       BEFORE & AFTER BIFS  @[@@@<.     @[@@@<RG
)@@G@@.     @E@@@<BFBFOR*  LOCAL .                   ENTRY POINT FOR BEFORE . RH
)@@G@@@E@@@<         LOADA   X11,BFBFO1 .      RETURN THERE FROM INDEX  @E@@@<RI
)@@G@@         GOTO    BFBFAF .          GOTO COMMON ENTRY POINT  @E@@@<BFAFTRRJ
)@@G@@*  LOCAL .                   ENTRY POINT FOR AFTER BIF@E@@@<         LOARK
)@@G@@DA   X11,BFAFT1 .      RETURN THERE FROM INDEX  @G@@@<BFBFAF   LOCAL .  RL
)@@G@@                 COMMON ENTRY FOR BEFORE AND AFTER    @D@@@<         LINRM
)@@G@@K    POPA3 .           FIND SECOND ARG.   @D@@@<         LINK    POPA2 .RN
)@@G@@           FIND FIRST ARG.    @F@@@<         STORED  A2,DEXWK3 .       SRO
)@@G@@AVE POINTERS TO THE STRINGS   @C@@@<         GOTO    BFAFBF .          GRP
)@@G@@O DO INDEX  @[@@@<.     @C@@@<.        RETURN HERE TO DO BEFORE FROM INDRQ
)@@G@@EX    @[@@@<.     @#@@@<BFBFO1   LABEL .  @F@@@<         IF A3,LE,1,I THRR
)@@G@@EN,STNULL . ->NOTHING BEFORE,RETURN NULL  @D@@@<         SUB     A3,1,I RS
)@@G@@.          GET LENGTH WANTED  @C@@@<BFDCAG   LABEL . ENTRY POINT FOR DCART
)@@G@@T TO USE    @E@@@<         LOAD    A1,A3 .           GET INTO PROPER REGRU
)@@G@@ISTER @E@@@<         LOAD    A2,1,I .          SET TO START AT CHAR 1   RV
)@@G@@@F@@@<         LOAD    A3,DEXWK3 .       GET POINTER TO SUBJECT STRING  RW
)@@G@@@E@@@<         GOTO    BFSBS6 .          SKIP TESTS IN SUBSTR     @[@@@<RX
)@@G@@.     @C@@@<.        RETURN HERE TO DO AFTER FROM INDEX     @[@@@<.     RY
)@@G@@@#@@@<BFAFT1   LABEL .  @E@@@<         IF A3,EQ,0,I THEN,STNULL . ->RETURZ
)@@G@@RN NULL STRING    @D@@@<         LOAD    A2,DEXWK4 .       POINT TO PATTSA
)@@G@@ERN   @E@@@<         ADD     A3,ARDVCL,A2 .    ADD IN LENGTH OF PATTERN SB
)@@G@@@E@@@<BFDCAB   LABEL .                   ENTRY POINT FOR DCAT BIF @E@@@<SC
)@@G@@         LOAD    A2,A3 .           GET IN START REGISTER    @E@@@<      SD
)@@G@@   LOAD    A3,DEXWK3 .       POINT TO SUBJECT STRING  @ @@@<         USISE
)@@G@@NG   ARDVDT,A3 .  @E@@@<         IF A2,GT,ARDVCL THEN,STNULL . AT END OFSF
)@@G@@ STRING     @D@@@<         LOAD    A1,ARDVCL .       GET CURRENT LENGTH SG
)@@G@@@E@@@<         SUB     A1,A2 .           GET LENGTH TO COPY OUT   @E@@@<SH
)@@G@@         ADD     A1,1,I .          SET TO ONE-ORIGIN COUNT  @ @@@<      SI
)@@G@@   GOTO    BFSBS6 .     @ @@@</.       DECAT  ROUTINE ...BIF@[@@@<.     SJ
)@@G@@@[@@@<.     @D@@@<BFDCAT*  LOCAL .                   SAVE RETURN TO USERSK
)@@G@@@D@@@<         LINK    POPA3 .           GET THIRD ARG.     @E@@@<      SL
)@@G@@   LOAD    X5,ARDVPT,A3 .    GET POINTER TO STRING    @F@@@<         LOASM
)@@G@@D    A5,W1,X5 .        GET FIRST WORD OF BIT STRING   @C@@@<         LOASN
)@@G@@D    A6,ARDVCL,A3 .    CHECK LENGTH @D@@@<         IF A6,GE,3,I THEN,BFDSO
)@@G@@CA1 . -> IF LONG ENOUGH @D@@@<         LOAD    X5,A6 .           SHIFT OSP
)@@G@@UT JUNK     @D@@@<         SRB     A5,*OUTSFT,X5 .   SHIFT OUT JUNK     SQ
)@@G@@@D@@@<         LOAD    A6,KFZERO .       USE '0000' TO PAD  @F@@@<      SR
)@@G@@   SLBD    A5,*OUTSFT,X5 .   SHIFT IN ENOUGH TO FILL STRING @D@@@<BFDCA1SS
)@@G@@   LABEL .                   3 BITS OR MORE NOW @C@@@<         SRB     AST
)@@G@@5,9 .           LEFT JUSTIFY  @E@@@<         LOAD    R1,8,I .          SSU
)@@G@@ET COUNT FOR SEARCH     @E@@@<         LOADA   X5,EXDCAT-1 .     POINT TSV
)@@G@@O LIST TO SEARCH  @B@@@<         LOADXI  X5,2,I .          SET INC@E@@@<SW
)@@G@@         SE      A5,1,*X5 .        SEARCH FOR HIS CHOICE    @D@@@<      SX
)@@G@@   GOTO    BFDCA6 .          ***BOMB HERE***    @E@@@<BFDCA2   LABEL .  SY
)@@G@@                 RETURN FROM ERROR TO HERE@D@@@<         STORE   A5,SVPASZ
)@@G@@DD .       SAVE THE BIT STRING@D@=@<         LINK    POPA2 .           PTA
)@@G@@OINT TO PATTERN   @G@@@=         LINK    BFTEMPA2 .        POINT TO PATTTB
)@@G@@ERN, AND COPY IF TEMP   @C@@@<         LOAD    A3,A2 .           SWITCH TC
)@@G@@REGS  @B@@@<         LOAD    A2,A1 .           ''     @C@=@<         LINTD
)@@G@@K    POPA2 .           FIND SUBJECT @F@@@=         LINK    BFTEMPA2 .   TE
)@@G@@     FIND SUBJECT, AND COPY IF TEMP @D@@@<         STORED  A2,DEXWK3 .  TF
)@@G@@     SAVE FOR LATER     @ @@@<         USING   ARDVDT,A2 .  @C@@@<      TG
)@@G@@   MOVE    SVDVTY,ARDVTY .   SAVE FLAGS   @D@@@<         IF ARDVCL,ZERO TH
)@@G@@THEN,STNULL . ARG 1=NULL?     @ @@@<         USING   ARDVDT,A3 .  @D@@@<TI
)@@G@@         IF ARDVCL,NZERO THEN,BFDCA3 . ARG2=NULL?     @[@@@<.     @B@@@<TJ
)@@G@@.        ARG2 = NULL,SET SB(3)=STRING     @A@@@<.                [SEE BATK
)@@G@@SIS DOC]    @[@@@<.     @E@@@<         LOAD    A5,SVPADD .       GET THETL
)@@G@@ BIT STRING USED  @F@@@<         IF 01,ON THEN,BFDCAE ELSE,STNULL . DID TM
)@@G@@HE ASK FOR SB(3)? @D@@@<BFDCA3   LABEL .                   NEITHER ARG ITN
)@@G@@S NULL@E@@@<         LOADA   X11,BFDCA4 .      SET FAKE RETURN ADDRESS  TO
)@@G@@@#@@@<         LOCAL .  @D@@@<         LOAD    X11,W1H2,X5 .     GET ROUTP
)@@G@@TINE ADDRESS@C@@@<         STORE   X11,ARSV11 .      SAVE IN AREC @C@@@<TQ
)@@G@@         GOTO    BFAFBF .          GO DO INDEX  @[@@@<.     @A@@@<.     TR
)@@G@@   RETURN FROM INDEX TO HERE  @[@@@<.     @#@@@<BFDCA4   LABEL .  @E@@@<TS
)@@G@@         IF A3,EQ,0,I THEN,BFDCA5 . PATTERN NOT IN SUBJECT  @D@@@<      TT
)@@G@@   LOAD    X11,ARSV11 .      GET ROUTINE ADDR   @D@@@<         LJMP .   TU
)@@G@@                 GO DO DECAT...     @E@@@<BFDCA5   LABEL .              TV
)@@G@@     PATTERN NOT IN SUBJECT   @C@@@<         LOAD    A5,SVPADD .       CTW
)@@G@@HECK BITS   @E@@@<         SRB     A5,18 .           GET RID OF EXTRA CHTX
)@@G@@ARS   @F@@@<         IF 01,ON THEN,BFDCAE ELSE,STNULL . SB(1) IS THE STRTY
)@@G@@ING   @E@@@<BFDCA6   LABEL .                   COME HERE IF SE BLOWS UP TZ
)@@G@@@D@@@<         LOADA   X5,EXDCA1+1 .     ASSUME ALL ONE BITS@F@=@<      UA
)@@G@@   EXERR   EREXIF  LEVEL,2 . ILLEGAL CHAR IN BIT STRING     @D@@@=      UB
)@@G@@   ONER   EREXIF,2 . ILLEGAL CHAR IN BIT STRING @D@@@<         LOADA   XUC
)@@G@@5,EXDCA1+1 .     ASSUME ALL ONE BITS@C@@@<         LOAD    A5,EXDCA1 .  UD
)@@G@@     GET '111'B   @D@@@<         GOTO    BFDCA2 .          RETURN FROM EUE
)@@G@@RROR  @[@@@<.     @D@@@<.        NOW WE KNOW THAT PATT IS A SUBSTR OF SUUF
)@@G@@BJECT,@D@@@<.        AND THE INDEX IS STILL IN A3,NOW COMPLETE    @ @@@<UG
)@@G@@.        THE DCAT PROCESS     @[@@@<.     @F@@@<BFDCAA   LABEL .        UH
)@@G@@           HE WANTED A COPY OF THE PATTERN@E@@@<         LOAD    A2,DEXWUI
)@@G@@K4 .       POINT TO THE PATTERN     @D@@@<         LOAD    A3,ARDVCL,A2 UJ
)@@G@@.    GET ITS LENGTH     @F@@@<         STORE   A2,DEXWK3 .       PUT IT UK
)@@G@@WHERE BEFORE EXPECTS IT @E@@@<         GOTO    BFDCAG .          MERGE WUL
)@@G@@ITH BEFORE ROUTINE@[@@@<.     @[@@@<.     @[@@@<.     @F@@@<BFDCAC   LABUM
)@@G@@EL .                   USER WANTED ALL BUT PATTERN    @C@@@<         LOAUN
)@@G@@DA   X11,BFDCAI .      GET RETURN   @E@@@<         LOCAL .              UO
)@@G@@     RETURN TO GET AFTER LATER@D@@@<         STORE   A3,SVPADD .       SUP
)@@G@@AVE FOR LATER     @C@@@<         GOTO    BFBFO1 .          GO DO BEFORE UQ
)@@G@@@C@@@<BFDCAI   LABEL .                   NOW DO BEFORE@D@@@<         LOAUR
)@@G@@D    A3,SVPADD .       GET INDEX AGAIN    @D@@@<         MOVE    SVEPTR,US
)@@G@@AREPTR .   SET ENDPOINTER     @F@@@<         LOADA   X11,BFDCAJ .      RUT
)@@G@@ETURN AGAIN TO DO CONCATT     @D@@@<         LOCAL .                   SUU
)@@G@@TACK RETURN ADDR  @C@@@<         GOTO    BFAFT1 .          GO GET AFTER UV
)@@G@@@E@@@<BFDCAJ   LABEL .                   LAST PART OF '101'DECAT  @E@@@<UW
)@@G@@         SRBD    A2,72 .           CLEAR REGS TO SAY TEMPS  @E@@@<      UX
)@@G@@   GOTO    EXCONB .          GOTO CONCATT ROUTINE     @[@@@<.     @B@@@<UY
)@@G@@.        USER WANTED '110'B FOR DECAT     @[@@@<.     @#@@@<BFDCAD   LABUZ
)@@G@@EL .  @E@@@<         LOAD    A2,DEXWK4 .       ADD IN LENGTH OF PATTERN VA
)@@G@@@E@@@<         ADD     A3,ARDVCL,A2 .    ADD LEN(PATT) TO INDEX   @C@@@<VB
)@@G@@         GOTO    BFBFO1 .          DO BEFORE BIF@[@@@<.     @B@@@<.     VC
)@@G@@   USER WANTED '111'B FOR DECAT     @[@@@<.     @D@@@<BFDCAE   LABEL .  VD
)@@G@@                 GET ENTIRE STRING  @D@@@<         LOAD    A2,DEXWK3 .  VE
)@@G@@     POINT TO SUBJECT   @F@@@<         LOAD    A3,ARDVCL,A2 .    SET INDVF
)@@G@@EX TO LENGTH OF SUBJECT @C@@@<         GOTO    BFDCAG .          HANDLE VG
)@@G@@THERE @#@@@</.       COPY BIF @[@@@<.     @[@@@<.     @D@@@<BFCOPY*  LOCVH
)@@G@@AL .                   ENTRYPOINT FOR COPY@C@@@<         LINK    POPA3 .VI
)@@G@@           FIND STRING  @C@@@<         MOVE    SVDVTY,ARDVTY .   SAVE FLVJ
)@@G@@AGS   @D@@@<         IF A1,EQ,0,I THEN,STNULL . ANYTHING TO COPY? @C@@@<VK
)@@G@@         IF A1,LT,0,I THEN,BFCOP7 . ->ERROR     @E@@@<         LOAD    AVL
)@@G@@5,ARDVCL,A3 .    GET LENGTH OF STRING     @G@@@<         IF      A5,EQ,0VM
)@@G@@,I THEN,STNULL . NO SENCE TRYING TO COPY NOTHING@E@@@<         MPYS    AVN
)@@G@@5,A1 .           HOW LONG WILL RESULT BE? @D@@@<         STORE   A5,SVDVVO
)@@G@@CL .       SET RESULT LENGTH  @B@@@<         STORE   A5,SVDVML .       'VP
)@@G@@'     @E@@@<         LINK    CHKROM .          CHECK IF ROOM AVAILABLE  VQ
)@@G@@@B@@@<         LOADD   A4,W1,A3 .        GET DV @D@@@<         STORED  AVR
)@@G@@4,FAKEDV .       SAVE FOR LATER     @C@@@<         LOADA   A3,FAKEDV .  VS
)@@G@@     POINT TO IT  @B@@@<         LOADXI  A1,1,I .          SET INC@B@@@<VT
)@@G@@         LOADXI  X11,1,I .         ''     @D@@@<         LOADXM  A1,SVEPVU
)@@G@@TR .       POINT TO FREE AREA @D@@@<         LOADXM  X11,ARDVPT,A3 .   PVV
)@@G@@OINT TO STRING    @C@@@<         LOAD    A2,ARDVCL,A3 .    GET LENGTH   VW
)@@G@@@D@@@<         AH      A2,FORTHR .       PREPARE FOR JILOOP @F@@@<      VX
)@@G@@   JILOOP  A2,BFCOP2 .       MORE THAN 4 CHARS TO MOVE?     @C@@@<      VY
)@@G@@   GOTO    BFCOP8 .          <4 IN STRING @#@@@<BFCOP2   LABEL .  @D@@@<VZ
)@@G@@         LOADXM  A2,W1U+3,A2 .     ADD BACK IN THAT 3 @D@@@<BFCOP3   LABWA
)@@G@@EL . TOP OF LOOP TO MOVE STRING TO STACK  @E@@@<         LOAD    A4,W1,*WB
)@@G@@X11 .      GET NEXT WORD OF STRING  @D@@@<         STORE   A4,W1,*A1 .  WC
)@@G@@     PUT IT ON THE STACK@E@@@<         JILOOP  A2,BFCOP3 .       LOOP THWD
)@@G@@RU ALL OF STRING  @G@@@<         SUB     A1,1,I .          POINT TO THE WE
)@@G@@LAST WORD OF STRING     @#@@@<BFCOP4   LABEL .  @C@@@<         LOAD    AWF
)@@G@@4,ARDVCL,A3 .    GET LENGTH   @D@@@<         SRBD    A4,2 .           SEWG
)@@G@@E HOWMANY WORDS   @D@@@<         SRB     A5,34 .           @FOUR CHARS/WWH
)@@G@@ORD   @F@@@<         LOAD    X5,A5 .           REALLY ONLY WANTED REMAINWI
)@@G@@DER   @F@@@<         IF A5,NE,0,I THEN,BFCOP0 . ->USE FOUR IF NO REMAINDWJ
)@@G@@ER    @E@@@<         LOAD    X5,4,I .          SAY REMAINDER IS FOUR    WK
)@@G@@@#@@@<BFCOP0   LABEL .  @D@@@<         LOAD    A2,SVDVCL .       GET RESWL
)@@G@@ULT SIZE    @E@@@<         SUB     A2,ARDVCL,A3 .    SUB OFF CURRENT SIZWM
)@@G@@E     @D@@@<         LOADXI  A2,-4,I .         SET UP FOR JILOOP  @F@@@<WN
)@@G@@         LOADXM  X11,SVEPTR .      POINT TO BEGINNING OF STRING   @D@@@<WO
)@@G@@         JILOOP  A2,BFCOP5 .       SEE IF MORE TO GO  @D@@@<         GOTWP
)@@G@@O    BFCOP6 .          FINISHED ARLEADY   @G@@@<BFCOP5   LABEL .        WQ
)@@G@@           TOP OF LOOP TO COPY EXTRA STRINGS    @F@@@<         LOAD    AWR
)@@G@@4,W1,A1 .        GET LAST WORD OF LAST STRING   @E@@@<         LOAD    AWS
)@@G@@5,W1,*X11 .      GET NEXT WORD FROM FRONT @D@@@<         SRB     A4,*OUTWT
)@@G@@SFT,X5 .   SHIFT OUT JUNK     @C@@@<         SLBD    A4,*OUTSFT,X5 .   SWU
)@@G@@HIFT IN NEW @B@@@<         STORED  A4,W1,*A1 .       MOVE ON@D@@@<      WV
)@@G@@   JILOOP  A2,BFCOP5 .       LOOP THRU STRING   @D@@@<BFCOP6   LABEL .  WW
)@@G@@                 HERE WHEN FINISHED @E@@@<         ADD     A1,1,I .     WX
)@@G@@     CLEAR LAST WORD OF STRING@C@@@<         GOTO    EXDVCR .          NWY
)@@G@@OW CREATE DV@G@@@<BFCOP8   LABEL .                   HERE IF STRING IS LWZ
)@@G@@ESS THAN 6 CHARS  @C@@@<         LOAD    A2,ARDVCL,A3 .    GET LENGTH   XA
)@@G@@@D@@@<         LOAD    A4,W1,X11 .       GET WORD OF STRING @#@@@<BFCOP9XB
)@@G@@   LABEL .  @E@@@<         LOAD    A5,A4 .           SET TO REPEAT STRINXC
)@@G@@G     @D@@@<         SRB     A4,*OUTSFT,A2 .   SHIFT OUT JUNK     @C@@@<XD
)@@G@@         SLBD    A4,*OUTSFT,A2 .   REPEAT STRING@D@@@<         ADD     AXE
)@@G@@2,A2 .           NOW TWICE AS MUCH  @E@@@<         IF A2,LE,3,I THEN,BFCXF
)@@G@@OP9 . GO UNTIL WORD FILLED    @C@@@<         STORED  A4,W1,*A1 .       AXG
)@@G@@SSUME EXTRAS@D@@@<         STORE   A2,ARDVCL,A3 .    SET NEW LENGTH     XH
)@@G@@@C@@@<         IF      A2,GE,5,I THEN,BFCOP4 . EXTRAS?@D@@@<         SUBXI
)@@G@@     A1,1,I .          NOPE, NO EXTRAS    @D@@@<         GOTO    BFCOP4 XJ
)@@G@@.          GO DO REST OF COPY @E@@@<BFCOP7   LABEL .                   EXK
)@@G@@RROR,NEGATIVE MULTIPLIER@B@@@=         STORE   A8,ARSVA8 .       SAVE A8XL
)@@G@@@E@@@=         LOADA   A8,EXCOPS .       POINT TO THE WORD 'COPY' @E@=@<XM
)@@G@@         EXERR   EXCOPY LEVEL,2 .  NEG COUNTER FOR COPY BIF @D@@@=      XN
)@@G@@   ONER   EXCOPY,2 .  NEG COUNTER FOR COPY BIF  @C@@@=         LOAD    AXO
)@@G@@8,ARSVA8 .       RESET A8     @^@@@<         GOTO    STNULL @ @@@</.    XP
)@@G@@   HIGH AND LOW BIFS    @[@@@<.     @[@@@<.     @E@@@<BFHIGH*  LLOC .   XQ
)@@G@@                 ENTRY POINT FOR HIGH     @E@@@<         LOADA   X5,HIGHXR
)@@G@@BT .       POINT TO 0177177177177   @D@@@<         GOTO    BFLOW1 .     XS
)@@G@@     MERGE WITH LOW     @E@@@<BFLOWT*  LLOC .                    ENTRY PXT
)@@G@@OINT TO LOW BIF   @C@@@<         LOADA   X5,KKD0 .         POINT TO ZEROXU
)@@G@@@#@=@<BFLOW1   LABEL .  @#@@@=BFLOW1   LOCAL .  @D@@@=         STORED  AXV
)@@G@@5,ARSVA5 .       SAVE A6 AND A5     @B@@@<         IF A3,LT,0,I THEN,BFLXW
)@@G@@OW4 . ERROR @C@@@<         STORE   A3,SVDVCL .       SET LENGTH   @B@@@<XX
)@@G@@         STORE   A3,SVDVML .       ''     @D@=@<         STORED  A5,ARSVXY
)@@G@@A5 .       SAVE A6 AND A5     @E@@@<         MOVE    SVDVOR,0,I .      CXZ
)@@G@@LEAR ORIGIN POINTER     @C@=@<         MOVE    SVDVTY,ARBTCH,I . SAVE FLYA
)@@G@@AGS   @C@@@=         MOVE    SVDVTY,0,I .      SAVE FLAGS   @D@@@<      YB
)@@G@@   MOVE    SVEPTR,AREPTR .   SET ENDPOINTER     @C@@@<         SRBD    AYC
)@@G@@3,2 .            DIVIDE BY 4  @F@@@<         SRB     A4,34 .           CYD
)@@G@@OUNT HOWMANY WORDS NEEDED     @D@@@<         IF A4,EQ,0,I THEN,BFLOW2 . YE
)@@G@@EVEN WORD BOUNDRY @E@@@<         ADD     A3,1,I .          ACCOUNT FOR LYF
)@@G@@EFT OVER    @#@@@<BFLOW2   LABEL .  @C@@@<         LOAD    R1,A3 .      YG
)@@G@@     SET COUNT    @D@@@<         ADD     A3,2,I .          ACCOUNT FOR DYH
)@@G@@V     @C@@@<         ADD     A3,SVEPTR .       CHECK SIZE   @C@@@<      YI
)@@G@@   STORE   A3,AREPTR .       SET NEW SIZE @G@@@=BFLOW5   LABEL .        YJ
)@@G@@           HERE TO SEE IF WE GOT ENOUGH ROOM!   @D@=@<         IF A3,LE,YK
)@@G@@ADPEND THEN,BFLOW3 . OK GOT THE CORE@D@@@=         IF A3,LE,ADPCND THEN,YL
)@@G@@BFLOW3 . OK GOT THE CORE@C@@@<         LINK    WROVFL .          GET MORYM
)@@G@@E     @E@@@=         GOTO    BFLOW5 .          SEE IF WE GOT THE SPACE  YN
)@@G@@@#@@@<BFLOW3   LABEL .  @F@@@<         LOAD    A1,SVEPTR .       POINT TYO
)@@G@@O WHERE STRING GOES     @B@@@<         LOADXI  A1,1,I .          SET INCYP
)@@G@@@D@@@<         BT      A1,0,*X5 .        SET STRING THERE   @C@@@<      YQ
)@@G@@   GOTO    EXDVCR .          GO SET UP DV @C@@@<BFLOW4   LABEL .        YR
)@@G@@           ERROR HERE   @D@@@=         STORE   A8,ARSVA8 .       SAVE THYS
)@@G@@RU ERROR MSG@D@@@=         LOADA   A8,EXHIGS .       ASSUME HIGH BIF    YT
)@@G@@@G@@@=         TNZ     0,X5 .            IF ZERO THEN LOW BIF    *******YU
)@@G@@****  @D@@@=         LOADA   A8,EXLOWS .       MUST BE LOW BIF    @D@=@<YV
)@@G@@         EXERR   EXERLW LEVEL,2 .  NEGATIVE COUNTER   @C@@@=         ONEYW
)@@G@@R   EXCOPY,2 .  NEGATIVE COUNTER    @C@@@=         LOAD    A8,ARSVA8 .  YX
)@@G@@     RESET A8     @E@@@<         GOTO    STNULL .          RETURN A NULLYY
)@@G@@ STRING     @^@@@</.       LENGTH BIF     @[@@@<.     @[@@@<.     @F@@@<YZ
)@@G@@BFLNTH*  LOCAL .                   ENTRY POINT FOR LENGTH BIF     @D@@@<ZA
)@@G@@         LINK    POPA3 .           POINT TO STRING    @D@@@<         LOAZB
)@@G@@D    A3,ARDVCL,A3 .    GET CURRENT LENGTH @D@@@<         MOVE    AREPTR,ZC
)@@G@@SVEPTR .   RESET ENDPOINTER   @E@@@<         LOADD   A5,ARSVA5 .       RZD
)@@G@@ESET FLAG REGISTERS     @#@@@<         JMP .    @D@@@</.       BUILT IN ZE
)@@G@@FUNCTION TO HANDLE CSF$ REQUESTS    @[@@@<.     @[@@@<.     @E@@@<BFCSF$ZF
)@@G@@*  LOCAL .                   ENTRY POINT FOR CSF BIF  @D@@@<         IF ZG
)@@G@@A3,EQ,0,I THEN,BFCSF3 . IS STRING IN TEMP?@D@@@<         LOAD    A2,0,I ZH
)@@G@@.          SAY PUT INTO TEMP  @D@@@<         LINK    EXCCA .           AZI
)@@G@@SSIGN INTO TEMP   @E@@@<         LOAD    A3,0,I .          NOW STRING ISZJ
)@@G@@ IN TEMP    @E@@@<BFCSF3   LABEL .                   HERE IF IN TEMP TO ZK
)@@G@@START @D@@@<         LINK    POPA3 .           FIND ARGUEMENT     @D@@@<ZL
)@@G@@         STORED  A7,ARSVA7 .       SAVE A7 AND A8     @C@@@<         LOAZM
)@@G@@D    A7,ARDVCL,A3 .    GET LENGTH   @C@@@<         SRBD    A7,2 .       ZN
)@@G@@     DIVIDE BY 4  @C@@@<         SRB     A8,34 .           GET REMANIDERZO
)@@G@@@E@@@<         IF A8,EQ,0,I THEN,BFCSF0 . IS THERE ANY LEFT OVER? @D@@@<ZP
)@@G@@         ADD     A7,1,I .          INCREASE COUNT     @#@@@<BFCSF0   LABZQ
)@@G@@EL .  @F@@@<         LOAD    A8,A7 .           GET COUNT OF WORDS FOR ZEZR
)@@G@@LK    @D@@@<         LOAD    A7,ARDVPT,A3 .    POINT TO STRING    @F@@@<ZS
)@@G@@         LINK    ZCSF$ .           GO DO CSF$ IN ROOT SEGMENT     @E@@@<ZT
)@@G@@         LOAD    A5,36,I .         SAY 36 CHARS TO STACK    @D@@@<      ZU
)@@G@@   LINK    CHKROM .          SEE IF ROOM ON AREC@E@@@<         LOAD    AZV
)@@G@@1,SVEPTR .       POINT TO END OF AREC     @B@@@<         LOADXI  A1,1,I ZW
)@@G@@.          SET INC@ @@@<         LOAD    A6,0,I .     @E@@@<         SETZX
)@@G@@L    R1,9,I .          SET TO DO NINE WORDS     @A@@@<BFCSF1   LABEL . TZY
)@@G@@OP OF WORD LOOP   @E@@@<         SETL    R2,4,I .          SET TO PUT FOZZ
)@@G@@UR/WORD     @A@@@<BFCSF2   LABEL . TOP OF CHAR LOOP   @E@@@<         SLBAA
)@@G@@     A6,8 .            SHIFT IN 8 BITS OF RESULT@C@@@<         ADD     AAB
)@@G@@6,'0'/2,I .      ADD IN ZONE  @C@@@<         SLBD    A6,1 .            AAC
)@@G@@DD IN BIT   @E@@@<         LOOP    R2,BFCSF2 .       DO FOR ALL FOUR CHAAD
)@@G@@RS    @B@@@<         STORE   A6,W1,*A1 .       SAVE   @B@@@<         LOAAE
)@@G@@D    A6,0,I .          RESET  @D@@@<         LOOP    R1,BFCSF1 .       DAF
)@@G@@O FOR NINE WORDS  @C@@@<         LOADD   A7,ARSVA7 .       GET REGS BACKAG
)@@G@@@D@@@<         MOVE    SVDVOR,EBTMSK .   SAY BIT STRING     @D@@@<      AH
)@@G@@   MOVE    SVDVML,36,I .     SAY LENGTH IS 36   @D@@@<         STORE   AAI
)@@G@@6,SVDVCL .       SET CURRENT LENGTH @D@@@<         GOTO    EXDVCR .     AJ
)@@G@@     GO CREATE THE DV   @A@@@</.       SUBSTR PSEUDO VARIABLE     @ @@@<AK
)@@G@@.                ON ENTRY:    @C@@@<.                                  AAL
)@@G@@3 - > FROM  @C@@@<.                                  A2 - > TO    @C@@@<AM
)@@G@@.                                  A1 =   START @G@@@<.                 AN
)@@G@@                 A4 =   LENGTH (IF FLAG ,OFF 1,X11)   @G@@@<BFSBPV*  LLOAO
)@@G@@C .                    ENTRY POINT FOR PSEUDO SUBSTR BIF    @ @@@<      AP
)@@G@@   USING   WORD,X11     @C@@@<         LOAD    X5,W1 .           GET FLAAQ
)@@G@@G     @D@@@<         STORE   X5,LHSREM .       SAVE FOR LATER     @F@@@<AR
)@@G@@         LOAD    X11,W1U+1,X11 .   INCREASE RETURN TO SKIP FLAG   @A@@@<AS
)@@G@@         LOCAL . SAVE RETURN ADDRESS@C@@@<         LINK    POPA3 .      AT
)@@G@@     FIND RHS     @D@@@<         STORE   A8,ARSVA8 .       SAVE USED REGAU
)@@G@@S     @ @@@<         STORE   X1,ARSAX1 .  @ @@@<         STORE   X2,ARSAAV
)@@G@@X2 .  @ @@@<         STORE   X3,ARSAX3 .  @E@@@<         LOAD    X3,A2 .AW
)@@G@@           FREE A2 FOR USE WITH GETC@ @@@<         USING   ARDVDT,X3 .  AX
)@@G@@@#@@@=BFPRED   LABEL .  @E@@@<         IF A1,LT,1,I THEN,BFPSS1 . IS INDAY
)@@G@@EX TOO SMALL?     @E@=@<         IF A1,LE,ARDVML THEN,BFPSS2 . IS INDEX AZ
)@@G@@TOO BIG?    @G@@@=         IF A1,LE,ARDVML THEN,BFPSS2 ELSE,BFPSS1A . ISBA
)@@G@@ INDEX TOO BIG?   @B@@@<BFPSS1   LABEL . INDEX IS OUT OF RANGE    @ @@@=BB
)@@G@@         LOAD    A1,1,I .     @#@@@=BFPSS1A  LABEL .  @B@@@<         LOABC
)@@G@@DA   X5,EXINDX .       SAY SO @D@=@<         EXERR   EXSBST  LEVEL,2 . IBD
)@@G@@NDEX OUT OF RANGE @C@=@<         LOAD    A1,1,I .          ASSUME ONE   BE
)@@G@@@ @@@=.        INDEX OUT OF RANGE   @ @@@=         LINK    SPVERR .     BF
)@@G@@@ @@@=         GOTO    BFPRED .     @E@@@<BFPSS2   LABEL .              BG
)@@G@@     HAVE LEGAL INDEX NOW     @D@@@<         IF LHSREM,ZERO THEN,BFPSS3 BH
)@@G@@. IS LENGTH GIVEN?@D@@@<         LOAD    A4,ARDVML .       GET END OF STBI
)@@G@@RING  @D@@@<         SUB     A4,A1 .           SUBTRACT START     @E@@@<BJ
)@@G@@         ADD     A4,1,I .          MAKE A 1 ORIGIN COUNT    @D@@@<BFPSS3BK
)@@G@@   LABEL .                   TRY THIS LENGTH    @E@@@<         STORE   ABL
)@@G@@4,RHSSIZ .       SAVE REQUESTED LENGTH    @E@@@<         IF A4,LT,1,I THBM
)@@G@@EN,BFPSS4 . IS LENGTH TOO SHORT?    @D@@@<         ADD     A4,A1 .      BN
)@@G@@     SEE IF TOO LONG    @F@@@<         SUB     A4,1,I .          ACCOUNTBO
)@@G@@ FOR TWO 1-ORIGIN #'S   @E@@@<         STORE   A4,SVDVCL .       SAVE INBP
)@@G@@ CASE NOT INITED  @D@=@<         IF A4,LE,ARDVML THEN,BFPSS5 . IS LENGTHBQ
)@@G@@ OK?  @F@@@=         IF A4,LE,ARDVML THEN,BFPSS5 ELSE,BFPSS4A . IS LENGTBR
)@@G@@H OK? @E@@@<BFPSS4   LABEL .                   LENGTH IS OUT OF RANGE   BS
)@@G@@@ @@@=         MOVE    RHSSIZ,1,I . @ @@@=         STORE   A1,SVDVCL .  BT
)@@G@@@#@@@=BFPSS4A  LABEL .  @D@@@<         LOADA   X5,EXLENG .       POINT TBU
)@@G@@O 'LENGTH'  @E@=@<         EXERR   EXSBST  LEVEL,2 . LENGTH IS OUT OF BOBV
)@@G@@UNDS  @ @@@=         LINK    SPVERR .     @ @@@=         GOTO    BFPRED BW
)@@G@@.     @E@@@<         MOVE    RHSSIZ,1,I .      SAY NEW LENGTH IS ONE    BX
)@@G@@@E@@@<         STORE   A1,SVDVCL .       SAVE NEW END OF STRING   @E@@@<BY
)@@G@@BFPSS5   LABEL .                   LENGTH IS WITHIN BOUNDS  @E@@@<      BZ
)@@G@@   LOAD    X5,A3 .           ALLOW A3 FOR IF STMTS    @E@@@<         MOVCA
)@@G@@E    LHSREM,0,I .      ASSUME STRING IS INITED  @F@@@<         IF ARDVUNCB
)@@G@@,OFF,ARDVKY THEN,BFPSS6 . IS STRING INITED?     @E@@@<         SET     ACC
)@@G@@RDVUN,OFF,ARDVKY . SAY IT WILL BE INITED  @D@@@<         MOVE    LHSREM,CD
)@@G@@1,I .      SAY NOT INIT'ED    @D@@@<         MOVE    ARDVCL,0,I .      SCE
)@@G@@AY CURRENT LEN=0  @F@@@<         GOTO    BFPS6S .          GO MERGE WITHCF
)@@G@@ INIT'ED STRINGS  @#@@@<BFPSS6   LABEL .  @H@@@<         LOAD    A6,ARDVCG
)@@G@@CL .       CHECK CURRENT LENGTH AGAINST NEW LENGTH    @D@@@<         IF CH
)@@G@@A6,LE,SVDVCL THEN,BFPS6S . IT IS SHORTER  @D@@@<         STORE   A6,SVDVCI
)@@G@@CL .       SAVE NEW LONGER LEN@#@@@<BFPS6S   LABEL .  @D@@@<         STOCJ
)@@G@@RE   A1,DEXWK3 .       SAVE THOSE REGS    @G@@@<         SUB     A1,1,I CK
)@@G@@.          ALLOWED TO START AT ONE PAST CURRENT @F@@@<         IF A1,LE,CL
)@@G@@ARDVCL THEN,BFPSS8 . PAST END OF CURRENT STRING?@C@@@<         SUB     ACM
)@@G@@1,ARDVCL .       HOWMANY PAST?@F@@@<         SUB     A1,1,I .          OCN
)@@G@@NLY BLANK OUT EMPTY SPACES    @F@@@<         LOAD    A5,ARDVCL .       SCO
)@@G@@EE WHERE CURRENT LENGTH STARTS@C@@@<         SRBD    A5,2 .            DCP
)@@G@@IVIDE BY 4  @C@@@<         SRB     A6,34 .           GET REMAINDER@E@@@<CQ
)@@G@@         LOAD    X2,A5 .           GET # OF WORDS TO SKIP   @D@@@<      CR
)@@G@@   ADD     X2,ARDVPT .       POINT TO STRING    @E@@@<         LOAD    ACS
)@@G@@2,KSCH4W .       POINT TO PUTC ROUTINE    @E@@@<         ADD     A2,A6 .CT
)@@G@@           ADD IN CHARS TO SKIP     @E@@@<         LOAD    A8,'\',I .   CU
)@@G@@     USE BACKSLASH FOR FILLER @C@@@<BFPSS7   LABEL .                   TCV
)@@G@@OP OF LOOP  @E@@@<         PUTC .                    SET UNUSED CHAR TO CW
)@@G@@'\'   @E@@@<         LOOP    A1,BFPSS7 .       DO FOR ALL UNUSED CHARS  CX
)@@G@@@D@@@<BFPSS8   LABEL .                   OK TO START NOW    @D@@@<      CY
)@@G@@   LOAD    A4,RHSSIZ .       GET LENGTH DESIRED @E@@@<         USING   ACZ
)@@G@@RDVDT,X5 .       SET TO GET OTHER'S INFO  @D@@@<         MOVE    RHSREM,DA
)@@G@@0,I .      ASSUME LONG ENOUGH @C@@@<         IF A4,LE,ARDVCL THEN,BFPSS9DB
)@@G@@ . IS IT?   @E@@@<         SUB     A4,ARDVCL .       SEE HOWMANY EXTRAS DC
)@@G@@NEEDED@B@@@<         STORE   A4,RHSREM .       SAVE   @D@@@<         LOADD
)@@G@@D    A4,ARDVCL .       USE CURRENT LENGTH @#@@@<BFPSS9   LABEL .  @C@@@<DE
)@@G@@         LOAD    X1,ARDVPT .       SET TO SETGC @D@@@<         SETGC   4DF
)@@G@@,0,X1 .          SET TO GET FROM RHS@D@@@<         LOAD    A5,DEXWK3 .  DG
)@@G@@     GET START ADDR     @D@@@<         SUB     A5,1,I .          MAKE 0-DH
)@@G@@ORIGIN .    @C@@@<         SRBD    A5,2 .            DIVIDE BY 4  @G@@@<DI
)@@G@@         SRB     A6,34 .           SEE HOW FAR INTO STRING TO START     DJ
)@@G@@@D@@@<         LOAD    X2,ARDVPT,X3 .    POINT TO LHS STRING@C@@@<      DK
)@@G@@   ADD     X2,A5 .           ADD IN OFFSET@F@@@<         SETPC   4,0,X2 DL
)@@G@@.          SET TO PUT INTO LHS STRING     @D@@@<         ADD     A2,A6 .DM
)@@G@@           ADD IN  CHAR OFFSET@F@@@<         SUB     A4,1,I .          MDN
)@@G@@AKE ZERO ORIGIN COUNT OF LEN  @E@@@<BFPS10   LABEL .                   TDO
)@@G@@OP OF TRANSFER LOOP     @C@@@<         GETC .                    GET NEXDP
)@@G@@T CHAR@D@@@<         PUTC .                    PUT WHERE IT GOES  @C@@@<DQ
)@@G@@         LOOP    A4,BFPS10 .       LOOP THRU LEN@D@@@<         LOAD    ADR
)@@G@@8,' ',I .        ASSUME CHAR STRING @D@@@<         USING   ARDVDT,X3 .  DS
)@@G@@     POINT TO STRING    @E@=@<         IF ARBTCH,ON,ARDVTY THEN,BFPS11 .DT
)@@G@@ IS IT  CHAR?     @E@@@=         IF ARCHBT,OFF,ARDVTY THEN,BFPS11 . IS IDU
)@@G@@T  CHAR?    @F@@@<         LOAD    A8,'0',I .        GET PAD CHAR FOR BIDV
)@@G@@T STRINGS   @E@@@<BFPS11   LABEL .                   PROPER PAD CHAR IS DW
)@@G@@IN A8 @D@@@<         LOAD    A4,RHSREM .       SEE HOW MUCH TO PAD@C@@@<DX
)@@G@@         IF A4,EQ,0,I THEN,BFPS12 . NEED TO PAD?@B@@@<         LINK    BDY
)@@G@@FPS13 .          GO PAD @D@@@<BFPS12   LABEL .                   CHECK IDZ
)@@G@@F INIT'ED   @G@@@<         IF LHSREM,ZERO THEN,BFPSEN . IF STRING WAS INEA
)@@G@@ITED THEN DONE    @F@@@<         IF ARDVVR,ON,ARDVKY THEN,BFPSEN . IF VAEB
)@@G@@RYING THEN DONE   @C@@@<         LOAD    A8,'\',I .        GET BACKSLASHEC
)@@G@@@D@@@<         LOAD    A4,ARDVML .       HOWFAR TO PADD     @D@@@<      ED
)@@G@@   SUB     A4,SVDVCL .       HOW FAR DID WE GO? @C@@@<         MOVE    SEE
)@@G@@VDVCL,ARDVML . SET NEW END    @D@@@<         LOADA   X11,BFPSEN .      WEF
)@@G@@E WILL BE DONE    @E@@@<         GOTO    BFPS13 .          AFTER WE FILLEG
)@@G@@ STRING     @E@@@<BFPS14   LABEL .                   TOP OF BLOCKING LOOEH
)@@G@@P     @D@@@<         PUTC .                    PUT OUT ANOTHER '\'@C@@@<EI
)@@G@@BFPS13   LABEL .                   HERE TO PAD  @D@@@<         LOOP    AEJ
)@@G@@4,BFPS14 .       COUNT OFF CHARS    @B@@@<         LJMP .               EK
)@@G@@     RETURN @C@@@<BFPSEN   LABEL .                   END HERE     @E@@@<EL
)@@G@@         MOVE    ARDVCL,SVDVCL .   SET NEW END OF CURRENT   @D@@@<      EM
)@@G@@   LOAD    A8,ARSVA8 .       RESET USED REGS    @ @@@<         LOAD    XEN
)@@G@@1,ARSAX1 .  @ @@@<         LOAD    X2,ARSAX2 .  @ @@@<         LOAD    XEO
)@@G@@3,ARSAX3 .  @E@@@<         MOVE    AREPTR,SVEPTR .   POP OFF TEMP STRINGEP
)@@G@@S     @D@@@<         LOADD   A5,ARSVA5 .       RESET THESE TOO    @A@@@<EQ
)@@G@@         JMP .   RETURN TO USER CODE@[@@@=.     @[@@@=.     @[@@@=.     ER
)@@G@@@F@@@=SPVERR   LOCAL .                   ROUTINE TO RAISE STRINGRANGE   ES
)@@G@@@ @@@=         USING   ARDVDT,X3 .  @I@@@=         MOVE    SVDVSZ,ARDVSZET
)@@G@@ .   SAVE CURRENT LENGTHS TO SEE IF CHANGED BY ON     @F@@@=         ONUEU
)@@G@@NIT  EXSBST,ACCDST,2  R,JMP1,JMP1  DEXWK1,8  DEXMAX,0 @ @@@=         LOAEV
)@@G@@D    A5,ARDVSZ .  @I@@@=         IF      A5,EQ,SVDVSZ  THEN,JMP1 ELSE,JMEW
)@@G@@P . STRING NOT CHANGED IN ON UNI    @ @@@</.       SOME AND EVERY BIFS  EX
)@@G@@@[@@@<.     @[@@@<.     @D@@@<BFEVRY*  LLOC .                    ENTRY FEY
)@@G@@OR EVERY BIF@C@@@<         LOAD    A4,'0',I .        LOOK FOR A 0 @D@@@<EZ
)@@G@@         GOTO    BFSOM1 .          MERGE WITH SOME BIF@D@@@<BFSOME*  LLOFA
)@@G@@C .                    ENTRY FOR SOME BIF @C@@@<         LOAD    A4,'1',FB
)@@G@@I .        LOOK FOR A 1 @D@@@<BFSOM1   LOCAL .                   REAL ENFC
)@@G@@TRY POINT   @C@@@<         LINK    POPA3 .           FIND ARG     @D@@@<FD
)@@G@@         STORE   A8,ARSVA8 .       SAVE REGS USED     @B@@@<         STOFE
)@@G@@RE   X1,ARSAX1 .       ''     @D@@@<         LOADXM  X1,ARDVPT,A3 .    PFF
)@@G@@OINT TO STRING    @D@@@<         SETGC   4,0,X1 .          SET TO DO GETFG
)@@G@@C'S   @E@@@<         LOAD    R1,ARDVCL,A3 .    GET LENGTH OF STRING     FH
)@@G@@@D@@@<         GOTO    BFSOM3 .          GO COUNT OFF CHARS @E@@@<BFSOM2FI
)@@G@@   LABEL .                   TOP OF CHAR COMPARE LOOP @E@@@<         GETFJ
)@@G@@C .                    GET NEXT CHAR FROM STRING@D@@@<         IF A8,NE,FK
)@@G@@A4 THEN,BFSOM3 . IF NE TRY NEXT CHAR@D@@@<         STORE   A4,W1Q1+2,A2 FL
)@@G@@.    SET NEW RESULT .   @B@@@<         GOTO    BFSOM4 .          RETURN FM
)@@G@@@F@@@<BFSOM3   LABEL .                   BOTTOM OF CHAR COMPARE LOOP    FN
)@@G@@@D@@@<         LOOP    R1,BFSOM2 .       GO TRY NEXT CHAR   @E@@@<BFSOM4FO
)@@G@@   LABEL .                   END OF STRING OR FIND    @C@@@<         MOVFP
)@@G@@E    AREPTR,SVEPTR .   RESET AREC   @C@@@<         LOADD   A5,ARSVA5 .  FQ
)@@G@@     GET A5-A6    @C@@@<         LOAD    A8,ARSVA8 .       GET USED REGSFR
)@@G@@@B@@@<         LOAD    X1,ARSAX1 .       ''     @#@@@<         JMP .    FS
)@@G@@@A@@@</.       TRIM BUILT IN FUNCTION     @[@@@<.     @[@@@<.     @D@@@<FT
)@@G@@BFTRIM*  LOCAL .                   SAVE RETURN ADDRESS@F@@@<         LINFU
)@@G@@K    POPA3 .           SEE IF ARG IS ON STRING STACK  @D@@@<         STOFV
)@@G@@RE   X2,ARSAX2 .       SAVE NEEDED X REG  @ @@@<         USING   ARDVDT,FW
)@@G@@A3 .  @D@@@<         LOAD    A5,ARDVTY .       GET TYPE FLAGS     @D@@@<FX
)@@G@@         LOAD    A4,' ',I .        ASSUME ARG IS CHAR @D@=@<         IF FY
)@@G@@     ARBTCH,OFF THEN,BFTRI1 . IT IS CHAR  @D@@@=         IF      ARCHBT,FZ
)@@G@@OFF THEN,BFTRI1 . IT IS CHAR  @C@@@<         LOAD    A4,'0',I .        AGA
)@@G@@RG IS BIT   @#@@@<BFTRI1   LABEL .  @D@@@<         LOAD    A1,ARDVCL .  GB
)@@G@@     GET CURRENT LENGTH @E@@@<         SRBD    A1,2 .            SEE HOWGC
)@@G@@MANY WORDS IT IS  @C@@@<         SRB     A2,34 .           GET REMAINDERGD
)@@G@@@D@@@<         LOAD    X5,ARDVPT .       POINT TO STRING    @F@@@<      GE
)@@G@@   ADD     X5,A1 .           POINT TO LAST WORD IN STRING   @E@@@<      GF
)@@G@@   IF      A2,NE,0,I THEN,BFTRI2 . EVEN WORD BOUNDRY? @E@@@<         SUBGG
)@@G@@     X5,1,I .          YES , MOVE BACK ONE WORD @#@@@<BFTRI2   LABEL .  GH
)@@G@@@E@@@<         LOADXI  X5,-1,I .         SET INC TO GO BACKWARDS  @F@@@<GI
)@@G@@         LOAD    X2,BACKC .        POINT TO CHAR LOADING ROUTINE  @D@@@<GJ
)@@G@@         SUB     X2,A2 .           MOVE TO PROPER CHAR@F@@@<         LOAGK
)@@G@@D    A1,ARDVCL .       GET CURRENT LENGTH TO COUNT BY @E@@@<BFTRI3   LABGL
)@@G@@EL .                   TOP OF COUNTING LOOP     @D@@@<         ALTC .   GM
)@@G@@                 GET "NEXT" CHAR    @D@@@<         IF A5,NE,A4 THEN,BFTRGN
)@@G@@I4 . DON'T TRIM THIS ONE@E@@@<         LOOP    A1,BFTRI3 .       COUNT OGO
)@@G@@FF ANOTHER CHAR   @D@@@<BFTRI4   LABEL .                   HERE WHEN 'DOGP
)@@G@@NE'   @A@@@<         IF A1,LE,0,I THEN,STNULL . @F@@@<         LOAD    AGQ
)@@G@@2,1,I .          SAY TO START WITH CHAR ONE     @D@@@<         LOAD    XGR
)@@G@@2,ARSAX2 .       RESET USED REG     @E@@@<         GOTO    BFSBS6 .     GS
)@@G@@     GO MERGE WITH SUBSTR     @^@@@</.       UNSPEC BIF     @[@@@<.     GT
)@@G@@@E@@@<BFUNSP*  LOCAL .                   ENTRY POINT FOR STRINGS  @B@@@<GU
)@@G@@         LINK    POPA3 .           GET ARG@ @@@<         USING   ARDVDT,GV
)@@G@@A3 .  @C@@@<         LOAD    A5,ARDVTY .       GET FLAGS    @D@=@<      GW
)@@G@@   IF ARBTCH,OFF THEN,BFUNP1 . -> IT IS CHAR    @D@@@=         IF ARCHBTGX
)@@G@@,OFF THEN,BFUNS1 . -> IT IS CHAR    @D@=@<         MOVE    SVDVTY,ARBTCHGY
)@@G@@,I . SAY RESULT IS BIT  @D@@@=         MOVE    SVDVTY,ARCHBT,I . SAY RESGZ
)@@G@@ULT IS BIT  @E@@@<         LOAD    A2,1,I .          FAKE TO USE SUBSTR HA
)@@G@@CODE. @D@@@<         LOAD    A1,ARDVCL .       GET LENGTH DESIRED @D@@@<HB
)@@G@@         GOTO    BFSBS6 .          GO USE SUBSTR CODE @E@=@<BFUNP1   LABHC
)@@G@@EL .                   HANDLE CHAR STRINGS HRE  @E@@@=BFUNS1   LABEL .  HD
)@@G@@                 HANDLE CHAR STRINGS HERE @D@@@<         LOAD    A4,ARDVHE
)@@G@@CL .       GET NUMBER OF CHARS@E@@@<         MPYS    A4,9,I .          HHF
)@@G@@OW MANY BITS TO CONVERT @D@@@<         LOAD    A3,ARDVPT .       POINT THG
)@@G@@O.THE STRING@E@@@<         GOTO    BFUNS2 .          MERGE WITH ARITH UNHH
)@@G@@SPEC  @B@@@<BFUNSI*  LOCAL . ENTRY POINT FOR NUMBERS  @F@=@<         LOAHI
)@@G@@D    A4,R1 .           GET SIZE WANTED INTO PROPER REG@D@@@<         STOHJ
)@@G@@RED  A5,ARSVA5 .       SAVE USED REGS     @E@@@<         MOVE    SVDVOR,HK
)@@G@@0,I .      POINT TO ZERO TO START   @C@@@<         MOVE    SVEPTR,AREPTRHL
)@@G@@ .   SAVE END PTR @D@@@<BFUNS2   LABEL .                   MERGE WITH STHM
)@@G@@RINGS @D@=@<         MOVE    SVDVTY,ARBTCH,I . SET RETURN VALUE   @D@@@=HN
)@@G@@         MOVE    SVDVTY,ARCHBT,I . SET RETURN VALUE   @D@@@<         STOHO
)@@G@@RE   A4,SVDVCL .       SET RESULT'S LENGTH@B@@@<         STORE   A4,SVDVHP
)@@G@@ML .       ''     @C@@@<         LOAD    A5,A4 .           GET LENGTH   HQ
)@@G@@@D@@@<         LINK    CHKROM .          SEE IF ROOM LEFT   @D@@@<      HR
)@@G@@   LOAD    A5,A4 .           GET LENGTH AGAIN   @C@@@<         SRBD    AHS
)@@G@@5,2 .            DIVIDE BY 4  @C@@@<         SRB     A6,34 .           FHT
)@@G@@IX REMAINDER@F@@@<         LOAD    R2,A6 .           GET CHARS LEFT IN THU
)@@G@@HIS WORD    @F@@@<         IF A6,NE,0,I THEN,BFUNS3 . COME OUT ON AN EVEHV
)@@G@@N WORD?     @D@@@<         SUB     A5,1,I .          NO,NO EXTRA WORD   HW
)@@G@@@D@@@<         LOAD    R2,4,I .          SET 4 CHARS LEFT   @#@@@<BFUNS3HX
)@@G@@   LABEL .  @D@@@<         LOAD    A1,A5 .           GET WORD COUNT     HY
)@@G@@@F@@@<         ADD     A1,SVEPTR .       POINT TO WHERE LAST WORD GOES  HZ
)@@G@@@E@@@<         LOAD    A2,A1 .           LEAVE A1 FOR DV CREATER  @B@@@<IA
)@@G@@         LOADXI  A2,-1,I .         SET INC@D@@@<         SRBD    A4,36 .IB
)@@G@@           PREPARE FOR DIVIDE @G@@@<         DIV     A4,36,I .         SIC
)@@G@@EE HOWMANY WORDS OF BITS TO SKIP    @F@@@<         LOAD    R1,A4 .      ID
)@@G@@     SET TO COUNT OFF THOSE WORDS   @F@@@<         ADD     A3,R1 .      IE
)@@G@@     POINT TO WHERE LAST BITS ARE   @B@@@<         LOADXI  A3,-1,I .    IF
)@@G@@     SET INC@E@@@<         LOAD    X5,A5 .           # OF BITS IN LAST WIG
)@@G@@ORD   @C@@@<         LOAD    A6,W1,*A3 .       GET LAST BITS@D@@@<      IH
)@@G@@   LSSC    A6,0,X5 .         RIGHT JUSTIFY THEM @C@@@<         LOAD    AII
)@@G@@4,UNSPFL .       GET FILLER   @B@@@<         GOTO    BFUNS6 .          MIJ
)@@G@@ERGE  @ @@@<BFUNS4   LABEL . TOP OF LOOP  @E@@@<         LOOP    R2,BFUNIK
)@@G@@S5 .       COUNT TILL A5 IS FULL    @D@@@<         STORE   A5,W1,*A2 .  IL
)@@G@@     SAVE THESE CHARS   @C@@@<         LOAD    A4,UNSPFL .       GET FILIM
)@@G@@LER   @E@@@<         SETL    R2,4,I .          SET TO FILL ANOTHER WORD IN
)@@G@@@B@@@<BFUNS5   LABEL . HERE TO FIX NEXT CHAR    @E@@@<         DSC     AIO
)@@G@@5,1 .            SHIFT IN ANOTHER BIT     @D@@@<         SRBD    A4,8 . IP
)@@G@@           SHIFT IN FILLER    @D@@@<BFUNS6   LABEL .                   MIQ
)@@G@@ERGE HERE TO START@F@@@<         LOOP    X5,BFUNS4 .       STILL MORE BIIR
)@@G@@TS IN THIS WORD   @D@@@<         LOAD    A6,W1,*A3 .       GET ''NEXT'' IS
)@@G@@WORD  @D@@@<         SETL    X5,36,I .         SET TO COUNT IT OFF@E@@@<IT
)@@G@@         LOOP    R1,BFUNS4 .       LOOP TILL OUT OF WORDS   @F@@@<      IU
)@@G@@   STORE   A5,W1,A2 .        SAVE LAST CHARS PUT TOGETHER   @B@@@<      IV
)@@G@@   LOADXI  A1,1,I .          SET INC@E@@@<         LOADXM  A1,W1U+1,A1 .IW
)@@G@@     POINT PAST LAST WORD     @D@@@<         GOTO    EXDVCR .          GIX
)@@G@@O CREATE THE DV   @^@@@</.       UNSPEC PV .    @[@@@<.     @[@@@<.     IY
)@@G@@@E@@@<BFUNPV*  LOCAL .                   ENTRY POINT FOR STRINGS  @E@@@<IZ
)@@G@@         LOAD    A4,A3 .           HANG ONTO ORIGIONAL DV...@C@@@<      JA
)@@G@@   LINK    POPA3 .           FIND RHS     @D@=@<         LOAD    A5,ARDVJB
)@@G@@TY,A3 .    GET FLAGS FOR TYPE @D@@@=         LOAD    A5,ARDVTY,A2 .    GJC
)@@G@@ET FLAGS FOR TYPE @G@=@<         IF      ARBTCH,ON THEN,BFUN12 . BIT STRJD
)@@G@@ING IS STRAIGHT ASSIGN  @G@@@=         IF      ARCHBT,ON THEN,BFUN12 . BJE
)@@G@@IT STRING IS STRAIGHT ASSIGN  @C@@@<         LOAD    A4,ARDVCL,A3 .    GJF
)@@G@@ET LENGTH   @D@@@=         SRBD    A4,36 .           PREPARE FOR DIVIDE JG
)@@G@@@F@@@<         DIV     A4,9,I .          SEE HOW MANY CHARS THET IS     JH
)@@G@@@D@@@<         IF A5,EQ,0,I THEN,BFUNP1 . ANY LEFT OVER?    @D@@@<      JI
)@@G@@   ADD     A4,1,I .          MEANS ONE MORE CHAR@F@@@<BFUNP1   LABEL .  JJ
)@@G@@                 HERE WITH LEN IN CHARS IN A4   @ @@@<         USING   AJK
)@@G@@RDVDT,A2 .  @C@@@<         LOAD    A5,ARDVKY .       GET FLAGS    @C@@@<JL
)@@G@@         IF A4,GE,ARDVML THEN,BFUNP2 . TOO LONG?@D@@@<         IF ARDVVRJM
)@@G@@,ON THEN,BFUNP3 . IS LHS VARYING?   @#@@@<BFUNP2   LABEL .  @D@@@<      JN
)@@G@@   LOAD    A4,ARDVML .       ONLY FILL TO LENGTH@#@@@<BFUNP3   LABEL .  JO
)@@G@@@D@@@<         STORE   A4,ARDVCL,A2 .    SET NEW LENGTH .   @D@@@<      JP
)@@G@@   SET     ARDVUN,OFF .      STRING NOW INITED  @D@@@<         STORE   AJQ
)@@G@@5,ARDVKY .       SAVE NEW FLAGS     @E@=@<         MPYS,A4,9,I .        JR
)@@G@@     NUMBER OF BITS WANTED    @E@@@=         MPYS    A4,9,I .          NJS
)@@G@@UMBER OF BITS WANTED    @E@@@<         LOAD    A2,ARDVPT,A2 .    POINT TJT
)@@G@@O WHERE IT GOES   @E@@@<         GOTO    BFUNP5 .          GO MERGE WITHJU
)@@G@@ NUMBERS    @F@=@<BFUNPI*  LLOC .                    REAL ENTRY POINT FOJV
)@@G@@R INTEGERS  @F@@@=BFUNPI*  LOCAL .                   REAL ENTRY POINT FOJW
)@@G@@R NUMBERS   @D@=@<         LOAD    A4,36,I .         SAY WE WANT 36 BITSJX
)@@G@@@E@=@<         GOTO    BFUNP4 .          MERGE WITH DOUBLE PRE    @F@=@<JY
)@@G@@BFUNPD*  LLOC .                    REAL ENTRY POINT FOR FLOAT,DEC @D@=@<JZ
)@@G@@         LOAD    A4,72,I .         SAY WE WANT 72 BITS@E@=@<BFUNP4   LOCKA
)@@G@@AL .                   APPARENT ENTRY POINT     @C@@@<         LINK    PKB
)@@G@@OPA3 .           FIND RHS     @E@@@<BFUNP5   LABEL .                   MKC
)@@G@@ERGE HERE WITH STRINGS  @B@@@<         LOADXI  A2,1,I .          SET INCKD
)@@G@@@D@@@<         LOAD    A1,ARDVCL,A3 .    HOWMANY BITS IN RHS@C@@@<      KE
)@@G@@   LOAD    A3,ARDVPT,A3 .    POINT TO RHS @D@@@<         LOADXI  A3,1,I KF
)@@G@@.          SET TO WALK THRU   @F@@@<         LOAD    X5,36,I .         HKG
)@@G@@OWMANY BITS LEFT TO FILL IN A5@E@@@<         LOAD    R1,0,I .          HKH
)@@G@@OWMANY BITS IN A6 NOW?  @D@@@<         GOTO    BFUNP7 .          COUNT EKI
)@@G@@VERYTHIN OFF@C@@@<BFUNP6   LABEL .                   TOP OF LOOP  @D@@@<KJ
)@@G@@         SLB     A6,8 .            GET RID OF JUNK    @C@@@<         SLBKK
)@@G@@D    A5,1 .            MOVE IN BIT  @F@@@<BFUNP7   LABEL .              KL
)@@G@@     NOW START TO COUNT IT ALL OFF  @D@@@<         LOOP    A1,BFUNP8 .  KM
)@@G@@     OUT IN STRING?     @E@@@<         LOADA   A3,KFZERO .       POINT TKN
)@@G@@O DUMMY STRING    @E@@@<         LOAD    A1,A4 .           PLENTY OF CHAKO
)@@G@@RS LEFT NOW @#@@@<BFUNP8   LABEL .  @D@@@<         LOOP    R1,BFUNP9 .  KP
)@@G@@     ANY LEFT IN A6?    @C@@@<         LOAD    A6,W1,*A3 .       GET NEXKQ
)@@G@@T BITS@D@@@<         SETL    R1,4,I .          ASSUME WORD IS FULL@D@@@<KR
)@@G@@         IF      A1,GE,4,I THEN,BFUNP9 . IS WORD FULL?@E@@@<         LOAKS
)@@G@@D    R1,A1 .           NO WORD IS ONLY PART FULL@#@@@<BFUNP9   LABEL .  KT
)@@G@@@C@@@<         LOOP    X5,BFUN10 .       IS A5 FULL?  @D@@@<         STOKU
)@@G@@RE   A5,W1,*A2 .       YES GET NEW A5     @F@@@<         SETL    X5,36,IKV
)@@G@@ .         SAY ANOTHER WORD TO FILL UP    @#@@@<BFUN10   LABEL .  @E@@@<KW
)@@G@@         LOOP    A4,BFUNP6 .       GO TILL WE GET ENOUGH    @E@=@<      KX
)@@G@@   SSC     A5,1,X5 .         SHIFT TO PROPER POSITION @E@@@=         LSSKY
)@@G@@L     A5,1,X5 .         SHIFT TO PROPER POSITION@E@@@<         LOAD    AKZ
)@@G@@6,X5 .           GET COUNT OF WHATS IN A5 @E@@@<         IF      A6,EQ,3LA
)@@G@@5,I THEN,BFUN11 . ANY REALLY THERE? @D@@@<         STORE   A5,W1,*A2 .  LB
)@@G@@     SAVE LAST BITS     @#@@@<BFUN11   LABEL .  @D@@@<         MOVE    ALC
)@@G@@REPTR,SVEPTR .   RESTORE ENDPTR     @C@@@<         LOADD   A5,ARSVA5 .  LD
)@@G@@     RESTORE REGS @D@@@<         JMP .                     RETURN TO USELE
)@@G@@R     @F@@@<BFUN12   LABEL .                   FIX FOR BIT-BIT ASSIGNMENLF
)@@G@@T HERE@C@@@<         LOADD   A5,ARSVA5 .       RESET REGS   @E@@@<      LG
)@@G@@   LOAD    A3,A4 .           POINT TO ORIGIONAL DV    @E@@@<         UNSLH
)@@G@@TK   X11 .             RECLAIM RETURN ADDRESS   @G@@@<         GOTO    ELI
)@@G@@XBBA .           MERGE WITH REGULAR BIT-BIT ASSIGN    @#@@@<         ENDLJ
)@@G@@ .    ___,I .          S*[S@@@*SDFF*@C@@@].   COPYRIGHT 1975 BY UNIVERSILK
)@@G@@TY OF MARYLAND    @[@@@].     @D@@@].   QUESTIONS CONCERNING THIS SHOULDLL
)@@G@@ BE DIRECTED TO:  @[@@@].     @ @@@].        MARVIN V. ZELKOWITZ  @B@@@]LM
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@].        UNIVERSITY OF MLN
)@@G@@ARYLAND     @B@@@].        COLLEGE PARK, MARYLAND 20742     @[@@@].     LO
)@@G@@@G@@@].        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMLP
)@@G@@S THEY@E@@@].   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    LQ
)@@G@@@[@@@].     @G@@@].        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS LR
)@@G@@REPRESENTED BY    @G@@@].   THESE LISTINGS PROVIDED THAT THE NAME PLUM OLS
)@@G@@R UNIVERSITY OF MARYLAND@E@@@].   PL/1 COMPILER REMAINS ASSOCIATED WITH LT
)@@G@@THESE PROGRAMS.   @[@@@].     @F@@@].        2. MODIFICATIONS MAY BE MADLU
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@].     @G@@@].        (A) ANY RESULTILV
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@].        DESCRIBINLW
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@].        IS LX
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@].     @G@@@].     LY
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@]LZ
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@]MA
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    MB
)@@G@@@C@@@].        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@].     @F@@@]MC
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@]MD
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  ME
)@@G@@@[@@@].     @F@@@].        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTMF
)@@G@@ED TO OTHER @G@@@].        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEMG
)@@G@@ARLY INDICATE     @G@@@].        WHETHER THE PROGRAMS ARE EXACT COPIES OMH
)@@G@@F THE UNIVERSITY OF     @E@@@].        MARYLAND PLUM COMPILER OR ARE MODMI
)@@G@@IFICATIONS TO IT. @[@@@].     @G@@@].        3. THESE CONDITIONS ONLY APMJ
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@].   AND ARE NOT MEANT TO APPLYMK
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@].   THE PURPOSE OF THESE CONDIML
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@].   EXPERIMENT WITH THE COMPILER AS MM
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@].   IS NOT SOLD AND AS LONG AS IT ISMN
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@].   FROM PLUM.    @[@@@].     MO
)@@G@@@[@@@].     @[@@@].     @[@@@].     @[@@@].     @[@@@]/.    @[@@@@.     MP
)@@G@@@D@@@@.                        UNIVAC 1108 FORTRAN V LIBRARY@[@@@@.     MQ
)@@G@@@A@@@@. DTAN(X)  DOUBLE PRECISION TANGENT @[@@@@.     @]@@@@.  USAGE    MR
)@@G@@@[@@@@.     @^@@@@.   FORTRAN V REFERENCE @H@@@@.   DTAN(X), WHERE X REPMS
)@@G@@RESENTS THE (DOUBLE PRECISION) ARGUMENT IN RADIANS.   @[@@@@.     @A@@@@MT
)@@G@@.   ASSEMBLER LANGUAGE REFERENCE    @^@@@@.   A     LMJ   X11,DTAN@D@@@@MU
)@@G@@.   A+1   +     LOC(X)          . ADDRESS OF ARGUMENT @C@@@@.   A+2   + MV
)@@G@@    SEQNUM,PRGNAM   . WALK BACK WORD@C@@@@.   A+3                       MW
)@@G@@  . NORMAL RETURN @G@@@@.   DTAN IS ONE ENTRY TO FUNCTION ROUTINE WHICH MX
)@@G@@COMPUTES EITHER DOUBLE  @A@@@@.   PRECISION TANGENT OR COTANGENT. @[@@@@MY
)@@G@@.     @A@@@@.   ARGUMENT AND FUNCTION RANGE     @H@@@@.   THE ARGUMENT MMZ
)@@G@@UST BE A NORMALIZED, DOUBLE PRECISION, FLOATING POINT NUMBER@H@@@@.   X NA
)@@G@@SUCH THAT ABS(X) .LT. 2**56. THE FUNCTION RETURNS A NORMALIZED, DOUBLE  NB
)@@G@@@B@@@@.   PRECISION, FLOATING POINT NUMBER.     @[@@@@.     @^@@@@.   FUNC
)@@G@@NCTIONS REFERENCED@]@@@@.   NONE    @[@@@@.     @^@@@@.   ERROR CONDITIOND
)@@G@@NS    @H@@@@.   UNNORMALIZED ARGUMENTS AND ARGUMENTS WHOSE MAGNITUDE IS NE
)@@G@@GREATER THAN 2**56@ @@@@.   CAUSE ERROR TERMINATION.  @[@@@@.     @^@@@@NF
)@@G@@.  MATHEMATICAL METHOD  @H@@@@.   DIVIDE ABS(X) BY PI/4 GIVING ABS(X) = NG
)@@G@@PI/4 * (4*K + Q + R), WHERE K IS AN @I@@@@.   INTEGER, Q IS AN INTEGER RNH
)@@G@@EPRESENTING THE OCTANT SUCH THAT 0 .LE. Q .LE. 3,     @^@@@@.   AND R ISNI
)@@G@@ A FRACTION.@E@@@@.   IF Q = 0, TAN(ABS(X)) = TAN(PI/4 * W), WHERE W = RNJ
)@@G@@.     @E@@@@.   IF Q = 1, TAN(ABS(X)) = COT(PI/4 *W), WHERE W = 1 - R   NK
)@@G@@@E@@@@.   IF Q = 2, TAN(ABS(X)) = -COT(PI/4 *W), WHERE W = R.     @E@@@@NL
)@@G@@.   IF Q = 3, TAN(ABS(X)) = -TAN(PI/4 * W), WHERE W = 1 - R.@I@@@@.   IFNM
)@@G@@ W .GE. 2**(-11), THEN TAN(PI/4 * W) AND COT(PI/4 * W) ARE APPROXIMATED NN
)@@G@@BY    @H@@@@.   RATIONAL FUNCTIONS TAN(PI/4 * W) = W * P(W**2)/Q(W**2) ANO
)@@G@@ND COT(PI/4 * W) =@G@@@@.   Q(W**2)/(W * P(W**2)), WHERE P AND Q ARE FOUNP
)@@G@@RTH DEGREE POLYNOMIALS. @C@@@@.   IF W .LT. 2**(-11), THEN LET Z = W * PNQ
)@@G@@I/4,  @E@@@@.   TAN(Z) = Z + Z**3/3 + 2*Z**5/15  AND COTAN(Z) = 1/TAN(Z)NR
)@@G@@@[@@@@.     @#@@@@.  PERFORMANCE    @[@@@@.     @]@@@@.   ACCURACY@H@@@@NS
)@@G@@.                  NO. OF    MAX. REL.    RMS REL.      MAX. NO.  FULL LNT
)@@G@@ENGTH @H@@@@.       ARG.        ARG.       ERROR        ERROR      ERRONNU
)@@G@@EOUS    ACCURACY  @H@@@@.      RANGE       VALUES   *10**(-17)   *10**(-NV
)@@G@@17)      BITS         (%)     @H@@@@.   -------------- ------   --------NW
)@@G@@---  ------------   --------  ----------- @H@@@@.   (0,PI)          6000NX
)@@G@@      0.4867        0.1711         4          23.0    @H@@@@.   (-0.001,NY
)@@G@@0.001)  3000      0.4377        0.1837         4          14.6    @H@@@@NZ
)@@G@@.   (PI/2 - 0.001,  3000      0.3198        0.0977         3          47OA
)@@G@@.1    @#@@@@.    PI/2 + 0.001)@F@@@@.   THE RESULTS ARE COMPARABLE FOR OOB
)@@G@@THER PERIODS OF THE FUNCTION. @[@@@@.     @]@@@@.   TIMING  @B@@@@.   17OC
)@@G@@2.0 MICROSEC. IF W .GT. 2**(-15)    @B@@@@.   130.0 MICROSEC. IF W .LE. OD
)@@G@@2**(-15)    @[@@@@.     @^@@@@.   CORE REQUIREMENTS   @A@@@@.   NUMBER OOE
)@@G@@F INSTRUCTIONS   174    @A@@@@.   SIZE OF DATA AREA         41    @A@@@@OF
)@@G@@.   TOTAL CORE REQUIREMENTS  215    @[@@@@.     @[@@@@.     @B@@@@. DCOTOG
)@@G@@AN(X) - DOUBLE PRECISION COTANGENT  @[@@@@.     @]@@@@.  USAGE    @[@@@@OH
)@@G@@.     @^@@@@.   FORTRAN V REFERENCE @H@@@@.   DCOTAN(X), WHERE X REPRESEOI
)@@G@@NTS THE (DOUBLE PRECISION) ARGUMENT IN RADIANS. @[@@@@.     @A@@@@.   ASOJ
)@@G@@SEMBLER LANGUAGE REFERENCE    @ @@@@.   A     LMJ   X11,DCOTAN    @D@@@@OK
)@@G@@.   A+1   +     LOC(X)          . ADDRESS OF ARGUMENT @C@@@@.   A+2   + OL
)@@G@@    SEQNUM,PRGNAM   . WALK BACK WORD@C@@@@.   A+3                       OM
)@@G@@  . NORMAL RETURN @H@@@@.   DCOTAN IS ONE ENTRY TO A FUNCTION ROUTINE WHON
)@@G@@ICH COMPUTES EITHER DOUBLE    @A@@@@.   PRECISION TANGENT OR COTANGENT. OO
)@@G@@@[@@@@.     @A@@@@.   ARGUMENT AND FUNCTION RANGE     @H@@@@.   THE ARGUOP
)@@G@@MENT MUST BE A NORMALIZED, DOUBLE PRECISION, FLOATING POINT NUMBER@H@@@@OQ
)@@G@@.   X SUCH THAT ABS(X) .LT. 2**56 AND X .NE. 0.  THE FUNCTION RETURNS A OR
)@@G@@DOUBLE@A@@@@.   PRECISION NORMALIZED RESULT.    @[@@@@.     @^@@@@.   FUOS
)@@G@@NCTIONS REFERENCED@]@@@@.   NONE    @[@@@@.     @^@@@@.   ERROR CONDITIOOT
)@@G@@NS    @H@@@@.   UNNORMALIZED ARGUMENTS AND ARGUMENTS WHOSE MAGNITUDE IN OU
)@@G@@GREATER THAN 2**56@C@@@@.   AND ZERO ARGUMENTS CAUSE ERROR TERMINATION. OV
)@@G@@@[@@@@.     @^@@@@.  MATHEMATICAL METHOD  @H@@@@.   DIVIDE ABS(X) BY PI/OW
)@@G@@4 GIVING ABS(X) = PI/4 * (4*K + Q + R), WHERE K IS AN @I@@@@.   INTEGER,OX
)@@G@@ Q IS AN INTEGER REPRESENTING THE OCTANT SUCH THAT 0 .LE. Q .LE. 3,     OY
)@@G@@@^@@@@.   AND R IS A FRACTION.@D@@@@.   IF Q = 0, COT(ABS(X)) = COT(PI/4OZ
)@@G@@ *W), WHERE W = R.@E@@@@.   IF Q = 1, COT(ABS(X)) = TAN(PI/4 * W), WHEREPA
)@@G@@ W = 1 - R. @E@@@@.   IF Q = 2, COT(ABS(X)) = -TAN(PI/4 * W), WHERE W = PB
)@@G@@R.    @E@@@@.   IF Q = 3, COT(ABS(X)) = -COT(PI/4 * W), WHERE W = 1 - R.PC
)@@G@@@I@@@@.   IF W .GE. 2**(-11), THEN TAN(PI/4 * W) AND COT(PI/4 * W) ARE APD
)@@G@@PPROXIMATED BY    @H@@@@.   RATIONAL FUNCTIONS TAN(PI/4 * W) = W * P(W**PE
)@@G@@2)/Q(W**2) AND COT(PI/4 * W) =@G@@@@.   Q(W**2)/(W * P(W**2)), WHERE P APF
)@@G@@ND Q ARE FOURTH DEGREE POLYNOMIALS. @C@@@@.   IF W .LT. 2**(-11), THEN LPG
)@@G@@ET Z = W * PI/4,  @E@@@@.   TAN(Z) = Z + Z**3/3 + 2*Z**5/15  AND COTAN(ZPH
)@@G@@) = 1/TAN(Z)@[@@@@.     @#@@@@.  PERFORMANCE    @[@@@@.     @]@@@@.   ACPI
)@@G@@CURACY@H@@@@.                  NO. OF    MAX. REL.    RMS REL.      MAX.PJ
)@@G@@ NO.  FULL LENGTH @H@@@@.       ARG.        ARG.       ERROR        ERROPK
)@@G@@R      ERRONEOUS    ACCURACY  @H@@@@.      RANGE       VALUES   *10**(-1PL
)@@G@@7)   *10**(-17)      BITS         (%)     @H@@@@.   -------------- -----PM
)@@G@@-   -----------  ------------   --------  ----------- @H@@@@.   (0,PI)  PN
)@@G@@        6000     -0.4600        0.1719         4          23.1    @H@@@@PO
)@@G@@.   (-0.001,0.001)  3000     -0.3296        0.0966         3          50PP
)@@G@@.2    @H@@@@.   (PI/2 - 0.001,  3000     -0.4508        0.1838         4PQ
)@@G@@          15.2    @#@@@@.    PI/2 + 0.001)@F@@@@.   THE RESULTS ARE COMPPR
)@@G@@ARABLE FOR OTHER PERIODS OF THE FUNCTION. @[@@@@.     @]@@@@.   TIMING  PS
)@@G@@@B@@@@.   174.0 MICROSEC. FOR W .GT. 2**(-15)   @B@@@@.   153.0 MICROSECPT
)@@G@@. OF W .LE. 2**W-15)    @[@@@@.     @^@@@@.   CORE REQUIREMENTS   @A@@@@PU
)@@G@@.   NUMBER OF INSTRUCTIONS   174    @A@@@@.   SIZE OF DATA AREA         PV
)@@G@@41    @A@@@@.   TOTAL CORE REQUIREMENTS  215    @[@@@@.     @#@@@@      PW
)@@G@@   AXR$     @#@@@[         DCLRG .  @]@@@@$(5)     LIT@[@@@@$(3)  @^@@@@PX
)@@G@@BFTANT*  J          DTAN@ @@@@         J          CDTAN     @ @@@@DTAN  PY
)@@G@@   RTSAVE     NAMET     @ @@@@DTANX    DS         A3,DRTARG1@A@@@@      PZ
)@@G@@   L,U        A1,DRTARG1 .    @G@@@@         LA,U      A0,1            .QA
)@@G@@ DTAN ENTRY, SETS DTAN FLAG IN A0   @A@@@@         SZ        A3         QB
)@@G@@     .@E@@@@         DLM       A4,0,A1         . ABS (ARG) IN (A4,A5)   QC
)@@G@@@A@@@@         TOP       A4,(0400040,0)   @E@@@@         J         CHECKQD
)@@G@@           . ZERO OR UNNORMALIZED   @F@@@@LOCRR    DFU       A1,A4      QE
)@@G@@     . CHAR TO A1 , MANT TO (A2,A3) @E@@@@         TG,U      A1,02072   QF
)@@G@@     . ABS(ARG) > PI*2**55    @B@@@@         J         NERRB$          .QG
)@@G@@ YES  @E@@@@         DS        A0,R1           . STORE FLAG AND CHAR    QH
)@@G@@@H@@@@         LDSL      A2,11           . MULTIPLY MANT BY 4/PI SO THATQI
)@@G@@ THE PRODUCT@D@@@@         DSL       A3,37           . FILLS 4 WORDS    QJ
)@@G@@@^@@@@         SA        A2,R3@^@@@@         SA        A4,A0@^@@@@      QK
)@@G@@   SA        A2,A8@^@@@@         SA        A4,A6@ @@@@         MI       QL
)@@G@@ A8,F4OVPI+3@ @@@@         MI        A6,F4OVPI+2@^@@@@         DA       QM
)@@G@@ A8,A6@^@@@@         DSL       A8,34@ @@@@         MF        A2,F4OVPI+2QN
)@@G@@@ @@@@         MF        A4,F4OVPI+1@^@@@@         DA        A2,A4@^@@@@QO
)@@G@@         DA        A2,A8@^@@@@         LA        A4,R3@ @@@@         MI QP
)@@G@@       A0,F4OVPI  @ @@@@         MI        A4,F4OVPI+1@^@@@@         DA QQ
)@@G@@       A4,A0@^@@@@         SZ        A1   @^@@@@         DA        A4,A1QR
)@@G@@@^@@@@         SA        A3,A6@^@@@@         LA        A0,R3@ @@@@      QS
)@@G@@   MI        A0,F4OVPI  @^@@@@         LDSL      A4,1 @^@@@@         SSLQT
)@@G@@       A5,1 @^@@@@         LDSL      A5,1 @^@@@@         SZ        A3   QU
)@@G@@@H@@@@         DA        A3,A0           . FINISH WITH PRODUCT IN (A3,A4QV
)@@G@@,A5,A6)     @D@@@@         DS        A3,A8           . SAVE FOR OCTANT  QW
)@@G@@@B@@@@         LA        A1,R2           . CHAR @I@@@@         ANA,U    QX
)@@G@@ A1,01776        . UNBIASED CHAR + 2 ,TO BE USED AS SHIFT INDX    @G@@@@QY
)@@G@@         JN        A1,LOCAA        . IF NEGATIVE INDEX, JUMP TO LOCAA   QZ
)@@G@@@A@@@@         LA,U      A0,71           .@A@@@@         ANA       A0,A1RA
)@@G@@           .@F@@@@         LDSL      A3,0,A1         . FRAC PART OF PRODRB
)@@G@@UCT IN A3,A4@F@@@@         DSL       A8,0,A0         . WHOLE NUMBER IN ARC
)@@G@@9 (OCTANT)  @^@@@@         LA        A0,A1@^@@@@         ANA,U     A0,36RD
)@@G@@@F@@@@         JP        A0,LOCCC        . IF SHIFT > 36 GO TO LOCCC    RE
)@@G@@@ @@@@         SSL       A4,0,A1    @G@@@@         LDSL      A4,0,A1    RF
)@@G@@     . SHIFT IN SIGNIFICANT BITS FROM A5  @ @@@@         SSL       A5,0,RG
)@@G@@A1    @G@@@@         LDSL      A5,0,A1         . SHIFT IN SIGNIFICANT BIRH
)@@G@@TS FROM A6  @^@@@@         J         LOCBB@^@@@@LOCAA    LNA       A7,A1RI
)@@G@@@^@@@@         DLSC      A1,A3@F@@@@         AA        A3,A7           .RJ
)@@G@@ ABS(CHARR + 2) + COUNT IN A3 @^@@@@         SZ        A9   @^@@@@      RK
)@@G@@   J         LOCKK@^@@@@LOCCC    DL        A4,A5@ @@@@         SSL      RL
)@@G@@ A3,0,A0    @G@@@@         LDSL      A3,0,A0         . SHIFT IN SIGNIFICRM
)@@G@@ANT BITS FROM A5  @ @@@@         SSL       A4,0,A0    @G@@@@         LDSRN
)@@G@@L      A4,0,A0         . SHIFT IN SIGNIFICANT BITS FROM A5  @ @@@@LOCBB RO
)@@G@@   JP        A3,LOCMM   @G@@@@         DLN       A3,A3           . IF PIRP
)@@G@@/4 BIT IS SET THEN COMPLIMENT @^@@@@         DLN       A5,A5@^@@@@LOCMM RQ
)@@G@@   DLSC      A1,A3@^@@@@         SA        A3,R2@^@@@@         LA       RR
)@@G@@ A0,A3@^@@@@         TG,U      A3,37@D@@@@         J         LOCJJ      RS
)@@G@@     . SHIFT COUNT > 36 @^@@@@         LA        A3,A5@ @@@@         SSLRT
)@@G@@       A2,0,A0    @G@@@@         LDSL      A2,0,A0         . SHIFT IN SIRU
)@@G@@GNIFICANT BITS FROM A5  @^@@@@         LA        A3,R2@^@@@@         J  RV
)@@G@@       LOCKK@^@@@@LOCJJ    ANA,U     A0,36@^@@@@         DL        A2,A5RW
)@@G@@@ @@@@         SSL       A1,0,A0    @G@@@@         LDSL      A1,0,A0    RX
)@@G@@     . SHIFT IN SIGNIFICANT BITS FROM A5  @ @@@@         SSL       A2,0,RY
)@@G@@A0    @G@@@@         LDSL      A2,0,A0         . SHIFT IN SIGNIFICANT BIRZ
)@@G@@TS FROM A6  @^@@@@         LA        A3,R2@A@@@@LOCKK    LNA       A3,A3SA
)@@G@@           .@D@@@@         AA,U      A3,02000        . BIAS AND SHIFT   SB
)@@G@@@^@@@@         DS        A1,A7@B@@@@         DA        A1,(02000D)     .SC
)@@G@@ ROUND@A@@@@         DSL       A1,11           .@D@@@@         DFP      SD
)@@G@@ A3,A1           . FLOAT RESULT     @^@@@@         LA        A0,R1@^@@@@SE
)@@G@@         DS        A4,R1@F@@@@         JP        A0,EVAL         . IF TASF
)@@G@@NGENT, JUMP TO EVAL     @ @@@@         JB        A9,LOCDD   @H@@@@      SG
)@@G@@   LA,U      A0,1            . CONVERT OCTANTS, COTAN(T) = TAN(PI/2 - T)SH
)@@G@@@^@@@@LOCDD    AA        A9,A0@E@@@@EVAL     TLE,U     A3,01753        .SI
)@@G@@ ARG LESS THAN 2**-11   @B@@@@         J         TAYLOR          . YES  SJ
)@@G@@@D@@@@         DFM       A4,A4           . BEGIN CALCULATION@ @@@@      SK
)@@G@@   DL        A2,COEF    @^@@@@         DFM       A2,A4@ @@@@         DFASL
)@@G@@       A2,COEF+2  @^@@@@         DFM       A2,A4@ @@@@         DFA      SM
)@@G@@ A2,COEF+4  @^@@@@         DFM       A2,A4@ @@@@         DFA       A2,COSN
)@@G@@EF+6  @^@@@@         DFM       A2,A4@ @@@@         DFA       A2,COEF+8  SO
)@@G@@@^@@@@         DFM       A2,R1@^@@@@         DS        A4,R1@ @@@@      SP
)@@G@@   DFA       A4,COEF+10 @^@@@@         DFM       A4,R1@ @@@@         DFASQ
)@@G@@       A4,COEF+12 @^@@@@         DFM       A4,R1@ @@@@         DFA      SR
)@@G@@ A4,COEF+14 @^@@@@         DFM       A4,R1@ @@@@         DFA       A4,COSS
)@@G@@EF+16 @^@@@@         DFM       A4,R1@ @@@@         DFA       A4,COEF+18 ST
)@@G@@@^@@@@         TEP,U     A9,3 @^@@@@         J         PQ   @^@@@@      SU
)@@G@@   DS        A2,A0@E@@@@         DFD       A0,A4           . TAN   W*P(WSV
)@@G@@**2)/Q(W**2)@^@#@@         J         OUT  @ @@@#         J         OUTOFSW
)@@G@@HERE  @^@@@@PQ       DS        A4,A0@F@@@@         DFD       A0,A2      SX
)@@G@@     . COTAN    Q(W**2)/W*P(W**2)   @^@#@@OUT      TEP,U     A9,2 @ @@@#SY
)@@G@@OUTOFHERE      TEP,U     A9,2 @G@@@@         DLN       A0,A0           .SZ
)@@G@@ RESULT NEGATIVE IN THESE OCTANTS   @A@@@@OUTP2    SZ        A3         TA
)@@G@@     .@C@@@@         LA,U      A2,*0,X11       . ADD OF ARG @^@@@@      TB
)@@G@@   TP        0,A2 @D@@@@         DLN       A0,A0           . NEGATIVE ARTC
)@@G@@GUMENT@ @@@@BACKX     DL        A3,A0     @ @@@@          J         RTBATD
)@@G@@CK .  @ @@@@CHECK    DJZ       A4,$+2     @E@@@@         J         NERRATE
)@@G@@$          . ARGUMENT UNNORMALIZED  @D@@@@         JN        A0,NERRB$  TF
)@@G@@     . COTAN OF ZERO    @^@@@@         DSL       A0,72@E@@@@         J  TG
)@@G@@       BACKX           . RETURN WITH TAN(0) = 0 @^@@@@TAYLOR   SA       TH
)@@G@@ A3,R2@^@@@@         DL        A2,A7@^@@@@         DSL       A3,37@^@@@@TI
)@@G@@         LA        A0,A2@ @@@@         MI        A2,PIOV4+1 @ @@@@      TJ
)@@G@@   MI        A4,PIOV4   @^@@@@         DA        A4,A2@ @@@@         MF TK
)@@G@@       A0,PIOV4   @^@@@@         DSL       A4,34@^@@@@         DA       TL
)@@G@@ A4,A0@^@@@@         DLSC      A0,A4@^@@@@         LA        A3,R2@E@@@@TM
)@@G@@         ANA       A3,A2           . SUBTRACT SHIFT COUNT   @B@@@@      TN
)@@G@@   DA        A0,(02000D)     . ROUND@A@@@@         DSL       A0,11      TO
)@@G@@     .@A@@@@         JP        A3,LOCEE        .@A@@@@         AA,U     TP
)@@G@@ A3,1            .@A@@@@         DSL       A0,1            .@A@@@@LOCEE TQ
)@@G@@   DFP       A3,A0           .@^@@@@         DL        A2,A4@^@@@@      TR
)@@G@@   DFM       A2,A4@D@@@@         DL        A0,(0177642104210421042104211TS
)@@G@@)     @^@@@@         DFM       A0,A2@D@@@@         DFA       A0,(0177752TT
)@@G@@525252525252525253)     @^@@@@         DFM       A0,A2@^@@@@         DFMTU
)@@G@@       A0,A4@^@@@@         DFA       A0,A4@^@@@@         TOP,U     A9,3 TV
)@@G@@@^@#@@         J         OUT  @ @@@#         J         OUTOFHERE  @^@@@@TW
)@@G@@         DL        A2,A0@ @@@@         DL        A0,(1.0D)  @^@@@@      TX
)@@G@@   DFD       A0,A2@^@#@@         J         OUT  @ @@@#         J        TY
)@@G@@ OUTOFHERE  @ @@@@BFTAND*  RTSAVE    NAMETD     @A@@@@         DFM      TZ
)@@G@@ A3,PIOV180 .     @^@@@@         J         DTANX@#@[@@NAMET     ' TAN  'UA
)@@G@@@A@@@[NAMET    INSERT  4,'TAN','    ' .   @#@[@@NAMETD    ' TAND '@A@@@[UB
)@@G@@NAMETD   INSERT  5,'TAN','D   ' .   @^@@@@F4OVPI   +0242763015562 @^@@@@UC
)@@G@@         +0162101245177 @^@@@@         +0011653721752 @^@@@@         +01UD
)@@G@@51567006673 @G@@@@COEF     +0577035051135142455516670 .  -69.83913274721UE
)@@G@@55091309062    P04@G@@@@         +0202063455502062474546156 .  +52827.25UF
)@@G@@81986889189477211    P03@G@@@@         +0574734017722733702546754 .  -94UG
)@@G@@29037.07054633674775893    P02@G@@@@         +0203572761154734042644463 UH
)@@G@@.  +494685597.754250669294604    P01@G@@@@         +05736253366727424136UI
)@@G@@70040 .  -5712939549.47683691493215    P00@G@@@@         +05763324333053UJ
)@@G@@05152115436 .  -2396.57681026109355839137    Q04@G@@@@         +02024621UK
)@@G@@77531416747276255 .  +823285.595575182856030727    Q03@G@@@@         +05UL
)@@G@@74431662642764603061456 .  -80007912.1756867413527481    Q02@G@@@@      UM
)@@G@@   +0203777260407767335542555 .  +2125497341.85824843605106    Q01@G@@@@UN
)@@G@@         +0573611634074670731314067 .  -7273940551.07539325714265    Q00UO
)@@G@@@C@@@@PIOV4    +         0311037552421013214106461    @]@@@@         ENDUP
)@@G@@___@@@         LA        A3,A5@ @@@@         SSL*[S@@@*SDFF*@C@@@^.   COUQ
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@^.     @D@@@^.   QUESTIONUR
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@^.     @ @@@^.        MARUS
)@@G@@VIN V. ZELKOWITZ  @B@@@^.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@^UT
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@^.        COLLEGE PARK, MARYLANUU
)@@G@@D 20742     @[@@@^.     @G@@@^.        PERMISSION TO USE THESE LISTINGS UV
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@^.   REPRESENT IS GRANTED UNDER THE FUW
)@@G@@OLLOWING CONDITIONS:    @[@@@^.     @G@@@^.        1. UNLIMITED USE MAY UX
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@^.   THESE LISTINGS PROVIUY
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@^.   PL/1 COMPILER UZ
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@^.     @F@@@^.        2. VA
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@^.     @G@@@^VB
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   VC
)@@G@@@G@@@^.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRVD
)@@G@@OGRAM @E@@@^.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  VE
)@@G@@@[@@@^.     @G@@@^.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAVF
)@@G@@L CORRECTIONS     @F@@@^.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLVG
)@@G@@ BE REPORTED AND  @G@@@^.        A BRIEF DESCRIPTION OF THE FEATURE ADDEVH
)@@G@@D SHALL BE SUBMITTED    @C@@@^.        TO THE UNIVERSITY OF MARYLAND, ANVI
)@@G@@D     @[@@@^.     @F@@@^.        (C) NO PROGRAMS DERIVED FROM THESE LISTVJ
)@@G@@INGS SHALL BE SOLD@G@@@^.        WITHOUT WRITTEN APPROVAL FROM THE UNIVEVK
)@@G@@RSITY OF MARYLAND, AND  @[@@@^.     @F@@@^.        (D) COPIES OF THESE PVL
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@^.        LOCATIONS PROVIDED THVM
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@^.        WHETHER THE PROVN
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@^.        MARYLAND VO
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@^.     @G@@@^.        3. VP
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@^.   ANVQ
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@^.   THVR
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@^.   EXPERIMEVS
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@^.   IS NOT SVT
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@^.   FRVU
)@@G@@OM PLUM.    @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     @[@@@^.     VV
)@@G@@@[@@@^/.    @[@@@[.     @D@@@[.                        UNIVAC 1108 FORTRVW
)@@G@@AN V LIBRARY@[@@@[.     @A@@@[. DSIN(X) - DOUBLE PRECISION SINE   @[@@@[VX
)@@G@@.     @]@@@[.  USAGE    @[@@@[.     @^@@@[.   FORTRAN V REFERENCE @H@@@[VY
)@@G@@.   DSIN(X), WHERE X REPRESENTS THE (DOUBLE PRECISION) ARGUMENT IN RADIAVZ
)@@G@@NS.   @[@@@[.     @A@@@[.   ASSEMBLER LANGUAGE REFERENCE    @^@@@[.   A WA
)@@G@@    LMJ   X11,DSIN@D@@@[.   A+1   +     LOC(X)          . ADDRESS OF ARGWB
)@@G@@UMENT @C@@@[.   A+2   +     SEQNUM,PRGNAM   . WALK BACK WORD@C@@@[.   A+WC
)@@G@@3                         . NORMAL RETURN @H@@@[.   DSIN IS ONE ENTRY TOWD
)@@G@@ THIS FUNCTION ROUTINE WHICH COMPUTES EITHER DOUBLE   @ @@@[.   PRECISIOWE
)@@G@@N SINE OR COSINE. @[@@@[.     @A@@@[.   ARGUMENT AND FUNCTION RANGE     WF
)@@G@@@I@@@[.   THE ARGUMENT MUST BE A NORMALIZED, DOUBLE PRECISION, FLOATING WG
)@@G@@POINT NUMBER.     @H@@@[.   THE MAGNITUDE MUST BE LESS THAN 2**56. THE FWH
)@@G@@UNCTION RETURNS A NORMALIZED, @D@@@[.   FLOATING POINT NUMBER IN THE INTWI
)@@G@@ERVAL (-1,1).     @[@@@[.     @^@@@[.   FUNCTIONS REFERENCED@]@@@[.   NOWJ
)@@G@@NE    @[@@@[.     @^@@@[.   ERROR CONDITIONS    @H@@@[.   UNNORMALIZED AWK
)@@G@@RGUMENTS AND ABS(X) GREATER THAN OR EQUAL TO 2**56 RESULT IN@^@@@[.   ERWL
)@@G@@ROR TERMINATION.  @[@@@[.     @^@@@[.   MATHEMATICAL METHOD @G@@@[.   THWM
)@@G@@E RANGE OF THE ARGUMENT IS REDUCED TO THE INTERVAL (0,PI/2) BY THE@E@@@[WN
)@@G@@.   IDENTIES:            SIN(X)=SIN(X+2*K*PI), K=0,1,2,...  @B@@@[.     WO
)@@G@@                   SIN(-X)=-SIN(X)  @B@@@[.                        SIN(XWP
)@@G@@)=SIN(PI-X) @I@@@[.   FOR 0.LE.W.LT.PI/4, SIN(W) IS APPROXIMATED BY W*P(WQ
)@@G@@W*W), WHERE P IS A SEVENTH    @D@@@[.   DEGREE POLYNOMIAL, AND W IS THE WR
)@@G@@REDUCED ARGUMENT. @H@@@[.   FOR PI/4.LE.W.LE.PI/2, SIN(W) IS APPROXIMATEWS
)@@G@@D BY R(Z*Z), WHERE R IS A     @C@@@[.   SEVENTH DEGREE POLYNOMIAL AND Z=WT
)@@G@@PI/2 - W.   @[@@@[.     @#@@@[.  PERFORMANCE    @[@@@[.     @]@@@[.   ACWU
)@@G@@CURACY@H@@@[.                  NO. OF    MAX. REL.    RMS REL.      MAX.WV
)@@G@@ NO.  FULL LENGTH @H@@@[.       ARG.        ARG.       ERROR        ERROWW
)@@G@@R      ERRONEOUS    ACCURACY  @H@@@[.      RANGE       VALUES   *10**(-1WX
)@@G@@7)   *10**(-17)      BITS         (%)     @H@@@[.   ------------   -----WY
)@@G@@-   ----------   ----------    ---------    -------   @H@@@[.   (-.005,.WZ
)@@G@@005)    3000      0.2422       0.0752          2          58.4    @H@@@[XA
)@@G@@.     (0,2*PI)      3000      0.2506       0.0978          3          42XB
)@@G@@.5    @F@@@[.  (2*K*PI,2*(K+1)*PI) YIELDS COMPARABLE ACCURACIES FOR ALL XC
)@@G@@K.    @[@@@[.     @]@@@[.   TIMING  @A@@@[.   142.8 MICROSEC. IF ABS(X).XD
)@@G@@LT.0.5@A@@@[.   149.5 MICROSEC. IF ABS(X).GE.0.5@[@@@[.     @^@@@[.   COXE
)@@G@@RE REQUIREMENTS   @A@@@[.   NUMBER OF INSTRUCTIONS    92    @A@@@[.   SIXF
)@@G@@ZE OF DATA AREA         45    @A@@@[.   TOTAL CORE REQUIREMENTS  137    XG
)@@G@@@[@@@[.     @A@@@[. DCOS(X) - DOUBLE PRECISION COSINE @[@@@[.     @]@@@[XH
)@@G@@.  USAGE    @[@@@[.     @^@@@[.   FORTRAN V REFERENCE @H@@@[.   DCOS(X),XI
)@@G@@ WHERE X REPRESENTS THE (DOUBLE PRECISION) ARGUMENT IN RADIANS    @[@@@[XJ
)@@G@@.     @A@@@[.   ASSEMBLER LANGUAGE REFERENCE    @^@@@[.   A     LMJ   X1XK
)@@G@@1,DCOS@D@@@[.   A+1   +     LOC(X)          . ADDRESS OF ARGUMENT @C@@@[XL
)@@G@@.   A+2   +     SEQNUM,PRGNAM   . WALK BACK WORD@C@@@[.   A+3           XM
)@@G@@              . NORMAL RETURN @H@@@[.   DCOS IS ONE ENTRY TO THIS FUNCTIXN
)@@G@@ON ROUTINE WHICH COMPUTES EITHER DOUBLE   @ @@@[.   PRECISION COSINE OR XO
)@@G@@SINE. @[@@@[.     @A@@@[.   ARGUMENT AND FUNCTION RANGE     @I@@@[.   THXP
)@@G@@E ARGUMENT MUST BE A NORMALIZED, DOUBLE PRECISION, FLOATING POINT NUMBERXQ
)@@G@@.     @H@@@[.   THE MAGNITUDE MUST BE LESS THAN 2**56. THE FUNCTION RETUXR
)@@G@@RNS A NORMALIZED, @D@@@[.   FLOATING POINT NUMBER IN THE INTERVAL (-1,1)XS
)@@G@@.     @[@@@[.     @^@@@[.   FUNCTIONS REFERENCED@]@@@[.   NONE    @[@@@[XT
)@@G@@.     @^@@@[.   ERROR CONDITIONS    @H@@@[.   UNNORMALIZED ARGUMENTS ANDXU
)@@G@@ ABS(X).GE.2**56 RESULT IN ERROR TERMINATION.   @[@@@[.     @^@@@[.  MATXV
)@@G@@HEMATICAL METHOD  @G@@@[.   THE ARGUMENT IS REDUCED TO THE RANGE (0,PI/2XW
)@@G@@) BY THE IDENTITIES:    @E@@@[.                       COS(X)=COS(2*K*PI XX
)@@G@@+ X), K=0,1,2,... @B@@@[.                       COS(X)=COS(-X)    @C@@@[XY
)@@G@@.                       COS(PI - X)=-COS(X)     @H@@@[.   FOR 0.LE.W.LT.XZ
)@@G@@PI/4, COS(W) IS APPROXIMATED BY P(W*W), WHERE P IS A SEVENTH@D@@@[.   DEYA
)@@G@@GREE POLYNOMIAL, AND W IS THE REDUCED ARGUMENT. @H@@@[.   FOR PI/4.LE.W.YB
)@@G@@LE.PI/2, COS(W) IS APPROXIMATED BY Z*R(Z*Z), WHERE R IS A   @C@@@[.   SEYC
)@@G@@VENTH DEGREE POLYNOMIAL AND Z = PI/2 - W. @[@@@[.     @#@@@[.  PERFORMANYD
)@@G@@CE    @[@@@[.     @]@@@[.   ACCURACY@H@@@[.                  NO. OF    MYE
)@@G@@AX. REL.    RMS REL.      MAX. NO.  FULL LENGTH @H@@@[.       ARG.      YF
)@@G@@  ARG.       ERROR        ERROR      ERRONEOUS    ACCURACY  @H@@@[.     YG
)@@G@@ RANGE       VALUES   *10**(-17)   *10**(-17)      BITS         (%)     YH
)@@G@@@H@@@[.   -------------- ------   -----------  ------------   --------  YI
)@@G@@----------- @H@@@[.   (1.566,1.576)   3000     0.2535       0.0739      YJ
)@@G@@     2          59.4    @H@@@[.      (0,2*PI)     3000     0.2810       YK
)@@G@@0.0956           3          40.7    @F@@@[.   (2*K*PI,2*(K+1)*PI) YIELDSYL
)@@G@@ COMPARABLE ACCURACIES FOR ALL K.   @[@@@[.     @]@@@[.   TIMING  @A@@@[YM
)@@G@@.   143.5 MICROSEC. IF ABS(X).LT.0.5@A@@@[.   150.3 MICROSEC. IF ABS(X).YN
)@@G@@GE.0.5@[@@@[.     @^@@@[.   CORE REQUIREMENTS   @A@@@[.   NUMBER OF INSTYO
)@@G@@RUCTIONS      92  @A@@@[.   SIZE OF DATA AREA           45  @A@@@[.   TOYP
)@@G@@TAL CORE REQUIREMENTS    137  @[@@@[.     @F@@@[         AXR$           YQ
)@@G@@               . DEFINE A,X,R REGISTERS   @#@@@]         DCLRG .  @F@@@[YR
)@@G@@$(5)     LIT                           . LOCATION OF LITERALS     @[@@@[YS
)@@G@@$(3)  @ @]@[BFCOS*   J         DCOS .     @ @@@]BFCOST*  J         DCOS YT
)@@G@@.     @ @@@[         J         CDCOS .    @ @@@[DCOS     RTSAVE    NAMECYU
)@@G@@ .    @]@@@[DCOSX .     @ @@@[         DS        A3,DRTARG1 @A@@@[      YV
)@@G@@   LA,U      A1,DRTARG1 .     @E@@@[         L,U       R3,2             YW
)@@G@@   . SET FUNCTION CODE  @F@@@[         SZ        R1                  . PYX
)@@G@@OS SIGN FOR ARG OF DCOS @B@@@[         SZ        A3                  .  YY
)@@G@@@F@@@[         J         SINCOS              . GO AND UNPACK FLOATING   YZ
)@@G@@@ @]@[BFSIN*   J         DSIN .     @ @@@]BFSINT*  J         DSIN .     ZA
)@@G@@@ @@@[         J         CDSIN .    @ @@@[DSIN     RTSAVE    NAMES .    ZB
)@@G@@@]@@@[DSINX .     @A@@@[         DS        A3,DRTARG1 .     @A@@@[      ZC
)@@G@@   LA,U      A1,DRTARG1 .     @E@@@[         SZ        R3               ZD
)@@G@@   . SET FUNCTION CODE  @B@@@[         SZ        A3                  .  ZE
)@@G@@@D@@@[         L         R1,0,A1             . LOAD ARGUMENT@E@@@[SINCOSZF
)@@G@@   DFU       A1,0,A1             . UNPACK FLOATING    @E@#@[         DJZZG
)@@G@@       A2,ZERO             . ARGUMENT ZERO?     @E@@@#         DJZ      ZH
)@@G@@ A2,ZER0             . ARGUMENT ZERO?     @F@@@[         TEP       A2,(0ZI
)@@G@@400040,0)      . ARGUMENT NORMALIZED?     @G@@@[         TG,U      A1,02ZJ
)@@G@@071            . CHARACTERISTIC GREATER THAN 57?@F@@@[         J        ZK
)@@G@@ NERRA$              . YES,ERROR TERMINATION    @D@#@[ZERO     DLM      ZL
)@@G@@ A2,A2               . ABS(ARG)     @D@@@#ZER0     DLM       A2,A2      ZM
)@@G@@         . ABS(ARG)     @F@@@[         LDSL      A2,11               . CZN
)@@G@@OMPUTE 140-BIT PRODUCT  @E@@@[         DSL       A3,37               . AZO
)@@G@@RGUMENT * 4/PI    @B@@@[         S         A2,R2               .  @B@@@[ZP
)@@G@@         S         A4,A0               .  @B@@@[         SA        A4,A6ZQ
)@@G@@               .  @B@@@[         S         A1,POWER            .  @B@@@[ZR
)@@G@@         MI        A6,F4OVPI+2         .  @B@@@[         MI        A2,F4ZS
)@@G@@OVPI+3         .  @B@@@[         A         A6,A2               .  @B@@@[ZT
)@@G@@         DSL       A6,34               .  @B@@@[         L         A2,R2ZU
)@@G@@               .  @B@@@[         MF        A2,F4OVPI+2         .  @B@@@[ZV
)@@G@@         MF        A4,F4OVPI+1         .  @B@@@[         DA        A6,A4ZW
)@@G@@               .  @B@@@[         DA        A6,A2               .  @B@@@[ZX
)@@G@@         L         A4,R2               .  @B@@@[         MI        A4,F4ZY
)@@G@@OVPI+1         .  @B@@@[         MI        A0,F4OVPI           .  @B@@@[ZZ
)@@G@@         DA        A0,A4               .  @B@@@[         SZ        A5   AA
)@@G@@               .  @B@@@[         DA        A5,A0               .  @B@@@[AB
)@@G@@         L         A0,R2               .  @B@@@[         MI        A0,F4AC
)@@G@@OVPI           .  @B@@@[         LDSL      A5,1                .  @B@@@[AD
)@@G@@         SSL       A6,1                .  @B@@@[         LDSL      A6,1 AE
)@@G@@               .  @B@@@[         SZ        A4                  .  @G@@@[AF
)@@G@@         DA        A4,A0               . 140-BIT PRODUCT IN A4-A5-A6-A7 AG
)@@G@@@E@@@[         L         A3,POWER            . LOAD CHARACTERISTIC@H@@@[AH
)@@G@@         TLE,U     A3,02000            . TEST TO AVOID INVALID SHIFT COUAI
)@@G@@NT    @E@@@[         J         SMALL               . GO TO SMALL ARGS   AJ
)@@G@@@F@@@[         LDSL      A4,0176000,A3       . SHIFT OUT INTEGRAL PART  AK
)@@G@@@F@@@[         L         A1,A4               . LOAD FRACTIONAL PART     AL
)@@G@@@E@@@[         LDSL      A4,3                . SET BINARY POINT   @D@@@[AM
)@@G@@         SSL       A1,33               . OCTANT COUNT @D@@@[         JNBAN
)@@G@@       A1,NOBIT            . PI/4 BIT SET?@B@@@[         DLN       A4,A4AO
)@@G@@               .  @B@@@[         DLN       A6,A6               .  @E@@@[AP
)@@G@@NOBIT    DSL       A4,0176003,A3       . SET BINARY POINT   @E@@@[BACK  AQ
)@@G@@   A         A1,R3               . ADD FUNCTION CODE  @E@@@[         TP AR
)@@G@@       R1                  . TEST IF SIN(-X)    @F@@@[         LN       AS
)@@G@@ A1,A1               . NEGATE A1 FOR SIN(-X)    @E@@@[         S        AT
)@@G@@ A1,POWER            . STORE OCTANT BITS  @E@@@[         DLSC      A0,A4AU
)@@G@@               . COUNT LEADING ZEROS@B@@@[         TLE,U     A2,36      AV
)@@G@@         .  @B@@@[         J         SHIFT               .  @G@@@[      AW
)@@G@@   ANA,U     A3,36               . SHIFT COUNT GREATER THAN 35    @I@@@[AX
)@@G@@         ANA,U     A2,36               . SUBTRACT 36 FROM CHAR. AND SHIFAY
)@@G@@T COUNT     @G@@@[         DL        A4,A5               . PUT A5-A6-A7 AZ
)@@G@@IN A4-A5-A6 35    @B@@@[         L         A6,A7               .  @B@@@[BA
)@@G@@SHIFT    LDSL      A4,0,A2             .  @B@@@[         SSL       A5,0,BB
)@@G@@A2             .  @F@@@[         LDSL      A5,0,A2             . SHIFT IBC
)@@G@@N SIGNIFICANCE    @E@@@[         DSL       A4,1                . TO AVOIBD
)@@G@@D OVERFLOW  @F@@@[         TZ        A4                  . ARG ZERO SKIPBE
)@@G@@ ROUNDING   @D@@@[         DA        A4,(01000D)         . ROUNDING     BF
)@@G@@@B@@@[         ANA,U     A3,8,A2             .  @E@@@[         DFP      BG
)@@G@@ A3,A4               . CONVERT TO FLOATING@E@@@[         L         A2,POBH
)@@G@@WER            . LOAD OCTANT BITS   @E@@@[         L         A3,(-4,22) BI
)@@G@@         . SET LOOP INDEX     @H@@@[         TEP,U     A2,3             BJ
)@@G@@   . TEST TO GET SIN OR COS COEFFICIENTS  @G@@@[         A,U       A3,2 BK
)@@G@@               . A3=(-4,24) FOR COS COEFFICIENTS@E@@@[         DS       BL
)@@G@@ A4,R1               . STORE THE REDUCED Z@C@@@[         DFM       A4,A4BM
)@@G@@               . Z**2   @E@@@[         DL        A0,COEFF+6,A3       . LBN
)@@G@@OAD COEFFICIENT   @D@@@[LOOP     DFM       A0,A4               . NESTED BO
)@@G@@LOOP  @B@@@[         DFA       A0,COEFF+2,A3       .  @B@@@[         JMGBP
)@@G@@I      A3,LOOP             .  @D@@@[         TOP,U     A2,3             BQ
)@@G@@   . TEST FOR SINE@D@@@[         DFM       A0,R1               . MULTIPLBR
)@@G@@Y BY Z@D@@@[         TEP,U     A2,4                . SIGN TEST    @G@@@[BS
)@@G@@         DLN       A0,A0               . CHANGE SIGN OF POLYNOMIAL VALUEBT
)@@G@@@ @ @[OUT       DL       A3,A0 .    @A@@@ OUTOFHERE       DL       A3,A0BU
)@@G@@ .    @ @@@[         J         RTBACK .   @G@@@[SMALL    LN,U      A1,7 BV
)@@G@@               . OCTANT COUNT (BITS 0-2) = 0    @G@@@[         TG,U     BW
)@@G@@ A3,0121             . TEST FOR ARG CLOSE TO ZERO     @E@@@[         J  BX
)@@G@@       BACK                . GO TO POLYNOMIAL   @B@@@[         SZ       BY
)@@G@@ A3                  .  @B@@@[         DL        A0,DRTARG1          .  BZ
)@@G@@@B@@@[         TZ        R3                  .  @B@@@[         DL       CA
)@@G@@ A0,(1.0D)           .  @B@ @[         J         OUT                 .  CB
)@@G@@@C@@@          J         OUTOFHERE                 .  @[@@@[.     @A@@@[CC
)@@G@@.         FUNCTIONS WITH DEGRESES   @[@@@[.     @^@@@[BFSIND*  RTSAVE NACD
)@@G@@MESD  @ @@@[         DFM    A3,PIOV180    @^@@@[         J      DSINX   CE
)@@G@@@^@@@[BFCOSD*  RTSAVE NAMECD  @ @@@[         DFM    A3,PIOV180    @^@@@[CF
)@@G@@         J      DCOSX   @[@@@[.     @C@@@[F4OVPI   +         02427630155CG
)@@G@@62       . 4/PI   @B@@@[         +         0162101245177       .  @B@@@[CH
)@@G@@         +         0011653721752       .  @B@@@[         +         01515CI
)@@G@@67006673       .  @F@@@[COEFF    +         0200062207732       . +0.7853CJ
)@@G@@98163397448310D0  @B@@@[         +         0504205506043       .  @C@@@[CK
)@@G@@         +         0200140000000       . +1.0D0 @B@@@[         +        CL
)@@G@@ 0000000000000       .  @F@@@[         +         0600226521030       . -CM
)@@G@@0.807455121882807815D-1 @B@@@[         +         0635510153241       .  CN
)@@G@@@F@@@[         +         0600030413031       . -0.308425137534042452D0  CO
)@@G@@@B@@@[         +         0544067210334       .  @F@@@[         +        CP
)@@G@@ 0177050632743       . +0.249039457019271628D-2 @B@@@[         +        CQ
)@@G@@ 0167265266157       .  @F@@@[         +         0177340360370       . +CR
)@@G@@0.158543442438154109D-1 @B@@@[         +         0201553252343       .  CS
)@@G@@@F@@@[         +         0601531513231       . -0.365762041821464001D-4 CT
)@@G@@@B@@@[         +         0431652420602       .  @F@@@[         +        CU
)@@G@@ 0601225213034       . -0.325991886926687550D-3 @B@@@[         +        CV
)@@G@@ 0034156251025       .  @F@@@[         +         0175352036032       . +CW
)@@G@@0.313361688917325348D-6 @B@@@[         +         0205605511454       .  CX
)@@G@@@F@@@[         +         0175674175203       . +0.359086044588581953D-5 CY
)@@G@@@B@@@[         +         0203007710743       .  @F@@@[         +        CZ
)@@G@@ 0603403476132       . -0.17572474176170806D-8  @B@@@[         +        DA
)@@G@@ 0275203734215       .  @F@@@[         +         0603013113411       . -DB
)@@G@@0.2461136382637005D-7   @B@@@[         +         0702557772350       .  DC
)@@G@@@F@@@[         +         0173375073543       . +0.69481520350522D-11    DD
)@@G@@@B@@@[         +         0630033210660       .  @F@@@[         +        DE
)@@G@@ 0173777163012       . +0.11500497024263D-9     @B@@@[         +        DF
)@@G@@ 0725051570135       .  @E@@@[         +         0605422351632       . -DG
)@@G@@0.202253129293D-13@B@@@[         +         0407375717712       .  @E@@@[DH
)@@G@@         +         0605011551712       . -0.38577620372D-12 @B@@@[      DI
)@@G@@   +         0146517651257       .  @ @@@[POWER     EQU      DRTTMP .   DJ
)@@G@@@^@]@[NAMES     +' SIN  '     @D@@@]NAMES            INSERT            4DK
)@@G@@,'SIN','    ' .   @^@]@[NAMEC     +' COS  '     @A@@@]NAMEC    INSERT  4DL
)@@G@@,'COS','    ' .   @^@]@[NAMESD    +' SIND '     @A@@@]NAMESD   INSERT  5DM
)@@G@@,'SIN','D   ' .   @^@]@[NAMECD    +' COSD '     @A@@@]NAMECD   INSERT  5DN
)@@G@@,'COS','D   ' .   @#@@@[          END .   ___TP        R1               DO
)@@G@@   . TEST IF SIN(-X)    @F@@@[         LN        A1,A1               . NDP
)@@G@@*[S@@@*SDFF*@C@@@B.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@BDQ
)@@G@@.     @D@@@B.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@BDR
)@@G@@.     @ @@@B.        MARVIN V. ZELKOWITZ  @B@@@B.        DEPARTMENT OF CDS
)@@G@@OMPUTER SCIENCE   @A@@@B.        UNIVERSITY OF MARYLAND     @B@@@B.     DT
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@B.     @G@@@B.        PERMISSIODU
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@B.   REPRESENDV
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@B.     @G@@@B.     DW
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@BDX
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDDY
)@@G@@@E@@@B.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@BDZ
)@@G@@.     @F@@@B.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDEA
)@@G@@ED:   @[@@@B.     @G@@@B.        (A) ANY RESULTING PROGRAM, OR REPORT, PEB
)@@G@@APER OR DOCUMENTATION   @G@@@B.        DESCRIBING SUCH PROGRAM WILL CLEAEC
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@B.        IS A DIALECT OF PLUM OR IS ED
)@@G@@DERIVED FROM PLUM, AND  @[@@@B.     @G@@@B.        (B) ALL SUCH MODIFICAEE
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@B.        OF ERRORS IN THEF
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@B.        A BRIEF DESCRIPEG
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@B.        TO THE UNEH
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@B.     @F@@@B.        (C) NO PROGRAMSEI
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@B.        WITHOUT WRITTENEJ
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@B.     @F@@@B.     EK
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@B.     EL
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@BEM
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     EN
)@@G@@@E@@@B.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@BEO
)@@G@@.     @G@@@B.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILEREP
)@@G@@ ITSELF,    @F@@@B.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN EQ
)@@G@@USING PLUM. @E@@@B.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER
)@@G@@ER TO @F@@@B.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRES
)@@G@@ODUCT @G@@@B.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT ET
)@@G@@DEVELOPED   @#@@@B.   FROM PLUM.    @[@@@B.     @[@@@B.     @[@@@B.     EU
)@@G@@@[@@@B.     @[@@@B.     @[@@@B/.    @#@@@A         AXR$ .   @#@@@A      EV
)@@G@@   DCLRG .  @#@@@A         PLSD .   @#@@@A         PLAC .   @#@@@A      EW
)@@G@@   PLAR .   @#@@@A         PLWORD . @#@@@A         PLIOCB . @#@@@A      EX
)@@G@@   UNLIST . @]@@@A@ADD PLTVDS @#@@@A         LIST .   @]@@@A@ADD EXCDS  EY
)@@G@@@]@@@A@ADD IOSET  @#@@@A         CEND .   @^@@@A/.       OPEN STATEMENT EZ
)@@G@@@ @@@B         USING   AREC,X10 .   @#@@@AEXOP     CSECT 3 .@#@@@AEXOPENFA
)@@G@@*  LOCAL .  @F@@@A         LOAD    R9,X2 .           GET POINTER WHERE EFB
)@@G@@XPECTED     @E@@@A         LOAD    R8,X1 .           GET TITLE DV INTO RFC
)@@G@@8     @D@@@A         LOAD  X5,X11 .            SAVE OPEN FLAGS    @D@@@AFD
)@@G@@         LOAD  R7,A3 .             SAVE A3 FOR NOW    @E@@@A         MOVFE
)@@G@@E  ARWORK+2,0,I .      CLEAR STRING I/O FLAGS   @C@@@A         LINK  EXIFF
)@@G@@OIN .            SAVE RES     @E@@@A         LOAD  X4,R7 .             RFG
)@@G@@ESTORE PTR TO FILE SD   @^@@@A.        R8=DV OF TITLE @^@@@A.        R9=FH
)@@G@@LINESIZE    @^@@@A.        A5=PAGESIZE    @^@@@A.        A3=FILE SD     FI
)@@G@@@#@@@A.        X5=FLAAS @^@@@A         USING WORD,X5 .@ @@@A         USIFJ
)@@G@@NG SDSECT,X4 .    @D@@@A         LOADA X2,SDIOFN .         POINT TO FILEFK
)@@G@@NAME  @^@@@A         SETPC 4,0,X2 . @G@@@A         IF    ICOPTF,OFF,W1Q4FL
)@@G@@ THEN,EXOP01 . ->NO TITLE, USE FILE BCD   @B@@@A         GOTO EXFLIO . WFM
)@@G@@ORK ON FILENAME   @C@@@AEXOPL2   LABEL .                   MOVE NAME    FN
)@@G@@@C@@@A         LOADD A8,KBLANK .         CLEAR NAME   @ @@@A         STOFO
)@@G@@RED A8,SDIOFN .   @ @@@A         STORE A8,SDIOFN+2 .  @#@@@AEXOPL1   LABFP
)@@G@@EL .  @#@@@A         GETC .   @C@@@A         PUTC .                    MFQ
)@@G@@OVE FILENAME@^@@@A         LOOP  A7,EXOPL1@^@@@A         GOTO  EXOP02 . FR
)@@G@@@C@@@AEXOP01   LABEL .                   NO TITLE     @D@@@A         LSDFS
)@@G@@P  A3,SDBCHI,X4 .      GET BCD OF FILENAME@ @@@A         SETGC 4,W1+2,A3FT
)@@G@@ .    @ @@@A         SETL  A7,SDBCNT,A3 . @E@@@A         GOTO  EXOPL2 . FU
)@@G@@           MOVE SD NAME TO FILENAME @ @@@A         USING SDSECT,X4 .    FV
)@@G@@@C@@@AEXOP02   LABEL .                   GET IOCB     @D@@@A         LOAFW
)@@G@@DA X3,SDIOFN .         POINT TO FILENAME  @D@@@A         WRIOCB .       FX
)@@G@@           GET FILENAME FOR IT@F@B@A         IF  ICOPTF,ON,W1Q4  THEN,EXFY
)@@G@@OP98 . PROCESS ELEMENT NAME   @#@@@AEXOP04   LABEL .  @^@@@A         USIFZ
)@@G@@NG IOCB,X3 .@C@@@A         LOAD  F,IOCBF1 .          GET FLAGS    @[@@@BGA
)@@G@@.     @E@@@B.  SHOULDN'T THERE BE A WARNING MESSAGE IF FILE IS ALREADY  GB
)@@G@@@F@@@B.  OPEN SINCE SOMEONE MAY TRY TO OPEN TWO DIFFERENT ELEMENTS WITH GC
)@@G@@@F@@@B.  THE SAME FILENAME IN WHICH CASE HE DOESN'T WANT TO USE THE     GD
)@@G@@@^@@@B.  FIRST FILE ELEMENT.  @[@@@B.     @E@@@A         IF    IOCBOP,ONGE
)@@G@@ THEN,IORET1 . ->FILE ALREADY OPEN  @D@@@B         STORE   X4,IOCBSD .  GF
)@@G@@     STORE SD OF FILE   @C@@@A         STORE X3,SDIOCB,X4 .      SAVE IOGG
)@@G@@CB PTR@E@@@B         IF      ICOPMF,OFF,W1Q4  THEN,EXOP8 . ENV IS ASCII GH
)@@G@@@C@@@B         SET     IOCBMF,ON,IOCBF2 . ENV IS FLD  @#@@@BEXOP8    LABGI
)@@G@@EL .  @D@@@B         LOAD    A8,W1Q4 .         GET OPEN FLAGS     @D@@@BGJ
)@@G@@         LOR     A8,SDIOAT .       ADD IN DECL FLAGS  @F@@@B         ANDGK
)@@G@@,U   A8,SDIOPR+SDIOIN+SDIOOT . SET FLAGS FOR IOCBF1   @D@@@B         LORGL
)@@G@@     F,A9 .            SAVE IN FLAG REG   @E@@@B         AND,U   A8,SDFLGM
)@@G@@RC+SDFLKY . GET FLAGS FOR IOCBF2    @D@@@B         LOAD    A7,IOCBF2 .  GN
)@@G@@      GET CURRENT FLAGS @C@@@B         OR      A7,A9 .           SET NEWGO
)@@G@@ FLAGS@B@@@B         STORE   A8,IOCBF2 .       SAVE EM@F@@@B         IF GP
)@@G@@     ICOPKF,OFF,IOCBF2  THEN,EXOPL3 .   NOT KEYED     @B@@@B         SETGQ
)@@G@@     IOCBRC+IOCBKY,ON,IOCBF2 .@F@@@B         MOVE    IOCBLR,28,I .     RGR
)@@G@@ECORD LENGTH =SECTOR LENGTH   @ @@@B         GOTO    EXOP20 .     @#@@@BGS
)@@G@@EXOPL3   LABEL .  @F@B@A         IF    SDIOPR,OFF,SDIOAT THEN,EXOPL3 . -GT
)@@G@@>NO PRINT FILE    @D@B@A         SET   IOCBPT+IOCBOT,ON .  SET PRINT+OUTGU
)@@G@@PUT   @#@B@AEXOPL3   LABEL .  @E@B@A         IF    ICOPPT,OFF,W1Q4 THEN,GV
)@@G@@EXOPL4 . ->PRINT ON OPEN@E@@@B         IF    ICOPPT,OFF THEN,EXOPL8 . ->GW
)@@G@@PRINT ON OPEN     @A@@@A         SET   IOCBPT+IOCBOT,ON .   @#@B@AEXOPL4GX
)@@G@@   LABEL .  @F@B@A         IF    SDIOIN,OFF,SDIOAT THEN,EXOPL5 . ->NOT IGY
)@@G@@NPPUT DCL   @ @B@A         SET   IOCBIN,ON .    @#@B@AEXOPL5   LABEL .  GZ
)@@G@@@E@B@A         IF    SDIOOT,OFF,SDIOAT THEN,EXOPL6 . ->NOT OUTPUT @ @B@AHA
)@@G@@         SET   IOCBOT,ON .    @#@B@AEXOPL6   LABEL .  @B@B@A         IF HB
)@@G@@   ICOPIF,OFF,W1Q4 THEN,EXOPL7@ @B@A         SET   IOCBIN,ON .    @#@B@AHC
)@@G@@EXOPL7   LABEL .  @C@B@A         IF    ICOPOF,OFF,W1Q4 THEN,EXOPL8 .    HD
)@@G@@@ @B@A         SET   IOCBOT,ON .    @#@@@AEXOPL8   LABEL .  @B@@@A.     HE
)@@G@@   CHECK FOR INCOMPATIBLE OPTIONS   @F@@@A         AND,U F,IOCBIN+IOCBOTHF
)@@G@@ .   SEE IF BOTH INPUT AND OUTPUT   @D@@@B         IF      A6,ZERO  THENHG
)@@G@@,IOOPNR . NO TYPE GIVEN @E@B@A         IF    A6,NE,IOCBOT+IOCBIN,I THEN,HH
)@@G@@EXOP20 . ->OK     @E@@@B         IF    A6,EQ,IOCBOT+IOCBIN,I THEN,IOOPNRHI
)@@G@@ . ->NOT OK @#@B@AEXOP30   LABEL .  @B@B@A         EXERR EROPEN .       HJ
)@@G@@     OOPS!  @^@B@A         GOTO  IORET1 . @#@@@AEXOP20   LABEL .  @C@@@AHK
)@@G@@         STORE F,IOCBF1 .          SAVE FLAGS   @^@@@B         LOAD    AHL
)@@G@@3,X3 .@F@@@B         IF      A3,EQ,IOBOUT,I  THEN,EXOP24 . USING SYSPRINHM
)@@G@@T     @E@@@B         IF      A3,EQ,IOBIN,I  THEN,EXOP24 . USING SYSIN   HN
)@@G@@@F@@@B         IF  ICOPTF,ON,W1Q4  THEN,EXOP98 . PROCESS ELEMENT NAME   HO
)@@G@@@#@@@BEXOP24   LABEL .  @C@@@B         LOAD    F,IOCBF1 .        RESTOREHP
)@@G@@ FLAGS@I@@@B         IF      ICOPEL+IOCBRC,OFF,IOCBF2  THEN,EXOP25A . NOHQ
)@@G@@T ELEMENT OR RECORD     @E@@@B         IF      IOCBPT,OFF THEN,EXOP25A .HR
)@@G@@ NOT PRINT OK     @H@@@B         SET     IOCBPT,OFF .      PROGRAM OR REHS
)@@G@@CORD FILES CAN'T BE PRINT     @F@@@B.        PRINT ATTRIBUTE IS IGNORED HT
)@@G@@IN PROGRAM FILE OR RECORD I/O @D@D@B         LOAD    A8,EXPTRM .       GHU
)@@G@@ET PRINT ATTR MSG @D@@@D         LOADA    A8,EXPRTM .       GET PRINT ATHV
)@@G@@TR MSG@ @@@B         ONER    ERATTR,1 .   @#@@@BEXOP25A  LABEL .  @E@B@AHW
)@@G@@         LOAD  A8,DZZLZ .          SET DEFAULT LINESIZE     @D@@@B      HX
)@@G@@   LOAD  A8,80,I .          SET DEFAULT LINESIZE@E@@@B         IF    IOCHY
)@@G@@BRC,OFF,IOCBF2 THEN,EXOP25 . ->STREAM I/O @D@@@B         LOAD  A8,IOCBBSHZ
)@@G@@*4,I .   SET MAX LINESIZE     @#@@@BEXOP25   LABEL .  @E@@@A         IF IA
)@@G@@   ICOPLF,OFF,W1Q4 THEN,EXOP22 . ->NO LINESIZE  @D@@@A         IF    IOCIB
)@@G@@BIN,OFF THEN,EXOP21 . ->NOT INPUT   @#@@@BEXOP19   LABEL .  @D@B@A      IC
)@@G@@   LOADA X5,EXLSZ .          ILLEGAL LINESIZE   @D@@@B         LOADA A8,ID
)@@G@@EXLSZ .          ILLEGAL LINESIZE   @^@B@A         EXERR EROPTN . @ @@@BIE
)@@G@@         ONER    EROPTN,1 .   @D@@@A         GOTO  EXOP40 .            -IF
)@@G@@>IGNORE LINESIZE  @#@@@AEXOP21   LABEL .  @I@C@B        IF      ICOPEL+IIG
)@@G@@OCBRC,ON,IOCBF2  THEN,EXOP19 . ELEMENT NAME+LINESIZE ILL    @I@@@C      IH
)@@G@@  IF      ICOPEL+IOCBRC,OFF,IOCBF2  THEN,EXOP23A . ELEMENT NAME+LINESIZEII
)@@G@@ I    @D@@@C         LOADA    A8,EXLSZ .        GET LINESIZE MSG  @ @@@CIJ
)@@G@@         ONER    ERATTR,1 .   @ @@@C         GOTO    EXOP40 .     @#@@@CIK
)@@G@@EXOP23A  LABEL .  @ @@@B         SET     IOCBPT,ON .  @#@@@BEXOP23   LABIL
)@@G@@EL .  @^@@@A         LOAD  A8,R9 .  @G@@@A         IF    A8,LT,1,I THEN,IM
)@@G@@EXOP40 .                 ILLEGAL LINESIZE @F@B@A         IF    A8,LT,4*IIN
)@@G@@OCBBS-1,I THEN,EXOP22 . ->OK LINESIZE     @F@@@B         IF    A8,LT,4*IIO
)@@G@@OCBBS+1,I THEN,EXOP22 . ->OK LINESIZE     @A@@@A         LOAD  A8,4*IOCBIP
)@@G@@BS-1,I .    @#@@@AEXOP22   LABEL .  @ @@@A         STORE A8,IOCBLZ .    IQ
)@@G@@@#@@@AEXOP40   LABEL .  @E@@@A         IF    ICOPPF,OFF,W1Q4 THEN,EXOP50IR
)@@G@@ . ->NO PAGESIZE  @C@@@A         IF    IOCBIN,OFF THEN,EXOP41 . ->OUTPUTIS
)@@G@@@#@@@BEXOP39   LABEL .  @D@B@A         LOADA X5,EXPSZ .          SET PAGIT
)@@G@@ESIZE MSG   @D@@@B         LOADA A8,EXPSZ .          SET PAGESIZE MSG   IU
)@@G@@@^@B@A         EXERR  EROPTN .@ @@@B         ONER    EROPTN,1 .   @D@@@AIV
)@@G@@         GOTO  EXOP50 .            ->IGNORE PAGESIZE  @#@@@AEXOP41   LABIW
)@@G@@EL .  @I@C@B         IF      ICOPEL+IOCBRC,ON,IOCBF2  THEN,EXOP39 . ELMNIX
)@@G@@T NAME +PAGESZ ILLEG    @I@@@C         IF      ICOPEL+IOCBRC,OFF,IOCBF2 IY
)@@G@@ THEN,EXOP43A . ELMNT NAME +PAGESZ ILL    @ @@@C         LOADA    A8,EXPIZ
)@@G@@SZ .  @ @@@C         ONER    ERATTR,1 .   @ @@@C         GOTO    EXOP50 JA
)@@G@@.     @#@@@CEXOP43A  LABEL .  @E@C@B         IF      IOCBPT,ON  THEN,EXOJB
)@@G@@P43 . PAGESZ=> PRINT    @ @C@B         SET     IOCBPT,ON .  @D@@@C      JC
)@@G@@   SET     IOCBPT,ON .       PAGESIZE=>PRINT    @#@@@BEXOP43   LABEL .  JD
)@@G@@@C@@@A         LOAD  A3,IODTA5 .         GET PSIZE    @F@@@A         IF JE
)@@G@@   A3,LT,1,I THEN,EXOP50 . ->INVALID PSIZE, IGNORE    @C@@@A         IF JF
)@@G@@   A3,LT,32767,I THEN,EXOP42 . ->OK @ @@@A         LOAD  A3,32767,I .   JG
)@@G@@@#@@@AEXOP42   LABEL .  @ @@@A         STORE A3,IOCBPZ .    @#@@@AEXOP50JH
)@@G@@   LABEL .  @C@@@B         LOAD    A3,IOCBF2 .       GET FLAGS    @B@@@BJI
)@@G@@         AND,U     A3,IOCBRC+IOCBKY .     @H@@@B         IF      A4,EQ,IJJ
)@@G@@OCBRC+IOCBKY,I  THEN,IORET1 .    KEYED=DON'T OPEN     @B@@@A         IF JK
)@@G@@        IOCBIN,ON THEN,EXOP60 @C@@@A         WROPEN EXOP51,IOOPNR,IOOPNRJL
)@@G@@ . OPEN FIL @#@@@AEXOP51   LABEL .  @ @@@A         SETL  A7,IOCBLZ .    JM
)@@G@@@B@@@A                  LOAD         X2,IOCBAD .@^@@@A         SETPC 4,0JN
)@@G@@,X2 . @D@@@A         MOVE  IOCBLN,0,I .        SET TO FIRST LINE  @^@@@AJO
)@@G@@         GOTO  IORET1 . @#@@@AEXOP60   LABEL .  @B@@@A         RDOPEN EXJP
)@@G@@OP61,IOOPNR,IOOPNR .    @#@@@AEXOP61   LABEL .  @I@@@B         IF      IJQ
)@@G@@OCBRC,ON,IOCBF2  THEN,IORET1 . RECORD I/O=DON'T GET 1ST RECORD    @D@@@AJR
)@@G@@         LINK  RDSKIP .            GET FIRST RECORD   @^@@@A         GOTJS
)@@G@@O  IORET1 . @#@B@AIOOPNR   LABEL .  @C@@@BIOOPNR   LABEL . I/O ERROR=>RAJT
)@@G@@ISE UNDEFINED FILE@ @@@B         STORE   X3,ONIOSV+6 .@C@B@A         EXEJU
)@@G@@RR ERIOER .            I/O ERROR    @^@B@A         GOTO  IORET1 . @H@@@BJV
)@@G@@         ONUNIT  ERIOER,ACCDUF,2  IORET1,IORET1,IORET1  DEXWK1,0  DEXMAXJW
)@@G@@,0    @[@@@B.     @[@@@B.     @^@@@A/.        ELEMENT I/O   @#@@@AEXFLIOJX
)@@G@@    LABEL . @D@@@B          MOVE EXOPUU,KBLANK,20 . BLANK OUT @USE STMT JY
)@@G@@@E@@@B         MOVE    EXOPFL,KBLANK,7 . BLANK OUT FLIENAME AREA  @B@@@BJZ
)@@G@@          MOVE EXOPUU,EXOPUS,2 . MOVE @USE@D@@@B         MOVE    EXOPUU+KA
)@@G@@6,EXOPTPF,2 . ASSUME TPF$     @C@@@B          LOAD X3,R8 . PTR TO D.V. OKB
)@@G@@F TITLE     @E@@@B         IF      X3,NZERO  THEN,EXOP71X .  NOT EXPR HAKC
)@@G@@VE DV @ @@@B         LOAD    X3,AREPTR .  @D@@@B         SUB     X3,2,I KD
)@@G@@.          GET PTR TO D.V.    @ @@@B         USING   ARDVDT,X3 .  @D@@@BKE
)@@G@@         MOVE    AREPTR,ARDVPT .   GET RID OF TEMP    @#@@@BEXOP71X   LAKF
)@@G@@BEL . @D@B@A          MOVE EXOPUU,KBLANK,20 . BLANK OUT @USE STMT @B@B@AKG
)@@G@@          MOVE EXOPUU,EXOPUS,2 . MOVE @USE@C@B@A          LOAD X3,R8 . PKH
)@@G@@TR TO D.V. OF TITLE     @D@@@A          SETL A7,W1H2+1,X3 . GET LENGTH OKI
)@@G@@F TITLE     @E@@@A          IF A7,GT,56,I  THEN,EXOPER . FILENAME TOO LAKJ
)@@G@@RGE   @#@@@BEXOP72   LABEL .  @C@@@A          LOAD X1,W1H2,X3 . PTR TO TKK
)@@G@@ITLE STRING @^@@@A          SETGC 4,0,X1 .@E@B@A          LOADA X2,EXOPUKL
)@@G@@U+6 . PUT FILENAME INTO USE STMT    @E@@@B          LOADA X2,EXOPFL . PUKM
)@@G@@T FILENAME INTO CREATE AREA   @^@@@A          SETPC 4,0,X2 .@D@@@B      KN
)@@G@@   LOAD   R8,A7 .           SAVE CHAR COUNT     @#@@@AEXOP70    LABEL . KO
)@@G@@@B@@@A          GETC . MOVE QUALIFIER*FILENAME. @E@@@A          IF A8,EQKP
)@@G@@,'.',I THEN,EXOP75 . MAYBE ELEMENT NAME   @#@@@A          PUTC.   @ @@@AKQ
)@@G@@          LOOP A7,EXOP70 .    @^@B@A         LOAD A8,'.',I .@G@@@B      KR
)@@G@@   LOADA   X1,EXOPFL .       SET GETC REGS TO NEW AREAFOR ELT NAME@ @@@BKS
)@@G@@         SETGC   4,0,X1 .     @D@@@B         LOAD    A7,R8 .           SKT
)@@G@@ET CHAR COUNT     @D@@@B         SET     SDIOEL,ON,SDIOAT .  SET ELT FLAKU
)@@G@@G ON  @ @@@B         GOTO    EXOP78 .     @#@@@AEXOP75    LABEL . @E@@@BKV
)@@G@@         IF      A7,EQ,R8  THEN,EXOP77 . '.' FIRST=>TPF$    @ @@@A      KW
)@@G@@   PUTC . PUT PERIOD    @F@@@B         MOVE    EXOPUU+6,EXOPFL,7 . VALIDKX
)@@G@@ FILENAME->@USE STMT    @#@@@BEXOP77   LABEL .  @B@@@A          SUB A7,1KY
)@@G@@,I . DECREMENT COUNT    @#@@@BEXOP78   LABEL .  @B@@@A          LOAD R3,KZ
)@@G@@A7 . SAVE LOOP COUNT    @B@@@A          LOAD R4,A1 . SAVE GETC REGS     LA
)@@G@@@^@@@A          LOAD R5,X1 .  @E@@@A          LSDP A3,SDBCHI,X4 . GET BCLB
)@@G@@D OF INTERNEL FILENAME  @ @@@A          SETGC 4,W1+2,A3 .   @H@@@A      LC
)@@G@@             LOADA X2,EXOPUU+2 . PUT INTERNAL FILENAME INTO USE STMT    LD
)@@G@@@^@@@A          SETPC 4,0,X2 .@ @@@A          SETL A6,SDBCNT,A3 . @F@@@ALE
)@@G@@          IF A6,LE,12,I THEN,EXOP76 . TAKE ONLY FIRST 12 CHARS    @^@@@ALF
)@@G@@          LOAD A6,12,I .@#@@@AEXOP76    LABEL . @#@@@A          GETC .  LG
)@@G@@@#@@@A          PUTC .  @ @@@A          LOOP A6,EXOP76 .    @F@@@A      LH
)@@G@@    MOVE SDIOFN,EXOPUU+2,3 . MOVE INTERNAL FILENAME INTO SD @ @@@A      LI
)@@G@@    LOAD A8,'.',I .     @#@@@A          PUTC .  @ @@@A          LOAD A8,LJ
)@@G@@',',I .     @#@@@A          PUTC .  @ @@@A          LOADA A7,EXOPUU .   LK
)@@G@@@^@@@A          LOAD A8,20,I .@ @@@A          LINK ZCSF$ . DO @USE@D@@@ALL
)@@G@@          IF A7,LT,0,I  THEN,EXOPER1 . ERROR IN ACSF$ @B@@@A          GOLM
)@@G@@TO EXOP02 . RETURN FOR NOW    @#@@@AEXOP98    LABEL . @B@@@A          LOLN
)@@G@@AD A7,R3 . RESTORE LOOP COUNT @G@@@B         IF      SDIOEL,ON,SDIOAT  TLO
)@@G@@HEN,EXOP93 . ELEMENT NAME EXISTS    @D@B@A          IF A7,LT,0,I THEN,EXLP
)@@G@@OP04 . NO ELEMENT NAME  @D@@@B          IF A7,LT,0,I THEN,EXOP24 . NO ELLQ
)@@G@@EMENT NAME  @#@@@BEXOP93   LABEL .  @F@@@A          SET ICOPEL,ON,IOCBF2LR
)@@G@@ . SET FLAG INDICATING ELEMENT NAME @B@@@A          LOAD A2,IOCBCB . GETLS
)@@G@@ FCT PTR    @B@@@A          ADD A2,12,I . GET PFS$ PKT ADDR @B@@@A      LT
)@@G@@    LOAD R6,A2 . SAVE PFS$ PKT ADDR @^@@@A          LOAD R3,X3 .  @A@@@ALU
)@@G@@          LOAD R2,A0 .  SAVE A0     @^@@@A          LOAD A0,3,I . @C@@@ALV
)@@G@@          LOADA A1,SDIOFN . GET SD FILENAME     @C@@@A          LINK ASCLW
)@@G@@FD . MOVE FILENAME INTO PACKET@A@@@A          LOAD A0,R2 . RESTORE A0   LX
)@@G@@@A@@@A          MOVE EXOPST,KBLANK,3 .    @B@@@A          LOAD A1,R4 . RLY
)@@G@@ESTORE GETC REGS  @^@@@A          LOAD X1,R5 .  @ @@@A          LOADA X3LZ
)@@G@@,EXOPST .   @^@@@A          SETPC 4,0,X3 .@A@B@A         MOVE EXOPST,KBLMA
)@@G@@ANK,3 .     @#@@@AEXOP80    LABEL . @A@@@A          GETC . MOVE ELEMENT MB
)@@G@@NAME  @D@@@A          IF A8,EQ,'/',I  THEN,EXOP85 . VERSION NAME  @C@@@AMC
)@@G@@          IF A8,EQ,'(',I  THEN,EXOP91 . CYCLE   @#@@@A          PUTC .  MD
)@@G@@@ @@@A          LOOP A7,EXOP80 .    @D@@@A          LINK EXOP90 . PUT ELME
)@@G@@EMENT NAME INTO PKT     @^@@@A          GOTO EXOP95 . @#@@@AEXOP85    LAMF
)@@G@@BEL . @B@@@B          SUB A7,1,I . ADJUST LOOP COUNT  @A@@@A          LOMG
)@@G@@AD R4,A1 . SAVE GETC REG@D@@@A          LINK EXOP90 . PUT ELEMENT NAME IMH
)@@G@@NTO PKT     @D@@@A          MOVE EXOPST,KBLANK,3 . BLANK OUT RESERVE LOCMI
)@@G@@@ @@@A          LOADA X3,EXOPST .   @^@@@A          SETPC 4,0,X3 .@B@@@AMJ
)@@G@@          LOAD A1,R4 . RESTORE GETC REG   @#@@@AEXOP86    LABEL . @A@@@AMK
)@@G@@          GETC . MOVE VERSION NAME  @C@@@A          IF A8,EQ,'(',I  THENML
)@@G@@,EXOP92 . CYCLE   @#@@@A          PUTC .  @ @@@A          LOOP A7,EXOP86MM
)@@G@@ .    @^@@@A          GOTO EXOP92 . @#@@@AEXOP90    LOCAL . @ @@@A      MN
)@@G@@    LOAD R2,A0 . SAVE A0@^@@@A          LOAD A0,3,I . @C@@@A          LOMO
)@@G@@ADA A1,EXOPST . ASCII ELEMENT NAME  @B@@@A          LOAD A2,R6 . GET PACMP
)@@G@@KET ADDR    @^@@@A          ADD A2,2,I .  @D@@@A          LINK ASCFD . MMQ
)@@G@@OVE ELEMENT NAME INTO PACKET  @A@@@A          LOAD A0,R2 . RESTORE A0   MR
)@@G@@@^@@@A          JMP . RETURN  @^@@@AEXOP92    LABEL . CYCLE @^@@@A      MS
)@@G@@   LOAD R2,A0 .   @^@@@A          LOAD A0,3,I . @C@@@A          LOADA A1MT
)@@G@@,EXOPST . ASCII VERSION NAME  @A@@@A          LOAD A2,R6 . GETPKT ADDR  MU
)@@G@@@^@@@A          ADD A2,6,I .  @D@@@A          LINK ASCFD . MOVE VERSION MV
)@@G@@NAME INTO PACKET  @^@@@A          LOAD A0,R2 .  @^@@@A          GOTO EXOMW
)@@G@@P95 . @^@@@AEXOP91    LABEL . CYCLE @^@@@A          LINK EXOP90 . @D@@@AMX
)@@G@@EXOP95    LABEL . GET SECTOR LOC FROM PFS$ OR PFWL$   @B@@@A          LOMY
)@@G@@AD X1,R3 . X1=ADDR OF IOCB    @B@@@A          LOAD X3,IOCBCB,X1 . GET FCMZ
)@@G@@T PTR @^@@@A          LOAD R2,A0 .  @D@@@A          LOAD A0,R6 . SET UP NA
)@@G@@CALLING REG TO PKT ADDR @ @@@B         USING   IOCB,X1 .    @E@@@B      NB
)@@G@@   IF      IOCBOT,ON,IOCBF1  THEN,EXOP99 . OUTPUT FILE@ @@@B         USINC
)@@G@@NG   IOCB,X3 .    @E@B@A          IF ICOPIF,OFF,W1Q4  THEN,EXOP99 . NOT ND
)@@G@@INPUT FILE  @B@@@A          ER PFS$ . SEARCH FOR ELEMENT    @#@@@B      NE
)@@G@@ LOAD X1,R6 @^@@@B       LOAD A1,10,X1    @^@@@A          GOTO EXOP96 . NF
)@@G@@@#@@@AEXOP99    LABEL . @D@@@B         ER PFS$ . IS OUTPUT ELEMENT ALREANG
)@@G@@DY CREATED  @B@@@B         IF  A2,ZERO  THEN,EXOP97 .  YES  @E@@@B      NH
)@@G@@   LOAD A2,EXCYCLE .  PUT IN CYCLE INFO FOR LATER PFI$@^@@@B         STONI
)@@G@@RE A2,8,A0 .@^@@@B         GOTO EXOP100 . @#@@@BEXOP97   LABEL .  @^@@@BNJ
)@@G@@         LOAD A2,8,A0 . @D@@@B         ADD A2,EXCYCINC . INCREMENT CYCLENK
)@@G@@ COUNTS     @C@@@B         STORE A2,8,A0 . STORE BACK INTO PKT    @#@@@BNL
)@@G@@EXOP100  LABEL .  @D@@@A          ER PFWL$ . GET NEXT AVAILABLE WRITE LONM
)@@G@@C     @F@@@B         STORE A1,10,A0 . PUT SECTOR LOC IN PKT FOR LATER PFNN
)@@G@@I$    @C@@@B         SZ  11,A0 . ZERO OUT TIME INFO IF ANY  @#@@@AEXOP96NO
)@@G@@    LABEL . @A@@@A          LOAD A0,R2 . RESTORE A0   @B@@@A         IF NP
)@@G@@A2,NZERO  THEN,IOOPNR . ERROR @D@@@A          STORE A1,W1+5,X3 . STORE SNQ
)@@G@@ECTOR LOC IN FCT  @B@@@A          LOAD X3,R3 . RESTORE X3 TO IOCB @ @B@ANR
)@@G@@          GOTO EXOP04 . RETURN@ @@@B          GOTO EXOP24 . RETURN@#@B@ANS
)@@G@@EXOPER    LOCAL . @C@@@BEXOPER    LABEL .  HERE IF FILENAME TOO LONG    NT
)@@G@@@^@B@A          EXERR ERIOER .@E@@@B         ONUNIT  EROPEN,ACCDUF,1  R,NU
)@@G@@I,R  DEXWK1,0  DEXMAX,0 @^@@@A          LOAD A7,56,I .@^@B@A          JMNV
)@@G@@P . RETURN  @B@@@B         GOTO    EXOP72 .          RETURN @#@B@AEXOPERNW
)@@G@@1   LOCAL . @B@@@BEXOPER1   LABEL .  HERE IF ERROR ON @USE  @^@B@A      NX
)@@G@@    EXERR EXIOER .@E@@@B         ONUNIT  EROPEN,ACCDUF,1  R,I,R  DEXWK1,NY
)@@G@@0  DEXMAX,0 @E@@@B         IF      ICOPIF,ON,W1Q4  THEN,EXOPER2 .  INPUTNZ
)@@G@@?     @E@@@B         IF      SDIOIN,ON,SDIOAT  THEN,EXOPER2 .  INPUT?   OA
)@@G@@@D@@@B         MOVE    SDIOFN,KFDOUT,3 . MOVE IN SYSPRINT   @D@@@B      OB
)@@G@@   LOADA   X3,KFDOUT .      ASSUME SYSPRINT     @C@@@B         WRIOCB . OC
)@@G@@                 GET IOCB     @D@@@B         LOAD    X2,IOCBAD .       ROD
)@@G@@ESET PUTC REGS    @ @@@B         SETPC   4,0,X2 .     @ @@@B         GOTOE
)@@G@@O    EXOP04 .     @#@@@BEXOPER2  LABEL .  @C@@@B         MOVE    SDIOFN,OF
)@@G@@KFDIN,3 .  MOVE IN SYSIN@ @@@B         LOADA   X3,KFDIN .   @#@@@B      OG
)@@G@@   WRIOCB . @D@@@B         LOAD    X1,IOCBAD .       RESET GETC REGS    OH
)@@G@@@ @@@B         SETGC   4,0,X1 .     @ @@@B         GOTO    EXOP04 .     OI
)@@G@@@A@B@A          MOVE EXOPUU+6,KBLANK,14 . @A@B@A          MOVE EXOPUU+6 OJ
)@@G@@,EXOPSYS,2 .@ @B@A          LOADA A7,EXOPUU .   @^@B@A          LOAD A8,OK
)@@G@@20,I .@A@B@A          LINK ZCSF$ . USE SYSPRINT @^@B@A          GOTO EXOOL
)@@G@@P02 . @#@@@A/.       CLOSE    @#@@@AEXIOCL*  LOCAL .  @D@@@B         LOAOM
)@@G@@D    X6,X11 .          GET CLOSE FLAGS    @C@@@A         STORE A3,R7 .  ON
)@@G@@           SAVE SD PTR  @^@@@A         LINK  EXIOIN . @C@@@A         LOAOO
)@@G@@D  X5,R7 .             RETRIEVE SD  @ @@@A         USING SDSECT,X5 .    OP
)@@G@@@^@@@A         LOADA X3,SDIOFN@B@@@A         WRIOCB .                  GOQ
)@@G@@ET IOC@^@@@A         USING IOCB,X3 .@ @@@A         LOAD  F,IOCBF1 .     OR
)@@G@@@#@@@A         WRCLOS   @C@B@A         GOTO  IORET0 .            ->RETUROS
)@@G@@N     @C@@@B         GOTO  IORET1 .            ->RETURN     @^@@@A/.    OT
)@@G@@   DATA STORAGE   @ @B@A          ORIGIN TRNSWK .     @#@B@AEXOPST    SFOU
)@@G@@W 3 . @#@B@AEXOPUU    SFW 20 .@#@@@AXXX      CSECT 3  @#@@@BDEXKYW   SFWOV
)@@G@@   0  @^@@@B         +0,W$,0,0,0,0 .@#@@@BDEXKYR   SFW   0  @^@@@B      OW
)@@G@@   +0,R$,0,0,0,0 .@#@@@AEXOPUS    SFW 0 . @#@@@A    '@USE    '    @#@B@AOX
)@@G@@EXOPSYS   SFW 0 . @#@B@A    'SYSPRINT'    @^@@@BEXOPTPF  SFW     0 .    OY
)@@G@@@^@@@B         'TPF$.   '     @#@@@BEXCYCLE   SFW 0 . @^@@@B          +0OZ
)@@G@@5,0,01 .    @#@@@BEXCYCINC  SFW 0 . @^@@@B          +0,01,01 .    @^@@@CPA
)@@G@@EXPRTM   SFW     0 .    @D@E@C         INSERT 15,'PRT','INT ','ATTR','IBPB
)@@G@@UT','E   ' .@A@@@E         INSERT  5,'PRI','NT  ' .   @#@@@AEXLSZ    SFWPC
)@@G@@   0 .@B@@@A         INSERT 8,'LIN','ESIZ','E   '     @#@@@AEXPSZ    SFWPD
)@@G@@   0 .@B@@@A         INSERT 8,'PAG','ESIZ','E   '     @#@@@A         CENPE
)@@G@@D     @D@B@AEROPTN   EQU   83 .                STRX5 OPTION ERROR @E@@@BPF
)@@G@@EROPTN   EQU   30 .                STRA8 OPTION INVALID     @E@@@AERIOERPG
)@@G@@   EQU   84 .                FILE ERROR IN FILE SDX4  @D@@@AEROPEN   EQUPH
)@@G@@   85 .                SDX4 OPEN ERROR    @G@@@CERATTR   EQU     116 .  PI
)@@G@@           STRA8 IGNORED IN ELMT/RECORD I/O     @]@@@A         END___ GOPJ
)@@G@@TO EXOP92 . @#@@@AEXOP90    LOCAL . @ @@@A          LOAD R2,A0 . SAVE A0PK
)@@G@@@^@@@A          LOAD A0,3,I . @C@@@A          LOADA A1,EXOPST . ASCII ELPL
)@@G@@*[S@@@*SDFF*@C@Q@P.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @C@@@QPM
)@@G@@.   COPYRIGHT 1976 BY THE UNIVERSITY OF MARYLAND@[@@@P.     @D@@@P.   QUPN
)@@G@@ESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@P.     @ @@@P.     PO
)@@G@@   MARVIN V. ZELKOWITZ  @B@@@P.        DEPARTMENT OF COMPUTER SCIENCE   PP
)@@G@@@A@@@P.        UNIVERSITY OF MARYLAND     @B@@@P.        COLLEGE PARK, MPQ
)@@G@@ARYLAND 20742     @[@@@P.     @G@@@P.        PERMISSION TO USE THESE LISPR
)@@G@@TINGS AND THE COMPUTER PROGRAMS THEY@E@@@P.   REPRESENT IS GRANTED UNDERPS
)@@G@@ THE FOLLOWING CONDITIONS:    @[@@@P.     @G@@@P.        1. UNLIMITED USPT
)@@G@@E MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@P.   THESE LISTINGSPU
)@@G@@ PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@P.   PL/1 COMPV
)@@G@@PILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@P.     @F@@@P.     PW
)@@G@@   2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@P.     PX
)@@G@@@G@@@P.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATPY
)@@G@@ION   @G@@@P.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT PZ
)@@G@@THE PROGRAM @E@@@P.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM,QA
)@@G@@ AND  @[@@@P.     @G@@@P.        (B) ALL SUCH MODIFICATIONS, OTHER THAN QB
)@@G@@TRIVIAL CORRECTIONS     @F@@@P.        OF ERRORS IN THE SOURCE PROGRAMS,QC
)@@G@@ SHALL BE REPORTED AND  @G@@@P.        A BRIEF DESCRIPTION OF THE FEATURQD
)@@G@@E ADDED SHALL BE SUBMITTED    @C@@@P.        TO THE UNIVERSITY OF MARYLAQE
)@@G@@ND, AND     @[@@@P.     @F@@@P.        (C) NO PROGRAMS DERIVED FROM THESQF
)@@G@@E LISTINGS SHALL BE SOLD@G@@@P.        WITHOUT WRITTEN APPROVAL FROM THEQG
)@@G@@ UNIVERSITY OF MARYLAND, AND  @[@@@P.     @F@@@P.        (D) COPIES OF TQH
)@@G@@HESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@P.        LOCATIONS PROVIQI
)@@G@@DED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@P.        WHETHER TQJ
)@@G@@HE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@P.        MARQK
)@@G@@YLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@P.     @G@@@P.     QL
)@@G@@   3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@PQM
)@@G@@.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@PQN
)@@G@@.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@P.   EXQO
)@@G@@PERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@P.   ISQP
)@@G@@ NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@PQQ
)@@G@@.   FROM PLUM.    @[@@@P.     @[@@@P.     @[@@@P.     @[@@@P.     @[@@@PQR
)@@G@@.     @[@@@P/.    @#@@@P         AXR$ .   @#@@@P         DCLRG .  @#@@@PQS
)@@G@@         UNLIST . @]@@@P@ADD PLTVDS @]@@@P@ADD EXCDS  @]@@@P@ADD IOSET  QT
)@@G@@@#@@@P         LIST .   @#@@@P         CEND .   @#@@@P         PLWORD . QU
)@@G@@@#@@@P         PLIOCB . @#@@@P         PLSD .   @#@@@P         PLBASE . QV
)@@G@@@#@@@P         PLAC .   @#@@@P         PLAR .   @^@@@PIODTWS   DSECT 14 QW
)@@G@@.     @#@@@PIODTCK   SFW   3 .@#@@@PIODSR9   SF .     @#@@@PIODTAS   SF QX
)@@G@@.     @#@@@PIODTXS   SF .     @#@@@PIODTND   SFW   0 .@#@@@P         DENQY
)@@G@@D .   @A@@@P/.       DATA I/O.  PUT LIST I/O    @ @@@P         USING IODQZ
)@@G@@TWS,X5 .    @^@@@PEXDT     CSECT  3 .     @^@@@P         USING AREC,X10 RA
)@@G@@@[@@@P/.    @C@@@P.        EXPTLT                    PUT LIST     @[@@@PRB
)@@G@@.     @B@@@PEXPTLT*  LOCAL .                   ENTRY  @^@@@P         GETRC
)@@G@@LNK X5 .    @D@@@P         LINK  EXIOIN .            SAVE REGISTERS     RD
)@@G@@@C@@@P         MOVE  IODTAF,0,I .        RESET FLAGS  @B@@@P         LINRE
)@@G@@K  WRETAB .            TAB I/0@^@@@P         USING WORD,X5. @ @@@P      RF
)@@G@@   MOVE  IODED,W1 .     @C@@@P         MOVE  IODTAF,1,I .        SET IN RG
)@@G@@NUMBER@D@@@P         LOAD  A8,IODCLS .         GET NUMBER TYPE    @D@@@PRH
)@@G@@         AND,U A8,SDCHBT+SDARST .  SEE IF BIT STRING  @F@@@P         IF RI
)@@G@@   A9,EQ,SDCHBT+SDARST,I THEN,WRDT21 .  -> BIT STRING @ @@@P         ANDRJ
)@@G@@,U A8,SDARST .    @D@@@P         IF    A9,EQ,0,I THEN,WRDT20 . -> ARITHMRK
)@@G@@ETIC  @E@@@P         IF    IOCBSR,ON,IOCBF1 THEN,WRDT20 . ->STRING PUT  RL
)@@G@@@E@@@P         IF    IOCBPT,OFF THEN,WRDT21 . -> NON PRINT FILE   @#@@@PRM
)@@G@@WRDT20   LABEL .  @E@@@P         MOVE    IOSAVL,0,I .      SET TO NOT DURN
)@@G@@P QUOTES    @C@@@P         LINK  WRLIST .            PUT NUMBER   @C@@@PRO
)@@G@@         GOTO  IORET1 .            -> RETURN    @#@@@PWRDT21   LABEL .  RP
)@@G@@@C@@@P         PUTCH '''' .              QUOTE OUTPUT @D@@@P         MOVRQ
)@@G@@E  IOSAVL,1,I .        SET QUOTE CHECK    @C@@@P         LINK  WRLIST . RR
)@@G@@           OUTPUT STRING@ @@@P         MOVE  IOSAVL,0,I .   @^@@@P      RS
)@@G@@   PUTCH '''' .   @E@@@P         IF    SDCHBT,OFF,IODCLS THEN,IORET1 . -RT
)@@G@@> NOT 'X'B  @^@@@P         PUTCH 'B'  .   @C@@@P         GOTO  IORET1 . RU
)@@G@@           -> RETURN    @[@@@P.     @C@@@P.        WRLIST               RV
)@@G@@     PRINT DATUM  @[@@@P.     @#@@@PWRLIST   LOCAL .  @[@@@P.     @C@@@PRW
)@@G@@.        THE COUNT BOF IS NOT IN ANSII STANDARD @[@@@P.     @C@@@P.     RX
)@@G@@    LINK  WRCNT .             UP COUNT BIF@C@@@P         LOAD  X5,IODTA5RY
)@@G@@ .         DATUM ADDRESS@E@@@Q         MOVE    IOCMA,0,I .       CLEAR TRZ
)@@G@@EMP STRING FLAG   @D@@@P         SETL  R2,2,I .            ASSUME COMPLESA
)@@G@@X     @ @@@P         LOAD    A3,IODCL1 .  @C@@@P         AND,U   A3,SD0LSB
)@@G@@AB .       SEE IF LABEL @D@@@P         IF    A4,EQ,SD0LAB,I THEN,WRLSTL SC
)@@G@@. -> LABEL  @E@@@P         IF    SDARST,OFF,IODCLS THEN,WRLSTA . ->ARITHSD
)@@G@@METIC @D@@@P         IF    X5,ZERO THEN,WRLSTT .    ->TEMP STRING @#@@@PSE
)@@G@@WRLSTB   LABEL .  @ @@@P         USING ARDVDT,X5 .    @D@@@P         LOASF
)@@G@@D  X1,ARDVPT .           ADDR OF STRING   @D@@@P         LOAD  A9,ARDVCLSG
)@@G@@ .         CURRENT LENGTH     @F@@@P         IF    ARDVUN,OFF,ARDVKY THESH
)@@G@@N,WRLSTC . -> NOT UNINIT.     @B@@@P         LOADA X1,WRDASH  .     SET SI
)@@G@@\\\\  @^@@@P         LOAD  A9,4,I . @#@@@PWRLSTC   LABEL .  @C@@@P      SJ
)@@G@@   SETGC 4,0,X1 .            SET TO READ  @C@@@P         LINK  WRPFLD . SK
)@@G@@           PUT STRING   @E@@@P         IF    SDRLCX,ON,IODCLS THEN,WRLSTSL
)@@G@@D . -> COMPLEX    @E@@@P         IF    IOCMA,ZERO THEN,WRLSTE . -> NOT TSM
)@@G@@EMP STRING  @C@Q@P         LOAD  X4,W1H2 .           'POP' TEMP   @C@@@QSN
)@@G@@         MOVE    AREPTR,ARDVPT .   'POP' TEMP   @#@@@PWRLSTE   LABEL .  SO
)@@G@@@F@@@P         SET     01,OFF,IODTAF .   TURN OFF NUMBER STARTED FLAG   SP
)@@G@@@#@@@P         JMP   .  @E@@@PWRLSTT   LABEL .                   PUT STRSQ
)@@G@@ING TEMPORARY     @C@@@P         LOAD  X5,AREPTR .         PICK UP END  SR
)@@G@@@C@@@P         SUB   X5,2,I .            DOPE VECTOR  @ @@@P         MOVSS
)@@G@@E  IOCMA,1,I .    @D@@@P         GOTO  WRLSTB .            -> PROCESS STST
)@@G@@RING  @C@@@PWRLSTA   LABEL .                   ARITHMETIC   @ @@@P      SU
)@@G@@   LOAD  A8,IODCLS .    @A@@@P         AND,U  A8,SDDCBN+SDFXFL .  @ @@@PSV
)@@G@@         STORE A9,DCVFLG .    @#@@@PWRLSA1   LABEL .  @ @@@P         LOASW
)@@G@@D  A8,IODSP .     @ @@@P         STORE A8,DCVDQP .    @ @@@P         STOSX
)@@G@@RE A8,DCVBQP .    @^@@@P         LOADD A8,W1 .  @ @@@P         STORED A8SY
)@@G@@,DCVFLT .   @ @@@P         STORED A8,DCVFFT .   @ @@@P         STORE A8,SZ
)@@G@@DCVINT .    @#@@@PWRLS03   LABEL .  @B@@@P         LINK  EXCVSD .       TA
)@@G@@     CONVERT@D@@@P         LOAD  A9,DCVINT .         SIZE OF STRING     TB
)@@G@@@ @@@P         LOADA X1,DLXCON .    @C@@@P         GOTO  WRLSTC .       TC
)@@G@@     PUT FIELD    @B@@@PWRLSTD   LABEL .                   COMPLEX@C@@@PTD
)@@G@@         LOOP  R2,WRLSTG .         -> REAL PART @#@@@P         PUTCH 'I'TE
)@@G@@@C@@@P         GOTO  WRLSTE .            ->RETURN     @#@@@PWRLSTG   LABTF
)@@G@@EL .  @E@@@P         IF    SDARST,ON,IODCLS THEN,WRLSTE . -> STRING     TG
)@@G@@@C@@@P         ADD   X5,2,I .            DATUM ADDR   @D@@@P         IF TH
)@@G@@   SDFXFL,ON,IODCLS THEN,WRLSA2 . ->FLOAT @C@@@P         IF    SDDCBN,OFTI
)@@G@@F,IODCLS THEN,WRLSA2  . @^@@@P         SUB   X5,1,I . @#@@@PWRLSA2   LABTJ
)@@G@@EL .  @A@@@P         SET   SDRLCX,ON,DCVFLG .   @^@@@P         GOTO  WRLTK
)@@G@@SA1 . @D@@@PWRLSTL   LABEL .                   'CHECK' LABEL .    @^@@@PTL
)@@G@@         LOAD  X5,W1 .  @B@@@P         LSDP  X5,SDBCHI,X5 .      BCD BLKTM
)@@G@@@C@@@P         LOAD  A9,SDBCNT,X5 .      SIZE OF LABEL@B@@@P         LOATN
)@@G@@DA X1,SDBBCD,X5 .      NAME   @C@@@P         GOTO  WRLSTC .            -TO
)@@G@@>PRINT NAME @[@@@P/.    @C@@@P.        EXGTDT                    GET DATTP
)@@G@@A     @[@@@P.     @#@@@PEXGTDT*  LOCAL .  @E@@@P         LOAD    R9,X1 .TQ
)@@G@@           GET LIST/NOLIST FLAG     @C@@@P         LINK  EXIOIN .       TR
)@@G@@     INITIALIZE   @C@@@P         SET   ICGTDF,ON,IOCBSF .   SET GET DATATS
)@@G@@@D@@@P         LINK  RDCPYS .            INITIALIZE COPY    @C@@@P      TT
)@@G@@   MOVE  IONUM,0,I .         INITALIZE    @F@@@P         LOOP  R9,RDDT00TU
)@@G@@ .         -> NOT NULL LIST  (WAS RDDTOO) @D@@@P         MOVE  IONUM,040TV
)@@G@@0,I  .        SET READ ALL    @#@@@PRDDT00   LABEL .  @E@@@P         LINTW
)@@G@@K    EXGTVA .          READ VARIABLE NAME AND = @F@@@P         GOTO    RTX
)@@G@@DDT98 .          ERROR RETURN, TRY TO CONTINUE  @G@@@P         GOTO    RTY
)@@G@@DDT97 .          ERROR TOKEN RETURN,TRY TO CONTINUE   @F@@@P         GOTTZ
)@@G@@O    RDDT93 .          NORMAL RETURN, HAVE VARIABLE   @D@@@P         GOTUA
)@@G@@O    RDDATD .          FINISHED RETURN    @ @@@PEXGTVA*  LOCAL . GET VARUB
)@@G@@IABLE @D@@@P         MOVE  IOSTLT,AREPTR .    SAVE TOP OF STACK   @C@@@PUC
)@@G@@         MOVE    DLXIDN,0,I .      CLEAR SD PTR @C@@@P         LINK  RDNUD
)@@G@@AME .            GET NAME     @C@@@P         GOTO    RDJMP3 .          DUE
)@@G@@ONE , QUIT  @B@@@P         LSDP  X5,DLXIDN .         BCD PTR@D@@@P      UF
)@@G@@   IF    X5,ZERO THEN,RDDT89 . -> NO SD WITH BCD@#@@@PRDDT31   LABEL .  UG
)@@G@@@D@@@P         LSDP  X5,SDBCLK,X5 .      FIRST SD WITH BCD  @C@@@P      UH
)@@G@@   IF    X5,ZERO  THEN,RDDT96 . -> NO SD  @ @@@P         USING SDSECT,X5UI
)@@G@@ .    @C@@@P         IF    SDMEMS,ON,SDCLS2 THEN,RDDT31 .   @A@@@P.     UJ
)@@G@@   FIND  SD KNOWN TO PROGRAM  @ @@@P         LSDP  A3,SDBKLK .    @ @@@PUK
)@@G@@         LSDP  X11,ARBSDP .   @ @@@Q         LOAD  A4,SDBKDP,A3 . @#@@@PUL
)@@G@@RDDT32   LABEL .  @D@@@Q         IF      A3,EQ,X11  THEN,RDDT37 . FOUND UM
)@@G@@SD    @ @@@Q         USING   SDSECT,X11 . @E@@@Q         IF      A4,GE,SUN
)@@G@@DBKDP  THEN,RDDT31 . TRY NEXT DECL  @D@@@Q         LSDP    X11,SDBKLK . UO
)@@G@@     GO OUT ONE LEVEL   @ @@@Q         GOTO    RDDT32 .     @#@@@QRDDT37UP
)@@G@@   LABEL .  @^@@@Q         USING SDSECT,X5@D@Q@P         IF    A3,EQ,X11UQ
)@@G@@ THEN,RDDT37 .  ->FOUND SD    @ @Q@P         LOAD  A4,SDBKDP,A3 . @ @Q@PUR
)@@G@@         USING SDSECT,X11     @E@Q@P         IF    A4,GE,SDBKDP THEN,RDDUS
)@@G@@T31 . -> TRY NEXT DEC   @ @Q@P         LSDP  X11,SDBKLK .   @F@@@Q      UT
)@@G@@   IF      SD4RFE,OFF,SDCLS4  THEN,RDDT31 . NOT REFERENCED  @D@Q@P      UU
)@@G@@   GOTO  RDDT32 .            -> GO OUT 1 LEVEL  @D@Q@PRDDT37   LABEL .  UV
)@@G@@                 A3=SD X11= BLOCK SD@ @Q@P.        USING SDSECT,A3 .    UW
)@@G@@@D@Q@P.        IF    SDEXDM,OFF,SDCLS2 THEN,RDDT33 . -> NOPE@D@Q@P.     UX
)@@G@@   LSDP  A3,SDEXPT .         DUMMY EXTERNAL     @D@Q@P.        IF    A3,UY
)@@G@@ZERO THEN,RDDT96 . -> NO SUCH NAME  @#@@@PRDDT33   LABEL .  @D@@@P      UZ
)@@G@@   STORE X5,IOSDAD .         SAVE SD ADDRESS    @D@@@P         LINK  IORVA
)@@G@@DTK .            GET '.' OR '='     @E@@@P         IF    LXQN,NSAME,DLXCVB
)@@G@@LN THEN,RDDT40 . -> NOT '.'   @E@@@P         LINK  RDNAME .            GVC
)@@G@@ET NEXT PART OF NAME    @B@@@P         GOTO    RDJMP3 .          DONE   VD
)@@G@@@D@@@P         LOAD  X5,IOSDAD .         GET SD OF DATA     @ @@@P      VE
)@@G@@   USING SDSECT,X5 .    @E@@@P         IF    SDSTRU,ON,SDCLS4 THEN,RDDT3VF
)@@G@@5  . -> STRUCTURE @D@@@PRDDT94   LABEL .                   STRUCTURE ERRVG
)@@G@@OR    @D@@@P         LOAD  X5,IOSDAD .         GET SD OF DATA     @E@Q@PVH
)@@G@@         EXERR ERIO02 LEVEL,1 .    'SDX5' STRUCTURE ERROR   @F@Q@P      VI
)@@G@@   JMP         .            SET FLAG, READ AND IGNORE NUMBER@ @@@Q      VJ
)@@G@@   LINK    ONIOSN .     @H@@@Q         ONUNIT  ERIO02,ACCDER,1  RDGBFS,JVK
)@@G@@MP,JMP  DEXMK1,25  DEXMK2+FH2,75    @#@@@PRDDT35   LABEL .  @^@@@P      VL
)@@G@@   LOAD  A3,X5 .  @C@@@P         LOAD    X5,DLXIDN .       -> TO BCD    VM
)@@G@@@#@@@PRDDT36   LABEL .  @E@@@P         LOAD    X5,SDBCLK,X5 .    -> TO SVN
)@@G@@D WITH SAME NAME  @D@@@P         IF      X5,ZERO  THEN,RDDT94 . NO SD TOVO
)@@G@@ MATCH@E@@@P         IF      A3,EQ,SDDAD  THEN,RDDT33  ELSE,RDDT36 .    VP
)@@G@@@#@@@PRDDT40   LABEL .  @F@@@P         IF    0400,ON,IONUM THEN,RDDT41 .VQ
)@@G@@ -> GET ALL, NO LIST    @D@@@P         LINK  RDDT4A .            SEE IF VR
)@@G@@IN USER LIST@#@@@PRDDT41   LABEL .  @C@@@P         LOAD  X11,IOSDAD .   VS
)@@G@@        SAVE SD   @ @@@P         USING SDSECT,X11 .   @I@@@Q         IF VT
)@@G@@     SD0BSD+SD0CNT,ON,SDCLS0  THEN,RDDT29 . NO BSD/CNT STRG ALLOWED     VU
)@@G@@@F@Q@P         IF    SDSTRU,ON,SDCLS4 THEN,RDDT94 . ->ERROR, NOT LEAF   VV
)@@G@@@E@@@Q         IF    SDSTRU,OFF,SDCLS4 THEN,RDDT43 . ->HAVE LEAF  @F@@@QVW
)@@G@@. ALLOW MAJOR STRUCTURE NAMES FOR DISPLAY IN EXDB, ELSE IT'S ERROR@E@@@QVX
)@@G@@         IF      0100,ON,DSPLYA  THEN,JMP  ELSE,RDDT94 .    @#@@@QRDDT43VY
)@@G@@   LABEL .  @D@@@P         LOAD    A3,SDCLS0 .       GET CLASS BITS     VZ
)@@G@@@ @@@P         AND,U   A3,017 .     @E@@@P         IF      A4,EQ,SD0ART,WA
)@@G@@I  THEN,RDDT45 . ARITHMETIC   @D@@@P         IF      A4,EQ,SD0STR,I  THEWB
)@@G@@N,RDDT45 . STRING @E@@@P         IF      A4,NE,SD0PTR,I  THEN,RDDT29 . NWC
)@@G@@OT POINTER  @H@@@P         IF      0110,ON,DSPLYA  THEN,RDDT45 . ALLOW PWD
)@@G@@OINTERS FOR CALL+DISPLAY@#@@@PRDDT29   LABEL .  @^@@@P         LOAD  A8,WE
)@@G@@X11 . @ @@@Q         LINK    ONIOSN .     @ @@@Q.        RAISE NAME CONDWF
)@@G@@ITION @F@Q@P         EXERR ERIO03 LEVEL,1 .    'SDA8' NOT ALLOWED IN GETWG
)@@G@@ LIST @H@@@Q         ONUNIT  ERIO03,ACCDNA,1  RDGBFS,JMP,JMP  DEXMK1,25 WH
)@@G@@ DEXMK2+FH2,75 .  @^@Q@P         JMP         .  @E@@@PRDDT45   LABEL .  WI
)@@G@@                 READ SUBSCRIPTS ON ARRAY @E@@@P         IF    LXBN,SAMEWJ
)@@G@@,DLXCLN THEN,RDDT95 . MAYBE '='     @D@Q@P         IF    LXLP,NSAME,DLXCWK
)@@G@@LN THEN,JMP1 . ERROR    @D@@@Q         IF    LXLP,NSAME,DLXCLN THEN,RDDTWL
)@@G@@88 . ERROR  @F@@@P         IF    SDARRY,ON,SDCLS2 THEN,RDDT46 . -> NO ERWM
)@@G@@ROR IN INPUT@^@@@P         LOAD  A8,X11 . @D@Q@P         EXERR ERIO04 LEWN
)@@G@@VEL,1 .    'SDA8' ARRAY ERROR @D@Q@P         JMP         .            ->WO
)@@G@@ IGNORE INPUT     @ @@@Q         LINK    ONIOSN .     @H@@@Q         ONUWP
)@@G@@NIT  ERIO04,ACCDER,1  RDGBFS,JMP,JMP  DEXMK1,25  DEXMK2+FH2,75    @#@@@PWQ
)@@G@@RDDT46   LABEL .  @D@@@P         LINK  WRADDR .            ADDR OF DATUMWR
)@@G@@ IN X5@C@@@P         SETL A9,SDNDIM .         GET NO. DIMS  @^@@@P      WS
)@@G@@   LOAD    X5,X4 .@B@@@P         LOAD  X4,W1,X5 .          V.O.   @D@@@PWT
)@@G@@         LOADA X5,W1+2,X5 .        FIRST MPY-BND PAIR @^@@@P.        A9=WU
)@@G@@   NO. DIMS @^@@@P.        X4=   V.A.     @ @@@P.        X5=   ->MPY-BOUWV
)@@G@@ND    @#@@@PRDDT28   LABEL .  @D@@@P         LINK  IORDTK .            SWW
)@@G@@IGN OR SUBSCRIPT  @E@@@P         IF    LXPS,NSAME,DLXCLN THEN,RDDT47 . -WX
)@@G@@> NOT SIGN  @B@@@P         MOVE  IORDSG,DLXCS .      SAVE IT@C@@@P      WY
)@@G@@   LINK  IORDTK .            SUBSCRIPT    @E@@@P         MOVE  DLXCS,IORWZ
)@@G@@DSG .     RESTORE SIGN IN NUMBER    @#@@@PRDDT47   LABEL .  @E@Q@P      XA
)@@G@@   IF    LXIDCN,OFF,DLXCLN THEN,JMP1 . ->NOT NUMBER   @E@@@Q         IF XB
)@@G@@   LXIDCN,OFF,DLXCLN THEN,RDDT88 . ->NOT NUMBER @#@@@PRDDT48   LABEL .  XC
)@@G@@@F@@@P         STORE   F,IOCBF1 .                              *********XD
)@@G@@@D@@@P         LINK  CVNUM .             CONVERT NUMBER     @F@@@P      XE
)@@G@@   LOAD    F,IOCBF1 .                              *********@D@@@P      XF
)@@G@@   LOAD  A3,DCVINT .         SEE IF BOUNDS OK   @D@@@P         LOAD    AXG
)@@G@@8,W1XH2+1 .      GET LOWER BOUND    @E@@@P         IF      A3,GE,A8 THENXH
)@@G@@,RDDT49 . >LOWER BOUND OK     @B@@@P         LOAD  A3,A8 .         ASSUMXI
)@@G@@E LB  @C@@@P         LOADA A8,RDLWER .         ERROR MSG    @#@@@PRDDT51XJ
)@@G@@   LABEL .  @^@@@P         LOAD  A10,A3 . @G@Q@P         EXERR ERIO05 LEXK
)@@G@@VEL,1 .    'STRA8' BOUND ERROR. 'FA10' USED.    @F@@@Q.        'STRA8' BXL
)@@G@@OUND ERROR. 'FA10' USED. RAISE SUBSCRIPTRANGE   @ @@@Q         LINK    OXM
)@@G@@NIOSN .     @I@@@Q         ONUNIT  ERIO05,ACCDSU,1  RDGBFS,RDDT50,RDDT50XN
)@@G@@  DEXMK1,25  DEXMK2+FH2,75    @C@Q@P         GOTO  RDDT50 .            -XO
)@@G@@> NEXT BOUND@#@@@PRDDT49 LABEL .    @C@@@P         ADD     A8,W1H1+1 .  XP
)@@G@@     ADD IN EXTENT@B@@@P         IF    A3,LE,A8 THEN,RDDT50 .     @E@@@PXQ
)@@G@@         LOAD  A3,A8 .         SUBSC OUT OF RANGE, USE UPPER@ @@@P      XR
)@@G@@   LOADA A8,RDUPER .    @B@@@P         GOTO  RDDT51 .            ->MSG  XS
)@@G@@@#@@@PRDDT50   LABEL .  @C@@@P         MPYS  A3,W1 .             SUBSC*MXT
)@@G@@PYR   @B@@@P         ADD   X4,A3 .             V.A.   @D@@@P         ADDXU
)@@G@@   X5,2,I .           NEXT BOUND PAIR     @D@@@P         LOOP  A9,RDDT52XV
)@@G@@ .         -> NEXT SUBSCR     @C@@@P         LINK  IORDTK .            SXW
)@@G@@EE IF )     @D@Q@P         IF    LXRP,NSAME,DLXCLN THEN,JMP1 .  ->ERROR XX
)@@G@@@E@@@Q         IF    LXRP,NSAME,DLXCLN THEN,RDDT88 .  ->ERROR     @#@@@PXY
)@@G@@RDDT55   LABEL .  @B@@@P         LINK  IORDTK .            GET =  @ @@@PXZ
)@@G@@         LOAD  X11,IOSDAD .   @E@@@P         IF    LXBN,SAME,DLXCLN THENYA
)@@G@@,RDJMP2 ELSE,JMP1 .     @C@@@PRDDT52   LABEL .                   SEE IF YB
)@@G@@';'   @^@@@P         LINK  IORDTK . @E@Q@P         IF    LXCM,SAME,DLXCLYC
)@@G@@N THEN,RDDT28 ELSE,JMP1 .     @E@@@Q         IF    LXCM,SAME,DLXCLN THENYD
)@@G@@,RDDT28 ELSE,RDDT88 .   @D@@@PRDDT95   LABEL .                   GET VALYE
)@@G@@UE OF NO.   @E@@@P         IF    SDARRY,OFF,SDCLS2 THEN,RDJMP2 . -> OK DYF
)@@G@@ATA   @^@@@P         LOAD  A8,X11 . @E@Q@P         EXERR ERIO06 LEVEL,1 YG
)@@G@@.    'SDA8' BOUND ERROR .     @B@Q@P         JMP         .            ERYH
)@@G@@ROR   @ @@@Q         LINK    ONIOSN .     @ @@@Q.        'SDA8' BOUND ERYI
)@@G@@ROR   @H@@@Q         ONUNIT  ERIO06,ACCDER,1  RDGBFS,JMP,JMP  DEXMK1,25 YJ
)@@G@@ DEXMK2+FH2,75    @#@@@PRDDT89   LABEL .  @D@Q@P         EXERR  ERIO08  YK
)@@G@@LEVEL,1 .  'TOKEN' IS INVALID @D@@@Q.        'TOKEN' IS INVALID. RAISE NYL
)@@G@@AME CONDITION     @ @@@Q         LINK    ONIOSN .     @I@@@Q         ONUYM
)@@G@@NIT  ERIO08,ACCDNA,1  RDGBFS,RDJMP3,RDJMP3  DEXMK1,25  DEXMK2+FH2,75    YN
)@@G@@@^@Q@P         JMP     3 .    @#@@@PRDDT96   LABEL .  @ @@@P         LOAYO
)@@G@@D  A8,DLXIDN .    @D@Q@P         EXERR ERIO07 LEVEL,1 .    'BCDA8' NAME YP
)@@G@@ERROR.@D@@@Q.        'BDCA8' NAME ERROR. RAISE NAME CONDITION.    @ @@@QYQ
)@@G@@         LINK    ONIOSN .     @I@@@Q         ONUNIT  ERIO07,ACCDNA,1  RDYR
)@@G@@GBFS,RDJMP3,RDJMP3  DEXMK1,25  DEXMK2+FH2,75    @F@@@QRDDT88   LABEL .  YS
)@@G@@                 HERE TO MAKE CORRECT RETURN    @ @@@Q         LOAD    XYT
)@@G@@11,IOSDAD . @C@@@Q         IF      0110,OFF,DSPLYA  THEN,JMP1   . @E@@@QYU
)@@G@@         IF      SDARRY,ON,SDCLS2  THEN,JMP  ELSE,JMP1 .    @E@Q@P      YV
)@@G@@   JMP     3 .               IGNORE REST OF IMAGE     @#@@@PRDJMP2   LABYW
)@@G@@EL    @^@@@P         JMP     2 .    @#@@@PRDJMP3   LABEL .  @^@@@P      YX
)@@G@@   JMP     3 .    @[@@@P.     @[@@@P.     @B@@@P.        END OF THE GET YY
)@@G@@VARIABLE ROUTINE  @[@@@P.     @[@@@P.     @#@Q@PRDDT97   LABEL .  @E@@@QYZ
)@@G@@RDDT97   LABEL .                   ERROR TOKEN. RAISE ERROR @ @@@Q      ZA
)@@G@@   LINK    ONIOSN .     @G@@@Q         ONUNIT  ERIO99,ACCDER,1  RDGBFS,IZB
)@@G@@,R  DEXMK1,25  DEXMK2+FH2,75  @C@Q@P         EXERR ERIO99 LEVEL,1 .    EZC
)@@G@@RROR TOKEN  @#@@@PRDDT98   LABEL .  @D@@@P         SET   01,ON,IONUM .  ZD
)@@G@@     SET ERROR FLAG     @#@@@PRDDT99   LABEL .  @C@@@P         LINK  IORZE
)@@G@@DTK .            SCAN TO =    @C@@@P         LOADA X11,KKD0 .          SZF
)@@G@@ET DUMMY SD @D@@@P         IF    ACSEMI,SAME,DLXACN THEN,RDDATD . -> ';'ZG
)@@G@@@E@@@P         IF    LXBN,SAME,DLXCLN THEN,RDDT92 ELSE,RDDT99 .   @#@@@PZH
)@@G@@RDDT93   LABEL .  @B@@@P         LOAD    X11,IOSDAD .      GET SD @F@@@PZI
)@@G@@         IF      SDARRY,ON,SDCLS2  THEN,RDDT92 . ARRAY=>HAVE ADDR @E@@@PZJ
)@@G@@         LINK  WRADDR .            ADDR OF DATA IN X5 .     @#@@@PRDDT92ZK
)@@G@@   LABEL .  @ @@@P         LOAD  X11,IOSDAD .   @ @@@P         MOVE  IODZL
)@@G@@SP,SD2SP .  @ @@@P         MOVE  IODTF,SDCLSS   @D@Q@P         IF    ACEZM
)@@G@@Q, SAME,DLXACN THEN,RDD099 . -> =   @F@@@Q         IF    ACEQ,NSAME,DLXAZN
)@@G@@CN THEN,RDDT97 . -> TOKEN ERROR     @C@Q@P         EXERR   ERIO99 LEVEL,ZO
)@@G@@1 .  ERROR TOKEN  @ @Q@P         GOTO    RDDT98 .     @#@@@PRDD099   LABZP
)@@G@@EL .  @D@@@P         STORE X4,IODTA5 .         SET PTR TO DATA    @C@@@PZQ
)@@G@@         LINK  RDLIST .            GET VALUE    @E@@@P.        IF    LXRZR
)@@G@@SWD,SAME,DLXCLN THEN,RDDATD . ';' -> DONE @ @@@P         SET   01,OFF,IOZS
)@@G@@NUM . @D@@@Q         LOAD    A8,IOSDAD .       GET SD IF ALTER    @F@Q@PZT
)@@G@@         IF      0200,OFF,DSPLYA  THEN,RDD100 . NOT ALTER COMMAND @F@@@QZU
)@@G@@         IF      0200,ON,DSPLYA  THEN,RDD101 .  ALTER COMMAND     @A@Q@PZV
)@@G@@         SET     0200,OFF,DSPLYA .  @D@Q@P         LOAD    A8,IOSDAD .  ZW
)@@G@@     GET SD OF VARIABLE @ @Q@P         GOTO    RDD101 .     @#@@@PRDD100ZX
)@@G@@   LABEL .  @E@@@P         IF    0400,OFF,ARWORK+FQ1+2 THEN,RDDT00 . NO ZY
)@@G@@CHECK @B@@@P         SET   0400,OFF,ARWORK+FQ1+2 .    @ @@@P         LOAZZ
)@@G@@D  A8,IOCKSD .    @#@@@PRDD101   LABEL .  @ @@@P         LOADA X11,ION1FAA
)@@G@@F .   @ @@@P         STORE A8,W1,X11 .    @ @@@P         USING WORD,X11 AB
)@@G@@.     @F@@@P         MOVE  W1+1,RDDTCK .       SET 'GOTO RDDT00' (WAS RDAC
)@@G@@DTOO) @ @@@Q         USING   SDSECT,A3 .  @D@@@Q         LOAD    A3,A8  AD
)@@G@@  .       GET SD IN INDEX REG @D@@@Q         IF      SDARRY,OFF,SDCLS2  AE
)@@G@@THEN,RDD102 .     @C@@@Q         IF      0200,ON,DSPLYA  THEN,RDD103 .  AF
)@@G@@@E@@@Q         LOAD    A3,IODTA5 .       GET ADDR OF ARRAY ELMT   @C@@@QAG
)@@G@@         GOTO    ONCHKA .          CHECK ARRAY  @#@@@QRDD103   LABEL .  AH
)@@G@@@ @@@Q         LOAD    A3,IODTA5 .  @ @@@Q         GOTO    EXCHKA .     AI
)@@G@@@#@@@QRDD102   LABEL .  @E@@@Q         IF      0200,ON,DSPLYA  THEN,EXCHAJ
)@@G@@K  ELSE,ONCHK .   @ @@@Q         USING   SDSECT,X11 . @F@Q@P         GOTAK
)@@G@@O  EXCHK .             CHECK SD . RETURN VIA DATA AREA@#@@@PRDDATD   LABAL
)@@G@@EL .  @A@@@P         SET   ICGTDF,OFF,IOCBSF .  @A@@@P          MOVE  ARAM
)@@G@@EPTR,IOSTLT .     @D@@@P         IF    0400,ON,IONUM THEN,IORET0 . ->NULAN
)@@G@@L LIST@#@@@PRDDTD2   LABEL .  @^@@@P         UNSTK X11 .    @#@@@PRDDTD3AO
)@@G@@   LABEL .  @E@@@P         IF    W1H2,ZERO THEN,RDDTD1 .  ->END OF LIST AP
)@@G@@.     @^@@@P         ADD   X11,1,I .@D@@@P         GOTO  RDDTD3 .       AQ
)@@G@@     -> SCAN TO 'SD,0'  @#@@@PRDDTD1   LABEL .  @^@@@P         STACK X11AR
)@@G@@ .    @C@@@P         GOTO  IORET1 .            -> RETURN    @[@@@P/.    AS
)@@G@@@E@@@P.        WRADDR                    DATUM ADDRESS IN  X4     @[@@@PAT
)@@G@@.     @E@@@PWRADDR*   LOCAL  .                   USE A3-A4 SD IN IOSDAD AU
)@@G@@@D@@@P         LOAD  X4,0,I .             ASSUME STATIC     @ @@@P      AV
)@@G@@   LOAD  X11,IOSDAD .   @E@@@P         IF    SD0STA,ON,SDCLS0 THEN,WRADRAW
)@@G@@3 . ->YUP STATIC  @D@@@P         LSDP  A3,SDBKLK .         GET BLOCK AR AX
)@@G@@PTR   @C@@@P         LOAD  X4,SDBKDP,A3 .      BLOCK DEPTH  @C@@@P      AY
)@@G@@   ADD   X4,X10 .            LOCAL AR     @C@@@P         LOAD  X4,ARSTLKAZ
)@@G@@,X4 .      PROPER AR PTR@F@@@P         IF    SDPARM,OFF,SDCLS2 THEN,WRADBA
)@@G@@R3 . ->NO PARAMETER     @E@@@P         ADD   X4,SDPROF,X11 .      GET PABB
)@@G@@RAMETER OFFSET    @D@@@P         LOAD  X4,0,X4 .           PARAMETER ADDBC
)@@G@@RESS  @D@@@P         IF    SDMEMS,OFF,SDCLS2 THEN,JMP . ->DONE    @C@@@PBD
)@@G@@         ADD   X4,SDA1DP,X11 .      LOC. DV     @#@@@PWRADR4   LABEL .  BE
)@@G@@@D@@@P         IF    SDARST,ON,SDCLS1 THEN,JMP . ->STRING   @B@@@P      BF
)@@G@@   IF    SDARRY,ON,SDCLS2 THEN,JMP .@^@@@P         LOAD  X4,0,X4 .@#@@@PBG
)@@G@@         JMP .    @#@@@PWRADR3   LABEL .  @D@@@P         ADD   X4,SDLCOFBH
)@@G@@,X11 .      ADDR OF DATUM     @D@@@P         IF    SDMEMS,ON,SDCLS2 THENBI
)@@G@@,WRADR4 ELSE,JMP  @[@@@P.     @[@@@P.     @E@@@PRDDT4A   LLOC  .        BJ
)@@G@@           SEE IF SD IN USER LIST   @A@@@P                 USING IOCB,X3BK
)@@G@@ .    @E@@@P         STORE A1,IOCBA1 .         SAVE PRINTING REGS .     BL
)@@G@@@ @@@P         STORE X1,IOCBX1 .    @C@@@Q         LOAD    A3,A0 .      BM
)@@G@@     GET STACK PTR@D@@@Q         SUB     A3,2,I .          UNSTK TWO LOCBN
)@@G@@ALS   @D@@@Q         LOAD    X1,1,A3 .         GET PTR TO SD LIST @D@Q@PBO
)@@G@@         UNSTK X1 .                PTR TO USER LIST   @C@Q@P         STABP
)@@G@@CK   X1 .              RESET PRT    @^@@@P         SETGC 2,0,X1 . @#@@@PBQ
)@@G@@RDDT42   LABEL .  @C@@@P         GETC  .                   GET SD PTR   BR
)@@G@@@D@@@P         IF    A8,EQ,0,I THEN,RDDT44 .  ->END OF LIST @E@@@P      BS
)@@G@@   IF    A8,LT,0200000,I THEN,RDDT4B . ->NO CHECK     @B@@@P         SETBT
)@@G@@   0400,ON,ARWORK+FQ1+2 .     @ @@@P         SUB   A8,0200000,I . @ @@@PBU
)@@G@@         STORE A8,IOCKSD .    @#@@@PRDDT4B   LABEL .  @F@@@P         IF BV
)@@G@@   A8,EQ,IOSDAD THEN,RDDT4X . -> FOUND SD IN LIST     @B@Q@P         SETBW
)@@G@@   0400,OFF,ARWORK+FQ4+1 .    @B@@@Q         SET   0400,OFF,ARWORK+FQ1+2BX
)@@G@@ .    @^@@@P         GOTO  RDDT42 . @^@@@PRDDT44         LOCAL .  @E@@@PBY
)@@G@@         LOAD  A8,IOSDAD .         SD NOT FOUND IN LIST     @ @@@Q      BZ
)@@G@@   LOADXM  A1,IOCBA1 .  @ @@@Q         LOADXM  X1,IOCBX1 .  @ @@@Q      CA
)@@G@@   LINK    ONIOSN .     @E@Q@P         EXERR ERIO22 LEVEL,1 .    SDA8 NOCB
)@@G@@T IN GET LIST     @G@@@Q         ONUNIT  ERIO22,ACCDNA,1  RDGBFS,I,R  DECC
)@@G@@XMK1,25  DEXMK2+FH2,75 .@ @Q@P               UNSTK  X11 .   @^@@@Q      CD
)@@G@@   UNSTK  X11 .   @#@@@PRDDT4X   LABEL    @ @@@P         LOADXM A1,IOCBACE
)@@G@@1 .   @ @@@P         LOADXM X1,IOCBX1 .   @#@@@P         LJMP  .  @C@@@PCF
)@@G@@/.       EXPTDT                    PUT DATA     @E@@@P.        EXPTDA   CG
)@@G@@                 PUT DATA - ARRAY ELEMENT @E@@@P.                       CH
)@@G@@           R9=0 ALL R9=1 SDLIST     @#@@@PEXPTDT*  LOCAL .  @E@@@P      CI
)@@G@@   LOAD    R9,X1 .           GET LIST/NOLIST FLAG     @^@@@P         GETCJ
)@@G@@LNK X5 .    @C@@@P         LINK  EXIOIN .            SAVE REGS    @ @@@PCK
)@@G@@         MOVE  IOPDSV,AREPTR .@C@@@P         GOTO  WRDTAB .            -CL
)@@G@@>PUT ELEMENT@D@@@PEXPTDA*  LOCAL .                   PUT ARRAY ELT .    CM
)@@G@@@^@@@P         GETLNK X5 .    @^@@@P         LINK  EXIOIN . @ @@@P      CN
)@@G@@   MOVE  IOPDSV,AREPTR .@C@@@P         MOVE  IODTAF,0,I .        SET PUTCO
)@@G@@ DATA @B@@@P         LSDP  X5,0,X5 .           GET SD @ @@@P         USICP
)@@G@@NG SDSECT,X5 .    @E@@@P         IF    SDARRY,OFF,SDCLS2 THEN,WRDTA1 . -CQ
)@@G@@>SCALAR     @C@@@P         MOVE  IODTAF,2,I .        SET ARRAY ELT@D@@@PCR
)@@G@@         GOTO  WRCHB  .            CHECK ELT .(???)   @#@@@PWRCHB1   LABCS
)@@G@@EL .  @D@@@P         MOVE  IODTAF,0,I .        TURN ARRAY REF OFF @#@@@PCT
)@@G@@WRDTA1   LABEL .  @C@@@P         LOADA X11,IORET1 .        RETURN .     CU
)@@G@@@E@@@P/.       WRDTAI                    PUT DATA ITEM . SD IN X5 @[@@@PCV
)@@G@@.     @#@@@PWRDTAI   LOCAL .  @E@@@P         SET   ICGTDF,ON .          CW
)@@G@@           SET DATA FLAG@C@@@P         LINK  WRETAB .            TAB FILCX
)@@G@@E     @#@@@PWRDTX1   LABEL .  @ @@@P         MOVE  IODSP,SD2SP .  @ @@@PCY
)@@G@@         MOVE  IODTF,SDCLSS   @^@@@P.        PRINT NAME .   @ @@@P      CZ
)@@G@@   MOVE  SDDTPT,0,I .   @#@@@PWRDT02   LABEL .  @F@@@P         IF    SDMDA
)@@G@@EMS,OFF,SDCLS2 THEN,WRDT01 . -> NOT STRUCTURE   @ @@@P         LSDP  A3,DB
)@@G@@SDDAD .     @ @@@P         STORE X5,SDDTPT,A3 . @^@@@P         LOAD  X5,DC
)@@G@@A3 .  @D@@@P         GOTO  WRDT02 .            -> GO UP ONE LEVEL @C@@@PDD
)@@G@@WRDT01   LABEL .                   FOUND ROOT   @ @@@P         SET   1,ODE
)@@G@@N,IODTAF .  @#@@@PWRDT03   LABEL .  @E@@@P         LSDP  X1,SDBCHI .    DF
)@@G@@     POINT TO STRING NAME     @C@@@P         LOAD  A9,SDBCNT,X1 .      SDG
)@@G@@IZE OF NAME @C@@@P         SETGC 4,2,X1 .            PRINT NAME   @C@@@PDH
)@@G@@         LINK  WRPFLD .            PUT NAME     @E@@@P         IF    SDDDI
)@@G@@TPT,ZERO THEN,WRDT04 . ->NAME PRINTED     @#@@@P         PUTCH '.'@ @@@PDJ
)@@G@@         LOAD  X5,SDDTPT .    @E@@@P         GOTO  WRDT03 .            -DK
)@@G@@> NEXT PART OF NAME     @#@@@PWRDT04   LABEL .  @E@S@P         IF      0DL
)@@G@@40,ON,IODTAF  THEN,JMP . POINTER/OFFSET   @F@@@S         IF      040,OFFDM
)@@G@@,IODTAF  THEN,WRDTXX . NOT POINTER/OFFSET @F@@@S         SET     040,OFFDN
)@@G@@,IODTAF .  TURN OFF POINTER/OFFSET FLAG   @G@@@S         JMP .          DO
)@@G@@           RETURN FROM PRINTING NAME POINTED TO @#@@@SWRDTXX   LABEL .  DP
)@@G@@@F@@@P         IF      SDARRY,ON,SDCLS2 THEN,WRDT10 . IS THIS AN ARRAY? DQ
)@@G@@@#@@@PWRDT30   LABEL .  @F@Q@P         IF    SDVRCN,ON,IODCLS THEN,WRDTRDR
)@@G@@T . ->CONSTANT (LABEL)  @F@@@Q         IF    SDVRCN,ON,IODCLS THEN,JMP .DS
)@@G@@ ->CONSTANT (LABEL)     @D@@@Q         LOAD  A3,SDCLS0 .         GET DATDT
)@@G@@A TYPE OF SD@^@@@Q         AND,U A3,017 . @^@@@Q         LOAD  A3,A4 .  DU
)@@G@@@F@@@Q         LA,H1 A3,WRDTLS,A3 .      GET ROUTINE FOR THIS DATA TYPE DV
)@@G@@@^@@@Q         GOTO  0,A3 .   @C@@@QWRDT31   LABEL .                   PDW
)@@G@@RINT VALUE  @^@@@P         PUTCH '=' .    @E@@@P         IF    SDARST,ONDX
)@@G@@,IODCLS THEN,WRDT22 . -> STRING     @C@@@P         LINK  WRLIST .       DY
)@@G@@     PUT LIST     @G@@@PWRDTRT   LABEL .                     RETURN (NEWDZ
)@@G@@, WAS WRDTRT EQU JMP)   @C@@@P         JMP .                     ->RETUREA
)@@G@@N     @#@@@PWRDT22   LABEL .  @C@@@P         PUTCH '''' .              SEB
)@@G@@TRING QUOTES@D@@@P         MOVE  IOSAVL,511,I .    DOUBLE QUOTE CHECK   EC
)@@G@@@^@@@P         LINK  WRLIST . @ @@@P         MOVE  IOSAVL,0,I .   @^@@@PED
)@@G@@         PUTCH '''' .   @E@@@P         IF    SDCHBT,OFF,IODCLS THEN,WRDTEE
)@@G@@RT . ->NOT '1'B   @^@@@P         PUTCH 'B' .    @B@@@P         GOTO  WRDEF
)@@G@@TRT .            ->DONE @#@@@PWRDT10   LABEL .  @D@@@P         PUTCH '('EG
)@@G@@ .               SUBSCRIPT LIST     @ @@@P         SETL A10,SDNDIM .    EH
)@@G@@@E@@@P         LOAD  X4,IOSVSL .         SUB LIST PTR FOR ARRAYS  @^@@@PEI
)@@G@@WRDT11         LABEL .  @ @@@P         LOAD  A6,W1XH2,X4 .  @D@@@P      EJ
)@@G@@   CVE   A6,DCVFFT .         CONVERT TO ASCII   @ @@@P         SETGC 4,DEK
)@@G@@CVFFT .     @^@@@P         SETL A9,8,I .  @C@@@PWRDT19   LABEL .        EL
)@@G@@           IGNORE BLANKS@#@@@P         GETC .   @^@@@P         LOOP  A9,EM
)@@G@@WRDT14@#@@@PWRDT14   LABEL .  @C@@@P         IF    A8,EQ,' ',I THEN,WRDTEN
)@@G@@19 . ->BLANK@C@@@P         IF    A1,EQ,KLCH4W THEN,WRDT15 . ->Q1  @^@@@PEO
)@@G@@         SUB   A1,1,I . @#@@@PWRDT17   LABEL .  @C@@@P         ADD   A9,EP
)@@G@@2,I .            SIZE OF NAME @^@@@P         LINK  WRPFLD . @C@@@P      EQ
)@@G@@   LOOP  A10,WRDT16 .        ->NEXT SUB.  @^@@@P         PUTCH ')' .    ER
)@@G@@@^@@@P         GOTO  WRDT30 . @#@@@PWRDT16   LABEL .  @#@@@P         PUTES
)@@G@@CH ','@^@@@P         ADD   X4,1,I . @^@@@P         GOTO  WRDT11 . @E@@@PET
)@@G@@WRDT15   LABEL .                   SET TO S6 OF PREV WORD   @^@@@P      EU
)@@G@@   SUB   X1,1,I . @^@@@P         ADD   A1,5,I . @^@@@P         GOTO  WRDEV
)@@G@@T17 . @D@@@P/.       WRDTAB                    PUT DATA, SD LIST  @[@@@PEW
)@@G@@.     @[@@@P.     @#@@@PWRDTAB   LABEL .  @^@@@P         SETGC 2,0,X5 . EX
)@@G@@@C@@@P         MOVE  IODTAF,0,I .        RESET FLAGS  @ @@@P         STOEY
)@@G@@RE X1,DLXX1 .     @ @@@P         STORE A1,DLXX2 .     @#@@@PWRDTAJ   LABEZ
)@@G@@EL .  @C@@@P         IF R9,ZERO THEN,WRDTAL .  ->PUT ALL?   @#@@@PWRDTJ3FA
)@@G@@   LABEL .  @ @@@P         LOAD  X1,DLXX1 .     @ @@@P         LOAD  A1,FB
)@@G@@DLXX2 .     @B@@@P         GETC  .                   NEXT SD@D@@@P      FC
)@@G@@   IF    A8,EQ,0,I THEN,RDDTD2 . ->DONE, RETURN @ @@@P         STORE X1,FD
)@@G@@DLXX1 .     @ @@@P         STORE A1,DLXX2 .     @E@@@P         IF    A8,FE
)@@G@@LT,0200000,I THEN,WRDTJ4 . ->NO CHECK     @ @@@P         SUB   A8,020000FF
)@@G@@0,I   @#@@@PWRDTJ4   LABEL .  @B@@@P         LSDP  X5,A8 .             SFG
)@@G@@D PTR @#@@@PWRDTAK   LABEL .  @F@Q@P         IF      SD0PTR,ISON,SDCLS0 FH
)@@G@@ THEN,WRDTPR .  POINTER/OFFSET@G@@@Q         IF      SD0BSD+SD0CNT,ON,SDFI
)@@G@@CLS0  THEN,WRDTJ1 . NO BSD STRG YET @E@@@P         IF    SDSTRU,ON,SDCLSFJ
)@@G@@4 THEN,WRDTAS . ->STRUCTURE   @E@@@P         IF    SDARRY,ON,SDCLS2 THENFK
)@@G@@,WRDTAP . ->NOT SCALAR  @[@@@P.     @ @@@P.        SCALAR SD TO PRINT   FL
)@@G@@@[@@@P.     @#@@@PWRDTSM   LABEL .  @#@@@PWRDTS1   LABEL .  @C@@@P      FM
)@@G@@   LINK  WRDTSC .            ADDR OF DATA @C@@@P         LINK  WRDTAI . FN
)@@G@@           -> PUT ITEM .@#@@@PWRDTJ1   LABEL .  @F@S@P         SET     0FO
)@@G@@40,OFF,IODTAF .  TURN OFF POINTER/OFFSET FLAG   @G@@@P         IF  0400,FP
)@@G@@ON,IODTAF  THEN,WRDTAL  ELSE,WRDTJ3 . ALL OR SD LIST  @[@@@P.     @A@@@PFQ
)@@G@@.        POINTER OR OFFSET TO PRINT @[@@@P.     @#@@@PWRDTPR   LABEL .  FR
)@@G@@@E@Q@P         SET     040,ON,IODTAF .   SET POINTER/OFFSET FLAG  @D@Q@PFS
)@@G@@         STORE   X5,IOSDAD .       SAVE SD OF POINTER @F@Q@P         LINFT
)@@G@@K    WRDTAI .          PUT OUT POINTER/OFFSET NAME    @^@@@P         PUTFU
)@@G@@CH   '-' .  @^@@@P         PUTCH   '>' .  @D@S@P         LINK    WRADDR FV
)@@G@@.          GET ADDR OF POINTER@D@@@S         LOAD    X4,IODTAD .       GFW
)@@G@@ET ADDR OF POINTER@ @@@P         LOAD    X5,IOSDAD .  @ @@@P         USIFX
)@@G@@NG   SDSECT,X5 .  @E@@@P         IF      SDPTOF,ON,SDCLS1  THEN,WRPTR1 .FY
)@@G@@  OFFSET    @ @@@P         USING   POINTER,X4 . @E@@@P         IF      PFZ
)@@G@@TRADR,ZERO  THEN,WRPTR3  ELSE,WRPTR2 .    @#@@@PWRPTR1   LABEL .  @C@@@PGA
)@@G@@         IF      PTROFF,ZERO  THEN,WRPTR3 .     @D@@@PWRPTR2   LABEL . HGB
)@@G@@AVE VALID POINTER/OFFSET TO PRINT   @F@@@P         LOAD    X5,PTRSD .   GC
)@@G@@     GET SD OF THING POINTED TO     @F@S@P         LOADA   X11,WRDTJ1 . GD
)@@G@@     SET RETURN ADDR TO CONTINUE    @E@@@Q         SET     040,ON,IODTAFGE
)@@G@@ .   SET POINTER/OFFSET FLAG  @ @S@P         LOCAL . SAVE ADDR    @E@@@PGF
)@@G@@         GOTO    WRDTX1 .          PRINT OUT NAME POINTED TO@F@@@PWRPTR3GG
)@@G@@   LABEL .                   POINTER/OFFSET MAYBE ILLEGAL   @F@@@P      GH
)@@G@@   LOAD    A8,PTRSD .        GET SD OF THING POINTED TO     @E@@@P      GI
)@@G@@   IF      A8,EQ,DSDNUL  THEN,WRPTR2 .  NULL POINTER  @E@@@P         IF GJ
)@@G@@     A8,EQ,DSDNLO  THEN,WRPTR2 .  NULL OFFSET   @C@@@P         LOADA   XGK
)@@G@@1,WRDASH .       GET '\\\\'   @B@@@P         LOAD    A9,4,I .          4GL
)@@G@@ CHARS@E@@@P         SETGC   4,0,X1 .          SET GETC REGS TO GET \\\\GM
)@@G@@@C@@@P         LINK    WRPFLD .          PRINT \\\\   @C@Q@P         GOTGN
)@@G@@O    WRDTJ1 .          CONTINUE     @C@@@Q         JMP .                GO
)@@G@@     CONTINUE     @[@@@P.     @ @@@P.        ACCESS ADDR OF DATA  @[@@@PGP
)@@G@@.     @#@@@PWRDTSC   LOCAL .  @^@@@P         STORE X5,IOSDAD@^@@@P      GQ
)@@G@@   LINK  WRADDR . @ @@@P         STORE X4,IODTAD .    @ @@@P         STOGR
)@@G@@RE X4,IODTA5 .    @#@@@P         JMP   .  @A@@@P/.       ACCESS FIRST ELGS
)@@G@@T OF ARRAY  @[@@@P.     @[@@@P.     @B@@@PWRDTF1   LOCAL .              GT
)@@G@@     X5=SD  @B@@@P         LINK  WRDTSC .            DV ADDR@C@@@P      GU
)@@G@@   GOTO  WRDTF4 .            -> CONTINUE  @#@@@PWRDTF3   LOCAL .  @#@@@PGV
)@@G@@WRDTF4   LABEL .  @^@@@P         USING WORD,X4 .@C@@@P         LOAD  A8,GW
)@@G@@W1 .             GET V. 0.    @B@@@P         SETL  A9,IODTDM .         #GX
)@@G@@ DIMS @D@@@P         LOAD  X11,IODTVT .        SUB LIST START     @C@@@PGY
)@@G@@         LOADXI  X4,2,I .          SET INCREMENT@D@@@P         LOADXI  XGZ
)@@G@@11,1,I .          SET INCREMENT     @#@@@PWRDTF2   LABEL .  @C@@@P      HA
)@@G@@   LOAD  A10,W1+2,*X4 .       NEXT MPYR   @B@@@P         MPYS  A10,W1XH2HB
)@@G@@,*X11 .      MI*SI@C@@@P         ADD   A8,A10 .            V0T MI*SI    HC
)@@G@@@E@@@P         LOOP  A9,WRDTF2 .         -> FINISH SUBSCRIPT LIST @ @@@PHD
)@@G@@         STORE A8,IODTAD .    @ @@@P         STORE X4,IODTMP .    @#@@@PHE
)@@G@@         JMP   .  @^@@@P/.       PUT DATA NOLIST@#@@@PWRDTAL   LABEL .  HF
)@@G@@@D@@@P         IF    IODTAF,ZERO THEN,WRDTAQ . -> INITIALIZE@E@@@P      HG
)@@G@@   IF    0200,ON,IODTAF  THEN,WRCKA . -> CHECK STUFF  @C@@@P         LOAHH
)@@G@@D  X5,IODTSD .         CURRENT SD   @C@@@P         GOTO  WRDTAZ .       HI
)@@G@@     -> NEXT SD   @#@@@PWRDTAQ   LABEL .  @E@@@P         SET   0400,ON,IHJ
)@@G@@ODTAF .    INITIALIZED PUT DATA     @C@@@P         LSDP  X5,ARBSDP .    HK
)@@G@@     BLOCK SD     @C@@@Q         STORE   X5,SVBKSD .       SAVE BLOCK SDHL
)@@G@@@#@@@PWRDTAZ   LABEL .  @E@@@P         IF    SDNXDC,ZERO THEN,WRDTAD . -HM
)@@G@@>END OF BLOCK     @ @@@P         LSDP  X5,SDNXDC .    @[@@@P.     @G@@@PHN
)@@G@@.                IT WAS DECIDED TO TAKE OUT THE FOLLOWING LINE,SINCE    HO
)@@G@@@G@@@P.                PUT DATA IS TO BE USED MOSTLY FOR DEBUGGING ANYWAHP
)@@G@@Y     @[@@@P.     @F@@@P.        IF    SDPARM,ON,SDCLS2 THEN,WRDTAZ . IGHQ
)@@G@@NORE PARAMETERS   @F@@@P         IF    SD4RFE,OFF,SDCLS4 THEN,WRDTAZ . -HR
)@@G@@> NEVER REFERENCED@B@@@P         STORE X5,IODTSD .         SAVE SD@F@Q@PHS
)@@G@@         IF SD0BSD,ON,SDCLS0 THEN,WRDTAZ . SKIP BASED FOR NOW     @G@R@PHT
)@@G@@.        LOAD    A3,SDCLSO .       GET TYPE (GOTTEN IN ABOVE IF STMT)   HU
)@@G@@@G@@@R         LOAD    A3,SDCLS0 .       GET TYPE (GOTTEN IN ABOVE IF STHV
)@@G@@MT)   @E@Q@P         AND,U   A3,07 .           IGNORE STORAGE CLASS     HW
)@@G@@@E@@@Q         AND,U   A3,017 .           IGNORE STORAGE CLASS    @E@@@PHX
)@@G@@         LOAD    A3,A4 .           GET INTO X REG FOR JUMP  @D@Q@P      HY
)@@G@@   GOTO    *$+1,A3 .         JUMP THRU TABLE    @F@@@Q         LA,H2 A3,HZ
)@@G@@WRDTLS,A3 .      GET PROPER ROUTINE ADDRESS     @^@@@Q         GOTO  0,AIA
)@@G@@3 .   @#@@@QWRDTLS   LABEL .  @C@Q@P         +WRDTAZ .                  IB
)@@G@@0 ILLEGAL   @D@@@Q         +JMP,WRDTAZ .                  0 ILLEGAL     IC
)@@G@@@C@Q@P         +WRDTAR .                  1 ARITH     @C@@@Q         +WRID
)@@G@@DT31,WRDTAR .               1 ARITH @D@Q@P         +WRDTAZ .            IE
)@@G@@      2 ENTRY (IGNORE)  @E@@@Q         +JMP,WRDTAZ .                  2 IF
)@@G@@ENTRY (IGNORE)    @C@Q@P         +WRDTAR .                  3 STRUCTURE IG
)@@G@@@D@@@Q         +JMP,WRDTAR .                  3 STRUCTURE   @C@Q@P      IH
)@@G@@   +WRDTAR .                  4 STRING    @C@@@Q         +WRDT31,WRDTAR II
)@@G@@.               4 STRING@D@Q@P         +WRDTAZ .                  5 LABEIJ
)@@G@@L (IGNORE?!)@E@@@Q         +JMP,WRDTAZ .                  5 LABEL (IGNORIK
)@@G@@E?!)  @D@Q@P         +WRDTAZ .                  6 FILE (IGNORE)   @E@@@QIL
)@@G@@         +JMP,WRDTAZ .                  6 FILE (IGNORE)     @C@Q@P      IM
)@@G@@   +WRDTAR .                  7 POINTER   @D@@@Q         +WRDTPR,WRDTAR IN
)@@G@@.                  7 POINTER  @C@Q@P         +WRDTAZ .                 1IO
)@@G@@0 BLOCK     @C@@@Q         +JMP,WRDTAZ .                 10 BLOCK @B@Q@PIP
)@@G@@         +WRDTAZ .                 11 AREA@C@@@Q         +JMP,WRDTAZ .  IQ
)@@G@@               11 AREA  @F@Q@P         IF    SDSTRU,OFF,SDCLS4 THEN,WRDTIR
)@@G@@AZ . ->NOTSTRUCTURE     @#@@@PWRDTAR   LABEL .  @E@@@P         IF    SDMIS
)@@G@@EMS,ON,SDCLS2 THEN,WRDTAZ ELSE,WRDTAK     @#@@@PWRDTAD   LABEL .  @F@Q@PIT
)@@G@@         LSDP  X5,SDBKLK .         GET THE BLOCK SD FOR THIS VAR  @F@@@QIU
)@@G@@         LSDP  X5,SVBKSD .         GET THE BLOCK SD FOR THIS VAR  @G@@@PIV
)@@G@@         LSDP  X5,SDBKLK .         GO UP TO THE "BLOCK ABOVE" THIS ONE  IW
)@@G@@@C@@@Q         STORE   X5,SVBKSD .       SAVE BLOCK SD@ @@@P         LOAIX
)@@G@@D  A8,SDBKDP .    @E@@@P         IF    A8,EQ,0,I THEN,IORET0 . ->DONE  (IY
)@@G@@STATICS???) @D@@@P         GOTO  WRDTAZ .            -> DO NEXT BLOCK   IZ
)@@G@@@[@@@P.     @A@@@P.        PUT STRUCTURE OR ARRAY     @[@@@P.     @#@@@PJA
)@@G@@WRDTAP   LABEL .  @C@@@P         LOAD  A8,SDNDIM .         DIMS IN ARRAYJB
)@@G@@@^@@@P         GOTO  WRDTPX . @#@@@PWRDTAS   LABEL .  @B@@@P         LOAJC
)@@G@@D  A8,SDMXDM .         MAX DIM@#@@@PWRDTPX   LABEL .  @^@@@P         LOAJD
)@@G@@D  A9,A8 .  @C@@@P         STORE X5,IODTDE .         SET SUB START@D@@@PJE
)@@G@@         MOVE    IODTVT,AREPTR .   SAVE END OF AREC   @D@Q@P         ADDJF
)@@G@@   A8,AREPTR .             MOVE SUBSCRIPT @B@@@P         MOVE  IODTDM,0,JG
)@@G@@I .        0 DIMS @B@@@P         ADD   A9,A9 .             2* DIMS@C@@@PJH
)@@G@@         ADD   A9,A8 .             END OF LIST  @G@@@PWRDTP1   LABEL .  JI
)@@G@@                 LOOP TO SEE IF ENOUGH ROOM GOTTEN    @F@@@Q         STKJJ
)@@G@@CHK  A9,R .            SSEE IF ENOUGH ROOM ON STACK   @F@Q@P         IF JK
)@@G@@   A9,LT,ADPCND THEN,WRDTP2 . -> NO STACK OVERFLOW    @D@Q@P         LINJL
)@@G@@K    WROVFL .          GO GET MORE ROOM   @C@Q@P         GOTO    WRDTP1 JM
)@@G@@.          SEE IF ENOUGH@D@@@PWRDTP2   LABEL .                   ENOUGH JN
)@@G@@ROOM HERE   @D@Q@P         STORE   A9,AREPTR .             SET AREPTR   JO
)@@G@@@D@@@Q         ADD   A8,IODTVT .             MOVE SUBSCRIPT @^@@@P      JP
)@@G@@   SUB   A8,2,I . @D@@@P         STORE A8,IODTNX .         SET NEXT LISTJQ
)@@G@@ ELT  @^@@@P         LOAD  A3,A8 .  @^@@@P         USING WORD,A3 .@D@@@PJR
)@@G@@         MOVE  W1+2,0,I .          SET 0 FIRST ENTRY  @E@@@PWRDTD1   LABJS
)@@G@@EL .                   SEE IF ADDING NEW DIM    @D@@@P         IF    SDAJT
)@@G@@RRY,OFF,SDCLS2 THEN,WRDTE1 . ->NOPE @G@@@P         LINK  WRDTSC .       JU
)@@G@@     POINT TO THE DV OF THE NEW BROTHER   @B@@@P         LOAD  A8,SDNDIMJV
)@@G@@ .         # DIMS @C@@@P         IF    A8,NE,IODTDM THEN,WRDTE0 . ->YUP JW
)@@G@@@ @@@P         USING IODSTK,A3 .    @D@@@P         LOAD    A3,IODTNX .  JX
)@@G@@     GET THE POINTER    @F@@@P         STORE   X4,IODLBD .       POINT TJY
)@@G@@O THE DV FOR THIS ONE   @G@@@P         GOTO    WRDTE1 .          NO NEW JZ
)@@G@@DIMENSIONS TO ADD TO THE LIST @#@@@PWRDTE0   LABEL .  @[@@@P.     @D@@@PKA
)@@G@@.                                  NEW VECTOR ENTRY   @D@@@P.        SOMKB
)@@G@@E NEW SUBSCRIPTS MUST BE ADDED TO THE LIST@[@@@P.     @F@@@P         LOAKC
)@@G@@D  A9,A8 .             SAVE THE CURRENT # OF DIM'S    @D@@@P         LOAKD
)@@G@@D  A3,IODTNX .         LAST VECTOR PTR    @^@@@P         ADD   A3,2,I . KE
)@@G@@@C@@@P         SUB   A8,IODTDM .         DELTA DIMS   @B@@@P         STOKF
)@@G@@RE X5,IODSDL .         SAVE SD@C@@@P         STORE A8,IODNDM .         SKG
)@@G@@AVE NO. DIMS@C@@@P         STORE A9,IODTDM .         TOTAL DIMS   @D@@@PKH
)@@G@@         STORE   A3,IODTNX .       SAVE PRT TO STACK  @G@@@P         STOKI
)@@G@@RE X4,IODLBD .         SAVE PTR TO THE DV FOR THE NEW SON   @C@@@P      KJ
)@@G@@   LOAD  A8,IODTDM .         TOTAL  DIMS  @ @@@P         SUB   A8,IODNDMKK
)@@G@@ .    @^@@@P         ADD   A8,A8 .  @C@@@P         ADD   X4,A8 .        KL
)@@G@@     PTR TO DV    @D@@@P         ADD   X4,2,I .            MPYR-BOUND  PKM
)@@G@@AIR   @B@@@P         SRB   A8,1 .              # DIMS @D@@@P         ADDKN
)@@G@@   A8,IODTVT .         SUBSC LIST START   @^@@@P         LOAD  X11,A8 . KO
)@@G@@@C@@@P         SETL  A8,IODNDM .         SET LP COUNT @ @@@P         LOAKP
)@@G@@DXI X11,1,I  .    @ @@@P         LOADXI X4,2,I  .     @#@@@PWRDTD4   LABKQ
)@@G@@EL .  @D@@@P         LOAD  A9,W1+1,*X4 .       SET LOWER BOUNDS   @ @@@PKR
)@@G@@         STORE A9,W1,*X11 .   @D@@@P         LOOP  A8,WRDTD4 .         AKS
)@@G@@(L1,L2,...,LN)    @D@@@PWRDTE1   LABEL .                   SCAN TO FIRSTKT
)@@G@@ SON  @E@@@P         IF    SDSTRU,OFF,SDCLS4 THEN,WRDTE2 . -> AT LEAF   KU
)@@G@@@ @@@P         LSDP  X5,SDSON .     @^@@@P         GOTO  WRDTD1 . @B@@@PKV
)@@G@@WRDTE2   LABEL .                   AT LEAF@ @@@P         STORE X5,IODTCSKW
)@@G@@ .    @D@@@P         IF    SDARRY,ON,SDCLS2 THEN,WRDTE3 . -> ARRAY@C@@@PKX
)@@G@@         LINK  WRDTSC .            DATUM ADDR   @ @@@P         PUTLNK WRKY
)@@G@@DTG1,I .    @#@@@PWRDTE5   LABEL .  @F@@@P         IF    010,ON,IODTAF TKZ
)@@G@@HEN,WRDTE7 . -> STRING PSEUDO VAR   @C@@@P         STORE X4,IODTA5 .    LA
)@@G@@     SAVE ADDR    @#@@@P.        CHECK????@F@@@P         IF    0200,OFF,LB
)@@G@@IODTAF THEN,WRDTAI . -> NOPE (0600???)    @ @@@P         PUTLNK WRDTG1,ILC
)@@G@@ .    @C@@@P         GOTO  WRDTAI .            -> PRINT ITEM@#@@@PWRDTE7LD
)@@G@@   LABEL .  @D@Q@P         EXERR ERIO66 LEVEL,1 .    STRING PSEUDO VAR .LE
)@@G@@@D@@@Q         ONER    ERIO66,3 .      STRING PSUEDO VAR    @C@@@PWRDTE3LF
)@@G@@   LABEL .                   ARRAY IN LEAF@C@@@P         LOAD    A3,IODTLG
)@@G@@NX .       RESET POINTER@E@@@P         LOAD X4,IODLBD .         SPOINT TLH
)@@G@@O DOPE VECTOR     @C@@@P         LINK  WRDTF3 .            FIRST ADDR   LI
)@@G@@@C@@@P         LOAD  A3,IODTNX .         STK ADDR     @B@@@P         LOALJ
)@@G@@D  A8,IODSDL,A3 .      SD ADDR@C@@@P         IF    A8,EQ,X5 THEN,WRDTE4 LK
)@@G@@. FIRST ELT @ @@@P         PUTLNK WRDTG1,I .    @#@@@PWRDTE6   LABEL .  LL
)@@G@@@E@@@P         MOVE  IOSVSL,IODTVT .     SUBSCRIPT LIST START     @B@@@PLM
)@@G@@         LOAD  X4,IODTAD .         DATUM  @D@@@P         GOTO  WRDTE5 . LN
)@@G@@           ->PRINT STRING     @C@@@PWRDTG1   LABEL .                   GLO
)@@G@@ET NEXT SON @C@@@P         LOAD  X5,IODTCS .         CURRENT SD   @C@@@PLP
)@@G@@         LOAD  A3,IODTNX .         STACK ENTRY  @B@@@P         LOAD  A8,LQ
)@@G@@IODSDL,A3 .      SD     @D@@@P         IF    A8,NE,X5 THEN,WRDTG2 . -> GLR
)@@G@@O TO BROTHER@C@@@PWRDTG5   LABEL .                   (WAS WRGTG5) @ @@@PLS
)@@G@@         LOAD  A9,IODTDM .    @C@@@P         LOAD  X4,IODTNX .         PLT
)@@G@@OP STACK    @C@@@P         SUB   A9,IODNDM,X4 .      OLD # DIMS   @ @@@PLU
)@@G@@         STORE A9,IODTDM .    @D@@@P         SUB   X4,2,I .            LLV
)@@G@@AST SUBSCRIPT     @ @@@P         STORE X4,IODTNX .    @#@@@PWRDTG2   LABLW
)@@G@@EL .  @^@@@P         LOAD  A8,X5 .  @C@@@P         IF    A8,EQ,IODTDE THLX
)@@G@@EN,WRDTG3 . ->DONE@D@@@P         IF    SDBROT,ZERO THEN,WRDTGX . ->NO BRLY
)@@G@@OTHER @ @@@P         LSDP  X5,SDBROT .    @^@@@P         GOTO  WRDTD1 . LZ
)@@G@@@#@@@PWRDTGX   LABEL .  @D@@@P         LSDP  X5,SDDAD .          GO UP OMA
)@@G@@NE LEVEL    @C@@@P         LOAD  X4,IODTNX .         GET SUB LIST @ @@@PMB
)@@G@@         LOAD  A8,IODSDL,X4 . @D@@@P         IF    A8,NE,X5 THEN,WRDTG2 MC
)@@G@@. -> GET BROTHER  @A@@@P.        UP SUBSCRIPT VECTOR BY 1   @B@@@P      MD
)@@G@@   LOAD  A3,IODTDM .         # DIMS @C@@@P         ADD   A3,IODTVT .    ME
)@@G@@     SUB START    @ @@@P         USING   IODSTK,X4 .  @E@@@P         SETMF
)@@G@@L  A9,IODNDM .         # DIMS AT THIS LEVEL     @C@@@P         LOAD  X11MG
)@@G@@,IOSVSL .        LOWER BOUND  @C@@@P         ADD   X11,IODNDM,X4 .     2MH
)@@G@@* SUBSCRIPT @ @@@P         ADD   X11,IODNDM,X4 .@#@@@PWRDTG4   LABEL .  MI
)@@G@@@C@@@P         SUB   X11,2,I .           ONE PAIR BACK@^@@@P         SUBMJ
)@@G@@   A3,1,I . @C@@@P         LOAD  A8,W1,A3 .          UP SUBSCRIPT @G@@@PMK
)@@G@@         AH      A8,HALVS .        EXTENT-1,SUB+1 .       ************* ML
)@@G@@@ @@@P         STORE A8,W1,A3 .     @ @@@P         USING WORD,X11 .     MM
)@@G@@@G@@@P         IF    A8,GE,0,I  THEN,WRDTE1 .  <UPPER BOUND(NOTE AH TRICMN
)@@G@@K!!!) @C@@@P         LOAD  A8,W1 .           SET LOWER BOUND@ @@@P      MO
)@@G@@   STORE A8,W1,A3 .     @E@@@P         LOOP  A9,WRDTG4 .         ->GO TOMP
)@@G@@ NEXT SUBSCRIPT   @D@@@P         GOTO  WRDTG5 .            ->END OF ARRAMQ
)@@G@@Y     @D@@@PWRDTG3   LABEL .                   END OF STRUCTURE   @F@@@PMR
)@@G@@         IF    010,OFF,IODTAF THEN,WRDTJ1 .  ->NOT STRING P.V.    @C@@@PMS
)@@G@@         LOAD  X4,IOPDSV .         RESET AREPTR @E@@@P         +0       MT
)@@G@@                 BOMB - STRING PV NOT IN  @D@@@PWRDTE4   LABEL .        MU
)@@G@@           LOOP THROUGH ARRAY @ @@@P         LOAD  X4,IODTNX .    @ @@@PMV
)@@G@@         SETL  A8,IODNDM,X4 . @ @@@P         STORE A8,IODTLP .    @ @@@PMW
)@@G@@         LOAD  A8,IODTVT .    @D@@@P         ADD   A8,IODTDM .         SMX
)@@G@@UBSCRIPT VECTOR   @^@@@P         SUB   A8,1,I . @C@@@P         STORE A8,MY
)@@G@@IODTAV .         SAVE ADDRESS @C@@@P         LINK  WRDTE6 .            PMZ
)@@G@@RINT ELT 1. @D@@@PWRDTH1   LABEL .                   ACCESS NEXT ELT    NA
)@@G@@@ @@@P         USING IODSTK,A3 .    @B@@@P         LOAD    A3,IODTNX .  NB
)@@G@@     GET STK@ @@@P         LOAD  X5,IODSDL .    @B@@@P         LOAD  A8,NC
)@@G@@IODTLP .         # SUBS @G@@@P         LOAD  X4,IODTAV .         SUB VECND
)@@G@@TOR      *********************@B@@@P         LOAD  X11,IODTMP .        MNE
)@@G@@PYR   @C@@@P         LOAD  A3,IODTAD .         DATUM ADDR   @#@@@PWRDTH3NF
)@@G@@   LABEL .  @ @@@P         LOAD  A9,W1,X4 .     @E@@@P         AH      ANG
)@@G@@9,HALVS .       USE ADD HALVES TRICK AGAIN@D@@@P         STORE A9,W1,X4 NH
)@@G@@.          UP SUBSCRIPT BY 1  @D@@@P         IF    A9,LT,0,I  THEN,WRDTHNI
)@@G@@2 . -> UP BND     @B@@@P         ADD   A3,W1,X11 .         MPYR   @D@@@PNJ
)@@G@@         STORE A3,IODTAD .         NEW ADDR OF DATUM  @C@@@P         PUTNK
)@@G@@LNK WRDTH1,I .         SET RETURN   @^@@@P         GOTO  WRDTE6 . @F@@@PNL
)@@G@@WRDTH2   LABEL .                   AT UP BND,GO TO NEXT  SUBSCRIPT@D@@@PNM
)@@G@@         LOAD  A9,W1+1,X11 .       GET EXT,LOW BND    @ @@@P         STONN
)@@G@@RE A9,W1,X4 .     @C@@@P         LOAD    A9,W1H1+1 .       GET EXT-1    NO
)@@G@@@D@@@P         MPYS  A9,W1 .             MPYR*(LOW-UPPER)   @C@@@P      NP
)@@G@@   SUB   A3,A9 .             SUB ADDRESS  @^@@@P         SUB   X11,2,I .NQ
)@@G@@@^@@@P         SUB   X4,1,I . @D@@@P         LOOP  A8,WRDTH3 .         -NR
)@@G@@> PRINT VALUE     @D@@@P         GOTO  WRDTG1 .            ->NEXT BROTHENS
)@@G@@R     @^@@@P/.       CHECK CONDITION@C@@@QONCHK*   LOCAL .  CHECK ENTRY NT
)@@G@@PT W/ON UNITS     @G@@@Q         ONUNIT  0,ACCHK,0  JMP1,EXCHK1,JMP1  DENU
)@@G@@XWK1,0  DEXMAX,0 'NOMSG'@#@@@QEXCHK1   LABEL .  @^@@@Q         UNSTK   XNV
)@@G@@11 .  @D@@@PEXCHK*   LLOC .                    CHECK ENTRY POINT. @E@@@PNW
)@@G@@         FLINK X5,EXMST .          SAVE REGS IN ACT REC     @D@@@P      NX
)@@G@@   LOADA X11,WRDTAK .        SET RETURN ADDRESS @#@@@PWRCHKCX  LLOC .   NY
)@@G@@@C@@@P         MOVE  IODTAF,0,I .        RESET FLAGS  @E@@@PWRCHKC   LOCNZ
)@@G@@AL .                   ROUTINE TO SETUP SYSPRINT@E@@@P         LOAD  X5,OA
)@@G@@AREPTR .         POINT TO CHECK WORKSPACE @ @@@P         STORE X5,IOPDSVOB
)@@G@@ .    @ @@@P         STORE R9,IODSR9 .    @B@@@P         STORE X5,DEXOP0OC
)@@G@@+3 .       SAVE IT@E@@@P         LOADA A3,IODTND,X5 .      END OF CHECK OD
)@@G@@WORKSPACE   @G@@@P         STORE A3,AREPTR .         ADD CHECK WORKSPACEOE
)@@G@@ TO STACK ENTRY   @ @@@P         STORE A1,IODTAS,X5 . @ @@@P         STOOF
)@@G@@RE X1,IODTXS,X5 . @D@@@P         MOVE  IODTCK,ARWORK,3 .   SAVE CURRENT OG
)@@G@@IO    @D@@@P         LOADA X3,KFDOUT .         GET SYSPRINT IOCB  @#@@@POH
)@@G@@         WRIOCB . @ @@@P         STORE X3,ARWORK .    @ @@@P         LOAOI
)@@G@@D  F,IOCBF1 .     @D@@@P         LOAD  A2,IOCBA1 .          SET PUTC REGOJ
)@@G@@S     @ @@@P         LOAD  X2,IOCBX1 .    @^@@@P         LOADXI A2,1,I .OK
)@@G@@@^@@@P         LOADXI X2,1,I .@E@@@P         MOVE  ARWORK+FH2+2,0,I .   OL
)@@G@@           RESET FLAGS  @E@@@P         LOAD  A7,IOCBLF-FH1 .      SET CHOM
)@@G@@ARS LEFT IN BUFF  @^@@@P         SSA   A7,18 .  @E@@@P         IF    020ON
)@@G@@,OFF,IODTAF THEN,WRCHKF . ->NOT UDEF ENTRY@#@@@QWRCHKE   LABEL .  @D@Q@POO
)@@G@@         EXERR 0 LEVEL,4 . ->OOPS!!!! NOT IN PLUM     @E@@@Q         ONEOP
)@@G@@R    0,4 .             ->OOPS!!!! NOT IN PLUM   @#@@@PWRCHKF   LABEL .  OQ
)@@G@@@ @@@P         MOVE  IODTAF,0600,I .@^@@@P         LOAD  R9,0,I . @E@@@POR
)@@G@@         IF    IOCBST,OFF THEN,WRCH1G . ->BUFFER NOT STARTED@D@@@P      OS
)@@G@@   LINK  WRSKIP .            MOVE TO NEXT LINE  @#@@@PWRCH1G   LABEL .  OT
)@@G@@@E@@@P         LOAD  X5,ARSV11 .         POINT TO RETURN ADDR (SD)@^@@@POU
)@@G@@         LSDP  X5,0,X5 .@C@@@P         JMP . ->DO SOMETHING (CHECK VARIAOV
)@@G@@BLE)  @[@@@P.     @B@@@P.        RETURN FROM CHECKING VARIABLE    @#@@@POW
)@@G@@WRCKB    LABEL .  @#@@@PWRCKA    LABEL .  @E@Q@P         IF    020,OFF,IOX
)@@G@@ODTAF THEN,WRCHC . ->NOT UDEF ENTRY @E@@@Q         IF    020,ON,IODTAF TOY
)@@G@@HEN,WRCHKE . -> UDEF ENTRY    @^@Q@P         EXERR 0 LEVEL,4@#@@@PWRCHC OZ
)@@G@@   LABEL .  @G@@@P         PUTCH ';'                                   TPA
)@@G@@ERMINAL SEMICOLON @D@@@P         LINK  WRSKIP .               PUSH OUT LPB
)@@G@@INE   @ @@@P         LOAD  X5,IOPDSV .    @B@@@P         MOVE  ARWORK,IOPC
)@@G@@DTCK,3 .   RETURN @ @@@P         STORE X5,AREPTR .    @ @@@P         LOAPD
)@@G@@D  R9,IODSR9 .    @ @@@P         STORE A7,IOCBLF .    @ @@@P         STOPE
)@@G@@RE A2,IOCBA1 .    @ @@@P         STORE X2,IOCBX1 .    @ @@@P         LOAPF
)@@G@@D  A1,IODTAS  .   @ @@@P         LOAD  X1,IODTXS .    @D@@@P         FLIPG
)@@G@@NK X5,EXML .           ->SET RETURN REGS  @C@@@P         LJMP  1 .      PH
)@@G@@           ->RETURN     @[@@@P.     @[@@@P.     @[@@@P.     @[@@@P.     PI
)@@G@@@[@@@P.     @[@@@P.     @[@@@P.     @[@@@P.     @B@@@QONCHKA*  LOCAL .  PJ
)@@G@@ENTRY PT W/ON UNITS     @G@@@Q         ONUNIT  0,ACCHK,0  JMP1,EXCHA1,JMPK
)@@G@@P1  DEXWK1,0  DEXMAX,0 'NOMSG'@#@@@QEXCHA1  LABEL .   @^@@@Q         UNSPL
)@@G@@TK   X11 .  @D@@@PEXCHKA*  LLOC .                    ARRAY ELT CHECK    PM
)@@G@@@E@@@P         STORE A3,IODTA5 .         SAVE PTR TO ARRAY ELT    @C@@@PPN
)@@G@@         FLINK X5,EXMST .          SAVE REGS    @D@@@P         LINK  WRCPO
)@@G@@HKCX .           SETUP SYSPRINT INFO@#@@@PWRCHB    LABEL .  @D@@@P      PP
)@@G@@   LOAD  A8,IODTA5 .         SAVE PTR TO DATUM  @E@@@P         LINK  WRDPQ
)@@G@@TSC .            GET DOPE VECTOR IN X4    @D@@@P         STORE A8,IODTA5PR
)@@G@@ .         RESET DATUM PTR    @G@@@T         STORE   A8,IODTAD .       SPS
)@@G@@AVE DATUM ADDR IN CASE IT'S PTR     @B@@@P         LOAD  X11,X4 .       PT
)@@G@@     SAVE IT@E@@@P         ADD   X4,2,I .            POINT TO FIRST BOUNPU
)@@G@@D     @ @@@P         SETL  A8,SDNDIM,X5 . @^@@@P         LOAD  A3,0,I . PV
)@@G@@@#@@@PWRCHKP   LABEL .  @B@@@P         LOAD  A4,W1,X4 .          GET MI PW
)@@G@@@B@@@P         MPYS  A4,W1XH2+1,X4 .      MI*LI @C@@@P         ADD   A3,PX
)@@G@@A4 .             SUM MI*LI    @C@@@P         ADD   X4,2,I .            NPY
)@@G@@EXT BOUND   @D@@@P         LOOP  A8,WRCHKP .         COMPUTE OFFSET     PZ
)@@G@@@I@@@P         ADD   A3,W1,X11 .         ADD VO. ADDRESS OF FIRST ELT OFQA
)@@G@@ ARRAY -(1,1,1    @C@@@P         SUB   A3,IODTA5 .         DATUM ADDRESSQB
)@@G@@@D@@@P         LOADN A3,A3 .             COMPUTE SUBSCRIPTS @D@@@P      QC
)@@G@@   SETL  A8,SDNDIM,X5 .      LOOP FOR SUBSCRIPTS@E@@@P         LOAD  X4,QD
)@@G@@AREPTR .         PLACE FOR SUBSCRIPT ARRAY@B@@@P         STORE X4,IOSVSLQE
)@@G@@ .         SAVE IT@^@@@P         LOAD  A9,X4 .  @E@@@P         ADD   A9,QF
)@@G@@A8 .             POINT TO NEXT AREPTR-1   @^@@@P         ADD   A9,1,I . QG
)@@G@@@ @@@P         STORE A9,AREPTR .    @#@@@PWRCHKQ   LABEL .  @D@@@P      QH
)@@G@@   DSA   A3,36 .             FIND SUBSCRIPT     @ @@@P         DIV   A3,QI
)@@G@@2,X11 .     @A@@@P         ADD   A3,W1XH2+3,X11 .     @^@@@P         STOQJ
)@@G@@RE A3,0,X4 .@^@@@P         LOAD A3,A4 .   @^@@@P         ADD   X4,1,I . QK
)@@G@@@^@@@P         ADD   X11,2,I .@ @@@P         LOOP  A8,WRCHKQ .    @G@@@PQL
)@@G@@         IF    02,ON,IODTAF THEN,WRCHB1 . ->NORMAL PUT DATA ARRAY ELT   QM
)@@G@@@D@@@P         LOADA X11,WRCKB .         CHECK CONDITION    @D@@@P      QN
)@@G@@   LOCAL .                   SAVE RETURN ADDRESS@C@@@P         GOTO  WRDQO
)@@G@@TX1              PRINT DATUM  @#@@@PEXDT1    CSECT 3  @#@@@PRDDTCK   SFWQP
)@@G@@   0 .@D@@@P         GOTO  RDDT00 .            FAKE UP RETURN     @#@@@PQQ
)@@G@@WRDASH   SFW   0 .@B@@@P         '\\\\' .                  DASHES @E@@@PQR
)@@G@@RDLWER   INSERT  5,'LOW','ER  ' .  FOR MSGS ERIO05 & 06     @B@@@PRDUPERQS
)@@G@@   INSERT  5,'UPP','ER  ' .  ''     @#@@@P         CEND     @#@@@PHALVS QT
)@@G@@   -1,+1 .  @C@@@PSDDTPT   EQU   SDXREF .            DATA SD PTR  @E@@@PQU
)@@G@@ERIO08   EQU     31 .              'TOKEN' IS INVALID NAME  @E@@@PERIO02QV
)@@G@@   EQU  37 .                 'SDX5' STRUCTURE ERROR   @F@@@PERIO03   EQUQW
)@@G@@  38 .                 'SDA8' NOT ALLOWED IN GET LIST @D@@@PERIO04   EQUQX
)@@G@@  39 .                 'SDA8' ARRAY ERROR @C@@@PERIO99   EQU  40 .      QY
)@@G@@           ERROR TOKEN  @G@@@PERIO05   EQU  41 .                 'SDA8' QZ
)@@G@@BOUND ERROR. 'FA10' USED .    @E@@@PERIO06   EQU  42 .                 'RA
)@@G@@SDA8' BOUND ERROR .     @D@@@PERIO07   EQU  43 .                 'SDA8' RB
)@@G@@NAME ERROR .@E@@@PERIO22   EQU  44 .                 STRA8 NOT IN GET LIRC
)@@G@@ST    @D@@@PERIO66   EQU  46 .                 STRING PSEUDO VAR  @]@@@PRD
)@@G@@         END___        GET SYSPRINT IOCB  @#@@@P         WRIOCB . @ @@@PRE
)@@G@@*[S@@@*SDFF*@#@@@S         AXR$ .   @#@@@S         DCLRG .  @#@@@S      RF
)@@G@@   UNLIST . @#@@@S@ADD PLTVDS .     @#@@@S         LIST .   @]@@@S@ADD ERG
)@@G@@XCDS .@#@@@S         PLAR .   @#@@@S         PLSD .   @#@@@S         PLWRH
)@@G@@ORD . @#@@@S         PLBASE . @ @@@S         USING   AREC,X10 .   @E@@@SRI
)@@G@@EXBASE   CSECT   3 .               SET LOCATION COUNTER     @E@@@TONEZERRJ
)@@G@@   +1,0 .                    WORD FOR ALLOCATE STMT   @[@@@S.     @[@@@SRK
)@@G@@.     @[@@@S.     @I@@@SSETON*   PROC    *1,2 .            PROC TO SET ARL
)@@G@@ FLAG INTO A15 FOR ALLOCATE STMT    @D@@@S         OR,U    A15,SETON(1,1RM
)@@G@@) .  TURN THE FLAG ON!  @D@T@S         LA      A15,A16 .         GET BACRN
)@@G@@K INTO A15  @D@@@T         LA      A15,A15+1 .       GET BACK INTO A15  RO
)@@G@@@#@@@S         END .    @[@@@T.     @ @@@T.        CONSTANTS USED HEREINRP
)@@G@@@[@@@T.     @I@@@TERILPT   EQU     105               . ILLEGAL OR NULL PRQ
)@@G@@OINTER USED TO QUALIFY DAT    @E@@@TERILOF   EQU     106 .             IRR
)@@G@@LLEGAL OR NULL OFFSET   @H@@@TERPTUN   EQU     107 .             UNLINKIRS
)@@G@@NG OF ALL POINTERS TO <GENSD,X11>   @I@@@TERSTRU   EQU     108 .        RT
)@@G@@     LEAVES MATCH, MAJOR STRUCTURES ARN'T SAME SHA    @G@@@TERMATC   EQURU
)@@G@@     109 .             LOCATOR OF 'SDA1' USED FOR 'SDA2'    @H@@@TERCOPTRV
)@@G@@   EQU     110 .             ILLEGAL OFFSET CONVERTED TO NULL POINTER   RW
)@@G@@@I@@@TERCOOF   EQU     111 .             ILLEGAL POINTER TO OFFSET CONVERX
)@@G@@RSION ATTEMPTE    @H@@@TERILAR   EQU     112 .             AREA SPECIFIERY
)@@G@@D IN FREE STMT. NOT CORRECT   @H@@@TERILFR   EQU     113 .             ARZ
)@@G@@TTEMPT TO FREE NON BASED/CONTROLLED VAR   @B@@@S/.       ROUTINES TO HANSA
)@@G@@DLE BASED STORAGE @[@@@S.     @D@@@SPTRUNL*  LLOC .                    USB
)@@G@@NLINK POINTERS    @[@@@S.     @E@@@S.        ADDRESS OF POINTER TO UNLINSC
)@@G@@K IS IN A3, USES A1     @[@@@S.     @G@@@S.                NOTE THAT DURSD
)@@G@@ING THE FREEING OF A VARIABLE YOU DON'T   @G@@@S.                WANT THSE
)@@G@@E ERROR MESSAGE ABOUT LAST POINTER TO SOMETHING @I@@@S.                BSF
)@@G@@EING FREED... IT CAN BE AVOIDED BY SETTING 'FREING' TO NONZERO    @A@@@SSG
)@@G@@.                BEFORE COMING HERE!@[@@@S.     @ @@@S         USING   PSH
)@@G@@OINTER,A3 . @F@@@S         IF PTRLAS,ZERO THEN,LJMP . IF ZERO THEN ALREASI
)@@G@@DY UNLINKED @G@@@S         LOCAL .                   SAVE RETURN ADDRESSSJ
)@@G@@ SO WE CAN USE X11@C@@@S         LOAD    X11,PTRLAS,A3 .   GET PTRLAS(P)SK
)@@G@@@C@@@S         LOAD    A1,PTRNXT,A3 .    GET PTRNXT(P)@F@@@S         STOSL
)@@G@@RE   A1,PTRNXT,X11 .   PTRNXT(PTRLAS(P))=PTRNXT(P)    @G@@@S         MOVSM
)@@G@@E    PTRLAS,0,I .      PTRLAS(P)=0   (SAY IT IS UNLINKED)   @H@@@S      SN
)@@G@@   MOVE    PTRADR,0,I .      PTRADR(P)=0   (SAY IT IS ILLEGAL POINTER)  SO
)@@G@@@G@@@S         IF A1,EQ,0,I THEN,PTRUN1 . IS THIS THE LAST POINTER OF RISP
)@@G@@GHT?  @I@@@S         STORE   X11,PTRLAS,A1 .   PTRLAS(PTRNXT(P))=PTRLAS(SQ
)@@G@@P) (NOT LAST ON RIGH    @F@@@S         JMP .                     RETURN,SR
)@@G@@ UNLINKING FINISHED     @H@@@SPTRUN1   LABEL .                   HERE IFSS
)@@G@@ UNLINKING LAST PTR ON RIGHT OF LIST@H@@@S         IF FREING,NZERO THEN,ST
)@@G@@JMP . ARE WE TRYING TO FREE ARE THE POINTERS?   @E@@@S         LOAD    ASU
)@@G@@1,PTRGEN .       GET PTR TO GEN LIST HEAD @F@@@S         IF A1,NE,X11 THSV
)@@G@@EN,JMP .   IS LAST NODE THE GENLIST HEAD? @[@@@S.     @G@@@S.        HERSW
)@@G@@E WE ARE FREEING THE LAST POINTER POINTING TO THIS ITEM...  @F@@@S.     SX
)@@G@@           IF IT IS IN THE SYSTEM AREA THEN IT IS AN ERROR. @E@@@S.     SY
)@@G@@           NOTE THAT X11 POINTS TO THE GEN LIST HEAD .@[@@@S.     @[@@@SSZ
)@@G@@.     @G@@@S         LOAD    A1,GENARE,X11 .   GET POINTER TO AREA THAT TA
)@@G@@ITEM IS IN  @F@@@S         IF A1,NE,SYSARE,I THEN,JMP . IS ITEM IN SYSTETB
)@@G@@M AREA?     @C@@@T         LOAD    F,GENFLG,X11 . CHK FOR CNTRLD  @A@@@TTC
)@@G@@         IF GNFCNT,ON THEN,JMP .    @E@@@W         STORED  A2,ALDVSV .  TD
)@@G@@     SAVE REGS ACROSS FREEING @C@@@T         LOAD    A4,GENSD,X11 .   SDTE
)@@G@@ FOR ERRMSG @F@T@S. /* ERROR - UNLINKING OF ALL POINTERS POINTING TO <GETF
)@@G@@NSD,X11>    @F@@@T         ONER   ERPTUN,2 .  UNLINKING OF ALL POINTERS TG
)@@G@@TO SDA4     @ @T@S.        IT WILL BE FREED */  @D@@@T.                 TH
)@@G@@                 IT WILL BE FREED   @F@@@S         LINK    FREREC .     TI
)@@G@@     FREE WHAT WERE POINTING TO     @C@@@W         LOADD   A2,ALDVSV .  TJ
)@@G@@     RESTORE A2 A3@F@@@S         JMP .                     RETURN AFTER TK
)@@G@@ERROR CORRECTION  @G@@@S/.       HERE TO VERIFY THAT A POINTER MATCHES TTL
)@@G@@HE ITEM THAT IT IS BEING@A@@@S.                USED TO QUALIFY.   @[@@@STM
)@@G@@.     @#@@@S.        TO USE : @C@@@S.                LA,U              ATN
)@@G@@3,PTRADDR   @C@@@S.                LA,U              A2,SDADDR    @C@@@STO
)@@G@@.                LMJ               X11,PTRVER   @[@@@S.     @#@@@SPTRVERTP
)@@G@@*  LOCAL .  @ @@@S         USING   POINTER,A3 . @ @@@T         LOAD    FTQ
)@@G@@,DGOPT3 .   @E@@@T         IF OOPTD,OFF THEN,PTRVE2 . NO CHECKING IF DOPTR
)@@G@@T SET @F@@@S         IF PTRADR,NZERO THEN,PTRVE1 . IS THIS A LEGAL POINTTS
)@@G@@ER?   @[@@@S.     @G@T@S. /* ERROR ATTEMPT TO USE ILLEGAL OR NULL POINTETT
)@@G@@R TO QUALIFY DATA */    @F@@@T         ONER   ERILPT,3 .  ATTEMPT TO USETU
)@@G@@ ILLEGAL OR NULL POINTER@D@@@T.                                  TO QUALTV
)@@G@@IFY DATA    @[@T@S.     @F@T@S         GOTO    TYPER1 .          GET OUTTW
)@@G@@ OF THIS EXPRESSION     @F@@@SPTRVE1   LABEL .                   HERE IFTX
)@@G@@ NOT ILLEGAL POINTER    @D@@@S         LINK    TYPMAT .          SEE IF TY
)@@G@@TYPES MATCH @G@T@S         JMP .                     RETURN HERE IF (P=-TZ
)@@G@@(SD))-> SCALAR!   @E@T@S         JMP .                     RETURN HERE IUA
)@@G@@F ALL IS OK!@#@@@T         NOP. .   @#@@@TPTRVE2   LABEL .  @A@@@T      UB
)@@G@@   LOAD    A3,PTRADR,A3 .     @#@@@T         JMP .    @A@@@S.        (DOUC
)@@G@@N'T RETURN IF NO MATCH!)@[@@@S.     @E@@@S/.       HERE TO TRY TO MATCH UD
)@@G@@A POINTER WITH AN SD TO USE   @[@@@S.     @#@@@S.        TO USE:  @D@@@SUE
)@@G@@.                LA,U              A3,POINTER ADDR    @D@@@S.           UF
)@@G@@     LA,U              A2,SD TO MATCH WITH@C@@@S.                LMJ    UG
)@@G@@           X11,TYPMAT . @[@@@S.     @#@@@S.        RETURN:  @C@@@S.     UH
)@@G@@           0 PAST X11 IF MATCH IS OK!     @C@@@S.                1 PAST UI
)@@G@@X11 IF -(SD)-> SCALAR   @G@@@S.                DON'T RETURN IF NO MATCH.UJ
)@@G@@.. SKIP PRESENT STATEMENT     @[@@@S.     @ @@@S.        USES:   A1,A4,RUK
)@@G@@2,R3  @[@@@S.     @F@@@STYPMAT   LLOC .                    A3 -> (+SD,XXUL
)@@G@@X) , A2 -> SD     @D@@@S         IF A2,EQ,PTRSD THEN,LJMP . IT IS THE SAUM
)@@G@@ME,OK!@F@@@S         LOCAL .                   SAVE RETURN ADDRESS THRU UN
)@@G@@TEST  @G@@@S         LOADA   X11,TYPARY .      ASSUME THAT ARRAY DIMS MUUO
)@@G@@ST MATCH    @E@@@S         LOADXI  A1,PTRSD,A3 .     SEE IF POINTER HAS UP
)@@G@@-SD   @G@@@S         IF A1,GE,0,I THEN,TYPMA1 . IF POS THEN NOT SCALAR PUQ
)@@G@@ART OF ARRAY@F@@@S         LOADA   X11,TYPSCA .      GOTO DIFFERENT ROUTUR
)@@G@@INE AT END  @C@@@S         LOADN   A1,A1 .           GET POS SD   @E@@@SUS
)@@G@@TYPMA1   LOCAL .                   STACK TEST ROUTINE AT END@F@@@S      UT
)@@G@@   MOVE    STUMIS,0,I .      NO STRUCTURE MISMATCHES SO FAR @G@@@S      UU
)@@G@@   STORED  A5,ARSVA5 .       SAVE REGS USED IN INITIALIZATION CODE@F@@@SUV
)@@G@@         SRB     A1,18 .           GET SD INTO MODIFER OF X REG   @D@@@SUW
)@@G@@         STORED  A2,R2 .           SAVE SD'S FOR LATER@F@@@STYPSTU   LABUX
)@@G@@EL .                   FIND LEFTMOST SON OF CURRENT SD@ @@@S         USIUY
)@@G@@NG   SDSECT,A2 .  @G@T@S         IF SDSTRU,OFF,SDCLS0 THEN,TYPSU1 . FOUNUZ
)@@G@@D LEAF OF SDTOMATCH     @G@@@T         IF SDSTRU,OFF,SDCLS4 THEN,TYPSU1 VA
)@@G@@. FOUND LEAF OF SDTOMATCH     @ @@@S         USING   SDSECT,A1 .  @G@T@SVB
)@@G@@         IF SDSTRU,OFF,SDCLS0 THEN,TYPERR . STRUCTURES DON'T MATCH!     VC
)@@G@@@G@@@T         IF SDSTRU,OFF,SDCLS4 THEN,TYPERR . STRUCTURES DON'T MATCHVD
)@@G@@!     @I@@@S         IF SDARRY,OFF,SDCLS2 THEN,TYPMA3 . SEE IF DIMENSIONVE
)@@G@@S AT SAME PLACE IN S    @D@@@S         USING   SDSECT,A2 .       CHECK OVF
)@@G@@THER SIDE SD@G@@@S         IF SDARRY,OFF,SDCLS2 THEN,TYPMA2 . DIMENSIONSVG
)@@G@@ NOT AT SAME PLACE@G@@@S         LOAD    A4,SDNDIM,A1 .    GET POINTER'SVH
)@@G@@ SIDE NUMBER OF DIMS    @G@@@S         IF A4,EQ,SDNDIM THEN,TYPMA4 . MAJVI
)@@G@@OR STRUCTURES LOOK SAME HERE  @G@@@STYPMA2   LABEL .                   HVJ
)@@G@@ERE IF MISMATCH ON WAY DOWN TO LEAVE@F@@@S         MOVE    STUMIS,1,I . VK
)@@G@@     SAVE ERROR MESSAGE FOR LATER   @E@@@S         GOTO    TYPMA4 .     VL
)@@G@@     NOW GO TO LOOK AT SONS   @G@@@STYPMA3   LABEL .                   HVM
)@@G@@ERE IF POINTER'S  SIDE NOT ARRAY    @F@@@S         IF SDARRY,ON,SDCLS2 TVN
)@@G@@HEN,TYPMA2 . SAME ERROR AS BEFORE   @F@@@STYPMA4   LABEL .              VO
)@@G@@     HERE WHEN READY TO CARRY ON    @E@@@S         LOAD    A1,SDSON,A1 .VP
)@@G@@     GET SON OF POINTER SD    @E@@@S         LOAD    A2,SDSON,A2 .     GVQ
)@@G@@ET SON OF SDTOMATCH SD  @D@@@S         GOTO    TYPSTU .          LOOK FOVR
)@@G@@R SON'S SONS@H@@@STYPSU1   LABEL .                   HERE WHEN SDTOMATCHVS
)@@G@@ SIDE ISN'T STRUCTURE   @F@@@S         USING   SDSECT,A1 .       SET TO VT
)@@G@@LOOK AT POINTER'S SIDE  @H@T@S         IF SDSTRU,ON,SDCLS0 THEN,TYPERR .VU
)@@G@@ ERROR IF POINTER'S SD IS STRUCTURE @H@@@T         IF SDSTRU,ON,SDCLS4 TVV
)@@G@@HEN,TYPERR . ERROR IF POINTER'S SD IS STRUCTURE @[@@@S.     @B@@@S.     VW
)@@G@@   HERE WITH TWO LEAVES TO COMPARE! @[@@@S.     @G@@@SSDCLH1   EQUF    3VX
)@@G@@,,H1 .           MESSY , BUT GETS SDCLS0 & SDCLS1 .   @[@@@S.     @H@@@SVY
)@@G@@         LA      A3,SDCLH1,A1 .    GET ATTRIBUTES OF THE POINTER'S SIDE VZ
)@@G@@SD    @H@T@S         XOR     A3,SDCLH1,A1 .    SEE IF ANY DIFFER FROM SDWA
)@@G@@TOMATCH    *****  @H@@@T         XOR     A3,SDCLH1,A2 .    SEE IF ANY DIWB
)@@G@@FFER FROM SDTOMATCH    *****  @H@@@S         AND,U   A4,017774 .       GWC
)@@G@@ET ESSENTIAL BITS                  *****  @G@@@S         IF SDARST,OFF,SWD
)@@G@@DCLS1 THEN,TYPSU2 . IF EITHER SIDE IS STRING,   @F@@@S.                 WE
)@@G@@                      THEN SDFXVR DOESN'T MATTER@F@@@S         SET     SWF
)@@G@@DFXVR,OFF .      NOTE THAT BITS ARE NOW IN A5!  @H@@@STYPSU2   LABEL .  WG
)@@G@@                 IF THE SD'S MATCH THEN A5 WILL BE ZERO!    @E@T@S      WH
)@@G@@   IF F,NZERO THEN,TYPERR .  DATA TYPES NOT SAME!     @E@@@T         IF WI
)@@G@@F,NE,0,I THEN,TYPERR .  DATA TYPES NOT SAME!    @I@@@S         IF SDARSTWJ
)@@G@@,OFF,SDCLS1 THEN,TYPSU3 . IF NOT ARITH THEN DON'T CHECK SCALE     @H@@@SWK
)@@G@@         LOAD    A4,SD2SP .        GET SCALE AND PRESCISION OF POINTER'SWL
)@@G@@ SD   @F@@@S         USING   SDSECT,A2 .       SWITCH TO SDTOMATCH'S SIDWM
)@@G@@E     @E@@@S         IF A4,NE,SD2SP THEN,TYPERR . ERROR IN MATCHING     WN
)@@G@@@G@@@STYPSU3   LABEL .                   ATTRIBUTES MATCH,CHECK ARRAY DIWO
)@@G@@MS    @G@@@S         IF SDARRY,ON,SDCLS2 THEN,TYPSU4 . SDTOMATCH'S SD SAWP
)@@G@@YS ARRAY    @[@@@S.     @F@@@S.        HERE SDTOMATCH IS A SCALAR... IF WQ
)@@G@@POINTER'S SD SAYS ARRAY @E@@@S.                THEN IT IS OK IF POINTER'WR
)@@G@@S SD WAS NEGATIVE!@H@@@S.                (IT MAY SEEM THAT THERE IS SOMEWS
)@@G@@ QUESTION ABOUT STRUCTUREING, @G@@@S.                BUT IF POINTER'S SDWT
)@@G@@ WAS NEGATIVE THEN IT MUST HAVE     @F@@@S.                BEEN THE SD OWU
)@@G@@F A SCALAR, AND IF IT WAS POSITIVE, @E@@@S.                THEN IT IS A WV
)@@G@@STRUCTURING ERROR ANYWAY!)    @[@@@S.     @E@@@S         USING   SDSECT,WW
)@@G@@A1 .       SWITCH TO POINTER'S SD   @F@@@S         IF SDARRY,OFF,SDCLS2 WX
)@@G@@THEN,TYPNAR . STACKED ROUTINE WILL  @C@@@S         LOADD   A5,ARSVA5 .  WY
)@@G@@     RELOAD REGS  @E@@@S         LOADD   A2,R2 .           RELOAD SD ANDWZ
)@@G@@ POINTER    @H@@@S         JMP     1 .               CHECK SIGN OF SD ANXA
)@@G@@D TAKE CORRECT ACTION!  @G@@@STYPSU4   LABEL .                   HERE IFXB
)@@G@@ SDTOMATCH'S SIDE IS ARRAY    @G@@@S         IF SDARRY,OFF,SDCLS2 THEN,TXC
)@@G@@YPERR . POINTER'S SD IS NOT ARRAY   @G@@@S         LOAD    A4,SDNDIM,A2 XD
)@@G@@.    GET NUMBER OF DIMS IN SDTOMATCH'S SD @E@@@S         IF A4,NE,SDNDIMXE
)@@G@@ THEN,TYPERR . DIMENTION MISMATCH!  @D@@@STYPNAR   LABEL .              XF
)@@G@@     HERE IF LEAFS MATCH@E@@@S         IF A2,EQ,R2 THEN,TYPMOK . BACK ATXG
)@@G@@ ORIGIONAL SD?    @G@@@S         IF SDBROT,ZERO THEN,TYPNA1 . DOES POINTXH
)@@G@@ER'S SIDE HAVE BROTHER? @F@@@S         LOAD    A1,SDBROT,A1 .    GET BROXI
)@@G@@THER ON POINTER'S SIDE  @F@@@S         LOAD    A2,SDBROT,A2 .    GET BROXJ
)@@G@@THER ON SDTOMATCH'S SIDE@H@@@S         IF A2,EQ,0,I THEN,TYPERR ELSE,TYPXK
)@@G@@STU . IF NO BROTHER, THEN MISMATCH  @F@@@S.                             XL
)@@G@@     ELSE LOOK FOR BROTHER'S SONS   @F@@@STYPNA1   LABEL .              XM
)@@G@@     POINTER'S SIDE HAS NO BROTHER  @F@@@S         USING   SDSECT,A2 .  XN
)@@G@@     SWITCH TO SDTOMATCH'S SIDE     @H@@@S         IF SDBROT,NZERO THEN,XO
)@@G@@TYPERR . SDTOMATCH HAS A BROTHER HERE... ERROR! @G@@@S         LOAD    AXP
)@@G@@1,SDDAD,A1 .     GO UP TO FATHER OF POINTER'S SIDE    @G@@@S         LOAXQ
)@@G@@D    A2,SDDAD,A2 .     AND TO THE FATHER ON SDTOMATCH'S SIDE@E@@@S      XR
)@@G@@   IF A2,NE,R2 THEN,TYPNAR . TRY FATHERS BROTHERS!    @G@@@STYPMOK   LABXS
)@@G@@EL .                   HERE WHEN SATISFIED WITH COMPARISION @F@@@S      XT
)@@G@@   LOADD   A5,ARSVA5 .       RELOAD REGISTERS OF INIT CODE  @F@@@S      XU
)@@G@@   LOADD   A2,R2 .           GET SD AND POINTER FOR RETURN  @H@@@S      XV
)@@G@@   IF STUMIS,ZERO THEN,JMP . IF THE STRUCTURES WERE A PERFECT MATCH     XW
)@@G@@@H@T@S. /* ERROR - THE LEAVES OF THE STRUCTURE MATCHED, BUT THE MAJOR STXX
)@@G@@RUCTURES    @G@@@T         ONER   ERSTRU,2 .  THE LEAVES MATCH, BUT THE XY
)@@G@@MAJOR STRUCTURES  @H@@@S.        ARE DIFFERENT IN SHAPE AND THIS PROG MIXZ
)@@G@@GHT NOT WORK ON A DIFFERENT   @^@@@S.        PL/1 SYSTEM */ @E@@@S      YA
)@@G@@   JMP .                     A NEAR PERFECT MATCH!!   @[@@@S.     @C@@@SYB
)@@G@@.        HERE TO CHECK ABOUT THE -SD PROBLEM... @[@@@S.     @G@@@STYPSCAYC
)@@G@@   LABEL .                   HERE THE POINTER'S SD CAN SAY ARRAY  @D@@@SYD
)@@G@@         JMP .                     GOOD MATCH HERE    @F@@@S         JMPYE
)@@G@@     1 .                HERE -SD POINTS TO SCALAR!    @[@@@S.     @C@@@SYF
)@@G@@.        HERE THERE MUST BE AN EXACT MATCH!     @[@@@S.     @#@@@STYPARYYG
)@@G@@   LABEL .  @F@@@S         JMP .                     INDICATE AN EXACT MYH
)@@G@@ATCH RETURN @G@T@S         GOTO    TYPER2 .          JUST POP OFF TWO REYI
)@@G@@TURN ADDRESSES    @F@@@STYPERR   LABEL .                   COME HERE TO YJ
)@@G@@REPORT AN ERROR   @E@@@S         LOADD   A2,R2 .           GET BACK ORIGYK
)@@G@@INAL SD'S   @D@@@S         LOAD    A1,PTRSD,A3 .     GET SD FROM POINTERYL
)@@G@@@G@@@S         LOADD   A5,ARSVA5 .       RESET REGS USED IN INITALIZATIOYM
)@@G@@N     @F@T@S         LOADD   A2,R2 .           GET SD AND POINTER FOR REYN
)@@G@@TURN  @[@@@S.     @E@T@S. /* ERROR - OFFSET OR POINTER TO 'SDA1' USED FOYO
)@@G@@R 'SDA2' */ @F@@@T         ONER   ERMATC,3 .  LOCATOR OF 'SDA1' DOESN'T YP
)@@G@@MATCH 'SDA2'@[@T@S.     @G@T@S.        HERE MUST UNSTACK 3 RETURN ADDRESYQ
)@@G@@S FROM THE STACK AND SEARCH   @B@T@S.        FOR THEN NEXT LOAD R11,STMTYR
)@@G@@#     @[@T@S.     @E@T@S         LOOP    A0,TYPER2 .       POP OFF A RETYS
)@@G@@URN ADDRESS @G@T@STYPER2   LABEL .                   HERE TO POP TWO RETYT
)@@G@@URN ADDRESSES     @E@T@S         LOOP    A0,TYPER1 .       POP OFF A RETYU
)@@G@@URN ADDRESS @H@T@STYPER1   LABEL . HERE TO POP OFF ONE RETURN ADDRESS ANYV
)@@G@@D SEARCH PAST IT FOR    @H@T@S.                                  A MARKEYW
)@@G@@R THAT SAYS WE ARE AT THE END OF A  @F@T@S.                             YX
)@@G@@     BASED STORAGE EXPRESSION!!!    @[@T@S.     @H@T@S         UNSTK   XYY
)@@G@@11 .             GET LOCATION OF CALL TO BASED ROUTINES     @[@T@S.     YZ
)@@G@@@B@T@S.        MORE TO DO HERE!!!!!!!!!!!!!!!   @[@T@S.     @ @@@S/.    ZA
)@@G@@   POINTER ASSIGNMENT   @[@@@S.     @#@@@S.        TO USE:  @D@@@S.     ZB
)@@G@@           LA,U              A3,TARGET POINTER  @D@@@S.                LZC
)@@G@@A,U              A2,SOURCE POINTER  @C@@@S.                LMJ          ZD
)@@G@@     X11,PTRASG . @[@@@S.     @ @@@S.        USES A1,A2,A3,X11    @[@@@SZE
)@@G@@.     @#@@@SPTRASG*  LOCAL .  @ @@@T         USING   WORD,A3 .    @D@@@TZF
)@@G@@         LOAD    A1,W1,A2 .        GET 1ST WORD OF LHS@E@@@T         IF ZG
)@@G@@A1,EQ,W1  THEN,JMP . ->IF BOTH PTRS ARE THE SAME@G@W@T         STORED  AZH
)@@G@@2,ALDVSV .      SAVE REGS ACROSS POTENTIAL FREEING    @C@@@S         LINZI
)@@G@@K    PTRUNL .          UNLINK TARGET@ @W@T         LOADD   A2,ALDVSV .  ZJ
)@@G@@@ @@@S         USING   POINTER,A3 . @D@@@S         LOAD    A1,PTRSD-FH1,ZK
)@@G@@A2 . GET SD AND ADDR    @D@@@S         STORE   A1,PTRSD-FH1,A3 . SET SD ZL
)@@G@@AND ADDR    @F@@@S         LOAD    A1,PTRGEN,A2 .    GET POINTER TO GENLZM
)@@G@@ISTHEAD     @E@@@S         STORE   A1,PTRGEN,A3 .    SET GENLISTHEAD POIZN
)@@G@@NTER  @I@@@S         IF PTRADR,ZERO THEN,JMP . DON'T DO ANYTHING MORE WIZO
)@@G@@TH ILLEGAL POINTERS     @I@@@T         LOAD    A4,PTRAUT,A3 .     SEE IFZP
)@@G@@ LHS IS A TEMP  IF SO DONT LINK IT IN     @H@@@T         . THIS PREVENTSZQ
)@@G@@ THE TEMP USED TO PASS A BSD PTR BY VALUE FROM BEING  @H@@@T         . LZR
)@@G@@INKED TO A VARIABLE. A '1' IS STORED IN W1H2+2 TO INDICATE A TEMP @D@@@TZS
)@@G@@         IF A4,EQ,1,I THEN,JMP . -> IF IT IS A TEMP   @E@@@S         LOAZT
)@@G@@D    A2,GENPTR,A1 .    GET NEXT POINTER ON LIST @F@@@S         STORE   AZU
)@@G@@2,PTRNXT,A3  .   PTRNXT(P)=PTRNXT(GENPTR(P))    @D@@@S         STORE   AZV
)@@G@@3,GENPTR,A1 .    GENPTR(PTRGEN(P))=P@D@@@S         STORE   A1,PTRLAS,A3 ZW
)@@G@@.    PTRLAS(P)=PTRGEN(P)@H@@@S         IF A2,EQ,0,I THEN,JMP .   IS THISZX
)@@G@@ THE ONLY POINTER ON THIS GENLIST?  @D@@@S         STORE   A3,PTRLAS,A2 ZY
)@@G@@.    PTRLAS(PTRNXT(P))=P@D@@@S         JMP .                     RETURN ZZ
)@@G@@TO CALLER   @[@@@S.     @[@@@S.     @ @@@S.        OFFSET ASSIGNMENT    AA
)@@G@@@[@@@S.     @#@@@S.        TO USE:  @D@@@S.                LA,U         AB
)@@G@@     A3,TARGET OFFSET   @D@@@S.                LA,U              A2,SOURAC
)@@G@@CE OFFSET   @C@@@S.                LMJ               X11,OFFASG   @[@@@SAD
)@@G@@.     @^@@@S.        USES A1,A2,A3  @[@@@S.     @D@@@T         ON AD$DR AE
)@@G@@.                 NO OFFSET OR AREA @G@@@SOFFASG*  LLOC .               AF
)@@G@@     IGNORE INFORMATION ABOUT THE AREA    @D@@@S         LOAD    A1,PTRSAG
)@@G@@D,A2 .     GET SD OF OFFSET   @F@@@S         STORE   A1,PTRSD,A3 .     RAH
)@@G@@EMEMBER DATA TYPE OF OFFSET   @D@@@S         LOAD    A1,PTROFF-FH1,A2 .GAI
)@@G@@ET OFFSET INFO    @D@@@S         STORE   A1,PTROFF-FH1,A3 . SET OFFSET IAJ
)@@G@@NFO   @D@@@S         LJMP .                    RETURN TO CALLER   @^@@@TAK
)@@G@@         OFF AD$DR .    @B@@@S/.       ROUTNES TO DO THE CONVERSIONS    AL
)@@G@@@[@@@S.     @B@@@S.        OFFSET TO POINTER CONVERSION     @[@@@S.     AM
)@@G@@@#@@@S.        TO USE:  @D@@@S.                LA,U              A3,SOURAN
)@@G@@CE OFFSET   @E@@@S.                LA,U              A1,U A1,OFFSET AREAAO
)@@G@@ ADDR @D@@@S.                LA,U              A2,TARGET POINTER  @C@@@SAP
)@@G@@.                LMJ               X11,OFTOPT   @[@@@S.     @A@@@S.     AQ
)@@G@@   USES X11,A1,A2,A3,A4,R1,R2 @[@@@S.     @^@@@T         ON AD$DR .     AR
)@@G@@@#@@@SOFTOPT*  LLOC .   @D@@@S         STORED  A1,DEXWK1 .       SAVE THAS
)@@G@@E REGISTERS @B@@@S         STORE   A3,DEXWK3 .       ''     @ @@@S      AT
)@@G@@   USING   POINTER,A3 . @E@@@S         IF PTROFF,NZERO THEN,OFTOP1 . NOTAU
)@@G@@ ILLEGAL OFFSET   @E@@@S         LOAD    A4,PTRSD .        GET SD TO SEEAV
)@@G@@ IF NULLO   @G@@@S         IF A4,EQ,DSDNLO THEN,OFTOP2 . IF NULLO THEN AAW
)@@G@@SSIGN NULL POINTER@[@@@S.     @E@T@S. /* ERROR - ILLEGAL OFFSET TO BE COAX
)@@G@@NVERTED TO POINTER */   @F@@@T         ONER   ERILPT,2 .  ILLEGAL OFFSETAY
)@@G@@ TO POINTER CONVERSION .@ @@@S. /* USE NULL FOR RESULT */   @[@@@S.     AZ
)@@G@@@F@@@SOFTOP2   LABEL .                   HERE TO CONVERT NULLO TO NULL  BA
)@@G@@@D@@@S         LOADA   A2,BFNULL .       GET NULL POINTER   @E@@@S      BB
)@@G@@   GOTO    OFTOP3 .          JOIN WITH CONVERSION     @H@@@SOFTOP1   LABBC
)@@G@@EL .                   HERE IF NOT ILLEGAL OFFSET TO GO TO POINTER@G@@@SBD
)@@G@@         LINK    OFFVER .          VERIFY THAT THE POINTER IS LEGAL     BE
)@@G@@@H@@@S         LOAD    A2,DEXWK3 .       GET ADDRESS OF SOURCE ''POINTERBF
)@@G@@'' (OFFSET) @F@@@SOFTOP3   LABEL .                   COME HERE WITH A2->BG
)@@G@@ BFNULL     @F@@@S         LOAD    A3,DEXWK2 .       GET ADDRESS OF TARGBH
)@@G@@ET POINTER  @G@@@S         LINK    PTRASG .          GO DO POINTER TO POBI
)@@G@@INTER ASSIGNMENT  @D@@@S         JMP .                     RETURN TO USEBJ
)@@G@@R NOW @[@@@S.     @[@@@S.     @B@@@S.        POINTER TO OFFSET CONVERSIOBK
)@@G@@N     @[@@@S.     @#@@@S.        TO USE:  @D@@@S.                LA,U   BL
)@@G@@           A3,OFFSET TARGET   @D@@@S.                LA,U              ABM
)@@G@@2,POINTER SOURCE  @C@@@S.                LMJ               X11,PTTOOF   BN
)@@G@@@[@@@S.     @ @@@S.        USES X11,A1,A2,A3    @[@@@S.     @#@@@SPTTOOFBO
)@@G@@*  LOCAL .  @ @@@S         USING   POINTER,A2 . @D@@@S         IF PTRADRBP
)@@G@@,NZERO THEN,PTTOO1 . NOT ILLEGAL    @E@@@S         LOAD    A4,PTRSD .   BQ
)@@G@@     GET SD OF ILLEGAL POINTER@E@@@S         IF A4,EQ,DSDNUL THEN,PTTOO2BR
)@@G@@ . OK IF NULL POINTER   @F@@@SPTTOO3   LABEL .                   HERE IFBS
)@@G@@ SOME SORT OF ERROR     @[@@@S.     @F@T@S. /* ERROR - CONVERSION OF ILLBT
)@@G@@EGAL POINTER TO ILLEGAL OFFSET */   @F@@@T         ONER   ERILOF,2 .  ILBU
)@@G@@LEGAL POINTER TO OFFSET CONVERSION  @ @@@S. /* NULLO WILL BE USED */    BV
)@@G@@@[@@@S.     @E@@@SPTTOO2   LABEL .                   HERE TO ASSIGN NULLBW
)@@G@@O     @C@@@S         LOADA   A2,BFNULO .       SET TO NULLO @D@@@S      BX
)@@G@@   UNSTK   X11 .             POP RETURN STACK   @E@@@S         GOTO    OBY
)@@G@@FFASG .          ASSIGN THE OFFSET NULL   @E@@@SPTTOO1   LABEL .        BZ
)@@G@@           HERE IF LEGAL POINTER    @F@@@S         LOAD    X11,PTRGEN,A2CA
)@@G@@ .   GET POINTER TO GENLISTHEAD     @E@@@S         LOAD    A1,A3 .      CB
)@@G@@     GET TARGET SO CAN DO 'IF'@D@@@S         USING   GENLST,X11 .      SCC
)@@G@@ET USING FOR 'IF' @H@@@S         IF GNFBSD,OFF,GENFLG THEN,PTTOO3 . CAN'CD
)@@G@@T GET OFFSET IF NOT BASED     @D@@@S         LOAD    A3,GENARE,X11 .   GCE
)@@G@@ET POINTER TO AREA@G@@@S         IF A3,EQ,SYSARE,I THEN,PTTOO3 . CAN'T GCF
)@@G@@ET OFFSET IF IN SYSARE  @F@@@S         SUB     A3,X11 .          GET -OFCG
)@@G@@FSET OF GENLISTHEAD     @D@@@S         STOREN  A3,PTROFF,A1 .    SET -(-CH
)@@G@@OFFSET)     @D@@@S         LOAD    A3,PTRADR .       GET ADDRESS OF DATACI
)@@G@@@F@@@S         SUB     A3,GENADR,X11 .   SUBOFF ADDRESS OF START OF DATACJ
)@@G@@@D@@@S         STORE   A3,PTRDFF .       SAVE DATA OFFSET   @D@@@S      CK
)@@G@@   LOAD    A3,PTRSD,A2 .     GET SD OF DATA     @E@@@S         STORE   ACL
)@@G@@3,PTRSD,A1 .     SET SD OF OFFSET TYPE    @B@@@S         JMP .          CM
)@@G@@           RETURN @^@@@T         OFF  AD$DR .   @ @T@S/.       NULL AND CN
)@@G@@NULLO BIFS  @[@T@S.     @#@T@S.        NULL BIF @[@T@S.     @#@T@S.     CO
)@@G@@   TO USE:  @H@T@S.                THESE ARE STATIC, SO TO USE,JUST LOADCP
)@@G@@ THE ADDRESS OF THE     @F@T@S.                FUNCTION DESIRED AND DO TCQ
)@@G@@HE ASSIGNMENT AS NEEDED @[@T@S.     @[@T@S.     @C@T@SBFNULL*  RES     0CR
)@@G@@ .               NULL POINTER @C@T@SFILL(1)  SAC     SDNULL,0 .        PCS
)@@G@@TRSD ,PTRADR@C@T@SFILL(1)  SAC     000000,0 .        PTRLAS,PTRNXT@C@T@SCT
)@@G@@FILL(1)  SAC     DUMGEN,0 .        PTRGEN,PTRAUT@[@T@S.     @E@T@SBFNULOCU
)@@G@@*  RES     0 .               NULLO BUILT IN FUNCTION  @C@T@SFILL(1)  SACCV
)@@G@@     SDNULO,0 .        PTRSD ,PTRADR@C@T@SFILL(1)  SAC     000000,0 .   CW
)@@G@@     PTROFF,PTRDFF@C@T@SFILL(1)  SAC     DUMGEN,0 .        PTRGEN,PTRAUTCX
)@@G@@@[@T@S.     @F@T@S.        AND NOW THE GENERATION LIST HEAD FOR THESE FUCY
)@@G@@NCTIONS     @[@T@S.     @H@T@SDUMGEN   RES     0 .               GENERATCZ
)@@G@@ION LIST HEAD FOR NULL AND NULLO    @C@T@SFILL(1)  SAC     000000,000000DA
)@@G@@ .   GENNXT,GENLEN@C@T@SFILL(1)  SAC     000000,BFNULL .   GENFLG,GENPTRDB
)@@G@@@E@T@SFILL(1)  SAC     SYSARE-(IN 63,0,1,0),000000 . GENARE,GENAUT@C@T@SDC
)@@G@@FILL(1)  SAC     SDNULL,000000 .   GENSD,GENADR @ @@@S/.       OFFSET VEDD
)@@G@@RIFICATION  @C@@@S.                TRY TO ENFORCE 'TYPED' OFFSETS @[@@@SDE
)@@G@@.     @#@@@S.        TO USE:  @D@@@S.                LA,U              ADF
)@@G@@1,AREA ADDRESS    @D@@@S.                LA,U              A3,OFFSET ADDDG
)@@G@@RESS  @C@@@S.                LMJ               X11,OFFVER   @[@@@S.     DH
)@@G@@@#@@@S.        RETURNS: @H@@@S.                THE OFFSET MAY NOW BE USEDI
)@@G@@D AS A POINTER (I.E., PRTADR HAS    @A@@@S.                BEEN FILLED IDJ
)@@G@@N)    @[@@@S.     @ @@@S.        USES:   A2,A4,R2,R3  @^@@@T         ON DK
)@@G@@   AD$DR    @[@@@S.     @[@@@S.     @#@@@SOFFVER*  LOCAL .  @ @@@S      DL
)@@G@@   USING   POINTER,A3 . @F@T@S         IF PTROFF,NZERO THEN,OFFVE1 . IS DM
)@@G@@IT A INITIAZILED OFFSET?@F@@@T         IF PTROFF,ZERO THEN,OFFVE4 . IS IDN
)@@G@@T A INITIAZILED OFFSET? @D@T@S.        LOAD    A2,PTRSD .        SEE IF DO
)@@G@@IT IS NULLO?@ @T@S.        IF A2,NE,DSDNLO THEN,@[@T@S.     @ @T@S. /* EDP
)@@G@@RROR - ILLEGAL OFFSET */@[@T@S.     @H@T@SOFFVE1   LABEL .              DQ
)@@G@@     THERE IS SOMETHING IN THIS OFFSET VAR!     @I@@@S         ADDU    ADR
)@@G@@1,PTROFF .       GET INTO A2 THE ADDRESS OF THE SUPPOSED GENLI    @G@@@SDS
)@@G@@OFFVE2   LABEL .                   HERE IF NOT SURE ABOUT OFFSET YET    DT
)@@G@@@F@@@S         LOAD    A1,GENNXT,A1 .    POINT TO NEXT THING IN AREA    DU
)@@G@@@G@@@S         IF A1,EQ,0,I THEN,OFFVE4 . WHAT WERE LOOKING FOR AIN'T HEDV
)@@G@@RE    @E@@@S         IF A1,NE,A2 THEN,OFFVE2 . THIS ISN'T IT EITHER     DW
)@@G@@@[@@@S.     @E@@@S.        FOUND SOMETHING AT THE SAME OFFSET IN THES ARDX
)@@G@@EA,NOW@C@@@S.                SEE IF IT IS THE CORRECT TYPE  @[@@@S.     DY
)@@G@@@F@@@S         STORE   A1,PTRGEN .       SAVE POINTER TO GENLIST HEAD   DZ
)@@G@@@D@@@S         LOAD    A2,GENADR,A1 .    GET DATA ADDRESS   @E@@@S      EA
)@@G@@   ADD     A2,PTRDFF,A3 .    ADD IN OFFSET INTO DATA  @E@@@S         STOEB
)@@G@@RE   A2,PTRADR,A3 .    SET ADDRESS INTO POINTER @C@@@S         LOAD    AEC
)@@G@@1,GENSD,A1 .     GET BASED SD @F@@@S         LINK    TYPMAT .          GED
)@@G@@O SEE IF COMPATIBLE TYPES     @E@@@S         JMP .                     REE
)@@G@@ETURN HERE IF SD'S MATCH@[@@@S.     @H@@@S.        RETURN TO HERE IF THEEF
)@@G@@ OFFSET IS PART OF A MAJOR STRUCTURE OR OF AN   @D@@@S.        ARRAY TO EG
)@@G@@VERIFY THAT IT REALLY FITS INTO IT  @[@@@S.     @C@@@S.        STORE   AEH
)@@G@@5,ARSVA5 .       SAVE REGISTER@G@@@S.                                  (EI
)@@G@@ALREADY SAVED IN TYPMAT ROUTINE)    @F@@@S         LOAD    A2,PTRGEN,A3 EJ
)@@G@@.    GO BACK TO THE GENLISTHEAD     @F@@@S         LOAD    A1,GENSD,A2 .EK
)@@G@@     GET TO THE SD OF THE ARRAY     @E@@@S         SETL    R2,SDNDIM,A1 EL
)@@G@@.    GET THE NUMBER OF DIMS   @C@@@S         LOAD    X11,GENADR,A2 .   DEM
)@@G@@V POINTER   @E@@@S         LOADXI  X11,2,I .         SET TO WALTZ THRU DEN
)@@G@@V     @D@@@S         LOAD    A1,ARDVOR,*X11 .  VIRTUAL ORIGIN     @F@@@SEO
)@@G@@         LOAD    A2,A1 .           GET THE VIRTUAL ORIGIN HERE TOO@ @@@SEP
)@@G@@         USING   WORD,X11 .   @F@@@SOFFVE3   LABEL .                   HEQ
)@@G@@ERE THRU ALL DIMS IN ARRAY    @D@@@S         LOAD    A4,W1XH2+1,X11 .  GER
)@@G@@ET LOWER BOUND    @D@@@S         AU,H1   A5,1,X11 .        GET UPPER BOUES
)@@G@@ND    @E@@@S         MPYS    A4,W1,X11 .       COMPUTE LEAST ELEMENT    ET
)@@G@@@E@@@S         MPYS    A5,W1,*X11 .      COMPUTE HIGHEST ELEMENT  @D@@@SEU
)@@G@@         ADD     A1,A4 .           ADD INTO LOWER V.O.@D@@@S         ADDEV
)@@G@@     A2,A5 .           ADD INTO UPPER V.O.@D@@@S         LOOP    R2,OFFVEW
)@@G@@E3 .       LOOP FOR ALL DIMS  @D@@@S         LOAD    A5,ARSVA5 .       REX
)@@G@@ELOAD SAVED REG   @G@T@S         IF A1,GT,PTRADR THEN,OFFVE1 . IS LEAST EY
)@@G@@ELEMENT < THIS ONE?     @G@@@T         IF A1,GT,PTRADR THEN,OFFVE4 . IS EZ
)@@G@@LEAST ELEMENT < THIS ONE?     @D@@@S         IF A2,GE,PTRADR THEN,JMP . FA
)@@G@@OK IF WITHIN RANGE@#@@@SOFFVE4   LABEL .  @F@T@S. /* ERROR - ATTEMPT TO FB
)@@G@@USE ILLEGAL OR UNALLOCATED OFFSET VAR */  @E@@@T         ONER   ERILOF,2FC
)@@G@@ .  ILLEGAL OFFSET USED FOR DATA    @E@@@S         GOTO    TYPER1 .     FD
)@@G@@     GET OUT OF THIS MESS     @^@@@T         OFF   AD$DR .  @ @@@S/.    FE
)@@G@@   FREE STMT COMES HERE @[@@@S.     @#@@@S.        TO USE:  @D@@@S.     FF
)@@G@@           LA,U              A3,VERIFIED POINTER@D@@@S.                LFG
)@@G@@A,U              A1,AREA TO FREE IN @C@@@S.                LMJ          FH
)@@G@@     X11,EXFREE   @[@@@S.     @#@@@S.        RETURN:  @I@@@S.           FI
)@@G@@     THE VARIABLE POINTER AT WILL BE RETURNED TO THE AREA IT CAME FR    FJ
)@@G@@@H@@@S.                AND ALL OF THE POINTERS THAT POINTED TO IT WILL BFK
)@@G@@E UNLINKED  @G@@@S.                IF IT IS A VARIABLE THAT CONTAINS AREFL
)@@G@@AS OR POINTERS    @F@@@S.                THEN THEY WILL BE FREED AND UNLFM
)@@G@@INKED AS NEEDED   @[@@@S.     @ @@@S.        USES:A2,A4, (X5?)    @[@@@SFN
)@@G@@.     @#@@@SEXFREE*  LOCAL .  @F@@@S         LOAD    A2,PTRGEN,A3 .    GFO
)@@G@@ET POINTER TO GENLISTHEAD     @ @@@S         USING   GENLST,A2 .  @D@@@SFP
)@@G@@         IF A1,EQ,GENARE THEN,EXFRE1 . AREAS MATCH OK!@F@T@S. /* ERROR -FQ
)@@G@@ AREA SPECIFIED IN FREE STMT ISN'T THE ONE THAT WAS   @F@@@T         ONEFR
)@@G@@R   ERILAR,2 .  WRONG AREA SPECIFIED IN FREE STMT     @B@@@S.        USEFS
)@@G@@D TO ALLOCATE THE VARIABLE IN!@E@@@S.        IT WILL BE FREED IN THE AREFT
)@@G@@A IT WAS ALLOCATED IN */@[@@@S.     @#@@@SEXFRE1   LABEL .  @ @@@T      FU
)@@G@@   LOAD    F,GENFLG .   @F@T@S         IF GNFBSD,ON,GENFLG THEN,EXFRE2 .FV
)@@G@@ OK TO FREE IF BASED    @F@@@T         IF GNFBSD++GNFCNT,ON THEN,EXFRE2 FW
)@@G@@. OK TO FREE IF BASED   @[@@@S.     @E@T@S. /* ERROR ATTEMPT TO FREE A NFX
)@@G@@ON BASED VARIABLE ILLEGALLY!*/@H@@@T         ONER   ERILFR,2 .  ATTEMPT FY
)@@G@@TO FREE NON BASED/CONTROLLED VARIABLE     @[@@@S.     @#@@@S         JMPFZ
)@@G@@ .    @E@@@SFREREE   LOCAL .                   ENTRY FOR RECURSIVE FREESGA
)@@G@@@F@@@S.                                  AS IN FREEING THE LAST POINTER GB
)@@G@@@D@@@SEXFRE2   LABEL .                   ENTRY FROM ABOVE   @F@@@S.     GC
)@@G@@                             (AND FROM FREEING CONTROLLED?) @[@@@S.     GD
)@@G@@@G@@@S         LOAD    A2,PTRGEN,A3 .    GET THE GENLISTHEAD FOR THE ITEGE
)@@G@@M     @F@@@S         LINK    FRECLR .          CLEAR IT OUT, AND UNLINK GF
)@@G@@IT    @I@T@S         LOAD    A1,A3 .           GET THE ADDRESS OF THE GEGG
)@@G@@NLISTHEAD FOR FREEER    @I@@@T         LOAD    A1,A2 .           GET THEGH
)@@G@@ ADDRESS OF THE GENLISTHEAD FOR FREEER    @[@@@T.     @[@@@T.     @H@@@TGI
)@@G@@. CODE TO FREE CNTRLD. IT IS NECESSARY TO LINK THE INTERNAL PTR (A3) TO GJ
)@@G@@THE   @B@@@T. PREVIOUS ALLOC OF THIS VAR , IF ANY     @[@@@T.     @^@@@TGK
)@@G@@         LOAD,F,GENFLG .@D@@@T         IF GNFCNT,OFF THEN,EXFRE4 . -> NOGL
)@@G@@T CNTRLD    @ @@@T         LOAD    A2,GENPRV .  @A@@@T         STORE   AGM
)@@G@@2,PTRGEN,A3 .     @E@@@T         IF A2,EQ,0,I THEN,EXFRE4 . -> IF FREEINGN
)@@G@@G LAST COPY @ @@@T         USING   POINTER,A3 . @A@@@T         MOVE    PGO
)@@G@@TRADR,GENADR .    @H@@@T         MOVE    PTRNXT,GENPTR . PUT PTR ON FRONGP
)@@G@@T OF LIST PNTING TO THIS THING@ @@@T         STORE   A2,PTRLAS .  @H@@@TGQ
)@@G@@         IF GENPTR,ZERO  THEN,EXFRE3 . -> IF NO OTHER PTRS PT TO THIS CNGR
)@@G@@T VAR @ @@@T         LOAD    A2,GENPTR .  @G@@@T         STORE   A3,PTRLGS
)@@G@@AS,A2 . LINK OTHER PTRS TO THE INTERNAL ONE     @F@@@T         LOAD    AGT
)@@G@@2,PTRLAS,A3 .    REGET ADDR OF GENLSTHD FOR NEXT@#@@@TEXFRE3   LABEL .  GU
)@@G@@@A@@@T         STORE   A3,GENPTR,A2 .     @#@@@TEXFRE4   LABEL .  @[@@@TGV
)@@G@@.     @[@@@T.     @G@T@S         LOAD    A3,GENARE .       GET THE AREA GW
)@@G@@IT IS TO BE FREED INTO  @H@@@T         LOAD    A3,GENARE,A1 .       GET GX
)@@G@@THE AREA IT IS TO BE FREED INTO     @I@@@S         LINK    STORFREE .   GY
)@@G@@     PUT THE ITEM BACK INTO THE AREA IT CAME FROM     @[@@@T.     @G@@@SGZ
)@@G@@         JMP .                     RETURN BACK ONE LEVEL IN THIS MESS   HA
)@@G@@@E@@@S/.       THIS ROUTINE UNLINKS ALL THE POINTERS TO AN ITEM   @H@@@SHB
)@@G@@.        AND THEN CLEARS OUT THE AREAS AND THEN THE POINTERS INVOLVED WIHC
)@@G@@TH IT @[@@@S.     @#@@@S.        TO USE:  @E@@@S.                LA,U   HD
)@@G@@           A2,GENLISTHEAD TO RELEASE@C@@@S.                LMJ          HE
)@@G@@     X11,FRECLR . @[@@@S.     @#@@@S.        RETURNS: @H@@@S.           HF
)@@G@@     ALL OF THE POINTERS POINTING TO THIS ITEM ARE UNLINKED,AND   @B@@@SHG
)@@G@@.                EVERYTHING IS CLEANED UP @[@@@S.     @^@@@S.        USEHH
)@@G@@S: A4,A1    @[@@@S.     @#@@@SFRECLR*  LLOC .   @G@@@S         LOAD    AHI
)@@G@@4,AREPTR .       GET SPACE SO IT CAN BEE RECURSIVE    @F@@@S         ADDHJ
)@@G@@     A4,2,I .          NEED TO SAVE 2 WORDS WORTH     @F@@@SFRECL1   LABHK
)@@G@@EL .                   HERE ON RETURN FROM WROVFL     @D@@@S         IF HL
)@@G@@     A4,LT,ADPCND THEN,FRECL2 . IT'LL FIT!@D@@@S         LOCAL .        HM
)@@G@@           SAVE RETURN ADDRESS@E@@@S         LINK    WROVFL .          THN
)@@G@@RY TO GET MORE STORAGE  @E@@@S         UNSTK   X11 .             SUPRISEHO
)@@G@@!!! WE CAME BACK! @C@@@S         GOTO    FRECL1 .          TRY AGAIN    HP
)@@G@@@E@@@SFRECL2   LABEL .                   HERE WHEN OK TO CONTINUE @E@@@SHQ
)@@G@@         LOAD    A1,AREPTR .       GET START OF FREE STORAGE@E@@@S      HR
)@@G@@   STORE   A4,AREPTR .       SAVE NEW END OF AREC     @D@@@S         STOHS
)@@G@@RE   X11,W1H2,A1 .     SAVE RETURN ADDRESS@F@@@S         STORE   A3,W1H1HT
)@@G@@,A1 .      MIGHT BE HANDY TO HAVE LATER   @E@@@S         STORE   A2,W1H2HU
)@@G@@+1,A1 .    SAVE GENLIST HEAD POINTER@H@@@S         MOVE    FREING,1,I . HV
)@@G@@     SAVE WE ARE INTENTIONALLY FREEING POINTERS @ @@@S         USING   GHW
)@@G@@ENLST,A2 .  @I@@@SFRECL3   LABEL .                   LOOP HERE TO UNLINKHX
)@@G@@ ALL POINTERS POINTING HER    @G@@@S         LOAD    A3,GENPTR .       GHY
)@@G@@ET THE NEXT POINTER ON THE LIST     @E@@@S         IF A3,EQ,0,I THEN,FREHZ
)@@G@@CL4 . ANY MORE TO UNLINK?     @C@@@S         LINK    PTRUNL .          UIA
)@@G@@NLINK IT    @F@@@S         LOAD    A1,AREPTR .       RECOVER FROM POSSIBIB
)@@G@@LE RECURSION@G@@@S         SUB     A1,1,I .          POINT TO WHERE GENLIC
)@@G@@ISTHEAD IS STORED @E@@@S         LOAD    A2,W1H2,A1 .      GET GENLISTHEID
)@@G@@AD BACK     @G@@@S         GOTO    FRECL3 .          LOOP BACK TO UNLINKIE
)@@G@@ NEXT POINTER     @F@@@SFRECL4   LABEL .                   HERE WHEN ALLIF
)@@G@@ POINTERS UNLINKED@^@@@T         ON    AD$DR .  @F@@@S         IF GNFAREIG
)@@G@@,OFF,GENFLG THEN,FRECL8 . ANY AREAS PRESENT?    @C@@@SFRECL5   LABEL . GIH
)@@G@@ET THE NEXT AREA ON THE LIST  @F@@@S         LOAD    A3,GENAAT,A2 .    GII
)@@G@@ET AREA LIST FROM GENLISTHEAD @E@@@S         IF A3,EQ,0,I THEN,FRECL8 . IJ
)@@G@@ARE THEY ALL FREED?     @G@@@S         LOAD    A4,AREAUT,A3 .    GET POIIK
)@@G@@NTER TO NEXT AREA IN VARIABLE @F@@@S         STORE   A4,GENAAT .       SIL
)@@G@@AVE IT BACK IN THE GENLISTHEAD@H@@@SFRECL6   LABEL .                   HIM
)@@G@@ERE TO SEE IF ANYTHING LEFT IN THIS AREA  @G@@@S         LOAD    A2,ARENIN
)@@G@@XT,A3 .    GET POINTER TO NEXT THING IN AREA    @F@@@S         IF A2,EQ,IO
)@@G@@0,I THEN,FRECL7 . OUT OF THINGS IN THIS AREA    @F@@@S         LOAD    AIP
)@@G@@4,GENNXT,A2 .    GET NEXT THING IN THIS AREA    @F@@@S         STORE   AIQ
)@@G@@4,ARENXT,A3 .    SAVE NEXT GUY IN THIS AREA     @C@@@S         LINK    FIR
)@@G@@RECLR .          RECURSE!!!   @F@@@S         GOTO    FRECL6 .          TIS
)@@G@@RY TO FREE NEXT THING IN AREA @G@@@SFRECL7   LABEL .                   HIT
)@@G@@ERE TO MOVE TO NEXT AREA IN VARIABLE@E@@@S         LOAD    A1,AREPTR .  IU
)@@G@@     COME BACK FROM RECURSION @F@@@S         SUB     A1,1,I .          PIV
)@@G@@OINT TO WHERE GENLSTHEAD IS   @F@@@S         LOAD    A2,W1H2,A1 .      PIW
)@@G@@OINT TO GENLISTHEAD AGAIN     @F@@@S         GOTO    FRECL5 .          TIX
)@@G@@RY TO EMPTY OUT NEXT AREA     @#@@@T         OFF AD$DR@H@@@SFRECL8   LABIY
)@@G@@EL .                   HERE TO UNLINK THE POINTERS IN THE VARIABLE@G@@@SIZ
)@@G@@         MOVE    FREING,0,I .      SAY LAST POINTER TO A THING IS ERROR JA
)@@G@@@I@@@S         IF GNFPTR,OFF,GENFLG THEN,FRECL10 . IF NONE AROUND, THEN JB
)@@G@@DON'T FREE EM     @E@@@SFRECL9   LABEL . HERE TO FOLLOW LIST OF POINTERSJC
)@@G@@ IN VAR     @A@@@S         LOAD    A3,GENPAT,A2 .     @F@@@S         IF JD
)@@G@@A3,EQ,0,I THEN,FRECL10 . DONE FREEING THE POINTERS?   @G@@@S         LOAJE
)@@G@@D    A4,PTRAUT,A3 .    GET LINK TO NEXT POINTER IN THING    @F@@@S      JF
)@@G@@   STORE   A4,GENPAT,A2 .    BUMP LINK FORM GENLISTHEAD     @D@@@S      JG
)@@G@@   LINK    PTRUNL .          UNLINK THE POINTER @G@@@S         LOAD    AJH
)@@G@@1,AREPTR .       TIME TO RECOVER FROM RECURSION AGAIN!@E@@@S         SUBJI
)@@G@@     A1,1,I .          GET BACK TO GENLISTHEAD  @D@@@S         LOAD    AJJ
)@@G@@2,W1H2,A1 .      AND PICK IT UP     @F@@@S         GOTO    FRECL9 .     JK
)@@G@@     TRY TO FREE NEXT POINTER HERE  @E@@@SFRECL10  LABEL .              JL
)@@G@@     HERE WHEN ALL FINISHED   @E@@@S         LOAD    A1,AREPTR .       SJM
)@@G@@ET TO UNDO RECURSION    @D@@@S         SUB     A1,2,I .          BACKUP JN
)@@G@@TO STORAGE  @D@@@S         LOAD    A3,W1H1,A1 .      GET A3 WHEN ENTEREDJO
)@@G@@@D@@@S         LOAD    X11,W1H2,A1 .     GET RETURN ADDRESS @G@@@S      JP
)@@G@@   STORE   A1,AREPTR .       SET END OF AREC BACK TO OLD LEVEL    @C@@@SJQ
)@@G@@         LJMP .  POP DOWN ONE LEVEL IN THIS MESS@H@@@S/.       THIS ROUTJR
)@@G@@INE IS CALLED BY THE POINTER UNLINKER TO ALLOW FOR RECURSIVE@E@@@S.     JS
)@@G@@   ''POINTER IN THING BEING FREED CAUSING SOMETHING   @C@@@S.        SOMJT
)@@G@@ETHING TO BE FREED'' TYPES OF LOOPS @[@@@S.     @#@@@S.        TO USE:  JU
)@@G@@@F@@@S.                LA,U              A3,POINTER OF THING TO FREE    JV
)@@G@@@C@T@S                 LMJ               X11,FREREC . @C@@@T.           JW
)@@G@@     LMJ               X11,FREREC . @[@@@S.     @#@@@S.        ACTION:  JX
)@@G@@@H@@@S.                UNSTACK THE RETURN ADDRESS THAT ARE AROUND, AND SJY
)@@G@@AVE THEM    @B@@@S.                ON THE END OF THE AREC   @[@@@S.     JZ
)@@G@@@[@@@S.     @#@@@SFREREC   LOCAL .  @C@@@S         LOAD    A2,AREPTR .  KA
)@@G@@     GET END AREC @F@@@S         ADD     A2,3,I .          SAY THAT WE'LKB
)@@G@@L NEED 3 WORDS    @E@@@SFRERE1   LABEL .                   RETURN HERE FKC
)@@G@@ROM WROVFL  @E@@@S         IF A2,LT,ADPCND THEN,FRERE2 . ARE WE OUT OF RKD
)@@G@@OOM?  @C@@@S         LINK    WROVFL .          TRY FOR MORE @C@@@S      KE
)@@G@@   GOTO    FRERE1.           WE CAME BACK @D@@@SFRERE2   LABEL .        KF
)@@G@@           OK TO GO ON HERE   @F@@@S         LOAD    X11,AREPTR .      GKG
)@@G@@ET PINTER TO END OF AREC AGAIN@D@@@S         STORE   A2,AREPTR .       SKH
)@@G@@ET NEW ENDPOINTER @F@@@S         SUB     A0,2,I .          UNSTACK TWO RKI
)@@G@@ETURN ADDRESSES   @F@@@S         LOADD   A1,1,A0 .         GET THOSE RETKJ
)@@G@@URN ADDRESSES     @D@@@S         STORED  A1,W1,X11 .       SAVE FOR RETUKK
)@@G@@RNING @E@@@S         IF FREDPT,ZERO THEN,FRERE3 . FIRST TIME TO RECURSE?KL
)@@G@@@D@@@S         SUB     A0,1,I .          BUMP BACK ANOTHER  @D@@@S      KM
)@@G@@   LOAD    A1,1,A0 .         GET EXTRA ADDRESS  @B@@@S         STORE   AKN
)@@G@@1,W1+2,X11 .     SAVE IT@E@@@SFRERE3   LABEL .                   ADDRESSKO
)@@G@@ES STACKED NOW    @E@@@S         LOAD    A2,FREDPT .       SET DEPTH ONEKP
)@@G@@ GREATER    @B@@@S         ADD     A2,1,I .          ''     @D@@@S      KQ
)@@G@@   STORE   A2,FREDPT .       SAVE DEPTH MARKER  @G@@@S         LINK    FKR
)@@G@@REREE .          CALL ROUTINE TO FREE THE THING NOW!  @E@@@S         LOAKS
)@@G@@D    A2,FREDPT .       POP BACK OUT ONE LEVEL   @E@@@S         SUB     AKT
)@@G@@2,1,I .          SAY ONE LEVEL FURTHER OUT@B@@@T         STORE   A2,FREDKU
)@@G@@PT .       SAVE IT@D@@@S         LOAD    X11,AREPTR .      GET END OF STKV
)@@G@@ACK   @E@@@S         SUB     X11,3,I .         GET BACK RETURN ADDRESSESKW
)@@G@@@E@@@S         STORE   X11,AREPTR .      SAVE OLD END OF STACK    @F@@@SKX
)@@G@@         IF FREDPT,ZERO THEN,FRERE4 . IS THIS THE OUTER LOOP?     @F@@@SKY
)@@G@@         LOAD    A2,W1+2,X11 .     NOPE,GET THIRD RETURN ADDRESS  @F@@@SKZ
)@@G@@         STORE   A2,W1+1,*A0 .     STICK IT BACK ON THE STACK     @H@@@SLA
)@@G@@FRERE4   LABEL .                   NOW TWO RETURN ADDRESSES LEFT ON STACLB
)@@G@@K     @C@@@S         LOADD   A1,W1,X11 .       GET THEM     @F@@@S      LC
)@@G@@   STORED  A1,W1+1,A0 .      STICK THEM ON RETURN STACK     @D@@@S      LD
)@@G@@   ADD     A0,2,I .          POINT TO LAST ONE  @D@@@S         JMP .    LE
)@@G@@               RETURN TO CALLER     @#@@@S/.       ALLOCATE @[@@@S.     LF
)@@G@@@#@@@S.        TO USE:  @G@@@S.                FIRST FILL IN THE DV OF TLG
)@@G@@HE VARIABLE TO BE ALLOCATED   @^@@@S.                THEN   @[@@@S.     LH
)@@G@@@D@@@S.                LA,U              A1,SD TO ALLOCATE  @C@@@S.     LI
)@@G@@           LA,U              A2,PTR TO SET@E@@@S.                LA,U   LJ
)@@G@@           A3,AREA TO GET SPACE FROM@C@@@S.                LMJ          LK
)@@G@@     X11,EXALLC   @[@@@S.     @C@@@S.                (THEN INITIALIZE IFLL
)@@G@@ POSSIBLE)  @[@@@S.     @#@@@S.        USES:    @G@@@S.                SLM
)@@G@@INCE THE ALLOCATE STMT IS SEPRATE FROM ALL OTHERS,    @I@@@S.           LN
)@@G@@     IT IS FELT THAT IT WILL BE FREE TO USE ALL OF THE REGISTERS...     LO
)@@G@@@[@@@S.     @G@@@S.                IF THIS IS NOT TRUE (I.E. IF THE REGSLP
)@@G@@ SHOULD BE SAVED) @^@@@S.                DO:    @[@@@S.     @C@@@S.     LQ
)@@G@@           LMJ               X5,EXMST     @[@@@S.     @B@@@S.           LR
)@@G@@     HERE TO SAVE THEM...AND  @[@@@S.     @B@@@S.                LMJ    LS
)@@G@@           X5,XXXX@[@@@S.     @A@@@S.                TO RESTORE THEM!   LT
)@@G@@@[@@@S.     @D@@@S.        NOTE THAT THIS ROUTINE IS IN TWO PASSES -    LU
)@@G@@@G@@@S.                THE FIRST DETERMINES THE SPACE REQUIRED BY THE VALV
)@@G@@RIABLE@E@@@S.                AND THE SECOND INITIALIZES THE SPACE GOTTENLW
)@@G@@@E@@@S.                AS NECESSARY FOR A GOOD HEALTHY COMPILER!  @[@@@SLX
)@@G@@.     @E@@@SEXALLC*  LOCAL .                   HERE TO DO ALLOCATE STMT LY
)@@G@@@H@@@S         STORED  A1,X1 .           SAVE REGISTERS FOR REUSE IN SECLZ
)@@G@@OND PASS    @B@@@S         STORE   A3,X3 .           ''     @H@T@S. ----MA
)@@G@@------------------------------------------------------------------------MB
)@@G@@@I@@@T. ----------------------------------------------------------------MC
)@@G@@--------------    @D@@@S.        START TO COLLECT FLAGS FOR IN GENFLG INMD
)@@G@@TO A15@H@T@S. ----------------------------------------------------------ME
)@@G@@------------------@I@@@T. ----------------------------------------------MF
)@@G@@--------------------------------    @E@@@S         LOAD    A15,GNFBSD,I MG
)@@G@@.    ASSUME STORAGE IS BASED  @ @@@S         USING   SDSECT,A1 .  @G@@@SMH
)@@G@@         IF SD0CNT,OFF,SDCLS0 THEN,EXALL0 . IS IT CONTROLLED OR BASED?  MI
)@@G@@@E@@@S         LOAD    A15,GNFCNT,I .    IT IS REALLY CONTROLLED  @G@@@SMJ
)@@G@@EXALL0   LABEL .                   HERE A15 HAS CONTROLLED/BASED FLAG   MK
)@@G@@@H@T@S. ----------------------------------------------------------------ML
)@@G@@------------@I@@@T. ----------------------------------------------------MM
)@@G@@--------------------------    @C@@@S.        DETERMINE SIZE OF GENERATIOMN
)@@G@@N LIST HEAD @H@T@S. ----------------------------------------------------MO
)@@G@@------------------------@I@@@T. ----------------------------------------MP
)@@G@@--------------------------------------    @E@@@S         LOAD    A11,4,IMQ
)@@G@@ .         ASSUME LENGTH WILL BE 4  @E@@@S         LOAD    A5,SDCLS5 .  MR
)@@G@@     GET FLAGS TO BE TESTED   @^@@@T         ON    AD$DR    @E@T@S.     MS
)@@G@@   IF SD<AREA PRESENT>,OFF THEN,EXALL1 . -> NO AREAS  @C@@@T         IF MT
)@@G@@SD5ARE,OFF THEN,EXALL1 . -> NO AREAS@E@@@S         SETON   GNFARE .     MU
)@@G@@     SET AREA PRSENT FLAG ON  @E@@@S         LOAD    A11,5,I .         IMV
)@@G@@NCLUDE SPACE FOR GENAAT @^@@@T         OFF   AD$DR    @#@@@SEXALL1   LABMW
)@@G@@EL .  @F@T@S         IF SD<POINTER PRESENT>,OFF THEN,EXALL2 . -> NO POINMX
)@@G@@TERS  @D@@@T         IF SD5PTR,OFF THEN,EXALL2 . -> NO POINTERS   @E@@@SMY
)@@G@@         SETON   GNFPTR .          SAY POINTERS PRESENT     @E@@@S      MZ
)@@G@@   LOAD    A11,5,I .         ALLOW SPACE FOR GENPAT . @H@@@SEXALL2   LABNA
)@@G@@EL .                   HERE WITH GENERATION LIST HEAD SIZE IN A11 @F@@@SNB
)@@G@@         LOAD    A2,SDDVA .        GET ADDRESS OF DV TEMPLATE     @D@@@SNC
)@@G@@         IF A2,NE,0,I THEN,EXDVAL . -> D.V. PRESENT!  @G@@@T         IF ND
)@@G@@SDSTRU,ON,SDCLS4 THEN,EXDVAL . STRUCTURES ALSO HAVE DVS     @I@T@S. ----NE
)@@G@@------------------------------------------------------------------------NF
)@@G@@--    @I@@@T. ----------------------------------------------------------NG
)@@G@@--------------------    @B@@@S.        NO DV PRESENT, MUST BE SCALAR -> NH
)@@G@@@G@@@S.                MEANS IT MUST EITHER BE ARITHMETIC OR POINTER SCANI
)@@G@@LAR!  @E@@@S.                                  (ALL OTHERS HAVE D.V.S!) NJ
)@@G@@@I@T@S. ----------------------------------------------------------------NK
)@@G@@--------------    @I@@@T. ----------------------------------------------NL
)@@G@@--------------------------------    @D@T@S         LOAD    A5,SDRVC .   NM
)@@G@@     GET SIZE OF ITEM   @D@@@T         LOAD    A5,SDRTC .        GET SIZNN
)@@G@@E OF ITEM   @G@@@S         ADD     A5,A11 .          ADD IN SIZE OF GENENO
)@@G@@RATION LIST HEAD  @F@@@S         LOAD    A3,X3 .           GET AREA TO GNP
)@@G@@ET STORAGE FROM   @G@@@S         LINK    STORALLOC .       GET STORAGE (NQ
)@@G@@DESTROYS A1,A2,A4,R2,A6)@I@@@S         USING   GENLST,A1 .       STORAGENR
)@@G@@ GETTER RETURNS ADDRESS OF STORAGE IN     @F@@@S         STORE   A15,GENNS
)@@G@@FLG .      SET FLAGS COLLECTED SO FAR!    @E@@@S         STORE   X1,GENSNT
)@@G@@D .        SET SD OF ITEM ALLOCATED @F@@@S         ADDU    A1,A11 .     NU
)@@G@@     GET ADDRESS OF DATA INTO A2    @G@@@S         STORE   A2,GENADR .  NV
)@@G@@     SET ADDRESS IN GENERATION LIST HEAD  @E@@@S         IF A11,EQ,5,I TNW
)@@G@@HEN,EXALPT . -> ALLOCATING POINTER? @I@T@S. ----------------------------NX
)@@G@@--------------------------------------------------    @I@@@T. ----------NY
)@@G@@--------------------------------------------------------------------    NZ
)@@G@@@C@@@S.        HERE IT IS ARITH, INIT TO 'EXINCN'     @I@T@S. ----------OA
)@@G@@--------------------------------------------------------------------    OB
)@@G@@@I@@@T. ----------------------------------------------------------------OC
)@@G@@--------------    @D@@@S         LOADXI  A2,1,I .          SET TO WALK TOD
)@@G@@HRU   @H@@@S         USING   SDSECT,X1 .       REMEMBER THAT STORAGE GETOE
)@@G@@TER DESTROYES A1! @D@@@S         SETL    R1,SDRTC .        GET WORD LENGOF
)@@G@@TH    @D@@@S         LOAD    A6,EXINCN .       GET INITAL VALUE   @#@@@SOG
)@@G@@EXALL3   LABEL .  @C@@@S         STORE   A6,W1,*A2 .       INITIALIZE   OH
)@@G@@@E@@@S         LOOP    R1,EXALL3 .       INITALIZE ALL OF THE VAR!@G@@@SOI
)@@G@@         GOTO    SETPTR .          MERGE TO SET THE POINTER SPECIFIED   OJ
)@@G@@@E@@@SEXALPT   LABEL .                   HERE WITH POINTER SCALAR @G@@@SOK
)@@G@@.                                  INITIALIZE IT TO 'NULL' OR 'NULLO'   OL
)@@G@@@^@T@SUSING    POINTER,A2 .   @ @@@T         USING   POINTER,A2 . @E@@@SOM
)@@G@@         MOVE PTRADR,0,I .         SET ADDRESS TO BE ILLEGAL@E@@@S      ON
)@@G@@   LOADA   A6,SDNULL .       ASSUME IT IS POINTER     @E@T@S         IF OO
)@@G@@SDPTOF,OFF,SDCLS1 TEN,EXALP1 . -> IT IS POINTER @E@@@T         IF SDPTOFOP
)@@G@@,OFF,SDCLS1 THEN,EXALP1 . -> IT IS POINTER@E@@@S         LOADA   A6,SDNUOQ
)@@G@@LO .       HERE GET THE NULLO SD    @#@@@SEXALP1   LABEL .  @E@@@S      OR
)@@G@@   STORE   A6,PTRSD .        SET SD FOR 'NULL' POINTER@E@@@S         MOVOS
)@@G@@E    PTRLAS-FH1,0,I .  SET 'OFFSET' TO ILLEGAL  @D@@@S         MOVE    POT
)@@G@@TRGEN-FH1,0,I .  SET END OF PTRAUT  @D@@@S         STORE   A2,GENPAT .  OU
)@@G@@     SET POINTER LIST   @H@@@S         GOTO    SETPTR .          MEGE TOOV
)@@G@@ SET POINTER FROM 'SET' PHRASE!     @I@T@S/. ---------------------------OW
)@@G@@--------------------------------------------------    @I@@@T/. ---------OX
)@@G@@--------------------------------------------------------------------    OY
)@@G@@@C@@@S.        ALLOCATE SOMETHING WITH A D.V. HERE    @G@@@S.           OZ
)@@G@@     IT COULD BE STRUCTURE, ARRAY, OR AREA OR STRING SCALAR!@I@T@S. ----PA
)@@G@@------------------------------------------------------------------------PB
)@@G@@--    @I@@@T. ----------------------------------------------------------PC
)@@G@@--------------------    @#@@@SEXDVAL   LABEL .  @E@T@S         LOAD    APD
)@@G@@13,SDDVSZ,A2 .   GET DV SIZE***********   @C@@@T         LOAD    A13,SDDPE
)@@G@@VLG .      GET DV SIZE  @I@T@S.                                  ARWORK PF
)@@G@@IN THE AREC IS SUPPOSED TO CONTAIN THE    @D@@@T         LOAD    X4,SDBKPG
)@@G@@LK .       GET THE BLOCK LINK @D@@@T         LOAD    X4,SDBSLD,X4 .    GPH
)@@G@@ET THE BLOCK DEPTH@B@@@T         SUB     X4,1,I . IT IS OFF BY ONE@G@@@TPI
)@@G@@         ADD     X4,X10 .          GET THE STATIC LINK TO THAT BLOCK    PJ
)@@G@@@E@@@T         LOAD    X4,W1H2,X4 .      POINT TO THAT BLOCK!     @F@@@TPK
)@@G@@         ADD     X4,SDLCOF .       ADD IN THE OFFSET OF THE D.V.  @C@@@TPL
)@@G@@         LOADXI  X4,1,I .          SET INCREMENT@D@@@T         STORE   XPM
)@@G@@4,ARWORK .       SAVE FOR LATER     @C@T@S.                             PN
)@@G@@     DV ADDRESS   @E@T@S         LOAD    X4,ARWORK .       GET AREC DV APO
)@@G@@DDRESS .    @C@T@S         LOADXI  X4,1,I .          GET INCREMENT@C@@@SPP
)@@G@@         USING   SDSECT,A1 .       SET BACK     @E@@@SEXASON   LABEL .  PQ
)@@G@@                 LOOK FOR LEFTMOST SON    @G@T@S         IF SD0STU,OFF,SPR
)@@G@@DCLS0 THEN,EXASO1 . -> HAVE LEFTMOST SON NOW    @G@@@T         IF SDSTRUPS
)@@G@@,OFF,SDCLS4 THEN,EXASO1 . -> HAVE LEFTMOST SON NOW    @D@@@S         LOAPT
)@@G@@D    A1,SDSON,A1 .     MOVE DOWN TO SON   @G@@@S         SETON   GNFSTU PU
)@@G@@.          REMEMBER THAT THIS IS A STRUCTURE    @E@@@S         GOTO    EPV
)@@G@@XASON .           TRY DOWN ONE LEVEL .    @D@@@SEXASO1   LABEL .        PW
)@@G@@           HERE WITH 'LEAF'   @E@T@S         IF SD0ARE,ISON,SDCLS0 THEN,PX
)@@G@@EXASAR . -> IS IT AREA? @G@@@T         DO AD$DR , IF SD0ARE,ISON,SDCLS0 PY
)@@G@@THEN,EXASAR . -> IS IT AREA?  @E@@@S         IF SDARST,ON,SDCLS1 THEN,EXPZ
)@@G@@ASST . -> IT IS STRING! @I@T@S. ----------------------------------------QA
)@@G@@--------------------------------------    @I@@@T. ----------------------QB
)@@G@@--------------------------------------------------------    @E@@@S.     QC
)@@G@@   HERE IF EITHER ARITH OR POINTER ARRAY OR SCALAR    @I@T@S. ----------QD
)@@G@@--------------------------------------------------------------------    QE
)@@G@@@I@@@T. ----------------------------------------------------------------QF
)@@G@@--------------    @D@@@S         LOAD    A5,SDRTC .        GET VARIABLE QG
)@@G@@SIZE  @I@@@S         LOAD    A6,A5 .           GET SIZE OF TOTAL VARIABLQH
)@@G@@E (YOU'LL SEE LATER)    @G@@@S         IF SDARRY,ON,SDCLS2 THEN,EXARRY .QI
)@@G@@   -> ARRAY OF ARITH OR PTRS  @ @@@S         USING   WORD,X4 .    @F@@@SQJ
)@@G@@         LOAD    A6,ONEZER .       GET SIZE AND VIRTUALL ORIGIN . @C@@@SQK
)@@G@@         STORE   A6,W1,*X4 .       SET INTO DV  @H@@@S         ADD     AQL
)@@G@@13,A5 .          ADD IN DATA ITEM SIZE TO SPACE REQUIRED    @D@@@S      QM
)@@G@@   GOTO    EXBROT .          -> LOOK FOR BROTHER@D@@@SEXASST   LABEL .  QN
)@@G@@                 HERE FOR STRINGS   @G@@@S         USING   ARDVDT,X4 .  QO
)@@G@@     LOOK LIKE A STRING ARRAY FOR A WHILE @E@T@S         LOAD    A5,ARDVQP
)@@G@@CL .       GET LENGTH FROM D.V.     @E@@@T         LOAD    A5,ARDVML .  QQ
)@@G@@     GET LENGTH FROM D.V.     @F@@@T         STORE   A5,ARDVCL .       SQR
)@@G@@AVE STRING LEN IN  CASE VAR   @D@@@S         SRBD    A5,2 .            DQS
)@@G@@IVIDE BY 4/WORD   @D@@@S         SRB     A6,34 .           JUSTIFY REMAIQT
)@@G@@NDER  @E@@@S         IF A6,EQ,0,I THEN,EXASS1 . IS THERE A REMAINDER?   QU
)@@G@@@D@@@S         ADD     A5,1,I .          YES, ACCOUNT FOR IT@F@@@SEXASS1QV
)@@G@@   LABEL .                   STRING WORDLENGTH IS IN A5!    @D@@@S      QW
)@@G@@   STORE   A5,ARDVML .       SAVE FOR PASS2     @E@@@S         IF SDARRYQX
)@@G@@,ON,SDCLS2 THEN,EXSTAR . IT IS AN ARRAY   @G@@@S         ADD     A13,A5 QY
)@@G@@.          ADD IN SIZE NEEDED FOR STRING/AREA   @D@@@S         MOVE    WQZ
)@@G@@1,ONEZER .       MARK AS SCALAR .   @D@@@S         LOADXM  X4,W1U+2,X4 .RA
)@@G@@     BUMP DV POINTER    @D@@@S         GOTO    EXBROT .          LOOK FORB
)@@G@@R BROTHER   @^@@@T         ON    AD$DR    @G@@@SEXASAR   LABEL .        RC
)@@G@@           HERE IT IS AN AREA SCALAR OR ARRAY   @D@@@S         LOAD    ARD
)@@G@@5,ARDVCL .       GET THE AREA SIZE  @F@@@S         GOTO    EXASS1 .     RE
)@@G@@     MAKE BELIEVE IT IS A STRING!   @^@@@T         OFF   AD$DR .  @G@@@SRF
)@@G@@EXSTAR   LABEL .                   HERE IT IS A STRING OR AREA ARRAY    RG
)@@G@@@H@@@S         LOAD    A6,2,I .          SAY ADDRESSABLE DATA ITEM IS TWRH
)@@G@@O WORDS     @F@@@S         ADD     A5,2,I .          SAY DATA LENGTH IS RI
)@@G@@'BIGGER'    @E@@@SEXARRY   LABEL .                   ALL ARRAYS COME HERRJ
)@@G@@E!    @A@@@S.                A5= DATA LENGTH    @B@@@S.                ARK
)@@G@@6= ADDRESSABLE LENGTH   @A@T@SSTORE    A6,R2 . SAVE FOR LATER     @D@@@TRL
)@@G@@         STORE   A6,R2 .           SAVE FOR LATER     @C@@@S         LOARM
)@@G@@D    A3,SDNDIM .       GET # OF DIMS@C@@@S         ADD     A3,A3 .      RN
)@@G@@     GET 2*#DIMS  @D@@@S         STORE   A3,R3 .           SAVE FOR LATERO
)@@G@@R     @H@@@S         ADD     A3,W1U,X4 .       ADD IN THE START OF THE DRP
)@@G@@V FOR THIS ARRAY  @E@@@S         LOADXI  A3,-2,I .         SET TO BACK URQ
)@@G@@P THRU DV   @H@@@S         LOAD    A10,0,I .         SAY V.O. STARTS AT RR
)@@G@@0 (WE'LL FIX THIS LATER)@G@@@S         SETON   GNFARY .          SAY ARRRS
)@@G@@AY IS PRESENT IN STRUCTURE    @E@@@S         SETL    R1,SDNDIM .       SRT
)@@G@@ET TO LOOP THRU ALL DIMS@G@@@S         LOAD    A8,1,I .          GET CONRU
)@@G@@STANT FOR COMPUTING EXTENT    @#@@@SLOOPTOP  LABEL .  @C@@@S         STORV
)@@G@@RE   A6,W1,A3 .        SET M(I)     @D@@@S         LOAD    A7,W1XH2+1,A3RW
)@@G@@ .   GET LOWER BOUND    @D@@@S         MPYS    A7,A6 .           COMPUTERX
)@@G@@ L(I)*M(I)  @E@@@S         SUB     A10,A7 .          V.O.= V.O. - L(I)*MRY
)@@G@@(I)!  @C@@@S         ADDU    A8,W1H1+1,*A3 .   GET EXTENT   @F@@@S      RZ
)@@G@@   MPYS    A6,A9 .           GET NEXT MULTIPLIER = M(I)*E(I)@E@@@S      SA
)@@G@@   IF A6,LT,0177777,I THEN,LOOPT1 . -> MULT IN BOUNDS?@E@@@S         LOASB
)@@G@@D    X4,A1 .           OOPS-> OUT OF BOUNDS     @G@@@S         GOTO    ESC
)@@G@@XMPOV .          MULTIPLIER TOO LAGRE IN ARRAY SDX4   @#@@@SLOOPT1   LABSD
)@@G@@EL .  @E@@@S         LOOP    R1,LOOPTOP .      GO THRU ENTIRE ARRAY     SE
)@@G@@@I@T@S. ----------------------------------------------------------------SF
)@@G@@--------------    @I@@@T. ----------------------------------------------SG
)@@G@@--------------------------------    @E@@@S.        HERE    A10=OFFSET TOSH
)@@G@@ ADD TO ADDRESS TO GET V.O.   @D@@@S.                A6=# OF WORDS IN 'ASI
)@@G@@DDRESSABLE' ITEM  @I@T@S. ----------------------------------------------SJ
)@@G@@--------------------------------    @I@@@T. ----------------------------SK
)@@G@@--------------------------------------------------    @D@@@S         STOSL
)@@G@@RE   A10,ARDVOR,X4 .   SAVE V.O. CONSTANT @D@@@S         DSA     A6,36 .SM
)@@G@@           PREPARE FOR DIVDE  @E@@@S         DIV     A6,R2 .           GSN
)@@G@@ET NUMBER OF ENTRIES    @E@T@S         STORE   A7,ARDVOR+FH1,X4 . SAVE NSO
)@@G@@UMBER OF ENTRIES  @E@@@T         STORE   A6,ARDVOR+FH1,X4 . SAVE NUMBER SP
)@@G@@OF ENTRIES  @D@T@S         MPYS    A7,A5 .           GET REAL LENGTH    SQ
)@@G@@@D@@@T         MPYS    A6,A5 .           GET REAL LENGTH    @E@T@S      SR
)@@G@@   ADD     A13,A7 .          ADD INTO SIZE WANTED     @E@@@T         ADDSS
)@@G@@     A13,A6 .          ADD INTO SIZE WANTED     @E@@@S         ADD     XST
)@@G@@4,R3 .           SKIP OVER DIMS IN DV     @E@@@S         LOADXM  X4,W1U+SU
)@@G@@2,X4 .     GET PAST TOP OF DV STUFF @F@@@S.        GOTO    EXBROT .     SV
)@@G@@     GO TO THE BROTHER LOOKER UPPER @I@T@S. ----------------------------SW
)@@G@@--------------------------------------------------    @I@@@T. ----------SX
)@@G@@--------------------------------------------------------------------    SY
)@@G@@@D@@@S.        HERE WE ARE TO LOOK FOR THIS GUY'S BROTHER   @I@T@S. ----SZ
)@@G@@------------------------------------------------------------------------TA
)@@G@@--    @I@@@T. ----------------------------------------------------------TB
)@@G@@--------------------    @#@@@SEXBROT   LABEL .  @D@@@S         IF A1,EQ,TC
)@@G@@X1 THEN,GETIT .  -> END OF ''PASS1''@F@@@S         IF SDBROT,ZERO THEN,ETD
)@@G@@XBRO1 . -> NO BROTHER, LOOK FOR DAD @E@@@S         LOAD    A1,SDBROT,A1 TE
)@@G@@.    MOVE TO LOOK AT BROTHER  @E@@@S         GOTO    EXASON .          LTF
)@@G@@OOK FOR BROTHER'S SONS  @G@@@SEXBRO1   LABEL .                   HERE TOTG
)@@G@@ LOOK FOR THIS GUY'S FATHER   @E@@@S         LOAD    A1,SDDAD,A1 .     GTH
)@@G@@ET POINTER TO SD OF DAD @F@@@S         GOTO    EXBROT .          LOOK FOTI
)@@G@@R FATHER'S BROTHER NOW  @I@T@S/. ---------------------------------------TJ
)@@G@@-------------------------------------     @I@@@T/. ---------------------TK
)@@G@@--------------------------------------------------------    @B@@@S.     TL
)@@G@@   NOW A11=GENERATION LIST HEAD SIZE@C@@@S.                A13 = SIZE OFTM
)@@G@@ DATA AREA WANTED @D@@@S.                X3 = AREA TO GET THE STORAGE FRTN
)@@G@@OM    @H@T@S. ----------------------------------------------------------TO
)@@G@@------------------@I@@@T. ----------------------------------------------TP
)@@G@@--------------------------------    @E@@@SGETIT    LABEL .              TQ
)@@G@@     HERE TO GET THE STORAGE  @G@@@S         LOAD    A3,X3 .           GTR
)@@G@@ET A POINTERR TO THE AREA HEADER    @F@@@S         LOAD    A5,A11 .     TS
)@@G@@     GET GENERATION LIST HEAD SIZE  @E@@@S         ADD     A5,A13 .     TT
)@@G@@     ADD IN THE SIZE WANTED   @E@@@S         LINK    STORALLOC .       GTU
)@@G@@ET THE STORAGE NEEDED   @I@@@S         USING   WORD,A1 .         THE STOTV
)@@G@@RAGE ALLOCATOR RETURNS THE ADDR IN A1     @G@@@S         MOVE    W1+5,0,TW
)@@G@@I .        CLEAR OUT THE GENAAT,GENPAT WORD     @ @@@S         USING   GTX
)@@G@@ENLST,A1 .  @G@@@S         ADDU    A1,A11 .          GET ADDRESS OF FIRSTY
)@@G@@T DATA INTO A2    @C@@@S         LOADXI  A2,1,I .          SET INCREMENTTZ
)@@G@@@F@@@S         STORE   A2,X4 .           SAVE POINTER TO WHERE DV GOES  UA
)@@G@@@ @@@S         USING   SDSECT,X1 .  @F@T@S         LOADXM  X5,SDDVA .   UB
)@@G@@     GET ADDRESS OF D.V. TEMPLATE   @E@T@S         SETL    R1,SDDVSZ,X5 UC
)@@G@@.    GET SIZE TO TRANSFER     @E@@@T         LOAD    R1,SDDVLG .       GUD
)@@G@@ET SIZE TO TRANSFER     @F@@@S         LOAD    X5,ARWORK .       GET ADDUE
)@@G@@RESS OF D.V. IN AREC    @G@@@S         BT      A2,0,*X5 .        MOVE THUF
)@@G@@E AREC COPY TO THE STORAGE    @E@@@S         LOAD    X5,A2 .           GUG
)@@G@@ET A POINTER TO 'NEXT'  @G@@@S         STORE   A15,GENFLG .      SAVE FLUH
)@@G@@AGS THAT HAVE BEEN GATHERED   @D@@@S         STORE   X4,GENADR .       SUI
)@@G@@ET ADDRESS OF D.V.@D@@@U         STORE   X1,GENSD .        SET SD OF THIUJ
)@@G@@NG    @G@@@U         MOVE    GENPAT,0,I .      IN CASE PTRS PRESENT SET UK
)@@G@@LIST EMPTY  @G@@@S         LOAD    A2,X1 .           SET TO WALK THRU STUL
)@@G@@RUCTURE AGAIN     @ @@@S         USING   SDSECT,A2 .  @F@@@SAFSON    LABUM
)@@G@@EL .                   HERE TO LOOK FOR LEFTMOST SON  @E@T@S         IF UN
)@@G@@SD0STU,OFF,SDCLS3 THEN,AFSON1 . -> NO MORE SONS @E@@@T         IF SDSTRUUO
)@@G@@,OFF,SDCLS4 THEN,AFSON1 . -> NO MORE SONS @D@@@S         LOAD    A2,SDSOUP
)@@G@@N,A2 .     MOVE DOWN TO SON   @F@@@S         GOTO    AFSON .           AUQ
)@@G@@ND THEN TRY FOR SON'S SON     @E@@@SAFSON1   LABEL .                   HUR
)@@G@@ERE WITH LEFTMOST SON   @E@@@T         LOADXI  X5,1,I .          THIS GEUS
)@@G@@TS ALTERED LATER  @C@@@S         LOAD    A13,ARDVML,X4 .   GET STR#WDS  UT
)@@G@@@E@@@S         LOAD    A12,ARDVOR+FH1,X4 . GET NUMBER OF ENTRIES  @E@@@SUU
)@@G@@         IF SDARST,OFF,SDCLS1 THEN,AFNOTS . -> NOT STRING   @H@T@S. ----UV
)@@G@@------------------------------------------------------------------------UW
)@@G@@@I@@@T. ----------------------------------------------------------------UX
)@@G@@--------------    @D@@@S.        HERE IT MUST BE A STRING OR A STRING ARUY
)@@G@@RAY!  @H@T@S. ----------------------------------------------------------UZ
)@@G@@------------------@I@@@T. ----------------------------------------------VA
)@@G@@--------------------------------    @C@@@S         LOAD    A9,0,I .     VB
)@@G@@     ASSUME CHAR  @D@@@S         IF SDCHBT,OFF,SDCLS1 THEN,AFSON2 . IT IVC
)@@G@@S CHAR@E@@@S         LOAD    A9,ARCHBT,I .     IT IS BIT STRING HERE    VD
)@@G@@@#@@@SAFSON2   LABEL .  @D@@@S         LOAD    A10,ARDVCL .      GET CURVE
)@@G@@RENT LENGTH @E@@@S         SLB     A10,18 .          GET INTO MAXLEN POSVF
)@@G@@ITION @D@@@S         IF SDFXVR,ON,SDCLS1 THEN,AFSON3 . -> VARYING @C@@@SVG
)@@G@@         ADD     A9,ARDVUN*0100,I . SAY UNINITED@E@@@S         ADD     AVH
)@@G@@10,ARDVCL .      GET CURRENT(FIXED) LENGTH@F@@@S         GOTO    AFSON4 VI
)@@G@@.          -> MERGE WITH VARYING STRINGS  @F@@@SAFSON3   LABEL .        VJ
)@@G@@           VARYING LENGTH STRINGS HERE    @D@T@S         ADD     A9,ARFXVK
)@@G@@VR*0100,I . SET VARYING FLAG  @D@@@T         ADD     A9,ARDVVR*0100,I . VL
)@@G@@SET VARYING FLAG  @G@@@SAFSON4   LABEL .                   BOTH TYPES OFVM
)@@G@@ STRINGS MERGE HERE     @E@@@S         SLB     A9,18 .           GET FLAVN
)@@G@@GS WHERE THEY GO  @C@@@S         LOAD    X6,X4 .           GET DV PTR   VO
)@@G@@@F@T@S         IF SDARRY,OFF,SDCLS2 THEN,AFSON5 . IS THIS AN ARRAY?     VP
)@@G@@@F@@@T         IF SDARRY,OFF,SDCLS2 THEN,AFSON8 . IS THIS AN ARRAY?     VQ
)@@G@@@E@@@S         ADD     X4,SDNDIM .       SKIP OVER DIMS IN DV     @E@@@SVR
)@@G@@         ADD     X4,SDNDIM .       SKIP OVER DIMS IN DV     @F@T@S      VS
)@@G@@   LOAD    A6,ARDVOR+XH2,X6 . GET VIRTUAL ORIGIN FACTOR     @F@@@T      VT
)@@G@@   LOAD    A6,ARDVOR+FXH2,X6 . GET VIRTUAL ORIGIN FACTOR    @E@@@S      VU
)@@G@@   ADD     A6,W1XU,X5 .      ADD IN THE REAL ORIGIN   @C@@@S         STOVV
)@@G@@RE   A6,ARDVOR,X6 .    SET REAL V.O.@G@@@S         LOAD    X6,X5 .      VW
)@@G@@     POINTER TO WHERE ARRAY OF D.V.S GOES @E@@@S         ADD     X5,A12 VX
)@@G@@.          ADD IN NUMBER OF D.V.S   @E@@@S         ADD     X5,A12 .     VY
)@@G@@     ADD IN NUMBER OF D.V.S   @F@@@TAFSON8   LABEL .                   HVZ
)@@G@@ERE TO PREPARE FOR SCALAR INIT@E@@@S         LOOP    A12,AFSON5 .      SWA
)@@G@@ET UP TO SET THE D.V.S  @#@@@SAFSON5   LABEL .  @C@@@S         STORE   AWB
)@@G@@9,W1,X6 .        SET THE FLAGS@E@@@S         STORE   X5,W1H2,X6 .      SWC
)@@G@@ET THE STRING ADDRESS   @F@@@S         STORE   A10,W1+1,X6 .     SET THEWD
)@@G@@ MAX AND CURRENT LENGTH @C@@@S         IF A9,NE,0,I THEN,AFSON6 . -> STRWE
)@@G@@ING   @E@@@S         USING   AREA,X6 .         SET TO FIX AREA HEADER   WF
)@@G@@@D@@@S         LOAD    A6,GENAAT .       LINK AREAS TOGETHER@D@@@S      WG
)@@G@@   STORE   X6,GENAAT .       ADD TO THE LIST    @F@@@S         STORE   AWH
)@@G@@6,AREAUT .       LINK INTO THIS AREA HEADER     @D@@@S         STORE   AWI
)@@G@@13,W1,X5 .       SET FRENXT,FRELEN  @F@@@SAFSON6   LABEL .              WJ
)@@G@@     HERE FOR REST OF D.V. LOOP     @F@@@S         ADD     X6,2,I .     WK
)@@G@@     MOVE FOR NEXT TIME THRU LOOP   @D@@@S         ADD     X5,A13 .     WL
)@@G@@     MOVE 'NEXT' POINTER@G@@@S         LOOP    A12,AFSON5 .      LOOP THWM
)@@G@@RU A12 MANY D.V.S TO INIT     @H@@@S         ADD     X4,2,I .          BWN
)@@G@@UMP PAST STRING D.V. IN STRUCTURE D.V.    @E@@@S         GOTO    AFBROT WO
)@@G@@.          GO LOOK FOR  BROTHER     @E@@@SAFNOTS   LABEL .              WP
)@@G@@     HERE WHEN NOT STRING     @^@@@T         ON    AD$DR    @E@@@S      WQ
)@@G@@   IF SD0ARE,ISNTON,SDCLS0 THEN,AFNOTA . TRY AREA     @H@T@S. ----------WR
)@@G@@------------------------------------------------------------------@I@@@TWS
)@@G@@. ----------------------------------------------------------------------WT
)@@G@@--------    @D@@@S.        HERE IT IS EITHER AREA OR ARRAY OF AREAS     WU
)@@G@@@H@T@S. ----------------------------------------------------------------WV
)@@G@@------------@I@@@T. ----------------------------------------------------WW
)@@G@@--------------------------    @D@@@S         SLBD    A9,72 .           CWX
)@@G@@LEAR A9,A10 .     @D@@@S         GOTO    AFSON4 .          MERGE W/STRINWY
)@@G@@GS    @^@@@T         OFF   AD$DR    @D@T@SAFNOTA   LABEL .              WZ
)@@G@@     NOT STRINGS OR AREA@H@T@S. ----------------------------------------XA
)@@G@@------------------------------------@I@@@T. ----------------------------XB
)@@G@@--------------------------------------------------    @A@@@S.        MUSXC
)@@G@@T BE  POINTER OR ARITH! @B@@@S.        COULD BE EITHER SCALAR OR ARRAY  XD
)@@G@@@H@T@S. ----------------------------------------------------------------XE
)@@G@@------------@I@@@T. ----------------------------------------------------XF
)@@G@@--------------------------    @D@@@TAFNOTA   LABEL .                   NXG
)@@G@@OT STRINGS OR AREA@D@T@S         LOAD    A6,ARDVOR+XH2,X4 . GET VIRT ORIXH
)@@G@@G     @D@@@T         LOAD    A6,ARDVOR+FXH2,X4 . GET VIRT ORIG    @D@@@SXI
)@@G@@         ADD     A6,W1U,X5 .       ADD ACTUAL ORIGIN  @C@@@S         STOXJ
)@@G@@RE   A6,ARDVOR,*X4 .   SAVE V.O.    @E@@@S         IF SDARRY,OFF,SDCLS2 XK
)@@G@@THEN,AFNOT1 . -> NOT ARRAY    @G@@@S         ADD     X4,SDNDIM .       SXL
)@@G@@KIP OVER DIMS IN STRUCTURE D.V.     @G@@@S         ADD     X4,SDNDIM .  XM
)@@G@@     SKIP OVER DIMS IN STRUCTURE D.V.     @G@@@S         ADD     X4,1,I XN
)@@G@@.          BUMP OVER EXTRA WORD IN DV OF ARRAY  @#@@@SAFNOT1   LABEL .  XO
)@@G@@@E@@@S         LOAD    A5,A12 .          GET NUMBER OF THINGS     @D@@@SXP
)@@G@@         MPYS    A5,SDRTC .        GET NUMBER OF WORDS@E@@@S         LOAXQ
)@@G@@D    R1,A5 .           SET FOR BLOCK TRANSFER   @F@@@S         IF SD0PTRXR
)@@G@@,ISON,SDCLS0 THEN,AFNOT2 . -> IT IS POINTER     @F@@@S         LOADA   AXS
)@@G@@3,EXINCN .       GET ADDRESS OF 0377777777777   @D@@@S         BT      XXT
)@@G@@5,0,*A3 .        MOVE TO INITIALIZE @E@@@S         GOTO    AFBROT .     XU
)@@G@@     GO LOOK FOR THE BROTHER  @D@@@SAFNOT2   LABEL .                   HXV
)@@G@@ERE I IS POINTER  @C@T@S         LOADA   A3,KKDO .         POINT TO ZEROXW
)@@G@@@C@@@T         LOADA   A3,KKD0 .         POINT TO ZERO@E@@@S         STOXX
)@@G@@RE   X5,R2 .           SAVE TILL AFTER THE BT!  @F@@@S         BT      XXY
)@@G@@5,0,*A3 .        CLEAR THE POINTERS TO START    @C@@@S         LOAD    XXZ
)@@G@@5,R2 .           GET IT BACK  @D@@@S         LOADA   A5,SDNULL .       AYA
)@@G@@SSUME POINTER     @^@@@T         ON    AD$DR    @E@@@S         IF SDPTOFYB
)@@G@@,OFF,SDCLS1 THEN,AFNOT3 . -> IS IT OFFSET?@C@@@S         LOADA   A5,SDNUYC
)@@G@@LO .       IT IS OFFSET @^@@@T         OFF    AD$DR   @#@@@SAFNOT3   LABYD
)@@G@@EL .  @E@@@S         LOADXI  X5,3,I .          SET TO SKIP THRU POINTERSYE
)@@G@@@G@U@T         MOVE    GENPAT,0,I .      THIS FLD COULD BE JUNK AFTER ALYF
)@@G@@LOC   @C@@@S         LOOP    A12,AFNOT4 .      START LOOP   @E@@@SAFNOT4YG
)@@G@@   LABEL .                   TOP OF POINTER INIT LOOP @B@@@S         STOYH
)@@G@@RE   A5,PTRSD,X5 .     SET SD @D@@@S         LOAD    A6,GENPAT .       GYI
)@@G@@ET POINTER LIST   @E@@@S         STORE   X5,GENPAT .       SET LINK TO TYJ
)@@G@@HIS ONE     @E@@@S         STORE   A6,PTRAUT,*X5 .   LINK TOGETHER POINTYK
)@@G@@ERS   @H@@@S         LOOP    A12,AFNOT4 .      GO THRU ALL OF THE POINTEYL
)@@G@@RS IN THE ARRAY   @F@@@S.        GOTO    AFBROT .          GO ON TO THISYM
)@@G@@ GUY'S BROTHER    @H@T@S. ----------------------------------------------YN
)@@G@@------------------------------@I@@@T. ----------------------------------YO
)@@G@@--------------------------------------------    @C@@@S.        HERE TO LYP
)@@G@@OOK FOR THIS GUY'S BROTHER    @H@T@S. ----------------------------------YQ
)@@G@@------------------------------------------@I@@@T. ----------------------YR
)@@G@@--------------------------------------------------------    @#@@@SAFBROTYS
)@@G@@   LABEL .  @E@@@S         IF A2,EQ,X1 THEN,SETPTR . IF AT ORIGIONAL -> YT
)@@G@@DONE  @D@@@S         IF SDBROT,ZERO THEN,AFDAD . LOOK FOR FATHER  @C@@@SYU
)@@G@@         LOAD    A2,SDBROT,A2 .    GET BROTHER  @E@@@S         GOTO    AYV
)@@G@@FSON .           LOOK FOR BROTHER'S SON   @F@@@SAFDAD    LABEL .        YW
)@@G@@           HERE TO FIND THIS BROTHER'S SON@B@@@S         LOAD    A2,SDDAYX
)@@G@@D,A2 .     MOVE UP@G@@@S         GOTO    AFBROT .          AND THEN LOOKYY
)@@G@@ FOR FATHER'S BROTHER   @I@T@S/. ---------------------------------------YZ
)@@G@@-------------------------------------     @I@@@T/. ---------------------ZA
)@@G@@--------------------------------------------------------    @B@@@S.     ZB
)@@G@@   HERE WHEN FINISHED ALLOCATION    @D@@@S.                IT IS NOW TIMZC
)@@G@@E TO SET THE POINTER    @C@@@S.                AND THEN CALL IN THE INITZD
)@@G@@CODE  @F@@@S.        A1 STILL HAS THE GENERATION LIST HEAD, AND X1 THE SZE
)@@G@@D     @H@T@S. ----------------------------------------------------------ZF
)@@G@@------------------@I@@@T. ----------------------------------------------ZG
)@@G@@--------------------------------    @[@@@S.     @A@T@S.        X2 MAY COZH
)@@G@@NTAIN AN OFFSET!  @E@@@T.        X2 MAY CONTAIN AN OFFSET INSTEAD OF A PZI
)@@G@@OINTER!     @C@T@S.        ALSO NEED TO SET ADDRESS INTO PTRADR!  @[@@@SZJ
)@@G@@.     @#@@@SSETPTR   LABEL .  @ @@@T         USING   POINTER,X2 . @G@@@TZK
)@@G@@         MOVE    GENPRV,PTRGEN .   SET LINK FOR CONTROLLED VARIABLES    ZL
)@@G@@@F@@@T         STORE   A1,PTRGEN .       POINT TO CURRENT GEN LISTHEAD  ZM
)@@G@@@G@@@T         MOVE    PTRADR,GENADR .   SET THE ADDRESS INTO THE POINTEZN
)@@G@@R     @ @T@S         USING   POINTER,X2 . @E@@@S         STORE   X2,GENPZO
)@@G@@TR,A1 .    SET LINK TO FIRST POINTER@C@@@S         STORE   A1,PTRLAS,X2 ZP
)@@G@@.    SET BACK LINK@E@@@S         STORE   X1,PTRSD .        SET THE POINTZQ
)@@G@@ER'S SD     @F@@@S         MOVE    PTRNXT,0,I .      SAY LAST LINK ON POZR
)@@G@@INTER CHAIN @[@@@S.     @^@@@S.        INITIALIZE!?   @[@@@S.     @D@@@SZS
)@@G@@         JMP .                     RETURN TO USER!    @C@@@T/. FILLIN DVZT
)@@G@@  USING CODE GENNED ON BLK ENTRY    @E@@@T. ASSUMES A1 HAS SD OF THE ARRZU
)@@G@@AY,STRING,OR STRUCTURE NAME   @[@@@T.     @#@@@TEXADVF*  LOCAL .  @ @@@TZV
)@@G@@         USING   SDSECT,A1 .  @H@@@T         LOAD    A2,A1 .           UZW
)@@G@@SED AS A COMPARATOR TO SEE IF STRUCT DONE @#@@@TEXADV1   LABEL .  @G@@@TZX
)@@G@@         IF SDSTRU,OFF,SDCLS4 THEN,EXADV2 . -> AT A LEAF OR NOT A STRUCTZY
)@@G@@@ @@@T         LOAD    A1,SDSON .   @ @@@T         GOTO    EXADV1 .     ZZ
)@@G@@@#@@@TEXADV2   LABEL .  @F@@@T         STORED  A1,ALDVSV .       SAVE SDAA
)@@G@@ ACROSS FILLIN CODE     @D@@@T         LOAD    A3,SDALFD . ADDR OF CODE AB
)@@G@@TO FILLIN   @^@@@T         LINK    0,A3 . @ @@@T         LOADD   A1,ALDVAC
)@@G@@SV .  @#@@@TEXADV3   LABEL .  @F@@@T         IF A1,EQ,A2 THEN,JMP . BACKAD
)@@G@@ AT ROOT SD OR NOT A STRUCT   @B@@@T         IF SDBROT,ZERO THEN,EXADV4 AE
)@@G@@.     @ @@@T         LOAD    A1,SDBROT .  @ @@@T         GOTO    EXADV1 AF
)@@G@@.     @#@@@TEXADV4   LABEL .  @ @@@T         LOAD    A1,SDDAD .   @ @@@TAG
)@@G@@         GOTO    EXADV3 .     @ @@@T/. BASED BIFS- ALLOCATION     @B@@@TAH
)@@G@@.        LA,U A3,ADDR OF IMPLIED CTL PTR  @E@@@T.        RETURNS IN A2 AAI
)@@G@@ COUNT OF THE COPIES OF THE CTL VAR @[@@@T.     @#@@@TBFALLC*  LABEL .  AJ
)@@G@@@D@@@T         LOAD    A2,0,I .          START COUNT AT 0   @E@V@T      AK
)@@G@@   LOAD    A3,PTRADR,A3 .    GET ADDR OF FIRST COPY   @E@@@V         LOAAL
)@@G@@D    A3,PTRGEN,A3 .    GET ADDR OF FIRST COPY   @#@@@TBFALL1   LABEL .  AM
)@@G@@@D@@@T         IF A3,ZERO THEN,LJMP . -> IF AT END OF LIST  @D@@@T      AN
)@@G@@   ADD     A2,1,I .          INCREMENT COUNT    @D@@@T         LOAD    AAO
)@@G@@3,GENPRV,A3 .    MOVE TO PRIOR COPY @D@@@T         GOTO    BFALL1 .     AP
)@@G@@      GO SEE IF DONE    @^@@@T/.  ADDR BIF ----TO USE:@A@@@T.        LA,AQ
)@@G@@U A1,SD OF ARGUMENT     @B@@@T.        LA,U A2,ADDR(TEMP PTR TO FILL IN)AR
)@@G@@@A@@@T.        LA,U A3,ADDR OF ARGUMENT   @[@@@T.     @[@@@T.     @#@@@TAS
)@@G@@BFADDR*  LABEL .  @ @@@T         USING   WORD,A2 .    @D@@@T         MOVAT
)@@G@@E    W1+1,0,I .        0 OUT LINK FIELDS  @E@@@T         STORE   A3,PTRAAU
)@@G@@DR,A2 .    SET ACTUAL ADDR OF THING @ @@@T         LOAD    F,SDCLS0,A1 .AV
)@@G@@@E@@@T         IF SD0BSD++SD0CNT,OFF THEN,BFADR4 . -> IF NOT BSD  @D@@@TAW
)@@G@@         LOAD    A1,SDBPTR,A1 .    GET IMPLIED PTR SD @ @@@T         LOAAX
)@@G@@D    F,SDCLS0,A1 .@E@@@T         IF SD0STA,ON THEN,BFADR3 . -> IF PTR ISAY
)@@G@@ STATIC     @C@@@T         LOAD    A3,SDBKLK,A1 .    BLOCK SD     @C@@@TAZ
)@@G@@         LOAD    A3,SDBKDP,A3 .    BLOCK DEPTH  @F@@@T         ADD     ABA
)@@G@@3,X10 .          SET TO GO THRU STATIC LINKS    @D@@@T         LOAD    ABB
)@@G@@3,ARSTLK,A3 .    ADDR OF AREC OF PTR@F@@@T         ADD     A3,SDLCOF,A1 BC
)@@G@@.    ADDR OF PTR OR DV IN STRUCT    @ @@@T         LOAD    F,SDCLS2,A1 .BD
)@@G@@@E@@@T         IF SDMEMS,OFF THEN,BFADR2 . -> IF NOT IN STRUCT    @C@@@TBE
)@@G@@         LOAD    A3,W1,A3 .        GO THRU DV   @#@@@TBFADR2   LABEL .  BF
)@@G@@@E@@@T         LOAD    A5,PTRGEN,A3 .    GET GENLSTHD FROM PTR    @E@@@TBG
)@@G@@         STORE   A5,PTRGEN,A2 .    STORE IT IN THE TEMP     @ @@@T      BH
)@@G@@   LOAD    A5,PTRSD,A3 .@ @@@T         STORE   A5,PTRSD,A2 .@#@@@T      BI
)@@G@@   LJMP .   @B@@@TBFADR3   LABEL . STATIC PTR-ABSOLUTE ADDR @A@@@T      BJ
)@@G@@   LOAD    A3,SDLCOF,A1 .     @ @@@T         GOTO    BFADR2 .     @E@@@TBK
)@@G@@BFADR4   LABEL .                   AUTO VAR BEING ADDRED    @E@@@T      BL
)@@G@@   LOAD    A3,SDBKLK,A1 .    FIND ITS GENLSTHD IE AREC@A@@@T         LOABM
)@@G@@D    A3,SDBKDP,A3 .     @ @@@T         ADD     A3,X10 .     @A@@@T      BN
)@@G@@   LOAD    A3,ARSTLK,A3 .     @A@@@T         STORE   A3,PTRGEN,A2 .     BO
)@@G@@@ @@@T         STORE   A1,PTRSD,A2 .@#@@@T         LJMP .   @#@@@S      BP
)@@G@@   END .    ___THEN,SETP*[S@@@*SDFF*@C@@@G.   COPYRIGHT 1975 BY UNIVERSIBQ
)@@G@@TY OF MARYLAND    @[@@@G.     @D@@@G.   QUESTIONS CONCERNING THIS SHOULDBR
)@@G@@ BE DIRECTED TO:  @[@@@G.     @ @@@G.        MARVIN V. ZELKOWITZ  @B@@@GBS
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@G.        UNIVERSITY OF MBT
)@@G@@ARYLAND     @B@@@G.        COLLEGE PARK, MARYLAND 20742     @[@@@G.     BU
)@@G@@@G@@@G.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMBV
)@@G@@S THEY@E@@@G.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    BW
)@@G@@@[@@@G.     @G@@@G.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS BX
)@@G@@REPRESENTED BY    @G@@@G.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OBY
)@@G@@R UNIVERSITY OF MARYLAND@E@@@G.   PL/1 COMPILER REMAINS ASSOCIATED WITH BZ
)@@G@@THESE PROGRAMS.   @[@@@G.     @F@@@G.        2. MODIFICATIONS MAY BE MADCA
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@G.     @G@@@G.        (A) ANY RESULTICB
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@G.        DESCRIBINCC
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@G.        IS CD
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@G.     @G@@@G.     CE
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@GCF
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@GCG
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    CH
)@@G@@@C@@@G.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@G.     @F@@@GCI
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@GCJ
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  CK
)@@G@@@[@@@G.     @F@@@G.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTCL
)@@G@@ED TO OTHER @G@@@G.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLECM
)@@G@@ARLY INDICATE     @G@@@G.        WHETHER THE PROGRAMS ARE EXACT COPIES OCN
)@@G@@F THE UNIVERSITY OF     @E@@@G.        MARYLAND PLUM COMPILER OR ARE MODCO
)@@G@@IFICATIONS TO IT. @[@@@G.     @G@@@G.        3. THESE CONDITIONS ONLY APCP
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@G.   AND ARE NOT MEANT TO APPLYCQ
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@G.   THE PURPOSE OF THESE CONDICR
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@G.   EXPERIMENT WITH THE COMPILER AS CS
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@G.   IS NOT SOLD AND AS LONG AS IT ISCT
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@G.   FROM PLUM.    @[@@@G.     CU
)@@G@@@[@@@G.     @[@@@G.     @[@@@G.     @[@@@G.     @[@@@G/.    @#@@@F/     CV
)@@G@@   AXR$ .   @#@@@F         DCLRG .  @#@@@F         UNLIST . @]@@@F@ADD PCW
)@@G@@LTVDS @#@@@F         LIST .   @]@@@F@ADD EXCDS  @]@@@F@ADD IOSET  @#@@@FCX
)@@G@@         CEND     @#@@@F         PLSD .   @#@@@F         PLAR .   @#@@@GCY
)@@G@@         PLAC .   @#@@@F         PLIOCB . @#@@@F         PLWORD . @#@@@FCZ
)@@G@@EXLL     CSECT 3 .@F@@@FPLTABT   SFW     0 .               ->SET UP TABSDA
)@@G@@ FOR BATCH RUN    @D@@@F         +35,131,108,84            MAX,TAB1,TAB2DB
)@@G@@,TAB3 @B@@@F         +60,36,0,0 .              .....  @F@@@FPLTADM   SFWDC
)@@G@@     0 .               SET UP TABS FOR DEMAND RUN     @^@@@F         +23DD
)@@G@@,71,48,24 . @#@@@F         CEND     @^@@@F/.       INITIALIZE I/O @^@@@FDE
)@@G@@SETIO*   PROC  *1 .     @ @@@F         ON SETIO(1,1)='IN' . @ @@@F      DF
)@@G@@   LOADXM  X1,IOCBAD .  @ @G@F         LOAD A1,KLCH6W .     @ @@@G      DG
)@@G@@   LOAD A1,KLCH4W .     @A@@@F         OFF                  .     @ @@@FDH
)@@G@@         ON SETIO(1,1)='OUT' .@ @@@F         LOADXM X2,IOCBAD    .@ @G@FDI
)@@G@@         LOAD A2,KSCH6W .     @ @@@G         LOAD A2,KSCH4W .     @#@@@FDJ
)@@G@@         OFF .    @#@@@F         END .    @#@@@FIOINIT*  LOCAL .  @D@@@GDK
)@@G@@         MOVE    DSPLYA,0,I .     CLEAR FLAGS FOR EXDB@H@@@G         IF DL
)@@G@@     04,ON,DGOPT6  THEN,IOINI0 . ONLY CLEAR OUT TABLE FIRST TIME  @F@@@GDM
)@@G@@         MOVE    BRKPTB,ZERO,2*BRTBSZ . CLEAR BKPT TABLE FOR EXDB @#@@@GDN
)@@G@@IOINI0   LABEL .  @C@@@F         LOADA X3,KFDOUT .         SYSPRINT     DO
)@@G@@@#@@@F         WRIOCB . @^@@@F         USING IOCB,X3 .@ @@@F         MOVDP
)@@G@@E  IOCBSK,3,I .   @ @@@F         MOVE  IOCBLN,0,I .   @G@@@F         IF DQ
)@@G@@     040,OFF,DGOPT3 THEN,IOINI1 . SHORTER LINES FOR DEMAND  @ @@@F      DR
)@@G@@   MOVE    IOCBLZ,72,I .@ @G@F         MOVE IOCBLR,12,I .   @ @@@G      DS
)@@G@@   MOVE IOCBLR,18,I .   @C@@@FIOINI1   LABEL .                   MERGE HDT
)@@G@@ERE   @ @@@F         SETL  A6,IOCBLZ  .   @ @@@F         STORE A6,IOCBLFDU
)@@G@@  .   @A@@@F         SET     IOCBST,ON,IOCBF1 . @E@@@F         MOVE    IDV
)@@G@@OCBX1,IOCBAD .   POINT TO BUFFER START    @D@G@F         MOVE    IOCBA1,DW
)@@G@@KSCH6W .   POINT TO FIRST CHAR@D@@@G         MOVE    IOCBA1,KSCH4W .   PDX
)@@G@@OINT TO FIRST CHAR@B@@@F         LOADA X3,KFDIN .          SYSIN  @#@@@FDY
)@@G@@         RDIOCB . @C@@@F         LOAD  A6,-1,I .            EMPTY BUFFERDZ
)@@G@@@ @@@F         STORE A6,IOCBLF .    @]@@@F         JMP@[@@@F.     @F@@@FEA
)@@G@@.        EXIOIN*                   INITIALIZE I/O ON EACH STMT    @[@@@FEB
)@@G@@.     @B@@@FEXIOIN*  LLOC .                    INPUT  @ @@@F         USIEC
)@@G@@NG  AREC,X10 .    @F@@@F         STORE   X4,ARSVX4 .       SAVE MANAGED ED
)@@G@@'X' REGISTERS     @ @@@F         STORE   X6,ARSVX6 .  @ @@@F         STOEE
)@@G@@RED A5,IODTA5 .   @ @@@F         STORED A7,ARSVA7 .   @ @@@F         STOEF
)@@G@@RED A9,ARSVA9 .   @ @@@F         LOADA X3,ARWORK .    @^@@@F         USIEG
)@@G@@NG IOCB,X3 .@C@@@F         IF    IOCBSR,ON,IOCBF1 THEN,EXIOI1 .   @ @@@FEH
)@@G@@         LOAD  X3,ARWORK .    @#@@@FEXIOI1   LABEL .  @ @@@F         LOAEI
)@@G@@D  X1,IOCBX1 .    @ @@@F         LOAD  A1,IOCBA1 .    @ @@@F         LOAEJ
)@@G@@DXI  X1,1,I .     @ @@@F         LOADXI  A1,1,I .     @^@@@F         LOAEK
)@@G@@D  X2,X1 .  @^@@@F         LOAD  A2,A1 .  @B@G@F         LOAD A7,IOCBLF-EL
)@@G@@(IN 0,2,0,0) .    @ @@@G         LOAD A7,IOCBLF-FH1 . @C@@@G         SSAEM
)@@G@@     A7,18  .          SIGN EXTEND  @^@G@F         SSA A7,18 .    @ @@@FEN
)@@G@@         LOAD  F,IOCBF1  .    @F@@@F         STORE A7,IOLSTA .          EO
)@@G@@ SAVE CURRENT TAB POSITION    @#@@@F         LJMP     @[@@@F.     @B@@@FEP
)@@G@@.        EXIOOT                    EXIT   @[@@@F.     @E@@@FIORET0*  LABEQ
)@@G@@EL .                   RETURN, SKIP NO WORDS    @^@@@F         LOAD  X5,ER
)@@G@@0,I . @^@@@F         GOTO  EXIOOT   @E@@@FIORET1*  LABEL .              ES
)@@G@@     RETURN , SKIP 1 WORD     @^@@@F         LOAD  X5,1,I . @#@@@FEXIOOTET
)@@G@@   LABEL .  @B@@@F         IF    IOCBIN,ON THEN,EXIO02 .    @ @@@F      EU
)@@G@@   STORE X2,IOCBX1 .    @ @@@F         STORE A2,IOCBA1 .    @^@@@F      EV
)@@G@@   GOTO  EXIO03 . @#@@@FEXIO02   LABEL .  @ @@@F         STORE X1,IOCBX1EW
)@@G@@ .    @ @@@F         STORE A1,IOCBA1 .    @#@@@FEXIO03   LABEL .  @ @@@FEX
)@@G@@         STORE A7,IOCBLF .    @ @@@F         STORE F,IOCBF1  .    @F@@@FEY
)@@G@@         LOAD  X4,ARSVX4 .         RELOAD MANAGED 'X' REGISTERS   @ @@@FEZ
)@@G@@         LOAD  X6,ARSVX6 .    @ @@@F         LOADD A7,ARSVA7 .    @ @@@FFA
)@@G@@         LOADD A9,ARSVA9 .    @^@@@F         UNSTK X11 .    @^@@@F      FB
)@@G@@   ADD   X11,X5 . @D@@@FEXGCLS*  LABEL .                GET CLOSE (DUMMYFC
)@@G@@)     @#@@@F         LJMP  .  @H@@@G/.       ROUTINE TO PRINT OUT ALL VAFD
)@@G@@RIABLES FOR STMT THAT CAUSED BREAKPOINT   @[@@@G.     @#@@@GEXBKPT*  LOCFE
)@@G@@AL .  @ @@@G         MOVE    DEXBPT,0,I . @E@@@G         LOAD    X9,DEXSFF
)@@G@@V+2 .      RESTORE REGS SAVE BY EXER@ @@@G         LOAD    X10,DEXSV+3 .FG
)@@G@@@ @@@G         LOAD    X1,1,I .     @D@@@G         LINK    EXPTOP .     FH
)@@G@@     PUT OPEN, SKIP ONE @#@@@G         +0100 .  @D@@@G         LOADA   XFI
)@@G@@5,BRKPTB-2 .     GET START OF TABLE @C@@@G         LOAD    R1,BRTBSZ,I .FJ
)@@G@@     TABLE SIZE   @#@@@GEXBKP1   LABEL .  @ @@@G         LOADXI  X5,2,I FK
)@@G@@.     @C@@@G         LOAD    A6,R11 .          GET STMT #   @ @@@G      FL
)@@G@@   SE,H1   A6,2,*X5 .   @ @@@G         JMP .   END OF TABLE @^@@@G      FM
)@@G@@   STACK   X5 .   @^@@@G         STACK   R1 .   @B@@@G         LOAD    XFN
)@@G@@6,W1H2,X5 .      GET SD @ @@@G         USING   SDSECT,X6 .  @F@@@G      FO
)@@G@@   LOADA   X11,EXDSPL .      GET ADDR OF 2-WORD DATA AREA   @ @@@G      FP
)@@G@@   USING   WORD,X11 .   @C@@@G         STORE   X6,EXDSPL .       STORE SFQ
)@@G@@D     @E@@@G         MOVE    W1+1,EXBKRT .     SET RETURN JUMP INSTR    FR
)@@G@@@C@@@G         IF      SDARRY,ON,SDCLS2  THEN,EXBKP2 .@E@@@G         GOTFS
)@@G@@O    EXCHK .           RETURN VIA DATA AREA     @#@@@GEXBKP2   LABEL .  FT
)@@G@@@D@@@G         LOAD    A3,W1+1,X5 .      GET ARRAY ELEMENT  @G@@@G      FU
)@@G@@   GOTO    EXCHKA .          CHECK ARRAY. RETURN VIA DATA AREA    @#@@@GFV
)@@G@@EXBKP3   LABEL .  @^@@@G         UNSTK   R1 .   @^@@@G         UNSTK   XFW
)@@G@@5 .   @ @@@G         GOTO    EXBKP1 .     @C@@@GEXBKRT   LABEL . RETURN FX
)@@G@@JUMP INSTR FROM CHECK   @F@@@G         GOTO    EXBKP3 .          JUMP BAFY
)@@G@@CK INTO SEARCK LOOP     @D@@@G/.       ROUTINEES TO SAVE IO REGS FOR ON FZ
)@@G@@UNIT CALLS  @#@@@GONIOSN*  LLOC .   @ @@@G         STORE   A1,ONIOSV .  GA
)@@G@@@ @@@G         STORE   X1,ONIOSV+1 .@ @@@G         STORE   A7,ONIOSV+2 .GB
)@@G@@@ @@@G         STORE   X3,ONIOSV+6 .@ @@@G         USING   IOCB,X3 .    GC
)@@G@@@ @@@G         STORE   A1,IOCBA1 .  @ @@@G         STORE   X1,IOCBX1 .  GD
)@@G@@@ @@@G         STORE   A7,IOCBLF .  @ @@@G         STORE   F,IOCBF1 .   GE
)@@G@@@#@@@G         LJMP .   @[@@@G.     @[@@@G.     @[@@@G.     @#@@@GONIOSCGF
)@@G@@*  LLOC .   @ @@@G         STORE   A1,ONIOSV+4 .@ @@@G         STORE   XGG
)@@G@@1,ONIOSV+5 .@ @@@G         STORE   A7,ONIOSV+3 .@#@@@G         LJMP .   GH
)@@G@@@A@@@F/.       LOW   LEVEL OUTPUT ROUTINES@[@@@F.     @D@@@F.        WRLGI
)@@G@@INE                    GOTO LINE NUMBER   @[@@@F.     @D@I@FWRLINE*  LOCGJ
)@@G@@AL .                   A9=LINE NUMBER     @D@@@IWRLINE*  LOCAL .        GK
)@@G@@           A10=LINE NUMBER    @D@@@F         IF    IOCBST,OFF THEN,WRLINGL
)@@G@@6 . ->EMPTY BUFFER@C@@@F         LINK  WRSKIP .            EMPTY BUFFER GM
)@@G@@@#@@@FWRLIN6   LABEL .  @B@I@F         IF    A9,GT,0,I THEN,WRLIN1 .  >OGN
)@@G@@@C@@@I         IF    A10,GT,0,I THEN,WRLIN1 .  >O     @#@@@FWRLIN3   LABGO
)@@G@@EL .  @D@I@F         LOAD  A9,1,I .            SET TO TOP OF PAGE @D@@@IGP
)@@G@@         LOAD  A10,1,I .            SET TO TOP OF PAGE@#@@@FWRLIN1   LABGQ
)@@G@@EL .  @D@I@F         IF    A9,GT,IOCBPZ THEN,WRLIN3 . L NO TOO BIG@E@@@IGR
)@@G@@         IF    A10,GT,IOCBPZ THEN,WRLIN3 . L NO TOO BIG     @C@I@F      GS
)@@G@@   SUB   A9,1,I .            LINE NO. -1  @C@@@I         SUB   A10,1,I .GT
)@@G@@            LINE NO. -1 @#@@@JWRLIN4   LABEL .  @D@I@F         IF    A9,GU
)@@G@@EQ,IOCBLN THEN,JMP .  CURRENT LINE  @D@@@I         IF    A10,EQ,IOCBLN TGV
)@@G@@HEN,JMP .  CURRENT LINE @D@I@F         IF    A9,LT,IOCBLN THEN,WRLIN2 . GW
)@@G@@PAGE FIRST  @D@@@I         IF    A10,LT,IOCBLN THEN,WRLIN2 . PAGE FIRST GX
)@@G@@@C@@@J         LOAD    A3,IOCBLN .       SAVE LINE NO.@D@@@J         STOGY
)@@G@@RE   A10,IOCBLN .      SET NEW LINE NUMBER@C@I@F         SUB   A9,IOCBLNGZ
)@@G@@ .         LINES TO SKIP@D@J@I         SUB   A10,IOCBLN .         LINES HA
)@@G@@TO SKIP     @D@@@J         SUB   A10,A3     .         LINES TO SKIP     HB
)@@G@@@#@J@FWRLIN4   LABEL .  @C@I@F         STORE A9,IOCBSK .         SET SKIHC
)@@G@@P     @C@@@I         STORE A10,IOCBSK .         SET SKIP    @D@@@F      HD
)@@G@@   SET   IOCBST,ON .         SET BUFFER STARTED @B@@@F         JMP   .  HE
)@@G@@                 RETURN @D@@@FWRLIN2   LABEL .                   PUT PAGHF
)@@G@@E FIRST     @C@@@F         LINK  WREPG2 .            PUT PAGE     @C@@@FHG
)@@G@@         LINK  WRSKIP .            PRINT IT     @C@@@J         MOVE    IHH
)@@G@@OCBLN,0,I .      TOP OF PAGE  @B@J@F         GOTO  WRLIN1 .            SHI
)@@G@@KIP   @B@@@J         GOTO  WRLIN4 .            SKIP   @[@@@F.     @C@@@FHJ
)@@G@@.        WRPAGE                    PAGE EJECT   @[@@@F.     @#@@@FWRPAGEHK
)@@G@@*  LLOC  .  @E@@@F         IF    IOCBST,OFF THEN,WREPG2 . -> BUFFER EMPTHL
)@@G@@Y     @#@@@FWREPG1   LOCAL .  @B@@@F         MOVE  IOCBLN,0,I .        LHM
)@@G@@INE O @C@@@F         LINK  WRPBUF .            PRINT LINE   @D@@@F      HN
)@@G@@   UNSTK X11.                GET RETURN ADDRESS @#@@@FWREPG2   LLOC  .  HO
)@@G@@@E@@@F         COUNT  IOCBPN .                    UP PAGE NUMBER  @D@@@FHP
)@@G@@         MOVE  IOCBSK,63,I .       SET TOP OF PAGE    @ @@@F         SETHQ
)@@G@@   IOCBST,ON .    @B@@@F         MOVE  IOCBLN,0,I .        LINE O @D@I@FHR
)@@G@@         IF 040,OFF,DGOPT3 THEN,LJMP . PAGE SIZE OK.? @F@@@I         IF HS
)@@G@@040,OFF,DGOPT3 THEN,LJMP . PAGE SIZE OK FOR BATCH     @C@@@I         LOAHT
)@@G@@D    A3,X3 .           GET IOCB PTR @G@@@I         IF      A3,NE,IOBOUT,HU
)@@G@@I  THEN,LJMP . NOT SYSPRINT DEMAND O.K.   @E@I@F         MOVE  IOCBSK,1,HV
)@@G@@I .        SKIP 1 LINES FOR DEMAND  @G@@@I         MOVE  IOCBSK,1,I .   HW
)@@G@@     SKIP 1 LINES FOR DEMAND SYSPRINT     @C@@@F         LJMP  .        HX
)@@G@@           ->RETURN     @[@@@F.     @C@@@F.        WRPFLD               HY
)@@G@@     PUT FIELD    @[@@@F.     @E@@@F.                                  AHZ
)@@G@@9= LENGTH, GETC SETUP   @B@@@FWRPFD1*  LOCAL .                   PUT 1  IA
)@@G@@@C@@@F         SETL A9,1,I .             SET LOOP TO 1@C@@@F         GOTIB
)@@G@@O  WRPTF7 .            PUT FIELD    @#@@@FWRPFLD*  LOCAL .  @D@@@F      IC
)@@G@@   IF    A9,EQ,0,I THEN,JMP .    ->NULL FIELD   @#@@@F         SETL A9. ID
)@@G@@@E@@@F         IF    IOSAVL,ZERO THEN,WRPTF5 .    ->NO QUOTE CHECK@#@@@FIE
)@@G@@WRPFD5   LABEL .  @D@@@F         GETC  .                   MOVE CHARACTEIF
)@@G@@R     @#@@@F         PUTC  .  @D@@@F         SET   IOCBST,ON  .        BIG
)@@G@@UFFER STARTED     @D@@@F         LOOP  A7,WRPFD2  .        ->BUFFER NOT IH
)@@G@@FULL  @C@@@F         IF    IOCBSR,ON THEN,JMP .  STRING     @^@@@F      II
)@@G@@   LINK  WRPBUF.  @#@@@FWRPFD2   LABEL    @D@@@F         IF    A8,NE,'''IJ
)@@G@@',I THEN,WRPFD4 . ->NOT QUOTE @C@@@F         PUTC  .                   DIK
)@@G@@OUBLE QUOTE @ @@@F         SET   IOCBST,ON .    @D@@@F         LOOP  A7,IL
)@@G@@WRPFD4 .         SET CHAR IN BUFFER @C@@@F         IF    IOCBSR,ON THEN,IM
)@@G@@JMP .     ->STRING@C@@@F         LINK  WRPBUF .            CLEAR BUFFER IN
)@@G@@@#@@@FWRPFD4   LABEL .  @C@@@F         LOOP  A9,WRPFD5 .         ->MOVE IO
)@@G@@STRING@B@@@F         JMP   .                   RETURN @#@@@FWRPTF5   LABIP
)@@G@@EL .  @#@@@F         GETC .   @#@@@FWRPTF7   LABEL .  @#@@@F         PUTIQ
)@@G@@C .   @ @@@F         SET   IOCBST,ON .    @D@@@F         LOOP  A7,WRPTF6IR
)@@G@@ .         ->MOVE EACH CHAR   @C@@@F         IF    IOCBSR,ON  THEN,JMP .IS
)@@G@@ ->STRING   @^@@@F         LINK  WRPBUF . @#@@@FWRPTF6   LABEL .  @C@@@FIT
)@@G@@         LOOP  A9,WRPTF5 .         ->MOVE STRING@C@@@F         JMP   .  IU
)@@G@@                 ->RETURN     @[@@@F.     @C@@@F.        WRSKIP         IV
)@@G@@           SKIP LINE    @C@@@F.        WRPBUF                    PUT BUFIW
)@@G@@FER   @[@@@F.     @#@@@FWRSKIP*  LLOC  .  @#@@@FWRPBUF*  LOCAL .  @E@@@FIX
)@@G@@         IF    01,OFF,IODTAF THEN,WRPTB1 . ->PRINT IMAGE    @ @@@F      IY
)@@G@@   SET   01,OFF,IODTAF .@E@@@F         IF    IOCBPT,OFF THEN,WRPTB1 .  -IZ
)@@G@@>NOT PRINT FILE   @[@@@F.     @D@@@F.        DON'T SPLIT NUMBERS ACROSS JA
)@@G@@LINE BOUNDARIES   @[@@@F.     @E@@@F         IF      040,ON,DGOPT3 THEN,JB
)@@G@@WRRED1 . IS THIS DEMAND?@F@@@F         LOAD    A3,IOLSTA .       GET POSJC
)@@G@@ITION LAST TABBED TO    @G@@@F         IF      A3,EQ,131,I THEN,WRPTB1 .JD
)@@G@@ BATCH: LAST TAB WAS NEW LINE @E@@@F         LOAD    A4,131,I .        GJE
)@@G@@ET NUMBER OF COLUMNS    @E@G@F         LOAD    A6,22,I .         GET NUMJF
)@@G@@BER OF WORDS/LINE @E@@@G         LOAD    A6,33,I .         GET NUMBER OFJG
)@@G@@ WORDS/LINE @B@@@F         GOTO    WRRED2 .          ->MERGE@D@@@FWRRED1JH
)@@G@@   LABEL .                   DEMAND RUN HERE    @F@@@F         LOAD    AJI
)@@G@@3,IOLSTA .       GET POSITION LAST TABBED TO    @F@@@F         IF      AJJ
)@@G@@3,EQ,71,I THEN,WRPTB1 . LAST TAB WAS A NEW LINE @E@@@F         LOAD    AJK
)@@G@@4,71,I .         71 COLUMNS ON A LINE     @C@G@F         LOAD    A6,12,IJL
)@@G@@ .         12 WORDS HERE@C@@@G         LOAD    A6,18,I .         18 WORDJM
)@@G@@S HERE@C@@@FWRRED2   LABEL .                   ->MERGE HERE @^@@@F      JN
)@@G@@   SUB     A3,A4 .@G@@@F         LOADN   A3,A3 .            HOW FAR DOWNJO
)@@G@@ IN LINE TO  TRANSFER?  @C@@@F         STORE   A4,IOLSTA .       STORE IJP
)@@G@@T     @F@@@F         STORE   A3,A7 .           SAVE NUMBER OF CHARSIN LIJQ
)@@G@@NE    @E@@@F         SETL    A7 .              SET NUM OF CHARS LEFT-1  JR
)@@G@@@D@G@F         DSA     A3,36 .           PREPARE FOR DIVIDE @C@@@G      JS
)@@G@@   SRBD    A3,2 .            DIVIDE BY 4  @F@G@F         DIV     A3,6,I JT
)@@G@@.          FIGURE HOWMANY WORDS TO MOVE   @E@@@G         SRB     A4,34 .JU
)@@G@@           HOW MANY WORDS TO MOVE   @F@@@F         SUB     A6,A3 .      JV
)@@G@@     I HOPE A4=0,A6=# MORDS TO MOVE @D@@@F         LOAD    A8,A6 .      JW
)@@G@@     GET THE # OF WORDS @H@G@F         ADD     A8,AREPTR .       ADD TO JX
)@@G@@POINT TO THE END OF THE ACT REC     @E@@@F         ADD     A8,2,I .     JY
)@@G@@     ADD IN THE TEMP STORAGE  @E@@@G         LOADXM  X2,AREPTR .       GJZ
)@@G@@ET END OF STACK PTR     @F@@@G         STKCHK  A8,R .            SEE IF KA
)@@G@@ENOUGH ROOM ON STACK    @G@@@G         STORE   X2,AREPTR .       RESTOREKB
)@@G@@ AREPTR CHANGED BY STKCHK     @F@G@F         IF      A8,GE,ADPCND THEN,WKC
)@@G@@ROVFL . -> CHECK FOR OVERFLOW @E@@@GWRRED4   LABEL .                   HKD
)@@G@@ERE IF HAVE INOUGH CORE @E@G@F         LOADXM    X2,AREPTR .       ENOUGKE
)@@G@@H SPACE,CONTINUE  @E@@@F         STORE   A6,R1 .           SET COUNT OF KF
)@@G@@WRDS TO MOVE@E@@@F         STORE   A6,W1,X2 .           HOLD ONTO THIS NKG
)@@G@@UM    @E@@@F         LOADA   A2,2,X2 .        POINT TO TEMP STORAGE .   KH
)@@G@@@E@@@F         ADD     A3,IOCBAD .       POINT TO PROPER PLACE    @F@@@FKI
)@@G@@         STORE   A3,W1+1,X2 .           HOLD ONTO THIS ADDRESS    @D@@@FKJ
)@@G@@         LINK    MO$VE .            MOVE OUT EXCESS   @F@@@F         LOAKK
)@@G@@D    A2,W1+1,X2 .           POINT BACK AT THE BUFFER  @D@@@F         LOAKL
)@@G@@DA   A3,KBLANK .       POINT TO BLANKS    @E@@@F         LOAD    R1,W1,XKM
)@@G@@2 .           PICK UP CNT AGAIN     @D@@@F         LINK    MO$VEZ .     KN
)@@G@@     BLANK OUT LINE     @D@@@F         WRPRNT .                  PRINT OKO
)@@G@@UT OLD LINE @D@G@F         LOADA   A3,2,X2 .        POINT BACK AT TEMP  KP
)@@G@@@D@@@G         LOADA   A3,2,X2 .         POINT BACK AT TEMP @D@@@F      KQ
)@@G@@   LOAD    A2,IOCBAD .       POINT BACK TOBUFFER@ @@@G         USING   WKR
)@@G@@ORD,X2 .    @E@@@F         LOAD    R1,W1,X2 .           PICK UP CNT AGAIKS
)@@G@@N     @E@@@F         LINK    MO$VE .            MOVE OLD STUFF BACK     KT
)@@G@@@D@@@F         SET     IOCBST,ON .       SET BUFFER STARTED @D@@@F      KU
)@@G@@   MOVE    IOCBSK,1,I .      SET SKIP OF ONE    @G@@@F         LOADXM   KV
)@@G@@ X2,W1,X2 .        PICK UP THE NUMBER OF WORDS TO SKIP@F@@@F         ADDKW
)@@G@@     X2,IOCBAD .           MOVE POINTER OVER THE STUFF@E@G@F         LOAKX
)@@G@@D    A2,KSCH6W .       POINT TO THE STORE TABLE @E@@@G         LOAD    AKY
)@@G@@2,KSCH4W .       POINT TO THE STORE TABLE @E@@@F         GOTO    WRPTB2 KZ
)@@G@@.          FINISH UP THE EXTRA JUNK.@#@@@FWRPTB1   LABEL .  @C@@@F      LA
)@@G@@   WRPRNT .                  PRINT IMAGE  @D@@@F         SET   IOCBST,OFLB
)@@G@@F .        SET BUFFER EMPTY   @E@@@F         SETL  A7,IOCBLZ .         GLC
)@@G@@ET CHARS LEFT IN LINE   @E@@@F         STORE   A7,IOLSTA .       SET LASLD
)@@G@@T TAB POSITION    @D@@@F         SETIO 'OUT' .             SET NEXT BUFFLE
)@@G@@ER    @E@@@F         IF    IOCBPT,OFF THEN,JMP . ->NOT PRINT, RETURN    LF
)@@G@@@C@@@F         MOVE  IOCBSK,1,I.         SET SKIP OF 1@#@@@FWRPTB2   LABLG
)@@G@@EL .  @ @@@F         LOAD  A3,IOCBLN .    @^@@@F         ADD   A3,1,I . LH
)@@G@@@C@@@F         STORE A3,IOCBLN .         UP LINE COUNT@D@H@F         IF LI
)@@G@@   A3,LT,IOCBPZ THEN,JMP .  ->NOT ENDPAGE @D@@@H         IF    A3,NE,IOCLJ
)@@G@@BPZ THEN,JMP .  ->NOT ENDPAGE @C@@@H         STORE   X3,ONIOSV+6 .     SLK
)@@G@@AVE IOCB PTR@F@@@G  ONUNIT  0,ACCDEP,0  JMP,I,JMP  DEXMK1,25  DEXMK2+FH2LL
)@@G@@,75  'NOMSG'@C@@@F         LINK         WREPG2 .     NEW PAGE     @B@@@FLM
)@@G@@         JMP   .                   RETURN @[@@@F.     @D@@@F.        WRELN
)@@G@@TAB                    TAB PRINT FILE     @[@@@F.     @#@@@FWRETAB*  LLOLO
)@@G@@C  .  @D@@@G         IF      IOCBSR,ON  THEN,LJMP . STRING I/O    @D@@@FLP
)@@G@@         IF    IOCBST,OFF THEN,LJMP . COL(1),TABBED   @E@@@F         IF LQ
)@@G@@   IOCBPT,OFF THEN,WRTAB3 . -> NON PRINT, SKIP 1@D@@@F         IF      0LR
)@@G@@40,ON,DGOPT3 THEN,WRTAB0 . DEMAND   @B@@@F         SETGC   4,PLTABT .   LS
)@@G@@     BATCH  @B@@@F         GOTO WRTAB4 .             ->MERGE@#@@@FWRTAB0LT
)@@G@@ LABEL .    @C@@@F         SETGC 4,PLTADM .          DEMAND RUN   @C@@@FLU
)@@G@@WRTAB4   LABEL .                   MERGE HERE   @C@@@F         GETC .   LV
)@@G@@                 GET LAST TAB @D@@@F         IF    A7,LE,A8 THEN,WRSKIP LW
)@@G@@. ->SKIP TO COL(1)@#@@@F         GETC .   @D@@@F         IF      A7,EQ,ALX
)@@G@@8 THEN,LJMP . ON NEW LINE?    @#@@@FWRTAB1   LABEL .  @D@@@F         GETLY
)@@G@@C  .                   READ TAB POSITIONS @D@@@F         IF    A7,LT,A8 LZ
)@@G@@THEN,WRTAB1 .   FIND COLUMN   @E@@@F         SUB     A8,1,I .          SMA
)@@G@@ET TO SKIP 1 COLUMN     @E@@@FWRETBX   LABEL .                   COMPUTEMB
)@@G@@ COLS TO SKIP     @^@@@F         SUB   A7,A8 .  @^@@@F         LOAD  A9,MC
)@@G@@A7 .  @D@@@F         LOAD  A7,A8 .             REMAINING IN BUFFER@E@@@FMD
)@@G@@         STORE   A7,IOLSTA .       SET 'LAST TAB' POSITION  @^@@@F      ME
)@@G@@   SETL  A9 .     @ @@@F         LOAD  A8,' ',I .     @#@@@FWRTAB2   LABMF
)@@G@@EL .  @#@@@F         PUTC  .  @ @@@F         LOOP  A9,WRTAB2 .    @#@@@FMG
)@@G@@         LJMP  .  @B@@@FWRTAB3   LABEL .                   SKIP 1 @ @@@FMH
)@@G@@         LOAD  A8,' ',I .     @#@@@F         PUTC  .  @E@@@F         LOOMI
)@@G@@P  A7,LJMP .           SUBTRACT 1 AND RETURN    @C@@@F         GOTO  WRSMJ
)@@G@@KIP  .           ->NEW BUFFER @[@@@F.     @D@@@F.        WRECOL         MK
)@@G@@           GET COLUMN NUMBER  @[@@@F.     @C@@@FWRECOL*  LLOC  .        ML
)@@G@@           A9=COL NUMBER@B@@@F         IF    A9,GT,0,I THEN,WRECL1 .  >0MM
)@@G@@@^@@@F         LOAD  A9,1,I . @#@@@FWRECL1   LABEL .  @B@@@F         IF MN
)@@G@@   A9,LE,IOCBLZ THEN,WRECL2 . @^@@@F         LOAD  A9,1,I . @#@@@FWRECL2MO
)@@G@@   LABEL .  @F@@@F         LOAD  A8,IOCBLZ .         (ONE ORIGIN COUNT IMP
)@@G@@N A8&A9)    @D@@@F         SUB   A8,A9 .             GET COLS REMAINING MQ
)@@G@@@#@@@FWRECL4   LABEL .  @D@@@F         IF    A8,LT,A7 THEN,WRETBX . ->SKMR
)@@G@@IP COLS     @B@@@F         IF    A8,EQ,A7 THEN,LJMP   . ->OK@#@@@F      MS
)@@G@@   LOCAL .  @^@@@F         LINK  WRSKIP.  @^@@@F         UNSTK X11.     MT
)@@G@@@C@@@F         GOTO  WRECL4 .            -> SPACE OVER@A@@@F/.       LOWMU
)@@G@@ LEVEL INPUT ROUTINES   @[@@@F.     @C@@@F.        RDSKIP               MV
)@@G@@     READ RECORD  @C@@@F.        RDGBUF                    GET BUFFER   MW
)@@G@@@[@@@F.     @#@@@FRDSKIP*  LLOC .   @#@@@FRDGBUF*  LOCAL .  @D@@@F      MX
)@@G@@   IF    IOCBEF,OFF THEN,RDGBF2 .  -> NOT EOF   @#@@@FRDGBF3   LABEL .  MY
)@@G@@@E@@@G         IF    IOCBEF,ON,IOCBF2 THEN,RDGBF99X . ->HARD EOF  @ @@@GMZ
)@@G@@         SET   IOCBEF,OFF .   @#@@@GRDGBF99X LABEL .  @D@@@G         LOANA
)@@G@@D    A7,-1,I .         SAY BUFFER IS EMPTY@C@@@G         STORE   X3,ONIONB
)@@G@@SV+6 .     SAVE IOCB PTR@ @@@G         STORE   F,IOCBF1 .   @C@G@F      NC
)@@G@@   EXERR ERIO11 LEVEL,3 .    READ PAST EOF@F@@@G         ONUNIT  ERIO11,ND
)@@G@@ACCDEF,2  R,PLEXND,R  DEXWK1,0  DEXMAX,0 .@D@@@FRDGBF4X  LABEL .        NE
)@@G@@           EOF AND ENDFILE BIF@A@@@GRDGBFS*  LABEL . END OF STRING ENTRYNF
)@@G@@@E@@@G         LA    A8,RDINST .         GET INST TO LOOK FOR     @F@@@GNG
)@@G@@         IF      IOCBSR,OFF,IOCBF1  THEN,RDGBF4 .  NOT STRING GET @ @@@GNH
)@@G@@         LA      A8,RDISTR .  @#@@@GRDGBF4   LABEL .  @C@@@F         LA NI
)@@G@@   A0,SY$$TK .         RESET STACK  @D@G@F         LOAD  X5,0,A0 .      NJ
)@@G@@     GET RETURN ADDRESS @D@@@G         LOAD  X11,1,A0 .          GET RETNK
)@@G@@URN ADDRESS @C@@@G         SUB     X11,1,I .         GET INSTR-1  @E@G@FNL
)@@G@@         LA    A8,RDINST .         GET INST TO LOOK FOR     @E@@@F      NM
)@@G@@   LOAD  R1,99999,I .        SET STMT COUNT (INFINITE)@^@G@F         LOANN
)@@G@@DXI X5,1,I .@ @@@G         LOADXI X11,1,I .     @D@G@F         SE    A8,NO
)@@G@@1,*X5 .          FIND NEXT STMT     @D@@@G         SE    A8,1,*X11 .    NP
)@@G@@     FIND NEXT STMT     @^@@@F         ER    ERR$ .   @E@G@F         STONQ
)@@G@@RE X5,W1H2,A0 .           SET RETURN ADDRESS    @D@@@G         LOCAL .  NR
)@@G@@                 SET RETURN ADDRESS @D@G@F         ADD   A0,1,I .       NS
)@@G@@     FUDGE STACK PTR    @B@@@F         GOTO  IORET0 .            RETURN NT
)@@G@@@D@@@FRDINST   LMJ   X11,EXGCLS .      LAST INST IN GET STMT@D@@@GRDISTRNU
)@@G@@   LMJ     X11,EXGTCL .      DITTO FOR STRINGS  @#@@@FRDGBF2   LABEL .  NV
)@@G@@@C@G@F         RDREAD 'EOF',RDGBF3X .     READ RECORD @C@@@G         RDRNW
)@@G@@EAD 'EOF',RDGBF3 .     READ RECORD  @D@@@F         LOAD  X1,IOCBAD      NX
)@@G@@     SET READ REGS.     @^@G@F         SETGC 6,0,X1 . @^@@@G         SETNY
)@@G@@GC 4,0,X1 . @C@@@F         SETL  A7,IOCBLZ .         SET LINESIZE @B@@@FNZ
)@@G@@         JMP   .                   RETURN @D@G@FRDGBF3X  LABEL .        OA
)@@G@@           EOF RETURN ON READ @D@G@F         IF    04,ON,DGOPT4 THEN,RDGOB
)@@G@@BF4X ELSE,RDGBF3 .@D@G@F.        THEN,-> ENDFILE ELSE,->NO USER ENDFILE OC
)@@G@@BIF   @[@@@F.     @D@@@F.        RDGET                     GET R1A9 CHAROD
)@@G@@ACTERS@[@@@F.     @D@G@FRDGET1*  LABEL .                   READ 1 CHARACOE
)@@G@@TER   @C@G@F         LOAD  A9,1,I .            SET LENGTH   @#@@@FRDGET*OF
)@@G@@   LOCAL .  @E@@@G         LINK    ONIOSC .          SAVE IO REGS FOR ONOG
)@@G@@SOURCE@C@@@F         SUB   A9,1,I .            LENGTH-1     @#@@@FRDGET3OH
)@@G@@   LABEL .  @E@@@F         IF    A7,LT,A9 THEN,RDGET2 . NOT ENOUGH IN BUOI
)@@G@@FFER  @E@@@F         SUB   A7,A9 .             REMAINING CHARACTERS     OJ
)@@G@@@C@@@F         SUB   A7,1,I .            REMAINING-1  @#@@@FRDGET4   LABOK
)@@G@@EL .  @C@@@F         ADD   A9,1,I .            CHARS READ   @E@@@F      OL
)@@G@@   LINK  RDCPY2 .            -> CHECK COPY OPTION     @#@@@F         JMPOM
)@@G@@ .    @#@@@FRDGET2   LABEL .  @F@@@F         IF    A7,GE,0,I THEN,RDGET5ON
)@@G@@ .  -> NOT NULL BUFFER, ERROR @D@@@F         IF    IOCBSR,ON THEN,RDGET5OO
)@@G@@ .  -> STRING     @D@@@F         LINK  RDGBUF .            READ NEW BUFFOP
)@@G@@ER    @D@@@F         GOTO  RDGET3 .            TRY TO READ NOW    @#@@@FOQ
)@@G@@RDGET5   LABEL .  @ @@@G         LINK    ONIOSN .     @E@G@F         EXEOR
)@@G@@RR ERIO12 LEVEL,1 .    TOO MUCH READ ON STRING  @F@@@G   ONUNIT  ERIO12,OS
)@@G@@ACCDER,1  RDGBFS,I,R  DEXMK2,75  DEXMK1+FH2,25  @C@G@F         LOAD     OT
)@@G@@     A9,A7       SET EMPTY    @C@@@G         LOAD    A9,A7 .           SOU
)@@G@@ET EMPTY    @^@@@F         LOAD  A7,-1,I .@C@@@F         GOTO  RDGET4  .OV
)@@G@@           ->CHECK COPY @[@@@F.     @C@@@F.        RDCOPY               OW
)@@G@@     COPY OPTION  @[@@@F.     @#@@@FRDCOPY*  LOCAL .  @F@G@F         IF OX
)@@G@@   IOCBCP,OFF,ARWORK+2 THEN,JMP  . NO COPY,RETURN     @F@@@G         IF OY
)@@G@@   ICGTCF,OFF,ARWORK+FQ3+2 THEN,JMP  . NO COPY,RETURN @#@@@FRDCPY1   LABOZ
)@@G@@EL .  @C@@@G         STORE   F,IOCBF1 .        SAVE FLAGS   @C@@@F      PA
)@@G@@   STORE A7,IOCBLF .         SAVE IOCB    @ @@@G         STORE   A1,IOCBPB
)@@G@@A1 .  @ @@@G         STORE   X1,IOCBX1 .  @D@@@F         LOADA X3,KFDOUTPC
)@@G@@ .         POINT TO 'SYSPRINT'@#@@@F         WRIOCB . @ @@@F         LOAPD
)@@G@@D  A2,IOCBA1 .    @ @@@F         LOAD  X2,IOCBX1 .    @ @@@G         LOAPE
)@@G@@D    F,IOCBF1 .   @ @@@F         LOADXI  A2,1,I .     @ @@@F         LOAPF
)@@G@@DXI  X2,1,I .     @ @G@F         LOAD  A7,IOCBLF .    @ @@@G         LOAPG
)@@G@@D  A7,IOCBLF-FH1 .@C@@@G         SSA     A7,18  .          SIGN EXTEND  PH
)@@G@@@H@@@G         IF      ICGTDF,OFF,ARWORK+FQ3+2  THEN,RDCPY7 . IF EDIT POPI
)@@G@@INT TO CARD @D@@@F         LOAD  A9,DLXSZN .         POINT TO TOKEN     PJ
)@@G@@@ @@@F         LOAD  X5,DLXBCN .    @F@@@G         SETGC   4,0,X5 .     PK
)@@G@@     SETUP GETC REGS FOR PUT COPY   @ @@@G         GOTO    RDCPY8 .     PL
)@@G@@@#@@@GRDCPY7   LABEL .  @ @@@G         LOAD    A1,IOSVA1 .  @ @@@G      PM
)@@G@@   LOAD    X1,IOSVX1 .  @#@@@GRDCPY8   LABEL .  @C@@@F         LINK  WRPPN
)@@G@@FLD    .         PUT COPY .   @F@@@G         IF      ICGTDF,ON,ARWORK+FQPO
)@@G@@3+2 THEN,RDCPY3 . NOT EDIT    @E@@@G         STORE   A1,IOSVA1 .       SPP
)@@G@@AVE GETC REGS IF EDIT   @ @@@G         STORE   X1,IOSVX1 .  @F@@@G      PQ
)@@G@@   LOAD    A9,IOSVE1 .       RESTORE CHAR COUNT FOR EDIT    @#@@@FRDCPY3PR
)@@G@@   LABEL    @ @@@G         STORE   F,IOCBF1 .   @D@G@F         STORE A7,PS
)@@G@@IOCBLF .         RESET INPUT IOCB   @D@@@G         STORE A7,IOCBLF .    PT
)@@G@@     RESET OUTPUT IOCB  @ @@@F         STORE X2,IOCBX1 .    @ @@@F      PU
)@@G@@   STORE A2,IOCBA1 .    @#@@@FRDCPY4   LABEL    @D@@@F         LOAD  X3,PV
)@@G@@ARWORK .         RESET INPUT IOCB   @ @G@F         LOAD  A7,IOCBLF .    PW
)@@G@@@ @@@G         LOAD  A7,IOCBLF-FH1 .@C@@@G         SSA     A7,18 .      PX
)@@G@@     SIGN EXTEND  @E@@@G         LOAD    X1,IOCBX1 .       RESTORE REGS PY
)@@G@@FOR EXLX    @ @@@G         LOAD    A1,IOCBA1 .  @ @@@G         LOAD    FPZ
)@@G@@,IOCBF1 .   @ @@@G         LOADXI  X1,1,I .     @ @@@G         LOADXI  AQA
)@@G@@1,1,I .     @#@@@F         JMP  .   @D@@@FRDCPY2   LOCAL  .             QB
)@@G@@      COPY FROM RDGET   @E@G@F         IF    IOCBCP,OFF,ARWORK+2 THEN,JMQC
)@@G@@P . ->NO COPY     @E@@@G         IF    ICGTCF,OFF,ARWORK+FQ3+2 THEN,JMP QD
)@@G@@. ->NO COPY @ @@@F         STORE A9,IOSVE1 .    @D@@@F         GOTO  RDCQE
)@@G@@PY1 .            ->PROCESS COPY     @[@@@F.     @[@@@F.     @E@@@FRDCPYSQF
)@@G@@*  LOCAL .                   INITIALIZE COPY- NEW LINE@E@G@F         IF QG
)@@G@@   IOCBCP,OFF,ARWORK+2 THEN,JMP .  ->NO COPY    @E@@@G         IF    ICGQH
)@@G@@TCF,OFF,ARWORK+FQ3+2 THEN,JMP .  ->NO COPY@F@@@G         IF      ICGTDF,QI
)@@G@@ON,ARWORK+FQ3+2  THEN,RDCPY6 . NOT EDIT   @G@@@G         STORE   A1,IOSVQJ
)@@G@@A1 .       INITIALIZE PTRS FOR COPY INTO CARD   @ @@@G         STORE   XQK
)@@G@@1,IOSVX1 .  @#@@@GRDCPY6   LABEL .  @ @@@F         STORE A7,IOCBLF .    QL
)@@G@@@ @@@G         STORE   F,IOCBF1 .   @C@@@G         STORE   A1,IOCBA1 .  QM
)@@G@@     SAVE REGS    @ @@@G         STORE   X1,IOCBX1 .  @D@@@F         LOAQN
)@@G@@DA X3,KFDOUT .         GET 'SYSPRINT'     @#@@@F         WRIOCB . @B@G@FQO
)@@G@@         IF    IOCBST,OFF,IOCBF1 THEN,JMP @C@@@G         IF    IOCBST,OFQP
)@@G@@F,IOCBF1 THEN,RDCPY5    @ @@@G         LOAD    F,IOCBF1 .   @D@@@F      QQ
)@@G@@   LOADA X11,RDCPY3 .        PUT LINE AND RETURN@^@@@F         STACK X11QR
)@@G@@.     @C@@@F         GOTO  WRPTB1  .           -> PUT BUFFER@B@@@GRDCPY5QS
)@@G@@   LABEL . RESTORE GETC,PUTC REGS   @ @@@G         LOAD    A2,IOCBA1 .  QT
)@@G@@@ @@@G         LOADXI  A2,1,I .     @ @@@G         LOAD    X2,IOCBX1 .  QU
)@@G@@@ @@@G         LOADXI  X2,1,I .     @ @@@G         LOAD    X3,ARWORK .  QV
)@@G@@@ @@@G         LOAD    A1,IOCBA1 .  @ @@@G         LOADXI  A1,1,I .     QW
)@@G@@@ @@@G         LOAD    X1,IOCBX1 .  @ @@@G         LOADXI  X1,1,I .     QX
)@@G@@@ @@@G         LOAD    F,IOCBF1 .   @#@@@G         JMP .    @[@@@F.     QY
)@@G@@@[@@@F.     @C@@@F.        WRCNT                     COUNT BIF    @[@@@FQZ
)@@G@@.     @[@@@F.     @C@G@F.        THE COUNT BOF IS NOT IN ANSII STANDARD RA
)@@G@@@C@@@G.        THE COUNT BIF IS NOT IN ANSII STANDARD @[@@@F.     @#@@@FRB
)@@G@@. WRCNT*   LLOC   @D@@@F.         IF    IOCBSR,ON THEN,LJMP .    ->STRINRC
)@@G@@G I/O @ @@@F.         LOAD  A3,IOCBCN     @^@@@F.         ADD   A3,1,I  RD
)@@G@@@ @@@F.         STORE A3,IOCBCN     @#@@@F.         LJMP  . @E@@@FERIO11RE
)@@G@@   EQU  35 .                 READ PAST END OF FILE    @E@@@FERIO12   EQURF
)@@G@@  36 .                 TOO MUCH READ ON STRANG  @#@@@F         END .    RG
)@@G@@___ .            REMAINING-1  @#@@@FRDGET4   LABEL .  @C@@@F         ADDRH
)@@G@@   A9,1,I .            CHARS READ   @E@@@F      *[S@@@*SDFF*@[@@@9/.    RI
)@@G@@@C@@@9.   COPYRIGHT 1976 BY THE UNIVERSITY OF MARYLAND@[@@@9.     @D@@@9RJ
)@@G@@.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@9.     @ @@@9RK
)@@G@@.        MARVIN V. ZELKOWITZ  @B@@@9.        DEPARTMENT OF COMPUTER SCIERL
)@@G@@NCE   @A@@@9.        UNIVERSITY OF MARYLAND     @B@@@9.        COLLEGE PRM
)@@G@@ARK, MARYLAND 20742     @[@@@9.     @G@@@9.        PERMISSION TO USE THERN
)@@G@@SE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@9.   REPRESENT IS GRANTEDRO
)@@G@@ UNDER THE FOLLOWING CONDITIONS:    @[@@@9.     @G@@@9.        1. UNLIMIRP
)@@G@@TED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@9.   THESE LIRQ
)@@G@@STINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@9.   PLRR
)@@G@@/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@9.     @F@@@9RS
)@@G@@.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@9RT
)@@G@@.     @G@@@9.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCURU
)@@G@@MENTATION   @G@@@9.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATERV
)@@G@@ THAT THE PROGRAM @E@@@9.        IS A DIALECT OF PLUM OR IS DERIVED FROMRW
)@@G@@ PLUM, AND  @[@@@9.     @G@@@9.        (B) ALL SUCH MODIFICATIONS, OTHERRX
)@@G@@ THAN TRIVIAL CORRECTIONS     @F@@@9.        OF ERRORS IN THE SOURCE PRORY
)@@G@@GRAMS, SHALL BE REPORTED AND  @G@@@9.        A BRIEF DESCRIPTION OF THE RZ
)@@G@@FEATURE ADDED SHALL BE SUBMITTED    @C@@@9.        TO THE UNIVERSITY OF SA
)@@G@@MARYLAND, AND     @[@@@9.     @F@@@9.        (C) NO PROGRAMS DERIVED FROSB
)@@G@@M THESE LISTINGS SHALL BE SOLD@G@@@9.        WITHOUT WRITTEN APPROVAL FRSC
)@@G@@OM THE UNIVERSITY OF MARYLAND, AND  @[@@@9.     @F@@@9.        (D) COPIESD
)@@G@@S OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@9.        LOCATIONSSE
)@@G@@ PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@9.        WHESF
)@@G@@THER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@9.     SG
)@@G@@   MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@9.     @G@@@9SH
)@@G@@.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    SI
)@@G@@@F@@@9.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. SJ
)@@G@@@E@@@9.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@9SK
)@@G@@.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@9SL
)@@G@@.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   SM
)@@G@@@#@@@9.   FROM PLUM.    @[@@@9.     @[@@@9.     @[@@@9.     @[@@@9.     SN
)@@G@@@[@@@9.     @[@@@9/.    @#@@@9         AXR$ .   @#@@@9         DCLRG .  SO
)@@G@@@#@@@8         UNLIST . @#@@@8@ADD,P PLTVDS     @]@@@9@ADD,P EXCDS@#@@@8SP
)@@G@@         LIST .   @#@@@8         PLAR .   @#@@@9         PLAC .   @#@@@9SQ
)@@G@@         PLIOCB . @#@@@9         PLBASE . @#@@@9         PLSD .   @#@@@8SR
)@@G@@         PLWORD . @#@@@9         CEND .   @#@@@9EXON     CSECT 3 .@[@@@9SS
)@@G@@.     @^@@@9. CALLING SEQUENCE:     @A@@@9.        LOAD    X5,ON UNIT BLST
)@@G@@OCK SD@C@@@9.        LOAD    A1,# OF CONDITIONS IN STMT     @A@@@9.     SU
)@@G@@   LMJ     X11,ONSTMT OR REVRT@C@@@9.        +LIST OF (CODE #,FLAGS,SD OSV
)@@G@@F NAME OR 0)@[@@@9.     @#@@@9. REGISTER USAGE: @C@@@9.        A1 - LOOPSW
)@@G@@ COUNT OF # OF CONDITIONS     @H@@@9.        A2 - PTR TO CURRENT NODE WHSX
)@@G@@EN SEARCHING LIST OF CONDITIONS IN A.R.   @^@@@9.        A3,A4 - TEMPS  SY
)@@G@@@ @@@9.        A5 - CONDITION FLAG  @E@@@9.        A6 - TEMP OR # OF NODSZ
)@@G@@ES W/SAME COND. # IN A.R. LIST@A@@@9.        X1 - TRAILING PTR WITH A2  TA
)@@G@@@C@@@9.        X3 - PTR TO LIST IN CALLING SEQUENCE   @A@@@9.        R2 TB
)@@G@@- 0=>ON STMT, 1=>REVERT @[@@@9.     @B@@@8REVRT*   LABEL . ENTRY FOR REVTC
)@@G@@ERT STMT    @D@@@8         LOAD    R2,1,I .          SET REVERT FLAG    TD
)@@G@@@ @@@8         GOTO    ONSTM0 .     @A@@@8ONSTMT*  LABEL . ENTRY FOR ON TE
)@@G@@STMT  @C@@@8         LOAD    R2,0,I .          NOT REVERT   @#@@@8ONSTM0TF
)@@G@@   LLOC .   @ @@@8         USING   AREC,X10 .   @ @@@8         USING   WTG
)@@G@@ORD,X3 .    @ @@@8         USING   ARONUN,A2 .  @G@9@8         SUB     ATH
)@@G@@15,1,I .         GET PROPER # OF CONDITIONS FOR LOOP  @G@@@9         SUBTI
)@@G@@     A1,1,I .         GET PROPER # OF CONDITIONS FOR LOOP   @I@@@8      TJ
)@@G@@   LOAD    X3,X11 .          SAVE PTR TO (CODE #,FLAGS,SD) LIST AND RETUTK
)@@G@@RN    @#@@@8ONSTM00  LABEL .  @E@9@8         LOAD    A1,W1Q1 .         GTL
)@@G@@ET CODE # OF ON UNIT    @E@@@9         LOAD    X1,W1Q1 .         GET CODTM
)@@G@@E # OF ON UNIT    @D@@@8         LOAD    F,1,I .           INITIALIZE FLTN
)@@G@@AG REG@E@9@8         IF      A1,EQ,0,I  THEN,ONSTM1 . FLAG GOOD ALREADY TO
)@@G@@@F@9@8         SUB     A1,1,I .          GET SHIFT COUNT TO SET FLAG    TP
)@@G@@@F@9@8         SLB     F,0,A1 .          CREATE FLAG FOR THIS ON UNIT   TQ
)@@G@@@F@@@9         SLB     F,0,X1 .          CREATE FLAG FOR THIS ON UNIT   TR
)@@G@@@D@9@8         ADD     A1,1,I .          RESTORE CODE #     @#@@@8ONSTM1TS
)@@G@@   LABEL .  @C@@@9         LOAD    A3,ARCOND .       GET FLAGS    @F@@@9TT
)@@G@@         OR      A5,A3         .    SET FLAG ON FOR THIS CONDITION@D@9@8TU
)@@G@@         LOAD    A4,R2 .           GET REVERT FLAG    @G@9@8         IF TV
)@@G@@     A4,EQ,1,I  THEN,ONSTM2 . DON'T SET FLAG ON FOR REVERT  @G@@@9      TW
)@@G@@   IF      R2,NZERO  THEN,ONSTM2 . DON'T SET FLAG ON FOR REVERT   @F@9@8TX
)@@G@@         SET     F,ON,ARCOND .     SET FLAG FOR THIS CONDITION    @ @@@9TY
)@@G@@         STORE   A6,ARCOND .  @#@@@8ONSTM2   LABEL .  @D@@@9         ANDTZ
)@@G@@     A5,A3 .           SEE IF IT'S IN LIST@D@@@9         IF      A6,EQ,0UA
)@@G@@,I  THEN,ONSTM6 . NO IT ISN'T @G@@@8         LOAD    A6,0,I .          IUB
)@@G@@NIT COUNT OF NODES W/SAME CODE #    @E@@@8         LOAD    A2,ARCDLT .  UC
)@@G@@     GET PTR TO ON UNIT LIST  @D@9@8         LOADA   A1,ARCDLT-FH2 .   GUD
)@@G@@ET TRAILING PTR   @D@@@9         LOADA   X1,ARCOND     .   GET TRAILING UE
)@@G@@PTR   @#@@@8ONSTM3   LABEL .  @D@@@8         IF      A2,EQ,0,I  THEN,ONSUF
)@@G@@TM6 . END OF LIST @F@@@8         LOAD    A3,W1Q1 .         GET CODE # OFUG
)@@G@@ ON UNIT TO INSERT@H@@@8         IF      A3,EQ,ARCDCD  THEN,ONSTM5 . ONEUH
)@@G@@ WITH CODE IN LIST ALREADY    @#@@@8ONSTM4   LABEL .  @D@9@8         LOAUI
)@@G@@D    A1,A2 .           UP PTRS IN LIST    @D@@@9         LOAD    X1,A2 .UJ
)@@G@@           UP PTRS IN LIST    @B@@@8         LOAD    A2,ARCDPT .       DUK
)@@G@@ITTO  @D@@@8         GOTO    ONSTM3 .          CONTINUE DOWN LIST @#@@@8UL
)@@G@@ONSTM5   LABEL .  @G@@@8         LOAD    A3,W1H2 .         GET SD OF REFUM
)@@G@@ERENCE IF COND(REF)     @H@@@8.  IF EQUAL THEN GET RID OF OLD ON UNIT + UN
)@@G@@INSERT NEW ONE BY CHANGING ARCDBK   @C@@@8         IF      A3,EQ,ARCDSD UO
)@@G@@ THEN,ONSTM8 .    @G@@@8         ADD     A6,1,I .          SAW ONE IN LIUP
)@@G@@ST NOT = ONE WE WANT    @D@@@8         GOTO    ONSTM4 .          CONTINUUQ
)@@G@@E DOWN LIST @A@@@8ONSTM6   LABEL . HERE IF NOT IN LIST@D@9@8         LOAUR
)@@G@@D    A4,R2 .           GET REVERT FLAG    @F@9@8         IF      A4,EQ,1US
)@@G@@,I  THEN,ONSTM13 . NOTHING THERE TO REVERT@F@@@9         IF      R2,NZERUT
)@@G@@O  THEN,ONSTM13 . NOTHING THERE TO REVERT @F@@@8         LOAD    A2,AREPUU
)@@G@@TR .       GET A NODE ON END OF STACK     @^@9@8         LOAD    A3,A2 .UV
)@@G@@@C@9@8         ADD     A3,2,I .          NEED 2 WORDS @E@9@8         IF UW
)@@G@@     A3,LT,ADPEND  THEN,ONSTM7 . ENOUGH SPACE   @^@@@9         STKCHK  2UX
)@@G@@,I .  @D@@@9         MOVE    ARPRES,AREPTR .   RESET RESET PTR    @E@9@8UY
)@@G@@         LINK    WROVFL .          GET MORE CORE IF WE CAN  @C@9@8      UZ
)@@G@@   GOTO    ONSTM6 .          TRY AGAIN    @#@9@8ONSTM7   LABEL .  @C@9@8VA
)@@G@@         STORE   A3,AREPTR .       UP STACK PTR @C@@@8         MOVE    AVB
)@@G@@RCDCD,W1Q1 .     SET CODE #   @E@@@8         MOVE    ARCDSD,W1H2 .     SVC
)@@G@@TORE SD OF REF OR 0     @F@@@8         MOVE    ARCDPT,ARCDLT .   INSERT VD
)@@G@@NODE AT HEAD OF LIST    @ @@@8         STORE   A2,ARCDLT .  @#@@@8ONSTM8VE
)@@G@@   LABEL .  @D@9@8         LOAD    A4,R2 .           GET REVERT FLAG    VF
)@@G@@@D@9@8         IF      A4,EQ,0,I  THEN,ONSTM12 . NOT REVERT @D@@@9      VG
)@@G@@   IF      R2,ZERO  THEN,ONSTM12 . NOT REVERT   @E@@@8         LOAD    AVH
)@@G@@3,AREPTR .       GET CURRENT END OF STACK @ @@@8         SUB     A3,2,I VI
)@@G@@.     @F@@@8         IF      A2,NE,A3  THEN,ONSTM9 . NODE NOT AT END OF VJ
)@@G@@STACK @D@@@8         STORE   A3,AREPTR .       RESET STACK PTR    @D@@@9VK
)@@G@@         STORE   A3,ARPRES .       RESET RESET PTR    @#@@@8ONSTM9   LABVL
)@@G@@EL .  @E@@@8         LOAD    A3,ARCDPT,A2 .    DELETE NODE FROM LIST    VM
)@@G@@@A@9@8         STORE   A3,ARCDPT,A1 .     @A@@@9         STORE   A3,ARCDVN
)@@G@@PT,X1 .     @E@@@8         IF      A6,NE,0,I  THEN,ONSTM13 . DONE W/THISVO
)@@G@@ ONE  @H@@@9.        SEE IF THERE ARE ANY ON UNITS FOR THIS CONDITION INVP
)@@G@@ OUTER BLOCKS     @E@@@9         LOAD    A3,ARDYNM .       GET FLAGS OF VQ
)@@G@@OUTER BLOCK @A@@@9         LOAD    A3,ARCOND,A3 .     @^@@@9         ANDVR
)@@G@@     A5,A3 .@F@@@9         IF      A6,NE,0,I  THEN,ONSTM13 . CAN'T SET FVS
)@@G@@LAG OFF     @E@@@8.  HERE TO CONTINUE DOWN LIST TO SEE IF MORE W/SAME COVT
)@@G@@DE #  @#@@@8ONSTM10  LABEL .  @B@9@8         LOAD    A1,A2 .           UVU
)@@G@@P PTRS@B@@@9         LOAD    X1,A2 .           UP PTRS@ @@@8         LOAVV
)@@G@@D    A2,ARCDPT .  @D@@@8         IF      A2,EQ,0,I  THEN,ONSTM11 . END OVW
)@@G@@F LIST@C@@@8         LOAD    A3,W1Q1 .         GET CODE #   @F@@@8. EQUAVX
)@@G@@L=>CAN'T TURN OFF FLAG IN ARCOND SINCE THERE'S MORE THAN 1  @A@@@8. ON UVY
)@@G@@NIT IN BLOCK W/SAME CODE #    @E@@@8         IF      A3,EQ,ARCDCD  THEN,VZ
)@@G@@ONSTM13  ELSE,ONSTM10 . @C@@@8ONSTM11  LABEL . HERE IF NO MORE W/THIS COWA
)@@G@@DE #  @F@9@8         SET     F,OFF,ARCOND .    SO TURN OFF FLAG INDICATIWB
)@@G@@NG ONE@C@@@9         LOAD    A3,ARCOND .       GET FLAGS    @G@@@9      WC
)@@G@@   AND     A5,A3         .    SO TURN OFF FLAG INDICATING ONE     @A@@@9WD
)@@G@@         XOR     A6,A3         .    @ @@@9         STORE   A7,ARCOND .  WE
)@@G@@@E@@@8         GOTO    ONSTM13 .         DONE WITH THIS REVERT    @#@@@8WF
)@@G@@ONSTM12  LABEL .  @F@@@8         STORE   X5,ARCDBK .       SET BLOCK SD WG
)@@G@@ADDR OF ON UNIT   @F@@@8         MOVE    ARCDFG,W1Q2 .     SET SNAP,SYSTWH
)@@G@@EM FLAGS IF ANY   @E@@@8ONSTM13  LABEL . HERE TO RETURN OR PROCESS ANOTHWI
)@@G@@ER CONDITION@E@@@8         ADD     X3,1,I .          INC PTR TO CALLING WJ
)@@G@@LIST  @E@9@8         LOOP    A15,ONSTM00 .     PROCESS NEXT CONDITION   WK
)@@G@@@E@@@9         LOOP    A1,ONSTM00 .     PROCESS NEXT CONDITION    @D@9@8WL
)@@G@@         LOAD    X11,X3 .          GET RETURN ADDRESS @A@9@8         LJMWM
)@@G@@P .  RETURN TO USER     @B@@@9         GOTO    0,X3 .  RETURN TO USER   WN
)@@G@@@^@@@9/.       ON UNIT MANAGER@[@@@9.     @[@@@9.     @G@@@9.        THEWO
)@@G@@ ON UNIT MANAGER IS INVOKED THROUGH THE MACRO CALL OF ONUNIT@F@@@9.     WP
)@@G@@   OR THROUGH THE SIGNAL STATEMENT IN WHICH CASE THE CALLING@^@@@9.     WQ
)@@G@@   SEQUENCE IS:   @I@@@9.                LOAD  X5,SD ADDR OF 'NAME'   (IWR
)@@G@@F IT'S SIGNAL CONDITION('NAME'))    @C@@@9.                SIMULATE ONUNWS
)@@G@@IT MACRO CALL     @[@@@9.     @D@@@9.        REGISTER USAGE FOR THE MANAWT
)@@G@@GER IS AS FOLLOWS:@B@@@9.                A5 = FLAG FOR CONDITION  @[@@@9WU
)@@G@@.     @D@@@9.                A6 = RESULT OF OPERATIONS WITH A5    @[@@@9WV
)@@G@@.     @B@@@9.                A7 = CONDITION NUMBER    @[@@@9.     @ @@@9WW
)@@G@@.                A8 = TEMP    @[@@@9.     @F@@@9.                A9,X5 =WX
)@@G@@ SD OF NAME OF FILE IF CONDITION(NAME)    @[@@@9.     @A@@@9.           WY
)@@G@@     A10 = SAVE FOR X10 @[@@@9.     @B@@@9.                X1 = TEMP INDWZ
)@@G@@EX REGISTER @[@@@9.     @C@@@9.                X2 = PTR INTO LIST OF ON XA
)@@G@@UNITS @[@@@9.     @D@@@9.                X3 = PTR TO ON UNIT AUXILIARY BXB
)@@G@@LOCK  @[@@@9.     @D@@@9.                X4 = PTR TO END OF AUX ON UNIT XC
)@@G@@BLOCK @C@@@9.                X5 = CALLING REG AND SD REG    @D@@@9.     XD
)@@G@@           X6 = ENTRY SD FOR BLOCK ENTRY IN EXEC@[@@@9.     @B@@@9.     XE
)@@G@@           X7 = PTR TO MACRO CALL   @[@@@9.     @F@@@9.                XXF
)@@G@@8,X9 = USED TO MOVE STATIC LINKS AND DATA AREAS @[@@@9.     @C@@@9.     XG
)@@G@@           X10 = ACTIVATION RECORD PTR    @[@@@9.     @[@@@9.     @#@@@9XH
)@@G@@ONMNGR*  LLOC .   @H@@@9         STORED  A3,SVCDA3 .       SAVE A3,A4 (CXI
)@@G@@LOBBERED BY SOME IF STMTS)    @I@@@9         IF      GOEXEC,OFF,DGOPHF  XJ
)@@G@@THEN,ONSYSA . NOT EXEC PHASE=>EXDB INVOKED?     @ @@@9         USING   AXK
)@@G@@RONUN,X11 . @F@@@9         IF      04,SAME,ARCDLV  THEN,ONQUIT . LEVEL 4XL
)@@G@@ MSG=>QUIT  @H@@@9         IF      DGONFG,NZERO  THEN,ONQUIT . =>THIS COXM
)@@G@@ND RAISED AFTER FINISH  @G@@@9         IF      03,NSAME,ARCDLV  THEN,ONMXN
)@@G@@G00 . NOT LEVEL THREE ERROR   @F@@@9         MOVE    DGONFG,1,I .      SXO
)@@G@@ET FINISH TO BE RAISED NEXT   @#@@@9ONMG00   LABEL .  @B@@@9         STOXP
)@@G@@RE   X5,SVCDX5 .       SAVE X5@D@@@9         LOAD    A3,AREPTR .       GXQ
)@@G@@ET END OF A.R.    @E@@@9         STORE   X11,SVRTRN .      SAVE X11 TEMPXR
)@@G@@ORARILY     @E@@@9         STKCHK  ARSTSZ,I .        GET ROOM FOR FIXED XS
)@@G@@A.R.  @C@@@9         LOAD    X11,SVRTRN .      RESTORE X11  @E@@@9      XT
)@@G@@   STORE   A3,AREPTR .       RESTORE A.R. END PTR     @C@@@9         LOAXU
)@@G@@D    A3,X10 .          SAVE AR PTR  @D@@@9         LOAD    X10,AREPTR . XV
)@@G@@     X10->AUX BLOCK     @G@@@9         LMJ     X5,EXMST .        SAVE MAXW
)@@G@@NAGED REGS IN AUXILIARY A.R.  @D@@@9         LOAD    X10,A3 .          RXX
)@@G@@ESTORE A.R. PTR   @E@@@9         LOAD    X7,X11 .          SAVE PTR TO MXY
)@@G@@ACRO CALL   @ @@@9         USING   ARONUN,X7 .  @D@@@9         LOAD    FXZ
)@@G@@,1,I .           INITIALIZE FLAG REG@E@@@9         LOAD    A7,ARCDNO .  YA
)@@G@@     GET ACODE FOR CONDITION  @ @@@9         LOAD    A6,0,I .     @F@@@9YB
)@@G@@         SLBD    A6,27 .           GET RID OF LEFT HALF OF CODE   @E@@@9YC
)@@G@@         SRB     A7,27 .           NOW HAVE JUST CONDITION #@F@@@9      YD
)@@G@@   IF      A6,LT,0332,I  THEN,ONMGRNC . NOT CHECK/NOCHECK   @D@@@9      YE
)@@G@@   LOAD    A7,025,I .        SET CHECK COND #   @#@@@9ONMGRNC  LABEL .  YF
)@@G@@@^@@@9         LOAD    X1,A7 .@C@@@9         SLB     F,0,X1 .          CYG
)@@G@@REATE FLAG  @G@@@9         IF      A7,GE,011,I  THEN,ONMGR2 . NOT DISABAYH
)@@G@@BLE CONDITION     @E@@@9         LOAD    A8,ARDSEN .       GET DISABLE/EYI
)@@G@@NABLE FLAGS @F@@@9         AND     A5,A8 .           SEE IF CONDITION ISYJ
)@@G@@ ENABLED    @F@@@9         IF      A6,EQ,0,I  THEN,ONMIGN . DISABLED - IYK
)@@G@@GNORE ERROR @#@@@9ONMGR2   LABEL .  @E@@@9         IF      A7,NE,013,I  YL
)@@G@@THEN,ONMGR4 . NOT FINISH COND @E@@@9         MOVE    DGONFG,2,I .      SYM
)@@G@@ET FINISH COND RAISED   @#@@@9ONMGR4   LABEL .  @D@@@9         LOAD    AYN
)@@G@@8,ARCOND .       GET COND FLAGS     @G@@@9         AND     A5,A8        YO
)@@G@@ .    SEE IF THERE'S AN ON UNIT FOR COND. @E@@@9         IF      A6,NE,0YP
)@@G@@,I  THEN,ONMGR3 . ON UNIT EXISTS    @H@@@9.        NO ON UNIT FOR CURRENYQ
)@@G@@T CONDITION => IF NOT ERROR THEN RAISE ERROR    @#@@@9ONMG4A   LABEL .  YR
)@@G@@@F@@@9         IF      04,ON,ARRFG1  THEN,ONMSYS . NO ON UNIT FOR SIGNALYS
)@@G@@@F@@@9         MOVE    SVRTRN,ARCDR2 .   ASSUME SYSTEM RETURN IF 'NOMSG'YT
)@@G@@@H@@@9         IF      02,ON,ARCDNM  THEN,ONMRT1  . 'NOMSG'=>SYSTEM RETUYU
)@@G@@RN,NO MSG   @H@@@9         IF      A7,EQ,012,I  THEN,ONMSYS . NO ON UNITYV
)@@G@@ FOR ERROR. DO DEFAULT  @G@@@9         IF      A7,EQ,013,I  THEN,ONMRT1 YW
)@@G@@. NO ON UNIT FOR FINISH=>QUIT @#@@@9ONMG4B   LABEL .  @C@@@9         LOAYX
)@@G@@D    A7,012,I .        RAISE ERROR  @D@@@9         LOAD    F,ARFGER,I . YY
)@@G@@      CREATE ERROR FLAG @C@@@9         GOTO    ONMGR2 .          TRY AGAYZ
)@@G@@IN    @#@@@9ONMGR3   LABEL .  @G@@@9.  IF HERE THEN BEGIN SEARCH INTO LIZA
)@@G@@ST OF ON UNITS FOR THIS CONDITION   @G@@@9.  OR ERROR. THERE MUST BE AN ZB
)@@G@@ENTRY IF WE'VE GOTTEN THIS FAR UNLESS     @^@@@9.  WE BLEW IT SOMEWHERE.ZC
)@@G@@@F@@@9         IF      A7,LT,015,I  THEN,ONMGR5 . NOT COND(FILENAME)    ZD
)@@G@@@G@@@/         LOAD    A9,SVCDX5 .       ASSUME SIGNAL, => SD IN X5(SVCDZE
)@@G@@X5)   @G@;@9         LOAD    A9,SVCDX5 .       ASSUME SIGNAL, => SD IN XZF
)@@G@@5(SVCDX5)   @G@;@9         IF      04,ON,ARRFG1  THEN,ONMGR5 . SIGNAL SOZG
)@@G@@ HAVE SD ALREADY  @G@/@;         IF      04,OFF,ARRFG1  THEN,ONMG3A . IFZH
)@@G@@ SIGNAL HAVE SD ALREADY @G@@@/         IF      04,ON,ARRFG1  THEN,ONMGR5ZI
)@@G@@ . IF SIGNAL HAVE SD ALREADY  @F@/@;         LOAD    A9,SVCDX5 .       SZJ
)@@G@@IGNAL, => SD IN X5(SVCDX5)    @G@/@;         STORE   A9,ONIOSV+6 .     SZK
)@@G@@AVE IN CASE FILENAME FOR ONFILE     @ @/@;         GOTO    ONMGR5 .     ZL
)@@G@@@#@/@;ONMG3A   LABEL .  @E@@@9         IF      A7,EQ,025,I  THEN,ONMG5A ZM
)@@G@@. CHECK=>GET SD   @E@@@9.  IT IS TACITLY ASSUMED THAT THE SIGNAL STATEMEZN
)@@G@@NT WILL     @C@@@9.  PASS IN X5 THE SD FOR THE NAMED CONDITION    @G@@@9ZO
)@@G@@.  WE MUST GET THE SD OF THE FILE OR CHECKED VARIABLE IF NOT SIGNAL     ZP
)@@G@@@ @@@9         USING   IOCB,X3 .    @ @@@9         LOAD    X3,ONIOSV+6 .ZQ
)@@G@@@I@@@9         IF      IOCBSR,ON,IOCBF1  THEN,ONMG4B . STRING I/O=>CAN'TZR
)@@G@@ BE IN LIST, R    @D@@@9         LOAD    A9,IOCBSD .       GET SD OF FILZS
)@@G@@ENAME @ @@@9         GOTO    ONMGR5 .     @G@@@9ONMG5A   LABEL .        ZT
)@@G@@           HERE TO GET SD OF CHECKED VARIABLE   @G@@@9         LOAD    XZU
)@@G@@1,W1,A0 .        GET VALUE OF X11(FROM CHECK CALL)    @F@@@9         LOAZV
)@@G@@D    A9,W1,X1 .        GET SD OF CHECKED VARIABLE     @#@@@9ONMGR5   LABZW
)@@G@@EL .  @E@@@9         LOAD    A10,X10 .         SAVE PTR TO CURRENT A.R. ZX
)@@G@@@F@@@9.  HERE WE BEGIN TO SEARCH THE LIST OF ON UNITS FOR THEN CONDITIONZY
)@@G@@@^@@@9.  THAT WAS RAISED.     @#@@@9ONMLP0   LABEL .  @F@@@9         LOAZZ
)@@G@@D    X2,ARCDLT .       GET PTR TO LIST OF CONDITIONS  @#@@@9ONMGLP   LABAA
)@@G@@EL .  @ @@@9         USING   ARONUN,X2 .  @E@@@9         IF      X2,ZEROAB
)@@G@@  THEN,ONMLP1 . NOT AT THIS LEVEL   @G@@@9         IF      A7,NE,ARCDCD AC
)@@G@@ THEN,ONMLP2 . NOT ONE W/COND. SO CONTINUE@I@@@9         IF      A7,LT,0AD
)@@G@@15,I  THEN,ONMGOT . NOT COND(NAME) SO FOUND ONE WE WANT     @G@@@9.  IF AE
)@@G@@HERE THEN THERE EXISTS A NODE IN LIST WITH THE RIGHT CONDITION #  @E@@@9AF
)@@G@@.  BUT NOW WE HAVE TO SEE IF THE SD OF THE NAME OR FILE OF  @A@@@9.  CONAG
)@@G@@DITION MATCH THAT IN THE NODE.@F@@@9         IF      A9,EQ,ARCDSD  THEN,AH
)@@G@@ONMGOT . FOUND ON UNIT NODE   @#@@@9ONMLP2   LABEL .  @D@@@9         LOAAI
)@@G@@D    X2,ARCDPT .       CONTINUE DOWN LIST @ @@@9         GOTO    ONMGLP AJ
)@@G@@.     @D@@@9ONMLP1   LABEL . HERE IF NOT IN LIST AT THIS LEVEL    @D@@@9AK
)@@G@@         LOAD    X10,ARDYNM .      GO OUT ONE LEVEL   @D@@@9.   LOOK ON AL
)@@G@@A.R. AHEAD TO SEE WHEN WE REACH LEVEL ZERO@E@@@9         IF      ARDYNM,AM
)@@G@@NZERO  THEN,ONMLP0 . TRY THIS LEVEL @I@@@9.        IF WE FALL THROUGH HEAN
)@@G@@RE THEN A CONDITION WITH AN SD OCCURRED FOR WHICH     @H@@@9.        THEAO
)@@G@@R WAS NONE IN THE LIST MATCHING THE SD. FOR SIGNAL THIS IMPLIES   @F@@@9AP
)@@G@@.        THAT WE IGNORE THE STATEMENT, FOR OTHERS WE RAISE ERROR. @ @@@9AQ
)@@G@@         USING   ARONUN,X7 .  @E@@@9         LOAD    X10,A10 .         RAR
)@@G@@ESTORE ORIGINAL A.R. PTR@G@@@9         GOTO    ONMG4A .          SEE IF AS
)@@G@@CAN RAISE ERROR OR RETURN     @ @@@9         USING   ARONUN,X2 .  @G@@@9AT
)@@G@@ONMGOT   LABEL .                  HERE IF WE FOUUND CONDITION IN LIST   AU
)@@G@@@H@@@9         STORE   X10,A15 .         SAVE A.R. PTR TO BLOCK CONTAINIAV
)@@G@@NG ON UNIT  @F@@@9         LOAD    X10,A10 .         RESTORE X10 TO ORIGAW
)@@G@@INAL A.R.   @F@@@9.  NOW LOOK AT ALL ACTIVE A.R.'S ON STACK AND SEE IF TAX
)@@G@@HE BLOCK    @F@@@9.  SD OF THE ON UNIT WE WANT TO CALL IS THE SAME AS THAY
)@@G@@E BLOCK     @F@@@9.  SD OF ANY OF THOSE A.R.'S.  IF THERE IS A MATCH THEAZ
)@@G@@N THERE IS  @F@@@9.  AN ERROR IN THE ON UNIT WE WANT TO CALL WHICH IS THBA
)@@G@@E SAME AS   @F@@@9.  ONE OF THE CONDITIONS ASSOCIATED WITH THE ON UNIT BBB
)@@G@@LOCK WE     @F@@@9.  WANT TO INVOKE.  THIS IMPLIES THAT A LOOP EXISTS INBC
)@@G@@ THE USER'S @]@@@9.  PROGRAM. @E@@@9         LOAD    A3,ARCDBK .       GBD
)@@G@@ET BLOCK SD OF ON UNIT  @G@@@9ONGOT1   LABEL .                   LOOP TOBE
)@@G@@ SEE IF BLOCK ALREADY ACTIVE  @F@@@9         IF      A3,EQ,ARBSDP  THEN,BF
)@@G@@ONGOT2 . =>ERROR IN ON UNIT   @D@@@9         LOAD    X10,ARDYNM .      GBG
)@@G@@O BACK ONE LEVEL  @D@@@9         IF      X10,NZERO  THEN,ONGOT1 . CONTINBH
)@@G@@UE    @D@@@9         LOAD    X10,A10 .         RESTORE A.R. PTR   @F@@@9BI
)@@G@@         GOTO    ONGOT3 .          CONTINUE WITH CALLING BLOCK    @F@@@9BJ
)@@G@@ONGOT2   LABEL .                   HERE IF IN AN ON UNIT ALREADY  @E@@@9BK
)@@G@@         LOAD    X10,A10 .         RESTORE CURRENT A.R. PTR @D@@@9      BL
)@@G@@   GOTO    ONMSYS .          DO SYSTEM ACTION   @#@@@9ONGOT3   LABEL .  BM
)@@G@@@G@@@9         IF      ONSYST,SAME,ARCDFG  THEN,ONMSYS . DO SYSTEM ACTIOBN
)@@G@@N     @F@@@9         LOAD    X5,ARCDBK .       PASS SD IN X5 OF ON UNIT BO
)@@G@@BLOCK @F@@@9         LINK    CREATEBLOCK .    CREATE ON UNIT BLOCK IN  ABP
)@@G@@.R.   @F@@@9         USING   WORD,X4 .         X4 HERE PTS TO END OF AUXBQ
)@@G@@ BLOCK@F@@@9         STORE   A0,W1+15 .        SAVE CURRENT SYSTEM STACKBR
)@@G@@ PTR  @D@@@9         MOVE    W1,DRNSTK,15 .    SAVE SYSTEM STACK  @E@@@9BS
)@@G@@         ADD     X4,16,I .         INCR END OF BLOCK PTR    @F@@@9      BT
)@@G@@   LOAD    A0,SY$$TK .       START OUT WITH A NEW STACK     @G@@@9      BU
)@@G@@   MOVE    W1,EXONJP,3 .     PUT BLOCK CALL SEQUENCE ON STACK     @D@@@9BV
)@@G@@         STORE   X5,W1H2+1 .       PUT IN SD OF BLOCK @ @@@9         LOABW
)@@G@@D    X11,X4 .     @G@@@9         ADD     X4,3,I .          GET PTR PAST BX
)@@G@@CALL FOR BIF STRINGS    @D@@@9         LOCAL .  SAVE X11(CALLING SEQUENCBY
)@@G@@E ADDRESS)  @I@@@9         LINK    FILDVS .          FILL IN D.V.S FOR BBZ
)@@G@@IF'S+PUT STRINGS ON STACK     @D@@@9.        ON RETURN X10 POINTS TO AUXCA
)@@G@@ILLIARY BLOCK     @ @@@9         LOADXI  X7,1,I .     @ @@@9         LOACB
)@@G@@DXI  X8,1,I .     @ @@@9         LOADXI  X9,1,I .     @H@@@9         IF CC
)@@G@@     ONSNAP,OFF,ARCDFG  THEN,JMP . NO SNAP OPTION SO CALL BLOCK   @C@@@9CD
)@@G@@         STORE   X10,SVCDX5 .      SAVE X10     @B@@@9         STORE   XCE
)@@G@@2,SVCDA3 .       SAVE X2@D@@@9         LOADA   X4,SNPHDG .       GET SNACF
)@@G@@P HEADER MSG@ @@@9         USING   WORD,X4 .    @E@@@9         MOVE    DCG
)@@G@@GOLIN,W1,3 .     MOVE MSG INTO PRINT LINE @D@@@9         LOADA   X1,DGOLCH
)@@G@@IN .       PASS ADDR OF MSG   @C@@@9         LINK    GOPRTL .          GCI
)@@G@@O PRINT IT  @D@@@9         MOVE    SVCDA3+1,DGOPT5 . SAVE CURRENT FLAGS CJ
)@@G@@@D@@@9         MOVE    DGOPHF,GOPMDP,I . RETURN FROM EXER   @D@@@9      CK
)@@G@@   MOVE    DGOPT5,DPMSCL,I . DUMP SCALARS ONLY  @B@@@9         LINK    PCL
)@@G@@LPMDP .          GO DUMP@C@@@9         MOVE    DGOPT5,SVCDA3+1 . RESTORECM
)@@G@@ FLAGS@D@@@9         MOVE    DGOPHF,GOEXEC,I . RESTORE EXEC PHASE @C@@@9CN
)@@G@@         LOAD    X10,SVCDX5 .      RESTORE X10  @C@@@9         LOAD    XCO
)@@G@@2,SVCDA3 .       RESTORE X2   @H@@@9         IF      ONSYST,OFF,ARCDFG  CP
)@@G@@THEN,JMP . SYSTEM FLAG OFF SO CALL BLOCK  @G@@@9         UNSTK   X11 .  CQ
)@@G@@           SSTEM SO DON'T NEED CAALING ADDR     @D@@@9         LMJ  X5,PCR
)@@G@@OPSTK .          RESTORE SOME OREGS @C@@@9         LOAD    X10,ARDYNM . CS
)@@G@@     POP STACK    @B@@@9ONMSYS   LABEL . HERE TO DO SYSTEM ACTION @C@@@9CT
)@@G@@         LOAD    A3,X10 .          SAVE A.R. PTR@E@@@9         LOAD    XCU
)@@G@@10,AREPTR .      GET A.R. WHERE REGS ARE  @E@@@9         LMJ     X5,EXMLCV
)@@G@@ .         RESTORE SOME MORE REGS   @C@@@9         LOAD    X5,SVCDX5 .  CW
)@@G@@     RESTORE X5   @D@@@9         LOAD    X10,A3 .          RESTORE A.R. CX
)@@G@@PTR   @E@@@9         USING   ARONUN,X11 .       X11 STILL PTS TO MACRO  CY
)@@G@@@#@@@9ONSYSA   LABEL .  @F@@@9         IF      02,OFF,ARCDNM  THEN,ONSYSCZ
)@@G@@B . 'NOMSG'=>SKIP EXERR @C@@@9         LOAD    A3,ARCDR2 .       SYSTEM DA
)@@G@@RETURN@ @@@9         STORE   A3,SVRTRN .  @ @@@9         GOTO    ONMRT4 DB
)@@G@@.     @#@@@9ONSYSB   LABEL .  @E@@@9         LOAD    A3,ARCDR2 .       SDC
)@@G@@AVE SYSTEM ACTION RETURN@^@@@9         STACK   A3 .   @D@@@9         LOADD
)@@G@@D    A3,ARCDLV .       GET LEVEL OF ERROR @E@@@9         IF      A3,GT,2DE
)@@G@@,I  THEN,ONQUIT . LEVEL 3 ERROR     @#@@@9ONSYS0   LABEL .  @D@@@9      DF
)@@G@@   LOAD    A13,ARCDER .       GET ERROR MSG #   @C@@@9         LOADD   ADG
)@@G@@3,SVCDA3 .       RESTORE A3,A4@A@@@9         EXERR   A13,R  LEVEL,1 .   DH
)@@G@@@#@@@9ONSYS1   LABEL .  @^@@@9         UNSTK   X11 .  @ @@@9         STODI
)@@G@@RE   X11,SVRTRN . @ @@@9         GOTO    ONMRT3 .     @B@@@9ONMIGN   LABDJ
)@@G@@EL . HERE TO IGNORE ERROR     @A@@@9         MOVE   SVRTRN,ARCDR3 .     DK
)@@G@@@#@@@9ONMRT1   LABEL .  @C@@@9         LOAD    A3,X10 .          SAVE A.DL
)@@G@@R. PTR@E@@@9         LOAD    X10,AREPTR .      GET A.R. WHERE REGS ARE  DM
)@@G@@@C@@@9         LMJ     X5,EXML .         RESTORE REGS @D@@@9         LOADN
)@@G@@D    X10,A3 .          RESTORE A.R. PTR   @#@@@9ONMRT4   LABEL .  @G@@@9DO
)@@G@@         IF      02,ON,DGONFG  THEN,ONQUIT . FINISH WAS RAISED=>DONE    DP
)@@G@@@#@@@9ONMRT2   LABEL .  @C@@@9         LOADD   A3,SVCDA3 .       RESTOREDQ
)@@G@@ A3,A4@C@@@9         LOAD    X5,SVCDX5 .       RESTORE X5   @#@@@9ONMRT3DR
)@@G@@   LABEL .  @ @@@9         LOADXI  X7,1,I .     @ @@@9         LOADXI  XDS
)@@G@@8,1,I .     @ @@@9         LOADXI  X9,1,I .     @F@@@9         GOTO    *DT
)@@G@@SVRTRN-(IN 63,0,1,0) .         RETURN TO CALLER @#@@@9ONMRTN   LABEL .  DU
)@@G@@@ @@@9         USING   ARONUN,X7 .  @G@@@9         LMJ  X5,POPSTK .     DV
)@@G@@     RESTORE DATA AREAS+REGS+POP STACK    @G@@@9         IF      01,OFF,DW
)@@G@@DGONFG  THEN,ONMRT0 . NOT FINISH TO BE RAISED   @C@@@9         LOAD    ADX
)@@G@@7,013,I .        RAISE FINISH @D@@@9         LOAD    F,ARFGFN,I .      SDY
)@@G@@ET FINISH FLAG    @F@@@9         LOAD    X10,ARDYNM .      RESTORE X10 TDZ
)@@G@@O CALLING A.R.    @D@@@9         GOTO    ONMGR2 .          GO DO FINISH EA
)@@G@@COND  @#@@@9ONMRT0   LABEL .  @E@@@9         MOVE    SVRTRN,ARCDR1 .   OEB
)@@G@@N UNIT DONE RETURN PT   @E@@@9         LMJ     X5,EXML .         RESTOREEC
)@@G@@ REST OF REGS     @C@@@9         LOAD    X10,ARDYNM .      POP STACK    ED
)@@G@@@E@@@9         IF      02,OFF,DGONFG  THEN,ONMRT2 . NOT FINISHED  @B@@@9EE
)@@G@@         LINK    PLPMND .          QUIT   @#@@@9ONQUIT   LABEL .  @ @@@9EF
)@@G@@         USING   ARONUN,X11 . @D@@@9         LOAD    A13,ARCDER .       EG
)@@G@@GET ERROR MSG #   @D@@@9         IF    4,ON,ARCDNM THEN,ONQIT1 . -> 'NONEH
)@@G@@UM'   @D@@@9         IF    1,ON,ARCDNM THEN,ONQIT2 . -> NO 'ERROR'@ @@@9EI
)@@G@@         LOADD   A3,SVCDA3 .  @A@@@9         EXERR   A13,R  LEVEL,3 .   EJ
)@@G@@@#@@@9ONQIT1   LABEL .  @ @@@9         LOADD   A3,SVCDA3 .  @H@@@9.     EK
)@@G@@   SIMULATE 'EXERR  A13,X  LEVEL,3  'NONUM' ' WHERE X=BOTH R+I OPTIONS  EL
)@@G@@@ @@@9         LINK    PLEXER .     @^@@@9         +031007003 .   @#@@@9EM
)@@G@@ONQIT2   LABEL .  @ @@@9         LOADD A3,SVCDA3 .    @B@@@9.         LIEN
)@@G@@NK   PLEXER A13,R,I LEVEL,3 . @^@@@9         LINK  PLEXER   @^@@@9      EO
)@@G@@   +031003003     @[@@@9.     @[@@@9.     @F@@@9.        ON RETURN FROM EP
)@@G@@CREATEBLOCK X3 POINTS TO AUXILIARY BLOCK  @F@@@9.        AND ALL A.R. INEQ
)@@G@@FO AND DATA AREAS HAVE BEEN STROED IN     @#@@@9.        THE BLOCK@[@@@9ER
)@@G@@.     @[@@@9.     @^@@@9CREATEBLOCK LOCAL .     @ @@@9         USING   SES
)@@G@@DSECT,X5 .  @D@@@9         LOAD    A8,AREPTR .       GET END OF STACK   ET
)@@G@@@E@@@9         ADD     A8,ARSTSZ,I .     ADD  SIZE OF FIXED A.R.  @H@@@9EU
)@@G@@         ADD     A8,SDBKDP .       ADD IN ROOM FOR STATIC LINKS(1 TOO BIEV
)@@G@@G)    @F@@@9         LOAD    A14,A8 .          SAVE ADDRESS OF D.V.S FOREW
)@@G@@ LATER@E@@@9         ADD     A8,10,I .         THERE ARE FIVE D.V.S     EX
)@@G@@@F@@@9         LOAD    X4,A8 .           GET PTR TO AFTER STATIC LINKS  EY
)@@G@@@H@@@9         ADD     A8,ARONSZ+3+16,I .   ADD ROOM FOR ARONBL+CALLING EZ
)@@G@@SEQUENCE    @ @@@9         USING   ARONUN,X7 .  @E@@@9         ADD     AFA
)@@G@@8,ARNOFW .       ADD IN # FULL WDS TO SAVE@E@@@9         ADD     A8,ARNOFB
)@@G@@HW .       ADD # HALF WDS TO SAVE   @#@@@9CRBLK1   LABEL .  @E@@@9      FC
)@@G@@   IF      A8,LT,ADPCND  THEN,CRBLK2 . ENOUGH ROOM    @C@@@9         LINFD
)@@G@@K    WROVFL .          GET MORE ROOM@C@@@9         GOTO    CRBLK1 .     FE
)@@G@@     TRY AGAIN    @C@@@9CRBLK2   LABEL . START CREATING BLOCK ON STACK  FF
)@@G@@@D@@@9         LOAD    X3,AREPTR .       PTR TO AUX BLOCK   @ @@@9      FG
)@@G@@   USING   AREC,X3 .    @F@@@9         STORE   A8,AREPTR .       END OF FH
)@@G@@STACK PTR IN AUX BLOCK  @E@@@9         LOAD    A8,ARCOND,X10 .   COPY FLFI
)@@G@@AGS TO AUX BLOCK  @ @@@9         STORE   A8,ARCOND .  @ @@@9         LOAFJ
)@@G@@D    A8,SVCDX5 .  @ @@@9         USING   ARONBL,X4 .  @D@@@9         STOFK
)@@G@@RE   X4,ARREGS .   SAVE PTR TO SAVE AREAS @E@@@9         STORE   A8,ARCDFL
)@@G@@XS .       SAVE X5 IN AUX BLOCK     @C@@@9.        STORE   X10,ARCDXS+1 FM
)@@G@@.    SAVE X10     @B@@@9.        STORE   A0,ARCDAS .       SAVE A0@C@@@9FN
)@@G@@         STORED  A1,ARCDAS+1 .     SAVE A1,A2   @ @@@9         LOADD   AFO
)@@G@@1,SVCDA3 .  @C@@@9         STORED  A1,ARCDAS+3 .     SAVE A3,A4   @B@@@9FP
)@@G@@         STORE   R1,ARCDRS+1 .     SAVE R1@C@@@9         MOVE    ARCDRS+FQ
)@@G@@2,R2,14 .  SAVE R2-R15  @E@@@9     MOVE    ARMCRO,ARCDIF,6 .     MOVE INFR
)@@G@@FO FROM MACRO CALL@F@@@9         ADD     X4,ARONSZ,I .     INCREASE PTR FS
)@@G@@TO DATA SAVE AREAS@E@@@9.  HERE ALL REGS AND INFO FROM MACRO CALL HAVE BFT
)@@G@@EN SAVED    @^@@@9.  NOW MOVE DATA AREAS  @E@@@9         LOAD    X8,ARCDFU
)@@G@@FW .       GET ADDR OF FULL WD AREA @C@@@9         LOAD    X9,ARNOFW .  FV
)@@G@@     SIZE OF AREA @ @@@9         USING   WORD,X8 .    @F@@@9         USIFW
)@@G@@NG   AREC,X4 .         KLUDGE  KLUDGE  KLUDGE ......  @D@@@9         MOVFX
)@@G@@E    ARINCT,W1,R,X9 . SAVE FULL WD AREA   @F@@@9         STORE   X4,ARFWFY
)@@G@@PT,X3 .    SAVE PTR TO FULL WD SAVE AREA  @E@@@9         ADD     X4,X9 .FZ
)@@G@@           INCR. PTR TO END OF BLOCK@F@@@9         LOAD    X8,ARCDHW .  GA
)@@G@@     GET ADDR OF HALF WDS TO SAVE   @C@@@9         LOAD    X9,ARNOHW .  GB
)@@G@@     SIZE OF AREA @D@@@9         MOVE    ARINCT,W1,R,X9 . SAVE HALF WD AGC
)@@G@@REA   @F@@@9         STORE   X4,ARHWPT,X3 .    SAVE PTR TO HALF WD SAVE GD
)@@G@@AREA  @E@@@9         ADD     X4,X9 .           INCR. PTR TO END OF BLOCKGE
)@@G@@@ @@@9         USING   AREC,X3 .    @H@@@9.  NOW DATA AREAS HAVE BEEN SAGF
)@@G@@VED. NOW FILL IN REST OF NEEDED INFO IN A.R.    @C@@@9         MOVE    AGG
)@@G@@RTYPE,0,I .      NO TYPE FLAGS@D@@@9         STORE   X5,ARBSDP .       OGH
)@@G@@N UNIT BLOCK SD   @ @@@9         USING   GENLST,X3 .  @B@@@9         MOVGI
)@@G@@E    GENPAT,0,I .      NO PTRS@B@@@9         MOVE    GENPTR,0,I .      DGJ
)@@G@@ITTO  @B@@@9.  MAYBE ABOVE INSTR SHOULD USE DUMMY SD  @D@@@9         STOGK
)@@G@@RE   X10,ARDYNM .      SET DYNAMIC LINK   @F@@@9         MOVE    ARESDP,GL
)@@G@@0,I .      TELL EVERYONE TO SKIP THIS A.R.@E@@@9         MOVE    ARCDLT,GM
)@@G@@0,I .      NO ON UNITS IN AUX BLOCK @C@@@9         STORE R11,ARSTMT .   GN
)@@G@@     STORE STMT # @F@@@9         STORE   R11,ARSTMT,X10 .  STORE STMT # GO
)@@G@@IN INVOKING BLOCK @E@@@9         LOAD    A8,DEXINV .       UPDATE INVOCAGP
)@@G@@TION COUNT  @ @@@9         ADD     A8,1,I .     @ @@@9         STORE   AGQ
)@@G@@8,DEXINV .  @ @@@9         STORE   A8,ARINCT .  @F@@@9         LOAD    AGR
)@@G@@8,SDBKDP .       BLOCK DEPTH OF ON UNIT BLOCK   @D@@@9         SUB     AGS
)@@G@@8,1,I .          DEPTH OF AUX BLOCK @E@@@9         LOAD    R1,A8 .      GT
)@@G@@     # OF STATIC LINKS TO MOVE@ @@@9         LOADXI  X9,1,I .     @C@@@9GU
)@@G@@         LOADXM  X9,ARSTLK+FXU,X3 . NEW LINKS   @E@@@9         IF      AGV
)@@G@@8,LE,0,I  THEN,CRBLK3 . NOTHING TO MOVE   @H@@@9         LOAD    X1,A15 GW
)@@G@@.          GET A.R. OF OUTER BLOCK(SAVED AT ONMGOT)   @C@@@9         LOAGX
)@@G@@DA   X8,ARSTLK,X1  .   OLD LINKS    @ @@@9         LOADXI  X8,1,I .     GY
)@@G@@@D@@@9         BT      X9,0,*X8 .        MOVE STATIC LINKS  @#@@@9CRBLK3GZ
)@@G@@   LABEL .  @C@@@9         STORE   X3,W1XH2,X9 .     CURRENT BLOCK@^@@@9HA
)@@G@@         JMP .   RETURN @[@@@9.     @[@@@9.     @B@@@9.  RESTORE DATA ARHB
)@@G@@EAS,REGS AND POP STACK  @[@@@9.     @[@@@9.     @#@@@9POPSTK   LLOC .   HC
)@@G@@@ @@@9         USING   WORD,X4 .    @ @@@9         USING   ARONUN,X7 .  HD
)@@G@@@F@@@9         USING   AREC,X8 .         KLUDGE  KLUDGE KLUDGE ....     HE
)@@G@@@ @@@9         USING   ARONBL,X3 .  @E@@@9         LOAD    X3,ARREGS,X10HF
)@@G@@ .   GET PTR TO REGISTER AREA @E@@@9         LOADA   X7,ARMCRO .       GHG
)@@G@@ET PTR TO MACRO INFO    @E@@@9         LOAD    X8,ARCDFW .       PTR TO HH
)@@G@@FULL WD DATA AREA @C@@@9         LOAD    X9,ARNOFW .       # WDS TO MOVEHI
)@@G@@@E@@@9         LOAD    X4,ARFWPT,X10 .   PTR TO SAVED DATA AREA   @E@@@9HJ
)@@G@@         MOVE    ARINCT,W1,R,X9 .  RESTORE FULL WD AREA     @D@@@9      HK
)@@G@@   LOAD    X8,ARCDHW .       PTR TO HALF WD AREA@C@@@9         LOAD    XHL
)@@G@@9,ARNOHW .       SIZE OF AREA @E@@@9         LOAD    X4,ARHWPT,X10 .   PHM
)@@G@@TR TO HALF WD SAVED AREA@E@@@9         MOVE    ARINCT,W1,R,X9 .  RESTOREHN
)@@G@@ HALF WORD AREA   @F@@@9         ADD     X4,X9 .           GET PTR TO STHO
)@@G@@ACK SAVE AREA     @E@@@9         MOVE    DRNSTK,W1,15 .    RESTORE SYSTEHP
)@@G@@M STACK     @E@@@9         LOAD    A0,W1+15 .        RESTORE SSYSTEM STAHQ
)@@G@@CK PTR@ @@@9         USING   AREC,X10 .   @H@@@9         MOVE    SVCDX5,HR
)@@G@@ARCDXS .   MOVE VALUE FOR X5 FOR LATER RESTORATION    @E@@@9         MOVHS
)@@G@@E    R2,ARCDRS+2,14 .  RESTORE R REGS R2-R15    @C@@@9         LOADD   AHT
)@@G@@1,ARCDAS+1 .     RESTORE A1,A2@I@@@9         MOVE    SVCDA3,ARCDAS+3,2 .HU
)@@G@@ PUT A3,A4 WHERE THEY WILL BE RESTORED LATER    @C@@@9         LOAD    RHV
)@@G@@1,ARCDRS+1 .     RESTORE R1   @D@@@9         GOTO   0,X5 .              HW
)@@G@@       RETURN     @D@@@9/.       ROUTINE TO CREATE ONUNIT CALL FROM ONERHX
)@@G@@ CALL @A@@@9EXONER*  LOCAL . MACRO ONER ENTRY   @B@@@9         STORE   RHY
)@@G@@1,SVRTRN .       SAVE R1@C@@@9         STORED  A2,SVCDA3 .       SAVE A2HZ
)@@G@@,A3   @ @@@9         USING   WORD,X11 .   @D@@@9         LOAD    A3,W1Q4IA
)@@G@@ .         GET LEVEL OF ERROR @B@@@9         IF      A3,NE,4,I  THEN,EXOIB
)@@G@@NR1 . @D@@@9         LOAD    A13,W1Q2 .        GET MSG NUMBER     @ @@@9IC
)@@G@@         LOADD   A2,SVCDA3 .  @A@@@9         EXERR   A13,R  LEVEL,3 .   ID
)@@G@@@#@@@9EXONR1   LABEL .  @B@@@9         STORE   X5,SVCDX5 .       SAVE X5IE
)@@G@@@D@@@9         LOAD    X5,AREPTR .       GET END OF STACK   @E@@@9      IF
)@@G@@   STKCHK  7,I .             GET ROOM FOR ONUNIT CALL @ @@@9         USIIG
)@@G@@NG   WORD,X5 .    @E@@@9         MOVE    W1,EXONCL,7 .     MOVE IN ONUNIIH
)@@G@@T MACRO CALL@F@@@9         UNSTK   X11 .             RESTORE X11(PTR TO II
)@@G@@ONER CALL)  @ @@@9         USING   WORD,X11 .   @ @@@9         LOAD    AIJ
)@@G@@2,W1Q2 .    @^@@@9         LOAD    R1,A4 .@C@@@9         IF      02,OFF,IK
)@@G@@W1Q3  THEN,EXONR3 .     @F@@@9         LOAD    A2,0,A2 .         GET MSGIL
)@@G@@ NUMBER FROM REGISTER   @#@@@9EXONR3   LABEL .  @^@@@9         LOAD    AIM
)@@G@@4,R1 .@E@@@9         STORE   A2,W1Q1+1,X5 .    STORE MSG # IN ONUNIT    IN
)@@G@@@D@@@9         LOAD    A3,W1Q4 .         GET LEVEL OF ERROR @F@@@9      IO
)@@G@@   STORE   A3,W1Q2+1,X5 .    STORE LEVEL IN ONUNIT CALL     @E@@@9      IP
)@@G@@   ADD     X11,1,I .         GET RETURN ADDR FROM ONER@E@@@9         LOCIQ
)@@G@@AL .                   SAVE RETURN ADDR ON STACK@F@@@9         LOADA   AIR
)@@G@@3,EXONR4 .       GET RETURN ADDR FROM ONUNIT    @F@@@9         STORE   AIS
)@@G@@3,W1H2+4,X5 .   SET RETURN ADDRESSES IN ONUNIT  @A@@@9         STORE   AIT
)@@G@@3,W1H2+5,X5 .     @A@@@9         STORE   A3,W1H2+6,X5 .     @E@@@9      IU
)@@G@@   LOAD    X11,X5 .          GET ADDR OF ONUNIT CALL  @C@@@9         LOAIV
)@@G@@D    R1,SVRTRN .       RESTORE REGS @ @@@9         LOADD   A2,SVCDA3 .  IW
)@@G@@@ @@@9         LOAD    X5,SVCDX5 .  @D@@@9         LJMP .  CALL ONMNGR AIX
)@@G@@ND RETURN THRU ONUNIT   @F@@@9EXONR4   LABEL .                   RETURN IY
)@@G@@HERE FROM ONUNIT CALL   @ @@@9         LOAD    X11,AREPTR . @E@@@9      IZ
)@@G@@   SUB     X11,7,I .         POP OFF ONUNIT MACRO CALL@D@@@9         STOJA
)@@G@@RE   X11,AREPTR .      RESET STACK PTR    @E@@@9         JMP .          JB
)@@G@@           RETURN TO ONER CALLER    @G@@@9/.       ROUTINE TO FILL IN D.JC
)@@G@@V.'S FOR ON UNIT BIFS AND THEIR STRINGS   @#@@@9FILDVS   LOCAL .  @ @@@9JD
)@@G@@         USING   AREC,X10 .   @ @@@9         USING   ARONUN,X7 .  @ @@@9JE
)@@G@@         USING   ARDVDT,X9 .  @E@@@9         LOAD    X9,A14 .          GJF
)@@G@@ET START OF D.V. AREA   @I@@@9         MOVE    ARDVOR,ZERO,10 .   CLEAR JG
)@@G@@D.V.S - WILL='' IF NOT FILLED IN LATER    @F@@@9.        FILL IN D.V. FOJH
)@@G@@R ONLOC WHICH IS VALID IN ANY ON UNIT     @ @@@9         USING   SDSECT,JI
)@@G@@A3 .  @C@@@9         LOAD    A3,ARESDP .       ENTRY SD     @D@@@9      JJ
)@@G@@   LOAD    X10,X3 .          X10 NOW->AUX BLOCK @C@@@9         LOAD    AJK
)@@G@@3,SDBCHI .       BCD POINTER  @ @@@9         USING   SDBCD,A3 .   @D@@@9JL
)@@G@@         LOAD    A4,SDBCNT .       GET LENGTH OF NAME @D@@@9         STOJM
)@@G@@RE   A4,ARDVCL .       SET LENGTHS IN D.V.@E@@@9         STORE   A4,ARDVJN
)@@G@@ML .       MAX LENGTH=CURRENT LENGTH@E@@@9         LOADA   A4,SDBBCD .  JO
)@@G@@     GET POINTER TO STRING    @E@@@9         STORE   A4,ARDVPT .       PJP
)@@G@@OINT D.V. TO STRING     @H@@@9.        NOW SEE IF WE SHOULD SET D.V.'S FJQ
)@@G@@OR ONFILE,ONFIELD,ONSOURCE OR ONCHAR@D@@@9         ADD     X9,2,I .     JR
)@@G@@     POINT TO NEXT D.V. @D@@@9.        A7 SHOULD STILL HAVE THE CONDITIOJS
)@@G@@N NUMBER    @D@@@/         IF      04,ON,ARRFG1  THEN,FILDV4 .  SIGNAL  JT
)@@G@@@F@@@9         IF      A7,LT,016,I  THEN,FILDV1 . NOT A FILE CONDITION  JU
)@@G@@@D@@@9         IF      A7,EQ,025,I  THEN,FILDV4 . CHECK?    @ @@@9.     JV
)@@G@@   SET D.V. FOR FILENAME@F@@@9         LOAD    X8,ONIOSV+6 .     GET IOCJW
)@@G@@B PTR FROM SAVE AREA    @D@@@9         LOADA   A4,IOCBFL,X8 .    GET PTRJX
)@@G@@ TO FILENAME@D@@@9         STORE   A4,ARDVPT .       SET PTR TO STRING  JY
)@@G@@@E@@@9         LOAD    A4,12,I .         FILENAME HAS LENGTH OF 12@ @@@9JZ
)@@G@@         STORE   A4,ARDVCL .  @ @@@9         STORE   A4,ARDVML .  @#@@@9KA
)@@G@@FILDV1   LABEL .  @D@@@9         ADD     X9,2,I .          GET THIRD D.VKB
)@@G@@.     @H@/@'         IF      04,ON,ARRFG1  THEN,FILDV2 . SIGNAL=>ONCHAR,KC
)@@G@@ONSOURCE=DEFAULT  @F@@@9         IF      A7,NE,4,I  THEN,FILDV2 . NOT COKD
)@@G@@NVERSION ERROR    @A@@@9.        SET UP ONCHAR'S D.V. HERE  @C@@@9      KE
)@@G@@   LOAD    A1,ONIOSV .       GET GETC REGS@ @@@9         LOAD    X1,ONIOKF
)@@G@@SV+1 .@E@@@9         LINK    LXRERD .          BACKUP GETC ONE CHAR     KG
)@@G@@@ @@@9         LOAD    A9,1,I .     @D@@@9         LINK    PUTSTR .     KH
)@@G@@     PUT STRING ON STACK@A@@@9.        SET UP D.V. FOR ONSOURCE   @D@@@9KI
)@@G@@         ADD     X9,2,I .          GET FOURTH D.V.    @#@@@9FILDV3   LABKJ
)@@G@@EL .  @C@@@9         LOAD    A1,ONIOSV+4 .     SET GETC REGS@ @@@9      KK
)@@G@@   LOAD    X1,ONIOSV+5 .@F@@@9         LOADD   A8,ONIOSV+2 .     GET BEGKL
)@@G@@INNING+END COUNTS OF A7 @E@@@9         SUB     A9,A8 .           GET LENKM
)@@G@@GTH OF STRING     @D@@@9         LINK    PUTSTR .          PUT STRING ONKN
)@@G@@ STACK@B@@@9         JMP .                     DONE   @E@@@9FILDV4   LABKO
)@@G@@EL .                   HERE IF CHECK CONDITION  @D@@@9         ADD     XKP
)@@G@@9,2,I .          GET ONCHAR'S D.V.  @F@@@9FILDV2   LABEL .              KQ
)@@G@@     HERE TO RETURN ' ' FOR ONCHAR  @E@@@9         MOVE    ARDVOR,BFINITKR
)@@G@@,2 . SET FLAGS AND LENGTHS    @F@@@9         STKCHK  1,I .             GKS
)@@G@@ET ROOM FOR ONE WORD ON STACK @G@@@9         STORE   X4,ARDVPT .       SKT
)@@G@@ET POINTER TO WHERE STRING GOES     @ @@@9         USING   WORD,X4 .    KU
)@@G@@@ @@@9         MOVE    W1,KBLANK .  @D@@@'         IF      04,ON,ARRFG1 KV
)@@G@@ THEN,JMP . SIGNAL=>DONE@D@@@9         IF      A7,NE,021,I  THEN,JMP . NKW
)@@G@@OT NAME COND@C@@@9         ADD     X9,4,I .          GET LAST D.V.@G@@@9KX
)@@G@@         GOTO    FILDV3 .          GO DO ONFIELD - SAME AS ONSOURCE     KY
)@@G@@@[@@@9.     @[@@@9.     @[@@@9.     @C@@@9PUTSTR   LOCAL .  ROUTINE TO PKZ
)@@G@@UT STRING ON STACK@E@@@9         LOAD    A4,A9 .           GET LENGTH OFLA
)@@G@@ STRING     @ @@@9         ADD     A4,3,I .     @F@@@9         SRB     ALB
)@@G@@4,2 .            GET NUMBER OF WORDS FOR STRING @F@@@9         STKCHK  ALC
)@@G@@4,R .            SEE IF ENOUGH ROOM ON STACK    @F@@@9         SETPC   4LD
)@@G@@,0,X4 .          SET TO PUT STRING ON STACK     @D@@@9         STORE   XLE
)@@G@@4,ARDVPT .       PTR TO STRING->D.V.@E@@@9         ADD     X4,A4 .      LF
)@@G@@     INC END OF BLOCK PTR     @C@@@9         STORE   A9,ARDVCL .       SLG
)@@G@@ET LENGTHS  @ @@@9         STORE   A9,ARDVML .  @D@@@9         SUB     ALH
)@@G@@9,1,I .          SET LOOP COUNTER   @#@@@9PUTLP    LABEL .  @#@@@9      LI
)@@G@@   GETC .   @#@@@9         PUTC .   @ @@@9         LOOP    A9,PUTLP .   LJ
)@@G@@@#@@@9         JMP .    @#@@@9/.       DATA AREA@^@@@9XXXX     CSECT   3LK
)@@G@@ .    @^@@@9SNPHDG   SFW     0 .    @ @@@9         'ON UNIT SNAP' .     LL
)@@G@@@^@@@9EXONJP   SFW     0 .    @ @@@9         LMJ     X11,ONNTRY . @#@@@9LM
)@@G@@         +0 .     @ @@@9         GOTO    ONMRTN .     @^@@@9EXONCL   SFWLN
)@@G@@     0 .    @D@@@9         ONUNIT  0,ACCDER,0  R,I,R  DEXWK1,8  DEXMAX,1LO
)@@G@@@#@@@9         CEND .   @#@@@9         END .    ___1H2+4,X5 .   SET RETULP
)@@G@@*[S@@@*SDFF*@C@@@@.   COPYRIGHT 1976 BY THE UNIVERSITY OF MARYLAND@[@@@@LQ
)@@G@@.     @D@@@@.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@@LR
)@@G@@.     @ @@@@.        MARVIN V. ZELKOWITZ  @B@@@@.        DEPARTMENT OF CLS
)@@G@@OMPUTER SCIENCE   @A@@@@.        UNIVERSITY OF MARYLAND     @B@@@@.     LT
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@@.     @G@@@@.        PERMISSIOLU
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@@.   REPRESENLV
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@@.     @G@@@@.     LW
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@@LX
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDLY
)@@G@@@E@@@@.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@@LZ
)@@G@@.     @F@@@@.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDMA
)@@G@@ED:   @[@@@@.     @G@@@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PMB
)@@G@@APER OR DOCUMENTATION   @G@@@@.        DESCRIBING SUCH PROGRAM WILL CLEAMC
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@@.        IS A DIALECT OF PLUM OR IS MD
)@@G@@DERIVED FROM PLUM, AND  @[@@@@.     @G@@@@.        (B) ALL SUCH MODIFICAME
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@@.        OF ERRORS IN THMF
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@@.        A BRIEF DESCRIPMG
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@@.        TO THE UNMH
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@@.     @F@@@@.        (C) NO PROGRAMSMI
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@@.        WITHOUT WRITTENMJ
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@@.     @F@@@@.     MK
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@@.     ML
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@@MM
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     MN
)@@G@@@E@@@@.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@@MO
)@@G@@.     @G@@@@.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERMP
)@@G@@ ITSELF,    @F@@@@.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN MQ
)@@G@@USING PLUM. @E@@@@.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USMR
)@@G@@ER TO @F@@@@.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRMS
)@@G@@ODUCT @G@@@@.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT MT
)@@G@@DEVELOPED   @#@@@@.   FROM PLUM.    @[@@@@.     @[@@@@.     @[@@@@.     MU
)@@G@@@[@@@@.     @[@@@@.     @[@@@@/.    @C@@@@         AXR$  .             DMV
)@@G@@EFINE 1108 EQU'S  @F@@@@EXDTOV   EQU     49 .              OUT OF STACK MW
)@@G@@SPACE MESSAGE     @C@@@@         DCLRG .             DEFINE  PIT EQU'S  MX
)@@G@@@#@@@@         UNLIST . @F@@@@@ADD,P   PLTVDS .            ADD COMMON STMY
)@@G@@ORAGE (PLUM COMMON)     @E@@@@@ADD,P   EXCDS .             EXECUTION CONMZ
)@@G@@TROL WORKSPACE    @D@@@@         LIST .              BEGIN PROGRAM LISTINA
)@@G@@NG    @B@@@@         PLWORD .            WORD DSECTS  @D@@@@         PLANB
)@@G@@R .              ACTIVATION RECORD DSECTS @#@@@@         PLBASE . @B@@@@NC
)@@G@@         PLAC .              ALPHA CODES  @A@@@@         PLSD .         ND
)@@G@@     SD'S   @#@@@@         CEND .   @E@@@@EXCLLR   DSECT 31 . PROCEDURE NE
)@@G@@AND BLOCK CALLING INFORMATION @#@@@@FILL(1)  SQ .     @#@@@@EXCTYP   SQ NF
)@@G@@.     @#@@@@EXSDPT   SH .     @A@@@@EXPTPT   EQUF  1 . RETURN POINT     NG
)@@G@@@#@@@@         DEND .   @E@@@@EXULUB   EQU     101 .             ATTEMPTNH
)@@G@@ TO GOTO $$LABEL  @G@@@@EXUNEN   EQU     102 .            ATTEMPT TO CALNI
)@@G@@L $$ENTRY$$ (0 RETURNED)@D@@@@EREXCLMB EQU   55 .           SUBROUTINE INJ
)@@G@@S MATH BIF  @E@@@@EREXSB   EQU   76 .           SUBSCRIPT IS OUT OF BOUNNK
)@@G@@DS    @C@@@@EREXUDEN EQU   56 .           UNDEFINED ENTRY   @E@@@@EREXRENL
)@@G@@CN EQU   57 .           APPLY RECURSIVE ATTRIBUTE     @D@@@@EREXFNCK EQUNM
)@@G@@   58 .           FUNCTION CHECKED MESSAGE@D@@@@EREXLN01 EQU   59 .     NN
)@@G@@      IMPROPER STRING LENGTH  @D@@@@MXSTLN   EQU   32767 .       MAXIMUMNO
)@@G@@ STRING LENGTH    @D@@@@EREXBD03 EQU   60 .           EXTENT - 1 IS NEGANP
)@@G@@TIVE  @E@@@@EREXNVAL EQU   62 .          FUNCTION DOES NOT RETURN VALUE NQ
)@@G@@@C@@@@EREXNOCV EQU   61 .          ILLEGAL CONVERSION @D@@@@EREXUXVL EQUNR
)@@G@@   63 .          VALUE RETURNED TO CALL   @D@@@@EREXULAB EQU   64 .     NS
)@@G@@     UNDEFINED LABEL IN GOTO  @D@@@@EREXFLAB EQU   65 .          FORMAT NT
)@@G@@LABEL IN GOTO     @D@@@@EREXGOBK EQU   66 .          LABEL BLOCK NOT ACTNU
)@@G@@IVE   @F@@@@EREXGOIN EQU   67 .          INITIALIZATION TERMINATES BY GONV
)@@G@@TO    @E@@@@EREXGODO EQU   68 .          JUMP INTO INACTIVE DO GROUP    NW
)@@G@@@C@@@@EREXMP   EQU   69 .          MULTIPLIER OVERFLOW@C@@@@EREXTLY1 EQUNX
)@@G@@   70 .          EXTENT MISMATCH    @C@@@@EREXTLY2 EQU   71 .          BNY
)@@G@@OUNDS MISMATCH    @D@@@@EREXSUB1 EQU   77 .          SUBSCRIPT OUT OF BONZ
)@@G@@UNDS  @C@@@@EREXUD02 EQU   72 .          UNALLOCATED ARRAY  @D@@@@EREXENOA
)@@G@@D  EQU   23 .          MAIN PROCEDURE RETURN    @C@@@@EREXSTOP EQU   24 OB
)@@G@@.          PROGRAM STOPPED    @D@@@@EREXTMSL EQU   73 .          IMPROPEOC
)@@G@@R STRING LENGTH   @E@@@@KEXTNT   EQU   0177777 .     GREATEST POSSIBLE MOD
)@@G@@ULTIPLIER   @E@@@@EREXHWOV EQU   75 .          BINARY FIXED HALFWORD OVEOE
)@@G@@RFLOW @F@@@@EREXJGDE EQU   74 .          EXTENT WAS NEGATIVE COMPUTED BYOF
)@@G@@ JGD  @G@@@@/EXEC    CSECT 3 .           USE LOCATION COUNTER 3 FOR INSTOG
)@@G@@RUCTION CODE@E@@@@KK2H91   SAC   9,1 .         DEFAULT EXTENT - 1,LOWER OH
)@@G@@BOUND @G@@@@KK2H1M   SAC   1,-1 .        ADD TO SET LOOP INCREMENTOR FOROI
)@@G@@ ZEROING    @I@@@@KK0B     SAC   ARCHBT*0100,KFZERO-(IN 63,0,1,0) .   DOOJ
)@@G@@PE VECTOR FOR STRING '0'B     @F@@@@KK2H11   SAC   1,1 .         CONSTANOK
)@@G@@T TO INITALIZE FOR DV MOVING  @F@@@@NOVALE   INSERT  1,'   ' .         AOL
)@@G@@TTEMPT TO CALL $$ENTRY$$.     @H@@@@ZERVAL   INSERT  10,'0 R','ETUR','NEOM
)@@G@@D ' . ATTEMPT TO CALL $$ENTRY$$ 0 RETURNED@I@@@@/ . --------------------ON
)@@G@@--------------------------------------------------------    @D@@@@ . ***OO
)@@G@@ EXECUTION CONTROL:  RUN-TIME INITIALIZATION ***@I@@@@ . ---------------OP
)@@G@@--------------------------------------------------------------    @ @@@@OQ
)@@G@@ . ENTRY FROM THE ROOT SEGMENT@D@@@@PLEXGO*  LABEL .             INITIALOR
)@@G@@IZE CONSTANTS     @E@@@@         LINK    IOINIT .          INITALIZE I/OOS
)@@G@@ PACKAGES   @^@@@@         LOADXI X7,1,I .@^@@@@         LOADXI X9,1,I .OT
)@@G@@@E@@@@         MOVE  DEXINT,EXINCN .  INITIALIZATION CONSTANT     @B@@@@OU
)@@G@@         MOVE  DEXCLK,0,I .  SET CLOCK=0  @G@@@@         MOVE    FREVAR,OV
)@@G@@0,I .      INITIALIZE FREEING BASED INDICATOR   @D@@@@         MOVE  DEXOW
)@@G@@INV,0,I .  GLOBAL INVOCATION COUNTER@F@@@@         MOVE  DEXMAX,0,I .  MOX
)@@G@@AXIMUM EXTENT OF RUN-TIME STACK     @D@@@@         MOVE  DEXGOS,ZERO,LDXOY
)@@G@@GOS . ZERO GOTO RECORD  @F@@@@         LOADA   A3,DEXGOS .       POINT TOZ
)@@G@@O THE TOP OF GOTO RECORD@D@@@@         STORE   A3,DEXGOF .       SAVE THPA
)@@G@@E POINTER   @G@@@@         LOADXM  X7,DHSTRT,I .     POINT TO THE TOP OFPB
)@@G@@ HISTOGRAM RECORD @D@@@@         LOADA    X8,KKD0 .       POINT TO ZEROSPC
)@@G@@ .    @F@@@@         LOAD    A2,DHSTMT .       GET THE # OF STMTS IN PGRPD
)@@G@@M     @E@@@@         IF  A2,LT,DHNUM,I THEN,EXGOX . HOW LONG IS RECORD? PE
)@@G@@@E@@@@         LOAD    A2,DHNUM,I .      NOT LONG ENOUGH  HERE    @ @@@@PF
)@@G@@EXGOX    LABEL . -> MERGE HERE@E@@@@         LOAD    R1,A2 .           GPG
)@@G@@ET THE PROPER COUNT     @F@@@@         BT,H2   X7,0,*X8 .        ZERO OUPH
)@@G@@T THE EXHIST RECORD     @F@@@@         LOADXI  X8,1,I .          SET THEPI
)@@G@@ EXPECTED INCREMENT     @E@@@@         MOVE  DEXCAR,0,I .  INDICATE STACPJ
)@@G@@K NOT READY YET   @A@@@@ . ** ALLOCATE STATIC VARIABLES     @D@@@@      PK
)@@G@@   LOADXM X7,ADBK0S .  ADDRESS BLOCK ZERO SD    @F@@@@         LOADA X6,PL
)@@G@@EXGOMN .   POINT TO FAKE BODY FOR BLOCK ZERO    @E@@@@         STORE X6,PM
)@@G@@SDADD,X7 . PUT IT HERE SO EXNTRY FINDS IT @G@@@@         LOAD  X6,SDSCINPN
)@@G@@,X7 .          SCALER INITIALIZATION ADDRESS    @E@@@@         STORE X6,PO
)@@G@@DEXSVE .   SAVE INITIALIZATION ADDRESS    @F@@@@         LOADA X6,EXINB0PP
)@@G@@ .   ADDRESS FOR BLOCK ZERO INITIALIZATION@E@@@@         STORE X6,SDSCINPQ
)@@G@@,X7 . TELL STACK MANAGER WHERE TO GO@D@@@@         LOAD  A2,SDBDLK,X7 . PR
)@@G@@         START OF STACK @D@@@@         STORE A2,DEXCAR .   ADDRESS OF CUPS
)@@G@@RRENT AR    @E@@@@         LOADA X10,DEXCAR-(AREPTR-ARINCT-FH2) . FAKE APT
)@@G@@N AR  @B@@@@         LOADA X6,SDPLB0 .    NAME OF PLUM@G@@@@         LOAPU
)@@G@@D  F,EXB0IF+FH1 .          SET CALLING CLASS IN F-REGISTER  @E@@@@      PV
)@@G@@   LINK  EXBK0I .      ->FAKE ENTRY TO BLOCK ZERO     @B@@@@EXB0IF   SACPW
)@@G@@   0,0 .    INDICATE BLOCK AR @#@@@@         CEND .   @E@@@@ . ** EXNTRYPX
)@@G@@ RETURNS HERE TO INITIALIZE BLOCK ZERO SCALERS  @D@@@@EXINB0   LABEL .  PY
)@@G@@           INITIALIZE VARIABLES     @B@@@@ . $$    SET UP ON-CONTROLLER PZ
)@@G@@VARIABLES **@H@@@@         LOAD  X11,DEXSVE .  X11  = ADDRESS OF STATIC QA
)@@G@@INITIALIZATION CODE     @E@@@@         LOADXM X5,ADBK0S .        POINT TQB
)@@G@@O BLOCK ZERO SD   @G@@@@         STORE   X11,SDSCIN,X5 .   SAVE SCALAR IQC
)@@G@@NIT FOR ''RESTART''     @E@@@@         MOVE  ARSTMT,0,I .        CLEAR IQD
)@@G@@NITIAL STMT NUMBER@ @@@@         MOVE    ARCOND,0,I . @E@@@@         GOTQE
)@@G@@O  0,X11 .       -> CONTINUE INITIALIZATION     @I@@@@ . ---------------QF
)@@G@@--------------------------------------------------------------    @E@@@@QG
)@@G@@ . *** EXNTRY RETURN HERE WHEN BLOCK ZERO VARIABLES HAVE    @B@@@@ .    QH
)@@G@@ BEEN ALLOCATED AND INITIALIZED.    @D@@@@ .     ENTRY TO MAIN PROCEDUREQI
)@@G@@ IS MADE FROM HERE ***  @I@@@@ . ---------------------------------------QJ
)@@G@@--------------------------------------    @D@@@@EXGOMN   LABEL .        QK
)@@G@@     ENTER MAIN PROCEDURE     @E@@@@         LOAD  X6,ADMNSD .   BLOCK SQL
)@@G@@D OF MAIN PROCEDURE     @F@@@@         LOAD  X5,X10 .      X5  = ENVIORNQM
)@@G@@MENT OF MAIN PROC CALL  @D@@@@         LINK  EXGDVA .      SET UP VARIABQN
)@@G@@LE DATA AREA@F@@@@         LOAD  A1,AREPTR,X10 .         ADDRESS OF ARGUQO
)@@G@@MENT LIST   @E@@@@         LOAD  X2,A1 .       BASE OF AREA TO BE CLEAREQP
)@@G@@D     @H@@@@         LOAD  A2,SDNARG,X6 .          NUMBER OF MAIN PROCEDQQ
)@@G@@URE ARGUMENTS     @E@@@@         ADD   A2,1,I .      INCLUDE SLOT FOR REQR
)@@G@@TURN VALUE  @E@@@@         STORE A2,R1 .       NUMBER OF WORDS TO INITIAQS
)@@G@@LIZE  @D@@@@         ADD   A2,W1XU,A1 .  TOP OF AREA TO BE CLEARED@D@@@@QT
)@@G@@         LOADA A3,KK2H1M .   SET TRAP FOR ILLEGAL USE @D@@@@         LINQU
)@@G@@K  EXCLR1 .      PUT TRAP IN ARGUMENT LIST@E@@@@         LOADA X11,EXMNRQV
)@@G@@T-1 .          SET RETURN ADDRESS   @C@@@@         STORE X11,ARSV11,X10 QW
)@@G@@.        INTO AR  @F@@@@         LOAD  F,EXGMNF+FQ2 .    MAIN CALLING PRQX
)@@G@@OCEDURE FLAGS     @F@@@@         LINK    EXFRECOR .        FREE OFF THE QY
)@@G@@UNNEEDED CORE     @D@@@@         LINK  EXMETY .      -> ENTER MAIN PROCEQZ
)@@G@@DURE  @D@@@@EXGMNF   SAC   ARPRBG+ARMNPR,0 .    CALLER'S FLAGS    @#@@@@RA
)@@G@@EXINCN*  SFW  0 . @^@@@@        +0377777777777 .@#@@@@         CEND .   RB
)@@G@@@I@@@@/ . --------------------------------------------------------------RC
)@@G@@--------------    @E@@@@ . ** CONTROL WILL RETURN HERE IF PROGRAM RUNS ORD
)@@G@@FF END OF   @F@@@@ .    MAIN PROCEDURE OR RETURNS FROM MAIN PROCEDURE   RE
)@@G@@    ***     @I@@@@ . ---------------------------------------------------RF
)@@G@@--------------------------    @#@@@@EXMNRT   LABEL .  @E@@@@         LOARG
)@@G@@D  X10,DEXWK1 .  RESTORE AR OF RETURN STATEMENT @C@@@@         STORE X10RH
)@@G@@,DEXCAR .  SET FOR POST MORTUM@D@@@@         LOAD    R11,ARSTMT .      RRI
)@@G@@ESTORE STMT NUMBER@^@@@@ . $$    SIGNAL STOP    @B@@@@ . 'PROGRAM RETURNRJ
)@@G@@S FROM MAIN PROCEDURE.' @H@@@@  ONUNIT  EREXEND,ACCDFN,0  PLEXND,PLEXND,RK
)@@G@@PLEXND  DEXWK1,0  DEXMAX,0 'NONUM'  @I@@@@/ . --------------------------RL
)@@G@@--------------------------------------------------    @E@@@@ . CODE TO MRM
)@@G@@AKE THE END OF CORE FLOAT IF NO BASED STORAGE   @I@@@@  . --------------RN
)@@G@@--------------------------------------------------------------    @H@@@@RO
)@@G@@EXFRECOR* LLOC .                   COME HERE BETWEEN PROC CALLS TO FREE RP
)@@G@@EXTRA @H@@@@         IF DSYALC,NZERO THEN,LJMP . DON'T FREE EXTRA IF BASRQ
)@@G@@ED STORAGE USED   @F@@@@         LOAD    A7,AREPTR .       SET TO FREE CRR
)@@G@@LOSE TO AREPTR    @F@@@@         ADD     A7,511+512,I .    FREE ALL BUT RS
)@@G@@ONE EXTRA BLOCK   @E@@@@         AND,U   A7,0777000 .      HIGHEST ADDRERT
)@@G@@SS WANTED   @G@@@@         SUB     A8,1,I .          JUST GET TO THE ENDRU
)@@G@@ OF THE BLOCK     @E@@@@         LOAD    A7,ADPCND .       SEE CURRENT ERV
)@@G@@ND OF CORE  @E@@@@         SUB     A7,A8 .           SEE HOW MUCH LEFT TRW
)@@G@@O FREE@G@@@@         IF A7,LT,3*512,I THEN,LJMP . DON'T FREE LESS THAN 3RX
)@@G@@ CORE BLOCKS@#@@@@         LOCAL .  @D@@@@         LINK    ZLCORE .     RY
)@@G@@     FREE OFF EXTRA CORE@B@@@@         JMP .                     RETURN RZ
)@@G@@@F@@@@WROVFL*  LOCAL .                   HERE IF OUT OF STACK SPACE     SA
)@@G@@@I@@@@         IF DSYALC,NZERO THEN,WROVF1 . NO STORAGE TO GET IF BASED SB
)@@G@@STORAGE PRESEN    @D@@@@         STORED  A7,EXECA7 .       SAVE REGISTERSC
)@@G@@S USED@E@@@@         LOAD    A8,ADPEND .       GET LOGICAL END OF CORE  SD
)@@G@@@E@@@@         SUB     A8,ADPCND .       SUB CURRENT END OF CORE  @E@@@@SE
)@@G@@         IF A8,GE,1,I THEN,WROVF2 . STILL SOME ROOM LEFT    @E@@@@WROVF1SF
)@@G@@   LABEL .                   ALL OUT OF ROOM HERE     @E@@@@         ONESG
)@@G@@R    EXDTOV,4 .        OUT OF STACK SPACE, QUIT @F@@@@WROVF2   LABEL .  SH
)@@G@@                 HERE IF STILL SPACE TO GET     @G@@@@         IF      ASI
)@@G@@8,LT,2*512,I THEN,WROVF3 . GET AT MOST TWO BLOCKS     @D@@@@         LOASJ
)@@G@@D    A8,2*512,I .      GET TWO CORE BLOCKS@E@@@@WROVF3   LABEL .        SK
)@@G@@           HERE A8=# OF WRDS TO GET @C@@@@         LOAD    A7,0,I .     SL
)@@G@@     SET AS NEEDED@D@@@@         LINK    ZMCORE .          GO GET MORE CSM
)@@G@@ORE   @D@@@@         LOADD   A7,EXECA7 .       RECLAIM REGS USED  @F@@@@SN
)@@G@@         JMP .                     RETURN WITH ADDITIONAL SPACE   @[@@@@SO
)@@G@@.     @F@@@@.        ROUTINE CALLED BY PROC STKCHK TO GET CORE ON END OFSP
)@@G@@ STACK@[@@@@.     @#@@@@EXSTCH*  LOCAL .  @B@@@@         STORE   A7,EXECSQ
)@@G@@S7 .       SAVE A7@E@@@@         LOAD    A7,AREPTR .       GET END OF STSR
)@@G@@ACK PTR     @E@@@@         ADD     A7,R10 .          ADD IN STORAGE REQUSS
)@@G@@ESTED @E@@@@EXSTC1   LABEL .                   LOOP TO GET ENOUGH CORE  ST
)@@G@@@F@@@@         IF      A7,LT,ADPCND  THEN,EXSTC2 . THERE'S ENOUGH SPACE SU
)@@G@@@D@@@@         LINK    WROVFL .         TRY TO GET MORE     @C@@@@      SV
)@@G@@   GOTO    EXSTC1 .          TRY AGAIN    @#@@@@EXSTC2   LABEL .  @D@@@@SW
)@@G@@         STORE   A7,AREPTR .       UP END OF STACK PTR@C@@@@         LOASX
)@@G@@D    A7,EXECS7 .       RESTORE A7   @#@@@@         JMP .    @I@@@@/ . --SY
)@@G@@------------------------------------------------------------------------SZ
)@@G@@--    @B@@@@ . ** CLEAR STORAGE TO INITIAL VALUE **   @F@@@@ .       A2 TA
)@@G@@             = FIRST WORD BEYOND AREA TO BE CLEARED   @D@@@@ .       X2 TB
)@@G@@             = BASE OF AREA TO BE CLEARED @C@@@@ .       R1  = LENGTH OFTC
)@@G@@ AREA TO BE CLEARED     @B@@@@ .       A3    = ADDRESS OF INITIAL VALUE TD
)@@G@@@F@@@@ . ACTION:     SETS AREA INDICATED TO CONSTANT AT ADDRESS IN A3   TE
)@@G@@@^@@@@ . OUTPUT:     NONE     @A@@@@ . DESTROYS:   X2,A2,A3, AND R1     TF
)@@G@@@I@@@@ . ---------------------------------------------------------------TG
)@@G@@--------------    @E@@@@         USING AREC,X10 .    SET ACTIVATION RECOTH
)@@G@@RD DSECTS   @H@@@@EXCLR    LLOC .              ENTRY IF DEXINT CONTAINS TI
)@@G@@INITIALIZATION VALUE    @ @@@@         LOADA A3,DEXINT .    @H@@@@EXCLR1TJ
)@@G@@   LABEL .             ENTRY WHEN A3 HAS ADDRESS OF INITIALIZATION WORD TK
)@@G@@@G@@@@         IF    A2,LT,ADPCND THEN,EXCLR2 . -> STORAGE CAPACITY EXCETL
)@@G@@EDED? @C@@@@         LOCAL .                   SAVE X11     @D@@@@      TM
)@@G@@   LINK    WROVFL .          GET MORE STORAGE   @C@@@@         UNSTK   XTN
)@@G@@11 .             RECLAIM X11  @D@@@@         GOTO    EXCLR1 .          TTO
)@@G@@RY TO FIT AGAIN   @G@@@@EXCLR2   LABEL .                   HERE WHEN ENOTP
)@@G@@UGH STORAGE AVAILABLE   @I@@@@         TG,XH2 A2,DEXMAX-(IN 63,H2,1,0) .TQ
)@@G@@                                     M    @C@@@@         STORE A2,DEXMAXTR
)@@G@@ .   SET NEW MAXIMUM    @C@@@@         STORE A2,AREPTR .   UPDATE END POTS
)@@G@@INTER @E@@@@         LOADXI X2,1,I .     SET INCREMENT AREA POINTER     TT
)@@G@@@C@@@@         BT    X2,0,*A3 .    INITIALIZE AREA    @F@@@@         MOVTU
)@@G@@E    AREXFT,0,I .      SET FORMAT JUMP WORD TO ZERO   @C@@@@         MOVTV
)@@G@@E ARDED,0,I .          SET TO ZERO  @C@@@@         LJMP  .             -TW
)@@G@@> RETURN TO CALLER@I@@@@ . ---------------------------------------------TX
)@@G@@--------------------------------    @A@@@@ . *** BLOCK AND PRECEDURE ENTTY
)@@G@@RY ** @I@@@@ . ---------------------------------------------------------TZ
)@@G@@--------------------    @ @@@@         USING EXCLLR,X11 .   @E@@@@EXNTRYUA
)@@G@@*  LLOC .              RETURN ADDRESS SAVED IN AR     @F@@@@         LMJUB
)@@G@@   X5,EXMST .    SAVE CALLER'S REGISTERS IN HIS AR    @ @@@@         GOTUC
)@@G@@O    EXNTR1 .     @#@@@@ONNTRY*  LLOC .   @E@@@@         LOAD    A3,ARREUD
)@@G@@GS .       GET PTR TO REG SAVE AREA @G@@@@         STORE   X11,ARCDAS,A3UE
)@@G@@ .   SAVE RETURN ADDR TO ON BLOCK CALL    @#@@@@EXNTR1   LABEL .  @E@@@@UF
)@@G@@         LOAD  F,EXCTYP,X11 .          CALLER'S TYPE FLAGS  @C@@@@      UG
)@@G@@   LOADXM X7,EXSDPT,X11 .    BLOCK SD     @F@@@@         LINK  TVEXST-(IUH
)@@G@@N 63,0,1,0) .      -> TEST FOR TIME OUT   @G@@@@         IF    ARPRBG++AUI
)@@G@@RPRNM,OFF THEN,EXBLCK . -> BEGIN BLOCK ENTRY    @I@@@@         IF    A6,UJ
)@@G@@EQ,ARPRBG++ARPRNM,I THEN,EXNAME . -> ENTRY THROUGH ENTRY NAME     @I@@@@UK
)@@G@@ . ---------------------------------------------------------------------UL
)@@G@@--------    @B@@@@ . PROCEDURE CALL THROUGH ENTRY PARAMETER @^@@@@ . ENTUM
)@@G@@RY TO ON-UNIT     @I@@@@ . ---------------------------------------------UN
)@@G@@--------------------------------    @C@@@@         LOAD  X6,W1H1,A2 .  XUO
)@@G@@6  = A(ENTRY'S SD)@E@@@@         LOAD  X5,W1XH2,A2 . X5  = ENVIORNMENT =UP
)@@G@@ A(AR BASE) @^@@@@         USING SDSECT,X5@F@@@@         TN    X5 .     UQ
)@@G@@     IS PROCEDURE A MATH BUILT-IN FUNCTION@D@@@@         GOTO  EXGTBK . UR
)@@G@@     -> USER DEFINED FUNCTION @G@@@@         IF    ARFNRN,ON THEN,EXOKCLUS
)@@G@@ . -> FUNCTION REFERENCE, LEGAL USAG@ @@@@         ONER EREXCLMB,1 .    UT
)@@G@@@G@@@@ . 'SUBROUTINE REFERENCED IS MATH BUILT-IN FUNCTION.  STATEMENT IGUU
)@@G@@NORED'@F@@@@         GOTO  EXEXRT .       -> RESTORE AND RETURN TO CALLEUV
)@@G@@R     @#@@@@EXOKCL   LABEL .  @E@@@@         LINK  0,X6 .        -> CALLUW
)@@G@@ MATH BUILT-IN FUNCTION @#@@@@EXEXRT   LABEL .  @F@@@@         STORE X10UX
)@@G@@,DEXCAR .  SAVE CURRENT ACTIVATION RECORD BASE  @G@@@@         LOAD  X2,UY
)@@G@@ARVDAP,X10 .         RELEASE STORAGE USED IN CALL     @G@@@@         STOUZ
)@@G@@RE X2,AREPTR,X10 .         BY RESETTING POINTER TO END OF AR@ @@@@      VA
)@@G@@   LOAD  R1,W1,X2 .     @ @@@@         STORE R1,ARVDAP,X10 .@F@@@@      VB
)@@G@@   USING   SDSECT,X9 .       X9 HAS BLOCK SD FROM BLOCK EXIT@G@@@@      VC
)@@G@@   IF      SD3OBK,OFF,SDCLS3  THEN,EXEXR1 . IT'S NOT AN ON BLOCK  @E@@@@VD
)@@G@@         LOAD    A3,ARREGS .       GET PTR TO REG SAVE AREA @F@@@@      VE
)@@G@@   LOAD    X11,ARCDAS,A3 .   GET RETURN ADDR TO ON BLOCK    @ @@@@      VF
)@@G@@   USING   SDSECT,X5 .  @D@@@@         LJMP    1 .               RETURN VG
)@@G@@TO ONMNGR   @#@@@@EXEXR1   LABEL .  @F@@@@         LMJ   X5,EXML .     RVH
)@@G@@ELOAD CALLER'S REGISTERS ******     @G@@@@         LJMP  1 .           -VI
)@@G@@> RETURN TO CALLER SKIPPING FLAG WORD     @I@@@@ . ---------------------VJ
)@@G@@--------------------------------------------------------    @C@@@@ . SIMVK
)@@G@@PLE BLOCK ENTRY (X7  = A(BLOCK'S SD) AND  @D@@@@ . USER DEFINED PROCEDURVL
)@@G@@E CALL THROUGH ENTRY NAME     @B@@@@EXBLCK   LABEL .             BLOCK EVM
)@@G@@NTRY  @G@@@@         LOAD  R1,AREPTR,X10 .         SO EXEXIT WILL HANDLEVN
)@@G@@ CHAIN OK   @H@@@@         STORE R1,ARVDAP,X10 .         RESET VARIABLE VO
)@@G@@DATA AREA START POINTER @D@@@@EXNAME   LABEL .             ENTRY TROUGH VP
)@@G@@ENTRY NAME  @G@@@@         LOAD  X5,X10 .      X5 = ENVIORNMENT = A(AR BVQ
)@@G@@ASE FOR CALLER)   @G@@@@         IF    ARPRBG++ARPRNM,OFF THEN,EXALST . VR
)@@G@@-> START ALLOCATION OF  @E@@@@ .       BEGIN BLOCK.  EXCTYP IS IN F-REGIVS
)@@G@@STER FROM ABOVE   @C@@@@         LOAD  X6,W1XU,X7 .  X6  = A(ENTRY'S SD)VT
)@@G@@@C@@@@ . ALL PROCEDURE CALLS (X6  = A (ENTRY'S SD) )  @E@@@@EXMETY   LABVU
)@@G@@EL .             MAIN PROCEDURE ENTERS HERE     @#@@@@EXGTBK   LABEL .  VV
)@@G@@@G@@@@         LOADXM X7,SDENBK,X6 .         X7 = A(ASSOCIATED BLOCK'S SVW
)@@G@@D)    @H@@@@         LOAD  A7,SDRCTS,X7 .          TEST FOR RECURSIVE USVX
)@@G@@E OF FUNCTION     @^@@@@         XOR,U A7,0777 .@ @@@@         STORE A8,VY
)@@G@@SDRCTS,X7 . @F@@@@         JNZ   A8,EXALST .   -> NOT RECURSIVE USE OR RVZ
)@@G@@ECURSION OK @I@@@@         IF    SD4UDF,OFF,SDCLS4 THEN,EXRECR . -> NOT WA
)@@G@@UNDEFINED, RECURSION ERROR    @ @@@@         ONER EREXUDEN,2 .    @^@@@@WB
)@@G@@ . 'UNDEFINED ENTRY'    @ @@@@         USING SDSECT,X7 .    @ @@@@      WC
)@@G@@   MOVE  SDRCTS,0777,I .@C@@@@         GOTO  EXEXRT .      -> RETURN TO WD
)@@G@@CALLER@F@@@@EXRECR   LABEL .             DEFINED ENTRY BUT RECURSION ERRWE
)@@G@@OR    @ @@@@         MOVE  SDRCTS,017,I . @ @@@@         ONER EREXRECN,1WF
)@@G@@ .    @H@@@@ . SDX6 'REFERENCED RECURSIVELY. "RECURSIVE" ATTRIBUTE HAS NWG
)@@G@@OW BEEN APPLIED.' @F@@@@ . ALL CALLS (X5=ENVIORNMENT, X6=A(ENTRY SD), X7WH
)@@G@@=A(BLOCK SD))     @D@@@@EXALST   LABEL .             START STORAGE ALLOCWI
)@@G@@ATION @I@@@@         IF    ARCHCK,OFF THEN,EXBK0I . -> FUNCTION NOT CHECWJ
)@@G@@KED,START ALLOCATION    @ @@@@ . $$ SIGNAL CHECKED FUNCTION @E@@@@      WK
)@@G@@   EXERR EREXFNCK,I LEVEL,1 'NONUM' . CHECK MESSAGE   @F@@@@EXBK0I   LABWL
)@@G@@EL .             ENTRY POINT TO SET UP BLOCK ZERO     @F@@@@         LOAWM
)@@G@@D  X2,AREPTR .   X2 = FIRST WORD AVAILABLE ON STACK   @F@@@@         LOAWN
)@@G@@D  X4,X10 .      SAVE OLD AR POINTER (DYNAMIC LINK)   @C@@@@         LOAWO
)@@G@@DXM X10,X2 . SET NEW AR BASE POINTER@G@@@@         LOAD  R1,SDFXLN,X7 . WP
)@@G@@         SIZE OF FIXED PORTION OF NEW AR  @C@@@@         LOAD  A2,W1XU,XWQ
)@@G@@2 .  GET BOTTOM OF AR   @C@@@@         ADD   A2,R1 .       A2 = TOP OF NWR
)@@G@@EW AR @B@@@@         LOADXM X9,A2 .      SAVE TOP     @E@@@@         LINWS
)@@G@@K  EXCLR .       -> INITIALIZE NEXT STORAGE AREA@C@@@@ . FILL IN FIXED PWT
)@@G@@ORTION OF ACTIVATION RECORD   @G@@@@         STORE X9,AREPTR,X10 .      WU
)@@G@@   END OF CURRENTLY ALLOCATED AREA  @ @@@@         STORE X9,ARPRES,X10 .WV
)@@G@@@F@@@@ . IF NO STRINGS OR ARRAYS ARE ALLOCATED ARPRES IS END OF AREA    WW
)@@G@@@B@@@@ . ALLOCATED TO NON-TEMPORARY VARIABLES   @E@@@@         LOAD  X3,WX
)@@G@@DEXINV .   UPDATE GLOBAL INVOCATION COUNT @^@@@@         ADD   X3,1,I . WY
)@@G@@@ @@@@         STORE X3,DEXINV .    @E@@@@         STORE X3,ARINCT,X10 .WZ
)@@G@@         SET INVOCATION COUNT @H@@@@         STORE X4,ARDYNM,X10 .      XA
)@@G@@   SET DYNAMIC LINK (CALLING AR BASE)     @E@@@@         MOVE    ARCDLT,XB
)@@G@@0,I .      CLEAR CONDITION LIST PTR @E@@@@         LOAD    A3,ARCOND,X4 XC
)@@G@@.    GET OLD CONDITION FLAGS  @G@@@@         STORE   A3,ARCOND,X10 .   SXD
)@@G@@ET CONDITION FLAGS FOR NEW BLOCK    @E@@@@         MOVE    ARDSEN,SDSTONXE
)@@G@@ .   SET BLOCK PREFIX FLAGS   @ @@@@         STORE X10,DEXCAR .   @E@@@@XF
)@@G@@         STORE X6,ARESDP,X10 .         SAVE ENTRY SD POINTER@E@@@@      XG
)@@G@@   STORE X7,ARBSDP,X10 .         SAVE BLOCK SD POINTER@E@@@@ . $$ SET DEXH
)@@G@@FAULT CONDITION FLAGS (MVC ARCONDSV,SECFLAGS)   @F@@@@         OR,U  F,AXI
)@@G@@RINTP .   SET INITIALIZATION IN PROGRESS FLAG   @E@@@@         STORE A6,XJ
)@@G@@ARTYPE,X10 .         SAVE CALL TYPE IN AR @I@@@@ . ---------------------XK
)@@G@@--------------------------------------------------------    @ @@@@ . ** XL
)@@G@@SET STATIC LINKS **     @E@@@@ . THE STATIC LINKS ARE ADDRESSES OF ACTIVXM
)@@G@@ATION RECORDS (AR)@B@@@@ . WHICH ARE KNOWN TO THE CURRENT BLOCK   @I@@@@XN
)@@G@@ . ---------------------------------------------------------------------XO
)@@G@@--------    @H@@@@         LOAD  R1,SDBKDP,X7 .          COMPUTE NUMBER XP
)@@G@@OF LINKS TO BE MOVED    @G@@@@         LOADXM X9,ARSTLK+FXU,X10 .    X9=XQ
)@@G@@A(START NEW STATIC LINK AREA) @G@@@@ . BY CONVENTION X7, X8, AND X9 ALL XR
)@@G@@KEEP A '+1' IN THEIR INCREMENTORS   @I@@@@         IF    R1,ZERO THEN,EXXS
)@@G@@BKSS . IF NO OTHER STATIC LINKS JUST STORE CURRENT    @G@@@@         LOAXT
)@@G@@DA A2,ARSTLK,X5 .          A2=A(CALLING STATIC LINK AREA)   @I@@@@      XU
)@@G@@   LOADXI A2,1,I .     SET INCREMENTOR FOR BLOCK TRANSFER OF STATIC LINKXV
)@@G@@S     @C@@@@         BT    X9,0,*A2 .    MOVE STATIC LINKS  @F@@@@EXBKSSXW
)@@G@@   LABEL .             MERGE TO STORE CURRENT AR STATIC LINK@E@@@@      XX
)@@G@@   STORE X10,W1XH2,X9 .          STORE A(CURRENT AR)  @D@@@@ . HIGHEST SXY
)@@G@@TATIC LINK ALWAYS POINTS TO CURRENT AR    @F@@@@         LOAD  R1,SDBKNOXZ
)@@G@@,X7 .          SEQUENTIAL BLOCK NUMBER    @F@@@@         STORE R1,W1Q1,XYA
)@@G@@9 .  STORE BLOCK NUMBER BESIDE STATIC LINK@ @@@@         USING AREC,X10 YB
)@@G@@.     @G@@@@         IF    ARPRBG,OFF THEN,EXINSC . -> BEGIN BLOCK, NO PYC
)@@G@@ARAMETERS   @I@@@@ . ---------------------------------------------------YD
)@@G@@--------------------------    @ @@@@ . ** INITIALIZE PARAMETERS **@I@@@@YE
)@@G@@ . ---------------------------------------------------------------------YF
)@@G@@--------    @F@@@@         LOAD  A7,SDENUM,X6 .          REMEMBER ENTRY YG
)@@G@@ATTRIBUTES  @E@@@@         STORE A7,ARRTAT,X10 .         SET RETURN ATTRYH
)@@G@@IBUTES@ @@@@         LOAD  A3,SDNMPM,X7 . @F@@@@         ADD     A3,W1U,YI
)@@G@@X10 .      GET THE NUMBER OF PARAMETERS   @ @@@@         SUB   A3,W1U,*XYJ
)@@G@@9 .   @ @@@@         LOAD  R1,W1U,A3 .    @ @@@@         LOADA A3,TRAPW YK
)@@G@@.     @ @@@@         BT    X9,0,*A3 .     @C@@@@         LOADXM X8,W1XU,YL
)@@G@@A1 . X8=A(ARGUMENT LIST)@H@@@@         LOADA X5,SDPLST,X6 .          X5 YM
)@@G@@= A(ENTRY LIST WORD), STARTS IN SD  @ @@@@         USING ELWDST,X5 .    YN
)@@G@@@E@@@@         LOAD  X3,W1XU,X6 .  FIRST 'PARM' IS RETURN VALUE   @F@@@@YO
)@@G@@         GOTO  EXPRM2 .      -> BEGIN PARM INITIALIZATION LOOP    @A@@@@YP
)@@G@@TRAPW    +     0377777,0377777 .    @D@@@@EXPRM1   LABEL .             GYQ
)@@G@@ET NEXT PARAMETER SD    @F@@@@         LOAD  X5,ELWNXT,X5 .          GETYR
)@@G@@ NEXT PARAMETER SD WORD @F@@@@         LOAD  X3,ELWSD,X5 . NEXT SD POINTYS
)@@G@@ER ON PARAMETER LIST    @C@@@@EXPRM2   LABEL .             MERGE TO BEGIYT
)@@G@@N LOOP@G@@@@         LOAD  X2,SDPROF,X3 .          X2=OFFSET FOR PARAMETYU
)@@G@@ER SLOT     @D@@@@         LOAD  X1,W1,*X8 .    X1=A(PARM DV) OR A(PARM)YV
)@@G@@@D@@@@         ADD   X2,W1XU,X10 . COMPUTE LOCATION OF SLOT @F@@@@      YW
)@@G@@   STORE X1,W1,X2 .    STORE ADDRESS OF PARAMETER IN SLOT   @G@@@@      YX
)@@G@@   IF    ELWNXT,NZERO THEN,EXPRM1 . -> PROCESS NEXT PARAMETER     @I@@@@YY
)@@G@@ . ---------------------------------------------------------------------YZ
)@@G@@--------    @^@@@@ . ** ZERO DO STACK **  @I@@@@ . ---------------------ZA
)@@G@@--------------------------------------------------------    @E@@@@EXINSCZB
)@@G@@   LABEL .             MERGE TO INITIALIZE VARIABLES  @E@@@@         LOAZC
)@@G@@DXM X9,SDDOOF,X7 .         OFFSET TO 'DO' STACK @D@@@@         ADD   X9,ZD
)@@G@@W1XU,X10 . X9=A(BASE OF DO STACK)   @F@@@@         LOAD R1,SDMXDO,X7 . CZE
)@@G@@OMPUTE NUM OF WORDS TO BE ZEROED    @G@@@@EXZDST   LABEL .              ZF
)@@G@@     ZERO DO STACK AND OUTER BLOCK WORD   @F@@@@         SZ      0,*X9 .ZG
)@@G@@           ZERO OUTER BLOCK LABEL WORD    @F@@@@         LOOP    R1,EXZDZH
)@@G@@ST .       LOOP BACK TO REST OF STACK     @E@@@@         LOAD  A2,X7 .  ZI
)@@G@@     SAVE BLOCK SD POINTER OVER LOOP@ @@@@         LOAD  X11,W1XU,X10 . ZJ
)@@G@@@H@@@@         ADD   X11,SDBKDP,X7 .         COMPUTE THE ADDRESS OF STATZK
)@@G@@IC LINKS    @F@@@@         LOADXM X7,ARSTLK-3,X11 .      BLOCK LEVEL N-3ZL
)@@G@@ POINTER    @F@@@@         LOADXM X8,ARSTLK-2,X11 .      BLOCK LEVEL N-2ZM
)@@G@@ POINTER    @F@@@@         LOADXM X9,ARSTLK-1,X11 .      BLOCK LEVEL N-1ZN
)@@G@@ POINTER    @C@@@@/. LINK SCALER PTRS TOGETHER AND ZERO THEM OUT  @[@@@@ZO
)@@G@@.     @ @@@@         USING   GENLST,X10 . @E@@@@         MOVE    GENPAT,ZP
)@@G@@0,I .      SET START OF LIST EMPTY  @F@@@@         MOVE    GENPTR,0,I . ZQ
)@@G@@     SAY NO PTRS POINT AT THIS AREC @ @@@@         MOVE    GENFLG,0,I   ZR
)@@G@@@ @@@@         USING SDSECT,A2 .    @D@@@@         IF SDPTRB,ZERO THEN,EZS
)@@G@@XINDV . -> IF NONE DCLD @D@@@@         SET GNFPTR,ON,GENFLG .    SAY PTRZT
)@@G@@S IN AREC   @D@@@@         LOAD    R2,X10 .            ASSUME NOT STATICZU
)@@G@@@B@@@@         IF SDBKDP,NZERO  THEN,EXPTR1 .   @ @@@@         LOAD    RZV
)@@G@@2,0,I .     @#@@@@EXPTR1   LABEL .  @F@@@@         LOAD    A3,SDPTRB,A2 ZW
)@@G@@.    GET START OF LIST FROM BLK SD  @#@@@@EXPTRC   LABEL .  @D@@@@      ZX
)@@G@@   LOAD    X11,SDLCOF,A3 .   COMPUTE ADDR OF PTR@ @@@@         ADD     XZY
)@@G@@11,R2 .     @ @@@@         USING   WORD,X11 .   @^@@@@         DSL     AZZ
)@@G@@5,72  @B@@@@         STORED  A5,W1,X11 .     ZERO PTR @G@@@@         LOAAA
)@@G@@DA   A5,SDNULL .       SET PTRS ON BLK ENTRY TO BE NULL     @ @@@@      AB
)@@G@@   STORE   A5,W1H1,X11 .@ @@@@         MOVE    W1+2,0,I .   @E@@@@      AC
)@@G@@   LOAD    X5,GENPAT .       PUT PTR ON FRONT OF LIST @ @@@@         STOAD
)@@G@@RE   X5,W1H2+2 .  @F@@@@         STORE   X11,GENPAT .      SET LIST HD TAE
)@@G@@O PTR JUST ADDED  @E@@@@         LOAD    A3,SDPTRC,A3 .    MOVE TO NEXT AF
)@@G@@IN CHAIN    @D@@@@         IF A3,NE,0,I THEN,EXPTRC . -> IF MORE ON LISTAG
)@@G@@@ @@@@         USING   AREC,X10 .   @I@@@@/ . --------------------------AH
)@@G@@--------------------------------------------------    @A@@@@ . *** INITIAI
)@@G@@ALIZE DOPE VECTORS ***  @C@@@@ . **  ALLOCATE ARRAYS WITH CONSTANT BOUNDAJ
)@@G@@S **  @I@@@@ . ---------------------------------------------------------AK
)@@G@@--------------------    @#@@@@EXINDV   LABEL .  @E@@@@         LOAD  X5,AL
)@@G@@SDDVC,A2 . DV CHAIN STARTS IN BLOCK SD    @C@@@@         IF    X5,ZERO TAM
)@@G@@HEN,EXDVED . -> NO DV'S @D@@@@         STORE X10,R2     .   SAVE X10 VALAN
)@@G@@UE FOR LATER@ @@@@         USING SDSECT,A2 .    @D@@@@         IF    SDBAO
)@@G@@KDP,NZERO THEN,EXDVLP . ->NOT STATIC@F@@@@         LOAD    R2,0,I .     AP
)@@G@@     START OF AREC IS REALLY ZERO   @E@@@@EXDVLP   LABEL .             MAQ
)@@G@@ERGE TO FILL IN NEXT AR DV    @ @@@@         USING   SDSECT,X5 .  @I@@@@AR
)@@G@@         IF SD0CNT+SD0BSD,ON,SDCLS0 THEN,EXDVL3 . -> DON'T FUSS WITH BASAS
)@@G@@ED VARS     @C@@@@         LOAD  X2,SDDVA,X5 . X2=DV TEMPLATE BASE@F@@@@AT
)@@G@@         LOAD  X1,SDLCOF,X5 .          X1=OFFSET IN AR FOR DV     @E@@@@AU
)@@G@@         ADD   X1,R2     .         X1=ADDRESS FOR NEW DV    @F@@@@      AV
)@@G@@   SETL  R1,SDDVSZ,X2 .          R1 = NUM OF WORDS IN DV-1  @I@@@@      AW
)@@G@@   ADD   X2,KK2H11 .   ADVANCE TO NEXT WORD IN DV TEMPLATE, SET INCREMENAX
)@@G@@TO    @C@@@@         LOADXI X1,1,I .     SET INCREMENTOR    @G@@@@      AY
)@@G@@   BT    X1,0,*X2 .    TRANSFER TEMPLATE INFORMATION TO AR DV     @G@@@@AZ
)@@G@@EXDVL3   LABEL .                   MERGE HERE TO SKIP BASED STORAGE DV  BA
)@@G@@@F@@@@         LOAD  X5,SDDVCH,X5 .          POINTS TO NEXT SD ON CHAIN BB
)@@G@@@E@@@@         IF    X5,NZERO THEN,EXDVLP . -> INITIALIZE NEXT DV @G@@@@BC
)@@G@@         LOAD  R1,AREPTR,X10 .         UPDATE END POINTER RESET VALUE   BD
)@@G@@@ @@@@         STORE R1,ARPRES,X10 .@F@@@@EXDVED   LABEL .             MBE
)@@G@@ERGE TO SKIP INITIALIZATION LOOP    @I@@@@ . ---------------------------BF
)@@G@@--------------------------------------------------    @ @@@@ . ** INITIABG
)@@G@@LIZE SCALERS **   @I@@@@ . ---------------------------------------------BH
)@@G@@--------------------------------    @H@@@@         LOAD  X11,SDSCIN,A2 .BI
)@@G@@         ENTRY POINT FOR SCALER INITIALIZATION  @F@@@@         LINK  0,XBJ
)@@G@@11 .       -> CALL CODED ROUTINE TO INITIALIZE  @G@@@@EXSCIE*  LABEL .  BK
)@@G@@           RETURN POINT AFTER SCALER INITIALIZATION   @I@@@@ . ---------BL
)@@G@@--------------------------------------------------------------------    BM
)@@G@@@C@@@@ . ** ALLOCATE ARRAYS, STRINGS AND STRUCTURES   @I@@@@ . ---------BN
)@@G@@--------------------------------------------------------------------    BO
)@@G@@@E@@@@         LSDP  X4,ARBSDP,X10 .         BLOCK SD POINTER     @F@@@@BP
)@@G@@         LSDP    X4,SDDVC,X4 .     GET FIRST SD W/DOPE VECTOR     @C@@@@BQ
)@@G@@         GOTO  EXALED .      -> START THE LOOP  @E@@@@         USING SDSBR
)@@G@@ECT,X4 . X4 -> SD OF VARIABLE WITH DV     @D@@@@EXALLP   LABEL .        BS
)@@G@@     TOP OF ALLOTMENT LOOP    @H@@@@         IF SD0CNT++SD0BSD,ON,SDCLS0BT
)@@G@@ THEN,EXALDL . -> AGAIN SKIP BASED VARS   @F@@@@         LOAD  R11,SDDCNBU
)@@G@@M,X4 .          SET LINE NUMBER FOR ERRORS@H@@@@         IF    SDPARM,ONBV
)@@G@@,SDCLS2 THEN,EXALP1 . -> PARAMETER TEMP, SKIP FILL IN @I@@@@         IF BW
)@@G@@   SDBDEX++SDLNXP,OFF,SDCLS2 THEN,EXALP1 . -> NO ADDITIONAL FILL-IN     BX
)@@G@@@I@@@@ . ---------------------------------------------------------------BY
)@@G@@--------------    @D@@@@ . ** EXIT TO COMPILED CODE TO FILL IN DOPE VECTBZ
)@@G@@OR ***@I@@@@ . ---------------------------------------------------------CA
)@@G@@--------------------    @G@@@@         LOAD  X11,SDDVA,X4 .          DOPCB
)@@G@@E VECTOR TEMPLATE IN SD AREA  @G@@@@         LOAD  X11,W1XH2,X11 .      CC
)@@G@@   ADDRESS OF CODED SEQUENCE FOR DV @I@@@@         STORE X4,ARSDDV,X10 .CD
)@@G@@         SAVE DV SD POINTER DURING INITIALIZATION     @C@@@@         LINCE
)@@G@@K  0,X11 .       -> EXIT TO CODE    @F@@@@EXADVE*  LABEL .             RCF
)@@G@@ETURN POINT AFTER DV INITIALIZATION @E@@@@         LOAD  X4,ARSDDV,X10 .CG
)@@G@@         RESTORE DV SD POINTER@D@@@@         LOAD    A3,ARBSDP,X10 .   GCH
)@@G@@ET BLOCK POINTER  @E@@@@         USING   SDSECT,A3 .       LOOK FOR THE CI
)@@G@@BLOCK DEPTH @E@@@@         LOAD    R2,X10 .          ASSUME THIS ISN'T BCJ
)@@G@@K 0   @D@@@@         IF SDBKDP,NZERO THEN,EXALP1 . YEP -> IT ISN'T@G@@@@CK
)@@G@@         LOAD    R2,0,I .          HERE MUST USE 0 AS START OS AREC     CL
)@@G@@@F@@@@         USING   SDSECT,X4 .       SET BACK TO WHAT IT SHOULD BE  CM
)@@G@@@I@@@@ . ---------------------------------------------------------------CN
)@@G@@--------------    @C@@@@ . ** TEST LEGALITY OF STRING LENGTH FIELD **   CO
)@@G@@@I@@@@ . ---------------------------------------------------------------CP
)@@G@@--------------    @G@@@@EXALP1   LABEL .             MERGE WHEN NO DV INCQ
)@@G@@ITIALIZATION NEEDED     @G@@@@         LOAD  X1,SDLCOF,X4 .          OFFCR
)@@G@@SET INTO AR OF DOPE VECTOR    @D@@@@         ADD   X1,R2     .       ADDCS
)@@G@@ X10 VALUE OR 0   @H@@@@         IF    SDLNXP,OFF,SDCLS2 THEN,EXAP11 . NCT
)@@G@@O STRING LEN CHECKING NEEDED  @F@@@@         LOAD  A7,W1+1,X1 .  GET FULCU
)@@G@@LWORD, TRUE STRING LENGTH     @G@@@@         JN    A7,EXALP2 .   -> LENGCV
)@@G@@TH TOO SMALL            *******     @F@@@@         IF    A7,LT,MXSTLN+1,CW
)@@G@@I THEN,EXALP4 . -> STRING LENGTH OK @#@@@@EXALP2   LABEL .  @ @@@@      CX
)@@G@@   ONER EREXLN01,2 .    @E@@@@ . SDX4, 'HAS IMPROPER LENGTH (', NUMA7, 'CY
)@@G@@).  80 IS USED.'  @C@@@@         LOAD  A7,80,I .     SET DEFAULT LENGTH CZ
)@@G@@@F@@@@EXALP4   LABEL .             MERGE WITH ACCEPTABLE STRING LENGTH  DA
)@@G@@@F@@@@         STORE A7,ARDVML,X1 .          SET DV MAXIMUM LENGTH FIELDDB
)@@G@@@G@@@@         IF    SDFXVR,OFF,SDCLS1 THEN,EXAP12 . -> NON-VARING STRINDC
)@@G@@G     @D@@@@         LOAD  A7,0,I .      SET ZERO CURRENT LENGTH  @E@@@@DD
)@@G@@EXAP12   LABEL .             MERGE TO SET CURRENT LENGTH    @E@@@@      DE
)@@G@@   STORE A7,ARDVCL,X1 .          CURRENT LENGTH FIELD @F@@@@EXAP11   LABDF
)@@G@@EL .             CHECK VALIDITY OF BOUNDS IN PREOCESS @F@@@@         IF DG
)@@G@@   SDBDEX,OFF,SDCLS2 THEN,EXALP6 . -> NOT AN ARRAY    @ @@@@         LOADH
)@@G@@D  A2,W1XU,X1 .   @^@@@@         LOADXI A2,2,I .@B@@@@         AU    A2,DI
)@@G@@SDNDIM-SDCLS4,X4,Q1 .   @ @@@@         ADD   A3,SDNDIM,X4 . @I@@@@ . ---DJ
)@@G@@------------------------------------------------------------------------DK
)@@G@@--    @C@@@@ . ** LOOP THROUGH ALL EXTENTS IN DOPE VECTOR **@G@@@@ .    DL
)@@G@@   NOTE THAT THIS ASSUMES EXTENT HAS BEEN COMPUTED.  THIS COULD   @G@@@@DM
)@@G@@ . JUST AS EASILY BE DONE HERE IF THE ARRAY TEMPLATE IS NOT TOUCHED     DN
)@@G@@@G@@@@ . ELSEWHERE FIRST, WITH THE CODE FINDING HIGH BOUND, AND LOW BOUNDO
)@@G@@D.    @F@@@@ . AFTER THE PARAMETER CHECK AT LABEL EXALLP THE JUMP MUST BDP
)@@G@@E TO  @]@@@@ . EXALDL   @E@@@@EXALP5   LABEL .             MERGE TO CHECDQ
)@@G@@K NEXT EXTENT     @E@@@@         TN    3,*A2 .       CHECK IF EXTENT IS DR
)@@G@@POSTIVE     @B@@@@         GOTO  EXAP10 .      -> BOUNDS OK @C@@@@      DS
)@@G@@   LOAD  A1,W1XU,A2 .  ADDRESS OF BOUND   @C@@@@         SUB   A1,W1U,X1DT
)@@G@@ .   COMPUTE OFFSET     @F@@@@         SRB   A1,1 .        FORM NUMBER ODU
)@@G@@F SUBSCRIPT IN ERROR    @F@@@@         ONUNIT  EREXBD03,ACCDSU,2 R,I,EXADV
)@@G@@P10  DEXWK1,4  DEXMAX,4 @E@@@@ . 'LOWER BOUND ON SUBSCRIPT', NUMA1, 'OF'DW
)@@G@@, SDX4, 'EXCEEDS  @B@@@@ . THE UPPER BOUND.  (1:10) IS USED.'     @E@@@@DX
)@@G@@.        *****SHOULD USE LOWER BOUND:LOWER BOUND + 10 .     @C@@@@      DY
)@@G@@   LOAD  A7,KK2H91 .   DEFAULT BOUNDS     @D@@@@         STORE A7,W1+1,ADZ
)@@G@@2 .  PUT INTO DOPE VECTOR     @C@@@@EXAP10   LABEL .             TO NEXTEA
)@@G@@ BOUNDS PAIR@H@@@@         IF    A2,LT,A3 THEN,EXALP5 . -> LOOP UNTIL ALEB
)@@G@@L BOUNDS ARE CHECKED    @#@@@@EXALP6   LABEL .  @I@@@@         IF    SDPEC
)@@G@@ARM,ON,SDCLS2 THEN,EXALDL . -> DON'T ALLOCATE SPACE FOR PARAME    @G@@@@ED
)@@G@@ . I DON'T SEE WHY PARAMETER SHOULD EVER BE ON THE DOPE VECTOR CHAIN    EE
)@@G@@@ @@@@ . SO THIS MAY BE UNNECESSARY @I@@@@/ . --------------------------EF
)@@G@@--------------------------------------------------    @D@@@@ . ** ALLOCAEG
)@@G@@TE SPACE FOR DATA ITEM ACCORDING TO DV    @I@@@@ . ---------------------EH
)@@G@@--------------------------------------------------------    @^@@@@      EI
)@@G@@   LINK  EXALL0 . @G@@@@         LOAD  R1,AREPTR,X10 .         UPDATE ENEJ
)@@G@@D POINTER RESET VALUE   @ @@@@         STORE R1,ARPRES,X10 .@I@@@@ . ---EK
)@@G@@------------------------------------------------------------------------EL
)@@G@@--    @C@@@@ . ** EXIT TO COMPILED CODE TO INITIALIZE **    @I@@@@ . ---EM
)@@G@@------------------------------------------------------------------------EN
)@@G@@--    @ @@@@         USING SDSECT,X4 .    @G@@@@         IF    SDINTL,OFEO
)@@G@@F,SDCLS3 THEN,EXALDL . -> NO INITIALIZATION     @G@@@@         STORE X4,EP
)@@G@@ARSDDV,X10 .         SAVE SD POINTER OF CURRENT ARRAY @G@@@@         LOAEQ
)@@G@@D  X11,SDINTM,X4 .         ADDRESS OF INITIALIZATION CODE   @C@@@@      ER
)@@G@@   LINK  0,X11 .       -> EXIT TO CODE    @G@@@@EXAYIN*  LABEL .        ES
)@@G@@     RETURN POINT AFTER INITIALIZATION OF ARRAY @ @@@@         LOAD  X4,ET
)@@G@@ARSDDV,X10 .@#@@@@EXALDL   LABEL .  @F@@@@         LOAD  X4,SDDVCH,X4 . EU
)@@G@@         FOLLOW CHAIN THROUGH SD'S  @#@@@@EXALED   LABEL .  @F@@@@      EV
)@@G@@   IF    X4,NZERO THEN,EXALLP .    ->NOT ZERO, MORE ON LIST @I@@@@ . ---EW
)@@G@@------------------------------------------------------------------------EX
)@@G@@--    @A@@@@ . ** ENTER BLOCK OR ROUTINE **     @I@@@@ . ---------------EY
)@@G@@--------------------------------------------------------------    @F@@@@EZ
)@@G@@         LOAD  X11,AREPTR,X10 .        NEXT FREE WORD POINTER     @F@@@@FA
)@@G@@         STORE X11,ARPRES,X10 .        END POINTER RESET VALUE    @F@@@@FB
)@@G@@         LOAD  F,ARTYPE,X10 .          ACTIVATION RECORD TYPE BITS@E@@@@FC
)@@G@@         SET   ARINTP,OFF .  TURN OFF INITIALIZATION BIT    @E@@@@      FD
)@@G@@   STORE F,ARTYPE,X10 .          RESET BITS IN AR     @E@@@@         IF FE
)@@G@@   ARPRBG,ON THEN,EXPCIN . -> PROCEDURE ENTRY   @E@@@@         LSDP  X11FF
)@@G@@,ARBSDP,X10 .        BLOCK SD POINTER     @G@@@@         LOAD  X11,SDADDFG
)@@G@@,X11 .         X11 = ENTRY ADDRESS TO BLOCK     @C@@@@         GOTO  0,XFH
)@@G@@11 .       -> ENTER BLOCK     @E@@@@EXPCIN   LABEL .             PROCEDUFI
)@@G@@RE ENTRY MERGE POINT    @E@@@@         LSDP  A1,ARESDP,X10 .         ADDFJ
)@@G@@RESS OF ENTRY SD  @F@@@@         LOAD  X11,SDENAD,A1 .         ENTRY ADDFK
)@@G@@RESS FOR PROCEDURE@F@@@@         LOAD    F,DGOPT3 .        GET FLAGS FORFL
)@@G@@ E-Z REFERENCE    @E@@@@         IF    0223,OFF THEN,LJMP . ->NO DEBUGGIFM
)@@G@@NG CODE     @C@@@@         LOAD  R11,SDDCNM,A1 .   GET STMT NUMBER@D@@@@FN
)@@G@@         IF 020,ON THEN,EXMETR+2*(ACPROC/IC-ACBGIN/IC)@E@@@@         IF FO
)@@G@@0200,ON THEN,EXHIST . -> HISTOGRAMS WANTED?     @G@@@@         IF 02,ON FP
)@@G@@THEN,EXPFLN ELSE,EXPFLW . PROC FLOW STAMT ENCOUNTERED @]@@@@. 1 = FLOW  FQ
)@@G@@@#@@@@. 2 = FLOW PROC   @A@@@@. 20 = STATIC LANGUAGE ANALYSIS     @#@@@@FR
)@@G@@. 200 = HISTRGRAM @I@@@@/ . --------------------------------------------FS
)@@G@@--------------------------------    @E@@@@ . *** EXECUTION CONTROL:  BLOFT
)@@G@@CK AND PROCEDURE EXIT ***     @D@@@@ . **  PROCEDURE AND BLOCK EXIT SERVFU
)@@G@@ICE ROUTINE **    @I@@@@ . ---------------------------------------------FV
)@@G@@--------------------------------    @D@@@@         USING AREC,X10 .     FW
)@@G@@ACTIVATION RECORD DSECT @E@@@@         USING EXCLLR,X5 .   CALLING ADDREFX
)@@G@@SS INFORMATION    @#@@@@EXEXIT*  LABEL .  @G@@@@         SET   AREXIT,ONFY
)@@G@@,ARTYPE . FORCE 'RETURN' FROM CURRENT BLOCK     @E@@@@EXRTRN*  LABEL .  FZ
)@@G@@           RETURN STATEMENT ENCOUNTERED   @D@@@@         STORE R11,ARSTMGA
)@@G@@T .   SAVE STATEMENT NUMBER   @C@@@@         LOAD  X5,X11 .      SAVE ENGB
)@@G@@TRY POINT   @E@@@@         LINK  TVEXST-(IN 63,0,1,0) .      TEST FOR TIGC
)@@G@@ME OUT@E@@@@         STORE X10,DEXWK1 .  SAVE AR OF RETURN FOR PM-DUMP  GD
)@@G@@@#@@@@EXEXLP   LABEL .  @E@@@@         LOADXM X8,ARESDP,X10 .        ENTGE
)@@G@@RY SD POINTER     @E@@@@         LOADXM X9,ARBSDP,X10 .        BLOCK SD GF
)@@G@@POINTER     @[@@@@.     @F@@@@. UNLINK ANY AUTOMATIC PTRS DCLD IN BLOCK GG
)@@G@@FROM WHAT THEY PT TO    @A@@@@. &! MAKE ILLEGAL ANY PTRS INTO AREC@[@@@@GH
)@@G@@.     @ @@@@         USING   GENLST,X10 . @F@@@@         IF GENPAT,NZEROGI
)@@G@@ THEN,EXEXLP1 . -> IF NO PTRS IN BLOCK    @D@@@@         IF GENPTR,ZERO GJ
)@@G@@THEN,EXEXLP2 .  -> BOTH ZERO  @#@@@@EXEXLP1  LABEL .  @G@@@@         IF GK
)@@G@@ARMNPR,ON,ARTYPE THEN,EXEXLP2 . -> IF LEAVING MAIN PROC     @^@@@@      GL
)@@G@@   LOAD    A2,X10 @C@@@@         LINK    FRECLR .           CLEAR IT OUTGM
)@@G@@@#@@@@EXEXLP2  LABEL .  @[@@@@.     @D@@@@         LOAD  A2,X10 .      SGN
)@@G@@AVE ACTIVATION RECORD   @D@@@@         LOAD  F,SDRCTS,X9 . RESET RECURSIGO
)@@G@@ON BYTE     @^@@@@         XOR,U F,0777 . @ @@@@         STORE A6,SDRCTSGP
)@@G@@,X9 . @ @@@@         LOAD  F,ARTYPE .     @H@@@@         LOAD  X10,ARDYNGQ
)@@G@@M,X10 .        X10 =A(CALLER'S OR OUTER BLOCK'S AR)   @I@@@@         IF GR
)@@G@@   ARPRBG++ARFNRN++AREXIT,OFF THEN,EXEXLP . -> BEGIN BLOCK AR, TRY N    GS
)@@G@@@D@@@@         IF 02,OFF,DGOPT3 THEN,EXEXL1 . PROC TRACE?   @D@@@@      GT
)@@G@@   IF    ARPRBG,OFF THEN,EXEXL1 . -BEGIN BLOCK  @E@@@@         LINK    EGU
)@@G@@XRTFL .          LINK TO RETURN TRACE     @F@@@@EXEXL1   LABEL .        GV
)@@G@@           HERE IF NO TRACE OR TRACE DONE @G@@@@         IF    ARFNRN,OFGW
)@@G@@F THEN,EXEXST . -> NO RETURN VALUE EXPECTEDD    @G@@@@         LOAD  F,EGX
)@@G@@XCTYP,X5 .          TYPE INFO FOLLOWS RETURN CALL     @H@@@@         IF GY
)@@G@@   ARFNRN++ARNOCV,OFF THEN,EXNVAL . -> NO VALUE BEING RETURNED    @H@@@@GZ
)@@G@@         IF    A6,NE,ARFNRN++ARNOCV,I THEN,EXEXRT . -> VALUE BEING RETURHA
)@@G@@N, OK @ @@@@         LOAD    A6,R11 .     @ @@@@         ONER EREXNOCV,2HB
)@@G@@ .    @E@@@@ . 'RETURN FROM', SDX8, 'VIA LINE', NUMA6, 'REQUIRES ILLEGALHC
)@@G@@@ @@@@ . CONVERSION.  0 IS USED.'   @^@@@@         GOTO  EXNVL1 . @#@@@@HD
)@@G@@EXNVAL   LABEL .  @E@@@@         LOAD  X2,ARSTMT,X10 .         LINE NUMBHE
)@@G@@ER OF CALLER@ @@@@         LOAD    A6,R11 .     @ @@@@         ONER EREXHF
)@@G@@NVAL,2 .    @F@@@@ . 'RETURN FROM ', SDX8, 'VIA LINE ', NUMA6, 'DOESN''THG
)@@G@@ RETURN     @G@@@@ . A VALUE AS EXPECTED IN LINE ', NUM X2, '.  THE VALUHH
)@@G@@E 0 IS USED.'     @#@@@@EXNVL1   LABEL .  @F@@@@         ADD   A2,SDPROFHI
)@@G@@,X8 .          A2 -> SLOT FOR RETURN VALUE@D@@@@         LOAD  A2,W1,A2 HJ
)@@G@@.    A2 = A(RETURNED VALUE)   @^@@@@         LOADXI A2,1,I .@ @@@@      HK
)@@G@@   USING   SDSECT,X8 .  @G@@@@         IF    SDARST,ON,SDCLS1 THEN,EXXT0HL
)@@G@@B . -> STRING VALUE EXPECTED  @G@@@@         LOADXM X2,SDRTC,X8 .       HM
)@@G@@   PICK UP BASIC WIDTH OF ARITH DATA@C@@@@         GOTO  EXNVL2 .      JHN
)@@G@@UMP INTO LOOP ZERO@#@@@@EXNVL3   LABEL .  @F@@@@         SZ    0,*A2 .  HO
)@@G@@                              ********    @#@@@@EXNVL2   LABEL .  @D@@@@HP
)@@G@@         LOOP  X2,EXNVL3 .   CONTINUE TO ZERO WORDS   @B@@@@         GOTHQ
)@@G@@O  EXEXRT .      -> FINISH UP @#@@@@EXXT0B   LABEL .  @E@@@@         LOAHR
)@@G@@DA A3,KK0B     . A2 -> STRING CONSTANT '0'B     @E@@@@         LINK  EXCHS
)@@G@@CA .      -> EXECUTE STRING ASSIGNMENT    @B@@@@         GOTO  EXEXRT . HT
)@@G@@     -> FINISH UP @#@@@@EXEXST   LABEL .  @H@@@@         IF    ARFNRN,OFHU
)@@G@@F,EXCTYP THEN,EXEXRT . -> NOTHING BEING RETURN, OK    @A@@@@         LOAHV
)@@G@@D    X2,ARSTMT,X10 .    @ @@@@         LOAD    A6,R11 .     @ @@@@      HW
)@@G@@   ONER    EREXUXVL,0 . @F@@@@ . 'RETURN FROM ', SDX8, 'VIA LINE', NUMA6HX
)@@G@@, 'RETURNS A VALUE TO   @A@@@@ . CALL STATEMENT IN LINE ', NUMX2 .@C@@@@HY
)@@G@@         GOTO  EXEXRT .      -> RETURN TO CALLER@F@@@@EXUENT*  LABEL .  HZ
)@@G@@                 CALL TO $$ENTRY$$ ATTEMPTED    @D@@@@         LOAD    FIA
)@@G@@,ARTYPE .         GET TYPE OF CALL  @E@@@@         AND,U   F,ARPRBG++ARFIB
)@@G@@NRN . SEE IF VALUE NEEDED     @F@@@@         IF A6,NE,ARPRBG++ARFNRN,I TIC
)@@G@@HEN,EXUEN5 . ->NO VALUE NEEDED@D@@@@         LOADA   A8,ZERVAL .       SID
)@@G@@AY ZERO RETURNED  @E@@@@         ONER   EXUNEN,2 .  ATTEMPT TO CALL $$ENIE
)@@G@@TRY$$ STRA8 @D@@@@         LOAD    A2,X10 .          GET START OF AREC  IF
)@@G@@@E@@@@         LOAD    A1,ARESDP,X10 .   POINT TO SD FOR ENTRY    @D@@@@IG
)@@G@@         ADD     A2,SDPROF,A1 .    ADD IN AREC OFSET  @D@@@@         LOAIH
)@@G@@D    A2,W1,A2 .        GET ADDRESS OF PARM@ @@@@         USING   SDSECT,II
)@@G@@A1 .  @E@@@@         IF SDARST,ON,SDCLS1 THEN,EXUEN3 . IS IT STRING?    IJ
)@@G@@@C@@@@         SETL   X2,SDRTC,X8 .     GET DATA WIDTH@ @@@@         GOTIK
)@@G@@O    EXUEN2 .     @#@@@@EXUEN1   LABEL .  @C@@@@         SZ      0,*A2 .IL
)@@G@@           CLEAR VALUE  @#@@@@EXUEN2   LABEL .  @E@@@@         LOOP    XIM
)@@G@@2,EXUEN1 .       CLEAR WIDTH OF NUMBER    @D@@@@         GOTO    EXUEN4 IN
)@@G@@.          MERGE WITH STRINGS @#@@@@EXUEN3   LABEL .  @C@@@@         LOAIO
)@@G@@DA   A3,KK0B .         POINT TO '0'B@C@@@@         LINK    EXCCA .      IP
)@@G@@     DO ASSIGNMENT@D@@@@EXUEN4   LABEL .                   RETURN FROM HIQ
)@@G@@ERE   @D@@@@         LINK    EXRTRN .          CALL RETURN ROUTINE@E@@@@IR
)@@G@@         +ARFNRN,0 .               SAY RETURNING A VALUE    @F@@@@EXUEN5IS
)@@G@@   LABEL .                   NO VALUE NEEDS TO BE RETURNED  @E@@@@      IT
)@@G@@   LOADA   A8,NOVALE .       POINT TO SHORT MESSAGE   @D@@@@         ONEIU
)@@G@@R   EXUNEN,2 .  ATTEMPT TO CALL $$ENTRY$$ @D@@@@         LINK    EXRTRN IV
)@@G@@.          CALL RETURN DRIVER @E@@@@         +0 .                      SIW
)@@G@@AY NOT RETURNING A VALUE@I@@@@/ . --------------------------------------IX
)@@G@@--------------------------------------    @B@@@@ . *** EXECUTION CONTROLIY
)@@G@@:  BRANCHING ***  @ @@@@ . **  GOTO SERVICE ROUTINE **@I@@@@ . ---------IZ
)@@G@@--------------------------------------------------------------------    JA
)@@G@@@#@@@@EXGOTO*  LABEL .  @F@@@@         STORE X7,ARSVX7,X10 .         SAVJB
)@@G@@E STATIC LINK REGISTERS @ @@@@         STORE X8,ARSVX8,X10 .@ @@@@      JC
)@@G@@   STORE X9,ARSVX9,X10 .@C@@@@         LOAD  X5,X10 .      SAVE AR OF GOJD
)@@G@@TO    @E@@@@         MOVE    F,0,I .           FOR SETTING PTR INDICATORJE
)@@G@@@G@@@@         IF    A2,EQ,DEXINT THEN,EXULAB . -> LABEL IS NOT INITIALIJF
)@@G@@ZED   @ @@@@         USING SDSECT,A2 .    @G@@@@         IF    SD4FLB++SJG
)@@G@@D4UDF,OFF,SDCLS4 THEN,EXGOLP . -> VALID GOTO    @F@@@@ .                JH
)@@G@@                     (NOT UNDEFINED OR FORMAT)  @C@@@@         IF    SD4JI
)@@G@@FLB,ON,SDCLS4 THEN,EXFRLB .   @D@@@@EXULAB   LABEL .             LABEL NJJ
)@@G@@OT INITIALIZED    @^@@@@         ONER EREXULAB,3@ @@@@ . 'UNDEFINED LABEJK
)@@G@@L IN GOTO'  @F@@@@EXULBL*  LLOC .                    ATTEMPT TO GO TO $$JL
)@@G@@LABEL$$     @ @@@@         ONER   EXULUB,3 .    @#@@@@EXFRLB   LABEL .  JM
)@@G@@@ @@@@         ONER EREXFLAB,3 .    @ @@@@ . 'FORMAT LABEL IN GOTO'     JN
)@@G@@@E@@@@EXGOLP   LABEL .             START LOOP TO FIND PROPER AR   @G@@@@JO
)@@G@@         IF    A1,EQ,ARINCT THEN,EXARHR . -> CORRECT BLOCK AR FOUND     JP
)@@G@@@F@@@@         LOR     F,GENPAT,X10 . GET INDICATOR FOR PRESENCE OF PTRSJQ
)@@G@@@F@@@@         LOR     F,GENPTR,X10 .    SET INDICATOR FOR PTRS TO AUTO JR
)@@G@@@G@@@@         IF    A1,LT,ARINCT THEN,EXNXAR . -> AR MAY BE LOWER IN STJS
)@@G@@ACK   @C@@@@         LOAD  X10,X5 .      RESTORE AR OF GOTO @E@@@@      JT
)@@G@@   LOAD  X2,SDLSTN,A2 .          LINE NUMBER OF LABEL @ @@@@         ONEJU
)@@G@@R EREXGOBK,3 .    @E@@@@ . 'VALUE OF LABEL VARIABLE (',SDA2, 'IN LINE ',JV
)@@G@@ NUMX2,     @B@@@@ . ') IS IN A CURRENTLY INACTIVE BLOCK.'  @C@@@@EXNXARJW
)@@G@@   LABEL .             CHECK NEXT LOWER AR@E@@@@         LOADXM X9,ARBSDJX
)@@G@@P,X10 .        BLOCK SD POINTER     @F@@@@         LOAD  A3,SDRCTS,X9 . JY
)@@G@@         RESET RECURSION FLAG TEST  @^@@@@         XOR,U A3,0777 .@ @@@@JZ
)@@G@@         STORE A4,SDRCTS,X9 . @F@@@@         LOAD  X10,ARDYNM,X10 . FOLLKA
)@@G@@OW DYNAMIC LINK TO NEXT AR    @C@@@@         GOTO  EXGOLP .      -> TESTKB
)@@G@@ NEXT AR    @E@@@@EXARHR   LABEL .             LEGAL BLOCK FOUND FOR LABKC
)@@G@@EL    @E@@@@         LINK  TVEXST-(IN 63,0,1,0) .      TEST FOR TIME OUTKD
)@@G@@@ @@@@         USING AREC,X10 .     @I@@@@         IF    ARINTP,OFF,ARTYKE
)@@G@@PE THEN,EXNOIN . -> BLOCK INITIALIZATION COMPLETE,    @F@@@@         LOAKF
)@@G@@D  X2,ARSTMT,X10 .         LINE NUMBER OF DECLARE     @F@@@@         LOAKG
)@@G@@D  X3,AREPTR,X10 .         X3=A(AR FOR CALLED PROC)   @E@@@@         LSDKH
)@@G@@P  X3,ARESDP,X3 .          SD OF ENTRY POINT    @ @@@@         ONER EREXKI
)@@G@@GOIN,3 .    @D@@@@ . SDX3, 'INVOKED FOR INITIALIZATION IN LINE ',NUMX2, KJ
)@@G@@@ @@@@ . 'TERMINATES VIA GOTO.'     @E@@@@EXNOIN   LABEL .             BKK
)@@G@@LOCK NOT BEING INITIALIZED    @G@@@@         LOADXM X7,SDLDOF,A2 .      KL
)@@G@@   X7=OFFSET(DO SLOT FOR LABEL)     @D@@@@         ADD   X7,W1XU,X10 . XKM
)@@G@@7=A(DO SLOT FOR LABEL)  @E@@@@         LOAD  A3,W1H1,X7 .    GET DO STACKN
)@@G@@K SLOT CONTENTS   @C@@@@ . IF DO GROUP IN WHICH LABEL OCCURS IS ACTIVE, KO
)@@G@@@C@@@@ . CONTENTS OF SLOT IN DO-STACK WILL LIE BETWEEN@^@@@@ . SDLLIM ANKP
)@@G@@D SDULIM    @E@@@@         LOAD  X2,SDLSTN,A2 .          LINE NUMBER OF KQ
)@@G@@LABEL @ @@@@         USING SDSECT,A2 .    @F@@@@         IF    A3,EQ,SDLKR
)@@G@@LIM THEN,EXJPOK . -> NORMAL LEGAL CASE    @F@@@@         IF    A3,LT,SDLKS
)@@G@@LIM THEN,EXINDO . -> DO GROUP NOT ACTIVE  @F@@@@         LOAD  A4,SDULIMKT
)@@G@@,A2 .          GET UPPER LIMIT OF LABEL   @F@@@@         IF    A4,GE,A3 KU
)@@G@@THEN,EXJPOK . -> CORRECT RANGE FOR DO     @G@@@@EXINDO   LABEL .        KV
)@@G@@     ATTEMPT TO JUMP INTO INACTIVE DO GROUP     @C@@@@         LOAD  X10KW
)@@G@@,X5 .      RESTORE AR OF GOTO @ @@@@         ONER EREXGODO,3 .    @F@@@@KX
)@@G@@ . SDA2, '(DEFINED IN LINE ', NUMX2,') IS IN A CURRENTLY INACTIVE @^@@@@KY
)@@G@@ . ITERATIVE DO GROUP.' @#@@@@EXJPOK   LABEL .  @[@@@@.     @F@@@@. IF AKZ
)@@G@@NY PTRS WERE PRESENT THEN LOOP THRU THE ARECS AND FREE THEM @[@@@@.     LA
)@@G@@@E@@@@         IF F,EQ,0,I THEN,EXJPO4 . -> IF NO PTRS IN ANY BLK @F@@@@LB
)@@G@@         LOAD    X10,X5 .          GET BACK TO AREC OF GOTO STMT  @E@@@@LC
)@@G@@         LOADD   A7,A1 .           PTR UNLINKER USES A1     @#@@@@EXJPO1LD
)@@G@@   LABEL .  @ @@@@         USING   GENLST,X10 . @F@@@@         IF GENPATLE
)@@G@@,NZERO THEN,EXJPO2 . -> IF LIST IS NOT EMPTY    @D@@@@         IF GENPTRLF
)@@G@@,ZERO THEN,EXJPO3 .  -> IF NONE     @#@@@@EXJPO2   LABEL .  @ @@@@      LG
)@@G@@   LOAD    A2,X10 .     @ @@@@         LINK    FRECLR .     @#@@@@EXJPO3LH
)@@G@@   LABEL .  @D@@@@         LOAD    X10,ARDYNM,X10 . MOVE OUT ONE AREC   LI
)@@G@@@E@@@@         IF A7,LT,ARINCT THEN,EXJPO1 . -> IF NOT FOUND YET  @B@@@@LJ
)@@G@@         STORED  A7,A1 .           RESTORE@#@@@@EXJPO4   LABEL .  @[@@@@LK
)@@G@@.     @F@@@@         LOAD R1,SDNDWD,A2 . X9= NUM WORDS IN DO STACK ABOVELL
)@@G@@ LABEL@E@@@@         LOADA A1,KKD0-1 .   ADDRESS OF DOUBLEWORD ZERO     LM
)@@G@@@F@@@@         BT    X7,1,*A1 .    ZERO DO STACK ABOVE LABEL'S DO GROUP LN
)@@G@@@E@@@@         LOAD  R1,ARPRES,X10 .         RESET END POINTER    @ @@@@LO
)@@G@@         STORE R1,AREPTR,X10 .@ @@@@ . ** ADVANCE GO TO RECORD ** @F@@@@LP
)@@G@@         LOAD    A3,DEXGOF .       GET POINTER TO NEXT GOTO HIST  @D@@@@LQ
)@@G@@         STORE   R11,0,A3 .        SAVE THIS STMT # . @D@@@@         ADDLR
)@@G@@     A3,1,I .          RAISE THE POINTER .@F@@@@         IF  A3,NE,DEXGOLS
)@@G@@S+LDXGOS,I THEN,EXGTG1 . (WAS DEXGOF)*****@F@@@@         LOADA   A3,DEXGLT
)@@G@@OS .       POINT TO TOP OF LIST AGAIN     @#@@@@EXGTG1   LABEL .  @D@@@@LU
)@@G@@         STORE   A3,DEXGOF .       SAVE THE POINTER   @D@@@@         STOLV
)@@G@@RE X2,DEXGOT .   LINE NUMBER OF LABEL     @#@@@@EXGTGO   LABEL .  @ @@@@LW
)@@G@@         LOAD  X11,SDADD,A2 . @ @@@@ . $$    SET CONDITION FLAGS  @F@@@@LX
)@@G@@         STORE X10,DEXCAR . SAVE BASE OF CURRENT ACTIVATION RECORD@F@@@@LY
)@@G@@         LOADXM X7,ARSVX7,X10 .        RESTORE LINK REGISTERS     @A@@@@LZ
)@@G@@         LOADXM X8,ARSVX8,X10 .     @A@@@@         LOADXM X9,ARSVX9,X10 MA
)@@G@@.     @C@@@@         GOTO  0,X11 .       -> ENTER USER CODE @I@@@@/ . --MB
)@@G@@------------------------------------------------------------------------MC
)@@G@@--    @E@@@@ . *** EXECUTION CONTROL:  AGGREGATE STORAGE ALLOCATOR ***  MD
)@@G@@@I@@@@ . ---------------------------------------------------------------ME
)@@G@@--------------    @C@@@@ . THE ROUTINE IS CALLED BY THE BLOCK/PROCEDURE MF
)@@G@@@F@@@@ . PROLOGUE ROUTINE AND THE AGGREGATE TEMPORARY ALLOCATOR,EXTMP1. MG
)@@G@@@]@@@@ . INPUT:   @H@@@@ .       X1              = A(DV) OF DATA ITEM FOMH
)@@G@@R WHICH STORAGE IS TO BE ALL  @D@@@@ .       X4              = A(SD) OF MI
)@@G@@THIS SAME ITEM    @E@@@@ .                           INCREMENTOR MUST COMJ
)@@G@@NTAIN ZERO  @]@@@@ . ACTION:  @F@@@@ .       SPACE IS ACQUIRED ON THE MAMK
)@@G@@IN STACK TO ACCOMODATE THE    @E@@@@ . DATA ITEM.  IF THE ITEM IS AN ARRML
)@@G@@AY, ITS DOPE VECTOR IS  @F@@@@ . COMPLETED BY ADDING THE MULTIPLIERS (EXMM
)@@G@@TEN T - 1 AND LOWER     @E@@@@ . BOUNDS SHOULD BE IN HALF WORD FORMAT). MN
)@@G@@ FOR ARRAYS OF    @G@@@@ . STRINGS, SECONDARY DOPE VECTORS ARE ALSO ALLOMO
)@@G@@CATED AND INITIALIZED.  @]@@@@ . RETURN:  @A@@@@ .       X1    A(DV) OF MP
)@@G@@DATA ITEMS  @F@@@@ .       X4              =A(SD) OF DATA ITEM(UNCHANGEDMQ
)@@G@@ FROM INPUT)@E@@@@ . DESTROYS:  REGISTERS X2, X3, X5, A1 TO A7, A9 TO A1MR
)@@G@@4     @ @@@@ . INTERNAL REGISTER USAGE:   @D@@@@ .       X2             MS
)@@G@@ = BASE OF AREA TO BE CLEARED @D@@@@ .       A2              = FIRST WORMT
)@@G@@D BEYOND AREA     @E@@@@ .       R1              = LENGTH OF AREA TO BE MU
)@@G@@CLEARED     @F@@@@ .       A3                  = ADDRESS OF INITIALIZATIMV
)@@G@@ON CONSTANT @G@@@@ .       A5-A6               = F REGISTER (PACKED SDCLMW
)@@G@@S1 AND SDCLS2)    @A@@@@ .       X4              = A(SD)    @E@@@@ .    MX
)@@G@@   X1              = A(DV)   (ZERO IN INCREMENTOR)    @C@@@@ .       A12MY
)@@G@@                 = BYTE POINTER     @F@@@@ .       A9-A10              =MZ
)@@G@@1ST WORD OF STRING DOPE VECTORS     @F@@@@ .       A11                 =NA
)@@G@@ 2ND WORD OF STRING DOPE VECTORS    @F@@@@ .       X3              =POINNB
)@@G@@TS TO MULTIPLIER IN MAIN DOPE VECTOR@C@@@@ .       X5                  =NC
)@@G@@ STRING CLASS     @E@@@@ .       A7                  = VIRTUAL ORIGIN ACND
)@@G@@CUMULATOR   @D@@@@ .       A4                  = MULTIPLIER COMPUTATION NE
)@@G@@@F@@@@ .       A13-A14             = VIRTUAL ORIGIN EXTENT CALCULATION  NF
)@@G@@@#@@@@EXALL0   LLOC .   @D@@@@         LOAD  F,SDCLS0-FQ1,X4 .       GETNG
)@@G@@ CLASS WORD @F@@@@         SRB   F,9 .         RIGHT JUSTIFY CLASS 1 ANDNH
)@@G@@ CLASS 2    @G@@@@         LOAD  X2,AREPTR,X10 .         POINT TO NEXT ANI
)@@G@@VAILABLE WORD     @E@@@@         IF    SDARST*01000,OFF THEN,EXALL1 . ->NJ
)@@G@@ NOT STRING @C@@@@         LOAD    X5,0,I .          ASSUME CHAR  @E@@@@NK
)@@G@@         IF    SDCHBT*01000,OFF THEN,EXALL2 . -> CHAR STRING@C@@@@      NL
)@@G@@   LOAD    X5,ARCHBT,I .     IT IS BIT    @G@@@@EXALL2   LABEL .        NM
)@@G@@     MERGE AFTER STRING CLASS (BIT,CHAR) FOUND  @I@@@@         LOADA A3,NN
)@@G@@KIRBY2,X5 .          POINT TO WORD TO INITIALIZE STRING BY TYP    @D@@@@NO
)@@G@@         LOAD  A9,W1XU,X5 .  A9 = CLASS OF STRING     @F@@@@         IF NP
)@@G@@   SDFXVR*01000,ON THEN,EXALL3 . -> VARYING STRING    @E@@@@         LOANQ
)@@G@@D  A11,W1+1,X1 . MAX AND CURRENT LENGTH FIELDS  @H@@@@         ADD   A9,NR
)@@G@@ARDVUN*0100,I .      MARK FIXED LENGTH STRING UNITIALIZED   @D@@@@      NS
)@@G@@   GOTO  EXALL4 .      -> FINISH STRING DV SETUP@D@@@@EXALL3   LABEL .  NT
)@@G@@           VARYING LENGTH STRING    @G@@@@         ADD   A9,ARDVVR*0100,NU
)@@G@@I .      SET VARYING STRING LENGTH FLAG   @E@@@@         LOAD  A11,W1H1+NV
)@@G@@1,X1 .         MAX LENGTH FIELD     @G@@@@         SLB   A11,18 .      LNW
)@@G@@EFT JUSTIFY TO SET CURRENT LENGTH = 0     @G@@@@EXALL4   LABEL .        NX
)@@G@@     MERGE TO COMPLETE STRING DV CONSTRUCTION   @G@@@@         LOAD  A1,NY
)@@G@@ARDVSZ,X1 .          MAX AND CURRENT LENGTH FIELDS    @H@@@@         DSANZ
)@@G@@   A1,20 .       PREPARE TO DIVIDE BY RIGHT JUSTIFYING MAX LENGTH @F@@@@OA
)@@G@@         SRB     A2,34 .           FINISH DIVIDE BY 4 CHARS/WORD  @F@@@@OB
)@@G@@         SLB   A9,18+6 .     LEFT JUSTIFY FLAG AND CLASS FIELDS   @F@@@@OC
)@@G@@         TZ    A2 .          SKIP IF DATA ALIGNED ON WORD BOUNDARY@F@@@@OD
)@@G@@         ADD   A1,1,I .      INCLUDE A PARTIAL WORD OF STRING     @B@@@@OE
)@@G@@         IF    SDARRY,ON THEN,EXALL5 .    @G@@@@         STORE A9,ARDVOROF
)@@G@@,X1 .          SET FLAGS IN DV FOR SINGL2 STRING@G@@@@         STORE X2,OG
)@@G@@ARDVPT,X1 .          POINT TO FIST WORD OF STRING     @E@@@@         AU,OH
)@@G@@XU A1,0,X2 .     A2 = A(FIRST WORD BEYOND AREA) @G@@@@         LOAD  R1,OI
)@@G@@W1XU,A1 .  R1 = NUMBER OF WORDS TO BE INITIALIZED     @E@@@@         GOTOJ
)@@G@@O  EXCLR1 .      -> INITIALIZE STRING AND RETURN@C@@@@EXALL1   LABEL .  OK
)@@G@@           NON-STRING DATA    @G@@@@         LOAD  A4,SDRTC,X4 . A4 = NUOL
)@@G@@MBER OF WORDS IN DATA ITEM(1ST MPLR)@D@@@@         LOAD  A2,W1XU,X2 .  COM
)@@G@@OPY BASE ADDRESS OF AREA@E@@@@         IF    SDARRY,ON THEN,EXALL6 . -> ON
)@@G@@NON-STRING ARRAY  @H@@@@         STORE A2,ARDVOR,X1 .          SET ADDREOO
)@@G@@SS INTO SCALER DOPE VECTOR    @H@@@@EXALL9   LABEL .             MERGE TOP
)@@G@@O FINISH NON-STRING ARRAY INITIALIZATION  @E@@@@         ADD   A2,A4 .  OQ
)@@G@@     FIND NEXT WORD PAST SCALER     @F@@@@         LOAD  R1,A4 .       SOR
)@@G@@ET NUMBER OF WORDS TO INITIALIZE    @[@@@@.     @F@@@@. SEE IF IT IS PTROS
)@@G@@ AND IF SO ZERO IT OUT AND LINK THEM TOGETHER   @[@@@@.     @D@@@@      OT
)@@G@@   SRB     A5,18 .           RGT JUSTIFY CLS0   @ @@@@         AND,U   AOU
)@@G@@5,SD0PTR .  @D@@@@         IF A6,NE,SD0PTR,I THEN,EXAL10 . -> IF NOT PTROV
)@@G@@@ @@@[         USING   GENLST,X10   @F@@@[         SET     GNFPTR,ON,GENOW
)@@G@@FLG . SAY PTRS IN THIS THING IE AREC@G@@@@         LOAD    X5,X2 .      OX
)@@G@@     SAVE PTR TO START OF ARRAY SPACE     @D@@@@         LOADA   A3,KKD0OY
)@@G@@ .         SET TO ZERO OUT    @#@@@@         LOCAL    @G@@@@         LINOZ
)@@G@@K    EXCLR1 .          TEST FOR SPACE ETC  & ZERO IT OUT    @F@@@@      PA
)@@G@@   LOADXI  X5,3,I .          SET TO STEP THRU PTR ARRAY     @ @@@@      PB
)@@G@@   LOADXI  A2,3,I .     @#@@@@EXAL11   LABEL .  @E@@@@         LOADA   APC
)@@G@@5,SDNULL .       SET PTR NULL ON BLK ENTRY@ @@@@         STORE   A5,W1H1PD
)@@G@@,X5 . @E@@@@         LOAD    A3,GENPAT,X10 .   PUT PTR AT FRONT OF LIST PE
)@@G@@@A@@@@         STORE   X5,GENPAT,X10 .    @E@@@@         STORE   A3,W1H2PF
)@@G@@+2,*X5 . MOVE TO NEXT PTR IN ARRAY  @E@@@@         IF A2,GT,X5 THEN,EXALPG
)@@G@@11 . -> IF END NOT REACHED    @#@@@@         JMP .    @[@@@@.     @[@@@@PH
)@@G@@.     @#@@@@EXAL10   LABEL .  @E@@@@         GOTO  EXCLR .       -> INITPI
)@@G@@IALIZE SCALER AND RETURN@C@@@@EXALL5   LABEL .              STRING ARRAYPJ
)@@G@@S     @H@@@@         LOAD  A4,2,I .      ARRAY MEMBERS ARE SECONDARY DOPPK
)@@G@@E VECTORS(LEN=2)  @G@@@@         LOADXI X2,2,I .     SET INCREMENTOR FORPL
)@@G@@ DOPE VECTOR POINTER    @G@@@@EXALL6   LABEL .             MERGE TO INITPM
)@@G@@IALIZE DOPE VECTOR POINTER    @G@@@@         LOAD  X3,SDNDIM,X4 .       PN
)@@G@@   X3 = NUMBER OF ARRAY DIMENSIONS  @D@@@@         ADD   X3,W1XU,X3 .  DPO
)@@G@@OUBLE DIMENSION COUNT   @H@@@@         ADD   X3,W1XU,X1 .  POINT TO LASTPP
)@@G@@ MULTIPLIER SLOT IN DOPE VECTOR     @G@@@@         LOADXI X3,-2,I .    SPQ
)@@G@@ET TO DECREMENT DOPE VECTOR MPLR POINTER  @E@@@@         LOAD  A7,W1XU,XPR
)@@G@@2 .  INITIALIZE VIRTUAL ORIGIN SUM  @F@@@@         LOAD  A13,1,I .     SPS
)@@G@@ET CONSTANT FOR EXTENT CALCULATIONS @C@@@@ . ** FORM MULTIPLIERS AND VIRPT
)@@G@@TUAL ORIGIN **    @F@@@@EXALL7   LABEL .             TOP OF LOOP, COMPUTPU
)@@G@@E VIRUAL ORIGIN   @G@@@@         STORE A4,W1,X3 .    SET MULTIPLIER INTOPV
)@@G@@ MAIN DOPE VECTOR (M(I))@D@@@@         LOAD  A8,W1XH2+1,X3 . I-TH LOWER PW
)@@G@@BOUND (L(I))@C@@@@         MPYS  A8,A4 .       A8 = M(I) * L(I)   @H@@@@PX
)@@G@@         SUB   A7,A8 .       FORM VIRTUAL ORIGIN = SUM(-M(I)*L(I))+REAL PY
)@@G@@ORIGIN@E@@@@EXALL8   LABEL .             COMPUTE AND TEST MULTIPLIER    PZ
)@@G@@@F@@@@         AU,H1 A13,1,*X3 .   A14 = EXTENT(I)               *******QA
)@@G@@@F@@@@         MPYS  A4,A14 .      COMPUTE MULTIPLIER M(I) * EXTENT (I) QB
)@@G@@@F@@@@         IF    A4,GE,KEXTNT,I THEN,EXMPOV . -> MULTIPLIER OVERFLOWQC
)@@G@@@G@@@@         TLEM,XU X1,0,X3 .   I := I - 1, M(I) := M(I+1) * EXTENT(IQD
)@@G@@+1)   @C@@@@         GOTO  EXALL7 .      -> MORE DIMENSIONS @F@@@@ . ** QE
)@@G@@SET VIRTUAL ORIGIN IN DOPE VECTOR AND INITIALIZE ARRAY **   @F@@@@      QF
)@@G@@   STORE A7,ARDVOR,X1 .          IMPLANT VIRTUAL ORIGIN     @I@@@@      QG
)@@G@@   IF    SDARST*01000,OFF THEN,EXALL9 . -> FINISH NON-STRING ARRAY INITIQH
)@@G@@AL    @C@@@@ . ** ALLOCATE SECONDARY STRING DOPE VECTORS ** @H@@@@      QI
)@@G@@   ADD   A4,W1XU,X2 .  FIRST FREE WORD BEYOND SECONDARY DOPE VECTORS    QJ
)@@G@@@D@@@@EXALS3   LABEL .                   TRY TO FIND STORAGE@G@@@@      QK
)@@G@@   IF    A4,LT,ADPCND THEN,EXALS2 . -> STORAGE CAPACITY EXCEEDED? @D@@@@QL
)@@G@@         LOCAL .                   SAVE RETURN ADDRESS@D@@@@         LINQM
)@@G@@K    WROVFL .          GET MORE STORAGE   @G@@@@         UNSTK   X11 .  QN
)@@G@@           RECLAIM RETURN ADDRESS FROM STACK    @E@@@@         GOTO    EQO
)@@G@@XALS3 .          GO BACK AND TRY AGAIN    @E@@@@EXALS2   LABEL .        QP
)@@G@@           HERE WITH ENOUGH STORAGE @H@@@@         AU    A9,A4 .       AQQ
)@@G@@10 = FIRST WORD OF 1ST SECONDARY DOPE VECTOR    @F@@@@EXALS1   LABEL .  QR
)@@G@@           INITIALIZE A SECONDARY DOPE VECTOR   @F@@@@         STORE A10QS
)@@G@@,ARDVOR,X2 .         SET FLAGS AND WORD POINTER @F@@@@         STORE A11QT
)@@G@@,ARDVSZ,X2 .         ESTABLISH LENGTH FIELDS    @D@@@@         ADD   A10QU
)@@G@@,A1 .      ADD IN WHOLE WORDS USED  @H@@@@         TG,U    A4,3,*X2 .   QV
)@@G@@ HAS LAST SECONDARY DOPE VECTOR BEEN COMPLETED? @F@@@@         GOTO  EXAQW
)@@G@@LS1 .      NO, -> INITIALIZE NEXT DOPE VECTOR   @E@@@@ . ** COMPUTE END QX
)@@G@@OF STRING ARRAY AND SIZE TO INITIALIZE ** @F@@@@         SUB   A10,A9 . QY
)@@G@@     REMOVE FLAG AND CLASS INFORMATION    @F@@@@         STORE A10,A2 . QZ
)@@G@@     A2 - A(FIRST FREE WORD AFTER STRINGS)@F@@@@         SUB   A10,W1XU,RA
)@@G@@X2 . A10 = NUMBER OF WORDS TO INITIALIZE  @C@@@@         LOAD  R1,A10 . RB
)@@G@@     SET NUMBER FOR BT  @G@@@@         GOTO  EXCLR1 .      INITIALIZE STRC
)@@G@@RINGS (USING A3) AND RETURN   @C@@@@EXMPOV*  LABEL .             MULTIPLRD
)@@G@@IER OVERFLOW@^@@@@         ONER EREXMP,3 .@F@@@@ . ' MULTIPLIER OVERFLOWRE
)@@G@@ DURING INITIALIZATION OF ARRAY', SDX4.   @I@@@@/ . --------------------RF
)@@G@@--------------------------------------------------------    @E@@@@ . ***RG
)@@G@@ EXECUTION CONTROL:  ARRAY EXPRESSION BOUNDS CHECKER  @I@@@@ . ---------RH
)@@G@@--------------------------------------------------------------------    RI
)@@G@@@F@@@@ . CALLED BY COMPILED CODE TO DO SUBSCRIPTING IN ARRAY EXPRESSION RJ
)@@G@@@]@@@@ . INPUT:   @D@@@@ .       A1  = ADDRESS OF LIST OF FULL WORD SUBSRK
)@@G@@CRIPTS@C@@@@ .       A2  = ADDRESS OF ARRAY'S DOPE VECTOR   @E@@@@ .    RL
)@@G@@   X11 --->       SF        SELECTOR BITS WORD (SBW)  @E@@@@ .          RM
)@@G@@                 SH        SD POINTER FOR ARRAY @F@@@@ .                RN
)@@G@@           SH        DIMENSIONALITY OF ARRAY    @C@@@@ .                RO
)@@G@@           (RETURN TO HERE)   @H@@@@ .       THIS ROUTINE IS CALLED INDIRP
)@@G@@RECTLY THROUGH THE ADDRESS STORED AS THE  @G@@@@ . FIRST WORD IN THE TALRQ
)@@G@@LY CELL VECTOR (TCV).  USING THE U-FIELD OF THE @H@@@@ . LMJ WHICH CALLSRR
)@@G@@ THIS ROUTINE, THE ADDRESS OF THE TCV CAN BE CALCULATED.    @H@@@@ . AFTRS
)@@G@@ER THE FIRST TIME THROUGH EVALUATING THE ARRAY EXPRESSION, SUBSCRIPT    RT
)@@G@@@H@@@@ . CHECKING IS DISABLED BY CHANGING THE ADDRESS IN THE 1ST WORD OFRU
)@@G@@ THE TCV.   @F@@@@ . THE NEXT PART OF THE TCV CONTAINS A LIST OF BOUNDS RV
)@@G@@EXPRESSIONS @G@@@@ . (EXTENT - 1,LOWER BOUND) FOR THE REPRESENTATIVE AGGRW
)@@G@@REGATE EXPRESSION.@G@@@@ . THE REST OF THE TCV IS A LIST OF OFFSETS OF TRX
)@@G@@HE SUBSCRIPTS FROM THE  @F@@@@ . LOWER BOUND, GIVING THE STATUS OF WHICHRY
)@@G@@ ELEMENT OF THE ARRAY   @A@@@@ . EXPRESSION IS BEING EVALUATED.   @]@@@@RZ
)@@G@@ . ACTION:  @G@@@@ .       IF THE N-TH BIT OF THE SELECTOR BITS WORD (SBSA
)@@G@@W) IS SET THEN THE@D@@@@ . BOUNDS OF THE (N+1)TH SUBSCRIPT IN THE DOPE VSB
)@@G@@ECTOR @G@@@@ . ARE COMPARED FOR EQUALITY WITH THE APPROPRIATE BOUNDS EXPSC
)@@G@@RESSION     @F@@@@ . IN THE TCV.  IF THEY ARE NOT EQUAL, AN IMCOMPATIBLISD
)@@G@@TY MESSAGE  @G@@@@ . IS SENT, HOWEVER, IF THE EXTENTS ARE NOT EQUAL, A TSE
)@@G@@ERMINAL ERROR     @#@@@@ . IS SIGNALLED.  @]@@@@ . RETURN:  @B@@@@ .    SF
)@@G@@   A1  = ADDRESS OF DESIRED ELEMENT @ @@@@ . INTERNAL REGISTER USAGE:   SG
)@@G@@@E@@@@ .       X1  (A1) . -> LIST OF SUBSCRIPTS (1 IN INCREMENTOR)@D@@@@SH
)@@G@@ .       X2  (A2) . -> ORIGINAL DV (2 IN INCREMENTOR) @B@@@@ .       X3 SI
)@@G@@ = POINTER TO SD OF ARRAY     @D@@@@ .       X4      = LAST ADDRESS OF SSJ
)@@G@@UBSCRIPT LIST     @ @@@@ .       X5 = POINTER TO TCV  @^@@@@ .       A1 SK
)@@G@@ = SCRATCH  @B@@@@ .       A4  = SELECTOR BITS WORD (SBW)   @B@@@@EXTLYCSL
)@@G@@*  LLOC . ENTRY POINT FROM USER CODE@C@@@@         LMJ   X5,EXSAVE .   SSM
)@@G@@AVE REGISTERS     @F@@@@         LOAD  X11,W1XU+1,X11 .        RETURN POSN
)@@G@@INT SKIPS SBW     @I@@@@         LOCAL .                       SAVE RETUSO
)@@G@@RN POINT AFTER SUBSCRIPT COMPUTA    @D@@@@         SUB   X11,2,I .     PSP
)@@G@@OINT TO CALLER'S LMJ    @D@@@@         LOADXI A1,1,I .     SET SUBSCRIPTSQ
)@@G@@ INCREMENTOR@E@@@@         LOADXI A2,2,I .     SET DOPE VECTOR INCREMENTSR
)@@G@@OR    @F@@@@         LOAD  X3,W1H1+2,X11 .         POINTER TO SD OF ARRASS
)@@G@@Y     @F@@@@         LOAD  X4,W1XH2+2,X11 .        DIMENSIONALITY OF ARRST
)@@G@@AY - 1@F@@@@         ADD     X4,A1 .           POINT TO END OF SUBSCRIPTSU
)@@G@@ LIST @A@@@@         LOAD  A6,W1+1,X11 . SBW    @F@@@@         STORED A1SV
)@@G@@,X1 .      COPY SUBSCRIPTLIST AND DV POINTER    @E@@@@         LOAD  X5,SW
)@@G@@W1H2,X11 . ADDRESS FIELD OF LMJ = A (TCV) @F@@@@         SUB   X5,020000SX
)@@G@@0,I .          REMOVE INCREMENTOR (I) BIT @E@@@@         ADD     X5,W1U,SY
)@@G@@X10 .      ADD IN ADDRESS OF AREC   @D@@@@         LOADXI X5,1,I .     SSZ
)@@G@@ET INCREMENTOR OF TCV   @E@@@@EXTLY1   LABEL .             TOP OF LOOP TTA
)@@G@@O CHECK BOUNDS    @E@@@@         JNS   A6,EXTLY3 .   -> BIT ON, NON-STARTB
)@@G@@ SUBSCRIPT  @F@@@@         LOAD  A4,W1+1,*X5 . EXTENT-1,LOWER BOUND FROMTC
)@@G@@ TALLY CELL @D@@@@         USING WORD,X2 .     X2 = A(MPLR, BOUNDS) - 2 TD
)@@G@@@E@@@@         IF    A4,EQ,W1+3 THEN,EXTLY4 . -> BOUNDS MATCH     @C@@@@TE
)@@G@@         LOAD  A4,W1H1,X5 .  EXTENT-1 FROM TCV  @G@@@@         IF    A4,TF
)@@G@@EQ,W1H1+3 THEN,EXTLY5 . -> AT LEAST EXTENTS MATCH     @E@@@@         ONETG
)@@G@@R EREXTLY1,3 . EXTENT MISMATCH, TERMINAL ERROR  @H@@@@ . 'EXTENT OF ',SDTH
)@@G@@X3, 'DOES NOT MATCH EXTENTS IN THE REST OF THE EXPRESSION.' @F@@@@EXTLY5TI
)@@G@@   LABEL .             EXTENTS MATCH, LOWER BOUNDS DO NOT   @F@@@@      TJ
)@@G@@   USING SDSECT,X3 .   SEE IF WARNING GIVEN FOR THIS ARRAY  @H@@@@      TK
)@@G@@   IF    SD5MG2,ON,SDCLS5 THEN,EXTLY4 . -> WARNING MESSAGE ALREADY GIVENTL
)@@G@@@B@@@@         ONER EREXTLY2,0 . BOUNDS MISMATCH@E@@@@ . 'PL1/F INCOMPATTM
)@@G@@IBILITY.  BOUNDS OF ',SDX3, 'DO NOT MATCH @B@@@@ . BOUNDS IN THE REST OFTN
)@@G@@ THE EXPRESSION   @H@@@@         SET   SD5MG2,ON,SDCLS5 .      SET FLAG TO
)@@G@@TO INHIBIT FURTHER WARNINGS   @F@@@@EXTLY4   LABEL .             SEE IF TP
)@@G@@AT START OF SUBSCRIPT LIST    @F@@@@         USING WORD,X1 .     IS THISTQ
)@@G@@ FIRST TIME BOUNDS CHECKED?   @G@@@@         LOAD  A4,W1H2+3,X2 .       TR
)@@G@@   LOWER BOUND FROM DOPE VECTOR     @G@@@@         IF    A4,NE,W1H2 THENTS
)@@G@@,EXTLY7 . -> SECOND TIME THROUGH ARRAY    @E@@@@EXTLY3   LABEL .        TT
)@@G@@     BUMP TO NEXT POSITION IN LISTS @E@@@@         ADD   X2,2,I .      -TU
)@@G@@> NEXT POSITION IN DV - 2     @H@@@@         TLEM,XU X1,0,X4 .   INCREMETV
)@@G@@NT SUBSCRIPT LIST, CHECK IF END REACHED   @E@@@@         GOTO  EXTLY1 . TW
)@@G@@     NO, ->CHECK NEXT DIMENSION     @F@@@@         GOTO  EXSUB1 .      YTX
)@@G@@ES, -> COMPUTE SUBSCRIPT ADDRESS    @F@@@@EXTLY7   LABEL .             STY
)@@G@@ECOND TIME THROUGH ARRAY EXPRESSION @F@@@@         UNSTK X11 .         FTZ
)@@G@@ETCH CALLERS ADDRESS FROM PIT STACK @F@@@@         STACK X11 .         IUA
)@@G@@N CASE IT WAS DESTROYED BY ONER     @C@@@@         SUB   X11,2,I .     PUB
)@@G@@OINT TO TCV HEAD  @G@@@@         LOADA A4,EXSUB2 .   CHANGE TCV TO ELIMIUC
)@@G@@NATE BOUNDS CHECKING    @D@@@@         LOAD    X11,W1H2,X11 .    GET OFFUD
)@@G@@SET OF TCV  @E@@@@         SUB     X11,0200000,I .   TAKE OUT INDIRECT BUE
)@@G@@IT    @D@@@@         LOAD    X11,W1U,X10 .     ADD IN AREC OFFSET @D@@@@UF
)@@G@@         STORE A4,W1,X11 .   STORE NEW ADDRESS IN TCV @D@@@@         GOTUG
)@@G@@O  EXSUB1 .      -> COMPUTE SUBSCRIPTS    @H@@@@EXSUB2   LABEL .        UH
)@@G@@     ENTRY POINT AFTER SUBSCRIPT CHECKING TURNED OFF  @B@@@@         ADDUI
)@@G@@   X11,1,I .     SKIP SBW     @[@@@@.     @E@@@@.         THIS CODE IS MUJ
)@@G@@AGIC - - - CONTINUE TO NEXTXPAGE    @[@@@@.     @I@@@@/ . --------------UK
)@@G@@--------------------------------------------------------------    @C@@@@UL
)@@G@@ . ***EXECUTION CONTROL:  SUBSCRIPT COMPUTER ***@I@@@@ . ---------------UM
)@@G@@--------------------------------------------------------------    @C@@@@UN
)@@G@@ . CALLED BY COMPILED CODE TO DO SUBSCRIPTING   @C@@@@ . A1  = ADDRESS OUO
)@@G@@F LIST OF FULL WORD SUBSCRIPTS@B@@@@ . A2  = ADDRESS OF ARRAY'S DOPE VECUP
)@@G@@TOR   @D@@@@ . X11  --->            SH        SD POINTER FOR ARRAY@F@@@@UQ
)@@G@@ .                           SH        DIMENSIONALITY OF ARRAY - 1@C@@@@UR
)@@G@@ .                           (RETURN POINT)     @]@@@@ . ACTION:  @G@@@@US
)@@G@@ .       THE ADDRESS OF THE ARRAY ELEMENT SPECIFIED BY THE SUBSCRIPT    UT
)@@G@@@F@@@@ . VALUES AND THE CONTENTS OF THE DOPE VECTOR ARE USED TO COMPUTE UU
)@@G@@@D@@@@ . THE REAL ADDRESS OF THE SPECIFIED ARRAY ELEMENT.   @]@@@@ . RETUV
)@@G@@URN:  @B@@@@ .       A1  = ADDRESS OF DESIRED ELEMENT @ @@@@ . INTERNAL UW
)@@G@@REGISTER USAGE:   @B@@@@ .       X1  (A1)       = A(SUBSCRIPTS)   @B@@@@UX
)@@G@@ .       X2  (A2)       = A(DOPE VECTOR)  @D@@@@ .       X3             UY
)@@G@@     = SD POINTER FOR ARRAY   @F@@@@ .       X4                  = HIGHEUZ
)@@G@@ST ADDRESS IN SUBSCRIPT LIST  @F@@@@ .       X5                  = RETURVA
)@@G@@N ADDRESS FOR REGISTER SAVE   @F@@@@ .       X11                 = RETURVB
)@@G@@N ADDRESS (SAVED ON PIT STACK)@C@@@@ .       A1 TO A2            = WORK VC
)@@G@@REGISTERS   @C@@@@EXSUB*   LOCAL .             SAVE ENTRY POINT   @C@@@@VD
)@@G@@         LMJ   X5,EXSAVE .   SAVE REGISTERS USED@E@@@@         LOADXI A1VE
)@@G@@,1,I .     SET SUBSCRIPT LIST INCREMENTOR @E@@@@         LOADXI A2,2,I .VF
)@@G@@     SET DOPE VECTOR INCREMENTOR    @E@@@@         LOAD  X4,W1XH2,X11 . VG
)@@G@@         DIMENSIONALITY - 1   @E@@@@         ADD   X4,A1 .       TOP ADDVH
)@@G@@RESS OF SUBSCRIPT LIST  @D@@@@         LOAD  X3,W1H1,X11 . SD POINTER FOVI
)@@G@@R ARRAY     @E@@@@EXSUB1   LABEL .             ENTRY FROM TCV BOUNDS CHEVJ
)@@G@@CKING @G@@@@         STORED A1,X1              . CLEAR A1,A2 FOR OTHER PVK
)@@G@@URPOSES     @F@@@@         LOAD  A3,W1S1,X2 .  CHECK FLAG FOR UNALLOCATEVL
)@@G@@D ARRAY     @^@@@@         AND,U A3,1 .   @ @@@@         JNZ   A4,EXSUBUVM
)@@G@@ .    @G@@@@         LOAD  A1,W1,*X2 .   GET VIRTUAL ORIGIN AND ADVANCE VN
)@@G@@DV POINTER  @B@@@@EXSUB3   LABEL .             TOP OF LOOP  @D@@@@      VO
)@@G@@   LOAD  A5,W1,X1 .    PICK UP I-TH SUBSCRIPT   @D@@@@         LOAD  A3,VP
)@@G@@W1+1,X2 .  EXTENT(I)-1, LOWER BOUND @F@@@@         TLE,XU A5,0,*A3 .   CVQ
)@@G@@HECK SUBSCRIPT AGAINST LOWER BOUND  @D@@@@         GOTO  EXSUBL .      -VR
)@@G@@> SUBSCRIPT TOO LOW     @D@@@@         TG,XU  A5,0,A3            . CHECKVS
)@@G@@ HIGH BOUND @G@@@@         TNE,XU  A5,0,A3       . A5>A3 THEN INDEX OUT VT
)@@G@@OF BOUNDS-->FIX UP@D@@@@         GOTO  EXSUB4              . COMPUTE SUBVU
)@@G@@SCRIPT@D@@@@EXSUBH   LABEL .                   SUBSCRIPT TOO LARGE@D@@@@VV
)@@G@@         LA,XU  A5,0,A3            . USE UPPER BOUND  @D@@@@EXSUBE   LABVW
)@@G@@EL .             MERGE FOR ERROR MESSAGE  @F@@@@         ONUNIT  EREXSUBVX
)@@G@@1,ACCDSU,2  R,I,R  DEXWK1,4  DEXMAX,4     @B@@@@ . 'SUBSCRIPT IS OUT OF VY
)@@G@@BOUNDS IN ', SDX3.@F@@@@EXSUB4   LABEL .             MERGE WHEN SUBSCRIPVZ
)@@G@@T IS WITHIN RANGE @G@@@@         MPYS  A5,W1,*X2 .   A5 = MPLR(I) * SUBSWA
)@@G@@CRIPT(I), I := I + 1    @D@@@@         ADD   A1,A5 .       COMPUTE REAL WB
)@@G@@ADDRESS SUM @G@@@@         TLEM,XU  X1,0,X4          . CHECK FOR END OF WC
)@@G@@SS LIST,ADV PTR   @C@@@@         GOTO  EXSUB3 .      ->MORE SUBSCRIPTS  WD
)@@G@@@C@@@@         LINK  EXUNSV .      RESTORE REGISTERS  @E@@@@         JMPWE
)@@G@@   1 .           -> RETURN TO USER CODE CALLER  @C@@@@EXSUBL   LABEL .  WF
)@@G@@           SUBSCRIPT TOO LOW  @G@@@@         LOAD  A5,W1XH2+1,X2 .      WG
)@@G@@   USE SIGN EXTENDED LOWER BOUND    @E@@@@         GOTO  EXSUBE .      MWH
)@@G@@ERGE WITH ERROR PROCESSING    @E@@@@EXSUBU   LABEL .             UNINITIWI
)@@G@@ALIZED ARRAY REFERENCED @ @@@@         ONER EREXUD02,3 .    @A@@@@ . SDXWJ
)@@G@@3, ' HAS NOT BEEN ALLOCATED.' @I@@@@/ . --------------------------------WK
)@@G@@--------------------------------------------    @E@@@@ . *** EXECUTION CWL
)@@G@@ONTROL:  AGGREGATE TEMPORARY ALLOCATOR    @I@@@@ . ---------------------WM
)@@G@@--------------------------------------------------------    @E@@@@ . CALWN
)@@G@@LED BY COMPILED CODE TO ALLOCATE STORAGE FOR TEMPORARY@B@@@@ . ARGUMENT WO
)@@G@@TO A USER DEFINED FUNCTION.   @]@@@@ . INPUT:   @G@@@@ .       A1       WP
)@@G@@      = ADDRESS OF PARMS DV TEMPLATE IF ARGUMENT IS   @B@@@@ .          WQ
)@@G@@                   A CONSTANT @H@@@@ .                           = ADDREWR
)@@G@@SS OF DV OF REPRESENTATIVE DATA ITEM IN   @D@@@@ .                      WS
)@@G@@       ARGUMENT EXPRESSION    @D@@@@ .       A2             = ADDRESS OFWT
)@@G@@ STRING LENGTHS   @E@@@@ .       X11  --->      SF        SELECTOR BITS WU
)@@G@@WORD (SBW)  @E@@@@ .                           SH        PARAMETER SD POWV
)@@G@@INTER @E@@@@ .                           SH        PARAMETER DV LENGTH  WW
)@@G@@@C@@@@ .                           (RETURN TO HERE)   @]@@@@ . RETURN:  WX
)@@G@@@F@@@@ .       A1             = ADDRESS OF NEW DOPE VECTOR FOR ARGUMENT WY
)@@G@@@]@@@@ . ACTION:  @E@@@@ .       SPACE IS ALLOCATED FOR AN AGGREGATE DOPWZ
)@@G@@E VECTOR    @F@@@@ .       THE DOPE VECTOR IS INITIALIZED USING BOUNDS FXA
)@@G@@ROM THE     @F@@@@ . SUPPLIED DOPE VECTOR.  THE SELECTOR BITS ARE USED TXB
)@@G@@O DECIDE    @A@@@@ . WHICH BOUNDS ARE TO BE USED.     @G@@@@ .       EXAXC
)@@G@@LL0 IS USED TO COMPLETE THE ALLOCATION FOR THE ARGUMENT.    @ @@@@ . INTXD
)@@G@@ERNAL REGISTER USAGE:   @C@@@@ .       X9              = OLD AREPTR, A(NXE
)@@G@@EW DV)@C@@@@ .       A3-A4               = SCRATCH FOR IF'S @E@@@@ .    XF
)@@G@@   X8             = LIST OF MAXIMUM STRING LENGTHS    @D@@@@ .       X1 XG
)@@G@@             = POINTER TO NEW DOPE VECTOR @E@@@@ .       X6             XH
)@@G@@= A(REPRESENTATIVE DATA ITEM DV)    @C@@@@ .       A7              = SELXI
)@@G@@ECTOR BITS WORD   @C@@@@ .       A5              =SCRATCH FOR LENGTHS   XJ
)@@G@@@D@@@@ .       X7             =SAVE ADDRESS OF DV FOR RETURN@E@@@@ .    XK
)@@G@@   A1              =SCRATCH FOR TOP OF STACK CHECKING @A@@@@ .       A6 XL
)@@G@@   = SCRATCH FOR MOVES  @F@@@@ .       A15 [DEXWK1]        = SD POINTER XM
)@@G@@OF ORIGINAL ARGUMENT    @E@@@@ .       X4              = SD POINTER TO CXN
)@@G@@URRENT ELEMENT    @D@@@@EXTMP1*  LLOC .              ENTRY FROM USER CODXO
)@@G@@E     @F@@@@         LMJ   X5,EXMST .    SAVE REGISTERS IN ACTIVATION REXP
)@@G@@CORD  @C@@@@         LOADXM X9,AREPTR,X10 .        A(NEW DV)@G@@@@      XQ
)@@G@@   LOADXM X7,AREPTR,X10 .        SAVE ADDRESS FOR RETURN LATER    @C@@@@XR
)@@G@@         LOADXM X8,A2 .      A(LIST OF LENGTHS) @E@@@@         LOAD  X6,XS
)@@G@@A1 .       A(REPRESENTATIVE DATA ITEM DV) @F@@@@         LOAD  A1,W1H2+1XT
)@@G@@,X11 .         NEW DOPE VECTOR LENGTH     @D@@@@         ADD   A1,W1XU,XXU
)@@G@@9 .  X1  = NEW TOP OF STACK   @F@@@@         STORE A1,AREPTR,X10 .      XV
)@@G@@   UPDATE ACTIVATION RECORD   @E@@@@EXTMP2   LABEL .                   HXW
)@@G@@ERE TO LOOK FOR STORAGE @G@@@@         IF    A1,LT,ADPCND THEN,EXTMP3 . XX
)@@G@@->STORAGE CAPACITY EXCEEDED?  @D@@@@         LOCAL .                   SXY
)@@G@@AVE RETURN ADDRESS@D@@@@         LINK    WROVFL .          GET MORE STORXZ
)@@G@@AGE   @E@@@@         UNSTK   X11 .             RECLAIM RETURN ADDRESS   YA
)@@G@@@D@@@@         GOTO    EXTMP2 .          TRY TO FIT AGAIN   @D@@@@EXTMP3YB
)@@G@@   LABEL .                   GOT ENOUGH ROOM NOW@C@@@@         LOAD  A6,YC
)@@G@@W1,X11 .   SELECTOR BITS WORD @B@@@@         STORE A6,DEXWK2 .   SAVE SBYD
)@@G@@W     @F@@@@         LSDP  X4,W1H1+1,X11 . X4  = SD POINTER OF 'ARGUMENTYE
)@@G@@'     @D@@@@         LOAD  A15,W1XU,X4 . SAVE FOR LATER COMPARISON@E@@@@YF
)@@G@@ . ** FOLLOW POINTERS THROUGH STRUCTURE TO BASE ELEMENTS    @D@@@@EXTP11YG
)@@G@@   LABEL .             LOOK FOR BASE ELEMENT    @ @@@@         USING   SYH
)@@G@@DSECT,X4 .  @G@@@@         IF    SDSTRU,OFF,SDCLS4 THEN,EXTP12 . -> BASEYI
)@@G@@ ELEMENT FOUND    @D@@@@         LSDP  X4,SDSON,X4 . FOLLOW POINTER TO SYJ
)@@G@@ON    @D@@@@         GOTO  EXTP11 .      -> TEST SON FOR SON, ETC @D@@@@YK
)@@G@@ . ** ASSEMBLE DOPE VECTOR FOR TEMPORARY ARGUMENT **  @#@@@@EXTP12   LABYL
)@@G@@EL .  @D@@@@         LOAD  X1,W1XU,X9 .  BASE OF NEW DOPE VECTOR  @C@@@@YM
)@@G@@         LOAD  A7,DEXWK2 .   SELECTOR BITS WORD @F@@@@         IF    SDAYN
)@@G@@RST,OFF,SDCLS1 THEN,EXT111 . -> NON-STRINGS     @E@@@@         LOAD  A5,YO
)@@G@@W1,*X8 .   LENGTH OF TEMP STRING NEEDED   @D@@@@         TN    A5 .     YP
)@@G@@     NEGATIVE STRING LENGTH   @E@@@@         TG,U  A5,MXSTLN+1 . STRING YQ
)@@G@@LENGTH WITHIN BOUNDS?   @D@@@@         LINK  EXTMSL .      IMPROPER STRIYR
)@@G@@NG LENGTH   @G@@@@         STORE A5,W1H1+1,X1 .          SET MAXIMUM STRYS
)@@G@@ING LENGTH FIELD  @G@@@@         STORE A5,W1H2+1,X1 .          SET CURREYT
)@@G@@NT STRING LENGTH FIELD  @D@@@@EXT111   LABEL .             MERGE FOR NONYU
)@@G@@-STRINGS    @G@@@@         IF    SDARRY,ON,SDCLS2 THEN,EXTP08 . -> PARAMYV
)@@G@@ETER IS ARRAY     @G@@@@         IF    SDARST,ON,SDCLS1 THEN,EXTP09 . ->YW
)@@G@@ SCALER STRING PARAMETER@E@@@@         ADD   X9,1,I .      SCALER, NON-SYX
)@@G@@TRING, FULLWORD DV@[@@@@.     @D@@@@.        MIGHT THIS SUPPOSED TO BE JYY
)@@G@@NS?   PRM 5/22/75 @[@@@@.     @E@@@@         JNZ   A7,EXTP04 .   -> ARGUYZ
)@@G@@MENT CAME FROM ARRAY    @E@@@@         ADD   X6,1,I .      SCALER, NON-SZA
)@@G@@TRING ARGUMENT    @F@@@@         GOTO  EXTP10 .      -> ALLOCATE SPACE FZB
)@@G@@OR DUMMY ARGUMENT @#@@@@EXTP08   LABEL .  @G@@@@         LOAD  A5,SDNDIMZC
)@@G@@,X4 .          NUMBER OF DIMENSIONS IN PARAMETER@F@@@@ . ** MOVE SELECTEZD
)@@G@@D BOUNDS PAIRS FROM ARGUMENT DOPE VECTOR TO     @ @@@@ .    TEMPORARY DOZE
)@@G@@PE VECTOR **@#@@@@EXTP05   LABEL .  @F@@@@         ADD   X9,2,I .      BZF
)@@G@@UMP POINTER TO NEXT SLOT IN TEMP DV @#@@@@EXTP03   LABEL .  @G@@@@      ZG
)@@G@@   ADD   X6,2,I .      BUMP POINTER TO NEXT SLOT IN ARGUMENT DV   @F@@@@ZH
)@@G@@         JNS   A7,EXTP03 .   SHIFT SBW, -> CONSTANT SUBSCRIPT     @F@@@@ZI
)@@G@@ . * COPY BOUNDS OF ALL STARRED BOUNDS IN ARGUMENT SUB-LIST *     @C@@@@ZJ
)@@G@@         LOAD  A6,W1+1,X6 .  ARGUMENT BOUNDS IN @C@@@@         STORE A6,ZK
)@@G@@W1+1,X9 .  TEMPORARY'S BOUNDS @E@@@@         LOOP  A5,EXTP05 .   -> REPEZL
)@@G@@AT UNTIL ENOUGH STARRED @F@@@@ .                           BOUNDS HAVE BZM
)@@G@@EEN COPIED INTO TEMP    @E@@@@ . * SKIP NON-STARRED BOUNDS IN ARGUMENT TZN
)@@G@@O FIND NEXT DV    @F@@@@EXTP09   LABEL .             MERGE FROM SCALER SZO
)@@G@@TRING PARAMETER   @F@@@@         ADD   X9,2,I .      BUMP POINTER TO NEXZP
)@@G@@T DOPE VECTOR     @H@@@@EXTP04   LABEL .             MERGE WHEN ARGUMENTZQ
)@@G@@ IS ARRAY, PARM IS SCALER     @F@@@@         ADD   X6,2,I .      BUMP POZR
)@@G@@INTER NEXT SLOT IN ARGUMENT DV@F@@@@         JNS   A7,EXTP04 .   SHIFT, ZS
)@@G@@-> LOOP WHILE CONSTANT SS     @C@@@@ . ** ALLOCATE STORAGE FOR CURRENT BZT
)@@G@@ASE ELEMENT @#@@@@EXTP10   LABEL .  @F@@@@         LINK  EXALL0 .      -ZU
)@@G@@> FINISH ALLOCATION OF CURRENT ITEM @F@@@@EXTP06   LABEL .             CZV
)@@G@@OMPLETE SEARCH THROUGH STRUCTURE    @^@@@@         USING WORD,X4 .@F@@@@ZW
)@@G@@         IF    A15,EQ,W1XU THEN,EXTP07 . -> ALLOCATION COMPLETE   @ @@@@ZX
)@@G@@         USING SDSECT,X4 .    @D@@@@         IF    SDBROT,ZERO THEN,EXTPZY
)@@G@@21 . -> NO BROTHER@F@@@@         LSDP  X4,SDBROT,X4 .          TEST BROTZZ
)@@G@@HER FOR SON, ETC  @^@@@@         GOTO  EXTP11 . @#@@@@EXTP21   LABEL .  AA
)@@G@@@D@@@@         LSDP  X4,SDDAD,X4 . FOLLOW FATHER'S POINTER  @E@@@@      AB
)@@G@@   GOTO  EXTP06 .      -> TEST FATHER FOR BROTHER, ETC@B@@@@EXTP07   LABAC
)@@G@@EL .             FINISH UP    @E@@@@         LOAD  A1,W1XU,X7 .  RETURN AD
)@@G@@ADDRESS OF TEMPORARY DV @C@@@@         LMJ   X5,EXML .     RESTORE REGISAE
)@@G@@TERS  @F@@@@         GOTO  2,X11 .       RETURN USING SAVED ADDRESS FROMAF
)@@G@@ AR   @I@@@@/ . --------------------------------------------------------AG
)@@G@@--------------------    @E@@@@ . *** EXECUTION CONTROL:  VARAIBLE DATA AAH
)@@G@@REA MANAGEMENT ***@I@@@@ . ---------------------------------------------AI
)@@G@@--------------------------------    @A@@@@ . OBTAIN NEW VARIABLE DATA ARAJ
)@@G@@EA    @ @@@@         USING AREC,X10 .     @E@@@@EXGDVA*  LLOC .         AK
)@@G@@     ENTRY POINT FROM USER CODE     @H@@@@         LOAD  A1,AREPTR,X10 .AL
)@@G@@         END OF CURRENT VARIABLE DATA AREA (VDA)@F@@@@         LOAD  R1,AM
)@@G@@ARVDAP,X10 .         SAVE END OF PREVIOUS VDA   @C@@@@         STORE R1,AN
)@@G@@W1,A1 .   IN NEXT FREE WORD   @H@@@@         STORE A1,ARVDAP,X10 .      AO
)@@G@@   VDA POINTER POINTS TO THAT POINTER     @E@@@@         ADD   A1,1,I . AP
)@@G@@NEW VDA STARTS JUST BEYOND POINTER  @G@@@@         STORE A1,AREPTR,X10 .AQ
)@@G@@         END PTR POINTS TO FIRST FREE WORD@C@@@@         LJMP .         AR
)@@G@@     -> RETURN TO CALLER@H@@@@/ . --------------------------------------AS
)@@G@@------------------------------------@E@@@@ . CALLED BY CODE FOR SOURCE "AT
)@@G@@STOP" OR "EXIT" STATEMENT     @H@@@@ . ---------------------------------AU
)@@G@@------------------------------------------@#@@@@EXSTOP*  LABEL .  @F@@@@AV
)@@G@@         STORE   R11,ARSTMT .      SET STATEMENT NUMBER FOR PMD   @^@@@@AW
)@@G@@ . 'PROGRAM IS STOPPED.'@G@@@@   ONUNIT  EREXSTOP,ACCDFN,0,I  PLEXND,PLEAX
)@@G@@XND,PLEXND  DEXWK1,0  DEXMAX,0@C@@@@ . ** ROUTINE TO HANDLE IMPROPER STRAY
)@@G@@ING LENGTHS @B@@@@EXTMSL   LOCAL .             ENTRY POINT  @ @@@@      AZ
)@@G@@   ONER EREXTMSL,2 .    @G@@@@ . 'STRING LENGTH ', NUMA5, ' OF ',SDX4, 'BA
)@@G@@ IS IMPROPER.  80 IS USED.'   @D@@@@         LOAD  A5,80,I .     CORRECTBB
)@@G@@ION STRING LENGTH @C@@@@         JMP .               -> RETURN TO CALLERBC
)@@G@@@I@@@@/. ---------------------------------------------------------------BD
)@@G@@--------------    @C@@@@ . ** PREPARE MULTIPLE SUBSCRIPT LIST ENTRIES **BE
)@@G@@@I@@@@ . ---------------------------------------------------------------BF
)@@G@@--------------    @F@@@@ . ADDS A LIST OF TALLY CELL INDICIES TO A LIST BG
)@@G@@OF LOWER BOUNDS   @C@@@@ . TO PRODUCE A LIST OF FULLWORD SUBSCRIPTS     BH
)@@G@@@]@@@@ . INPUT:   @A@@@@ .       A1 = A(TALLY CELL INDEX)   @A@@@@ .    BI
)@@G@@   A2 = A(NEXT LOWER BOUND)   @B@@@@ .       A3 = A(NEXT SUBSCRIPT LIST BJ
)@@G@@SLOT) @E@@@@ .       R1 = LOOP COUNT = NUMBER OF CONSECUTIVE STARS - 1  BK
)@@G@@@A@@@@ . DESTROYS:  A1, A2, A3, AND R1    @B@@@@EXPMSL*  LLOC .         BL
)@@G@@     ENTRY POINT  @D@@@@         LOADXI A1,1,I .     TALLY CELL INCREMENBM
)@@G@@TOR   @D@@@@         LOADXI A2,2,I .     DOPE VECTOR INCREMENTOR  @E@@@@BN
)@@G@@         LOADXI A3,1,I .     SUBSCRIPT LIST INCREMENTOR     @#@@@@EXPMS1BO
)@@G@@   LABEL .  @E@@@@         LOAD  A4,W1XH2,*A1 .          TALLY CELL OFFSBP
)@@G@@ET    @H@@@@         ADD   A4,W1XH2,*A2 .          TRUE SUBSCRIPT VALUE BQ
)@@G@@FROM LOWER BOUND  @D@@@@         STORE A4,W1,*A3 .   PUT IN SUBSCRIPT LIBR
)@@G@@ST    @D@@@@         LOOP  R1,EXPMS1 .   -> MORE STAR SUBSCRIPTS  @D@@@@BS
)@@G@@         LJMP .              -> RETURN TO USER CODE   @I@@@@ . ---------BT
)@@G@@--------------------------------------------------------------------    BU
)@@G@@@D@@@@ . ** USER CODE CORRECTION FOR NEGATIVE EXTENT - 1    @I@@@@ . ---BV
)@@G@@------------------------------------------------------------------------BW
)@@G@@--    @H@@@@EXJGDE*  LOCAL .             EXTENT - 1 WAS COMPUTED NEGATIVBX
)@@G@@E IN USER CODE    @E@@@@         SUB   X11,2,I .     GET ADDRESS OF JGD BY
)@@G@@BEFORE LINK @G@@@@         LOAD  A3,W1Q2,X11 . GET REGISTER ADDRESS CONTBZ
)@@G@@AINING EXTENT - 1 @E@@@@         SRB   A3,4 .        RIGHT JUSTIFY REGISCA
)@@G@@TER ADDRESS @C@@@@         LOAD  A4,W1,A3 .    IMPROPER EXTENT - 1@D@@@@CB
)@@G@@         ADD   A4,1,I .      COMPUTE IMPROPER EXTENT  @F@@@@         ONUCC
)@@G@@NIT  EREXJGDE,ACCDSU,2  R,I,R  DEXWK1,4  DEXMAX,4     @C@@@@.        USECD
)@@G@@ LOWER BOUND : LOWERBOUND + 10 .    @H@@@@ . 'UPPER BOUND', NUMA4, 'WAS CE
)@@G@@LESS THAN LOWER BOUND OF 1.  (1:10) IS USED.'   @D@@@@         LOAD  A4,CF
)@@G@@9,I .      SET REPAIRED EXTENT - 1  @C@@@@         STORE A4,W1,A3 .    RCG
)@@G@@EPLACE IN REGISTER@B@@@@         JMP . -> RETURN TO USER CODE     @I@@@@CH
)@@G@@/. ---------------------------------------------------------------------CI
)@@G@@--------    @B@@@@ . ** FIXED BINARY HALFWORD OVERFLOW **   @I@@@@ . ---CJ
)@@G@@------------------------------------------------------------------------CK
)@@G@@--    @D@@@@ . CALLED BY USER CODE WHEN VALUE IS TOO LARGE TO     @C@@@@CL
)@@G@@ . FITTED INTO A FIXED BINARY HALFWORD (17,0).  @F@@@@ . A CORRECTION ISCM
)@@G@@ MADE TO THE REGISTER CONTAINING THE OPERAND    @C@@@@EXHWOV*  LOCAL .  CN
)@@G@@           SAVE RETURN ADDRESS@G@@@@         SUB   X11,2,I .     GET REGCO
)@@G@@ISTER NUMBER FROM TG,U A,0400000    @E@@@@         LOAD  A3,W1Q2,X11 . RCP
)@@G@@EGISTER  NUMBER WITH SHIFT    @E@@@@         SRB   A3,4 .        RIGHT JCQ
)@@G@@USTIFY REGISTER NUMBER  @D@@@@         LOAD  A4,W1+A0,A3 . FETCH INCORRECR
)@@G@@CT VALUE    @F@@@@         ONUNIT  EREXHWOV,ACCDSI,2  R,I,JMP  DEXWK1,4 CS
)@@G@@ DEXMAX,4   @E@@@@ . 'LENGTH OR BOUND', NUMA4, ' IS TOO LARGE.  10 IS USCT
)@@G@@ED.'  @D@@@@         LOAD  A4,10,I .     USE CORRECTION OF 10     @E@@@@CU
)@@G@@         STORE A4,W1+A0,A3 . SET CORRECTION INTO REGISTER   @C@@@@      CV
)@@G@@   JMP . -> RETURN TO CALLER IN USER CODE @D@@@@EXMST*   LLOC .         CW
)@@G@@     RETURN ADDRESS IN X5     @F@@@@         STORE R11,ARSTMT,X10 .     CX
)@@G@@    SAVE STATEMENT NUMBER     @G@@@@         STORE X11,ARSV11,X10 .     CY
)@@G@@   SAVE MODIFIERS OF BASE REGISTERS @ @@@@         STORE X7,ARSVX7,X10 .CZ
)@@G@@@ @@@@         STORE X8,ARSVX8,X10 .@ @@@@         STORE X9,ARSVX9,X10 .DA
)@@G@@@F@@@@         STORED A5,ARSVA5,X10 .        SAVE 'A' REGISTER PAIRS    DB
)@@G@@@A@@@@         STORED A7,ARSVA7,X10 .     @A@@@@         STORED A9,ARSVADC
)@@G@@9,X10 .     @A@@@@         STORED A11,ARSA11,X10 .    @A@@@@         STODD
)@@G@@RED A13,ARSA13,X10 .    @A@@@@         STORED A15,ARSA15,X10 .    @E@@@@DE
)@@G@@         STORE X1,ARSAX1,X10 .         SAVE I/O REGISTERS   @ @@@@      DF
)@@G@@   STORE X2,ARSAX2,X10 .@ @@@@         STORE X3,ARSAX3,X10 .@F@@@@      DG
)@@G@@   STORE   X6,ARSVX6,X10 .    SAVE MANAGED 'X' REGISTERS    @A@@@@      DH
)@@G@@   STORE   X4,ARSVX4,X10 .    @C@@@@         GOTO  0,X5 .        ->RETURDI
)@@G@@N TO CALLER @D@@@@EXML*    LLOC .              RETURN ADDRESS IN X5     DJ
)@@G@@@F@@@@         LOAD  R11,ARSTMT,X10 .         RESTORE STATEMENT NUMBER  DK
)@@G@@@H@@@@         LOADXM X11,ARSV11,X10 .       RESTORE MODIFIERS OF BASE RDL
)@@G@@EGISTERS    @A@@@@         LOADXM X7,ARSVX7,X10 .     @A@@@@         LOADM
)@@G@@DXM X8,ARSVX8,X10 .     @A@@@@         LOADXM X9,ARSVX9,X10 .     @F@@@@DN
)@@G@@         LOADD A5,ARSVA5,X10 .         RESTORE 'A' REGISTER PAIRS @ @@@@DO
)@@G@@         LOADD A7,ARSVA7,X10 .@ @@@@         LOADD A9,ARSVA9,X10 .@A@@@@DP
)@@G@@         LOADD A11,ARSA11,X10 .     @A@@@@         LOADD A13,ARSA13,X10 DQ
)@@G@@.     @A@@@@         LOADD A15,ARSA15,X10 .     @E@@@@         LOAD  X1,DR
)@@G@@ARSAX1,X10 .         RELOAD I/O REGISTERS @ @@@@         LOAD  X2,ARSAX2DS
)@@G@@,X10 .@ @@@@         LOAD  X3,ARSAX3,X10 .@F@@@@         LOAD    X6,ARSVDT
)@@G@@X6,X10 .   RELOAD MANAGED 'X' REGISTERS   @A@@@@         LOAD    X4,ARSVDU
)@@G@@X4,X10 .    @C@@@@         GOTO  0,X5 .        -> RETURN TO CALLER@D@@@@DV
)@@G@@EXSAVE*  LLOC .              RETURN ADDRESS IN X5     @ @@@@         STODW
)@@G@@RE X1,DEXSVE .    @ @@@@         STORE X2,DEXSVE+1 .  @ @@@@         STODX
)@@G@@RE X3,DEXSVE+2 .  @ @@@@         STORED A5,DEXSVE+3 . @E@@@@         STODY
)@@G@@RE   X4,DEXSVE+5 .     SAVE MANAGED 'X' REG     @^@@@@         GOTO  0,XDZ
)@@G@@5 .   @D@@@@EXUNSV*  LLOC .              RETURN ADDRESS IN X11    @ @@@@EA
)@@G@@         LOAD  X1,DEXSVE .    @ @@@@         LOAD  X2,DEXSVE+1 .  @ @@@@EB
)@@G@@         LOAD  X3,DEXSVE+2 .  @ @@@@         LOADD A5,DEXSVE+3 .  @F@@@@EC
)@@G@@         LOAD    X4,DEXSVE+5 .     RELOAD MANAGED 'X' REGISTER    @#@@@@ED
)@@G@@         LJMP .   @I@@@@/ . --------------------------------------------EE
)@@G@@--------------------------------    @A@@@@ . *** CROSS SECTION COMPUTER EF
)@@G@@***   @ @@@@ . CALLED BY COMPILIED CODE   @C@@@@ . A1  = ADDRESS OF LISTEG
)@@G@@ OF FULLWORD SUBSCRIPTS @E@@@@ . A2  = ADDRESS OF DOPE VECTOR FROM WHICHEH
)@@G@@ CROSS SECTION    @A@@@@ .            IS TO BE COMPUTED     @F@@@@ . X11EI
)@@G@@ --->             W          (FLAG BITS) SELECTOR BITS WORD @D@@@@ .    EJ
)@@G@@                       H1        (SD POINTER)   @H@@@@ .                EK
)@@G@@           XH2       (NUM OF DIM - 1) FOR COMPATIBILITY     @C@@@@ .    EL
)@@G@@                       (RETURN POINT)     @E@@@@ . NOTE:  IN FLAG BIT WOEM
)@@G@@RD, BIT N IS ON IF SUBSCRIPT N + 1  @B@@@@ .       IN SUPPLIED LIST IS NEN
)@@G@@ON-STAR     @]@@@@ . ACTION:  @F@@@@ .       CREATES A DOPE VECTOR WHICHEO
)@@G@@ MAY BE USED TO REFERENCE     @F@@@@ . THE DESIGNATED CROSS-SECTION IN TEP
)@@G@@HE SAME MANNER AS FULL ARRAYS @]@@@@ . RETURN:  @E@@@@ .       A1       EQ
)@@G@@      = ADDRESS OF CREATED DOPE VECTOR    @ @@@@ . INTERNAL REGISTER USAER
)@@G@@GE:   @F@@@@ .       X1  (A1)       -> LIST OF SUBSCRIPTS (1 IN INCREMENES
)@@G@@TOR)  @F@@@@ .       X2  (A2)       -> ORIGINAL DV        (2 IN INCREMENET
)@@G@@TOR)  @E@@@@ .       X3                        NUMBER OF DIMENSIONS     EU
)@@G@@@E@@@@ .       X5                        SAVES CURRENT DV POINTER @C@@@@EV
)@@G@@ .       A1                        SD POINTER   @H@@@@ .       A2       EW
)@@G@@                 POINTS TO CREATED SD     (2 IN INCREMENTO  @H@@@@ .    EX
)@@G@@   A3                        SCRATCH CALCULATIONS, LOWER AND UPPER BOU  EY
)@@G@@@D@@@@ .       A4                        SCRATCH, MULTIPLIER@F@@@@ .    EZ
)@@G@@   A5                        VIRTUAL ORIGIN ACCUMULATION    @E@@@@ .    FA
)@@G@@   A6                        SELECTOR BITS WORD (SBW) @I@@@@ . ---------FB
)@@G@@--------------------------------------------------------------------    FC
)@@G@@@D@@@@EXCRSC*  LOCAL .             ENTRY FROM COMPILED CODE @D@@@@      FD
)@@G@@   LMJ   X5,EXSAVE .   SAVE WORKSPACE REGISTERS @F@@@@         LOADXI A1FE
)@@G@@,1,I .     SET TO ADVANCE SUBSCRIPT LIST POINTER@G@@@@         LOADXI A2FF
)@@G@@,2,I .     SET TO ADVANCE ORIGINAL DOPE VECTOR POINTER@E@@@@         STOFG
)@@G@@RED A1,X1 .      CLEAR A1, A2 FOR OTHER PURPOSES@D@@@@         LOAD  A6,FH
)@@G@@W1,X11 .   SBW = SELECTOR BITS WORD @B@@@@         STORE A6,DEXWK3 .   SFI
)@@G@@AVE SBW     @E@@@@         LOAD  R1,W1XH2+1,X11 .        GET NUM OF DIMSFJ
)@@G@@ - 1  @F@@@@         LOAD  A1,W1H1+1,X11 .         SD POINTER TO ARGUMENFK
)@@G@@T     @D@@@@         STORE A1,DEXWK1 .   SAVE FOR LATER COMPARISON@G@@@@FL
)@@G@@         LOADXM A2,AREPTR,X10 .        FIRST AVAILABLE WORD ON STACK    FM
)@@G@@@D@@@@         STORE A2,DEXWK2 .   SAVE TO LOAD A1 AT END   @G@@@@EXCRS1FN
)@@G@@   LABEL .             FOLLOW POINTERS THROUGH SD'S OF STRUCTURE  @C@@@@FO
)@@G@@         USING SDSECT,A1 .   TO BASIC ELEMENTS  @G@@@@         IF    SDSFP
)@@G@@TRU,OFF,SDCLS4 THEN,EXCRS2 . -> BASE ELEMENT FOUND    @D@@@@         LOAFQ
)@@G@@D  A1,SDSON,A1 . FOLLOW SD POINTER TO SON @C@@@@         GOTO  EXCRS1 . FR
)@@G@@     ->CHECK THE SON    @G@@@@EXCRS2   LABEL .             CONSTRUCT DOPFS
)@@G@@E VECTOR FOR CROSS SECTION    @C@@@@ .                           OF THISFT
)@@G@@ BASE ARRAY @A@@@@         LOAD  A6,DEXWK3 .   SBW    @C@@@@         LOAFU
)@@G@@D  X3,R1 .       GET LOOP COUNT     @E@@@@         LOAD  X5,A2 .       SFV
)@@G@@AVE START OF DOPE VECTOR (NEW)@E@@@@         LOAD  A5,W1,X2 .    SAVE ORFW
)@@G@@IGINAL VIRTUAL ORIGIN   @D@@@@         LOAD  A3,W1+1,*X2 . TRANSFER STRIFX
)@@G@@NG LENGTHS  @C@@@@         STORE A3,W1+1,*A2 . TO NEW DOPE VECTOR @#@@@@FY
)@@G@@EXCRS3   LABEL .  @H@@@@         JNS   A6,EXCRS4 .   -> RIGHTMOST SBW BIFZ
)@@G@@T ON, SUBSCRIPT IS NON-STAR   @F@@@@ . MULTIPLIER AND BOUNDS OF STARRED GA
)@@G@@SUBSCRIPT BECOME MULTIPLIER   @B@@@@ . AND BOUNDS OF CROSS SECTION DOPE GB
)@@G@@VECTOR@G@@@@         LOADD A3,W1,*X2 .   COPY MULTIPLIER, EXTENT-1, AND GC
)@@G@@LOWER BOUND @F@@@@         STORED A3,W1,*A2 .  MOVING POINTER TO NEXT SLGD
)@@G@@OT IN NEW DV@G@@@@         LOADXM  X1,W1U+1,X1 .     BUMP TO NEXT SLOT IGE
)@@G@@N SUBSCRIPT LIST  @E@@@@EXCRS8   LABEL .                   TRY FOR MORE GF
)@@G@@STORAGE     @D@@@@         LOAD    A4,W1U,A2 .       SEE IF IT WILL FIT GG
)@@G@@@E@@@@         IF    A4,LT,ADPCND THEN,EXCRS5 . ->WILL IT FIT?    @E@@@@GH
)@@G@@         LINK    WROVFL .          TRY TO GET MORE STORAGE  @E@@@@      GI
)@@G@@   GOTO  EXCRS8 .      -> STILL WITHIN STACK BOUNDS   @#@@@@EXCRS4   LABGJ
)@@G@@EL .  @D@@@@         LOAD  A4,W1,*X1 .   PICK UP SUBSCRIPT VALUE  @E@@@@GK
)@@G@@         LOAD  A3,W1+1,X2 .  GET EXTENT-1 AND LOWER BOUND   @H@@@@      GL
)@@G@@   TLE,XU A4,0,*A3 .TEST SUBSCRIPT AGAINST LOWER BOUND AND COMPUTE UPPERGM
)@@G@@@D@@@@         GOTO  EXCRCL .      -> SUBSCRIPT TOO LOW     @^@@@@      GN
)@@G@@   USING WORD,A3 .@F@@@@         IF    A4,GE,W1XU+1 THEN,EXCRCU . -> SUBGO
)@@G@@SCRIPT TOO HIGH   @E@@@@EXCRSE   LABEL .             MERGE AFTER ERROR CGP
)@@G@@ORRECTION   @H@@@@         MPYS  A4,W1,*X2 .   SUBSCRIPT*MULTIPLIER, ADVGQ
)@@G@@ANCE OLD DV POINTER     @E@@@@         ADD   A5,A4 .       ACCUMULATE WIGR
)@@G@@TH VIRTUAL ORIGIN @#@@@@EXCRS5   LABEL .  @E@@@@         LOOP  X3,EXCRS3GS
)@@G@@ .   -> REPEAT FOR EACH SUBSCRIPT   @D@@@@         STORE A5,W1,*X5 .   IGT
)@@G@@NSERT NEW VIRTUAL ORIGIN@F@@@@         IF    A2,NE,X5 THEN,EXCRS6 . -> CGU
)@@G@@ROSS SECTION IS AN ARRAY@ @@@@         USING SDSECT,A1 .    @E@@@@      GV
)@@G@@   IF    SDARST,ON,SDCLS1 THEN,EXCRS6 . -> STRING     @F@@@@         SUBGW
)@@G@@   A2,1,I .      SCALER, NON-STRING USES ONLY 1 WORD  @I@@@@EXCRS6   LABGX
)@@G@@EL .             CONTINUE SEARCHING THROUNG STRUCTURE FOR BASE ELEME    GY
)@@G@@@H@@@@         IF    A1,EQ,DEXWK1 THEN,EXCRS7 . -> WE'RE BACK TO ORIGINAGZ
)@@G@@L SD, DONE  @F@@@@         IF    SDBROT,NZERO THEN,EXCRS9 . -> FOLLOW SDHA
)@@G@@ TO BROTHER @E@@@@         LOAD  A1,SDDAD,A1 . -> TEST FATHER FOR BROTHEHB
)@@G@@R, ETC@^@@@@         GOTO  EXCRS6 . @#@@@@EXCRS9   LABEL .  @G@@@@      HC
)@@G@@   LOAD  A1,SDBROT,A1 .          FOLLOW SD POINTER TO BROTHER     @^@@@@HD
)@@G@@         GOTO  EXCRS1 . @#@@@@EXCRS7   LABEL .  @^@@@@         LOADXI A2HE
)@@G@@,0,I .@F@@@@         TNG,XH2 A2,DEXMAX-(IN 63,H2,1,0) . TEST FOR NEW STAHF
)@@G@@CK MAX@D@@@@         STORE A2,DEXMAX .   SET NEW MAX STACK HEIGHT @E@@@@HG
)@@G@@         STORE A2,AREPTR .   NEW TOP OF ACTIVATION RECORD   @D@@@@      HH
)@@G@@   LOAD  A1,DEXWK2+FH2 .         POINT TO NEW DV@^@@@@         LINK  EXUHI
)@@G@@NSV . @F@@@@         JMP   2 .           -> RETURN SKIPPING ARGUMENT LISHJ
)@@G@@T     @#@@@@EXCRCL   LABEL .  @C@@@@         LOAD  A4,W1XU,X2 .  USE LOWHK
)@@G@@ER BOUND    @#@@@@EXCRCE   LABEL .  @D@@@@         LOAD    X4,X1 .      HL
)@@G@@     HOLD FOR LATER     @E@@@@         LOAD    X1,R1 .           GET NUMHM
)@@G@@BER OF DIMS-1     @E@@@@         SUB     X1,W1U,X3 .       SUB OFF NUMBEHN
)@@G@@R LEFT-1    @D@@@@         ADD     X1,1,I .          MAKE ONE ORIGIN    HO
)@@G@@@E@@@@         ONUNIT  EREXSB,ACCDSU,2  R,I,R  DEXWK1,4  DEXMAX,4 @D@@@@HP
)@@G@@         LOAD    X1,X4 .           RECLAIM REGISTER   @E@@@@ . 'SUBSCRIPHQ
)@@G@@T ', X1, ' OF ', SDA1, ' IS OUT OF BOUNDS.'     @C@@@@         GOTO  EXCHR
)@@G@@RSE .      -> RETURN TO CALLER@#@@@@EXCRCU   LABEL .  @C@@@@         LOAHS
)@@G@@D  A4,W1XU,A3 .  USE UPPER BOUND    @^@@@@         GOTO  EXCRCE . @E@@@@HT
)@@G@@         END . EXECUTION DRIVER AND ARRAY SERVICE ROUTINES  ___         HU
)@@G@@*[S@@@*SDFF*@C@@@U.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@UHV
)@@G@@.     @D@@@U.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@UHW
)@@G@@.     @ @@@U.        MARVIN V. ZELKOWITZ  @B@@@U.        DEPARTMENT OF CHX
)@@G@@OMPUTER SCIENCE   @A@@@U.        UNIVERSITY OF MARYLAND     @B@@@U.     HY
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@U.     @G@@@U.        PERMISSIOHZ
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@U.   REPRESENIA
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@U.     @G@@@U.     IB
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@UIC
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDID
)@@G@@@E@@@U.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@UIE
)@@G@@.     @F@@@U.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDIF
)@@G@@ED:   @[@@@U.     @G@@@U.        (A) ANY RESULTING PROGRAM, OR REPORT, PIG
)@@G@@APER OR DOCUMENTATION   @G@@@U.        DESCRIBING SUCH PROGRAM WILL CLEAIH
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@U.        IS A DIALECT OF PLUM OR IS II
)@@G@@DERIVED FROM PLUM, AND  @[@@@U.     @G@@@U.        (B) ALL SUCH MODIFICAIJ
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@U.        OF ERRORS IN THIK
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@U.        A BRIEF DESCRIPIL
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@U.        TO THE UNIM
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@U.     @F@@@U.        (C) NO PROGRAMSIN
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@U.        WITHOUT WRITTENIO
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@U.     @F@@@U.     IP
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@U.     IQ
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@UIR
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     IS
)@@G@@@E@@@U.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@UIT
)@@G@@.     @G@@@U.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERIU
)@@G@@ ITSELF,    @F@@@U.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN IV
)@@G@@USING PLUM. @E@@@U.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USIW
)@@G@@ER TO @F@@@U.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRIX
)@@G@@ODUCT @G@@@U.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT IY
)@@G@@DEVELOPED   @#@@@U.   FROM PLUM.    @[@@@U.     @[@@@U.     @[@@@U.     IZ
)@@G@@@[@@@U.     @[@@@U.     @[@@@U/.    @#@@@T         AXR$ .   @#@@@T      JA
)@@G@@   DCLRG .  @#@@@T         UNLIST . @#@@@T@ADD PLTVDS .     @]@@@T@ADD EJB
)@@G@@XCDS  @#@@@T         LIST     @#@@@T         PLWORD . @#@@@T         PLAJC
)@@G@@R .   @#@@@U         PLAC .   @#@@@TXBXB     CSECT 3 .@E@@@TMAXNUM   SFWJD
)@@G@@     0 .               MAX FIXED BIN NUMBER     @E@@@T         +03777777JE
)@@G@@77777 .          MAX FIXED BIN NUMBER     @^@@@TKK9999*   +0200077777777JF
)@@G@@@E@@@T          +0777777777777 .           FLOATING .999999999999 @^@@@UJG
)@@G@@KK5000*  +0200040000000 @^@@@U         +0000000000000 @G@@@TEROVCH   EQUJH
)@@G@@     88 .              OVERFLOW ON FIXED DEC ASSIGNMENT     @G@@@TEXSIZEJI
)@@G@@   EQU     89 .              OVERFLOW ON FIXED BIN ASSIGNMENT     @F@@@TJJ
)@@G@@RTOVER   EQU     90 .              NUMBER TOO LARGE ON CONVERSION @F@@@TJK
)@@G@@ERRTOV   EQU   92 .                FIXED BINARY OVERFLOW, 1 USED  @E@@@TJL
)@@G@@ERCOMP   EQU     88 .              ERROR IN COMPLEX NUMBERS @D@@@TEXCPDVJM
)@@G@@   EQU     100 .             DIVIDE BY ZERO     @E@@@TFCM      EQU     +JN
)@@G@@(IN 63,0,1,0) .  BITS TURNED ON IN COMMON @D@@@T         USING   AREC,X1JO
)@@G@@0 .        SET UP THE USING   @[@@@T.     @E@@@T.        THIS PROC SHOULJP
)@@G@@D TEST TO SEE IF FIXED DEC OVERFLOWS@[@@@T.     @^@@@TTEST*    PROC    1JQ
)@@G@@,5 .  @E@@@T         DLM     A5,TEST(1,1) .    GET NUMBER FROM REGISTER JR
)@@G@@@G@@@T         DFAN    A5,TEST(1,2),TEST(1,3) . SUB OFF PROPER POWER OF JS
)@@G@@TEN   @G@@@T         JN      A5,$+3 .          NUMBER SMALL ENOUGH      JT
)@@G@@       **** @D@@@T         LINK    RCFXER .          GO PRINT OUT ERROR JU
)@@G@@@E@@@T         STORED  A5,TEST(1,1) .    RESET TO DEFAULT VALUE   @#@@@TJV
)@@G@@         END .    @[@@@T.     @F@@@T.        TSTBIN CKECK TO SEE IF THE JW
)@@G@@NUMBER IN A1-A2 IS TOO BIG    @[@@@T.     @^@U@TTSTBIN*  PROC    0,8 .  JX
)@@G@@@^@@@UTSTBIN*  PROC    0,4 .  @D@@@T         LOADD   A3,A1 .           GJY
)@@G@@ET COPY OF NUMBER @C@@@T         DSA     A3,0,X2 .         SHIFT BY PRE JZ
)@@G@@@G@U@T         DJZ     A3,$+6 .          IS IT ZERO?                    KA
)@@G@@ **** @G@@@U         DJZ     A3,$+2 .          IS IT ZERO?              KB
)@@G@@       **** @C@U@T         EXERR   EXSIZE            LEVEL,1 .    @C@U@TKC
)@@G@@         LOAD    A3,MAXNUM .       GET DEFAULT  @ @U@T         LOAD    AKD
)@@G@@2,0,I .     @C@U@T         SLBD    A2,1,X2 .         GET 2**PRE-1 @C@@@UKE
)@@G@@         LINK    RCFBER .          GO CALL ERROR@#@@@T         END .    KF
)@@G@@@A@@@T/.       ARITHEMETIC SUBRUOTINES    @[@@@T.     @F@@@T.       FOR KG
)@@G@@RTFXFL:           CONVERT FROM FLOAT TO FIXED BIN     @D@@@T.           KH
)@@G@@              GENERATED IS:  DFU A1,NUMBER@D@@@T.                       KI
)@@G@@                 LMJ RTFXFL . @F@@@T.                                   KJ
)@@G@@     SA  X0,WHEREVER IT GOES  @G@@@T.                              AND TKK
)@@G@@HEN THE 'SA' IS REPLACED WITH THE   @E@@@T.                             KL
)@@G@@       DESIRED BINARY SCALE   @[@@@T.     @C@@@TRTFXFL*  LLOC .  CONVERTKM
)@@G@@ FROM FLOAT TO FIXED    @[@@@T.     @G@@@T.                             KN
)@@G@@THE NUMDER TO BE FIXED HAS BEEN DFU'ED    @D@@@T.                       KO
)@@G@@      AND NOW SITS IN A1:A2-A3@G@@@T.                             THE SCKP
)@@G@@ALE HAS BEEN WRITTEN INTO THE Q1    @G@@@T     .                        KQ
)@@G@@OF THE WORD FOLLOWING THE LMJ TO HERE     @[@@@T.     @C@@@T         LOAKR
)@@G@@D    A4,W1,X11 .       GET THE SCALE@F@@@T         SSA     A4,27 .      KS
)@@G@@     MAKE IT A SIGN FILLED WORD     @G@@@T         SUB     A1,02074,I . KT
)@@G@@     CORRECT FOR THE BAIS OF THE EXPONENT @F@@@T         LOADN   A1,A1 .KU
)@@G@@           GET THE PROPER SHIFT COUNT     @E@@@T         SUB     A1,A4 .KV
)@@G@@           ADD IN THE BINARY SCALE  @F@@@T         IF      A1,GE,60,I THKW
)@@G@@EN,UNDERFL . DON'T SHIFT TOO FAR    @G@@@T         IF      A1,LT,25,I THKX
)@@G@@EN,OVERFL . MAKE SURE TO SHIFT FAR ENOUGH @D@@@T         DSA     A2,0,A1KY
)@@G@@ .         SHIFT THE NUMBER   @F@@@T         STORE   A3,*0,X11 .       PKZ
)@@G@@UT THE NUMBER WHERE IT BELONGS@F@@@T         LJMP 1 .                   LA
)@@G@@GO BACK TO THE GENERATED CODE @B@@@TUNDERFL  LABEL . UNDERFLOW IS REALLYLB
)@@G@@ OK   @E@@@T         SZ      *0,X11 .          SET THE VALUE TO ZERO    LC
)@@G@@@C@@@T         LJMP 1 .                   GO BACK     @A@@@TOVERFL   LLOLD
)@@G@@C . OVERFLOW IS BAD     @F@@@T         IF    A4,LT,0,I THEN,UNDERFL .   LE
)@@G@@-> NEG SCALE, USE 0     @D@@@T         LOCAL .                   SAVE RELF
)@@G@@TURN ADDRESS@B@@@U         STORE   A4,DEXWK1 .       SAVE A4@G@@@U      LG
)@@G@@   ONUNIT  ERRTOV,ACCDFO,1  JMP1,OVERF1,JMP1  DEXWK1,1  DEXMAX,0  @F@@@ULH
)@@G@@OVERF1   LABEL .                   RETURN FROM MSG. DO DEFAULT    @B@@@TLI
)@@G@@         LOAD   A3,1,I .          SET 1   @B@U@T         LOAD  A1,A4 .  LJ
)@@G@@          SET XREG@B@@@U         LOAD  A1,DEXWK1 .        SET XREG@^@@@TLK
)@@G@@         SLB   A3,0,A1 .@^@@@U         UNSTK   X11 .  @ @@@T         STOLL
)@@G@@RE A3,*0,X11 .    @^@@@U         LJMP    1 .    @ @U@T         EXERR ERRLM
)@@G@@TOV LEVEL,1 @#@U@T         JMP 1 .  @G@@@T/.       FOR RTOVFL:          LN
)@@G@@  ***PUT OUT AN ERROR MSG ON OVERFLOW     @D@@@T.                GENERATLO
)@@G@@ED IS:     LSC A2,NUMBER .    @E@@@T.                                  TLP
)@@G@@NG A3,(35-PRE+SCA) .    @C@@@T.                                  LINK RTLQ
)@@G@@OVFL .@C@@@T.                                  LSSC REG,SCA @[@@@T.     LR
)@@G@@@[@@@T.     @D@@@T.        IF THE DESIRED SHIFT WOULD HAVE OVERFLOWED,  LS
)@@G@@@D@@@T.        THE CODE SENDS YOU HERE TO PUT OUT AN ERROR  @D@@@T.     LT
)@@G@@   MESSAGE,AND STORE THE DEFAULT INTO THE NUMBER@[@@@T.     @[@@@T.     LU
)@@G@@@#@@@TRTOVFL*  LOCAL .  @G@@@U         ONUNIT  RTOVER,ACCDOV,1  JMP1,RTOLV
)@@G@@VF1,JMP1  DEXWK1,0  DEXMAX,0  @F@@@URTOVF1   LABEL .                   RLW
)@@G@@ETURN FROM MSG . DO DEFAULT   @^@@@U         UNSTK   X11 .  @H@@@T      LX
)@@G@@   SUB     X11,3,I .         MOVE BACK TO GET THE ADDRESS OF THE NUM    LY
)@@G@@@E@@@T         LOAD    A3,MAXNUM .       GET THE DEFAULT VALUE    @G@@@TLZ
)@@G@@         STORE   A3,*0,X11 .       PUT THE DEFAULT VALUE INTO THE NUMBERMA
)@@G@@@A@U@TRTEROR   LABEL . COMMON ERROR MESS  @C@U@T         EXERR   RTOVER MB
)@@G@@ LEVEL,1 . OVERFLOW     @F@U@T         JMP 1 .                   GO BACKMC
)@@G@@ TO THE USER'S CODE     @^@@@U         LJMP    4 .    @G@@@T/.       FORMD
)@@G@@ RTOVCH:               CHECK FOR FIXED DECIMAL OVERFLOW ****@C@@@T.     ME
)@@G@@           GENERATED IS:     LMJ RTOVCH . @D@@@T.                       MF
)@@G@@           SA  X0,(ADDRESS)   @[@@@T.     @F@@@T.        AND THEN THE 'SMG
)@@G@@A' IS REPLACED WITH TWICE THE DECIMAL     @C@@@T.        PRECISION OF THMH
)@@G@@E VARIABLE IN QUESTION  @[@@@T.     @[@@@T.     @G@@@TRTOVCH*  LLOC .   MI
)@@G@@                 ***DECIMAL NUMBER PRECISION CHECKER**@[@@@T.     @[@@@TMJ
)@@G@@.     @C@@@T         DLM   A3,*0,X11 .   MAGNITUDE OF RESULT@D@@@T      MK
)@@G@@   LOAD  A2,W1Q1,X11 . PRECISION * 2 OF RESULT  @I@@@T         DFAN  A3,ML
)@@G@@KKD1-(IN 63,0,1,0),A2 .                                      S    @F@@@TMM
)@@G@@         JN    A3,LJMP1 .    -> RETURN IF NEGATIVE, WITHIN BOUNDS @ @@@UMN
)@@G@@         STORE   A2,DEXWK1 .  @C@U@T         LOAD    A3,KKD1,A2 .      GMO
)@@G@@ET DEFAULT  @G@U@T         DFAN    A3,KKD1-(IN 63,0,1,0) . SET DEFAULT TMP
)@@G@@O PROPER VALUE    @F@U@T         DS      A3,*0,X11 .       STORE AWAY THMQ
)@@G@@E DEFAULT VALUE   @D@@@T         SRB     A2,1 .            SHIFT FOR ERRMR
)@@G@@OR MSG@F@@@T         LOAD    X5,A2 .           GET INTO CONVIENT REGISTEMS
)@@G@@R     @D@@@T         LOCAL .                   SAVE RETURN ADDRESS@F@U@TMT
)@@G@@         EXERR EROVCH LEVEL,1 . OVERFLOW ON FIXED DECIMAL ASSIGN  @G@@@UMU
)@@G@@         ONUNIT  EROVCH,ACCDSI,1  JMP1,RTOVC1,JMP1  DEXWK1,1  DEXMAX,0  MV
)@@G@@@F@@@U.        OVERFLOW ON FIXED DEC ASSIGN.  10**'NUMX5'-1/SCALE USED  MW
)@@G@@@F@@@URTOVC1   LABEL .                   RETURN FROM MSG. DO DEFAULT    MX
)@@G@@@ @@@U         LOAD    A2,DEXWK1 .  @C@@@U         LOAD    A3,KKD1,A2 . MY
)@@G@@     GET DEFAULT  @G@@@U         DFAN    A3,KKD1-(IN 63,0,1,0) . SET DEFMZ
)@@G@@AULT TO PROPER VALUE    @F@@@U         DS      A3,*0,X11 .       STORE ANA
)@@G@@WAY THE DEFAULT VALUE   @^@@@U         JMP     1 .    @D@@@U/.       FORNB
)@@G@@ RTFOFB:                FIXED BIN OVERFLOW@[@@@U.     @G@@@U.        CONNC
)@@G@@TROL GOES HERE IF RESULT OF A FIXED BINARY OPERATION CAUSES @#@@@U.     ND
)@@G@@   OVERFLOW.@[@@@U.     @[@@@U.     @#@@@URTFOFB*  LOCAL .  @F@@@U      NE
)@@G@@   LOAD    X5,35,I .         SAY MAX PRECISION EXCEEDED     @G@@@U      NF
)@@G@@   ONUNIT  EXSIZE,ACCDFO,1  JMP1,I,JMP1  DEXWK1,4  DEXMAX,0 .     @E@@@UNG
)@@G@@         LOAD    A3,MAXNUM .       DEFAULT WORD OF ALL ONES @#@@@U      NH
)@@G@@   JMP .    @G@@@U/.       FOR RTZDIV:                CHECK FOR ZDIV ON NI
)@@G@@F.B. DIVISION     @C@@@U.        GENERATED IS:             LMJ RTZDIV   NJ
)@@G@@@D@@@U                                   00  A3,(ADDRESS)   @C@@@U.     NK
)@@G@@                             DI  ARGL,ARGR@[@@@U.     @G@@@U.        CONNL
)@@G@@TROL COMES HERE TO CHECK IF DIVISOR=0 ON FIXED BIN DIVISION @[@@@U.     NM
)@@G@@@#@@@URTZDIV*  LLOC .   @C@@@U         LOADM   A3,*0,X11 .       GET DIVNN
)@@G@@ISOR  @D@@@U         IF      A3,NE,0,I  THEN,LJMP1 . DIVISOR O.K. @D@@@UNO
)@@G@@         LOCAL .                   SAVE RETURN ADDRESS@G@@@U         ONUNP
)@@G@@NIT  EXCPDV,ACCDZD,1  RTZDV1,I,RTZDV1  DEXWK1,4  DEXMAX,0   @D@@@U      NQ
)@@G@@   UNSTK   X11 .             GET RETURN ADDRESS @D@V@U         LOAD    ANR
)@@G@@3,KKD1 .         GET DEFAULT ONE    @D@W@V         LOAD    A3,KKF1 .    NS
)@@G@@     GET DEFAULT ONE    @C@@@X         LOAD    A2,W1Q1,X11 .     GET SCANT
)@@G@@LE    @D@@@W         LOAD    A3,1,I .         GET DEFAULT ONE     @G@@@XNU
)@@G@@         SLB     A3,0,A2 .         SET SCALE 1 AS DEFAULT FOR DIVISOR   NV
)@@G@@@C@@@U         STORE   A3,*0,X11 .       STORE DEFAULT@D@@@U         LJMNW
)@@G@@P    1 .               RETURN TO DI INSTR @#@@@URTZDV1   LABEL .  @D@@@UNX
)@@G@@         JMP     2 .               SKIP DIVIDE INSTR  @E@U@T .          NY
)@@G@@                       10**'NUMX5'-1/SCALE USED @F@U@T         JMP   1 .NZ
)@@G@@           -> RETURN SKIPPING REFERENCE WORD    @G@@@T/.       FOR RTSZCOA
)@@G@@K:               OVERFLOW ON FIXED BIN ASSIGNMENT**** @C@@@T.           OB
)@@G@@     GENERATED IS:     LA  A3,NUM   @C@@@T.                             OC
)@@G@@     SSA A3,PRE   @C@@@T.                                  TZ  A3 .     OD
)@@G@@@C@@@T.                                  LMJ RTSZCK . @[@@@T.     @F@@@TOE
)@@G@@RTSZCK*  LOCAL .                   OVERFLOW ON FIXED BIN ASSIGN   @ @@@UOF
)@@G@@         SUB     X11,3,I .    @D@@@U         LOAD    X5,W1XH2,X11 .    GOG
)@@G@@ET NUMBER FOR EXER@G@@@U         ONUNIT  EXSIZE,ACCDSI,1  JMP1,RTSZC1,JMOH
)@@G@@P1  DEXWK1,0  DEXMAX,0  @F@@@URTSZC1   LABEL .                   RETURN OI
)@@G@@FROM MSG. DO DEFAULT    @^@@@U         UNSTK   X11 .  @C@@@T         SUBOJ
)@@G@@     X11,3,I .         FIND PRE     @C@@@T         LOADN   A2,W1XH2,X11 OK
)@@G@@.    LOAD THE PRE @F@@@T         ADD     A2,35,I .         GET 35-PRE FOOL
)@@G@@R SHIFT COUNT     @C@@@T         LOAD    A3,MAXNUM .       GET ALL 1'S  OM
)@@G@@@F@@@T         SRB     A3,0,A2 .         SET DEFAULT VALUE FOR RETURN   ON
)@@G@@@F@@@T         SUB     X11,1,I .         POINT TO WORD WITH ADDRESS     OO
)@@G@@@E@@@T         STORE   A3,*0,X11 .       SET THE DEFAULT VALUE    @D@@@UOP
)@@G@@         LJMP    4 .               RETURN TO USER     @G@U@T         EXEOQ
)@@G@@RR   EXSIZE  LEVEL,1 . SIZE OVERFLOW ON FIXED BIN ASSIGN    @[@U@T.     OR
)@@G@@@F@U@T.                                  2**PRE -1 USED FOR DEFAULT     OS
)@@G@@@[@U@T.     @D@U@T         JMP     1 .               RETURN TO USER     OT
)@@G@@@C@@@T/.       THIS CODE SHOULD DO COMPLEX / AND *    @[@@@T.     @[@@@TOU
)@@G@@.     @E@@@TRCFXER   LOCAL .                   COME HERE TO FIX AN ERROROV
)@@G@@@C@@@T         STACK    X5 .             SAVE POINTERS@B@@@T         LOAOW
)@@G@@D    X5,DEXWK3+FQ4 .   GET PRE@D@U@T         EXERR   ERCOMP LEVEL,1 .  SOX
)@@G@@AY NUMBER TOO BIG @E@@@U         ONUNIT  ERCOMP,ACCDSI,1  R,I,R  DEXWK1,OY
)@@G@@3  DEXMAX,0 @D@@@T         UNSTK   X5 .              RECLAIM POINTER    OZ
)@@G@@@D@@@T         LOADD   A5,KKPW10-2,X2 .  GET DEFAULT NUMBER @C@@@T      PA
)@@G@@   DFAN    A5,KKD1-FCM .     MAKE 10**P-1 @B@@@T         JMP .          PB
)@@G@@           RETURN @[@@@U.     @[@@@U.     @[@@@U.     @D@@@URCFBER   LOCPC
)@@G@@AL .                   FIX FIXED BIN ERROR@D@@@U         STACK   X5 .   PD
)@@G@@           SAVE POINTER TO VAR@B@@@U         LOAD    X5,X2 .           GPE
)@@G@@ET PRE@E@@@U         ONUNIT  EXSIZE,ACCDSI,1  R,I,R  DEXWK1,3  DEXMAX,0 PF
)@@G@@@D@@@U         UNSTK   X5 .              RECLAIM POINTER    @D@@@U      PG
)@@G@@   LOAD    A3,MAXNUM .       GET MAXIMUM NUMBER @C@@@U         LOAD    APH
)@@G@@2,0,I .          GET  ZERO    @C@@@U         SLBD    A2,1,X2 .         GPI
)@@G@@ET 2**PRE-1 @^@@@U         JMP .   RETURN @[@@@T.     @[@@@T.     @B@@@TPJ
)@@G@@.        RCFLTM  COMPLEX FLOATING MULTIPLY@[@@@T.     @[@@@T.     @D@@@TPK
)@@G@@RCFLTM*  LOCAL .                   COMPLEX FLOAT MULT @D@@@T         STOPL
)@@G@@RE   X1,ARSAX1 .       SAVE USED REGS     @D@@@T         LOAD    X11,A1 PM
)@@G@@.          GET POINTER TO A+BI@D@@@T         LOAD    X1,A2 .           GPN
)@@G@@ET POINTER TO C+DI@B@U@T         LOADD   A3,W1,X11 .       GET A  @B@@@UPO
)@@G@@         LOADD   A1,W1,X11 .       GET A  @B@@@T         DFM     A1,0,X1PP
)@@G@@ .         A*C    @A@@@T         LOADD   A3,W1+2,X11 .     B@B@@@T      PQ
)@@G@@   DFM     A3,2,X1 .         B*D    @D@@@T         DFAN    A1,A3 .      PR
)@@G@@     AC-BD = REAL PART  @D@@@T         STORED  A1,DEXWK1 .       SAVE REPS
)@@G@@AL PART     @A@@@T         LOADD   A1,W1,X11 .       A@B@@@T         DFMPT
)@@G@@     A1,2,X1 .         A*D    @A@@@T         LOADD   A3,W1+2,X11 .     BPU
)@@G@@@B@@@T         DFM     A3,0,X1 .         B*C    @D@@@T         DFA     APV
)@@G@@1,A3 .           AD+BC = IMAG PART  @G@@@T         LOADD   A3,DEXWK1 .  PW
)@@G@@     RETURN REAL IN A3-A4,IMAG IN A1-A2   @C@@@T         LOAD    X1,ARSAPX
)@@G@@X1 .       RESET REG    @A@@@T         JMP .   RETURN TO USER CODE@[@@@TPY
)@@G@@.     @[@@@T.     @C@@@T.        RCFXDM  FIXED DECIMAL COMPLEX MULT     PZ
)@@G@@@[@@@T.     @[@@@T.     @C@@@TRCFXDM*  LOCAL . FIXED DECIMAL COMPLEX MULQA
)@@G@@T     @E@@@T         STORED  A5,ARSVA5 .       SAVE REGS TO BE USED     QB
)@@G@@@ @@@T         STORE   X1,ARSAX1 .  @ @@@T         STORE   X2,ARSAX2 .  QC
)@@G@@@F@@@T         STORE   A3,DEXWK3 .       SAVE SCA AND PRE FOR ERROR MSGSQD
)@@G@@@B@@@T         LOAD    X2,DEXWK3+FQ4 .   GET PRE@D@@@T         ADD     XQE
)@@G@@2,X2 .           GET 2*PRE FOR TABLE@C@@@T         LOAD    X5,A1 .      QF
)@@G@@     POINT TO A+BI@C@@@T         LOAD    X1,A2 .           POINT TO C+DIQG
)@@G@@@A@@@T         LOADD   A1,W1,X5 .        A@B@@@T         DFM     A1,0,X1QH
)@@G@@ .         A*C    @D@@@T         TEST    A1,KKPW10-FCM+34 . SEE IF > 10*QI
)@@G@@*18   @A@@@T         LOADD   A3,W1+2,X5 .      B@B@@@T         DFM     AQJ
)@@G@@3,2,X1 .         B*D    @D@@@T         TEST    A3,KKPW10-FCM+34 . SEE IFQK
)@@G@@ > 10**18   @D@@@T         DFAN    A1,A3 .           AC-BD = REAL PART  QL
)@@G@@@F@@@T         TEST    A1,KKPW10-FCM-2,X2 . SEE IF GREATER THAN PRE     QM
)@@G@@@D@@@T         STORED  A1,DEXWK1 .       SAVE REAL PART     @A@@@T      QN
)@@G@@   LOADD   A1,W1,X5 .        A@B@@@T         DFM     A1,2,X1 .         AQO
)@@G@@*D    @D@@@T         TEST    A1,KKPW10-FCM+34 . SEE IF > 10**18   @A@@@TQP
)@@G@@         LOADD   A3,W1+2,X5 .      B@B@@@T         DFM     A3,0,X1 .    QQ
)@@G@@     BC     @D@@@T         TEST    A3,KKPW10-FCM+34 . SEE IF > 10**18   QR
)@@G@@@D@@@T         DFA     A1,A3 .           AD+BC = IMAG PART  @C@U@T      QS
)@@G@@   TEST    A1,KKPW10-FCM-2 . SEE IF > PRE @D@@@U         TEST    A1,KKPWQT
)@@G@@10-FCM-2,X2 . SEE IF > PRE    @E@@@T         LOADD   A3,DEXWK1 .       GQU
)@@G@@ET REAL PART INTO A3    @D@@@T         LOADD   A5,ARSVA5 .       RESET UQV
)@@G@@SED REGS    @ @@@T         LOAD    X1,ARSAX1 .  @ @@@T         LOAD    XQW
)@@G@@2,ARSAX2 .  @G@@@T         JMP .                     RETURN REAL IN A3-AQX
)@@G@@4,IMAG IN A1-A2   @[@@@T.     @[@@@T.     @B@@@T.        RCFXBM  COMPLEXQY
)@@G@@ FIXED BINARY MULT@[@@@T.     @[@@@T.     @#@@@TRCFXBM*  LOCAL .  @D@@@TQZ
)@@G@@         STORE   X1,ARSAX1 .       SAVE USED REGS     @ @@@T         STORA
)@@G@@RE   X2,ARSAX2 .  @C@@@T         LOAD    X2,35,I .         GET MAX PRE  RB
)@@G@@@C@@@T         SUB     X2,A3 .           GET 35-PRE   @C@@@T         LOARC
)@@G@@D    X5,A1 .           POINT TO A+BI@C@@@T         LOAD    X1,A2 .      RD
)@@G@@     POINT TO C+DI@A@@@T         LOAD    A1,W1,X5 .        A@B@@@T      RE
)@@G@@   MI      A1,0,X1 .         A*C    @A@@@T         LOAD    A3,W1+1,X5 . RF
)@@G@@     B@B@@@T         MI      A3,1,X1 .         B*D    @D@@@T         DANRG
)@@G@@     A1,A3 .           AC-BD = REAL PART  @C@@@T         TSTBIN  .      RH
)@@G@@           SEE IF > PRE @D@@@T         STORE   A2,DEXWK1 .       SAVE RERI
)@@G@@AL PART     @A@@@T         LOAD    A1,W1,X5 .        A@B@@@T         MI RJ
)@@G@@     A1,1,X1 .         AD     @A@@@T         LOAD    A3,W1+1,X5 .      BRK
)@@G@@@B@@@T         MI      A3,0,X1 .         B*C    @B@@@T         DA      ARL
)@@G@@1,A3 .           AD+BC  @C@@@T         TSTBIN  .                 SEE IN RM
)@@G@@> PRE @D@@@T         STORE   A2,A1 .           RETURN IMAG IN A1  @D@@@TRN
)@@G@@         LOAD    A3,DEXWK1 .       RETURN REAL IN A3  @D@@@T         LOARO
)@@G@@D    X1,ARSAX1 .       RESET USED REGS    @ @@@T         LOAD    X2,ARSARP
)@@G@@X2 .  @^@@@T         JMP .   RETURN @[@@@T.     @[@@@T.     @B@@@T.     RQ
)@@G@@   RCFLTD  COMPLEX FLOAT DIVIDE     @[@@@T.     @[@@@T.     @#@@@TRCFLTDRR
)@@G@@*  LOCAL .  @E@@@T         STORED  A5,ARSVA5 .       SAVE REGS TO BE USERS
)@@G@@D     @ @@@T         STORE   X1,ARSAX1 .  @C@@@T         LOAD    X11,A1 RT
)@@G@@.          POINT TO A+BI@C@@@T         LOAD    X1,A2 .           POINT TRU
)@@G@@O C+DI@A@@@T         LOADD   A5,W1,X1 .        C@B@@@T         DFM     ARV
)@@G@@5,A5 .           C**2   @A@@@T         LOADD   A3,W1+2,X1 .      D@B@@@TRW
)@@G@@         DFM     A3,A3 .           D**2   @C@@@T         DFA     A5,A3 .RX
)@@G@@           C**2+D**2    @E@@@T         DJZ     A5,CDZERO .       CAN'T DRY
)@@G@@IVIDE BY ZERO     @A@@@T         LOADD   A1,W1,X11 .       A@B@@@T      RZ
)@@G@@   DFM     A1,0,X1 .         A*C    @A@@@T         LOADD   A3,W1+2,X11 .SA
)@@G@@     B@B@@@T         DFM     A3,2,X1 .         B*D    @B@@@T         DFASB
)@@G@@     A1,A3 .           AC+BD  @F@@@T         DFD     A1,A5 .           (SC
)@@G@@AC+BD)/(C**2+D**2) = REAL PART@D@@@T         STORED  A1,DEXWK1 .       SSD
)@@G@@AVE REAL PART     @A@@@T         LOADD   A1,W1+2,X11 .     B@B@@@T      SE
)@@G@@   DFM     A1,0,X1 .         B*C    @A@@@T         LOADD   A3,W1,X11 .  SF
)@@G@@     A@B@@@T         DFM     A3,2,X1 .         A*D    @B@@@T         DFASG
)@@G@@N    A1,A3 .           BC-AD  @F@@@T         DFD     A1,A5 .           (SH
)@@G@@BC-AD)/(C**2+D**2) = IMAG PART@C@@@T         LOADD   A3,DEXWK1 .       GSI
)@@G@@ET REAL PART@B@@@TCDZRET   LABEL . RETURN FROM ERROR MSG    @D@@@T      SJ
)@@G@@   LOADD   A5,ARSVA5 .       RESET USED REGS    @ @@@T         LOAD    XSK
)@@G@@1,ARSAX1 .  @ @@@T         LOAD    X2,ARSAX2 .  @^@@@T         JMP .   RSL
)@@G@@ETURN @B@@@TCDZERO   LABEL . CAN'T DIVIDE BY ZERO     @F@U@T         EXESM
)@@G@@RR   EXCPDV LEVEL,1 .  DIVIDE BY 0 ATTEMPTED,1 USED   @E@@@U         ONUSN
)@@G@@NIT  EXCPDV,ACCDZD,1  R,I,R  DEXWK1,3  DEXMAX,0 @E@@@T         SRBD    ASO
)@@G@@1,72 .           GET DOUBLE WORD ZERO     @D@@@T         LOADD   A3,KKD1SP
)@@G@@ .         GET REPLACEMENT ONE@B@@@T         GOTO    CDZRET .          RSQ
)@@G@@ETURN @[@@@T.     @[@@@T.     @C@@@T.        RCFXDD  FIXED DECIMAL COMPLSR
)@@G@@EX DIVIDE   @[@@@T.     @[@@@T.     @#@@@TRCFXDD*  LOCAL .  @D@@@T      SS
)@@G@@   STORED  A5,ARSVA5 .       SAVE USED REGS     @ @@@T         STORED  AST
)@@G@@7,ARSVA7 .  @ @@@T         STORE   X1,ARSAX1 .  @ @@@T         STORE   XSU
)@@G@@2,ARSAX2 .  @E@@@T         STORE   A3,DEXWK3 .       SET PRE FOR ERROR MSV
)@@G@@SG    @B@@@T         LOAD    X2,DEXWK3+FQ4 .   GET PRE@C@@@T         ADDSW
)@@G@@     X2,X2 .           GET 2 * PRE  @C@@@T         LOAD    X5,A1 .      SX
)@@G@@     POINT TO A+BI@C@@@T         LOAD    X1,A2 .           POINT TO C+DISY
)@@G@@@A@@@T         LOADD   A7,W1,X1 .        C@B@@@T         DFM     A7,A7 .SZ
)@@G@@           C**2   @D@@@T         TEST    A7,KKPW10-FCM+34 . SEE IF > 10*TA
)@@G@@*18   @A@@@T         LOADD   A3,W1+2,X1 .      D@B@@@T         DFM     ATB
)@@G@@3,A3 .           D**2   @A@@@T         TEST    A3,KKPW10-FCM+34 . @C@@@TTC
)@@G@@         DFA     A7,A3 .           C**2+D**2    @C@@@T         TEST    ATD
)@@G@@7,KKPW10-FCM+34 . TOO BIG?    @E@@@T         DJZ     A7,RCFZER .       CTE
)@@G@@AN'T DIVIDE BY ZERO     @A@@@T         LOADD   A1,W1,X5 .        A@B@@@TTF
)@@G@@         DFM     A1,0,X1 .         A*C    @A@@@T         TEST    A1,KKPWTG
)@@G@@10-FCM+34 . @A@@@T         LOADD   A3,W1+2,X5 .      B@B@@@T         DFMTH
)@@G@@     A3,2,X1 .         B*D    @A@@@T         TEST    A3,KKPW10-FCM+34 . TI
)@@G@@@B@@@T         DFA     A1,A3 .           AC+BD  @C@@@T         TEST    ATJ
)@@G@@1,KKPW10-FCM+34 . TOO BIG?    @F@@@T         DFD     A1,A7 .           (TK
)@@G@@AC+BD)/(C**2+D**2) = REAL PART@D@@@T         TEST    A1,KKPW10-FCM-2,X2 TL
)@@G@@. SEE IF > 10**PRE@D@@@T         STORED  A1,DEXWK1 .       SAVE REAL PARTM
)@@G@@T     @A@@@T         LOADD   A1,W1+2,X5 .      B@B@@@T         DFM     ATN
)@@G@@1,0,X1 .         B*C    @A@@@T         TEST    A1,KKPW10-FCM+34 . @A@@@TTO
)@@G@@         LOADD   A3,W1,X5 .        A@B@@@T         DFM     A3,2,X1 .    TP
)@@G@@     A*D    @A@@@T         TEST    A3,KKPW10-FCM+34 . @B@@@T         DFATQ
)@@G@@N    A1,A3 .           BC-AD  @A@@@T         TEST    A1,KKPW10-FCM+34 . TR
)@@G@@@F@@@T         DFD     A1,A7 .           (BC-AD)/(C**2+D**2) = IMAG PARTTS
)@@G@@@D@@@T         TEST    A1,KKPW10-FCM-2,X2 . SEE IF TOO BIG? @C@@@T      TT
)@@G@@   LOADD   A3,DEXWK1 .       GET REAL PART@B@@@TRFCRET   LABEL . RETURN TU
)@@G@@FROM ERROR TO HERE@D@@@T         LOADD   A5,ARSVA5 .       RESET USED RETV
)@@G@@GS    @ @@@T         LOADD   A7,ARSVA7 .  @ @@@T         LOAD    X1,ARSATW
)@@G@@X1 .  @ @@@T         LOAD    X2,ARSAX2 .  @D@@@T         JMP .          TX
)@@G@@           RETURN TO USED CODE@F@@@TRCFZER   LABEL .                   HTY
)@@G@@ERE TO REPAIR DIVIDE BY ZERO  @E@U@T         EXERR   EXCPDV LEVEL,1 .  ATZ
)@@G@@TTEMPT TO DIVIDE BY ZERO@E@@@U         ONUNIT  EXCPDV,ACCDZD,1  R,I,R  DUA
)@@G@@EXWK1,3  DEXMAX,0 @D@@@T         SRBD    A1,72 .           GET A TWO WORUB
)@@G@@D ZERO@C@@@T         LOAD    A3,DEXWK3+FXH2 .  GET SCALE    @D@@@T      UC
)@@G@@   SSA     A3,9 .            SIGN EXTEND IT     @D@@@T         IF A3,LT,UD
)@@G@@0,I THEN,RCERFX . NEG SCALE FAC?    @C@@@T         SLB     A3,1 .       UE
)@@G@@     GET 2*PRE    @D@@@T         LOADD   A3,KKD1,A3 .      GET SCALED ONUF
)@@G@@E     @ @@@T         GOTO    RFCRET .     @B@@@TRCERFX   LABEL . NEG SCAUG
)@@G@@LE FACTOR HERE    @C@@@T         LOADD   A3,A1 .           USE A ZERO   UH
)@@G@@@ @@@T         GOTO    RFCRET .     @[@@@T.     @[@@@T.     @C@@@T.     UI
)@@G@@   RCFXBD  COMPLEX FIXED BINARY DIVISION  @[@@@T.     @[@@@T.     @#@@@TUJ
)@@G@@RCFXBD*  LOCAL .  @D@@@T         STORE   X1,ARSAX1 .       SAVE USED REGUK
)@@G@@S     @ @@@T         STORE   X2,ARSAX2 .  @ @@@T         STORED  A5,ARSVUL
)@@G@@A5 .  @D@@@T         STORE   A3,DEXWK3 .       SAVE SCALE AND PRE @C@@@TUM
)@@G@@         LOAD    X2,DEXWK3+FQ4 .   GET SCALE    @C@@@T         LOAD    XUN
)@@G@@5,A1 .           POINT TO A+BI@C@@@T         LOAD    X1,A2 .           PUO
)@@G@@OINT TO C+DI@A@@@T         LOAD    A1,W1,X1 .        C@B@@@T         MI UP
)@@G@@     A1,A1 .           C**2   @A@@@T         LOAD    A3,1,X1 .         DUQ
)@@G@@@B@@@T         MI      A3,A3 .           D**2   @C@@@T         DA      AUR
)@@G@@1,A3 .           C**2+D**2    @C@@@T         LOADD   A3,A1 .           CUS
)@@G@@HECK SIZE   @F@@@T         SLBD    A3,1 .            SEE IF SIGN BIT IS UT
)@@G@@SIGN BIT    @B@@@T         IF A3,EQ,0,I THEN,RCFXB1 . IS IT?@D@U@T      UU
)@@G@@   EXERR   EXSIZE LEVEL,1 .  NUMBER TOO BIG     @E@@@U         ONUNIT  EUV
)@@G@@XSIZE,ACCDSI,1  R,I,R  DEXWK1,3  DEXMAX,0 @D@@@T         LOAD    A2,0,I UW
)@@G@@.          GET AN UNSCALED ONE@D@@@T         LOAD    A3,MAXNUM .       GUX
)@@G@@ET MAX NUMBER     @C@@@T         SLBD    A2,1,X2 .         GET 2**PRE-1 UY
)@@G@@@#@@@TRCFXB1   LABEL .  @D@@@T         DJZ     A1,RCFXBZ .       DIVISIOUZ
)@@G@@N BY ZERO?  @D@@@T         STORE   A2,A6 .           SAVE DENOMENATOR   VA
)@@G@@@A@@@T         LOAD    A1,W1,X5 .        A@B@@@T         MI      A1,0,X1VB
)@@G@@ .         A*C    @A@@@T         LOAD    A3,W1+1,X5 .      B@B@@@T      VC
)@@G@@   MI      A3,1,X1 .         B*D    @B@@@T         DA      A1,A3 .      VD
)@@G@@     AC+BD  @D@@@T         DIV     A1,A6 .           (AC+BC)/(C**2+D**2)VE
)@@G@@@C@@@T         LOAD    A3,A1 .           CHECK IF OK  @B@@@T         SSAVF
)@@G@@     A3,0,X2 .OVERFLOW PRE?   @A@@@T         IF A3,EQ,0,I THEN,RCFXB2 . VG
)@@G@@@A@U@T         EXERR   EXSIZE LEVEL,1 .   @E@@@U         ONUNIT  EXSIZE,VH
)@@G@@ACCDSI,1  R,I,R  DEXWK1,3  DEXMAX,0 @D@@@T         LOAD    A2,MAXNUM .  VI
)@@G@@     GET MAX NUMMBER    @ @@@T         LOAD    A1,0,I .     @C@@@T      VJ
)@@G@@   SLBD    A1,1,X2 .         GET 2**PRE-1 @#@@@TRCFXB2   LABEL .  @D@@@TVK
)@@G@@         STORE   A1,DEXWK1 .       SAVE REAL PART     @A@U@T         LOAVL
)@@G@@D    A1,W1,X11 .       A@A@@@U         LOAD    A1,W1,X5 .        A@B@@@TVM
)@@G@@         MI      A1,1,X1 .         A*D    @A@U@T         LOAD    A3,W1+1VN
)@@G@@,X11 .     B@A@@@U         LOAD    A3,W1+1,X5 .      B@B@@@T         MI VO
)@@G@@     A3,0,X1 .         B*C .  @B@@@T         DAN     A3,A1 .           BVP
)@@G@@C-AD  @F@@@T         DIV     A3,A6 .           (BC-AD)/(C**2+D**2) = IMAVQ
)@@G@@G PART@C@@@T         LOAD    A1,A3 .           CHECK SIZE   @D@@@T      VR
)@@G@@   SSA     A3,0,X2 .         SEE IF TOO BIG     @A@@@T         IF A3,EQ,VS
)@@G@@0,I THEN,RCFXB3 . @A@U@T         EXERR   EXSIZE LEVEL,1 .   @E@@@U      VT
)@@G@@   ONUNIT  EXSIZE,ACCDSI,1  R,I,R  DEXWK1,3  DEXMAX,0 @ @@@T         LOAVU
)@@G@@D    A2,MAXNUM .  @ @@@T         LOAD    A1,0,I .     @C@@@T         SLBVV
)@@G@@D    A1,1,X2 .         GET 2**PRE-1 @#@@@TRCFXB3   LABEL .  @C@@@T      VW
)@@G@@   LOAD    A3,DEXWK1 .       GET REAL PART@#@@@TRCBZRT   LABEL .  @C@@@TVX
)@@G@@         LOADD   A5,ARSVA5 .       GET USED REGS@ @@@T         LOAD    XVY
)@@G@@1,ARSAX1 .  @ @@@T         LOAD    X2,ARSAX2 .  @#@@@T         JMP .    VZ
)@@G@@@B@@@TRCFXBZ   LABEL . ATTEMPT TO DIVIDE BY ZERO@A@U@T         EXERR EXCWA
)@@G@@PDV LEVEL,1 .     @E@@@U         ONUNIT  EXCPDV,ACCDZD,1  R,I,R  DEXWK1,WB
)@@G@@3  DEXMAX,0 @ @@@T         LOAD    A1,0,I .     @ @@@T         LOAD    AWC
)@@G@@3,1,I .     @C@@@T         LOAD    A2,DEXWK3+FXH2 .  GET SCALE    @E@@@TWD
)@@G@@         SSA     A2,9 .            GET SIGN EXTENDED SCALE  @C@@@T      WE
)@@G@@   IF A2,LT,0,I THEN,RCFZE1 . NEG SCALE?  @ @@@T         SLB     A3,0,A2WF
)@@G@@ .    @ @@@T         GOTO    RCBZRT .     @#@@@TRCFZE1   LABEL .  @C@@@TWG
)@@G@@         LOAD    A3,0,I .          GET SCALED 1 @B@@@T         GOTO    RWH
)@@G@@CBZRT .          RETURN @#@@@T         END .    ___EE IF > 10**PRE@D@@@TWI
)@@G@@KG@@@@KB_6Z4KB"FQCKB0-VAKBUXB6KG@@@@KG@[*6KG@A<VKG@>:,KB"S1"KB, 1$KG@@@@WJ
)@@G@@KB_8X(KB_],OKB72,(KBQW8BKA65W"KG@@@@KG@@@@KB_38#KB.5^^KB,"C,KBSHLQKG@@@@WK
)@@G@@KG@[*6KG@^'=KG@ZCMKB.P&3KB?W>0KG@@@@KB_7Y\KB"'H^KB6\<ZKBM=E,KA1:Y%KG@@@@WL
)@@G@@KG@@@@KB_\MWKB.I,UKB?N >KBOR)!KG@@@@KG@[*6KG@^'=KG@N%MKB;-;7KB((:OKB_/,MWM
)@@G@@KB_46.KB"&7\KB4SZ$KBE;;EKA*Z$0KG@@@@KB__[ KB_=YTKB;4MLKB&.(LKBH7[9KG@@@@WN
)@@G@@KG@[*6KG@[*6KB_0&PKB8@EZKB>$C2KB_;\RKB_0&PKB"#32KB0P*BKA_G8WKAU9*RKG@@@@WO
)@@G@@KB_/,MKB_LY]KB9R"6KBY>85KB^#GYKG@@@@KG@@@@KB_643KB"M8YKB2+-7KBZ!O$KB_'0XWP
@EOF
@COPY,IO  TEMP.1021-006-006,1021-006-006.
@FREE     TEMP.
